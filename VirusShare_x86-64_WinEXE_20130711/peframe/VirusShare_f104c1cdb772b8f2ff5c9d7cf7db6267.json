{
    "docinfo": {},
    "filename": "VirusShare_f104c1cdb772b8f2ff5c9d7cf7db6267",
    "filesize": 1455109,
    "filetype": "PE32+ executable (console) x86-64, for MS Windows",
    "hashes": {
        "md5": "f104c1cdb772b8f2ff5c9d7cf7db6267",
        "sha1": "02906e044bdf50ab783ad0638bd7fd7a1282b447",
        "sha256": "afb33f868c27a7722629436707bd7ae6fe9e11fd9c9200ba073772e638ba0266"
    },
    "peinfo": {
        "behavior": [
            "Xor",
            "network_tcp_listen",
            "network_tcp_socket",
            "bitcoin"
        ],
        "breakpoint": [
            "CreateFileA",
            "DeleteCriticalSection",
            "GetCurrentProcess",
            "GetCurrentProcessId",
            "GetModuleFileNameA",
            "GetModuleHandleA",
            "GetProcAddress",
            "GetStartupInfoA",
            "GetTickCount",
            "LoadLibraryA",
            "LoadLibraryW",
            "MessageBoxA",
            "Sleep",
            "SleepEx",
            "TerminateProcess",
            "UnhandledExceptionFilter",
            "VirtualProtect",
            "accept",
            "bind",
            "closesocket",
            "connect",
            "listen",
            "recv",
            "send",
            "socket"
        ],
        "directories": {
            "debug": {},
            "export": [],
            "import": {
                "KERNEL32.dll": [
                    {
                        "function": "CreateFileA",
                        "offset": 4770460
                    },
                    {
                        "function": "DeleteCriticalSection",
                        "offset": 4770468
                    },
                    {
                        "function": "EnterCriticalSection",
                        "offset": 4770476
                    },
                    {
                        "function": "FormatMessageA",
                        "offset": 4770484
                    },
                    {
                        "function": "FreeLibrary",
                        "offset": 4770492
                    },
                    {
                        "function": "GetConsoleScreenBufferInfo",
                        "offset": 4770500
                    },
                    {
                        "function": "GetCurrentProcess",
                        "offset": 4770508
                    },
                    {
                        "function": "GetCurrentProcessId",
                        "offset": 4770516
                    },
                    {
                        "function": "GetCurrentThreadId",
                        "offset": 4770524
                    },
                    {
                        "function": "GetLastError",
                        "offset": 4770532
                    },
                    {
                        "function": "GetModuleFileNameA",
                        "offset": 4770540
                    },
                    {
                        "function": "GetModuleHandleA",
                        "offset": 4770548
                    },
                    {
                        "function": "GetProcAddress",
                        "offset": 4770556
                    },
                    {
                        "function": "GetStartupInfoA",
                        "offset": 4770564
                    },
                    {
                        "function": "GetStdHandle",
                        "offset": 4770572
                    },
                    {
                        "function": "GetSystemTimeAsFileTime",
                        "offset": 4770580
                    },
                    {
                        "function": "GetTickCount",
                        "offset": 4770588
                    },
                    {
                        "function": "GetTimeZoneInformation",
                        "offset": 4770596
                    },
                    {
                        "function": "InitializeCriticalSection",
                        "offset": 4770604
                    },
                    {
                        "function": "LeaveCriticalSection",
                        "offset": 4770612
                    },
                    {
                        "function": "LoadLibraryA",
                        "offset": 4770620
                    },
                    {
                        "function": "LoadLibraryW",
                        "offset": 4770628
                    },
                    {
                        "function": "LocalAlloc",
                        "offset": 4770636
                    },
                    {
                        "function": "LocalFree",
                        "offset": 4770644
                    },
                    {
                        "function": "PurgeComm",
                        "offset": 4770652
                    },
                    {
                        "function": "QueryDosDeviceA",
                        "offset": 4770660
                    },
                    {
                        "function": "QueryPerformanceCounter",
                        "offset": 4770668
                    },
                    {
                        "function": "RtlAddFunctionTable",
                        "offset": 4770676
                    },
                    {
                        "function": "RtlCaptureContext",
                        "offset": 4770684
                    },
                    {
                        "function": "RtlLookupFunctionEntry",
                        "offset": 4770692
                    },
                    {
                        "function": "RtlVirtualUnwind",
                        "offset": 4770700
                    },
                    {
                        "function": "SetCommConfig",
                        "offset": 4770708
                    },
                    {
                        "function": "SetCommTimeouts",
                        "offset": 4770716
                    },
                    {
                        "function": "SetConsoleCursorPosition",
                        "offset": 4770724
                    },
                    {
                        "function": "SetUnhandledExceptionFilter",
                        "offset": 4770732
                    },
                    {
                        "function": "Sleep",
                        "offset": 4770740
                    },
                    {
                        "function": "SleepEx",
                        "offset": 4770748
                    },
                    {
                        "function": "TerminateProcess",
                        "offset": 4770756
                    },
                    {
                        "function": "TlsGetValue",
                        "offset": 4770764
                    },
                    {
                        "function": "UnhandledExceptionFilter",
                        "offset": 4770772
                    },
                    {
                        "function": "VirtualProtect",
                        "offset": 4770780
                    },
                    {
                        "function": "VirtualQuery",
                        "offset": 4770788
                    }
                ],
                "USER32.dll": [
                    {
                        "function": "MessageBoxA",
                        "offset": 4771636
                    }
                ],
                "WS2_32.dll": [
                    {
                        "function": "WSAGetLastError",
                        "offset": 4771652
                    },
                    {
                        "function": "WSAIoctl",
                        "offset": 4771660
                    },
                    {
                        "function": "__WSAFDIsSet",
                        "offset": 4771668
                    },
                    {
                        "function": "accept",
                        "offset": 4771676
                    },
                    {
                        "function": "bind",
                        "offset": 4771684
                    },
                    {
                        "function": "closesocket",
                        "offset": 4771692
                    },
                    {
                        "function": "connect",
                        "offset": 4771700
                    },
                    {
                        "function": "getsockname",
                        "offset": 4771708
                    },
                    {
                        "function": "htonl",
                        "offset": 4771716
                    },
                    {
                        "function": "htons",
                        "offset": 4771724
                    },
                    {
                        "function": "inet_addr",
                        "offset": 4771732
                    },
                    {
                        "function": "inet_ntoa",
                        "offset": 4771740
                    },
                    {
                        "function": "listen",
                        "offset": 4771748
                    },
                    {
                        "function": "recv",
                        "offset": 4771756
                    },
                    {
                        "function": "select",
                        "offset": 4771764
                    },
                    {
                        "function": "send",
                        "offset": 4771772
                    },
                    {
                        "function": "setsockopt",
                        "offset": 4771780
                    },
                    {
                        "function": "shutdown",
                        "offset": 4771788
                    },
                    {
                        "function": "socket",
                        "offset": 4771796
                    }
                ],
                "libblkmaker-0.1-0.dll": [
                    {
                        "function": "blkmk_address_to_script",
                        "offset": 4772788
                    },
                    {
                        "function": "blkmk_append_coinbase_safe",
                        "offset": 4772796
                    },
                    {
                        "function": "blkmk_get_data",
                        "offset": 4772804
                    },
                    {
                        "function": "blkmk_init_generation2",
                        "offset": 4772812
                    },
                    {
                        "function": "blkmk_sha256_impl",
                        "offset": 4772820
                    },
                    {
                        "function": "blkmk_time_left",
                        "offset": 4772828
                    },
                    {
                        "function": "blkmk_work_left",
                        "offset": 4772836
                    },
                    {
                        "function": "blktmpl_addcaps",
                        "offset": 4772844
                    },
                    {
                        "function": "blktmpl_create",
                        "offset": 4772852
                    },
                    {
                        "function": "blktmpl_free",
                        "offset": 4772860
                    },
                    {
                        "function": "blktmpl_get_longpoll",
                        "offset": 4772868
                    }
                ],
                "libblkmaker_jansson-0.1-0.dll": [
                    {
                        "function": "blkmk_submit_jansson",
                        "offset": 4772884
                    },
                    {
                        "function": "blktmpl_add_jansson",
                        "offset": 4772892
                    },
                    {
                        "function": "blktmpl_request_jansson",
                        "offset": 4772900
                    }
                ],
                "libcurl-4.dll": [
                    {
                        "function": "curl_easy_cleanup",
                        "offset": 4771812
                    },
                    {
                        "function": "curl_easy_getinfo",
                        "offset": 4771820
                    },
                    {
                        "function": "curl_easy_init",
                        "offset": 4771828
                    },
                    {
                        "function": "curl_easy_perform",
                        "offset": 4771836
                    },
                    {
                        "function": "curl_easy_reset",
                        "offset": 4771844
                    },
                    {
                        "function": "curl_easy_setopt",
                        "offset": 4771852
                    },
                    {
                        "function": "curl_global_cleanup",
                        "offset": 4771860
                    },
                    {
                        "function": "curl_global_init",
                        "offset": 4771868
                    },
                    {
                        "function": "curl_multi_add_handle",
                        "offset": 4771876
                    },
                    {
                        "function": "curl_multi_cleanup",
                        "offset": 4771884
                    },
                    {
                        "function": "curl_multi_fdset",
                        "offset": 4771892
                    },
                    {
                        "function": "curl_multi_info_read",
                        "offset": 4771900
                    },
                    {
                        "function": "curl_multi_init",
                        "offset": 4771908
                    },
                    {
                        "function": "curl_multi_perform",
                        "offset": 4771916
                    },
                    {
                        "function": "curl_multi_remove_handle",
                        "offset": 4771924
                    },
                    {
                        "function": "curl_multi_setopt",
                        "offset": 4771932
                    },
                    {
                        "function": "curl_slist_append",
                        "offset": 4771940
                    },
                    {
                        "function": "curl_slist_free_all",
                        "offset": 4771948
                    },
                    {
                        "function": "curl_version_info",
                        "offset": 4771956
                    }
                ],
                "libjansson-4.dll": [
                    {
                        "function": "json_array",
                        "offset": 4771972
                    },
                    {
                        "function": "json_array_append_new",
                        "offset": 4771980
                    },
                    {
                        "function": "json_array_get",
                        "offset": 4771988
                    },
                    {
                        "function": "json_array_size",
                        "offset": 4771996
                    },
                    {
                        "function": "json_deep_copy",
                        "offset": 4772004
                    },
                    {
                        "function": "json_delete",
                        "offset": 4772012
                    },
                    {
                        "function": "json_dumps",
                        "offset": 4772020
                    },
                    {
                        "function": "json_integer_value",
                        "offset": 4772028
                    },
                    {
                        "function": "json_load_file",
                        "offset": 4772036
                    },
                    {
                        "function": "json_loadb",
                        "offset": 4772044
                    },
                    {
                        "function": "json_loads",
                        "offset": 4772052
                    },
                    {
                        "function": "json_number_value",
                        "offset": 4772060
                    },
                    {
                        "function": "json_object",
                        "offset": 4772068
                    },
                    {
                        "function": "json_object_get",
                        "offset": 4772076
                    },
                    {
                        "function": "json_object_set_new",
                        "offset": 4772084
                    },
                    {
                        "function": "json_real_value",
                        "offset": 4772092
                    },
                    {
                        "function": "json_string",
                        "offset": 4772100
                    },
                    {
                        "function": "json_string_value",
                        "offset": 4772108
                    }
                ],
                "libusb-1.0.dll": [
                    {
                        "function": "libusb_bulk_transfer",
                        "offset": 4772316
                    },
                    {
                        "function": "libusb_claim_interface",
                        "offset": 4772324
                    },
                    {
                        "function": "libusb_close",
                        "offset": 4772332
                    },
                    {
                        "function": "libusb_control_transfer",
                        "offset": 4772340
                    },
                    {
                        "function": "libusb_detach_kernel_driver",
                        "offset": 4772348
                    },
                    {
                        "function": "libusb_error_name",
                        "offset": 4772356
                    },
                    {
                        "function": "libusb_exit",
                        "offset": 4772364
                    },
                    {
                        "function": "libusb_free_config_descriptor",
                        "offset": 4772372
                    },
                    {
                        "function": "libusb_free_device_list",
                        "offset": 4772380
                    },
                    {
                        "function": "libusb_get_bus_number",
                        "offset": 4772388
                    },
                    {
                        "function": "libusb_get_config_descriptor",
                        "offset": 4772396
                    },
                    {
                        "function": "libusb_get_device_address",
                        "offset": 4772404
                    },
                    {
                        "function": "libusb_get_device_descriptor",
                        "offset": 4772412
                    },
                    {
                        "function": "libusb_get_device_list",
                        "offset": 4772420
                    },
                    {
                        "function": "libusb_get_string_descriptor_ascii",
                        "offset": 4772428
                    },
                    {
                        "function": "libusb_init",
                        "offset": 4772436
                    },
                    {
                        "function": "libusb_open",
                        "offset": 4772444
                    },
                    {
                        "function": "libusb_ref_device",
                        "offset": 4772452
                    },
                    {
                        "function": "libusb_release_interface",
                        "offset": 4772460
                    },
                    {
                        "function": "libusb_reset_device",
                        "offset": 4772468
                    },
                    {
                        "function": "libusb_set_configuration",
                        "offset": 4772476
                    },
                    {
                        "function": "libusb_unref_device",
                        "offset": 4772484
                    }
                ],
                "msvcrt.dll": [
                    {
                        "function": "_access",
                        "offset": 4770804
                    },
                    {
                        "function": "_close",
                        "offset": 4770812
                    },
                    {
                        "function": "_execv",
                        "offset": 4770820
                    },
                    {
                        "function": "_fdopen",
                        "offset": 4770828
                    },
                    {
                        "function": "_fileno",
                        "offset": 4770836
                    },
                    {
                        "function": "_isatty",
                        "offset": 4770844
                    },
                    {
                        "function": "_read",
                        "offset": 4770852
                    },
                    {
                        "function": "_strdup",
                        "offset": 4770860
                    },
                    {
                        "function": "_write",
                        "offset": 4770868
                    },
                    {
                        "function": "__C_specific_handler",
                        "offset": 4770884
                    },
                    {
                        "function": "__dllonexit",
                        "offset": 4770892
                    },
                    {
                        "function": "__getmainargs",
                        "offset": 4770900
                    },
                    {
                        "function": "__initenv",
                        "offset": 4770908
                    },
                    {
                        "function": "__iob_func",
                        "offset": 4770916
                    },
                    {
                        "function": "__lconv_init",
                        "offset": 4770924
                    },
                    {
                        "function": "__set_app_type",
                        "offset": 4770932
                    },
                    {
                        "function": "__setusermatherr",
                        "offset": 4770940
                    },
                    {
                        "function": "_acmdln",
                        "offset": 4770948
                    },
                    {
                        "function": "_amsg_exit",
                        "offset": 4770956
                    },
                    {
                        "function": "_cexit",
                        "offset": 4770964
                    },
                    {
                        "function": "_errno",
                        "offset": 4770972
                    },
                    {
                        "function": "_exit",
                        "offset": 4770980
                    },
                    {
                        "function": "_fmode",
                        "offset": 4770988
                    },
                    {
                        "function": "_initterm",
                        "offset": 4770996
                    },
                    {
                        "function": "_localtime64",
                        "offset": 4771004
                    },
                    {
                        "function": "_lock",
                        "offset": 4771012
                    },
                    {
                        "function": "_onexit",
                        "offset": 4771020
                    },
                    {
                        "function": "_open_osfhandle",
                        "offset": 4771028
                    },
                    {
                        "function": "_stat64",
                        "offset": 4771036
                    },
                    {
                        "function": "_stricmp",
                        "offset": 4771044
                    },
                    {
                        "function": "_strnicmp",
                        "offset": 4771052
                    },
                    {
                        "function": "_time64",
                        "offset": 4771060
                    },
                    {
                        "function": "_unlock",
                        "offset": 4771068
                    },
                    {
                        "function": "_vsnprintf",
                        "offset": 4771076
                    },
                    {
                        "function": "abort",
                        "offset": 4771084
                    },
                    {
                        "function": "atof",
                        "offset": 4771092
                    },
                    {
                        "function": "atoi",
                        "offset": 4771100
                    },
                    {
                        "function": "calloc",
                        "offset": 4771108
                    },
                    {
                        "function": "ceil",
                        "offset": 4771116
                    },
                    {
                        "function": "div",
                        "offset": 4771124
                    },
                    {
                        "function": "exit",
                        "offset": 4771132
                    },
                    {
                        "function": "fclose",
                        "offset": 4771140
                    },
                    {
                        "function": "feof",
                        "offset": 4771148
                    },
                    {
                        "function": "fflush",
                        "offset": 4771156
                    },
                    {
                        "function": "floor",
                        "offset": 4771164
                    },
                    {
                        "function": "fopen",
                        "offset": 4771172
                    },
                    {
                        "function": "fprintf",
                        "offset": 4771180
                    },
                    {
                        "function": "fputc",
                        "offset": 4771188
                    },
                    {
                        "function": "fputs",
                        "offset": 4771196
                    },
                    {
                        "function": "fread",
                        "offset": 4771204
                    },
                    {
                        "function": "free",
                        "offset": 4771212
                    },
                    {
                        "function": "fseek",
                        "offset": 4771220
                    },
                    {
                        "function": "ftell",
                        "offset": 4771228
                    },
                    {
                        "function": "fwrite",
                        "offset": 4771236
                    },
                    {
                        "function": "getenv",
                        "offset": 4771244
                    },
                    {
                        "function": "isalpha",
                        "offset": 4771252
                    },
                    {
                        "function": "islower",
                        "offset": 4771260
                    },
                    {
                        "function": "isspace",
                        "offset": 4771268
                    },
                    {
                        "function": "isupper",
                        "offset": 4771276
                    },
                    {
                        "function": "ldiv",
                        "offset": 4771284
                    },
                    {
                        "function": "localeconv",
                        "offset": 4771292
                    },
                    {
                        "function": "log10",
                        "offset": 4771300
                    },
                    {
                        "function": "malloc",
                        "offset": 4771308
                    },
                    {
                        "function": "mbstowcs",
                        "offset": 4771316
                    },
                    {
                        "function": "memcmp",
                        "offset": 4771324
                    },
                    {
                        "function": "memcpy",
                        "offset": 4771332
                    },
                    {
                        "function": "memmove",
                        "offset": 4771340
                    },
                    {
                        "function": "memset",
                        "offset": 4771348
                    },
                    {
                        "function": "perror",
                        "offset": 4771356
                    },
                    {
                        "function": "printf",
                        "offset": 4771364
                    },
                    {
                        "function": "puts",
                        "offset": 4771372
                    },
                    {
                        "function": "raise",
                        "offset": 4771380
                    },
                    {
                        "function": "rand",
                        "offset": 4771388
                    },
                    {
                        "function": "realloc",
                        "offset": 4771396
                    },
                    {
                        "function": "rewind",
                        "offset": 4771404
                    },
                    {
                        "function": "setlocale",
                        "offset": 4771412
                    },
                    {
                        "function": "signal",
                        "offset": 4771420
                    },
                    {
                        "function": "sprintf",
                        "offset": 4771428
                    },
                    {
                        "function": "srand",
                        "offset": 4771436
                    },
                    {
                        "function": "sscanf",
                        "offset": 4771444
                    },
                    {
                        "function": "strcat",
                        "offset": 4771452
                    },
                    {
                        "function": "strchr",
                        "offset": 4771460
                    },
                    {
                        "function": "strcmp",
                        "offset": 4771468
                    },
                    {
                        "function": "strcpy",
                        "offset": 4771476
                    },
                    {
                        "function": "strcspn",
                        "offset": 4771484
                    },
                    {
                        "function": "strerror",
                        "offset": 4771492
                    },
                    {
                        "function": "strlen",
                        "offset": 4771500
                    },
                    {
                        "function": "strncat",
                        "offset": 4771508
                    },
                    {
                        "function": "strncmp",
                        "offset": 4771516
                    },
                    {
                        "function": "strncpy",
                        "offset": 4771524
                    },
                    {
                        "function": "strpbrk",
                        "offset": 4771532
                    },
                    {
                        "function": "strrchr",
                        "offset": 4771540
                    },
                    {
                        "function": "strspn",
                        "offset": 4771548
                    },
                    {
                        "function": "strstr",
                        "offset": 4771556
                    },
                    {
                        "function": "strtok",
                        "offset": 4771564
                    },
                    {
                        "function": "strtol",
                        "offset": 4771572
                    },
                    {
                        "function": "tolower",
                        "offset": 4771580
                    },
                    {
                        "function": "toupper",
                        "offset": 4771588
                    },
                    {
                        "function": "vfprintf",
                        "offset": 4771596
                    },
                    {
                        "function": "vprintf",
                        "offset": 4771604
                    },
                    {
                        "function": "vsprintf",
                        "offset": 4771612
                    },
                    {
                        "function": "wcstombs",
                        "offset": 4771620
                    }
                ],
                "pdcurses.dll": [
                    {
                        "function": "LINES",
                        "offset": 4772500
                    },
                    {
                        "function": "cbreak",
                        "offset": 4772508
                    },
                    {
                        "function": "delwin",
                        "offset": 4772516
                    },
                    {
                        "function": "echo",
                        "offset": 4772524
                    },
                    {
                        "function": "endwin",
                        "offset": 4772532
                    },
                    {
                        "function": "erase",
                        "offset": 4772540
                    },
                    {
                        "function": "getmaxx",
                        "offset": 4772548
                    },
                    {
                        "function": "getmaxy",
                        "offset": 4772556
                    },
                    {
                        "function": "halfdelay",
                        "offset": 4772564
                    },
                    {
                        "function": "idlok",
                        "offset": 4772572
                    },
                    {
                        "function": "immedok",
                        "offset": 4772580
                    },
                    {
                        "function": "initscr",
                        "offset": 4772588
                    },
                    {
                        "function": "keypad",
                        "offset": 4772596
                    },
                    {
                        "function": "leaveok",
                        "offset": 4772604
                    },
                    {
                        "function": "mvwhline",
                        "offset": 4772612
                    },
                    {
                        "function": "mvwin",
                        "offset": 4772620
                    },
                    {
                        "function": "mvwprintw",
                        "offset": 4772628
                    },
                    {
                        "function": "newwin",
                        "offset": 4772636
                    },
                    {
                        "function": "nocbreak",
                        "offset": 4772644
                    },
                    {
                        "function": "noecho",
                        "offset": 4772652
                    },
                    {
                        "function": "scrollok",
                        "offset": 4772660
                    },
                    {
                        "function": "stdscr",
                        "offset": 4772668
                    },
                    {
                        "function": "touchwin",
                        "offset": 4772676
                    },
                    {
                        "function": "vw_printw",
                        "offset": 4772684
                    },
                    {
                        "function": "waddstr",
                        "offset": 4772692
                    },
                    {
                        "function": "wattroff",
                        "offset": 4772700
                    },
                    {
                        "function": "wattron",
                        "offset": 4772708
                    },
                    {
                        "function": "wclear",
                        "offset": 4772716
                    },
                    {
                        "function": "wclrtoeol",
                        "offset": 4772724
                    },
                    {
                        "function": "wgetch",
                        "offset": 4772732
                    },
                    {
                        "function": "wgetnstr",
                        "offset": 4772740
                    },
                    {
                        "function": "wmove",
                        "offset": 4772748
                    },
                    {
                        "function": "wprintw",
                        "offset": 4772756
                    },
                    {
                        "function": "wrefresh",
                        "offset": 4772764
                    },
                    {
                        "function": "wresize",
                        "offset": 4772772
                    }
                ],
                "pthreadGC2.dll": [
                    {
                        "function": "pthread_cancel",
                        "offset": 4772124
                    },
                    {
                        "function": "pthread_cond_broadcast",
                        "offset": 4772132
                    },
                    {
                        "function": "pthread_cond_destroy",
                        "offset": 4772140
                    },
                    {
                        "function": "pthread_cond_init",
                        "offset": 4772148
                    },
                    {
                        "function": "pthread_cond_signal",
                        "offset": 4772156
                    },
                    {
                        "function": "pthread_cond_timedwait",
                        "offset": 4772164
                    },
                    {
                        "function": "pthread_cond_wait",
                        "offset": 4772172
                    },
                    {
                        "function": "pthread_create",
                        "offset": 4772180
                    },
                    {
                        "function": "pthread_detach",
                        "offset": 4772188
                    },
                    {
                        "function": "pthread_mutex_destroy",
                        "offset": 4772196
                    },
                    {
                        "function": "pthread_mutex_init",
                        "offset": 4772204
                    },
                    {
                        "function": "pthread_mutex_lock",
                        "offset": 4772212
                    },
                    {
                        "function": "pthread_mutex_trylock",
                        "offset": 4772220
                    },
                    {
                        "function": "pthread_mutex_unlock",
                        "offset": 4772228
                    },
                    {
                        "function": "pthread_rwlock_init",
                        "offset": 4772236
                    },
                    {
                        "function": "pthread_rwlock_rdlock",
                        "offset": 4772244
                    },
                    {
                        "function": "pthread_rwlock_unlock",
                        "offset": 4772252
                    },
                    {
                        "function": "pthread_rwlock_wrlock",
                        "offset": 4772260
                    },
                    {
                        "function": "pthread_self",
                        "offset": 4772268
                    },
                    {
                        "function": "pthread_setcancelstate",
                        "offset": 4772276
                    },
                    {
                        "function": "pthread_setcanceltype",
                        "offset": 4772284
                    },
                    {
                        "function": "ptw32_pop_cleanup",
                        "offset": 4772292
                    },
                    {
                        "function": "ptw32_push_cleanup",
                        "offset": 4772300
                    }
                ]
            },
            "relocations": {
                "Size": 0,
                "VirtualAddress": 0,
                "count": 0,
                "details": {}
            },
            "resources": [],
            "sign": {},
            "tls": {
                "AddressOfCallBacks": 4780096,
                "AddressOfIndex": 4742828,
                "Characteristics": 0,
                "EndAddressOfRawData": 4784196,
                "SizeOfZeroFill": 0,
                "StartAddressOfRawData": 4784193
            }
        },
        "dll": false,
        "entrypoint": 5328,
        "features": {
            "antidbg": [
                "GetLastError",
                "TerminateProcess",
                "UnhandledExceptionFilter"
            ],
            "antivm": {},
            "crypto": [
                "Big_Numbers4"
            ],
            "mutex": [],
            "packer": [
                "Microsoft_Visual_Cpp_80_DLL"
            ],
            "xor": {}
        },
        "imagebase": 4194304,
        "imphash": "6d98a40a811ac530ce6e27eb2fa55abe",
        "metadata": {},
        "sections": {
            "count": 17,
            "details": [
                {
                    "characteristics": 1615855648,
                    "data": "b'\\xc3ffffff.\\x0f\\x1f\\x84\\x00\\x00\\x00\\x00\\x00H\\x83",
                    "entropy": 5.877227065958729,
                    "executable": true,
                    "hash": {
                        "md5": "b685524026de56765d908e38001853c9",
                        "sha1": "128d467c03ec9053ff3f5323415503e7750f30d4",
                        "sha256": "5c2e05a6e85e75a0d315a5fd005ed7ee3870e39387431397ee87fe235f29ef1b"
                    },
                    "section_name": ".text",
                    "size_of_raw_data": 414208,
                    "virtual_address": 4096,
                    "virtual_size": 414008
                },
                {
                    "characteristics": 3227516992,
                    "data": "b'\\n\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x",
                    "entropy": 2.2542872655001047,
                    "executable": false,
                    "hash": {
                        "md5": "4b9ace2dde1da2c5503830e2f15399a6",
                        "sha1": "f67ac78cfaa7fc4a4c2ed4d08e684df507894ce5",
                        "sha256": "73c7248cdff9ccd75ef9bfb53d11d4f0fe8e5765e5eca6de93faaaf3299b007e"
                    },
                    "section_name": ".data",
                    "size_of_raw_data": 13312,
                    "virtual_address": 421888,
                    "virtual_size": 13232
                },
                {
                    "characteristics": 1080033344,
                    "data": "b'_set_invalid_parameter_handler\\x00\\x00WTF MUTEX ",
                    "entropy": 5.204651486133176,
                    "executable": false,
                    "hash": {
                        "md5": "01d87ae7bb1c5b60059c802b847ca32e",
                        "sha1": "7b1d862b6dc1f9559201f3ea2f6969cbaf3bb1e7",
                        "sha256": "b1ffb06936d11563a6a660ba005b106162af08881e241128675cb868cf14ece1"
                    },
                    "section_name": ".rdata",
                    "size_of_raw_data": 67584,
                    "virtual_address": 438272,
                    "virtual_size": 67388
                },
                {
                    "characteristics": 1076887616,
                    "data": "b'\\x00\\x10\\x00\\x00\\x01\\x10\\x00\\x00\\x00\\x10\\x08\\x00",
                    "entropy": 5.808656228871473,
                    "executable": false,
                    "hash": {
                        "md5": "eb9a187e1f19b8aa9ef29c27a956659e",
                        "sha1": "10163eda9a3404ff2e32e0fc2b845ca60cabb07c",
                        "sha256": "46847a7b6a36298a1a335357fb6830f4d2e0f6e9b38fcc8ec0cf30d629391ce9"
                    },
                    "section_name": ".pdata",
                    "size_of_raw_data": 17408,
                    "virtual_address": 507904,
                    "virtual_size": 17400
                },
                {
                    "characteristics": 1076887616,
                    "data": "b'\\x01\\x00\\x00\\x00\\x01\\x04\\x01\\x00\\x04b\\x00\\x00\\x0",
                    "entropy": 3.9825548160797277,
                    "executable": false,
                    "hash": {
                        "md5": "4ab8db5fb444bc9f1eb18db39bbe9d9b",
                        "sha1": "a82a33d3c7a67ebae95f1cc97da14b115b907957",
                        "sha256": "8c8da629d5c3526b43f66c365b51bccb539b794e8f7f908bb6895ef007ced42c"
                    },
                    "section_name": ".xdata",
                    "size_of_raw_data": 15872,
                    "virtual_address": 528384,
                    "virtual_size": 15464
                },
                {
                    "characteristics": 3227517056,
                    "data": "b''",
                    "entropy": 0.0,
                    "executable": false,
                    "hash": {
                        "md5": "d41d8cd98f00b204e9800998ecf8427e",
                        "sha1": "da39a3ee5e6b4b0d3255bfef95601890afd80709",
                        "sha256": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855"
                    },
                    "section_name": ".bss",
                    "size_of_raw_data": 0,
                    "virtual_address": 544768,
                    "virtual_size": 27872
                },
                {
                    "characteristics": 3224371264,
                    "data": "b'\\x04\\xc1\\x08\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00",
                    "entropy": 4.513139519732076,
                    "executable": false,
                    "hash": {
                        "md5": "be4450d9f55182862449f9005d7c841d",
                        "sha1": "68e15d9725c36de04a05ee1000647294406fbe2a",
                        "sha256": "dca07a587dad802a2130f23315cb52ac230252043097ef84aac9252419308e43"
                    },
                    "section_name": ".idata",
                    "size_of_raw_data": 11264,
                    "virtual_address": 573440,
                    "virtual_size": 11232
                },
                {
                    "characteristics": 3225419840,
                    "data": "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x10\\x10@\\x00\\x0",
                    "entropy": 0.2686824176589459,
                    "executable": false,
                    "hash": {
                        "md5": "ee571c949d0b75fb2d582c0488e61492",
                        "sha1": "f89070e9b30c259730a02436e4261ccfef9bb429",
                        "sha256": "6058ce9d95af9528f1056375fa609ba0c5f57d89d79c4685c36b9f192b928135"
                    },
                    "section_name": ".CRT",
                    "size_of_raw_data": 512,
                    "virtual_address": 585728,
                    "virtual_size": 104
                },
                {
                    "characteristics": 3227516992,
                    "data": "b'A\\x00I\\x00\\x00\\x00\\x00\\x00D\\x00I\\x00\\x00\\x00\\x00",
                    "entropy": 0.19586940608732903,
                    "executable": false,
                    "hash": {
                        "md5": "4b7fbc3eaf055d491a018088036ab527",
                        "sha1": "798cd6926daa04d7c2bc614de26d34ffa7d9988d",
                        "sha256": "8dfdf0048a1b71c68d3305d8c40c6b4d489dce7d8c4c5793e020773630daa16c"
                    },
                    "section_name": ".tls",
                    "size_of_raw_data": 512,
                    "virtual_address": 589824,
                    "virtual_size": 72
                },
                {
                    "characteristics": 1108344896,
                    "data": "b',\\x00\\x00\\x00\\x02\\x00\\x00\\x00\\x00\\x00\\x08\\x00\\x0",
                    "entropy": 2.0134918899813994,
                    "executable": false,
                    "hash": {
                        "md5": "8415826a5b6c19d450f90390792c9ebf",
                        "sha1": "05691654a9d3f16f2db486ae7341d3d892e23ac2",
                        "sha256": "3ff1cbda01e3a477bc7dd73b9b7e63304903d101ab15b1de11559b67be95b107"
                    },
                    "section_name": "/4",
                    "size_of_raw_data": 1536,
                    "virtual_address": 593920,
                    "virtual_size": 1488
                },
                {
                    "characteristics": 1108344896,
                    "data": "b'\\x86\\x10\\x01\\x00\\x02\\x00\\x00\\x00\\x00\\x00\\x08\\x01",
                    "entropy": 6.020238762101955,
                    "executable": false,
                    "hash": {
                        "md5": "8199f0884c65d92ca1150e75de37614b",
                        "sha1": "309637b0eccb50c28db1d170f9bd42aec041019c",
                        "sha256": "b9859476011c50056b397808a050b929acf305b47382252a201ef700bd4df76a"
                    },
                    "section_name": "/19",
                    "size_of_raw_data": 493056,
                    "virtual_address": 598016,
                    "virtual_size": 492985
                },
                {
                    "characteristics": 1108344896,
                    "data": "b'\\x01\\x11\\x01%\\x08\\x13\\x0b\\x03\\x08\\x1b\\x08\\x11\\x0",
                    "entropy": 4.413122424181193,
                    "executable": false,
                    "hash": {
                        "md5": "7f17ecbe4e242279f121e90c222d62a9",
                        "sha1": "31413ccf8c5470d5f8f9c1fcec28774b79e1f04f",
                        "sha256": "21abd50b3754ad6bddc26a5c33f548531265826d2e9da1b44fcd8100bcba8bef"
                    },
                    "section_name": "/31",
                    "size_of_raw_data": 18432,
                    "virtual_address": 1093632,
                    "virtual_size": 18086
                },
                {
                    "characteristics": 1108344896,
                    "data": "b'\\x90A\\x00\\x00\\x02\\x00X\\x03\\x00\\x00\\x01\\x01\\xfb\\x",
                    "entropy": 5.830958372239404,
                    "executable": false,
                    "hash": {
                        "md5": "305bfe333aa206b5c550f603b0404ca5",
                        "sha1": "25449b0178fddcab2e3df6b3613fbf006e807438",
                        "sha256": "c00b2db1d0434581f3a87c1e1079d9ebc6d576d33398046a69e0a05207daf9eb"
                    },
                    "section_name": "/45",
                    "size_of_raw_data": 59392,
                    "virtual_address": 1114112,
                    "virtual_size": 59056
                },
                {
                    "characteristics": 1111490624,
                    "data": "b'\\x14\\x00\\x00\\x00\\xff\\xff\\xff\\xff\\x01\\x00\\x01x \\x",
                    "entropy": 3.9886179223305427,
                    "executable": false,
                    "hash": {
                        "md5": "f8ca67d337c26e2f5ec80155d7cdc3a7",
                        "sha1": "f3df2b9c7f28a3213cf3c611e034b9f5dcb8a0d3",
                        "sha256": "6a9cd71175cea20b89f5b64de6822235188fea0ccf028d2fb9a9031f748c14a7"
                    },
                    "section_name": "/57",
                    "size_of_raw_data": 57344,
                    "virtual_address": 1175552,
                    "virtual_size": 57272
                },
                {
                    "characteristics": 1108344896,
                    "data": "b'stratum_thread\\x00getwork_wait_min\\x00_hd_hh_del",
                    "entropy": 4.746318093566585,
                    "executable": false,
                    "hash": {
                        "md5": "b983852ca3d08882cbb4792ae144664a",
                        "sha1": "fdcca64803f70a332afa4f997e4503baa89ee723",
                        "sha256": "10d9a928c6d26cf68416c0bc60ae5e50b428710d53c22c3850eaaa34973497c7"
                    },
                    "section_name": "/70",
                    "size_of_raw_data": 10240,
                    "virtual_address": 1232896,
                    "virtual_size": 10213
                },
                {
                    "characteristics": 1108344896,
                    "data": "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x00\\x00",
                    "entropy": 2.458816586373365,
                    "executable": false,
                    "hash": {
                        "md5": "f1f9da94afc1ec2b2d6c842e9c13834f",
                        "sha1": "91fbca402a465241f3b30cf73e83294a8b699e0b",
                        "sha256": "2e26270d52a48b284fe64650c532aa08ce6bac9572ae83cfe084150dde228cde"
                    },
                    "section_name": "/81",
                    "size_of_raw_data": 134144,
                    "virtual_address": 1245184,
                    "virtual_size": 133912
                },
                {
                    "characteristics": 1108344896,
                    "data": "b'\\x93$\\x00\\x00\\x00\\x00\\x00\\x00\\xd8%\\x00\\x00\\x00\\x",
                    "entropy": 1.5471829281206413,
                    "executable": false,
                    "hash": {
                        "md5": "e41f96ef6aa7104542d605fdf7ae9321",
                        "sha1": "6d544077a8c0b6b568f063f8125d98d848d0a9c6",
                        "sha256": "819f9ad9767f161b383d561cb12f0c3fdb06f3a9a2c6b4a8cbeb75c3b6ee0a21"
                    },
                    "section_name": "/92",
                    "size_of_raw_data": 1024,
                    "virtual_address": 1380352,
                    "virtual_size": 800
                }
            ]
        },
        "timestamp": "2013-03-02 08:22:46"
    },
    "strings": {
        "dump": [
            "L!This program cannot be run in DOS mode.",
            ".text",
            "P`.data",
            "`.rdata",
            "`@.pdata",
            "0@.xdata",
            "0@.bss",
            "`.idata",
            "0.CRT",
            "@.tls",
            "B/19",
            "B/31",
            "B/45",
            "B/57",
            "@B/70",
            "B/81",
            "B/92",
            "ffffff.",
            "HD$ K",
            "H(1f=MZ",
            "tf1H(",
            "\u0281:PE",
            "ATUWVSH",
            "HT$ EHH",
            "1Ht6H9@",
            "t.H=\u05f9",
            "1\tH9",
            "Ht\tH",
            "t0t H",
            " ~AA",
            "H1H5<",
            "~=1H",
            "McLH",
            "H-i<",
            "[^_]A\\",
            "UHH HM",
            "t9HE",
            "Ht+HE",
            "HPHE",
            "H ]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UHH HM",
            "H ]UHH`HM",
            "\u0409EDEHE",
            "EE=@B",
            "E-@B",
            "EHE\u043a",
            "U\u040bE9",
            "U\u040bE9u",
            "U\u050bE9~",
            "qUE\u0409)\u0209EUE\u0509)\u0209E\u010bE\u0105y",
            "E\u010bEHcHE",
            "H`]UHH@M",
            "HUHEHKu",
            "H@]UHHM",
            "LE HE HU",
            "HU H",
            "]UHH HM",
            "IHHM",
            "H ]UHH HM",
            "IHHM",
            "dH ]UHHM",
            "]UHH HM",
            "H ]UHHM",
            "]UHHM",
            "]UHH H",
            "H ]UHH0HM",
            "HEHM",
            "HHEH",
            "HEHH",
            "HH0]UHM",
            "\t\t]UHH",
            "HEHE",
            "HEHEP",
            "HEHP",
            "HEHP",
            "HEHP",
            "HEHP",
            "HEHP",
            "HEHP",
            "HEHP",
            "]UHSH8HM",
            "LE HE",
            "+HEH",
            "HEH;E rH8[]UHSH8HM",
            "HEHE",
            "HEHEH",
            "HEHX",
            "HEHX",
            "HEHX",
            "HEHX",
            "HEHX",
            "HEHX",
            "HEHX",
            "H8[]UHH HM",
            "H ]UHH HM",
            "H ]UHH HM",
            "H ]UHH HM",
            "H ]UHH HM",
            "H ]UHH HM",
            "H ]UHH HM",
            "H ]UHH HM",
            "H ]UHH HM",
            "H ]UHHM",
            "]UHH`",
            "EHHHHEH",
            "R P H",
            "tBHEH",
            "E@HEH",
            "Ht!HEH",
            "EH`]UHHpHM",
            "HEHEHE",
            "HHHHEH",
            "R P HED",
            "HED@",
            "DL$8DD$0L$(T$ EEHHM",
            "Hp]UHH`HM",
            "HEHEHE",
            "HHHHEH",
            "R P HE",
            "HED@",
            "T$ EAHHM",
            "H`]UHH0HU",
            "LE LM(HM",
            "HEIHU",
            "HH)HH",
            "H@(H ",
            "LPHH",
            "HL$PH",
            "HL$H,",
            "L$@LT$8HT$0H",
            "HT$(HP",
            "HT$ ",
            "HcHEIA",
            "[]UHH0",
            "HEH}",
            "HHEH",
            "HHEH",
            "HpHEH0",
            "HEH0",
            "HEH0",
            "HEH8",
            "HEH\u01c0",
            "HEH\u01c0",
            "HEH\u01c0 ",
            "HEH@x",
            "HEH0]UHH0HM",
            "H@HE",
            "EH0]UHH0HM",
            "EH0]UHH0H",
            "HEH0]UHH0HM",
            "DE DM(HE",
            "HEH}",
            "HE$HE",
            ";E |",
            ";E(~\tH",
            "H0]UHH HM",
            "qH ]UHH HM",
            "?H ]UHH HM",
            "H ]UHH HM",
            "H ]UHH HM",
            "H ]UHH0HM",
            "HEH}",
            "[HEH",
            "HEHUHELE",
            "H;Et",
            "HEHI5",
            "HUHP",
            "H0]UHHPHM",
            "HEH}",
            "HEWHE",
            "HE\u043a ",
            "HP]UHATWVSHpHM",
            "HEHIHH",
            "H)HD$ H",
            "HEHE\u0609HEAH",
            "\u0405uEH",
            "\u0403zu&HeHEAH",
            "HH)HHEHEH",
            "H)HD$ H",
            "HEHU",
            "HEHMIH2",
            "HEHUH",
            "HEHEHE",
            "HEHEH",
            "HMHHHH",
            "HEHEH",
            "uDHUHEHMIHR2",
            "HEIH",
            "HHe[^_A\\]UHH0HM",
            "HEH}",
            "HEHEH",
            "HEHHM",
            "H0]UHH0HM",
            "t%HE",
            "H0]UHHM",
            "]UHHM",
            "]UHH HM",
            "H ]UHHM",
            "]UHH HM",
            "\u0405uBHE",
            "H ]UHWVH0HM",
            "HEHEHU",
            "HEH}",
            "HEHUH",
            "H0^_]UHH0HM",
            "HEHEH",
            "H0]UHH0HM",
            "HEHEH",
            "H0]UHH0HM",
            "HEHM",
            "HEHEH",
            "HEHj-",
            "Hu\tH",
            "H0]UHH0HM",
            "HEHEH",
            "H0]UHH0HM",
            "HEHEH",
            "H0]UHH0HM",
            "HEHEHDHHM",
            "H0]UHHM",
            "]UHH HM",
            "IIHHM",
            "H ]UHWVH0HM",
            "HEHE",
            "xDEH",
            "HuNH",
            "H0^_]UHH0HM",
            "H0]UHH0HM",
            "H0]UHH0HM",
            "HEHE,",
            "HEH}",
            "HEHP",
            "H;Et",
            "HEH(",
            "H0]UHH`E",
            "UHcH",
            "HEHE\u82c0",
            "HUHE}",
            "HEU\udbe5\udc10",
            "HUHE}",
            "HEU\udbe5\udc14",
            "UHE\u8250",
            "HMH@D$ AIH",
            "H`]UHH HM",
            "H ]UHH HM",
            "H ]UHH HM",
            "H ]UHH HM",
            "H ]UHH HM",
            "H ]UHHM",
            "]UVSH",
            "HX(H",
            "EHEHHM",
            "EHHEf",
            "(II\u043a",
            "<0tH",
            "HP(HEHAH",
            "H@(HH",
            "H@(HP",
            "H@(H",
            "IIHH",
            "[^]UWHH",
            "HMHHHL@HEH\\HEH",
            "HMHHHH",
            "HEHH\\H",
            "HvHH",
            "_]UHWH8",
            "LHEH",
            "HMHHHH",
            "H8_]UHH HM",
            "UHH@HM",
            "LE LM(E0EHE",
            "HEH}",
            "`HEH{",
            "HEH}",
            "*HM(HUHE IH0",
            "H@]UHP",
            "HHEH:",
            "HEA@",
            "HEHH",
            "H@ HB",
            "]UHH0",
            "HEH}",
            "HEH0]UHWH8HM",
            "Ht{HE",
            "HEHEH",
            "EHEH",
            "t&HE",
            "HHHD",
            "H8_]UHH HM",
            "H ]UHH0HM",
            "HMIH",
            "H0]UHH M",
            "H ]UHWSH",
            "LE HE H",
            "u_HEH",
            "HEH}",
            "HEHqv",
            "HEHEA",
            "HUIH\u826f",
            "HEH}",
            "t\"HEIH",
            "LwMIH\u8e6e",
            "wtbHE",
            "HEH}",
            "HUIAH",
            "HEH}",
            "HMIAH",
            "HEH}",
            "ua\u01c5`bfgm\u01c5diner\u01c5h 2.9\u01c5l9.0",
            "H`HE\"HEH",
            "HEHEH\u01c5XH",
            "HXHHHH",
            "HEHEH;Er",
            "HEHE",
            "HEHMH",
            "HHEIH",
            "LEHT$(HUHT$ MAH",
            "HMHE",
            "HUIHA",
            "HEH}",
            "HUIH",
            "H\\$(HD$ ",
            "HJ HH HR(HP(HE",
            "HEH}",
            "H@hHt",
            "HPhHEH",
            "tvHE",
            "H@hHG",
            "HPhJHU",
            "HED$ ",
            "HED$ ",
            "HED$ ",
            "HtrHE",
            "aHE\u063a",
            ")\u0209EHE",
            "vHEH",
            "HEH}",
            "t:HEHo",
            ",|HE",
            "x|x%HE",
            "[_]USH$",
            "HH)HH",
            "H@(@",
            "[]UHH",
            "HEHE",
            "t@HE",
            "]UHH",
            "]UHH0H",
            "H*EH",
            "HHEH0]UHH H",
            "+H ]UHH H",
            "H ]UHH0",
            "EH0]UHH@H",
            "HEHEH",
            "EHE\u0409E}",
            "EHUH",
            "\u040bEH@]UHWHHHM",
            "LE LM(HU",
            "HU HEH",
            "LEHE",
            "HMHHHH",
            "HH_]UHH",
            ")uHM",
            "DE H",
            "@@HEHE",
            "HE@B",
            "H;ErKHE",
            "HuHE",
            "EfEE",
            "H;ErKHE",
            "HuHE",
            "EfEP",
            "H;ErKHE",
            "HuHE",
            "EfET",
            "H;ErKHE",
            "HuHE",
            "EfEG",
            "H;ErHHE",
            "HuHE",
            "EfEM",
            "H;Er7HE",
            "EfEk",
            "EHMHE",
            "LEHE",
            "MAHl",
            ",EE DP",
            "DEHE",
            "HMHL$(HMHL$ EEH\t",
            "(uH\u0110",
            "Z]UHH",
            ":EsA",
            "]UHH@HM",
            "DDM(E } u",
            "E EE",
            "E8Ev",
            "EHEILE",
            "(IAHM",
            "H@]UHH0HM",
            "E HHE",
            "E(AA",
            "(HH0]UVSH`",
            "HExH",
            "H)HD$pH",
            "HEpH",
            "HEhH",
            "H)HD$pH",
            "H)HD$pH",
            "H@PH",
            "H@XH",
            "ZHEpHE0HE`HE8HEPHE@HE0",
            "HP@H",
            "HP H",
            "H@(H",
            "H@0H",
            "Ht<H",
            "H@0Ht,",
            "H@0Ht",
            "HEpHE \u01c5",
            "H@XH",
            "HEPL]`D",
            "McNTL",
            "LL$`t$XD",
            "DL$PDD$HD",
            "DD$@L$8",
            "L$0T$(HD$ MMH",
            "ZHUPHE`LMpD",
            "HL$H",
            "L$0HT$(HD$ H",
            "H@ Hu",
            "H@8H",
            "H@ Ht<H",
            "H@8Ht,",
            "H@ H",
            "H@8Ht",
            "H@ H",
            "[^]USH8",
            "HH)HH",
            "H@(H",
            "HEHg",
            "[]UAWAVAUATWVSH",
            ")u0tHE(H",
            "HT$ L",
            "HEEE E",
            "HEEE",
            "HEDEU} ",
            "DU DD$0T$(U",
            "T$ AEH",
            "D$ P",
            "HT$ L",
            "t$`D|$XDt$PDl$HDd$@|$8t$0\\$(D$ L",
            "HD$ L",
            "tPHE(H",
            "HE(L@ HE(H8",
            "HL$0LD$(HT$ L",
            "kHE(L",
            "HU(LJ HU(H8",
            "LD$8HD$0LL$(HT$ L",
            "HL$8H",
            "HL$0H",
            "HL$(HT$ L",
            "D$ P",
            "D$ P",
            "HD$ L",
            "(u0H",
            "[^_A\\A]A^A_]UHH M",
            "H ]USH8",
            "HH)HH",
            "H@(H",
            "[]UHH M",
            "H ]UHH0H",
            "9}oEP",
            "EE;Eu",
            "E;Et",
            "MUAH",
            "H0]UHH0",
            "MAH!",
            "MUAH",
            "H0]UHH ",
            "}H ]UHH0HU",
            "LE LM(HM",
            "H0]UHH0HU",
            "LE LM(HM",
            "t+HU",
            "fH0]UHH0M",
            "LE }",
            "Ebt^",
            "HM HU",
            "H0]UHH t",
            "H ]UHH@HM",
            "HEHT",
            "HEH/",
            "H@]UHHM",
            "]UHHM",
            "]UHHM",
            "]UHSH",
            "LE D\u0208E(H",
            "HH)HH",
            "H@(HEHE",
            "HEHM",
            "HEHE",
            ",EHUHEA",
            "H>EHHUA",
            "~%HE",
            "HEAHS",
            "HUHZ@HU",
            "LM0LL$hHD$`HE HD$XHEHD$PHEHD$HHEHD$@H\\$8DD$0L$(T$ EMH",
            "[]UWSHp",
            "HH)HH",
            "H@(H",
            "H(H(",
            "HT$ AL",
            "LHHH(",
            "HDHUHDH",
            "HHEHa",
            "H0H(",
            "ErejeEct",
            "~+H(",
            "HMHHHH",
            "u{H ",
            "HT$ EIH",
            "HEH'H",
            "H~\u8e6fH;",
            "[_]UHH0HM",
            ",HE#",
            ",HEH",
            "H1EHEHEH",
            "H9Ev'HEH",
            "H;Es",
            "HUHX",
            "\u8ba5HEH0]UHH",
            "HEHE",
            "H\u0123HE",
            "HUEAHU~",
            "HEHE\u063a",
            "HEHEH\u061dHEP",
            "HEdHE",
            "HEHUHEH,",
            "HEHEH",
            "HEHEH",
            "HEHEHEH",
            "HUIIH",
            "HEHEH\u0120",
            "]UAWAVAUATWVSHx",
            "HH)HH",
            "H@(H",
            "LHHH",
            "HP@H",
            "HP@H",
            "HE0H",
            "HH\u071aHH",
            "R P H",
            "R P ",
            "HHlHH",
            "R P H",
            "R P H@",
            "tZH@",
            "E HE HHM ",
            "E HH",
            "(IH(",
            "}(Dh",
            "DE,D$",
            "DE(D$",
            "LD$xL",
            "LD$pL",
            "LD$hL",
            "LD$`L",
            "LD$XL",
            "LD$PDt$HDl$@Dd$8H|$0D",
            "DD$(t$ AAH",
            "LD$(L$ L@",
            "HE0A",
            "H8HE0IH",
            "[^_A\\A]A^A_]UHH HM",
            "UHcH",
            "HEHE",
            "@Au2HE@H",
            "u&HE\u82c0",
            "EHEHE",
            "9E|HE",
            "HEH ]UHH0\u0208E",
            "HEHE~HE",
            "HEHE",
            "HE@H",
            "HEH;Et",
            "tHEH;Et=HE",
            "HEHPAHEHaHEH0]UHH",
            "Y\u020bEHH",
            "]UHH0HM",
            "u HE",
            "H2HE",
            "HEHEHUHP@HE",
            "H%HE",
            "HE@HP",
            "HEPHIHE",
            ".z!f",
            "HEHUHP0HE@H",
            "HE@LP",
            "HEPL0HE",
            "HEHUHP8HE@L",
            "H0]UHWHHHM",
            "HEH9EH",
            "FEHEHE",
            "HHHD",
            "HMIHp",
            "HH_]UHH0HM",
            "HEHEH",
            "H\u8897HEH ",
            "HEH ",
            "H\u87feHM",
            "HUH ",
            "HEH ",
            "H0]UHH0HM",
            "HEH}",
            "HEH}",
            "HEIH",
            "HEHEHE",
            "HEH}",
            "HEH}",
            "tnHUHEH6",
            "uEHEHEH",
            "HEH}",
            "t;HUHEIH",
            "HEHC",
            "H0]UHH@HM",
            "LE D\u0208E(HM",
            "HU En",
            "HEH}",
            "tJ}(",
            "HEHHE",
            "HEH}",
            "HEHHEZ",
            "H@]UHM",
            "]UHM",
            "]UHH",
            "HEHEH",
            "HEHE",
            "HE@Tu",
            "HE@T",
            "HE@TA",
            "HEHE",
            "HUIIH",
            "HEHE",
            "LMHUHE",
            "HMHL$8LT$0D$(",
            "HEHE@",
            "HEHX",
            "t8HUHEIHU",
            "QHE@T:E\u0303}",
            "t)HE",
            "HEU\u0309PTH",
            ")\u0209EHE",
            ")\u0209E\u010bE\u0105y",
            "@ HE",
            "@ UHE@",
            "UHE@",
            "~%HE@",
            "UHE@",
            "UHE@",
            "9u\"UHE@",
            "UHEP",
            "UHEP",
            "UHE@",
            "UHE@",
            "9u\"UHE@",
            "UHEP",
            "UHEP",
            "t\tHM",
            "HEH:",
            "]UHHP<",
            "HEHUHEHH",
            "\u0405t$fE",
            "fE\u048bUHEHH",
            ",HP]UHSH8",
            "HH)HH",
            "HEHEH",
            "HH)HH",
            "HEHEH\u8953",
            "HH)HH",
            "HEHEH@(",
            "HEH~",
            "HE@h",
            "HH)HH",
            "HEHEH@(",
            "HEH\u0192",
            "9E|H",
            "HH)HH",
            "HEHEHp",
            "HH)HH",
            "HEHEH)",
            "H8[]UHH H",
            "H ]UHH L",
            "H ]UHH M",
            "<H ]UHH0HM",
            "HEH}",
            "H\u8bc7HE",
            "H0]UHH0HM",
            "H\u8f87t}}",
            ";E|_}",
            "9|E}",
            "HEHEH",
            "H\u0686HE",
            "HGHEH0]UHH HM",
            "H ]UHH HM",
            "H ]UHH HM",
            "H\u8809H}",
            "HYH ]UHSH8HM",
            "<H9t ",
            "HHEHEH",
            "HVUUUUUUUHHHH?HH)HHEHE",
            ")HH;E~",
            "H8[]UHH HM",
            "t-HE",
            "H ]UHSHHHM",
            "H\\$(HD$ ",
            "H\\HM",
            "HDHEHE",
            "\t\t\u0409EE",
            "\t\tHE",
            "HH[]UHWVH0HM",
            "HHHHH",
            "Ht!HE",
            "Ht!HE",
            "Ht!HE",
            "HtFHE",
            "HEHEH",
            "HH0^_]UHH0HM",
            "\u0168HEHEHU",
            "HEH0]UHH0HM",
            "HEHE\u0180",
            "HEH0]UHH@HE",
            "HEHtOHEH}t?HEH?HEHHEHEH#H",
            "3HEHEH}",
            "HEH@",
            "HEH}",
            "HEH{a",
            "EH@]UHH HM",
            "HAHHM",
            "u4HE",
            "H ]UHSHhHM",
            "HEHE",
            "E\u050bE;Ev",
            "E\u0509E}",
            "HE\u060b@Pt9HE\u060b@P;Et-HE\u060b@P",
            "EAAH",
            "tRHE\u060b@P",
            "HE\u060b@P;Ety",
            "HU\u060bRP\u044bUD$ AAH",
            "9Et8",
            "HU\u060bRP\u044bUD$ AAH",
            "@O8t:HE",
            "HttE",
            "H~HEHp",
            ",E\u040bE\u0403",
            ";Er\tE",
            "E)EHE",
            "E\u020bEHx",
            "EHM\u020bUT$ f",
            "(IIH",
            "t^\u8a06H;EtSHE",
            "Hh[]UHH HM",
            "H ]UHH HM",
            "tPHE",
            "H ]UHH HM",
            "J8HU",
            "{H ]UHH HM",
            ",H ]UHH",
            "LE HE HEHEU",
            "]UHHPHM",
            "HEHE",
            "HB(HE",
            "LH(HEL",
            "HL$8D$0",
            "HMHL$(D$ ",
            "HP]UHWSH",
            "HEHEI",
            "LHHHEHU",
            "t@HEH ",
            "Hu/HE",
            "HEHP HE",
            "HEHM",
            "<HUHB@H",
            "HUBH",
            "HEH@",
            "HEHPHHEHP(HE@0",
            "HHHD",
            "HHHD",
            "HUHP",
            "H@ HH",
            "HEHP",
            "HUHP",
            "HEHHHEHE@4Ey7EEE",
            "EHEH",
            "EHE@4HUH",
            "HMH\t",
            "HEP4E)EHE@4)EHE@4",
            "1EHE@4)EE)EE",
            "1EHE@4+UHEP4HE@4+UHEP4HE@4U",
            "1HEP4E)EHE@4)EHE@4",
            "1EHE@4)EE)EE",
            "1EHE@4+UHEP4HE@4+UHEP4HE@4U",
            "1HEP4E)EHE@4)EHE@4",
            "1EHE@4)EE)EE",
            "1EHE@4+UHEP4HE@4+UHEP4HE@4U",
            "1HEP4HE",
            "HE@4P",
            "HEP4}",
            "HE@4HUH",
            "HEP4HE@4HUH\t",
            "HEP4HE@4HUH",
            "HEP4HEH",
            "EHEH",
            "EHEH",
            "EHEH",
            "EHEH",
            "EHEH",
            "EHEH",
            "EE)EHE@4)EHE@4",
            "1EHE@4)EE)EE",
            "1EHE@4+UHEP4HE@4+UHEP4HE@4U",
            "1HEP4E)EHE@4)EHE@4",
            "1EHE@4)EE)EE",
            "1EHE@4+UHEP4HE@4+UHEP4HE@4U",
            "1HEP4E)EHE@4)EHE@4",
            "1EHE@4)EE)EE",
            "1EHE@4+UHEP4HE@4+UHEP4HE@4U",
            "1HEP4HEP4H",
            "!\u0409EH",
            "HEHP HEH@",
            "Ht\"H",
            "HUHP",
            "HEH}",
            "HEI\u043a",
            "AHEH",
            "B(HEH",
            "HEH@ HEHE\u020bP4HEH",
            "!\u0409EEH",
            "EHEHE@",
            "@(9v;HEH",
            "P,HE@",
            "lHEP",
            "HEH@",
            "HEHP HEH",
            "HUHP",
            "HEHUH",
            "HEHEH}",
            "H,HEH",
            "B0HEH",
            "HxHEDHHHE",
            "HxDL$8LMLL$0LD$(HL$ MMH*",
            "HEH&",
            "HEHxHP(",
            "HyHUHB",
            "HEH@",
            "HEH0SHEH@",
            "HEHP8HEHUH@",
            "HEH@8Ht",
            "HEHy",
            "[_]UHSHXHM",
            "HEHEH",
            "HEHE",
            "x[HE",
            "yDHE",
            "LH(HEL",
            "HL$8D$0",
            "HMHL$(D$ ",
            "HX[]UHH HM",
            "H@(H",
            "H\u8590HM",
            "H ]UWS0",
            "H)H$",
            "HEH8",
            "HEHEHH",
            "HdHp",
            "HRH ",
            "HtlH ",
            "Ht#H ",
            "H@(Ht H ",
            "HP8H ",
            "HMHL$ HH",
            ")\u0209E,",
            "EHEH",
            "uwH ",
            "HP8H",
            "HH9t",
            "EHH9v",
            "HT$ HH",
            "H@(HX",
            "HMHHHH",
            "tNH`",
            "HP@H`",
            "HP@H`",
            "tIH`",
            "HH9uL(",
            "HP8H",
            "{HUHx",
            "HL$ A",
            "L@0H ",
            "t=H ",
            "H[t#H ",
            "HtvH@",
            "HmH@",
            "HP8H@",
            "HtH ",
            "HHUHx",
            "[_]UHH@M",
            "UHcH",
            "HEHE@",
            "HEHE",
            "9E|H}",
            "u.DE",
            "HEH@]UHSHhHM",
            "HUHH",
            "H)HD$ H",
            "HUHH",
            "H)HD$ H",
            "HU\u020bEH",
            "9E|HE",
            "HEHEHE,",
            "HEH}",
            "HEH}",
            "HU\u020bEH",
            "HU\u020bEH",
            "HEUHc\u048bM\u0709",
            "<HU\u020bEH",
            "UHcH",
            "HUMHc\u024b",
            "9E|E",
            "gHU\u020bEH",
            "UHcH",
            ";Eu0H",
            "UHcH",
            "HU\u020bEH",
            "9E|E",
            "HHe[]UHSHhHH",
            "HUHH",
            "H)HD$0H",
            "HUHH",
            "H)HD$0H",
            "*HU\u020bEH",
            "HU\u020bEH",
            "HU\u060bEH",
            "9E|E",
            "UHcH",
            "UHcH",
            "9}\\H",
            "UHcH",
            "t1HU\u020bEH",
            "UHcH",
            "HU\u020bEH",
            "HU\u060bEH",
            "UHcH",
            "UED$ AAH",
            "UHcH",
            "HU\u060bEH",
            ">HHe[]UHSHHHM",
            "tlHE",
            "UHcH",
            "HEHE\u040bP",
            "HE\u040b@",
            "HE\u0409P",
            "9E|HE",
            "H\u04c9HHH",
            "<EBHEHE",
            "HE\u040b@H",
            "EvEEE",
            "UHcH",
            "HEHE",
            "HE\u040b@H",
            "u\tEE",
            "UHcH",
            "HEHPBHEHC_HEH;Et@HE@P",
            "hVHH[]UHH HM",
            "tlHE",
            "u^HE",
            "tLHE",
            "|H ]UHH H",
            "HiUH",
            "UH ]UHHPE",
            "H%UH",
            "HEH8",
            "HuOHEH@",
            "Hu?H",
            "H@ HH",
            "H;Eu2H",
            "HUH8",
            "HR H",
            "HEH8",
            "Ht1HEH8",
            "H@ H",
            "HEH@",
            "HEH@",
            "HEH@",
            "Ht)HEHP",
            "H@ H",
            "HEH@",
            "HEP4H",
            "!\u0409EH",
            "H;Eu&H",
            "HEH@ H",
            "HEH@",
            "HEH@",
            "HUHR HP HEH@ Ht",
            "HEH@ HUHR",
            "HEHaE",
            "HEHEH}",
            "HEH@",
            "HEH}",
            "HnR}",
            "HP]UHHPHM",
            "DE E",
            "E @B",
            "HE\u040bU\u040bE\u0509UEHE",
            "HEUE)HE",
            "UE)HE",
            "y1HE",
            "EHP]UHSHHrZHEHEHPBHEHYE",
            "HH)HH",
            "HEHE\u0180",
            "9E|E",
            "HH)HH",
            "HEHEH",
            "9E|HH[]UHH@HM",
            "HEHU",
            "HWNHE ",
            "H@]UHHPHM",
            "HEH!wH",
            "HEHE\u043a ",
            "HEH-",
            "HP]UHWHhHM",
            "HEEE\u0739y7E\u0709EHE",
            "HMHHHH",
            "EHEH",
            "EHEH",
            "HUH\t",
            "EE)EE)EE",
            "1EE)E\u070bE)E\u070bE",
            "1E\u070bE)EE)EE",
            "1EE)EE)EE",
            "1EE)E\u070bE)E\u070bE",
            "1E\u070bE)EE)EE",
            "1EE)EE)EE",
            "1EE)E\u070bE)E\u070bE",
            "1E\u070bE)EE)EE",
            "1EHE",
            "HMHHHH",
            "EHEH\t",
            "EHEH",
            "EHEH",
            "EHEH",
            "EHEH",
            "EHEH",
            "EHEH",
            "EHEH",
            "EHEH",
            "EE)EE)EE",
            "1EE)E\u070bE)E\u070bE",
            "1E\u070bE)EE)EE",
            "1EE)EE)EE",
            "1EE)E\u070bE)E\u070bE",
            "1E\u070bE)EE)EE",
            "1EE)EE)EE",
            "1EE)E\u070bE)E\u070bE",
            "1E\u070bE)EE)EE",
            "H@(@",
            "#EEH",
            "H@(H",
            "Ht9H",
            "H@(H",
            "H@(H@ HH",
            "HE@XAHE",
            "HMHHHH",
            "I9uBHE",
            "HMHHHHPHEH@PIHU",
            "tCHEH@HHt#HEHPHH",
            "H@(H@ HH",
            "Hh_]UHHM",
            "P`HE",
            "@`)]UHHPHM",
            "HEHG",
            "HEHFf",
            ",HE#",
            ",HEH",
            "H1EHEHEHEA",
            "Hu|HP]UWVSH(",
            "H@(@",
            "H(HEP",
            "HEPHEhHEP",
            "HEhHE`Ex",
            "HE`H@",
            "HE`HP",
            "H@(H@ H",
            "HE`H}`",
            ";E|rE|Et",
            "uCHE`HEXHE`H@",
            "HE`HP",
            "H@(H@ H",
            "HE`mt",
            "uCHEhHEXHEhH@",
            "HEhHP",
            "H@(H@ H",
            "HEhmx",
            "H@(H@ HHH",
            "H@(H@ HH",
            "EhHW",
            "@HEhHEXHEhH@",
            "HEhHP",
            "H@(H@ H",
            "HEhmx",
            ">HE`HEXHE`H@",
            "HE`HP",
            "H@(H@ H",
            "HE`mt",
            "t.H}X",
            "H@(H@ HH",
            "HUHHB",
            "HEXHEPH}H",
            "H@(H@ HH",
            "HUXHB",
            "HEXHEH}x",
            "\"HE`HEhH}h",
            "HEHH@",
            "H@(HUHHP",
            "H@(H@ HH",
            "H@0HuFHE",
            "H@8Hu9H",
            "H@(H",
            "H@(H",
            "H(HE",
            "H@(HP",
            "H@(H@ HH",
            "H@(HU",
            "HJ0H",
            "HR(HR H",
            "H@0Ht(HE",
            "HP0H",
            "H@(H@ H",
            "H@8HB",
            "H@8H",
            "Ht&HE",
            "H@(H@ H",
            "H@(@",
            "!\u0409EH",
            "H@(H",
            "H@(H",
            "H@(H",
            "H@ H",
            "HR HP HE",
            "H@ Ht",
            "H@ HU",
            "H@(P",
            "HPPHE",
            "HMHHHH",
            "HC(H",
            "H@(Hu",
            "H@(HA@",
            "HHHD",
            "H@(H",
            "H(HP",
            "H@(@",
            "H@(@",
            "H@(H@ (",
            "H@(H",
            "H@(H",
            "HHHD",
            "H@(@8",
            "H@(H@",
            "H@(HP",
            "H@(H@ HH",
            "HP0H",
            "H@(HU",
            "H(HP",
            "H@(P",
            "HP(HE",
            "HP(HE",
            "HE0HE",
            "@\\E@y7E@EDHE",
            "HMHHHH",
            "HU0H",
            "HE0H",
            "HE0H",
            "EDHE0H",
            "HU0H",
            "HE0H",
            "HE0H",
            "E@HE",
            "@\\HU0H",
            "HM0H\t",
            "HU0H",
            "HU0H",
            "P\\E@)EDHE",
            "@\\)EDHE",
            "1EDHE",
            "@\\)E@ED)E@ED",
            "1E@HE",
            "@\\+UDHE",
            "P\\HE",
            "@\\+U@HE",
            "P\\HE",
            "@\\U@",
            "P\\E@)EDHE",
            "@\\)EDHE",
            "1EDHE",
            "@\\)E@ED)E@ED",
            "1E@HE",
            "@\\+UDHE",
            "P\\HE",
            "@\\+U@HE",
            "P\\HE",
            "@\\U@",
            "P\\E@)EDHE",
            "@\\)EDHE",
            "1EDHE",
            "@\\)E@ED)E@ED",
            "1E@HE",
            "@\\+UDHE",
            "P\\HE",
            "@\\+U@HE",
            "P\\HE",
            "@\\U@",
            "P\\HE0",
            "D@\\HE",
            "HMHHHH",
            "P\\}<",
            "@\\HU0H",
            "P\\HE",
            "@\\HU0H\t",
            "P\\HE",
            "@\\HU0H",
            "P\\HE0H",
            "E@HE0H",
            "E@HE0H",
            "E@HE0H",
            "E@HE0H",
            "EDHE0H",
            "EDHE0H",
            "EDHE0",
            "EDE@)EDHE",
            "@\\)EDHE",
            "1EDHE",
            "@\\)E@ED)E@ED",
            "1E@HE",
            "@\\+UDHE",
            "P\\HE",
            "@\\+U@HE",
            "P\\HE",
            "@\\U@",
            "P\\E@)EDHE",
            "@\\)EDHE",
            "1EDHE",
            "@\\)E@ED)E@ED",
            "1E@HE",
            "@\\+UDHE",
            "P\\HE",
            "@\\+U@HE",
            "P\\HE",
            "@\\U@",
            "P\\E@)EDHE",
            "@\\)EDHE",
            "1EDHE",
            "@\\)E@ED)E@ED",
            "1E@HE",
            "@\\+UDHE",
            "P\\HE",
            "@\\+U@HE",
            "P\\HE",
            "@\\U@",
            "P\\HE",
            "H@(@",
            "!\u0409EH",
            "H@(H",
            "H@(H",
            "HPHHE",
            "H@(H",
            "Ht'H",
            "H@(H",
            "H(HP",
            "H@(H",
            "H@(H",
            "H@(H",
            "H@(@4",
            "H@(@",
            "HEH}",
            "H@(@",
            "HEI\u043a",
            "HP(HE",
            "H@(D@",
            "H@(@",
            "H@(H",
            "H@(@",
            "B(HE",
            "H@(@,",
            "H@(H",
            "HE H@ HEHE P4HE",
            "H@(@",
            "!\u0409EEH",
            "EHEHE\u060b@",
            "HE\u0609P",
            "HE\u060bP",
            "H@(@(9v7HE",
            "H@(P,",
            "P,HE\u060b@",
            "HR(R(U",
            "uHE\u0609P",
            "HE H@",
            "HE HP HEH",
            "HU HP",
            "HEHU H",
            "HEHE H} ",
            "H@(@",
            "H@(H",
            "H@(HU",
            "HR(R",
            "H@(P",
            "H@(HUH",
            "HP(HE",
            "H@(H,HE",
            "H@(@",
            "H@(@0",
            "B0HE",
            "H@(@0",
            "H@(@4",
            "@P;E",
            "8>HEH;]u",
            "HT$ AIH",
            "<H9u<H",
            "[^_]UHHM",
            ")]UHHM",
            "]UHWSH",
            "H2HM",
            "HHHD",
            "H@ 0",
            "HHHD",
            "H@ HH",
            "HEHE",
            "Ey7EEE",
            "EHEH",
            "HMH\t",
            "E)EHE",
            ")EHE",
            "1EHE",
            ")EE)EE",
            "1EHE",
            "+UHE",
            "+UHE",
            "E)EHE",
            ")EHE",
            "1EHE",
            ")EE)EE",
            "1EHE",
            "+UHE",
            "+UHE",
            "E)EHE",
            ")EHE",
            "1EHE",
            ")EE)EE",
            "1EHE",
            "+UHE",
            "+UHE",
            "HUH\t",
            "EHEH",
            "EHEH",
            "EHEH",
            "EHEH",
            "EHEH",
            "EHEH",
            "EE)EHE",
            ")EHE",
            "1EHE",
            ")EE)EE",
            "1EHE",
            "+UHE",
            "+UHE",
            "E)EHE",
            ")EHE",
            "1EHE",
            ")EE)EE",
            "1EHE",
            "+UHE",
            "+UHE",
            "E)EHE",
            ")EHE",
            "1EHE",
            ")EE)EE",
            "1EHE",
            "+UHE",
            "+UHE",
            "!\u0409EH",
            "Ht-H",
            "HxHx",
            "HxI\u043a",
            "B(HE",
            "HEH@ HpHE\u020bP4HE",
            "!\u0409llH",
            "xH`H`@",
            "@(9vIHE",
            "P,H`@",
            "\\H`P",
            "HEH@",
            "HEHP H`H",
            "HUHP",
            "H`HUH",
            "HpHEH}",
            "H,HE",
            "B0HE",
            "HEHEHE",
            "HEHEE",
            "HEH@",
            "HEHP",
            "H@ H",
            "HEH}",
            "E;ErEE",
            "uFHEHEHEH@",
            "HEHP",
            "H@ H",
            "uFHEHEHEH@",
            "HEHP",
            "H@ H",
            "H@ HHH",
            "H@ HH",
            "CHEHEHEH@",
            "HEHP",
            "H@ H",
            "AHEHEHEH@",
            "HEHP",
            "H@ H",
            "t1H}",
            "H@ HH",
            "HUHB",
            "HEHEH}",
            "H@ HH",
            "HUHB",
            "HEHE}",
            "HEHEH}",
            "HEH@",
            "HUHP",
            "H@ HH",
            "H HH",
            "[_]UHH@HM",
            "HEH@ ",
            "HEH}",
            "POHE\u8210(",
            "HEHHE",
            "*HEH@ H\"",
            "H@]UHH HM",
            "POHE",
            "XH ]UHH0HM",
            "HEHEH`",
            "EHEHu`",
            "EH0]UHH@HM",
            "t2HE",
            "tlHE",
            "H@`Ht\tH",
            "HlHE",
            "0lHE",
            "H@(HHU",
            "H@0HHU",
            "tNHE",
            "EHEHHU",
            "6kHE",
            "HEH}",
            "tHHE",
            "YHEHx",
            "EHEf",
            "ujHE",
            "]jHE",
            "Ej5OH@]UHH",
            "UHcH",
            "HEHEP",
            "PHEP",
            "9E|HE",
            ";E}OH",
            "UHcH",
            "MHcH",
            "]UHH0H",
            "/HEH@",
            "HEHEH",
            "HEHu\\",
            "HEHEH}",
            "uH0]UHWHXHM",
            "HMHHHH",
            "HEHEHE",
            "HEHEHUH",
            "HEHP",
            "HEHX_]UHWHxHM",
            "UHcH",
            "IIHM",
            "UHcH",
            "Ht?H",
            "UHcH",
            "HQHH",
            "IHHM",
            "UHcH",
            "IHHM",
            "UHcH",
            "IHHM",
            "UHcH",
            "AHHM",
            "UHcH",
            "@Dt0H",
            "UHcH",
            "AHHM",
            "oEHHiP",
            "EHHiP",
            "EIHHM",
            "9E|H",
            "GEHHiP",
            "AIHM",
            "9E|H",
            "JEHHiP",
            "AIHM",
            "9E|H",
            "EHHiP",
            "FEHHiP",
            "AIHM",
            "9E|H",
            "JEHHiP",
            "AIHM",
            "9E|H",
            "JEHHiP",
            "AIHM",
            "9E|H",
            "cEHHiP",
            "EHHiP",
            "L$ EIHM",
            "9E|H",
            "bEHHiP",
            "EHHiP",
            "L$ EIHM",
            "9E|H",
            "GEHHiP",
            "AIHM",
            "9E|H",
            "GEHHiP",
            "AIHM",
            "9E|H",
            "FEHHiP",
            "AIHM",
            "9E|H",
            "kEHHiP",
            "EHUILE",
            "(IIHHM",
            "9E|H",
            "FEHHiP",
            "AIHM",
            "9E|H",
            "GEHHiP",
            "AIHM",
            "9E|H",
            "GEHHiP",
            "AIHM",
            "9E|HU",
            "tpHEHP",
            "HEHP",
            "H9uHHEH@(",
            "HEHH",
            "HEHP",
            "IHHM",
            "HEHP",
            "H9t<HEHP",
            "H9t(HEHP",
            "HEHP",
            "H9uPHEHP0H",
            "H9t<HEH@(",
            "x.HEH@(",
            "HEHH",
            "AIHHM",
            "HEH}",
            "HE8HE@",
            "AHHM",
            "AHHM",
            "HEHEHEH",
            "HMHHHH",
            "</u2HEHEH",
            "HMHHHH",
            "HEHHH",
            "IHHM",
            "AAHHM",
            "AAHHM",
            "Ht6H",
            "IHHM",
            "EHHiP",
            "9E}LE",
            "8EHHiP",
            "UAHHM",
            "9E|H",
            "Ht(H",
            "H?HH",
            "IHHM",
            "IHHM",
            "Ht(H",
            "IHHM",
            "Ht(H",
            "IHHM",
            "Ht(H",
            "HaHH",
            "IHHM",
            "Hx_]UHH0H",
            "UHcH",
            "HEHEH\u01c0X",
            "9E|H0]UHH@",
            "UHcH",
            "HEHE\u01c0",
            "HEH\u01c0H",
            "HP(HE",
            "HP0HE",
            "HP8HE",
            "HE\u01c0`",
            "HE\u01c0t",
            "HE\u01c0l",
            "HE\u01c0p",
            "HEH\u01c0",
            "HEH\u01c0",
            "HEH\u01c0",
            "HEH\u01c0",
            "HEH\u01c0",
            "HEH\u01c0",
            "UHcH",
            "HEHE",
            "HEH\u01c0",
            "HE\u01c0 ",
            "HE\u01c0$",
            "HE\u01c0(",
            "HE\u01c0<",
            "HE\u01c04",
            "HE\u01c08",
            "H@]UHSHX",
            "UHcH",
            "HEHE@",
            "H;Eu",
            "HE@H",
            "(QHE@H",
            "PfHEH@`Ht HEPTHE@p9t",
            "P9HE@T",
            "GPHEH",
            "II\u0409H",
            "FOY4EHEA",
            "EHEA",
            "SE\u0703}",
            "UHcH",
            "H;Eu",
            "H;Eu",
            "UNsHEHOHEHjHEA",
            "\u0405uiH",
            "UHcH",
            "HEHEH",
            "OHEH\u8a27HEA",
            "<MZH",
            "UHcH",
            "HEHEHN",
            "\tH;E",
            "%HEA",
            "SE\u0703}",
            "UHcH",
            "HEHEHMHEX",
            "HEHLHEA",
            "6U\u020bEHcH",
            "E\u020bE\u0203",
            "gE\u0703}",
            "pKE\u0709",
            "RHEA",
            "\u0405u]H",
            "UHcH",
            "HEHEHHEA",
            "HEHUHEH",
            "EHEH~=",
            "t)JtFZH",
            "PEA\u0409H",
            "HX[]UH",
            "]UHSHh",
            "\\$@L\\$8LD$0HL$(HT$ MHH",
            "MH`-EHEA",
            "GHEA",
            "hG$HEA",
            "F.FHEA",
            "hF$HEA",
            "EHEA",
            "qE-HEA",
            "DHEA",
            "\u0405uQH",
            "|D8E",
            "CHEA",
            "Hh[]UHWH",
            "HMHHHH",
            "_]UH",
            "T$ EA\u0209H",
            "jB}'7",
            "\u0405uIH",
            "\u0405uIH",
            ",AVL",
            "\u0405uIH",
            "\u0405uIH",
            "R@|L",
            "HEIH",
            "HEHkl",
            "p?$7",
            ">$H8",
            "\u0405uIH",
            "]UHH0HM",
            "#EEdtqd",
            "(PtqP",
            "Dt]Gtv0",
            "Qt?St]!",
            "qt0q",
            "gtSpt:",
            "\u0289)\u0449\u028b",
            "!tPE",
            "9E|H",
            "H0]UHHPHM",
            "HEHEHH",
            "HEHEHEHEHEHH",
            "HEH@",
            "HP]UHSH(HM",
            "H@(\u01c0",
            "H([]UHH HM",
            "HBpH ]UAUATWVSHh",
            "HIH0",
            "H)HD$`H",
            "H)HD$`H",
            "H)HD$`H",
            "HH)HH",
            "HH)HH",
            "HH)HH",
            "HH)HH",
            "H@(Hx",
            "HUHS\u395b HEHHH",
            "D$ ID ",
            "H@(H",
            "H@(H@PH",
            "H@(H`",
            "HUH)",
            "H0H)",
            "HEIH",
            "H|$Xt$P\\$HD\\$@DT$8LL$0LD$(HL$ EIH",
            "H0H%",
            "[^_A\\A]]UHH@HM",
            "P\\HE",
            "PXHE",
            "@`)\u0209EUHE",
            "@d)\u0209EEy",
            "9|4HE",
            "HHPHE",
            "HUI\u0209CHE",
            "HUHP`H@]UHH@HM",
            "LE LM(HE(H@@HELEHM HE",
            "HT$(D$ ",
            "MIHHM",
            "4H@]UWVSH",
            "HUHh",
            "u'EHUH\\IAH",
            "v<H`",
            "D$ AAH",
            "t+H`",
            "Ht=H",
            "H@ HH",
            "u!H(",
            "H@(HUA",
            "tMH(",
            "H@ Ht(H(",
            "HP H",
            "H@ HH",
            "HuGH(",
            "Hu7H",
            "H@ HH",
            "HR H",
            "Ht-H(",
            "H@ H",
            "Ht+H",
            "H@ H",
            "H@ H",
            "HR HP H",
            "H@ Ht",
            "H@ H",
            "u\"H`",
            "MIHH(",
            "H@@H,H(",
            "[^_]UHH HM",
            "H ]UHH`HM",
            "HEH@@H",
            "HEH@",
            "HuDHEH@",
            "Hu7H",
            "HEHEH",
            "H@ HH",
            "H;Eu'H",
            "HUHJ",
            "HR H",
            "HEH@",
            "Ht'HEHP",
            "H@ H",
            "HEH@",
            "HEH@",
            "HEH@",
            "Ht%HEHP",
            "H@ H",
            "HEH@",
            "HE\u060bP4H",
            "!\u0409EH",
            "H;Eu\"H",
            "HEH@ H",
            "HEH@",
            "HEH@",
            "HUHR HP HEH@ Ht",
            "HEH@ HUHR",
            "HEH@@HEHEHH",
            "EHEH@@HHEH",
            "HEHEH}",
            "HEH@",
            "HEH}",
            "EAAH",
            "XEHE",
            "H`]UHHPHM",
            "HEH8",
            "HuOHEH@",
            "Hu?H",
            "H@ HH",
            "H;Eu2H",
            "HUH8",
            "HR H",
            "HEH8",
            "Ht1HEH8",
            "H@ H",
            "HEH@",
            "HEH@",
            "HEH@",
            "Ht)HEHP",
            "H@ H",
            "HEH@",
            "HEP4H",
            "!\u0409EH",
            "H;Eu&H",
            "HEH@ H",
            "HEH@",
            "HEH@",
            "HUHR HP HEH@ Ht",
            "HEH@ HUHR",
            "HEHE",
            "HEHEH}",
            "HEH@",
            "HEH}",
            "HHP]UHSH8HM",
            "MHEHEH;E",
            "HEH@XHu",
            "t:HE",
            "H8[]UHH HM",
            "u=HE",
            "HAHHM",
            "+t&HE",
            "H ]US",
            "H)H$",
            "HEHEHH",
            "w\u040bE;",
            "u,E=",
            "HT\u020bE",
            "HL$ A",
            "H6H;",
            "uUrwH",
            "[]UHH HM",
            "H ]UHH HM",
            "H ]UHSH",
            "HEH}",
            "UHEA",
            "H/HEHEHU",
            "LMHED$@",
            "HL$8HMHL$0D$(",
            "HEHE",
            "HEHH",
            "ttHE",
            "HD$ IAH",
            "Hu!HE",
            "HEHH}",
            "HEH\u813dHE",
            "t\tHM",
            "HEH}",
            "UHE\u0609",
            "HUHEIHHM",
            "HEHU",
            "THE\u063a",
            "H'HEH*H",
            "HH)HH",
            "H@ HUH",
            "HEHBHE",
            "@T;Euk",
            "HEH%HE",
            "E-EHE",
            "UPT}",
            "HEHc",
            "UPTHE",
            "E!-AIH",
            "H@`H",
            "HEHp",
            "HEHp",
            "HEH}",
            "taHEH@",
            "HEH@",
            "HB`HE",
            "H@`Hu",
            "H@XHtR",
            "tGHE",
            "H@XH6",
            "HB`HE",
            "H@`Hu",
            "E+E}",
            "UPTHEH",
            "HEHH",
            "[]UHH0H",
            "BEH0]UHSH(HM",
            "u4HE",
            "e)HE",
            "H([]UHHPHE",
            "HJ HH",
            "9E~sH",
            "HE8HEH\u824a",
            "u;HEHEH}",
            "HEH@",
            "HEH}",
            "HEH8",
            "HuOHEH@",
            "Hu?H",
            "H@ HH",
            "H;Eu2H",
            "HUH8",
            "HR H",
            "HEH8",
            "Ht1HEH8",
            "H@ H",
            "HEH@",
            "HEH@",
            "HEH@",
            "Ht)HEHP",
            "H@ H",
            "HEH@",
            "HEP4H",
            "!\u0409EH",
            "H;Eu&H",
            "HEH@ H",
            "HEH@",
            "HEH@",
            "HUHR HP HEH@ Ht",
            "HEH@ HUHR",
            "HEHt",
            "H HH",
            "HHEHP]UHSHHHM",
            "6HE@H",
            "HEH\u0159HM",
            "6HEHM",
            "HH[]UHH@HM",
            "DE HUE I\u0409HM",
            "HEI\u043a ",
            "H@]UHH@HM",
            ",HE(",
            ",HEH",
            "H1EHEHEHE",
            "HEHEH",
            "HEHE",
            "\t\t\u0409HH HEH ",
            "HEH f",
            "HEH ",
            "HEH ",
            "D\t\t\u0209H\tHEH",
            "t.HE",
            "H@]UHHPHM",
            "(HHE",
            "t:HE\u043a ",
            "HEHEIH",
            "HEHF",
            "HP]USH",
            "HEHEH",
            "HU@H",
            "HE@H",
            "HEA ",
            "HHP HEH",
            "HU@HA@",
            "HE@H",
            "LHHExHE@HEp\u01c5",
            "~HE@ ",
            "HEhH",
            "HE`H}`",
            "HE`LL$@L",
            "LL$8LD$0HL$(HMhHL$ MMH",
            "H=HEhIH",
            "HE`IH",
            "HD$ IIH",
            "HEhH",
            "HU`A",
            "HE`H",
            "[]UHH@HM",
            "H@(HEHEH",
            "HEHM",
            "H@(H@XHE0HE",
            "u+HEH",
            "HEH@XHEH}",
            "H@]UHH`HM",
            "H@(HEHEH",
            "HEHE",
            "HEH@IH",
            "7HEHE",
            "tHEHP@EAIH",
            "HEU\uc250",
            "H@(H@XHE0HE",
            "u+HEH",
            "HHEH@XHEH}",
            "HE\u01c04",
            "UHE\u060b@",
            ")\u0209EUHE\u060b@ )\u0209E\u010bE\u0105y",
            "E\u010bUHE\u060b@",
            "HE\u0609P",
            "UHE\u060b@",
            "HE\u0609P",
            "HE\u060b@",
            "~%HE\u060b@",
            "HE\u0609P",
            "HE\u060b@",
            "HE\u0609P",
            "UHE\u060b@",
            "UHE\u060b@",
            "UHE\u060b@",
            "HEHUHP",
            "UHE\u060b@",
            "UHE\u060b@",
            "UHE\u060b@",
            "HEHUHP",
            "HE\u040bUHE\u040b@",
            "HE\u0409P",
            "UHE\u040b@",
            "HE\u0409P",
            "HE\u040b@",
            "~%HE\u040b@",
            "HE\u0409P",
            "HE\u040b@",
            "HE\u0409P",
            "UHE\u040b@",
            "UHE\u040b@",
            "UHE\u040b@",
            "HEHUHP",
            "UHE\u040b@",
            "UHE\u040b@",
            "UHE\u040b@",
            "HEHUHP",
            "HEH`]UHH0HM",
            "(HEH}",
            "H0]UHH0HM",
            "HEHE",
            "H0]UHH0HM",
            "DE HE",
            "HLHEHEU",
            "t2HE",
            "E HM",
            "H0]UHH@HM",
            "DE HE",
            "HLHEHE",
            "HEU ",
            "ZU HE",
            "H@(HEHEH@IH",
            "H@(H@",
            "Ht<HE",
            "H@(H@",
            "HUHE",
            "H@]UHH HM",
            "LE HE",
            "H+E H9s",
            "H9E w",
            "H ]UHH0HM",
            "HPxHM",
            "\u0339H0]UHH0HM",
            "H@(H@",
            "HEHM",
            "7EAH",
            "\u0410H0]UHH HM",
            "@huHM",
            "FH ]UHH0HM",
            "LE LM(HE(U",
            "HU(HE LE",
            "HE(H\"\"",
            "HE(HU H",
            "HU0HE(H",
            "HU8HE(H",
            "HE @H",
            "HE(\u0180",
            "HE(\u0180",
            "HE(\u0180",
            "LHE(Hs",
            "HE(H\\\u806fH;E t%",
            "HE @H",
            "HE(H<?HE(HXHE(H",
            "HE(HeH",
            "H0]UHH",
            "H@`Ht",
            "UHcH",
            "HEHE",
            "HEH@`Ht",
            "]UHH HM",
            "t3SH",
            "@H;E",
            "uH ]UHH0HM",
            "LE HE",
            "HEHE H",
            "HE P",
            "HEHEHUHPxHEH0]UHH",
            "HEHE",
            "HEH}",
            "HEH@HEH}",
            "uBHEH",
            "xHEHHEH}",
            "t2HEH",
            "HEH@`HEHEH;Eu+HE@p",
            "HUIIH",
            "<HE@p",
            "HMHD$ IIH",
            "HEHEHHhHEPpHEA",
            "HEHEHUH",
            "HEHJHE",
            "UHEA",
            "UHEL",
            "UHMHEIHH",
            "LMHUHED$@",
            "HMHL$8H|HL$0D$(",
            "HEHEH@xHE",
            "HEH4",
            "HEH}",
            "t)H}",
            "HEPL",
            "HE@L",
            "|LMLEHEHMHL$(HMHL$ HE",
            "UE)\u0203",
            "HEIH",
            "FHEH;EtYHEHHEHE",
            "t/HEH",
            ":HEHH",
            "]UHH@",
            "UHcH",
            "HEHE",
            "u4HE@N",
            "HEHEHH",
            "H@]UHH0",
            "UHcH",
            "HEHE",
            "@MuaHE",
            "@NuUHEH@`HtHHE@N",
            "HUIL",
            "dH0]UHH HM",
            "H@(Ht",
            "H@(HM",
            "\u0410H ]UHHPHM",
            "HXHE",
            "HEHEH@",
            "UHE@",
            "H\u845aHEH",
            "HEH<",
            "HEHEHEH@",
            "HEHEHP",
            "t;HE",
            "MT$ IAH",
            "HP]UHSHHHM",
            "UHcH",
            "~~HEP",
            ")\u0209EHEP",
            "HE@Ht",
            "@CuvHE",
            "@AtkUHE",
            "~SHEH",
            "Ht'HEHPAHEH\u8264t",
            "u>U\u040b",
            "UHH HM",
            "H ]UHH0HM",
            "E#HE",
            "UHcH",
            "uH0]USH",
            "E`\u8ed5DHE",
            "\u026b-tmDEl",
            "ElEl",
            "9El|H",
            "ElHH",
            "HH)HH",
            "HEXHEX@h",
            "9El|",
            "ElHH",
            "HH)HH",
            "HEPHEP@h",
            "9El|El",
            "UlHcH",
            "HEHHEH",
            "HEHH",
            "9El|El",
            "UlHcH",
            "HE@HE@H",
            "HE8HE@H@HE0HE@H@",
            "H@XHt",
            "HE@H@",
            "HPXHE@HHE@@",
            "E,HE@H",
            "HU E,|",
            "ELMLEHUE,HMHL$@HMHL$8HMHL$0HMHL$(HMHL$ /",
            "tyDUDM",
            "ZDEMUD]",
            "MHEHH]",
            "MDT$HDL$@",
            "D$8DD$0L$(T$ Ef",
            "HE@H",
            "HE0IH",
            "XHE@",
            "HE@H",
            "tHHE@",
            "t$HE0IH",
            "HE@H",
            "HU@H",
            "HE@\u01c0",
            "t3HE0IH",
            "HE8H@pH",
            "HE8HPpM",
            "HPxEh",
            ",HE@H",
            "UhHcH",
            "H@pHu",
            "HE@\u01c0",
            "HE@\u01c0",
            "HE8@8)\u0203;",
            "OHE@",
            "HE0IH",
            "HE@\u01c0",
            "HU@H",
            "HE8@8)",
            "HE@H",
            "HE8HPxHE@\u01c0",
            "HE0IH",
            "HE8H@",
            "tEHE@",
            "t6E,|",
            "2~'H",
            "HE0IH",
            "HE@H",
            "HE8@8)=X",
            "~QHE@\u01c0",
            "HE0IH",
            "HE8H@",
            "HE8@@)",
            "uaHE8H@",
            "HE@H",
            "NUH ",
            "HHEIH",
            "]UHSH",
            "\u0609EEy",
            ")\u0209EDE\u0173DB",
            ")\u0209E\u060bM",
            "\u0609E\u050bE",
            ")\u0409E\u050b",
            "M\u060bU\u070bE\u0509D$ AAH",
            "EHEHHU",
            "EHEHHU",
            "EHEf",
            "EHEf",
            "UHcH",
            "HEHEH",
            "t:HE@",
            "HEH@(HHU",
            "HEH@0HHU",
            "tSHE@",
            "*HEP",
            "EHEHHU",
            "HEH}",
            "tHHE",
            "YHEHx",
            "EHEf",
            "UHcH",
            "HEHE@<u'HEH@XHt",
            "UHcH",
            "H0HP",
            "H`H;",
            "[]UHH ",
            "\u0410H ]UHSHHM",
            "LE LM(HU",
            "t+HU HEH",
            "HH`HE",
            "HEH}",
            "t)HE",
            "HEHU",
            "UHH0HM",
            "HEH}",
            "HEH0]UHWH8HM",
            "LE LM(E",
            "HU H",
            "HU(H",
            "HU0H",
            "HMHHHL@HE",
            "HMHHHH",
            "H8_]UHWVH`\u0208E",
            "HEH}",
            "kHEH}",
            "PHEH}",
            "\u818aHEHUHEH",
            "HEHH",
            "HEHH",
            "HEH}",
            "HUHEA",
            "HEHE",
            "LMLEHEHMHL$ HE",
            "t9H}",
            "EH`^_]UHH0",
            "\u0332H0]UHH HM",
            "H ]UHWSH",
            "HEEE\u0739y7E\u0709EHE",
            "H\u01c5pH",
            "HpHHHH",
            "EHEH",
            "EHEH",
            "HUH\t",
            "EE)EE)EE",
            "1EE)E\u070bE)E\u070bE",
            "1E\u070bE)EE)EE",
            "1EE)EE)EE",
            "1EE)E\u070bE)E\u070bE",
            "1E\u070bE)EE)EE",
            "1EE)EE)EE",
            "1EE)E\u070bE)E\u070bE",
            "1E\u070bE)EE)EE",
            "1EHE",
            "H\u01c5pH",
            "HpHHHH",
            "EHEH\t",
            "EHEH",
            "EHEH",
            "EHEH",
            "EHEH",
            "EHEH",
            "EHEH",
            "EHEH",
            "EHEH",
            "EE)EE)EE",
            "1EE)E\u070bE)E\u070bE",
            "1E\u070bE)EE)EE",
            "1EE)EE)EE",
            "1EE)E\u070bE)E\u070bE",
            "1E\u070bE)EE)EE",
            "1EE)EE)EE",
            "1EE)E\u070bE)E\u070bE",
            "1E\u070bE)EE)EE",
            "#EEH",
            "Ht9H",
            "H@ HH",
            "HE@8AHE",
            "H\u01c5pH",
            "HpHHHH",
            "I9uXHE",
            "H\u01c5pH",
            "HpHHHHHHE",
            "HEH@0IH",
            "tCHEH@(Ht#HEHP(H",
            "H@ HH",
            "t$HE@",
            "HEHE",
            "HEH@",
            "HUHEHP0HEH\u01c5pH",
            "HpHHHH",
            "HEP8H",
            "HHHD",
            "HHHD",
            "HUHP",
            "H@ HH",
            "HEHP",
            "HEHP",
            "HEHEHE@<E\u0239y7E\u0209EHEH\u01c5pH",
            "HpHHHH",
            "EHEH",
            "EHE@<HUH",
            "HMH\t",
            "HEP<E)EHE@<)EHE@<",
            "1EHE@<)E\u020bE)E\u020bE",
            "1EHE@<+UHEP<HE@<+UHEP<HE@<U",
            "1HEP<E)EHE@<)EHE@<",
            "1EHE@<)E\u020bE)E\u020bE",
            "1EHE@<+UHEP<HE@<+UHEP<HE@<U",
            "1HEP<E)EHE@<)EHE@<",
            "1EHE@<)E\u020bE)E\u020bE",
            "1EHE@<+UHEP<HE@<+UHEP<HE@<U",
            "1HEP<HE",
            "HED@<HEH\u01c5pH",
            "HpHHHH",
            "HEP<}",
            "HE@<HUH",
            "HEP<HE@<HUH\t",
            "HEP<HE@<HUH",
            "HEP<HEH",
            "EHEH",
            "EHEH",
            "EHEH",
            "EHEH",
            "EHEH",
            "EHEH",
            "E\u030bE)EHE@<)EHE@<",
            "1EHE@<)E\u020bE)E\u020bE",
            "1EHE@<+UHEP<HE@<+UHEP<HE@<U",
            "1HEP<E)EHE@<)EHE@<",
            "1EHE@<)E\u020bE)E\u020bE",
            "1EHE@<+UHEP<HE@<+UHEP<HE@<U",
            "1HEP<E)EHE@<)EHE@<",
            "1EHE@<)E\u020bE)E\u020bE",
            "1EHE@<+UHEP<HE@<+UHEP<HE@<U",
            "1HEP<HEP<H",
            "!\u0409EH",
            "HEHP(HEH@ ",
            "Ht'H",
            "HEH@",
            "HEH@",
            "HEH}",
            "HEH@",
            "HEI\u043a",
            "HEHP",
            "HEH@",
            "HEH@",
            "AHEH@",
            "HEH@",
            "B(HEH@",
            "HEH@",
            "HEH@ HEHEP4HEH@",
            "!\u0409EEH",
            "EHEHE@",
            "HEH@",
            "@(9v=HEH@",
            "P,HE@",
            "HUHR",
            "|HEP",
            "HEH@",
            "HEHP HEH",
            "HUHP",
            "HEHUH",
            "HEHEH}",
            "HEH@",
            "HEH@",
            "HEH@",
            "HUHR",
            "HEH@",
            "HEH@",
            "HEHP",
            "HEH@",
            "H,HEH@",
            "HEH@",
            "B0HEH@",
            "HEH@",
            "[_]UHH HM",
            "LE HE HE",
            "H ]UWSH",
            "AHH\u8c2d",
            "H`H\u06ec",
            "HD$0H",
            "HD$0H",
            "LHEH",
            "HMHHHH",
            "LHEH",
            "HMHHHH",
            "HPPH",
            "HMHHHH",
            "HC(H",
            "H@(Hu",
            "H@(HA@",
            "HHHD",
            "H@(H",
            "H(HP",
            "H@(@",
            "H@(@",
            "H@(H@ (",
            "H@(H",
            "H@(H",
            "HHHD",
            "H@(@8",
            "H@(H@",
            "H@(HP",
            "H@(H@ HH",
            "HP0H",
            "H@(H",
            "H(HP",
            "H@(P",
            "HP(H",
            "HP(H",
            "HMHHHH",
            "D@\\H",
            "HMHHHH",
            "H@(@",
            "H@(H",
            "H@(H",
            "HPHH",
            "H@(H",
            "Ht-H",
            "H@(H",
            "H(HP",
            "H@(H",
            "H@(H",
            "H@(H",
            "H@(@4",
            "H@(@",
            "H@(@",
            "HP(H",
            "H@(D@",
            "H@(@",
            "H@(H",
            "H@(@",
            "H@(@,",
            "H@(H",
            "H@ H",
            "H@(@",
            "H@(@(9vCH",
            "H@(P,",
            "HR(R(U",
            "HP H",
            "H@(@",
            "H@(H",
            "H@(H",
            "HR(R",
            "H@(P",
            "H@(H",
            "HP(H",
            "H@(H,H",
            "H@(@",
            "H@(@0",
            "H@(@0",
            "H@(@4",
            "HHiP",
            "]HH0",
            "t(uSH",
            "LHEH",
            "HMHHHH",
            "Hu%H",
            "HExHExH@0HtDHExH@",
            "HExH@0HMxLA@",
            "HT$(HD$ MAH",
            "5HExH@",
            "HUxHJ@",
            "HD$ IAH",
            "H9u3",
            "Dpk\u01c5",
            "HEpHEp\u01c0t",
            "HEp\u01c0",
            "HEpH",
            "HEpH",
            "HEpH",
            "Hu(HEpH",
            "HEpH",
            "HMHHHL@HEpH",
            "HMHHHH",
            "HHEpH",
            "HEpH",
            "kHEpL",
            "HEpH",
            "HEpH",
            "MIH\u8991",
            "HEhHEh@",
            "HEhH",
            "HH)HH",
            "HE`P",
            "HU`HB HE`H@ Hu",
            "HU`HE`IL",
            "HE`HP",
            "HUH@",
            "HEHEHH",
            "HEXHEXH\u01ddHEX@A",
            "HEPHEP@",
            "H\u8ec7tsHEPHPBHEPH#WHEPHPAHEPH^WH",
            "HEPH",
            "HEPH",
            "H9EPu",
            "HEPH",
            "HEHHEHH",
            "HEHH",
            "HMHL",
            "HT$(HD$ MAH",
            "HE@HE@",
            "HE@H",
            "HE@H",
            "HHvEHH",
            "R P ",
            "HH.EHH",
            "R P H",
            "HE8HE8H@",
            "HE0HE8",
            "HHE8H",
            "HE8H",
            "HE8\u01c0",
            "HE8H\u01c0 ",
            "HH)HH",
            "HE`HU8HP(HE`",
            "HE`H\u01c0",
            "HE`\u0180",
            "HE`\u01c0",
            "HE`@H",
            "HE`H@P",
            "HE`@\\",
            "HE`P\\HE`PXHE`H`",
            "HE`\u01c0",
            "HE0H",
            "HE0H",
            "HE`H",
            "HE8H",
            "HE`H",
            "HE(HE(",
            "u=HE(H@PH",
            "HHE(H",
            "HE(H",
            "HE`HE`H",
            "HE(H@",
            "H@pHt",
            "HE(H@",
            "HPpHE`H\u0483",
            "uKHE`HcYHU`HE`IL",
            "6HE(",
            "HE(Hn",
            "HH)HH",
            "HE`HE`A",
            ".HE`HP",
            "HUH@",
            "HEHEHH",
            "HH)HH",
            "HE`HE`A",
            "\u87beHE`HP",
            "HUH@",
            "HEHEHH",
            "HH)HH",
            "HE`E",
            "HU`HB HE`H@ Hu",
            "HU`HE`IL",
            "HH)HH",
            "HE`HU`HE`IL",
            "HH)HH",
            "HE`HU`HE`IL",
            "HE`HP",
            "HUH@",
            "HEHEHH",
            "MHE HE ",
            "t\"HE @T",
            "t*HE @T",
            "t[HE HPBHE H[K",
            "t@HE ",
            "HjAH",
            "HDhH",
            "H\u803dHE",
            "H*AHE",
            "H  `",
            "Ht,H",
            "H{gH",
            "t.HE",
            "HnHE",
            "\u85e2HEH",
            "H;Eu,H",
            "HPBH",
            "HPAH",
            "HyGt",
            "H\u81f4gaUHH`HM",
            "\u0409EDEHE",
            "EE=@B",
            "E-@B",
            "EHE\u043a",
            "U\u040bE9",
            "U\u040bE9u",
            "U\u050bE9~",
            "qUE\u0409)\u0209EUE\u0509)\u0209E\u010bE\u0105y",
            "E\u010bEHcHE",
            "H`]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UHHM",
            "}\tHE",
            "]UHHM",
            "t9HE",
            "9|\"HE",
            "]UHHM",
            "tMHE",
            "t2HE",
            "9|\"HE",
            "9u#HE",
            "]UHHM",
            "9|\"HE",
            "9u,HE",
            "y#HE",
            "]UHHPHM",
            "LE LM(HE",
            "H@(HE",
            "gfff",
            "HEHEH",
            "HEHk.",
            "@HtH",
            "t=HEH@IH",
            "<HEH@IH",
            "HPPHE",
            "HPPHEH ",
            "HEHU",
            "PXHE ",
            "PXHE",
            "P\\HE @",
            "P\\HE",
            "@\\=?B",
            "~%HE",
            "PXHE",
            "@\\HE",
            "P\\HE",
            "@X;E",
            "E\u0738@B",
            "EEHE(",
            "@X;E~/H}(",
            "t(HE(",
            "RXU\u073a",
            "u\u0709HE(",
            "~`H}(",
            "tYHE(",
            "Ei@B",
            "Ei@B",
            "}\u0709E\u0709\u023a",
            "u\u0709HE(",
            "HP]UHH",
            "H@(HEHEH@",
            "HEHEH",
            "HEHEH",
            "HtAHEL",
            "HEHHM",
            "t!EAH",
            "]HEH",
            "aGHE",
            "HE\u060b4",
            "\u0409HEIHHM",
            "AHEHE",
            "GUE)\u0209EUE\u0109)\u0209EEy",
            "EHEH",
            "HMHUIIHM",
            "uqHE",
            " UHE\u060b",
            ")\u0209EUHE\u060b",
            ")\u0209EEy",
            "EHEH ",
            "HHUHEIHF",
            "HEHw[UHH@HM",
            "H@(HEHEH@",
            "HEHE",
            "Ht\\HE",
            ")\u0209EHE",
            ")\u0209EEy",
            "Ht0HEH ",
            "HUIHB",
            "Ht[HEL",
            "t4HEH@IH",
            "IHHM",
            "A:HE",
            "IHHM",
            "H@]UHH HM",
            "H ]UHH@HM",
            "H@(HEHEH@",
            "HEHE",
            "HEHE",
            "HEHHM",
            "H@]UHH0HM",
            "IHHM",
            "H0]UHH0HM",
            "H@(HEHEH@",
            "HEHM",
            "BHEH",
            "\u0410H0]UHH0HM",
            "ttHE",
            "H~WHE",
            "H0]UHH0HM",
            "IHHM",
            "H0]UHH",
            "H@(HE}",
            "]UHH@HM",
            "LE D\u0208E(HE",
            "H@(HEHEH@",
            "HEHE",
            "Ht$HEL",
            "U(HE AHHM",
            "AHEHM",
            "2@H}",
            ")\u0209EHE",
            ")\u0209EEy",
            "EHEH",
            "HMHUIIHM",
            "H@]U",
            "H)H$",
            "H@(H",
            "H@XH",
            "HT\u0178H",
            "w\u040bE;",
            "u,E=",
            "HT\u0178E",
            "HT\u0178H",
            "w\u040bE;",
            "u,E=",
            "HT\u0178E",
            "HUHD$ A",
            "\u0405xoH",
            "HUH|",
            "HUHI",
            "UHH`HM",
            "HEHE",
            "EHEH@(HEHEH@",
            "HEHHHH",
            "HEII\u043a",
            "HtnHEH",
            "HEH\u0483",
            "tSHE",
            "HEH@XHE",
            "HEH@XHEH}",
            "tmHE",
            "t]HEH:H",
            "HEH@xHt",
            "HEHPxHEH",
            "HEHq",
            "HEHHEH9EAH",
            "H`]UHWVSHXHM",
            "@8EHE",
            "HP HE",
            "kd)\u0189HU",
            "HI A",
            "HP(HE",
            "kd)\u0189HU",
            "HI(Ag",
            "H@ HU",
            "HJ@HEh",
            "HHEIHlg",
            "}\u0409EH",
            "HHHEH",
            "HMHHHH",
            "HJHUHcH",
            "HXHEE",
            "HEHUHE",
            "HLHHHEU\u0509P<HE",
            "\u0409HEPEHUEH",
            "\u0409HUEHL",
            "HHEU\u0309",
            "HEHUH",
            "HEHXHE\u0603E",
            "5HEH",
            "HX[^_]",
            "UHH HM",
            "t9HE",
            "Ht+HE",
            "HPHE",
            "H ]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UHHM",
            "LE HE HU",
            "HU H",
            "]UHH HM",
            "IHHM",
            "H ]UHHM",
            "]UHH HM",
            "H ]UHHM",
            "]UHH`HM",
            "\u0409EDEHE",
            "EE=@B",
            "E-@B",
            "EHE\u043a",
            "U\u040bE9",
            "U\u040bE9u",
            "U\u050bE9~",
            "qUE\u0409)\u0209EUE\u0509)\u0209E\u010bE\u0105y",
            "E\u010bEHcHE",
            "H`]UHHM",
            "]UHM",
            "\t\t]UHSH8HM",
            "LE HE",
            "+HEH",
            "HEH;E rH8[]UHH HM",
            "\u8459H ]UHH HM",
            "\\H ]UHH HM",
            "'H ]UHH HM",
            "H ]UHH HM",
            "\u8f58H ]UHH HM",
            "H ]UHH HM",
            "H ]UHH HM",
            "t,HE",
            "H ]UHH`HM",
            "LE LM(HE(HEHEH@",
            "HEH} ",
            "HH;Ew",
            "HEH\u043a",
            "H;E s",
            "HEH\u043a",
            "HE HE",
            "E HEHEH@",
            "HtpHE",
            "HEHE",
            "THEHUH",
            "\u0405u/HEHUH",
            "HEH@",
            "HEH@",
            "HEH;ErHEHUH",
            "HEHEHP",
            "HEH}",
            "PHEHUH",
            "HEHUHP",
            "HMIH]",
            "HE H`]UHH0HM",
            "LE LM(HE(HEHE",
            "EUHEH@",
            "HEH@",
            "tCMHEH",
            "IHL]",
            "HEHP",
            "EH)HEHP",
            "EH0]UHWHxHM",
            "LE LM(HE(HEHE",
            "E HEHE",
            "HEHEH",
            "HEH}",
            "HEI:",
            "HEH}",
            "HEH;E",
            "HUHE",
            "HH)HHEHEH",
            "HEHMIH+\\",
            "HEHUH",
            "HEHEHUHH)HH",
            "\u0405uHUHEHMIH[",
            "HEHUH",
            "2HEHEH",
            "HMHHHH",
            "tHHEHEH",
            "HMHHHH",
            "HUHEIIH",
            "HEHH",
            "HE@ ",
            "HE@!",
            "HEHEH",
            "HMHHHH",
            "vJHEA",
            "\u0405u)HEL@",
            "HUHJ",
            "HE@\"",
            "HE\u0409P",
            "HE\u040b@",
            "HEHH",
            "HEHUH",
            "HEHH",
            "HEHUHP",
            "HEHH",
            "HEHUHP",
            "HEHY",
            "HEHY",
            "HEHx_]UHH\u0100HM",
            "EHED$ ",
            "HUHD$@",
            "HD$8",
            "HEHD$0D$(",
            "HD$ ",
            "HED$ ",
            "EH]UHH HM",
            "DE HE",
            "HH ]UHH HM",
            "H ]UHH H",
            "H ]UHSHHHM",
            "LE LM(HE0HE}",
            "H\u04c9HHH",
            "THumH",
            "U(HEH",
            "U(HEH",
            "U(HEH",
            "U(HEH",
            "HE(H",
            "H)HD$ H",
            "HEHU HEHM(IHU",
            "HE(HPHE",
            "\u0405uHUHE(H",
            "HUHE",
            "He[]UWH",
            "LHHH ",
            "HP@H ",
            "HPxH ",
            "I\u0409HP",
            "A\u0409HP",
            "I\u0409HP",
            "I\u0409HP",
            "I\u0409HP",
            "I\u0409HP",
            "I\u0409HP",
            "I\u0409HP",
            "Ht5\u01c5",
            "I\u0409HP",
            "HtT\u01c5",
            "I\u0409HP",
            "I\u0409HP",
            "HMHHHHPH ",
            "t!H(",
            "Ht;H",
            "HEIH;O",
            "HUH(",
            "I\u0409HP",
            "HH)HH=",
            "HH)Hi@B",
            "H7H\u0138",
            "_]UHp",
            "\u0405t2H",
            "HP@H ",
            "HHIH",
            "Ht;H",
            "H@XHt",
            "H@XHuK",
            "H@0H",
            "HP0H",
            "Ht\"H",
            "H@0Ht\"H",
            "H@0HJ",
            "@Dt*H",
            "RDP H",
            "HUI\u043a",
            "uTEHUH\\IAH",
            "H@(HtQH",
            "H@(H\u01a7",
            "H@(HG",
            "]UHH`HM",
            "LE LM(M0U8EPMUE",
            "ULM(LE HE",
            "HD$8",
            "L$0HMHHL$(T$ HHM",
            "UHM@EHD$ ",
            "IA\u0409HM",
            "\tH`]UHH0",
            "HEHE",
            "H0]UHWHhHM",
            "HEHE",
            "HMHHHH",
            "HMHHHL@HEHEH",
            "HMHHHH",
            "HEH}",
            "HMLELD$ IMD",
            "HEHh_]UHH@HM",
            "HEHE",
            "Ht*HEHH?H>H",
            "HH)HH",
            "HEH}",
            "EAHC",
            "EH;E",
            "rHEH@]UHH@HM",
            "LE E",
            "HEHMIHC",
            "HEIH",
            "EJEHE",
            "KH} ",
            "EH@]UHHpHM",
            "H/HEAP",
            "H_HHp]UHH0HM",
            "< v(HE",
            "H0]UHH HM",
            "HEHE",
            "FEHH",
            "EEHH",
            "EE;Ev",
            "E;Es",
            "H ]UHH",
            "+EHH",
            "+EHH",
            "~HE ",
            "HEHE ",
            "HHE}",
            "HMHUHD$ IIH",
            "HEHO@",
            "HEHC@",
            "]UHH@HM",
            "HuHU",
            "HEHH@]UHH0(",
            "HEH}",
            "MHUHEH",
            "HUHEHP",
            "HEH ",
            "HEH0]UHH0HM",
            "HEHEH@",
            "HE4HEH",
            "H?HEH*?",
            "HEHEHEH@",
            "HEHEHP",
            "H9uHE",
            "H HH",
            "H0]UHH HM",
            "HCHE",
            "H HH",
            "HIH ]UHH HM",
            "H ]UHH HM",
            "nH ]UHH0HM",
            "HEH}",
            "HEHU",
            "HEHP",
            "HEHP",
            "HEHP",
            "HEHP",
            "HXHE",
            "HUHJ",
            "HEH_=",
            "H HH",
            "EH0]UHH@HM",
            "HBtfH}",
            "t(HE",
            "H HM",
            "H HH",
            "uKHE",
            "HEHEH",
            "HEHEH",
            "HmHEHX<",
            "H?HEH@]UHH HM",
            "LE LM(HE",
            "LE(HU HE",
            "MIHH",
            "H ]UHH@HM",
            "H@ HEH}",
            "H~HE@",
            "HEHEH@",
            "HE4HEH",
            "HHEHq;",
            "HEHEHEH@",
            "HEHEHP",
            "HEH9uHEH",
            "H@]UHH0HM",
            "t?HE",
            "Ht3HE",
            "HUH@",
            "HEHEHH",
            "H0]UHH`M",
            "HEEHHE\u040bEi@B",
            "EHEHEE\u0609EHUHEHE}u",
            "tH`]UHHM",
            "*]UHHM",
            "X]UWH",
            "HH)H\u0209",
            "HMHHHH",
            "HMHHHH",
            "HEMAH7",
            "HT$ EI\u023a",
            "_]UW",
            "H)H$",
            "HMHHHH",
            "HDH;",
            "w\u068bE;",
            "u%E=",
            "HT\u020bE",
            "HT$ A",
            "_]UHH0HM",
            "LE E",
            "HU HE",
            "IHHM",
            "EH0]U`",
            "H)H$",
            "HD\u0178H;",
            "w\u068bE;",
            "u%E=",
            "HT\u0178E",
            "HL$ A",
            "]UHH HM",
            "H ]UHH0HM",
            "HHEH}",
            "H0]UHWHHHM",
            "HMHHHH",
            "HEHE",
            "HEHE",
            "HEH%",
            "HEHEAH",
            "HUH11",
            "|iHEHUH)HE",
            "HUH0",
            "HH_]UW ",
            "H)H$",
            "HHEI",
            "LHHH  ",
            "HEHEH",
            "HMHHHH",
            "HH  ",
            "nH  ",
            "HUH+0",
            "t$H  ",
            "HH  ",
            "HMHHHH",
            "HMHHHH",
            "HH)HH",
            "HH  ",
            "_]UHSH8HM",
            "HEH}",
            "HEHZ",
            "H8[]UHH0HM",
            "JHEH}",
            "HEHG",
            "H0]UH0",
            "HEMIHf+",
            "HcHEIHH",
            "]UHWSH",
            "HEH}",
            "HHEHE",
            "HnHEHE",
            "HYHEHE",
            "HDHEHE",
            "H/HEHE",
            "HEHE",
            "HEHE",
            "t.H}",
            "t'H}",
            "t H}",
            "HEHw)",
            "HEHd)",
            "HEHQ)",
            "HEH>)",
            "HEH+)",
            "HUHp",
            "HUHx",
            "HEHEH",
            "HMHHHH",
            "HHHE",
            "HEHEH",
            "HMHHHH",
            "HHHE",
            "PLHE",
            "UHcH",
            "tkEHH",
            "UHcH",
            "UHEHH",
            "E;E|HE",
            "HMHHHL@HE",
            "HMHHHH",
            "HMHHHH",
            "HMHHHH",
            "HJHE",
            "HEHE",
            "HUIAH",
            "HEIH",
            "HEIH",
            "HEIH",
            "HEIH",
            "UHcH",
            "EIAH",
            "E;E|HEIH",
            "HEIH",
            "HEIH",
            "t6HE",
            "t\tHM",
            "[_]UHH0HM",
            "EHUf",
            "(IAH",
            "H0]UWH8",
            "HEMIH!",
            "HEHH",
            "HUIAH",
            "_]UWH ",
            "H)H$",
            "HEAH ",
            "HEHEH",
            "HMHHHH",
            "HHEIHH",
            "_]UH`",
            "u'EHUH\\IAH",
            "\u0405uZH",
            "nt \u0185",
            "\u0405u&H",
            "\u0405u#H",
            "\u0405u*H",
            "]UWh!",
            "H)H$",
            "HMHHHH",
            "\ubd10HUH ",
            "t:H ",
            "t\"H ",
            "t~H ",
            "tfH ",
            "_]UHH0HM",
            "LE HE",
            "HEHE H",
            "HE P",
            "HEHEHUH ",
            "HEH0]UW\"",
            "H)H$",
            "H\u01c58\"",
            "H\u01c5 \"",
            "HLH`\"",
            "Hu;H",
            "sQH`\"",
            "H\u8c37H`\"",
            "HH`\"",
            "PH`\"",
            "LHHH`\"",
            "Ht6\u01c5!",
            "HtV\u01c5!",
            "\u0405t,H`\"",
            "Hu5H",
            "H\u03faH`\"",
            "HMHHHH",
            "IHH`\"",
            "HUH \"",
            "u'EHUH\\IAH",
            "t>H!",
            "t&H!",
            "tiH!",
            "HH`\"",
            "HMHHHH",
            "HHH`\"",
            "Ho7\"",
            "D$ IAH",
            "Ht1H`\"",
            "_]UHH HM",
            "HVHE",
            "HcHE",
            "H ]UHH HM",
            "H ]UHWHXHM",
            "HMHHHH",
            "HEHE",
            "HMHHHH",
            "HEHEHu",
            "oHEH",
            "HEHEH.HEH",
            "HEH}",
            "HEILE",
            "HEHX_]UHHM",
            "]UHHPM",
            "HD$0",
            "HD$ A",
            "\u0405t\tH",
            "EUHEAL",
            "EEHH",
            "HP]UHHpHM",
            "HEH}u$H",
            "HEH}u$H",
            "HUHED$ ",
            "HUHEA",
            "\u0403u$H",
            "HMHUHEIHH",
            "\u0403u$H",
            "\u0403u$H",
            "\u0409vIH",
            "\u0409E\u050bMHUHEAHH",
            "\u0403u$H",
            "iBHEA",
            "HEH}u$H",
            "BHEHH",
            "Hp]UHH HM",
            "Ht,HE",
            "H ]UHH0HM",
            "\u0410H0]UHH HM",
            "UHHM",
            "g\tjHE",
            "rn<HE",
            ":OHE",
            "[]UH0",
            "\t\u0409EH",
            "\t\u0409EH",
            "\t\u0409EH",
            "\t\u0409EH",
            "\t\u0409EH",
            "\t\u0409EH",
            "\t\u0409EH",
            "\t\u0409EH",
            "\t\u0409EH",
            "\t\u0409EH",
            "\t\u0409EH",
            "\t\u0409EH",
            "\t\u0409EH",
            "\t\u0409EH",
            "\t\u0409EH",
            "\t\u0409EH",
            "-[$J",
            "-\\}m",
            "-hU'",
            "-Y#d",
            "\u0209E\u010bE",
            "\u0209E\u020bE",
            "\u0209E\u030bE",
            "\u0209E\u040bE",
            "\u0209E\u050bE",
            "\u0209E\u060bE",
            "\u0209E\u070bE",
            "-nX*",
            "-6=~",
            "-{\u04cdm",
            "\u0209E E ",
            "\u0209E$E$",
            "\u0209E(E(",
            "\u0209E,E,",
            "\u0209E0E0",
            "\u0209E4E4",
            "\u0209E8E8",
            "\u0209E<E<",
            "\u0209E@E@",
            "\u0209EDED",
            "\u0209EHEH",
            "LwH'",
            "\u0209ELEL",
            "\u0209EPEP",
            "\u0209ETET",
            "\u0209EXEX",
            "E AA",
            "A1E ",
            "\u0209E\\E\\",
            "E$AA",
            "A1E$",
            "\u0209E`E`",
            "E(AA",
            "A1E(",
            "\u0209EdEd",
            "E,AA",
            "A1E,",
            "\u0209EhEh",
            "E0AA",
            "A1E0",
            "\u0209ElEl",
            "E4AA",
            "A1E4",
            "\u0209EpEp",
            "E8AA",
            "A1E8",
            "\u0209EtEt",
            "E<AA",
            "A1E<",
            "\u0209ExEx",
            "E@AA",
            "A1E@",
            "\u0209E|E|",
            "P$H0",
            "]UHH0HM",
            "DE } ",
            "+EEHE",
            "E 9s",
            "tpE ;E|hEHcHU",
            "L@(EL",
            "H(HHM",
            "xEHH",
            "E)E E",
            "@m @} ?",
            "~&E HcHU",
            "L@(EL",
            "H0]UHH@HM",
            "\t\u0409EHE",
            "EEEE",
            "EEEHE",
            "?E}7w",
            "+EEEAH",
            "-HEA",
            "HP\tHE",
            "H@]UWH",
            "HEH0",
            "HEAH",
            "HEHiHEI",
            "LHHH",
            "UHH`HM",
            "\u0409EDEHE",
            "EE=@B",
            "E-@B",
            "EHE\u043a",
            "U\u040bE9",
            "U\u040bE9u",
            "U\u050bE9~",
            "qUE\u0409)\u0209EUE\u0509)\u0209E\u010bE\u0105y",
            "E\u010bEHcHE",
            "H`]UHH@M",
            "HUHEHKu",
            "H@]UHHM",
            "t\"HE",
            "]UHH HM",
            "t9HE",
            "Ht+HE",
            "HPHE",
            "H ]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UHH HM",
            "H ]UHH HM",
            "zH ]UHH HM",
            "@H ]UHH0H",
            "EHHH",
            ";Et!E",
            "EHHH",
            "EHHH",
            "UIAHH",
            "H0]UHHM",
            "]UHH0HM",
            "HEHM",
            "HHEHP",
            "HEHU",
            "HEHv",
            "HEHEHUH",
            "HtDH",
            "HEHP",
            "HEHP",
            "HEH@",
            "HUHP",
            "HEH@",
            "HUHP",
            "#HEHUHP",
            "HEHUHP",
            "HEH0]UHWHXHM",
            "HMHHHH",
            "HEHE",
            "HH)HHEHEHUH",
            "HEHE",
            "HEHEH;Es",
            "HEHE",
            "t.H}",
            "v$H}\u0418",
            "HEHH",
            "HX_]UHH HM",
            "dH ]UHHM",
            "]UHH0H",
            "HtRH",
            "HEHEH@",
            "HEHEH",
            "HEHEH",
            "H9EuH",
            "H0]UHWHXHM",
            "HEVHE",
            "\"t\",t",
            "1\\t\"|u'",
            "u\tHE",
            "HMHHHHPEHH",
            "HEH}",
            "qHEHE",
            "=t\"=",
            "\"tH,t",
            "\\td|",
            "HEHX_]UHH",
            "tMH}",
            "tNHE",
            "H@ HEHE",
            "HP HE",
            "HP HE",
            "H@ HU",
            "HP(HEHU",
            "HP(HE",
            "HUHP ",
            "]UHWHHHM",
            "DE LM(E0E\u07390",
            "HEHEHU",
            "HEU ",
            "u\"HEHE",
            "HP HE",
            "HP(8HE",
            "HP HEHP HE",
            "HUHP HEHU",
            "HP(HEH@ HUHP(HE",
            "u*E ",
            "HEU ",
            "HE(E",
            "t'HEHU(HP",
            "HE(H",
            "HE(HEH",
            "HMHHHH",
            "HHEHP",
            "HU(HEH@",
            "HHEHP",
            "HEH@",
            "HHEHP",
            "HEH@",
            "HHEHP",
            "HEH@",
            "HHEHP",
            "HEH@",
            "HU(H",
            "HHEHP",
            "HEH@",
            "HU(H",
            "HHEHP",
            "HEH@",
            "HHEHP",
            "HU(HEH@",
            "HHEHP",
            "HEH@",
            "HU(H",
            "HHEHP",
            "HEH@",
            "WHE@",
            "HE(H",
            "HUHB",
            "9E AH",
            "HEHP",
            "HH_]UHH0HM",
            "LE D\u0208E(",
            "U(HM HE",
            "T$ IA",
            "LH0]UHH0HM",
            "LE D\u0208E(",
            "U(HM HE",
            "T$ IA",
            "H0]UHH0HM",
            "LE D\u0208E(",
            "U(HM HE",
            "T$ IA",
            "H0]UHH0HM",
            "LE D\u0208E(",
            "U(HM HE",
            "T$ IA",
            "}H0]UHH0HM",
            "LE D\u0208E(",
            "U(HM HE",
            "T$ IA",
            "8H0]UHH0HM",
            "LE D\u0208E(",
            "U(HM HE",
            "T$ IA",
            "H0]UHH0HM",
            "LE D\u0208E(",
            "U(HM HE",
            "T$ IA",
            "H0]UHH0HM",
            "LE D\u0208E(",
            "U(HM HE",
            "T$ IA",
            "iH0]UHH0HM",
            "LE D\u0208E(",
            "U(HM HE",
            "T$ IA",
            "$H0]UHH0HM",
            "LE D\u0208E(",
            "U(HM HE",
            "T$ IA\t",
            "H0]UHH0HM",
            "LE D\u0208E(",
            "U(HM HE",
            "T$ IA",
            "H0]UHH0HM",
            "LE D\u0208E(",
            "U(HM HE",
            "T$ IA",
            "UH0]UHH0HM",
            "LE D\u0208E(",
            "U(HM HE",
            "T$ IA",
            "H0]UHH0HM",
            "LE D\u0208E(",
            "U(HM HE",
            "T$ IA",
            "H0]UHH0HM",
            "LE D\u0208E(",
            "U(HM HE",
            "T$ IA",
            "H0]UHH0HM",
            "LE D\u0208E(",
            "U(HM HE",
            "T$ IA",
            "AH0]UHH0HM",
            "LE D\u0208E(",
            "U(HM HE",
            "T$ IA",
            "H0]UHH0HM",
            "LE D\u0208E(",
            "U(HM HE",
            "T$ IA",
            "H0]UHH0HM",
            "LE D\u0208E(",
            "U(HM HE",
            "T$ IA",
            "rH0]UHH0HM",
            "LE D\u0208E(",
            "U(HM HE",
            "T$ IA",
            "-H0]UHH0HM",
            "LE D\u0208E(",
            "U(HM HE",
            "T$ IA",
            "H0]UHHpHM",
            "DD\u0208U E(E",
            "LEHM",
            "HD$(HEHD$ \\",
            "LEHE",
            "HMHL$ H",
            "U HE",
            "HHEH",
            "LMLEHE",
            "HMHL$ H\u8828",
            "HEH;E",
            "HEH\u83a8",
            "EHHE",
            "(IH\u84e7",
            "EHHE",
            "(IHZ",
            "EHHE",
            "(IH!",
            "EHEHHM",
            "EHHE",
            "(IH\u0626",
            "EHHE",
            "(IH\u87e6",
            "EHHE",
            "(IHf",
            "EHHE",
            "(IH-",
            "EIH\u0125",
            "EHEHHM",
            "EHHE",
            "(IH{",
            "HEHUHE",
            "HEHL",
            "LEHE",
            "HMHL$ H",
            "H@(H;E",
            "HEHEH@(HE",
            "HEHP HE",
            "HP HE",
            "H@ HU",
            "HP(HEHY",
            "Hp]UHH",
            "UHcH",
            "]UHH",
            "UHcH",
            "9E|H",
            "]Up@",
            "H)H$",
            "EH\u01c5?",
            "HcHH",
            "HcHH",
            "HcHH",
            "HcHH",
            "HcHH",
            "MAHp",
            "HcHH",
            "EAH%",
            "HcHH",
            "EAH\u03e0",
            "HcHH",
            "HcHH",
            "EAHF",
            "HcHH",
            "HcHH",
            "HcHH",
            "HcHH",
            "MAH-",
            "HcHH",
            "IHH\u065e",
            "HcHH",
            "EIH\u84de",
            "HcHH",
            "HUH?",
            "MHUH?",
            "HEHH",
            "HcHH",
            "EHUH?",
            "HKH?",
            "H0H?",
            "MHUH?",
            "AHH?",
            "HEHH",
            "]UP ",
            "H)H$",
            "D$ A",
            "AH.H",
            "HEHH",
            "H)H$",
            "D\u028b0 ",
            "HHiP",
            "D$ A",
            "HEHH",
            "]UH\u0208E",
            "]UHM",
            "]UHH HM",
            "H ]U@ ",
            "H)H$",
            "H9u\tE",
            "IHpH",
            "Ht4H",
            "H@0Ht1H",
            "HP0H",
            "H@`Ht1H",
            "HP`H",
            "H@@Ht4H",
            "HP@H",
            "EAHH",
            "HEHH",
            "]Up ",
            "H)H$",
            "H9u\tE\u0703",
            "IHhH",
            ".t4H",
            "EHUH",
            "HEAH9",
            "IHKH",
            "EHUH",
            "H@HHt4H",
            "HPHH",
            "EAHH",
            "HEHH",
            "6Hp ",
            "]UHH HM",
            "DD\u0208U E(}",
            "HLiP",
            "AAHHM",
            "H ]UHH0HM",
            "DD\u0208U E(E",
            "DEMcI",
            "AAHHM",
            "H0]UHHPHM",
            "LE LM(U0E8UEE",
            "T$ A",
            "T$ A",
            "UHcH",
            "EAHA\u0483E",
            "9E|}",
            "HHP]UHH@HM",
            "LE D\u028bE0U(E",
            "E(LE HM",
            "T$(D$ MIHU",
            "H@]UHH@HM",
            "LE D\u028bE0U(E",
            "E(LE HM",
            "T$(D$ MIHU",
            ">H@]UHHPHM",
            "LE D\u028bE0U(EE",
            "E(D$ A",
            "E(D$ A",
            "HE H7",
            "9E|$",
            "E(UD$ A",
            "E(UD$ A",
            "U(EA",
            "A\u0409HM",
            "HP]UHHPHM",
            "LE D\u028bE0U(EE",
            "E(D$ A",
            "E(D$ A",
            "HE H",
            "E;E|$",
            "E(UD$ A",
            "E(UD$ A",
            "U(EA",
            "A\u0409HM",
            "HP]UHH`HM",
            "LE D\u028bE0U(EE}",
            "E(D$ A",
            "E(D$ A",
            "HE H\u8b86",
            "E;E|'",
            "E(UD$ A",
            "EaE}",
            "E(UD$ A",
            "UHcH",
            "HEHEHHHUEHL$ AAH",
            "E(UD$ A",
            ",/HEH",
            "E(UD$ A",
            "H`]UHH`HM",
            "LE D\u028bE0U(E",
            "E(D$ A",
            "E(D$ A",
            "HE H",
            "E;E|'",
            "E(UD$ A",
            "E(UD$ A",
            "UHcH",
            "HEHEHHHUEHL$ AAH",
            "E(UD$ A",
            "s1HE\u01c0",
            "E(UD$ A",
            "AH`]UHH`HM",
            "LE D\u028bE0U(EFE}",
            "E(D$ A",
            "E(D$ A",
            "HE H:",
            "E;E|'",
            "E(UD$ A",
            "E(UD$ A",
            "UHcH",
            "HEHEH@",
            "HEHEH@`Ht9HEHP`HEH\u0484t$",
            "E(UD$ A",
            "E(UD$ A",
            "H`]U ",
            "H)H$",
            "D\u028b0 ",
            "D$ A",
            "D$ A",
            "UHcH",
            "H@XHt",
            "Ht6H",
            "HP(H",
            "HP0H",
            "HP8H",
            "EAHaH",
            "HEHH",
            "E\u030bU\u030b",
            "]Up ",
            "H)H$",
            "D\u028b  ",
            "D$ A",
            "HEHH",
            "]UHHPHM",
            "LE D\u028bE0U(E",
            "E(D$ A",
            "E(D$ A",
            "HE Ht",
            "9E|'",
            "E(UD$ A",
            "EHHiP",
            "HP@H",
            "EIAH",
            "EHHiP",
            "E(UD$ A",
            "EHHiP",
            "E(UD$ A",
            "eAEHHiP",
            "E(UD$ A",
            "#HP]UHHPHM",
            "LE D\u028bE0U(E",
            "E(D$ A",
            "E(D$ A",
            "HE H s",
            "9E|'",
            "E(UD$ A",
            "EHHiP",
            "HP@H",
            "EIAH",
            "EHHiP",
            "E(UD$ A",
            "=EHHiP",
            "E(UD$ A",
            "HP]UHHPHM",
            "LE D\u028bE0U(E",
            "E(D$ A",
            "E(D$ A",
            "HE Hq",
            "9E|$",
            "E(UD$ A",
            "AEHHiP",
            "E(UD$ A",
            "HP]U` ",
            "H)H$",
            "D$ A",
            "AHtH",
            "HEHH",
            "IH` ",
            "]U` ",
            "H)H$",
            "D$ A",
            "AH8H",
            "HEHH",
            "]U` ",
            "H)H$",
            "D$ A",
            "HEHH",
            "\u0676H` ",
            "]UHHPHM",
            "LE D\u028bE0U(E",
            "E(D$ A",
            "E(D$ A",
            "HE Hl",
            "9E|$",
            "E(UD$ A",
            "UHcH",
            "HEHE@H",
            "E(UD$ A",
            "HP]UHHU",
            "LE E",
            "<\\u$HE",
            "HE H",
            "HU H",
            "HE H",
            "HE H",
            "]UHWHHHM",
            "LE LM(HE",
            "HMHHHH",
            "HEHEHEHEHu",
            "KHUHE",
            "HEIHU",
            "tRHUHE H",
            "HEIHU",
            "t*HUHE(H",
            "HEIHU",
            "HEH7j",
            "HH_]UHHpHM",
            "LE D\u028bE0U(EH} ",
            "E(D$ A",
            "LEHMHUHE MIH~",
            "U(HE H\u0273HE",
            "E(HUD$ IA",
            "$HEH;E t",
            "HEH`i",
            "/HEHUHEHz8HULEHMHEHT$ MI\u023a",
            "U(HEH.HE",
            "E(HUD$ IA",
            "HEH9Et",
            "HEHh",
            "Hp]UHSHXHM",
            "LE D\u028bE0U(E\u070b",
            "E(D$ A",
            "E(D$ A",
            "HE Hhh",
            "9E|'",
            "E(UD$ A",
            "UHcH",
            "HEHE@H",
            "E(UD$ A",
            "JMHE@H",
            "HEH/",
            "E(UD$ A",
            "HX[]UHHPHM",
            "LE D\u028bE0U(EHUHE H",
            "tUJtt",
            "E(D$ A",
            "E(D$ A",
            "E(UD$ A",
            "E(UD$ A",
            "E(D$ A",
            "HP]UHHPHM",
            "LE D\u028bE0U(E",
            "E(D$ A",
            "E(D$ A",
            "HE He",
            "9E|'",
            "E(UD$ A",
            "UHcH",
            "HEHE@Hu$",
            "E(UD$ A",
            "E(UD$ A",
            "CHE@H",
            "-H;Eu",
            "E(UD$ A",
            "YHP]UHH`HM",
            "LE D\u028bE0U(EE",
            "E(D$ A",
            "E(D$ A",
            "HE HRd",
            "9E|'",
            "E(UD$ A",
            "E(UD$ A",
            "UHcH",
            "HE9,H;Eu",
            ",$,H;Eu'",
            "E(UD$ A",
            "HE@H",
            "U(HEH",
            "HEHEHEH",
            "H;Et",
            "HEH<",
            "E(HMUD$ IA\u043aD",
            "HEHb",
            "H`]UHHPHM",
            "LE LM(E0E",
            "ED$ A",
            "ED$ A",
            "HEH}",
            "ED$ A",
            "9E|)",
            "EUD$ A",
            "HE U",
            "HE(HUH",
            "HP]UHH`HM",
            "LE D\u028bE0U(E",
            "U(LEHMHE T$ MIHHM",
            "\u0405u/EHHiP",
            "HEHea",
            "HEH`",
            "E(HUD$ IA",
            "0pEHHiP",
            "EHHiP",
            "MHEAH.`",
            "E(UHMD$ IA\u043a ",
            "H`]UHHPHM",
            "LE D\u028bE0U(E",
            "U(LEHMHE T$ MIHHM",
            "ujHEH_",
            "EEUW",
            "E(HMUD$ IA\u043a\"",
            "E(HMUD$ IA\u043a#",
            "HP]UHHPHM",
            "LE D\u028bE0U(E",
            "U(LEHMHE T$ MIHHM",
            "ujHEH;_",
            "E(HMUD$ IA\u043a$",
            "E(HMUD$ IA\u043a%",
            "HP]UHHPHM",
            "LE D\u028bE0U(E",
            "U(LEHMHE T$ MIHHM",
            "ujHEH}^",
            "E(HMUD$ IA\u043a(",
            "E(HMUD$ IA\u043a)",
            "HP]UHHPHM",
            "LE D\u028bE0U(E",
            "U(LEHMHE T$ MIHHM",
            "uyHEH^",
            "E(HMUD$ IA\u043a&",
            "E(HMUD$ IA\u043a'",
            "HP]UHH0HM",
            "LE D\u028bE0U(E}(",
            "H0]UHH0HM",
            "LE D\u028bE0U(E}(",
            "H0]UHH@HM",
            "LE D\u028bE0U(E",
            "E(D$ A",
            "\u8df8H@]U@ ",
            "H)H$",
            "EAH1H",
            "HEHH",
            "\u809fH@ ",
            "]UHHPHM",
            "LE D\u028bE0U(EE",
            "E(D$ A",
            "E(D$ A",
            "MHcH",
            "ET$ EI\u0209HM",
            "9E|}(",
            "%HP]Up ",
            "H)H$",
            "D\u028b  ",
            "D$ A",
            "D$ A",
            "UHcH",
            "H@0Ht",
            "H@`Ht",
            "EAH\u8969H",
            "HEHH",
            "E\u030bU\u030b",
            "`Hp ",
            "]UH`",
            "D$ IA",
            "D$ IA",
            "]U@ ",
            "H)H$",
            "HP H",
            "HP(H",
            "HP)H",
            "HP*H",
            "HP,H",
            "HP@H",
            "HP0H",
            "HP8H",
            "HPHH",
            "HPLH",
            "HPPH",
            "HPXH",
            "HPhH",
            "HPpH",
            "HP`H",
            "HPxH",
            "MHUH",
            "EAH\u8ba1H",
            "HEHH",
            "]UHH",
            "LE D\u028bE0U(EE",
            "E(D$ A",
            "UHcH",
            "HEH}",
            "HEH@",
            "HtxHEH@",
            "H@PHt",
            "HEH@",
            "HPPHEHHE",
            "U(HEL(",
            "HEHHHET$0HUHT$(HD$ ",
            "MI\u0209HM",
            "UHcH",
            "MHEAH]J",
            "U(HEL",
            "HEL`",
            "HMET$0HD$(",
            "LD$ I\u0209HM",
            "]UHHPHM",
            "LE D\u028bE0U(EH} ",
            "E(D$ A",
            "\u0409HE ",
            "<tt/HE ",
            "<ft$",
            "E(D$ A",
            "=HE ",
            "UD$ A",
            "\u8c65HP]U` ",
            "H)H$",
            "D$ A",
            "HtgH",
            "AH[H",
            "HEHH",
            "0H` ",
            "]UP ",
            "H)H$",
            "D$ A",
            "AHzH",
            "HEHH",
            "OHP ",
            "]UHHPHM",
            "LE D\u028bE0U(EH} ",
            "E(D$ A",
            "HE ,",
            "HEH}",
            "E(HU D$ IA",
            "HE H",
            "\u0405uJH",
            "HEH8",
            "E(HU D$ IA",
            "HEHA",
            "E(HM UD$ IA\u043aT",
            "HE H",
            "qHE H",
            "KHE H",
            "E(HU D$ IA",
            "E(HM UD$ IA\u043aR",
            "7HP]U ",
            "H)H$",
            "D\u028b0 ",
            "D$ A",
            "D$ A",
            "D$ A",
            "D$ A",
            "D$ A",
            "H@hHu0",
            "D$ A",
            "LPhLEH",
            "MIHAH",
            "D$ IA\u043a[",
            "D$ IA\u043a]",
            "D$ A",
            "\u8bd9H\u0100 ",
            "]UHHPHM",
            "LE D\u028bE0U(EH} ",
            "E(D$ A",
            "HE ,",
            "HEH}",
            "E(D$ A",
            "HE H",
            "HE H",
            "E(HU D$ IA",
            "<tt2HE",
            "<ft'",
            "E(D$ A",
            "T$ IA",
            "T$ IA",
            "iHP]US ",
            "H)H$",
            "EH\u01c5@ ",
            "D$ A",
            "HcHH",
            "HEIH9",
            "HUHD:",
            "Ht<\u0185N ",
            "HcHH",
            "D$ A",
            "HHp ",
            "\u8f48H@ ",
            "HU0H@ ",
            "AH\u8c8dH@ ",
            "HE0HHp ",
            "[]UW",
            "H)H$",
            "HHEH&8",
            "t3HEHEH",
            "HMHHHHPHEH",
            "tAHEHEH",
            "HMHHHHPHEH",
            ",\"id@",
            "\":0}@",
            "?HEHEH",
            "HMHHHHPHEH",
            ",\"id@",
            "\":1}@",
            "HEHEH",
            "HMHHHH",
            "HUHD$ IAH",
            "?|IH",
            "_]UHH HM",
            "Ht6H",
            "zH ]UWS ",
            "H)H$",
            "Ht\tH",
            "HMHHHH",
            "mH0 ",
            "<:t^HX ",
            ",lHX ",
            "9~5HX ",
            "9u6W",
            "9u6R",
            "Ht5HX ",
            "xjHX ",
            "HE H@ ",
            "HcHH",
            "\u0405u\t\u0185> ",
            "HcHH",
            "Hu> ",
            "HcHH",
            "HEIH0",
            "HUHE H~1",
            "HcHH",
            "HH@ ",
            "HcHH",
            "HMHHHH",
            "!hHH ",
            "HcHH",
            "HcHH",
            "HEIH.",
            "HUHE H/",
            "HcHH",
            "HH@ ",
            "HcHH",
            "HMHHHH",
            "HcHH",
            ")HE HEH",
            "HMHHHH",
            "HHcH",
            "eHU HX ",
            "HE H@ ",
            "HcHH",
            "HcHH",
            "HH@ ",
            "HcHH",
            "HMHHHH",
            "HcHH",
            ")HE HEH",
            "HMHHHH",
            "HHcH",
            "cHU HX ",
            "[_]UHWSHpH",
            "HMHHHH",
            "HEH}",
            "HHEHH+",
            "HEHE",
            "u\u070bEH",
            "HEHEx",
            "< tHE",
            "<\ttHE",
            "HEH}",
            "\u0408EHE",
            "9tEHE",
            "\u0408EHE",
            "HcHH",
            "HcHH",
            "HcHH",
            "HEH}",
            "HcHH",
            "HEHW(",
            "HcHH",
            "\u04c9\u0609EH",
            "HcHH",
            "HcHH",
            "DMD\u02c9\tA@",
            "HcHH",
            "HEH}",
            "HcHH",
            "HcHH",
            "DMD\u02c9\tA",
            "HEHEE",
            "HcHH",
            "HcHH",
            "HcHH",
            "HEHEH}",
            "yHEH%",
            "Hp[_]UHH HM",
            "H ]UHH HM",
            "H ]USxC",
            "H)H$",
            "wkHB",
            "WjHEA",
            "Hu(H",
            "iIIH",
            "tLHB",
            "]iIIH",
            "\u0403uJhHB",
            "HD$ IAH",
            "\u0403u;H",
            "hIIH",
            "$gIIH",
            "HcHH",
            "AA!H",
            "HcHH",
            "A9u4\u0185B",
            "HcHH",
            "t\t\u0185B",
            "u\t\u0185!",
            "HFe\u0185B",
            "8tV\u0185B",
            "HcHMH!",
            "T$ A",
            "AH}\u0185B",
            "T$ A",
            "AH\u0185B",
            "T$ A",
            "AH\u0185B",
            "t)HxB",
            "tHHxB",
            "u:HxB",
            "jHxB",
            "t`HxB",
            "uRHxB",
            "EHEHHM",
            "(IH6",
            "HcHH",
            "HtUB",
            "HcHH",
            "L$ HA",
            "HcHH",
            "L$ IA",
            "HPvB",
            "HcHH",
            "AHu\u0185B",
            "HcHH",
            "T$ A",
            "AHHB",
            "tnHA",
            "-PHA",
            "HEHA",
            "HEHEHH",
            "tlHA",
            "HEHA",
            "HEHEHH",
            "\\HxC",
            "[]UHH HM",
            "H ]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UHH HM",
            "NH ]UHH HM",
            "iNH ]UHWHHM",
            "HU HE",
            "HMHHHH",
            "HU H.",
            "EHUH",
            "HH_]UHH M",
            "HU HE",
            "H ]UHH0M",
            "LE LM(HU",
            "HU HEH",
            "HUHE",
            "H0]UHWVSH",
            "HEHEHE",
            "EHHHHEH",
            "R P HE",
            "H\u01c5xH",
            "HxHHHH",
            ">E\u030bEHH",
            "H)HD$PH",
            "HEHED",
            "HEDH",
            "HED@",
            "HE\u040bH",
            "HE\u040b@",
            "HE\u040b@",
            "HEL]",
            "L\\$@DT$8DL$0DD$(L$ AAH",
            "t@HE HEHuH]H",
            "H`IHHD",
            "H`HO",
            "HU HEIH",
            "He[^_]UHH0HU",
            "LE LM(HM",
            "x!HU",
            "HEIHU",
            "H0]UHH0HU",
            "LE LM(HM",
            "~!HU",
            "HEIHU",
            "H0]UHH0HU",
            "LE LM(HM",
            "~!HU",
            "HEIHU",
            "H0]UHH0HU",
            "LE LM(HM",
            "~!HU",
            "HEIHU",
            "8H0]UHH0HU",
            "LE LM(HM",
            "~!HU",
            "HEIHU",
            "UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UHH H",
            "H ]UHH0H",
            "HEH}",
            "Hu+H",
            "HEHH",
            "Hu+H",
            "HEHH",
            "Hu+H",
            "NHEHH",
            "Hu+H",
            "HEHH",
            "Hu+H",
            "HEHH",
            "Hu+H",
            "OHEHH",
            "Hu+H",
            "HEHH",
            "Hu+H",
            "HEHH",
            "Hu+H",
            "PHEHH",
            "Hu+H",
            "HEHH",
            "Hu+H",
            "HEHH",
            "Hu+H",
            "QHEHH",
            "Hu+H",
            "HEHH",
            "Hu+H",
            "HEHH",
            "Hu+H",
            "RHEHH",
            "Hu+H",
            "HEHH",
            "Hu+H",
            "HEHH",
            "Hu+H",
            "SHEHH",
            "Hu+H",
            "HEHH",
            "Hu+H",
            "HEHH",
            "Hu(H",
            "THEHH",
            "WHEH",
            "Hu(H",
            "HEHH",
            "H0]UHH@HM",
            "HEH}",
            "HEHZ",
            "MEHHiP",
            "HHEH",
            "wMEHHiP",
            "HEH}",
            "u/EE!",
            "EHHiP",
            "H@]UHH@HM",
            "HEH}",
            "HEH\"",
            "EHc\u020bEHHiP",
            "IHEH",
            "}EHc\u020bEHHiP",
            "HEH}",
            "u1EE#H",
            "EHHiP",
            "H@]UHH@HM",
            "HEH}",
            "EEHc\u020bEHHiP",
            "1HEH",
            "EEHc\u020bEHHiP",
            "HEH}",
            "u1EE#H",
            "EHHiP",
            "H@]UHH@HM",
            "HEH}",
            "EEHHiP",
            ",HEH",
            "EEHHiP",
            "HEH}",
            "u.EE ",
            "EHHiP",
            "H@]UHH@HM",
            "HEH}",
            "EEHc\u020bEHHiP",
            "1HEH",
            "EEHc\u020bEHHiP",
            "HEH}",
            "u1EE#H",
            "EHHiP",
            "H@]UHWVHM",
            "^_]UHH@HM",
            "HEH}",
            "HEH~E}",
            "EHHiP",
            ";HEH>E}",
            "uEHHiP",
            "HEH}",
            "u.EE ",
            "EHHiP",
            "H@]UHH0HM",
            "HEH}",
            "LEHMMIHd",
            "EMHHiP",
            "EHHiP",
            "HELEHMMIH",
            "YEMHHiP",
            "EHHiP",
            "HEH}",
            "H0]UHH HM",
            "LE H",
            "LE HM",
            "H ]UHH@HM",
            "HEH}",
            "HMHUHEIHHEx",
            "MEHHiP",
            "MEHHiP",
            "}HMHUHEIHEx",
            "MEHHiP",
            "MEHHiP",
            "HEH}",
            "EHHiP",
            "EHHiP",
            "H@]UHH@HM",
            "HEH}",
            "HMHUHEIHEx",
            "MEHHiP",
            "MEHHiP",
            "xHMHUHEIH",
            "MEHHiP",
            "MEHHiP",
            "HEH}",
            "EHHiP",
            "EHHiP",
            "H@]UHH@HM",
            "HEH}",
            "HEH ",
            "EHHiP",
            "EHEH",
            "wEHHiP",
            "HEH}",
            "u/EE!",
            "EHHiP",
            "H@]UHH@HM",
            "HEH}",
            "E}|\t}",
            "EHHiP",
            "HHEH",
            "E}|\t}",
            "wEHHiP",
            "HEH}",
            "u/EE!",
            "EHHiP",
            "H@]UHH@HM",
            "HEH}",
            "EHHiP",
            "AHEHp",
            "}c~\tH",
            "uEHHiP",
            "HEH}",
            "u.EE ",
            "EHHiP",
            "H@]UHH@HM",
            "HEH}",
            "HEHt",
            "EHHiP",
            "aHEH",
            "wEHHiP",
            "HEH}",
            "u/EE!",
            "EHHiP",
            "H@]UHH@HM",
            "HEH}",
            "HEH\"",
            "EHHiP",
            "\\HEH",
            "EHHiP",
            "HEH}",
            "u@EE2EHHiP",
            "HEHEU",
            "H@]UHH@HM",
            "HEH}",
            "EHHiP",
            "mEHHiP",
            "HEHf",
            "EHHiP",
            "EHHiP",
            "mEHHiP",
            "EHHiP",
            "HEH}",
            "uLEE>",
            "EHHiP",
            "EHHiP",
            "H@]UHH HM",
            "UHSHHM",
            "HHiP",
            "HH)HH",
            "HEHE",
            "t1HE",
            "HE\u0608PhHE",
            "CHH[]UVSH",
            "HHiP",
            "DT$HLL$@DD$8L$0T$(HD$ f",
            "(ILH",
            "HHiP",
            "HL$@H",
            "HL$8H",
            "HL$0H",
            "HL$(H",
            "HL$ 2",
            "EHEHHM",
            "EHHEf",
            "(IHG",
            "ttHEH",
            "HEAH",
            "HEAH",
            "HEAH",
            "HEAH",
            "EHEHHU",
            "EHHEf",
            "HEAH",
            "HEAH",
            "HHEH",
            "HHEH)H`",
            "HHiP",
            "HHiP",
            "HH)HH",
            "H@(H;`",
            "HP8H",
            "H@xHx",
            "HD$ If",
            "HHiP",
            "HHiP",
            "HHiP",
            "HHiP",
            "HHiP",
            "HeHH",
            "HHiP",
            "HHiP",
            "HHiP",
            "HHiP",
            "[^]UHHPHM",
            "DE HE",
            "HA\tEL",
            "HA\tEL",
            "HA\tEL",
            "HA\tEL",
            "HA\tEL",
            "HA\tEL",
            "HA\tEL",
            "HA\tEL",
            "HH$UE",
            "HA\tEL",
            "HH(UE",
            "HA\tEL",
            "HH4UE",
            "HA\tEL",
            "HH8UE",
            "HA\tEL",
            "HH<UE",
            "HA\tEHE",
            "@LEEH",
            "H)HD$ H",
            "E;ErL",
            "HMIHA\tEL",
            "HHPUE",
            "HA\tEL",
            "HHTUE",
            "HA\tEL",
            "HHXUE",
            "HA\tEL",
            "HH\\UE",
            "HA\tEL",
            "HH`UE",
            "HA\tEL",
            "HHdUE",
            "HA\tEL",
            "HA\tEL",
            "HA\tEL",
            "HA\tEL",
            "HA\tEL",
            "HA\tEL",
            "HA\tEL",
            "HA\tEL",
            "HH UE",
            "HA\tEEH]UHHPHM",
            "DE HE",
            "HEHE",
            "@LEE",
            "HA\tEL",
            "HA\tEL",
            "HA\tEL",
            "HA\tEL",
            "HA\tEL",
            "HA\tEL",
            "HA\tEL",
            "HA\tEL",
            "HH$UE",
            "HA\tEL",
            "HH(UE",
            "HA\tEL",
            "HH,UE",
            "HA\tEL",
            "HH4UE",
            "HA\tEL",
            "HH8UE",
            "HA\tEL",
            "HH<UE",
            "HA\tEEH",
            "H)HD$ H",
            "E;ErL",
            "HMIHA\tEL",
            "HHpUE",
            "HA\tEL",
            "HHtUE",
            "HA\tEL",
            "HA\tEL",
            "HA\tEL",
            "HA\tEL",
            "HA\tEL",
            "HA\tEL",
            "HA\tEL",
            "HH UE",
            "HA\tEEH]UHHPHM",
            "DE HE",
            "@LEEH",
            "H)HD$ H",
            "E;ErL",
            "HMIHA\tEL",
            "HA\tEL",
            "HA\tEL",
            "HH<UE",
            "HA\tEL",
            "HA\tEL",
            "HH$UE",
            "HA\tEL",
            "HH(UE",
            "HA\tEL",
            "HH4UE",
            "HA\tEL",
            "HH8UE",
            "HA\tEL",
            "HA\tEL",
            "HA\tEL",
            "HA\tEL",
            "HA\tEL",
            "HA\tEL",
            "HA\tEL",
            "HA\tEL",
            "HHpUE",
            "HA\tEL",
            "HHtUE",
            "HA\tEL",
            "HA\tEL",
            "HA\tEL",
            "HA\tEL",
            "HA\tEL",
            "HA\tEL",
            "HA\tEL",
            "HA\tEL",
            "HA\tEL",
            "HA\tEL",
            "HA\tEL",
            "HA\tEL",
            "HA\tEL",
            "HA\tEL",
            "HA\tEL",
            "HA\tEL",
            "HA\tEL",
            "HA\tEL",
            "HA\tEL",
            "HA\tEL",
            "HH UE",
            "HA\tEEH]UHHPHM",
            "DE HE",
            "@LEEH",
            "H)HD$ H",
            "E;ErL",
            "HMIHA\tEL",
            "HA\tEL",
            "HA\tEL",
            "HA\tEL",
            "HA\tEL",
            "HA\tEL",
            "HHpUE",
            "HA\tEL",
            "HHtUE",
            "HA\tEL",
            "HA\tEL",
            "HA\tEL",
            "HA\tEL",
            "HA\tEL",
            "HA\tEL",
            "HH$UE",
            "HA\tEL",
            "HH(UE",
            "HA\tEL",
            "HH<UE",
            "HA\tEL",
            "HH4UE",
            "HA\tEL",
            "HH8UE",
            "HA\tEL",
            "HA\tEL",
            "HA\tEL",
            "HA\tEL",
            "HA\tEL",
            "HA\tEL",
            "HA\tEL",
            "HA\tEL",
            "HA\tEL",
            "HA\tEL",
            "HA\tEL",
            "HH UE",
            "HA\tEEH]UHHpHM",
            "DE HE",
            "HHEHE",
            "HP@L",
            "HH@HE",
            "HP(HE",
            "HD$@",
            "HD$8",
            "HL$(HD$ P",
            "HA\u0489EL",
            "HH(UE",
            "HA\tEL",
            "HH UE",
            "HA\tEL",
            "HH0UE",
            "HA\tEL",
            "HMIA",
            "HA\tEL",
            "HEHH",
            "HA\tEL",
            "HMIA",
            "HA\tEEHp]UHSH",
            "LE DM(E",
            "\u04c9\u0609EE;E(s\"HE0",
            "E(EE;E(rUHE H",
            "[]UH",
            "HEHEHH",
            "HPxH",
            "HUH@",
            "HEHEHH",
            "HB H",
            "H@ Hu",
            "HEIH",
            "]UHH0\u82b5",
            "}EHHiP",
            "HEHEH",
            "HEUP",
            "HEU4",
            "HEH[E",
            "H0]UHSH(HM",
            "HH)HH",
            "H@ HU",
            "H*H([]UHH@HM",
            ".Et6",
            "EHEHHU",
            "EHEHHU",
            "q;E<p",
            "H@]UHH",
            "LMLEHUHMHL$@HMHL$8HMHL$0HMHL$(HMHL$ p",
            "E\u0609EEEEEEEEE\u070bE",
            "EEEHUHEA",
            "HEHUHEA",
            "HEHUHEA",
            "HEHUHEA",
            "HEHUHEA",
            "HEHUHEA",
            "HEHUHEA",
            "HEHE",
            "HEAH",
            "HUHEA",
            "HEHEH\u0110",
            "]UH`",
            "H@(H",
            "D$ AAH",
            "H@0Hu",
            "HP0H",
            "HEIH",
            "HEH5",
            "]UHH\u0100HM",
            "H@(HEEHH",
            "HEHE",
            "HUHP0H}",
            "HE@`",
            "t2@HEH",
            "?HEH",
            "/HEH",
            "HHEHP",
            "HEH@",
            "Hu'HEH4",
            "HEHP HEH@",
            "HD$@",
            "HD$8",
            "HL$(HD$ @",
            "HA\tE}",
            "(HE\u01c0",
            "H]UHH HM",
            "HH@HE",
            "IH~8",
            "H ]UHWH",
            "LE HE",
            "H@0HEHE",
            "H@(HE\u060bEHH",
            "HEHEH",
            "EHEH@XHEHE",
            "t(HE\u060b<",
            "|[HE\u060b<",
            "PHE\u0609<",
            "t&HE\u060b<",
            "HE\u060b<",
            "HE\u0609<",
            "HEL<",
            "HEAHE\u040b@LHMHULL$ EI\u02098HEH ",
            "HEH9}",
            "HUHEH ",
            "HEHE",
            "HEAHA\u0449E}",
            "@JtjHE",
            "HEH@",
            "LEHD$@",
            "HD$8",
            "HMHL$(HMHL$ MA",
            "HA\u0489EWL",
            "HEH@",
            "HD$@",
            "HD$8",
            "HMHL$(HMHL$ A",
            "HA\u0489E}",
            "t#EAH",
            "HEHH",
            "HEHP HEH@",
            "HD$@",
            "HD$8",
            "HL$(HD$ @",
            "HA\u0489E}",
            "t#EAH",
            "HEH ",
            "HEH@",
            "HHEH@",
            "HEHP HEH@",
            "HD$@",
            "HD$8",
            "HL$(HD$ @",
            "HA\u0489E}",
            "HE\u060b@",
            "HEHP",
            "IHHM",
            "HEH@",
            "HHHD",
            "HEH@",
            "HHEH",
            "_]UHH0HM",
            "EEHH",
            "HEH@",
            "HEH@",
            "HEH@",
            "H\u0490H0]",
            "UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UHH@HM",
            "HD$ H",
            "HHEH\u07b4",
            "HEHU",
            "HEH[",
            "HEH}",
            "HHEH\u86b4",
            "HEHU",
            "HEH}",
            "HEH}",
            "u&HEILE",
            "HEH\u8b74",
            "HEHE",
            "HcHMHEII\u043a",
            "HEH\u0273",
            "HEH]UHp",
            "H)HD$0H",
            "HD$ ",
            "HD$ ",
            "HD$ ",
            "HT$ A",
            "HD$ ",
            "HUHD$ ",
            "HAHU",
            "]UHWSH@HM",
            "LE HE HEH",
            "HMHHHL@HE",
            "HM MIH$",
            "HEH}",
            "HE IH",
            "HHEHH)H",
            "H@[_]UHH`HM",
            "H?EHEH",
            "EHEH",
            "EHEH",
            "EHEH",
            "EHEH",
            "H!HEH",
            "H\tHEH",
            "MUED$ AAH",
            "\u8a17EAH",
            "\u8457H`]UWSH",
            "H)HD$@H",
            "HD$ ",
            "HD$ ",
            "HD$ ",
            "HT$ A",
            "HD$ ",
            "HD$ ",
            "HD$ ",
            "HT$ A",
            "HAH(",
            "u.PDp",
            "HAH(",
            "HAH(",
            "HD$ ",
            "HD$ ",
            "HD$ ",
            "HPPp",
            "HD$ ",
            "H@PIH",
            "HD$ ",
            "HulH",
            "HuQH",
            "Hu6H",
            "Ht!H",
            "P`H ",
            "P`H(",
            "HulH",
            "HuQH",
            "Hu6H",
            "HtDH",
            "HEpH",
            "HEpH",
            "HEpH",
            "HEpH",
            "HEpH",
            "Ht9H ",
            "H@PH9w",
            "HPXmHx",
            "H@X@",
            "RLHU\u023a",
            "HuHH(",
            "HPXH(",
            "HPXH ",
            "u+Dp",
            "HHEH\u023a",
            "HuHH ",
            "IHHH)H ",
            "H9v&H ",
            "vrH\u01c5@",
            "v7H ",
            "\u8244HULHEpH{HE@ELHHE0E,",
            "HE@Hu",
            "@Jt9Hp",
            "HMHHHHPHp",
            "tLH ",
            "HEPEAH\u8b57",
            "HUPHp",
            "HEPAHx",
            "HUPHp",
            "H@XH",
            "HEPAHB",
            "HUPHp",
            "HEPA",
            "HUPHp",
            "HMHHHHPHp",
            ".bin@",
            "HUHp",
            "UHcH",
            "Hu*H",
            "H9tAH",
            "HD$0",
            "HT$(H",
            "HT$ MI\u023a",
            "HAH(",
            "LE0HM@H",
            "HT$ MI\u023a",
            "HAH(",
            "tHH(",
            "H@XH ",
            "L$ H=",
            "H@XH(",
            "DHLH(",
            "H@XAH",
            "L$ H",
            "H@XIH",
            "S~H(",
            "@LAH",
            "&~H(",
            "HMHHHH",
            " -D @",
            "BITA@",
            "LIGN@",
            "HulHx",
            "HuQHx",
            "Hu6Hx",
            "HMHHHH",
            " -D @",
            "BFI_@",
            "@JtEH",
            "HMHHHH",
            " -D @",
            "GOFF@",
            "HMHHHH",
            " -D @",
            "OCL1@",
            "HD$(",
            "HD$ ",
            "HM HL$(HD$ ",
            "HE H$",
            "LE p",
            "HD$(",
            "HL$ MA",
            "HU,HD$ ",
            "HD$ ",
            "II\u023ae",
            "E,9<",
            "HD$ ADp",
            "HD$ ",
            "II\u023af",
            "HD$0",
            "HL$(HT$ ",
            "HAH(",
            "HE@H",
            "u Hp",
            "HHXH(",
            "@LH(",
            "@Ht\tH",
            "LEpHL$(HT$ IH",
            "HD$(",
            "HD$ ",
            "HHL$(HD$ ",
            "HD$(",
            "HL$ MA",
            "HAH(",
            "}\u0209H ",
            "sFH ",
            "EpH(",
            "HP8H(",
            "HT$ A",
            "HAH(",
            "t4H(",
            "H@0Hu$",
            "HT$ A",
            "HAH(",
            "HT$ A",
            "HAH(",
            "UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UHH HM",
            "LE HE",
            "UEM1#E3E",
            "EUMAA!\u040bUM\t#UD\t",
            "UEM1#E3E",
            "HE H",
            "EUMAA!\u040bUM\t#UD\t",
            "UEM1#E3E",
            "HE H",
            "EUMAA!\u040bUM\t#UD\t",
            "\u0409EHE",
            "UP HE",
            "UP$HE",
            "UP(HE",
            "UP,E[VHE",
            "UP0HE",
            "UP4HE",
            "UP8HE",
            "UP<HE",
            "P@HE P",
            "PDHE P",
            "PHHE ",
            "HU H",
            "HU H",
            "1HU H",
            "PPHE",
            "PPHE",
            "PpHE H",
            "HU H",
            "HU H",
            "1HU H",
            "PTHE",
            "PTHE",
            "PtHE",
            "EU1#E3E",
            "\u020d\u06f5HE",
            "PhHE",
            "PhHE",
            "1EUAA!EU\t#ED\t",
            "PlHE",
            "PlHE",
            "P|HE",
            "P|HE",
            "PpHE",
            "HE H",
            "HE P",
            "PxHE",
            "PxHE",
            "HE H",
            "PXHE",
            "P\\HE",
            "P`HE",
            "PPHE",
            "PdHE",
            "P|HE",
            "[dPHE",
            "$.:HE",
            "H ]UHH`HM",
            "HEHEH",
            "HEHH",
            "HEHEHEHEHEHH",
            "RmHE",
            "t_HEH@(H@IH",
            "HEH@(",
            "PHEUH",
            "EUEAAH",
            "\teHEHP",
            "MHEAH7E",
            ";EwHEHRy",
            "H`]UHWH8HM",
            "LE  ",
            "HEH}",
            "LHHHEHU",
            "HEHH",
            "H\u01f2HU HEH",
            "HJ HH HJ(HH(HJ0HH0HR8HP8HEH",
            "HUIL",
            "cH8_]",
            "UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UHH`HM",
            "\u0409EDEHE",
            "EE=@B",
            "E-@B",
            "EHE\u043a",
            "U\u040bE9",
            "U\u040bE9u",
            "U\u050bE9~",
            "qUE\u0409)\u0209EUE\u0509)\u0209E\u010bE\u0105y",
            "E\u010bEHcHE",
            "H`]UHH@M",
            "HUHEHKu",
            "H@]UHH H",
            "H ]UHH HM",
            "H ]UHH HM",
            "\u01adH ]UHH0M",
            "HEHEH0]UHH HM",
            "H ]UHH H",
            "$H ]UHH H",
            ">H ]UHH HM",
            "H ]UHH0H",
            "HtxH",
            "HtlH",
            "Ht`H",
            "HtTH",
            "HtHH",
            "Ht<H",
            "Ht0H",
            "Ht$H",
            "C\u0409E}",
            "H0]USH",
            "HHi$",
            "HHi$",
            "HA\u0409H",
            "HHi$",
            "HU\uc2c5D",
            "HHi$",
            "HHi$",
            "HHi$",
            "HHi$",
            "HHi$",
            "McMi$",
            "H\\$HDD$@L$8T$0D$(L\\$ EH",
            "HHi$",
            "HHiP",
            "HHiP",
            "HHiP",
            "HHiP",
            "HHiP",
            "HHi$",
            "HHiP",
            "HU\u82c5<",
            "HHiP",
            "HHiP",
            "HHiP",
            "HHiP",
            "HHiP",
            "HHiP",
            "HHiP",
            "HHiP",
            "HHiP",
            "HHiP",
            "HHi$",
            "HHiP",
            "Ht\"\\",
            "HHiP",
            "HHi$",
            "HHiP",
            "HHiP",
            "HHiP",
            "HHi$",
            "$PH0",
            "HcHH",
            "HcHH",
            "HHiP",
            "HHiP",
            "HcHH",
            "~,H ",
            "HcHH",
            "HcHH",
            "HHiP",
            "HHiP",
            "HHiP",
            "kdH0",
            "HHiP",
            "HHiP",
            "HHiP",
            "HHiP",
            "HHiP",
            "HcHH",
            "~,H ",
            "HcHH",
            "HcHH",
            "HHiP",
            "HHiP",
            "HHiP",
            "HcHH",
            "~,H ",
            "HcHH",
            "HcHH",
            "HHiP",
            "EHEHHU",
            "(IAH",
            "HcHH",
            "HcHH",
            "HcHH",
            "HHi$",
            "HHiP",
            "HHiP",
            "HHiP",
            "I\u0209A\u0445t",
            "HHiP",
            "HHiP",
            "I\u0209AH0",
            "HHiP",
            "HHiP",
            "HHiP",
            "HHiP",
            "t H0",
            "HHiP",
            "HHiP",
            "HHiP",
            "H<t^H",
            "[]UHH HM",
            "^H ]UHH@M",
            "HHiP",
            "HHiP",
            "HEHEH3",
            "HHiP",
            "EH@]UHHM",
            ")]UHH0M",
            "HHiP",
            "HHiP",
            "HEH=E",
            "EH0]UHHM",
            ")]UHH0M",
            "HHiP",
            "HHiP",
            "HEH=E",
            "EH0]UHHM",
            "^]UHH@M",
            "HHiP",
            "HHiP",
            "HE&L",
            "HEHC",
            "EH@]UHHM",
            "]UHH0M",
            "HHiP",
            "HHiP",
            "HEGL",
            "A\u0409E<}",
            "H0]UHH HM",
            "t%HE",
            "HaHE",
            "H ]UHH0M",
            "HHiP",
            "HHiP",
            "HEHEHEEH0]UHH HM",
            "t%HE",
            "HaHE",
            "H ]UHH0M",
            "HHiP",
            "HHiP",
            "HEHEHEEH0]UHH0HM",
            "HMI\u0209A\u0445t",
            "H0]UHH0M",
            "HHiP",
            "HHiP",
            "HEHEH7EEH0]UHH0M",
            "LE LM(E",
            "HHiP",
            "HHiP",
            "HECHEHHE",
            "HHiP",
            "A\u0405t+HE ",
            "JHEHVHU ",
            "HEHHE0",
            "HEHHU8",
            "HEH|HU@",
            "HEHHUH",
            "HEHHUP",
            "H0]UHH0M",
            "LE E",
            "HHiP",
            "HHiP",
            "HEHEP",
            ")HE ",
            "H0]UHHPM",
            "HHiP",
            "HHiP",
            "HEHEU",
            "EEHcHH",
            "H)HD$ H",
            "HEEH",
            "HUI\u043a",
            "LHMEHcHH",
            "~#HMEHcHH",
            "E;E|HMEHcHH",
            "HUAL",
            "HUI\u043a",
            "AHMEHcHH",
            "HMEHcHH",
            "HMEHcHH",
            "HMEHcHH",
            "HHiP",
            "HEHE\u060b",
            ")HE\u060b",
            "EH]UHH0M",
            "LE E",
            "HHiP",
            "~XgE",
            "HHiP",
            "HEHE\\",
            ")HE ",
            "H0]UHH@M",
            "HHiP",
            "HHiP",
            "HHiP",
            "HEHE@",
            "EEHcHH",
            "H)HD$ H",
            "HEEH",
            "HUI\u043a",
            "HMEHcHH",
            "LHMEHcHH",
            "~#HMEHcHH",
            "E;E|L",
            "HUAL",
            "HUI\u043a",
            "AHMEHcHH",
            "HMEHcHH",
            "HMEHcHH",
            "HMEHcHH",
            "EH]UHH0M",
            "LE E",
            "HHiP",
            "HHiP",
            "HEHEh",
            "^HE ",
            "H0]UHH@HM",
            " HEHEHH",
            "EHEHG",
            "EH@]UHHPM",
            "HHiP",
            "HHiP",
            "HEHE\u82c0@",
            "EEHcHH",
            "H)HD$ H",
            "HE\u060bEH",
            "HUI\u043a",
            "LHM\u060bEHcHH",
            ";E~#HM\u060bEHcHH",
            "E;E|HM\u060bEHcHH",
            "HU\u0609AL",
            "HUI\u043a",
            "AHM\u060bEHcHH",
            "HM\u060bEHcHH",
            "HM\u060bEHcHH",
            "HM\u060bEHcHH",
            "4EH]UHH0M",
            "LE E",
            "HHiP",
            "dQAE",
            "HHiP",
            "HEHE",
            "H0]UHH0M",
            "HHiP",
            "HHiP",
            "HEHE",
            "7/E8",
            "u:HE",
            "u4HE\u01c0",
            "AHEU",
            "A\u0449EHE\u0180",
            "EH0]UHH@M",
            "HHiP",
            "HHiP",
            "HMI\u0209AHE",
            "EH@]UHHPM",
            "DE DM(E",
            "HHiP",
            "HEE(U",
            ",EHEH",
            "HHiP",
            "HHiP",
            "E\u060bE EE",
            "HUHEIH",
            "}9E9E }1DE",
            "(,E\u0409EHE",
            "HHiP",
            "}|E ;E}t}",
            "HHiP",
            "EE;E",
            "E ;E",
            "HHiP",
            "D@Mgfff",
            "*HED",
            "Mgfff",
            "E ;E~E}",
            "HHiP",
            ";E(~#H",
            "_*HE",
            "EEZE ;E}R}",
            "HHiP",
            "E9E~",
            "E9E}",
            "E\u0509EE;E",
            "\tHE0",
            "E;E tIEADE",
            "E;E }",
            "HP]UHHpM",
            "HHiP",
            "HEHEH",
            "HE\u040b@",
            "AHEH/",
            "*E\u030bE",
            "HHiP",
            ",EHEHwELM",
            "kdE\u010bE\u0109E}",
            "Hu2HED",
            "M\u020bEHUHT$ EA\u0209",
            "E;E~",
            "EE\u0309EHE",
            "EDMDE\u020bUEHMHL$ BE}",
            ";E}GHE\u040b",
            ";E}8DE",
            "&HE\u040b",
            "EHE\u063a",
            "HHiP",
            ";E}JHE\u040b",
            ";E};}",
            "c&HE\u040bX",
            "U\u0109)\u0209E",
            "HHiP",
            ";E~uHE\u040b",
            ";E~f",
            "t^HE",
            "uTHE\u040bX",
            "HHiP",
            ");E~",
            "\u0409EHE\u040b",
            "EE;E|",
            "E;E~THE\u040b",
            ";E}EM",
            ")\u0209EEADE",
            "GHE\u040bU\u0309",
            "Hp]UHH0M",
            "HHiP",
            "HHiP",
            "HEPL",
            "H0]UHH0M",
            "HHiP",
            "HHiP",
            "HEHx",
            "H0]UHH0M",
            "HHiP",
            "HHiP",
            "HHiP",
            "D)EHEA",
            "\u0405u}HE",
            "\u0405u}HE",
            "wCHE",
            "\u0405uNH",
            "HHiP",
            "\u0405u|E",
            "HHiP",
            "HHiP",
            ";E}\t}",
            "\u0405ufHE",
            ";E}\t}",
            "HHiP",
            "H0]UHH",
            "HHiP",
            "ELEHMHEHUHT$@HUHT$8HUHT$0HUHT$(HUHT$ MIH",
            "EHEHHU",
            "@E\u0205y",
            "E\u0305xHH",
            "@E\u0205x",
            "u@E\u0305x",
            "Q@DE\u010bM",
            "ZDU\u050bU",
            "EHEILM",
            "EDD$(L$ f",
            "(IEH",
            "HHiP",
            "HHiP",
            "AAHH",
            "AA)HE",
            "EAHH",
            "?,$EHEA",
            "HUHEIH",
            "UEA\u0409H",
            "EE9E|",
            "E9E~9H",
            "f>y#EHEA",
            "HUHEIH",
            "UEA\u0409H",
            ":EE9E|",
            "E9E~9H",
            "=\"EHEA",
            "HUHEIH",
            "$UEA\u0409H",
            "]EE9E|",
            "E9E~9H",
            "<!EHEA",
            "HUHEIH",
            "MHEHHU",
            "EHEHHM",
            "s; EHEA",
            "\u0405u}H",
            "uE}|",
            "EHEA",
            "\u0405uPE",
            "]UHH H",
            "\u0410H ]UHH0M",
            "EHHiP",
            "HEEHHiP",
            "HEHx",
            "AHEHx",
            "UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UHM",
            "\t\t]UHSH8HM",
            "LE HE",
            "+HEH",
            "HEH;E rH8[]UHH",
            "DE E",
            "D\t\t\u0289",
            "E;E rH",
            "]UH0",
            "HJ HH HJ(HH(HJ0HH0HR8HP8\u01c5",
            "HDAA",
            "EMU1!",
            "AA1EMU\t\u0289!\u044bUE!\tD",
            "\u0409EEU",
            "EMU1!",
            "AA1EMU\t\u0289!\u044bUE!\tD",
            "\u0409EEU",
            "EMU1!",
            "AA1EMU\t\u0289!\u044bUE!\tD",
            "\u0409EEU",
            "EMU1!",
            "-[$J",
            "AA1EMU\t\u0289!\u044bUE!\tD",
            "\u0409EEU",
            "EMU1!",
            "AA1EMU\t\u0289!\u044bUE!\tD",
            "\u0409EEU",
            "EMU1!",
            "AA1EMU\t\u0289!\u044bUE!\tD",
            "\u0409EEU",
            "EMU1!",
            "-\\}m",
            "AA1EMU\t\u0289!\u044bUE!\tD",
            "\u0409EEU",
            "EMU1!",
            "AA1EMU\t\u0289!\u044bUE!\tD",
            "\u0409EEU",
            "EMU1!",
            "-hU'",
            "AA1EMU\t\u0289!\u044bUE!\tD",
            "\u0409EEU",
            "EMU1!",
            "AA1EMU\t\u0289!\u044bUE!\tD",
            "\u0409EEU",
            "EMU1!",
            "AA1EMU\t\u0289!\u044bUE!\tD",
            "\u0409EEU",
            "EMU1!",
            "AA1EMU\t\u0289!\u044bUE!\tD",
            "\u0409EEU",
            "EMU1!",
            "AA1EMU\t\u0289!\u044bUE!\tD",
            "\u0409EEU",
            "EMU1!",
            "AA1EMU\t\u0289!\u044bUE!\tD",
            "\u0409EEU",
            "EMU1!",
            "-Y#d",
            "AA1EMU\t\u0289!\u044bUE!\tD",
            "\u0409EEU",
            "EMU1!",
            "AA1EMU\t\u0289!\u044bUE!\tD",
            "\u0409EEU",
            "EMU1!",
            "AA1EMU\t\u0289!\u044bUE!\tD",
            "\u0409EEU",
            "EMU1!",
            "AA1EMU\t\u0289!\u044bUE!\tD",
            "\u0409EEU",
            "EMU1!",
            "AA1EMU\t\u0289!\u044bUE!\tD",
            "\u0409EEU",
            "EMU1!",
            "AA1EMU\t\u0289!\u044bUE!\tD",
            "\u0409EEU",
            "EMU1!",
            "AA1EMU\t\u0289!\u044bUE!\tD",
            "\u0409EEU",
            "EMU1!",
            "AA1EMU\t\u0289!\u044bUE!\tD",
            "\u0409EEU",
            "EMU1!",
            "AA1EMU\t\u0289!\u044bUE!\tD",
            "\u0409EEU",
            "EMU1!",
            "AA1EMU\t\u0289!\u044bUE!\tD",
            "\u0409EEU",
            "EMU1!",
            "AA1EMU\t\u0289!\u044bUE!\tD",
            "\u0409EEU",
            "EMU1!",
            "AA1EMU\t\u0289!\u044bUE!\tD",
            "\u0409EEU",
            "EMU1!",
            "AA1EMU\t\u0289!\u044bUE!\tD",
            "\u0409EEU",
            "EMU1!",
            "AA1EMU\t\u0289!\u044bUE!\tD",
            "\u0409EEU",
            "EMU1!",
            "AA1EMU\t\u0289!\u044bUE!\tD",
            "\u0409EEU",
            "EMU1!",
            "-nX*",
            "AA1EMU\t\u0289!\u044bUE!\tD",
            "\u0409EEU",
            "EMU1!",
            "AA1EMU\t\u0289!\u044bUE!\tD",
            "\u0409EEU",
            "EMU1!",
            "AA1EMU\t\u0289!\u044bUE!\tD",
            "\u0409EEU",
            "EMU1!",
            "AA1EMU\t\u0289!\u044bUE!\tD",
            "\u0409EEU",
            "EMU1!",
            "AA1EMU\t\u0289!\u044bUE!\tD",
            "\u0409EEU",
            "EMU1!",
            "AA1EMU\t\u0289!\u044bUE!\tD",
            "\u0409EEU",
            "EMU1!",
            "AA1EMU\t\u0289!\u044bUE!\tD",
            "\u0409EEU",
            "EMU1!",
            "AA1EMU\t\u0289!\u044bUE!\tD",
            "\u0409EEU",
            "EMU1!",
            "AA1EMU\t\u0289!\u044bUE!\tD",
            "\u0409EEU",
            "EMU1!",
            "-6=~",
            "AA1EMU\t\u0289!\u044bUE!\tD",
            "\u0409EEU",
            "EMU1!",
            "-{\u04cdm",
            "AA1EMU\t\u0289!\u044bUE!\tD",
            "\u0409EEU",
            "EMU1!",
            "AA1EMU\t\u0289!\u044bUE!\tD",
            "\u0409EEU",
            "EMU1!",
            "AA1EMU\t\u0289!\u044bUE!\tD",
            "\u0409EEU",
            "EMU1!",
            "AA1EMU\t\u0289!\u044bUE!\tD",
            "\u0409EEU",
            "EMU1!",
            "AA1EMU\t\u0289!\u044bUE!\tD",
            "\u0409EEU",
            "EMU1!",
            "AA1EMU\t\u0289!\u044bUE!\tD",
            "\u0409EEU",
            "EMU1!",
            "AA1EMU\t\u0289!\u044bUE!\tD",
            "\u0409EEU",
            "EMU1!",
            "AA1EMU\t\u0289!\u044bUE!\tD",
            "\u0409EEU",
            "EMU1!",
            "AA1EMU\t\u0289!\u044bUE!\tD",
            "\u0409EEU",
            "EMU1!",
            "AA1EMU\t\u0289!\u044bUE!\tD",
            "\u0409EEU",
            "EMU1!",
            "AA1EMU\t\u0289!\u044bUE!\tD",
            "\u0409EEU",
            "EMU1!",
            "LwH'",
            "AA1EMU\t\u0289!\u044bUE!\tD",
            "\u0409EEU",
            "EMU1!",
            "AA1EMU\t\u0289!\u044bUE!\tD",
            "\u0409EEU",
            "EMU1!",
            "AA1EMU\t\u0289!\u044bUE!\tD",
            "\u0409EEU",
            "EMU1!",
            "AA1EMU\t\u0289!\u044bUE!\tD",
            "\u0409EEU",
            "EMU1!",
            "AA1EMU\t\u0289!\u044bUE!\tD",
            "\u0409EEU",
            "EMU1!",
            "AA1EMU\t\u0289!\u044bUE!\tD",
            "\u0409EEU",
            "EMU1!",
            "AA1EMU\t\u0289!\u044bUE!\tD",
            "\u0409EEU",
            "EMU1!",
            "AA1EMU\t\u0289!\u044bUE!\tD",
            "\u0409EEU",
            "EMU1!",
            "AA1EMU\t\u0289!\u044bUE!\tD",
            "\u0409EEU",
            "EMU1!",
            "AA1EMU\t\u0289!\u044bUE!\tD",
            "\u0409EEU",
            "EMU1!",
            "AA1EMU\t\u0289!\u044bUE!\tD",
            "\u0409EEU",
            "EMU1!",
            "AA1EMU\t\u0289!\u044bUE!\tD",
            "\u0409EEU",
            "EMU1!",
            "AA1EMU\t\u0289!\u044bUE!\tD",
            "\u0409EEU",
            "EMU1!",
            "AA1EMU\t\u0289!\u044bUE!\tD",
            "Hc\u048bT",
            "]UHHM",
            "g\tjHE",
            "rn<HE",
            ":OHE",
            "[]UH",
            "HE@H`HE@A",
            "HP@HEH",
            "HH HJ H@(HB(HUHE@A",
            "HHE@H",
            "HU HP",
            "HU(HP",
            "HU0H@",
            "HE8H",
            "6666,",
            "D6666,",
            "vHUH",
            "HP@H",
            "HHE`H\u01c5,",
            "\\\\\\\\,",
            "D\\\\\\\\,",
            "vHUHE`A",
            "HU`H@H",
            "HUHP",
            "HUHP",
            "HUH@",
            "HP HEA",
            "HHEH",
            "HE`H",
            "HUHP",
            "HUHP",
            "HUH@",
            "HEHE`HP HEA",
            "]UHH",
            "LE HEHHEA",
            "HP@HpH",
            "HH HJ H@(HB(HpHEA",
            "H HEH",
            "HUHP",
            "HUHP",
            "HUH@",
            "HEHE H=E",
            "\\\\\\\\EpE",
            "E\u01c4p\\\\\\\\E",
            "vHpHE A",
            "HHEHE",
            "6666EpE",
            "E\u01c4p6666E",
            "vHpHEA",
            "H'HU",
            "HP@HEA",
            "HHEA",
            "HHEH",
            "HpHP",
            "HxHP",
            "HUH@",
            "HpH H",
            "HpHE A",
            "HlH\u0130",
            "]UHHPHM",
            "H HU",
            "H$HU",
            "H(HU",
            "H,HU",
            "H0HU",
            "H4HU",
            "H8HU",
            "H<HU",
            "1EEU",
            "1E\u060bEU",
            "1E\u010bE\u040bU",
            "1EEU",
            "\t1E\u070bEU",
            "\t1E\u020bE\u050bU",
            "\t1EEU",
            "\t1EEU",
            "1E\u030bE\u060bU",
            "1EE\u010bU",
            "1EEU",
            "1E\u040bE\u070bU",
            "1EE\u020bU",
            "1EEU",
            "1E\u050bEU",
            "1EEU",
            "1EEU",
            "1EE\u060bU",
            "1E\u040bE\u010bU",
            "1E\u030bEU",
            "\t1EEU",
            "\t1EE\u050bU",
            "\t1E\u070bEU",
            "\t1E\u020bEU",
            "1EEU",
            "1EE\u040bU",
            "1E\u060bE\u030bU",
            "1E\u010bEU",
            "1EEU",
            "1EE\u070bU",
            "1E\u050bE\u020bU",
            "1EHE",
            "HP HE",
            "HP$HE",
            "HP(HE",
            "HP,HE",
            "HP0HE",
            "HP4HE",
            "HP8HE",
            "HP<HE",
            "HP]UHH",
            "LE HPHEHE",
            "H?HHEHPHHM",
            "HPHUM",
            "HH HJ HH(HJ(HH0HJ0HH8HJ8HH@HJ@HHHHJHHHPHJPHHXHJXHH`HJ`HHhHJhHHpHJpH@xHBxHPHP@HPHXHPHPHJ@H>HPHUM",
            "HH HJ HH(HJ(HH0HJ0HH8HJ8HH@HJ@HHHHJHHHPHJPHHXHJXHH`HJ`HHhHJhHHpHJpH@xHBxHPHP@HPHHPHPHJ@HoE",
            "EHEE",
            "vHPHP@HPHHPHPHJ@HE%",
            "EHEE",
            "vHPHP@HPHFHPHPHJ@H,E",
            "HU HPIHHM",
            "]UHH",
            "HLHEHE",
            "HEHU",
            "HwHE",
            "\t\t\u0409E\u0738",
            "H)HD$ H",
            "HEHMHUHEIHHUHEA",
            "HyH]UHH",
            "DE HE",
            "EHEA",
            "\u040bE f",
            "\t\t\u0409E\u0738",
            "H)HD$ H",
            "HEHpHUHEIH\tE",
            "\t\t\u0409EE;E",
            "H]UHH",
            "LE LM(HE HLHEHE8@",
            "HU HEA",
            "HEH}",
            "HEUP",
            "EPEH`HUHEIH",
            "\t\t\u0409E\u070bE;EwXHE HLUP",
            "\u028bUPf",
            "D\t\t\u0289",
            "HEHUP",
            "%EP;E@s",
            "HEHUP",
            "HEH7",
            "UHHM",
            "]UHH HM",
            "H ]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UHH HM",
            "H ]UHH@HM",
            "HEHHM",
            "HEHP",
            "HEH}",
            "EH@]UHH\u0100HM",
            "E\\\\.\\ECOMnEnnnnE",
            "HEH}",
            "HEA\u043a",
            "HA\u0449E}",
            "H)HD$ H",
            "HE\u060bE",
            "H)HD$ H",
            "E9Er\u04cbEH",
            "\tHUHEAHA\u0449E}",
            "EHUA\u0405uhL",
            "HEHUHA\u0409EH",
            "HEH\u0483}",
            "u=Ex6MH",
            "HEAH",
            "HEHU",
            "9HEHH",
            "\u040bEH]UHH0HU",
            "LE LM(HM",
            "HEHHM",
            "EEH0]UHWVHpHM",
            "LE DM(E",
            "HMHHHH",
            "HEHE",
            "HMHHHH",
            "HEHEH@",
            "HEHE\u063a:",
            "HEH}",
            "HUHEHH)HHEHEH;Eu#HE",
            "HMHEIHH",
            "\u0405t4HEH;E",
            "HMHEIHH",
            "HEHH",
            "HEHH",
            "umH}",
            "tgHE\u063a",
            "Ht&HEIH",
            "HEH&+HEHU",
            "HEHEHEH@",
            "HEHEHP",
            "HE \u0409",
            "EHp^_]UHWSH",
            "HEH}",
            "HEHH",
            "tHhH;Eu",
            "HtHEEE\u0739y7E\u0709EE",
            "EHEH",
            "EHEH",
            "HUH\t",
            "EE)EE)EE",
            "1EE)E\u070bE)E\u070bE",
            "1E\u070bE)EE)EE",
            "1EE)EE)EE",
            "1EE)E\u070bE)E\u070bE",
            "1E\u070bE)EE)EE",
            "1EE)EE)EE",
            "1EE)E\u070bE)E\u070bE",
            "1E\u070bE)EE)EE",
            "1EHE",
            "EHEH\t",
            "EHEH",
            "EHEH",
            "EHEH",
            "EHEH",
            "EHEH",
            "EHEH",
            "EHEH",
            "EHEH",
            "EE)EE)EE",
            "1EE)E\u070bE)E\u070bE",
            "1E\u070bE)EE)EE",
            "1EE)EE)EE",
            "1EE)E\u070bE)E\u070bE",
            "1E\u070bE)EE)EE",
            "1EE)EE)EE",
            "1EE)E\u070bE)E\u070bE",
            "1E\u070bE)EE)EE",
            "#EEH",
            "Ht6H",
            "H@ HH",
            "HEoHE",
            "eHE@@",
            "u!HEH@8HtA",
            "t?HEH@0Ht#HEHP0H",
            "H@ HH",
            "HE\u82d5tHEP",
            "HEHU",
            "HEH@ ",
            "HEHP",
            "HEHP8HE@@",
            "HHHD",
            "HHHD",
            "HUHP",
            "H@ HH",
            "HEHP",
            "HEHP",
            "HEHE@DE\u0239y7E\u0209EE",
            "EHEH",
            "EHE@DHUH",
            "HMH\t",
            "HEPDE)EHE@D)EHE@D",
            "1EHE@D)E\u020bE)E\u020bE",
            "1EHE@D+UHEPDHE@D+UHEPDHE@DU",
            "1HEPDE)EHE@D)EHE@D",
            "1EHE@D)E\u020bE)E\u020bE",
            "1EHE@D+UHEPDHE@D+UHEPDHE@DU",
            "1HEPDE)EHE@D)EHE@D",
            "1EHE@D)E\u020bE)E\u020bE",
            "1EHE@D+UHEPDHE@D+UHEPDHE@DU",
            "1HEPDHE",
            "HE@DP",
            "HEPD}",
            "HE@DHUH",
            "HEPDHE@DHUH\t",
            "HEPDHE@DHUH",
            "HEPDHEH",
            "EHEH",
            "EHEH",
            "EHEH",
            "EHEH",
            "EHEH",
            "EHEH",
            "E\u030bE)EHE@D)EHE@D",
            "1EHE@D)E\u020bE)E\u020bE",
            "1EHE@D+UHEPDHE@D+UHEPDHE@DU",
            "1HEPDE)EHE@D)EHE@D",
            "1EHE@D)E\u020bE)E\u020bE",
            "1EHE@D+UHEPDHE@D+UHEPDHE@DU",
            "1HEPDE)EHE@D)EHE@D",
            "1EHE@D)E\u020bE)E\u020bE",
            "1EHE@D+UHEPDHE@D+UHEPDHE@DU",
            "1HEPDHEPDH",
            "!\u0409EH",
            "HEHP0HEH@(",
            "Ht'H",
            "HEH@",
            "HEH@",
            "HEH}",
            "HEH@",
            "HEI\u043a",
            "HEHP",
            "HEH@",
            "HEH@",
            "AHEH@",
            "HEH@",
            "B(HEH@",
            "HEH@",
            "HEH@ HEHEP4HEH@",
            "!\u0409EEH",
            "EHxHx@",
            "HEH@",
            "@(9vCHEH@",
            "P,Hx@",
            "HUHR",
            "\\HxP",
            "HEH@",
            "HEHP HxH",
            "HUHP",
            "HxHUH",
            "HEHEH}",
            "HEH@",
            "HEH@",
            "HEH@",
            "HUHR",
            "HEH@",
            "HEH@",
            "HEHP",
            "HEH@",
            "H,HEH@",
            "HEH@",
            "B0HEH@",
            "HEH@",
            "[_]UHWH",
            "DD\u0208U E(HD$0",
            "HEH}uoH",
            "{3LE",
            "EALE",
            "HUHEA4",
            "E kdEEEE",
            "EEHUHEHH",
            "tTHE",
            "_]UHH0M",
            "LE LM(HE",
            "_H}(",
            "HHEH}",
            "~:HEH",
            "EH}(",
            "HEH)E H} ",
            "HEH0]UWHH",
            "HEHEH",
            "HMHHHHPHEH",
            "HEHo",
            "HEHEH",
            "HMHHHHPHEH",
            "HEHEH",
            "HMHHHHPHEH",
            "_]UHH0HM",
            "HHEH}",
            "t\tHE}",
            "HYHEH}",
            "t\tHEH",
            "H#HEH}",
            "t\tHE",
            "HHEH}",
            "t\tHE",
            "HHEH}",
            "t\tHE",
            "HEH}",
            "t\tHEn",
            "HLHEH}",
            "t\tHE;",
            "HEH}",
            "t\tHE",
            "HHEH}",
            "t\tHE",
            "HHEH}",
            "t\tHE",
            "HtHEH}",
            "t\tHEc",
            "H=HEH}",
            "t\tHE,",
            "HEH}",
            "t\tHE",
            "HEH}",
            "t\tHE",
            "HEH}",
            "t\tHE",
            "sHEH}",
            "HEeHE",
            "DHEH}",
            "HE6HE",
            "HEH}",
            "H0]UHP",
            "E<\tt%H",
            "E<at+H",
            "pHEIH",
            "XHE;",
            "HEHEHE=",
            "HEHEHE",
            "HEHEHUA",
            "YHEH",
            "E<bt+H",
            "HEIH",
            "\u8f30HEH",
            "E<ct+H",
            "HEIH",
            "E<dt+H",
            "HEIH",
            "\u80adHEH",
            "E<et+H",
            "UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UHH HM",
            "H ]UHH@HM",
            "DE LM(HE(Ht",
            ";U ~\tH",
            "HD$0E D$(E",
            "D$ ILE",
            "H@]UHH`HM",
            "LE HE H@(HEHE",
            "UHcH",
            "tZEH",
            "UHcH",
            "E;E~5EP",
            ";E~^EP",
            "t1HE",
            "UHcH",
            "UHcH",
            "EEHEHEE",
            "UHE LE",
            "HA\u0408E",
            ";E~)EP",
            ";E~m",
            "YHEHH@",
            "EHEHHU",
            "(IIH",
            "EH`]UHHM",
            "]UHHM",
            "]UHHM",
            "t,HE",
            "t:HE",
            "]UHH`HM",
            "\u0409EDEHE",
            "EE=@B",
            "E-@B",
            "EHE\u043a",
            "U\u040bE9",
            "U\u040bE9u",
            "U\u050bE9~",
            "qUE\u0409)\u0209EUE\u0509)\u0209E\u010bE\u0105y",
            "E\u010bEHcHE",
            "H`]UHH@M",
            "HUHEHKu",
            "H@]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UHH HM",
            "H ]UHH HM",
            "sH ]UHH HM",
            "H ]UHH HM",
            "H ]UHH HM",
            "DE HE",
            "t.E A",
            "H ]UHH M",
            "LE HE HE",
            "HH;E t",
            "HE H ]UHSHXM",
            "LE LM(HH",
            "HU(HE IH",
            "HE(H",
            "HEHEHH",
            "H)HD$ H",
            "HEHM(HEH",
            "HU IH\u01f4",
            "HE\u0608P",
            "HE(HE\u0608P",
            "HEHEHUHEIH",
            "HEH}",
            "HEH)EHHe[]UHH M",
            "LE LM(HU0E",
            "HU(HE DE",
            "HH ]UHH0M",
            "LE LM(LE(HM E",
            "HU0HT$ MI\u0209",
            "{HE A",
            "\u0405u1HM@HU8E",
            "%HU(HE DE",
            "H0]UWHx",
            "HT$ A",
            "Hu/L",
            "HT$ A",
            "HEHEH",
            "HMHHHH",
            "HEIH",
            "\u871dHEA",
            "CHEA",
            "\u0405u\"HEH",
            "HEA\u043a",
            "HHEA",
            "HP`H",
            "uPHEH",
            "HzGHx",
            "_]UHH A",
            "8H ]UHH A",
            "IH ]UHH@HM",
            "H@(HEHEH",
            "HEHEH@PHpHEHE@`",
            "HEH@IH",
            "H,HE",
            "HEH@`A",
            "E}u)HEHP`HEH@ IIH",
            "H@]UHH@HM",
            "EHEHHU",
            "EHEHHU",
            "OH@]UHH@HM",
            "H@(HEHEH@`A",
            "HJE}u.HEHP`HEH@ IIH",
            "^HEUPpHEHP`HEH@ IIH",
            "HEH\tp",
            "H@]UH@",
            "H@PH",
            "H@P@p",
            "H@IH",
            "HEA\u043a",
            "]UH`",
            "H@`H",
            "H@PH",
            "H@PHpH",
            "H@IH",
            "H@ H",
            "HT$ A",
            "Eu3H",
            "H@ IH",
            "oHEH",
            "IHEH",
            "HuFH",
            "HP H",
            "HEHD$ IIH",
            "uPHEH",
            "HP0H",
            "HZH`",
            "]UH@",
            "H@PH",
            "H@P@p",
            "P<LE",
            "HL$ A",
            "]UHP",
            "H@PH",
            "H@P@p",
            "P<LE",
            "HL$ A",
            "EuUH",
            "H@IH",
            "H@IH",
            "]UHH0HM",
            "uYHE",
            "HEHEH",
            "H`HEHE",
            "HP@HEIIH",
            "HEHx",
            "H0]UH",
            "H@(H",
            "H@P@p",
            "H@HH",
            "D\tAA",
            "D\tD\t",
            "H@PH",
            "P<LE",
            "HL$ A",
            "L@HH",
            "HHXH",
            "P<LU",
            "LL$0LD$(HL$ A",
            "M\u0409gH",
            "HHEA",
            "\u0405t5H",
            "H@IH",
            "]UHH HM",
            "HEHEd",
            " HEH",
            "HPXHE",
            "-HE@4HE@P.",
            "HEH4",
            ">>>>@",
            ">>>>HE@P<p}",
            "ujHE",
            "2333HE",
            "HPXHE",
            "5HE@P6",
            "HE@PDHEU",
            "H ]UH",
            "H@(H8",
            "H@PH",
            "H@P@p$",
            "H@HH",
            "\u0409EUH8",
            "HHXH8",
            "P<LU",
            "LD$0L",
            "LD$(HL$ A",
            "t%HE",
            "~=HP",
            "HoH0",
            "t:pH8",
            "H@IH",
            "H-H8",
            "H@IH",
            "HP@HE",
            "HPxH8",
            "\u0409E\u050bU\u040bE",
            "~=HP",
            "**!HP",
            "]UHWSH",
            "H@(HEHEH",
            "HEHEH@PH",
            "HEHEH@P@pEHEH`HEHp",
            "pHE\u040b@x)\u0209EtHE\u040b@|)",
            "\u0609EEy",
            "EEDi",
            "HEHE\u040b",
            "HE\u020bd",
            "\u0609EEi",
            "\u0409d`p",
            "~1HE",
            "HE\u01c0`",
            "HE\u020bd",
            "HEHEHHE\u040bP<LEEHMHL$ A",
            "#HEA",
            "EHEH\u01c5@H",
            "H@HHHH",
            "HEHEHUH",
            "H+EHE\u0603}",
            "t5HE",
            "t&Hp",
            "HEHpHPx",
            "MHUHEAHHEA",
            "HEH\u01c5@H",
            "H@HHHH",
            "HEHEH)EHEH",
            "xHEH@IH",
            "HEHE",
            "HEHDHp",
            "pHE\u040b@x)\u0209EtHE\u040b@|)",
            "\u0609EEy",
            "~SEDi",
            "HUH@D$ a",
            "~7HE\u040b",
            "HEHH@HEHD$ AIH",
            "t%HEA",
            "t1HE\u020bd",
            "t\"HEH@IH",
            "\u0409TPp",
            "~1HE",
            "HE\u01c0`",
            "HUH@D$ X",
            "HeHE\u040b",
            "EHE\u040b",
            "d9v4HE\u040b",
            "fHE\u040b",
            "9uNHE\u040b",
            "PHE\u0409",
            "&HE\u040b",
            "PHE\u0409",
            ";Et7HE\u040b",
            "HMH@D$ AIH",
            ",HE\u0409",
            "HEHH@HEHD$ AIH",
            "|HEA",
            "<-tvHEA",
            "\u0405tUHE\u040b",
            "HEHP@HEIIH",
            "%|HEH^HE\u0180",
            "[_]UHH@HM",
            "LE HE",
            "H@(HEHEH",
            "HEHU HEA",
            "HFLE",
            "\t\t\u0409EHEd",
            "upHE",
            "E9v2HE",
            "tQHE",
            ")\u020dPE9v-HEH@IH",
            "H\"UHE",
            "AHHM",
            "HE H",
            "HE \tH@]UHH HM",
            "LE LM(H}0",
            "HE0H",
            "`HE0HH@HE A",
            ";HE(HZH",
            " HE(HP\\HE0IHHM",
            "H ]UHHpHM",
            "LE HE",
            "H@(HEHU",
            "HEA ",
            "HZJHE",
            "HPAHEA",
            "H@JLE",
            "HMHEHU HT$ MIHHM",
            "HMHEHT$ MIHHM",
            "HMHEHT$ MIHHM",
            "twHE",
            "HMHEHT$ MIHHM",
            "tBHEH@IH",
            "Hp]UHHM",
            "]UHH@HM",
            "DE HE",
            "H@(HEHEH",
            "HEHEH`HEHEA",
            "\u0405u$HEHP",
            "IHHM",
            "yHEA",
            "\u0405uQE",
            "HEHHE+HU",
            "HEIHHM",
            "HEHHEHE",
            "H@]UHH0HM",
            "H@(HEHEH@PHpHEHE",
            "H0]UHH0HM",
            "H@(HEHEHH0]UHH HM",
            "~H ]UHHM",
            "]UHWHXHM",
            "H@(HEHEH",
            "HEHEHUH",
            "LHHHE",
            ">>>>@",
            ">>>>@",
            "|---@",
            "----@",
            "--- @",
            "MidS@",
            "tate@",
            " ---@ ----@$---|@(|-Da@,taTa@0il-|@4|Non@8ces|@<>>>>@@>>>>f@D",
            "HE\u01c0d",
            "HE@<HEHP",
            "HEHPH",
            "HUHEHPHHE\u01c0",
            "H=HEH@XHEH}",
            "H@(HEHE",
            "kdE\u050bE\u0509E\u033aMb",
            "HEH@ AIH",
            "tE\u0509FN",
            "HX_]UHH0HM",
            "HHEHE",
            "HHEHEH0]UHH@HM",
            "H@(HEHEH",
            "HEHE`",
            "HE\u01c0`",
            "w:HE",
            "H@(H@IH",
            "tsH@]",
            "UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UHH HM",
            "HEGHEHU",
            "EHEHU",
            "HEHM",
            "HEHU",
            "HEH;ErH ]UHHPHM",
            "LE LM(HE",
            "HHEH}",
            "EHH;E",
            "~\"HEH",
            "UHE)\u0209EE",
            "E;E0|i}t",
            "EHEHHU",
            "EHEHHU",
            "HP]UHH0M",
            "LE HE HE",
            "HHEHEH;E t",
            "H0]UHH0HM",
            "H@(HEHE@pX4",
            "HE@pH0]UHM",
            "]UWVSH",
            "Hu\tE",
            "HMHHHH",
            "HH)HH",
            "HEIH<",
            "HEHH",
            "\u0405u5H",
            "HEHH",
            "\u0405u5H",
            "HEHA",
            "u`H8",
            "H@Ht$(\\$ IIH",
            "[^_]UH0",
            "t&0\u01c5",
            "]UWH",
            "Hu\tE",
            "HMHHHH",
            "HH)HH",
            "HEIH~",
            "EtuHEH",
            "IHb|",
            "IHL{",
            "EIHBz",
            "_]UWVHp",
            "HHHHH",
            "0001E",
            "87a2E",
            "HEA@",
            "H=4HU",
            "HED$ ",
            "HHD$ IL",
            "6HtLH",
            "HP`H",
            "D$ AIH",
            "y1H ",
            "^_]UHH0HM",
            "HEH}",
            "6HE\u01c0",
            "HEHJY  ?&>H",
            "HEIH",
            "HEH-t",
            "H0]UHH A",
            "dH ]UHHPHM",
            "H@(HEHEH",
            "HEHE@pHE",
            "HEH@`A",
            "E}u#HEH@`IH",
            "yHEUPpHEH@`IH",
            "^HE\u043a",
            "HEH5",
            "HEHE",
            "HUHP0HE",
            "HP]UHH0HM",
            "LE HE",
            "HEHE",
            "@pw\"",
            "H@`A",
            "BpHE",
            "PpHE ",
            "uCHE",
            "H@`HU",
            "H@IIH",
            "H0]UHH@HM",
            "H@(HEHE",
            "H@0HEHE@pEHEH",
            "t<HM",
            "tDHE",
            "H,HEHEHP@HEIIH",
            "\\HEH3q",
            "H@]UWSH",
            "LHHE",
            "EEH@",
            "H@(H",
            "H@0H",
            "HHHE H",
            "H@HU H4H",
            "HE H8A",
            "u@HE A ",
            "H@IH",
            "HE  ",
            "HHE H4",
            "@pE`H",
            "U`HE",
            "L$ L@",
            "_HM`H",
            "tQH/",
            "t0HM`H",
            ")\u0209EH",
            "\u0609EEyNE",
            "E8E`u0HM`H",
            "\t\t\u0409E",
            "(H7H",
            "HHE HH@",
            "u.HM`H",
            "I@T$(HD$ IH",
            "AHH@",
            "tRHM`H",
            "HE HH@",
            "tFEEHcH",
            "MQ@L$0HT$(HD$ EMH",
            "H@IIH",
            "H@IH",
            "H@HEH",
            "HMHHHH",
            "H)HD$@H",
            "H@HH",
            "HP@H",
            "4RHH",
            "@(uiU",
            "@0H;",
            "@,H;",
            "HH)HH",
            "LH)HH",
            "HJ HH HJ(HH(HR0HP0",
            "HHHD",
            "HH)HH",
            "@09s",
            "@,9w",
            "@(Hx",
            "@(Hx",
            "@(Hx",
            "@(Hx",
            "@,)\u0209HExH",
            "@(EtH",
            "HHHD",
            "HUhH",
            "HUxH",
            "HEhHD$0EdD$(H",
            "HD$ f",
            "(IIH",
            "U\u040bE)\u0209E\u040bU\u050bE)",
            "\u0609E\u050bE\u0505y",
            "E\u050bUH",
            "[_]UHH0HM",
            "HEHEH",
            "H\u032cHEHEH",
            "H\u8d6dHEHEH",
            "HvHEHEH",
            "HVHEHEH",
            "H4HEHEH",
            "H:HEHEH",
            "H\u866cHEHEH",
            "HnHEHEH",
            "HWHEHEHx",
            "H\u83abHEHEHP8HEA",
            "HfHEHE",
            "HHEA",
            "H\u8a2aHEHEH",
            "H`HEHEH",
            "H\u85eaHEHEH",
            "HlHEHEH",
            "HAHEHEH0]UHH HM",
            "H@0HGY",
            "H ]UHH`HM",
            "\u0409EDEHE",
            "EE=@B",
            "E-@B",
            "EHE\u043a",
            "U\u040bE9",
            "U\u040bE9u",
            "U\u050bE9~",
            "qUE\u0409)\u0209EUE\u0509)\u0209E\u010bE\u0105y",
            "E\u010bEHcHE",
            "H`]UHH@M",
            "HUHEHKu",
            "H@]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UHH0HM",
            "HEH}",
            "HEIH",
            "H0]UHH A",
            "\toH ]UHH ",
            "oH ]UHH`M",
            "DD\u0288E",
            "M U(H",
            "HE}(",
            "1\u0403\u0688E",
            "EHEA@",
            "H`]UWHH",
            "LHHH\u01c5",
            "\t\tAH",
            "_]UHH0HM",
            "H@(HEHEH",
            "HE@pA",
            ",HMH@A",
            "A\u0409\u8752E",
            "H0]UHHPHM",
            "H@(HEHEH",
            "HEHE",
            "H@0HEHE@p>",
            "HHE\u0180",
            "THE\u0180",
            "HE@pA",
            "HEH@D$(",
            "D$ 2",
            "uOHE\u01c0",
            "u,HE\u01c0",
            "HEH@IH",
            "HP]UHH0HM",
            "HEHEH",
            "HH0]UHH@HM",
            "HEHE",
            "tGHE",
            "EHUHEA",
            "H'HEHEH@]UHH0HM",
            "HEHE",
            "H0]UHWVH",
            "HLHHH",
            "UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UHH HM",
            "\u8246H ]UHH HM",
            "TH ]UHH HM",
            "H ]UHH0M",
            "DE LM(}",
            "t-HE",
            "H@PH",
            "HEHE",
            "H@P@pHEH8HU0HEH",
            "HMHU(E I\u0209K8",
            "H0]UHP",
            "HT$ L",
            "HT$ L",
            "HT$ L",
            "HT$ L",
            "HT$ L",
            "HT$ L",
            "HP`H",
            "HP0H",
            "]UHH A",
            "[bH ]UHH A",
            "bH ]UHH0HM",
            "H@P@p",
            "H@`A",
            "H\\vE}u.HE",
            "HP`HE",
            "H@ IIH",
            "H@PUPp",
            "H0]U",
            "H)H$",
            "H@0H",
            "HP H ",
            "HMIL",
            "H=}H",
            "H@P@p",
            "HP`H ",
            "H@ IIH",
            "E\u044bE\u0308E\u048bE",
            "EHU\u040b",
            "tFH ",
            "HH`H ",
            "HL$(HT$ L",
            "HH9t",
            "HD$ ",
            "tFH ",
            "HH`H ",
            "HL$(HT$ L",
            "tFH ",
            "HH`H ",
            "HL$(HT$ L",
            "tODEH ",
            "HH`H ",
            "DD$0HL$(HT$ L",
            "HH;\u0600",
            "tFH ",
            "HH`H ",
            "HL$(HT$ L",
            "HJ`H ",
            "HR D$ IIH",
            "HH9t",
            "HD$ ",
            "tFH ",
            "HH`H ",
            "HL$(HT$ L",
            "tFH ",
            "HH`H ",
            "HL$(HT$ L",
            ")\u0209E\u030bE\u0305",
            "HH9t",
            "HD$ ",
            "tCH ",
            "HH`H ",
            "HL$(HT$ L",
            "tCH ",
            "HH`H ",
            "HL$(HT$ L",
            "HP`H ",
            "H@ IIH",
            "]UHH@HM",
            "H@`A",
            "HSnE}u7HE",
            "HP`HE",
            "H@ HT$(HD$ L",
            "H@PUPpHE",
            "HP`HE",
            "H@ IIH",
            "H@]UHH@HM",
            "H@(HEHEH@PHEHEH@P@pu",
            "HP0HE",
            "H@0HEHEH",
            "HE@<HE\u8210",
            "H@]UHHpHM",
            "U HE",
            "H@(HEHE",
            "H@0HEHE@<EHEH@PH",
            "HEHE",
            "E\u07c8EE",
            "E\u0508E\u04c0}",
            "HEHHEH@P@pEHU\u040bEA",
            "t-HEHH@HUEHL$ L",
            "HU\u03cbEA",
            "t*HEHH@HUEHL$ L",
            "HEHG",
            "E\u07c9HE",
            "Hp]UHH@HM",
            "H@(HEHE",
            "H@0HEHE",
            "HEH@A",
            "H@]UHH0HM",
            "H@0HEHE",
            "H0]UHH0HM",
            "LE E",
            "H@P@pEE\t",
            "EHUEA",
            "t#HE",
            "H@IH",
            "HHU EA",
            "t#HE",
            "H@IH",
            "H0]UHHpHM",
            "H@(HEHE",
            "H@0HEHE@<EHEH@PH",
            "HEHEHHEH@P@pE\u0703}u",
            "EEHU\u040bEA",
            "t-HEHH@HUEHL$ L",
            "HUEA",
            "t-HEHH@HUEHL$ L",
            "t9HEH@IH",
            "&HEHw",
            "tHHE",
            "u9HEH@IH",
            "H&HEH$",
            "HEH@IH",
            "&HE\u0180%",
            "eHE\u0180",
            "w-HEHH@HUEHL$ L",
            "UHMHEIH",
            "t-HEHH@HUEHL$ L",
            "<ivXHE",
            "t\"HEH@A",
            "HEH@T$(D$ ",
            "&$HEHHE",
            "Hp]UHH@HM",
            "E    E    E    E   |fE ",
            "H@PH",
            "E}et9",
            "E HEHHM",
            "H@]UHHPHM",
            "HEHEH@0HEHE",
            "EHEHHU",
            "EHEHHU",
            "HP]UHWHxHM",
            "E    E    E    E   |fE ",
            "@8EE",
            "HEHEH@0HEHE",
            "}\tv(U",
            "0HcT",
            "B0IcT",
            "H@XHE",
            "CHEHHM",
            "HMHHHH",
            "    @",
            "    @",
            "    @",
            "   |f@",
            "Hx_]UHSHxHM",
            "H@0HEHM",
            "H@P@pEHE",
            "@<EE",
            "EEHU\u040bEA",
            "HU\u03cbEA",
            "E\u03c9HE\u8210%",
            "HEHEH%",
            "HEHUH%",
            ";E}\tH",
            "MQ@T$0DD$(L$ IMH",
            "Hx[]UHHPHM",
            "H@PH",
            "ExHE",
            "UHcH",
            "HEHEH@0HE\u0600}",
            "t(HEHOHEHHM",
            "FHEHhHE",
            "E\u050bE;E~",
            "E\u0509E}",
            "*EHE",
            "HP]UHHPHM",
            "HEHEH@0HEHE",
            "t;HE",
            "EHUHEA",
            "H[HEHE",
            "EHUHEA",
            "H\u8985HEHE",
            "EHUHEA",
            "HgHEHE",
            "EHUHEA",
            "H(HEHEH%",
            "H|HEHEH%",
            "HQHEHEHP]UHH0HM",
            "HEHEH HEHE",
            "HEA ",
            "u%HE",
            "HP@HEA",
            "HHHEH",
            "H@HHEH",
            "H0]Up",
            "H)H$",
            "H@(H",
            "H@0H",
            "H@PH",
            "H@P@p",
            "H@P@p",
            ".t6H",
            "HH@H",
            "HL$ L",
            "HH9t",
            "w\u058bE;",
            "u'E=",
            "HT\u020bE",
            "HEHD$ ",
            "L@`H",
            "HH H",
            "LD$(HL$ L",
            "L@`H",
            "HH H",
            "LD$(HL$ L",
            "HP@H",
            "]UHH",
            "H@(HEHE",
            "H@0HEHE\u060b@<EHEH@PH",
            "HEHEH",
            "HEHU",
            "UHMHEIH",
            "t;HE",
            "HEHEHEH}",
            "HEHHEA",
            "EEUHEA",
            "tfHE",
            "LMMQ@DD$0L$(T$ AMH",
            "EHUH",
            "2?usHE",
            "LMMQ@DD$0L$(T$ AMH",
            "t2HE\u040b%",
            "HE\u0409%",
            "UHEAHHM",
            "LMMQ@DD$0L$(T$ AMH",
            "HE\u040b%",
            "HE\u0409%",
            "HEH$.HE",
            "UHE\u040b",
            ")\u0209EUHE\u040b",
            ")\u0209EEy",
            "UHcHi@B",
            "UHcH",
            "HEH9Ev*HEH@IH",
            "H;Er",
            "H)EHE\u040b",
            "HMl}",
            "^HEH",
            "(HlHEH",
            "HlHEH",
            "HwhHEH\u0120",
            "]UHH@HM",
            "LE HE",
            "H@0HEHE",
            "HEH E}",
            "u;HE",
            "t)HM",
            "HEHE",
            "HErHE",
            "tGHEHP",
            "H1aHEHH",
            "HEH@]UHH HM",
            "H@0H&",
            "H ]UHHPHM",
            "LE LM(HE",
            "\u0405u(H",
            "HE(A",
            "HE(H",
            "HE(O",
            "HE HD&",
            "HM HE(D$ ",
            "HEHEH@0HEHE",
            "EEHE\u8210",
            "UHEA\u043a",
            "t$HE",
            "HH@H",
            "HE(IH",
            "HE(WHE",
            "HE(IH$",
            "HE(HP]",
            "UHH`HM",
            "\u0409EDEHE",
            "EE=@B",
            "E-@B",
            "EHE\u043a",
            "U\u040bE9",
            "U\u040bE9u",
            "U\u050bE9~",
            "qUE\u0409)\u0209EUE\u0509)\u0209E\u010bE\u0105y",
            "E\u010bEHcHE",
            "H`]UHH@M",
            "HUHEHKu",
            "H@]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UHH HM",
            "ZH ]UHH HM",
            "cZH ]UHH HM",
            ")ZH ]UHSH",
            "D\u02c9D\t",
            "E:E rH",
            "[]UHSH",
            "\u04c9\tEE",
            ";EwEH",
            "[]UHSH",
            "E1\u0408EE",
            "D\u02c9D\t",
            "[]UHHM",
            "@\t\tHE",
            "\t\u0409HE",
            "]UHH`HM",
            "DE E",
            "HU\u040bE A ",
            "EHE\u043a%",
            "HUHED$(",
            "H`]UHH@HM",
            "HHED$(",
            "HED$(",
            "HH@]UHH0HM",
            "LE P",
            "HEHEH",
            "HHE H",
            "HHEHP`HE\u01c0",
            "HE@8",
            "HHEHP0HE\u01c0",
            "HEHU",
            "HEH9H0]UHH HM",
            "H ]UHH L",
            "H ]UHH A",
            "5H ]UHHPHM",
            "H@(HEHE@<t",
            "HEHEH@p",
            "HEHUHPp",
            "HEHE",
            "eHEH",
            "HEHEHUH",
            "HEHUH",
            "HEH@XHE2HEHPpHEHPpHEH",
            "HEH@XHEH}",
            "HP]UH",
            "HP H0",
            "HMIL",
            "HP`H0",
            "H@ IIH",
            "HEHEH",
            "EHUH",
            "PaH0",
            "H@ AIH",
            "t>EH0",
            "HJ`H0",
            "HR D$ IIH",
            "E\u0703 EH",
            "t>EH0",
            "HJ`H0",
            "HR D$ IIH",
            "IHUH",
            "D$ A",
            "HJ`H0",
            "HR D$ IIH",
            ")\u0209E\u070bE\u0705",
            "vEHUH",
            "HP`H0",
            "H@ IIH",
            "]UHH0HM",
            "H@0HEHEHEE",
            "HEA\u043a",
            "HOHEH",
            "HEP ",
            "H0]UHH@HM",
            "H@(HEHE",
            "H@0HEHE",
            "@ EE",
            "HEH@A",
            "AH-T",
            "H@]UHHpHM",
            "H@(HEHEH@pHEi",
            "HE@<E}",
            "HEHEHEHEH",
            "UHEHsHE",
            "HUHP0HEH1",
            "t&HEH@ IH",
            "HEH+2",
            "t,HEH@ UAIH",
            "HED$(",
            "uHHUHED$(",
            "t&HEH@ IH",
            "t=HEH@IH",
            "lHUHEH",
            "tLHE",
            "u=HEH@IH",
            "HUHEHa",
            "HEH@IH",
            "HEH H:Qd",
            "t\"HEHP@EAIH",
            "oHE@#",
            "HE@!}HE",
            "P!HE\u0608( ",
            "P HE\u0608P\"HE",
            "HEH@T$(D$ ",
            "HEH@XHEH}",
            "Hp]UHSH",
            "H@0HEHEHEHEH",
            "HEHH",
            "HUHEIH\"",
            "\t\u0409EU",
            "\t\u0409EHEA",
            "NHEA",
            "H@PHE",
            "HEHEH@0HEH}",
            "EHD=",
            "EHDu",
            "EHD%",
            "EHTEHD",
            "EHEHHU",
            "(IAH",
            ",EHE",
            "HEHEH0 ",
            "HEHUH0 ",
            "EEPHEHktNHE",
            "D$(D$ AIH",
            "P HEP!~HE",
            "P!HE",
            "8sgHE",
            ";E~XHE",
            ");E~",
            "HEP!)HE",
            "P HE",
            "@!8u",
            "HEP!",
            "H@XHE",
            "[]UHH",
            "H@PHE,HEH",
            "HEH@XHEH}",
            "]UHHPHM",
            "t@HE",
            "H@PH",
            "HEHEHYHM",
            "`t\tHM",
            "+HEHlHE",
            "EXHE",
            "UHcH",
            "HEHEH@0HEH}",
            "t%HE8 ",
            "t\tE\u0709E",
            "HP]UHH@HM",
            "E    E    E    E   |fE ",
            "@E}et9",
            "AHx\t",
            "E HEHHM",
            "H@]UHWHXHM",
            "E    E    E    E   |fE ",
            "H@0HEHE",
            "EHEHHM",
            "EHHEH",
            "HEHEH",
            "HMHHHH",
            " HEHHM",
            "HMHHHH",
            "    @",
            "    @",
            "    @",
            "   |f@",
            "HX_]UHWHhHM",
            "E    E    E    E   |fE ",
            "H@0HEHE",
            "H@XH",
            "H@0HEHE",
            "MHEHHM",
            "EHEHHM",
            "EHHEH",
            "HEHEH",
            "HMHHHH",
            " HEHHM",
            "HMHHHH",
            "    @",
            "    @",
            "    @",
            "   |f@",
            "Hh_]UHH@HM",
            "HEHEH@0HEHE",
            ".t+HEH8 ",
            "HYHEHE",
            "EHUHEA",
            "HYHEHE",
            "EHUHEA",
            "HYHEHE",
            "EHUHEA",
            "HqYHEHEH@]UHHPHM",
            "LE HE",
            "H@(HEHE",
            "H@0HEHEHEHEHt",
            "HEH@PH",
            "HEHEHzE",
            "HEAHE",
            "HEAH6E",
            "~HEH%HEH",
            "\t\u0409HE",
            "\tHE< ",
            "HP]UHH",
            "H@(HEHE",
            "H@0HEHEHEHE",
            "Ht+HEH HGHEH LE",
            "\"H6CHE< ",
            "HEA\u043a",
            "H\"HEH",
            "HEHUHP",
            "HEHHM",
            "\u8e10HEHt",
            "HEH@PH",
            "HEHEH",
            "tKHE",
            "HHEHEHP@HEIIH",
            "HEHw",
            "uE\u0501m@B",
            "\u0409EUE",
            "~1HE",
            "~1HE",
            "]UHH@HM",
            "H@0HEHE",
            ")\u0209EHE",
            ")\u0209EEy",
            "EEHHi@B",
            "HEHEH@",
            "HEHEH;E~",
            "HEHEHEH@",
            "HH+UHEHP",
            "HUHEA",
            "IHHM",
            "dHEHU",
            "HEH@]UHHPHM",
            "H@(HEHE",
            "H@0HEHEHEHE\u043a",
            "HEE}",
            "tMUHE",
            "AHHM",
            "HEHP@EAIH",
            "HEH HfBJHE",
            "HtdHE",
            "uDHE",
            "UAHHM",
            "HEHP@EAIH",
            "]HEHP@EAIH",
            "HEH HAHEH ",
            "BaHEHHM",
            "(HE\u0610HEHP]UHH@HM",
            "H@0HEHE",
            "HEH@",
            "~1HE",
            "UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UHH0H",
            "Ht{H",
            "HE@HEH",
            "HEH@",
            "HEH@",
            "HEHt",
            "HEH}",
            "H0]UH",
            "HEHn",
            "IH\"Z",
            "HEH\u0467",
            "]UHH@HM",
            "LE E",
            "HEHP",
            "hHEH@",
            "HtHHEH",
            "Ht?HEHH",
            "HEHP",
            "LM IHA\u0443",
            "HEH}",
            "\\EH@]UHH`HM",
            "HEHHM",
            "HEHW",
            "HED$8",
            "HD$(",
            "HEHUHEH",
            "HEH@",
            "HEHE",
            "kHEH@",
            "HEH@",
            "HEP\tHEf\u01c0",
            "HHEH",
            "HEHNV",
            "HEH`]UHH HM",
            "H ]UHH@HM",
            "tZHE",
            "HD$(",
            "tLHE",
            "HD$(",
            "H@]UHH@HM",
            "U HM",
            "HD$(",
            "HD$(",
            "H@]UHH@HM",
            "LE LM(E",
            "HE(A",
            "LE D$(",
            "HMHL$ H",
            "t!&Eu",
            "HH@]UHH0HM",
            "II\u0409HM",
            "HEHE",
            "H;Eu",
            "~SHE",
            "HEf)HE",
            "HEH0]UHH0HM",
            "LE HE",
            "f)fE",
            "EH;E vWHU",
            "HM IH0",
            "-HEH}",
            "f+UHE",
            "EH0]UHH@HM",
            "LE LM(HE HEHE",
            "EHEH)E(HEH",
            "EH}(",
            "t$HM(HUHE",
            "IHAHEH}",
            "HEHt",
            "HEH@]UHH HM",
            "LE HU HE",
            "IIHU",
            "-LH ]UHHPHM",
            "LE HM",
            "HEH}",
            "I\u0409HM",
            "+EHcHE",
            "E>HE",
            "HEHE",
            "HHEHE H;Ev",
            "HEHE HUHE",
            "HM IHw",
            "HE )\u0209HE",
            "HE H)EH}",
            "t6HE HUH",
            "HMHEIH",
            "HEIH",
            "HE HP]UHH HM",
            "LE HU HE",
            "IIHU",
            "WH ]UHH@HM",
            "HT$(D$ ",
            "H@]UHH@HM",
            "HT$(D$ ",
            "H@]UHH0HM",
            "U } ",
            "H0]UHH0HM",
            "LE HEHHM",
            "UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UHHM",
            "U HE",
            "\t]UHSHHHM",
            "DLM(E",
            "U HHH}(",
            "A\u0409HM",
            "HU\u0409D",
            "HUIH",
            "UH9t",
            "@\tt\"H}(",
            "H)HD$ H",
            "MHUHE",
            "UH9t",
            "2H}(",
            "HHe[]UHH@HM",
            "DD\u028bE0M U(EHE",
            "U(IAHM",
            "U HE",
            "U !\u0409HE",
            "H@]UHSHHHM",
            "HE\u040bEHH",
            "HH[]UHSHHHM",
            "DE HE",
            "HE\u040bEHH",
            "EHEE\u053a",
            "\u04c9\u0608E\u07c0} ",
            "E!\u0409HE",
            "HH[]USH",
            "HEHH",
            "HEhHEHH",
            "\t\u0408E!H",
            "HU A",
            "HE@HM@H",
            "HUIH",
            "H;E@t",
            "E@HE`?HEH",
            "HEpHEp",
            "HEHAHSHE`",
            "HE`H;E@|HEx",
            "HEhH;",
            "HEhHEHH",
            "\t\u0408E!",
            "E!E\"H",
            "HU A",
            "HHE@HM@H",
            "HUIHH;E@t",
            "E@HEX?HEH",
            "HEpHEp",
            "HEHAHHEX",
            "HEXH;E@|HEH",
            "HEpHEp",
            "HEHAHH",
            "HE0ET",
            "\u020bETHH",
            "EHT$ A",
            "EP}P",
            "E0;ET",
            "\u020bETHH",
            "EHT$ A",
            "E4;EP",
            "\u020bETHH",
            "EHT$ A",
            "\u020bETHH",
            "EHT$ A",
            "[]UHH0HM",
            "H0]UHH@HM",
            "~HEIA",
            "Et\tHvE",
            "7HEIA",
            "t\tHB",
            "HH@]UHH@HM",
            "LE LM(E0EA",
            "EHM(HE U8T$ EIHHM",
            "@H@]UHH HM",
            "yH ]",
            "UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UHM",
            "\t\t]UHSH8HM",
            "LE HE",
            "+HEH",
            "HEH;E rH8[]UHH HM",
            "H ]UHH HM",
            "H ]UHH HM",
            "~5HE",
            "HJHM",
            "H ]UHH HM",
            "~#HE",
            "H,H ]UHH0HM",
            "DE HE",
            "H2HEP",
            "HEHEH",
            "HEHU",
            "HPpHEU P8HEU ",
            "HEHrHEH@HUHRpH ",
            "HEHUHP0HEH@ HUIIH",
            "HEH0]UHHPE",
            "HEHN0",
            "UIAH",
            "zHE\u040bUHcH",
            "HEHEHUHP",
            "HEH#",
            "EUHEA\u043a",
            "HHE\u060bE",
            "HEH@p",
            "HEH_8",
            "EHP]UHH A",
            "^H ]UHH0HM",
            "H@(H@pHEHEH/E",
            "HEHQ%",
            "HEHm",
            "H0]UHH0HM",
            "H@(H@pHEHEHLE",
            "t$HEHHEH&",
            "EH0]UHH",
            "LE HE",
            "HEHEHEHPHEHEHPLHE @",
            "HE @",
            "HE @",
            "HE @",
            "D\t\t\u0209",
            "HUHEA",
            "H%HpHEI\u043aP",
            "HPHpI\u043a ",
            "\t\tHE @",
            "[9t0HE @",
            "]USH",
            "H@(H@pHEHH",
            "H@HHH",
            "HEHHPHHEHH0",
            "El}l",
            "HEHH ",
            "ElAIH",
            "\u8fdbHHEHHg0",
            "El}l",
            "HEHH ",
            "ElAIH",
            "HEHH",
            "HEHHHEHH",
            "HE@H}@",
            "u9HEH",
            "HUHH",
            "E<E<HH",
            "HE0H}0",
            "u=HEHH ",
            "E<AIH",
            "HE@H6",
            "HEHH",
            "t#HEHH",
            "HEHH HUHEHHd/",
            "El}l",
            "HEHH ",
            "ElAIH",
            "\u8399HUHEHH",
            "El}l",
            "HEHH ",
            "ElAIH",
            "\u857fHE@H",
            "HE0H",
            "HEHHH",
            "HEHHH",
            "t#HEHH",
            "HEHHH",
            "ElHH",
            "HUpH",
            "E,E,;E\\v",
            "E,E\\E,\u044bElHH",
            "ElHH",
            ";E,v>ElHH",
            "HUHH ",
            "U,D$ AIH",
            "ElHH",
            "E@U,",
            "ElHHH",
            "HEHIH",
            "tf}T",
            "~7HEH",
            "(HEHHf",
            "EhHUlHcH",
            "\u040bDE,HEH",
            "EdHH",
            ";E,u",
            "Ed;E<|",
            "E`HH",
            "E0U,",
            "E`;E<|",
            "HEHH ",
            "U,EhD$(ElD$ AIH",
            "HEHHH",
            "t!HE@H",
            "HE0H",
            "HQHEHH ",
            "E\\AIH",
            "HE@HC",
            "HE0H7",
            "[]UHWHXHM",
            "E    E    E    E   ",
            "H@pHtaHE",
            "H@pH2HEHEHEH",
            "HMHHHH",
            "HEH}",
            "HUHEHMIH'",
            "HEIH",
            "HX_]UHH@HM",
            "H@pHEH}",
            "tKHE",
            "HXHE",
            "EHUHEA",
            "HJ#HEHEH@]UHHPHM",
            "H@(HEHEH@pHEHE",
            "HEHiHE@<tzHEH@PH@pHE\u8e68 ",
            "HEHUHE ",
            "HEHUHPpHEHUHP",
            "HE@<HEfP",
            "HEH@HUH ",
            "HE@<D@",
            "HEHH2H",
            "HEEIH",
            "HEHUHP0HEHRHEH=",
            "tWHEH6",
            "HEHHE",
            "H@(H@pH",
            "H@(\u01c0",
            "HEH\tHEH",
            "HP]UHH0HM",
            "H@(HEHEH@pHEH}",
            "tjHEH@p",
            "HEH@",
            "HEHH",
            "HEHg!",
            "H0]UHH HM",
            "H@(H@pH",
            "H@(@",
            "UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UH]UHH",
            "]UHP",
            "HEHD$(D$ ",
            "HUHT$(D$ AA",
            "]UHHPHM",
            "ED$8",
            "HEHD$(D$ ",
            "y,E[*",
            "HP]UWVH",
            "HE HH",
            "Et}t",
            "t!EtAH",
            "E(f=",
            "E*f=",
            "HE8HH",
            "Et}t",
            "t*EtR)",
            "HE8D$8",
            "D$0(",
            "HUHT$(D$ ",
            "Ep}p",
            "EpAH",
            "E<(u(",
            "E<Zu",
            "E<Tu",
            "E<Eu",
            "E<Xt",
            "HE8HMA ",
            "IH;Ep}p",
            "EpAH",
            "\u07f1EpH",
            "HEIH",
            "EEoHEx",
            "HExzHEH",
            "HEx<HEH",
            "HExH}x",
            "HExIH",
            "HExHH",
            "HExIH",
            "HHE`H",
            "HE`H+",
            "HEXH}X",
            "HEXH",
            "HU`II\u043a",
            "HEPH",
            "HEPH;E`s-HUPHE`HD$ IL",
            "HMHUPHEXA",
            "IHd:",
            "HEHH}H",
            "HEHH",
            "HU`HH)H",
            "EDED",
            "HE8D$8",
            "L$0HT$(D$ ",
            "E@E@;ED})E@",
            "H;E`",
            "=HE8",
            "Hu H",
            "HE8Ht",
            "HE8H#",
            "^_]UHSH8HM",
            "DE }",
            "x)} ",
            "\u040bE \u04c9\u0603",
            "u3HE",
            "E D$ AIH",
            "H8[]UHH0HM",
            "<uCEHH",
            "<u/EHH",
            "|EHH",
            "<UuCEHH",
            "<u/EHH",
            "H0]UHH",
            "vEHH",
            "EEHH",
            "]UHHPHM",
            "H@(D$8",
            "D$0\t",
            "HUHT$(D$ ",
            "y*HE",
            "EAIH",
            "\t\u0409HE",
            "HP]UHSH",
            "DD\u0208U E(HHE",
            "HEEHH",
            "H)HD$@H",
            "HEHHM",
            "H@(D$8",
            "HUHT$(D$ ",
            "EEy-EHU",
            "H@(H",
            "t(HE",
            "]HEH}",
            "uGHE",
            "H@(H",
            "H@(D$8",
            "HD$(",
            "EHcHEHMII\u043a",
            "E\u0100}(",
            "HE\u060bUHE(}(",
            "HE\u060bUHLE",
            "H@(DMD$(",
            "HMHL$ H",
            "E\u050bE;Et",
            "'HEH-",
            "H@(D$8",
            "HD$(",
            "HEHHM",
            "t<HE",
            "H@(H",
            "H@(Hg",
            "HHe[]UHSHxHM",
            "DD\u0208U E(HHE",
            "HEEHH",
            "H)HD$@H",
            "HEHHM",
            "HEH}",
            "u0HE",
            "y*HE",
            "EAIH",
            "EHcHEHMII\u043a",
            "E\u0200}(",
            "HE\u060bUHWE(}(",
            "HE\u060bUH/E",
            "HUHE",
            "H@(D$8",
            "L$0HT$(D$ ",
            "E\u030bE;Et HE",
            "HEH\u0339",
            "uHEHHM",
            "t%HE",
            "HHe[]UWHH",
            "H@`HHEH",
            "HEHEH",
            "HMHHHHPHEH",
            ".bit@",
            "t%HEA",
            "_]UHHPHM",
            "H@(D$8",
            "HUHT$(D$ ",
            "y*HE",
            "EAIH",
            "HP]UHHPHM",
            "HEHE",
            "fEf}",
            "E;E|7",
            "ED$ AIH",
            "H@(D$8",
            "HD$(",
            "y.EAH",
            "HP]UHHPHM",
            "fEHE",
            "H@(D$8",
            "HD$(",
            "HXHE",
            "IXHM",
            "T$(D$ AH",
            "u]HE",
            "HXHE",
            "HP]UHH@HM",
            "H@(D$8",
            "HD$(",
            "H@]UHH@HM",
            "@htDHE",
            "H@(D$8",
            "HD$(",
            "H@]UHWVSH",
            "HEHEHHHEH(HHM",
            "t/E\u0309",
            "t!EAH",
            "HEHH2HE",
            "HEH@(A",
            "IHE\u0703}",
            "HEH@(D$8",
            "D$0(",
            "HUHT$(D$ ",
            "E<(u(",
            "E<Zu",
            "E<Tu",
            "E<Eu",
            "E<Xt",
            "UHE\u0408P=",
            "UHE\u0408P>",
            "UHE\u0408P?",
            "UHE\u0408P@",
            "UHE\u0408PA",
            "UHE\u0408PB",
            "UHE\u0408PC",
            "UHE\u0408PD",
            "UHE\u0408PE",
            "UHE\u0408PF",
            "UHE\u0408PG",
            "UHE\u0408PH",
            "UHE\u0408PI",
            "UHE\u0408PJ",
            "UHE\u0408PK",
            "UHE\u0408PL",
            "UHE\u0408PM",
            "UHE\u0408PN",
            "UHE\u0408PO",
            "UHE\u0408PP",
            "UHE\u0408PQ",
            "UHE\u0408PR",
            "UHE\u0408PS",
            "UHE\u0408PTHEH@(D$8",
            "D$0@",
            "HUHT$(D$ ",
            "HHEHP`EHcHUEHH",
            "HEH@`IH6",
            "HEHP`EHH",
            "HE\u0408PU",
            "\t\u040dHEfPV",
            "UHE\u0408",
            "UHE\u0408",
            "HE\u0408Ph",
            "HU\u0408BxHE",
            "HELPpHE",
            "@ht\tH",
            "HUHJXHU",
            "D\\$PLT$HHD$@DL$8DD$0HL$(T$ AAH",
            "wvHEH@`HH",
            "?HPpHEH@pHHx",
            "HU\u0408B0HM",
            "HU\u0408B1HEL@2H",
            "HUH ",
            "[^_]UHH HM",
            "H@(Ht",
            "H@(H^",
            "H@`Ht",
            "H@`H\u016a",
            "H ]USHx",
            "HEHuI ",
            "HEHEHu2H",
            "HEH@`",
            "HEf\u01c0 ",
            "HUH#",
            "JHEHHE",
            "HuFH",
            "\u0192HEH%HE",
            "HEHt",
            "[]UHHPHM",
            "H@(Hu",
            "\u020bEHHH",
            "H@(D$8",
            "L$0HT$(D$ ",
            "E)EE",
            "y%HE",
            "EAIH",
            "EHP]UHSHhHM",
            "H@(Hu",
            "EHH}",
            "HEH}",
            "u(HE",
            "E\u0609EE",
            "\u020bEHHH",
            "H@(D$8",
            "L$0HT$(D$ ",
            "E)EE",
            "y9HE",
            "EAIH",
            "xHEH",
            "HU\u040bE",
            "UHcH",
            "\u0489)\u04c9\u0689",
            "UHcH",
            "UHcH",
            "UHcH",
            "\u0489)\u04c9\u0689P",
            "HU\u040bE",
            "\u040bUHcH",
            "MHcH",
            "UHcH",
            "UHcH",
            ")Ic\u0409",
            "HEH\u0221",
            "EHh[]UHH0HM",
            "8HEH",
            "UHH0HM",
            "LE H}",
            "HE H",
            "HE HU",
            "HEHU",
            "HEHQ",
            "HU H",
            "HE H",
            "HEH0]",
            "UHH@M",
            "HUHEIH",
            "EHEA",
            "H@]UHH0M",
            "LE }",
            "t&HE",
            "HUHEIH",
            "Ht*HE U",
            "HcHH",
            "HU H",
            "HE H",
            "HE H",
            "HE @",
            "HE H",
            "u5HE",
            "HtzE",
            "HtKE",
            "EHEA",
            "USH$",
            "HMU}",
            "[]UHHM",
            "]UHSH(HM",
            "H([]UHSH(HM",
            "H([]UHHM",
            "]UHH M",
            "H ]UHSH",
            "2EHH",
            "\u04c9\tEE",
            "[]UHSH",
            "LE H} ",
            "t\"u5HE",
            "\t\u0409E;HE",
            "E0HE",
            "#EE\u0703}",
            "~EU\u0709\u04c9\u0603",
            "teEHH",
            "UHcH",
            "EU\u04c9\u0603",
            "EHTE",
            "EHDt",
            "[]UHSH8M",
            "t{H}",
            "HE'HE",
            "HH8[]",
            "UHH HM",
            "LE E",
            ":Eu\tHE",
            "HuHEHEE",
            "\t\u0409EE",
            "\tE1HE",
            "3EEEU)",
            "HEHE",
            "UHH0HM",
            "LE H}",
            "HE H",
            "HEHE",
            "HEHE",
            "HEHUH",
            "EHEHUH",
            "E:Es'HEH",
            "HEHUHH)HHEI",
            "E:Eu#HEH;Et",
            "/HEH",
            "HEHEHE",
            "HEHEHEHUH",
            "HHE HUH",
            "HEHE",
            "HEHE",
            "HEHUH",
            "EHEHUH",
            "E:Es'HEH",
            "HEHUHH)HHEI",
            "E:Eu#HEH;Et",
            "/HEH",
            "HEHEHE",
            "HEHEHEHUH",
            "HHEHP",
            "HE HUH",
            "H0]UHHPHM",
            "LE LM(HMHU(HE IHHEHEHH",
            "U HMHE IH\u85d1",
            "HEH9EH",
            "CEHE",
            "HEH;E(s$HEHU H",
            "HEHMH",
            "8tHE(H;E",
            "H;Ev$HEHU H",
            "HEHMH",
            "8tHEHP",
            "HEHU",
            "EHEHU(HH)HHE%HEHUHH)HH",
            "HEHE",
            "HE(HU",
            "HH)HH;E",
            "HEHU(H)HEH9H",
            "HEHE",
            "HEHE",
            "HEH;E(s$HEHU H",
            "HEHMH",
            "8tHE(H;Ew\\HEH",
            "H}t$HEHU H",
            "HEHMH",
            "8tH}u",
            "HEHU",
            "GHEH",
            "HEHUHH)HH",
            "HEHE(HU",
            "HH)HH;E",
            "HP]USHh",
            "HT\u0160H",
            "HH)HH",
            "HHT\u0160H",
            "HHD\u0160H",
            "HH)HH",
            "HH)HH",
            "HH)HH",
            "HH)HH;",
            "HHD\u0160H",
            "HH)HH",
            "HH)HH;",
            "[]UHH0HM",
            "LE LM(HE",
            "HEHE HEH}(",
            "u\tHE",
            "H;E(s",
            "w{HE",
            "HEIHvHEH}",
            "HEdHU",
            "HEHH)HH",
            "H;E(s",
            ">LE(HMHU",
            "HEMIHJ",
            "LE(HMHU",
            "HEMIHH0]",
            "UHSHHHM",
            "HE\\H",
            "HH)HH",
            "HP0H",
            "HUHEH",
            "HEH}",
            "uEHH[]UHWSH",
            "HH)HH",
            "H9uWH",
            "HH)HH",
            "H@(Ht,H",
            "HH)HH",
            "H@(HE",
            "H\u01c5xH",
            "HxHHHH",
            "H\u01c5xH",
            "HxHHHH",
            "HH)HH",
            "HH)HH",
            "H@0H\u01c5xH",
            "HxHHHH",
            "HH)HH",
            "HP0H",
            "HH)HH",
            "H\u01c5xH",
            "HxHHHH",
            "HH)HH",
            "H@0H\u01c5xH",
            "HxHHHH",
            "HH)HH",
            "H@ Ht",
            "NEHb",
            "HEHEHEH}",
            "HELE",
            "HEIH",
            "HH)HH",
            "HP0H",
            "HH)HH",
            "HH)HH",
            "HH0H",
            "HEIHN",
            "HH)HH",
            "HEIH",
            "HH)HH",
            "HH)HH",
            "Hu\\H",
            "HH)HH",
            "Hu%H",
            "HH)HH",
            "HH0H",
            "EIH\u0401",
            "HH)HH",
            "H@ H",
            "HUHP",
            "HH)HH",
            "L@ H",
            "HH)HH",
            "HP(HEHAH",
            "EHMIH",
            "HEH\u0120",
            "UHH HM",
            "H ]UHH HM",
            "HkH ]UHSH(HM",
            "HH)HH",
            "HH)HH",
            "H([]UHSH(HM",
            "HH)HH",
            "t`H}",
            "HH)HH",
            "HU H*JHE HHM",
            "H([]UHH0HM",
            "RHE<HE",
            "HEIHU",
            "HHEH}",
            "uHEH0]UHH HM",
            "LE HU HE",
            "IHHM",
            "PHE ",
            "\"HU HE",
            "IHHM",
            "H ]UHH0HM",
            "HEHHM",
            "^HE&HE",
            "<-u$HUHEIHU",
            "HHEH}",
            "HEH0]UHH0HM",
            "HUHE",
            "IHHM",
            "<-u$HUHE",
            "IHHM",
            "H0]UHATWVSH@HM",
            "tcHE",
            "tWHE",
            "H`AIHHQ}",
            "H@0HuMHE",
            "H`IHH|",
            "<-tMHE",
            "H`IHH|",
            "HUHHE",
            "<-uiE\u0503",
            "uMHE",
            "H`IHH |",
            "tdHEHxED`",
            "H`H|$ EIHH{",
            "<=u`E\u0509H",
            "H`IIHHz",
            "HUHEHWHEH}",
            "GH@[^_A\\]UHSH(HM",
            "LH)HH",
            "L@ LB L@(LB(H@0HB0A",
            "H([]UHH`HM",
            "LE LM(HE",
            "EHE HEHE(HEHE0HEHE8HEHE@HEHEHHEHH`]UHWSH`HM",
            "t2LE",
            "LHHE",
            "HEHEHE",
            "HH)HH",
            "uIEH",
            "HH)HH",
            "HP0EH",
            "HH)HH",
            "H5HEH",
            "HH)HH",
            "HH)HH",
            "HH)HH",
            "HH)HH",
            "+EHB(H`[_]UHH0HM",
            "LE E",
            "HEHE",
            "HM HUHE",
            "IIHHM",
            "H0]UHH H",
            "H ]UHSH8HU",
            "LE LM(HM",
            "H`IHU",
            "H8[]UHSH8HU",
            "LE LM(HM",
            "H`IHU",
            "UHWHHHM",
            "HMHHHH",
            "HELE",
            "HEHH_]",
            "UHWHHHM",
            "HMHHHL@HE",
            "HMHHHH",
            "HEHU",
            "HEIHU",
            "HEHH_]UHHM",
            "]UHHM",
            "]UHH HM",
            "H`\tHM",
            ":H ]UHH0HM",
            "EHEH}",
            "HEH0]UHHM",
            "]UHH0HM",
            "HEHHM",
            "HEH}",
            "HE,UHE",
            "HEH0]UHH0HM",
            "HEHHM",
            "H0]UHH0HM",
            "HEHHM",
            "HEH}",
            "HE)Ey",
            "H0]UHH0HM",
            "H0]UHH0HM",
            "HEHHM",
            "QHEH}",
            "HE)EHE",
            "H0]UHHM",
            "]UHH HM",
            "UHH HM",
            "H0Hp",
            "UHH HM",
            "H ]UHH HM",
            "H ]UHWHHHM",
            "HMHHHH",
            "HEHE",
            "\"H}Nv",
            "HUIH",
            "\"H}Mw",
            "HH_]UHH HM",
            "H ]UHH0HM",
            "EHEHHM",
            "(II\u043aP",
            "H0]UHH HM",
            "H ]UHH HM",
            "H ]UHH HM",
            "H ]UHH0HM",
            "LE DM(LE M(HE",
            "HU0HT$ LU",
            "MAHH",
            "A\u04b8H0]UHH HM",
            "DE HE",
            "+E H",
            "H ]UHWVSHxHM",
            "LE LM(HE",
            "Ht\tE",
            "u UHE",
            "AHHM",
            "HUHEHHE",
            "HEIHm",
            "ubEH",
            "<=u EH",
            "HEKEH",
            "HMHUHEIH]HEH}",
            "ufEH",
            "HMHHHH",
            "HE(H",
            "HL$ H",
            "HEH=HEQEH",
            "HUHEH`HE",
            "ufEH",
            "HMHHHH",
            "HE(H",
            "HL$ H",
            "HH)HH",
            "t,DMHE",
            "LEHE(H",
            "HL$ H~5",
            "HH)HH",
            "LH)HH",
            "H@(HHE\t",
            "uqHE ",
            "tPEH",
            "t-EH",
            "HEHE ",
            "HEH}",
            "u,DMHE",
            "LEHE(H",
            "HL$ Hu,",
            "HH)HH",
            "HH)HH",
            "HP(HEHAHEH}",
            "t:DMHE",
            "LEHE(HMHL$ HHEH",
            "t-EH",
            "uGUHE",
            "AHHM",
            "t*EH",
            "H;Eu",
            "AHHM",
            "Hx[^_]",
            "VSH(=",
            "H([^",
            "H9tH",
            "H([^\t",
            "HHfff.",
            "SH0HH",
            "HHD$ tv",
            "HD$ LD$(HT$ HHD$(g",
            "HL$ HHL$(H",
            "HH0[H",
            "HHH0[f",
            "H(GH",
            "1H0[",
            "H0[f",
            "-1H0[f",
            "D$(S",
            "ATUWVSH 1",
            "H [^_]A\\",
            "H5cg",
            "L%HHHHI)\u0731 H17",
            "\tD$P",
            "H)\u0609E",
            "HuHu*",
            "ffff.",
            "VSH8H",
            " CCG ",
            "HH8[^H",
            "\u0438H8[^f",
            "H8[^",
            "\u0438H8[^=",
            "\u0438H8[^1",
            "D$(K",
            "D$(f",
            "Ht*HT$(H$",
            "T$0L$ ",
            "\\$8HL$ HT$@\u0410HX",
            "ATUWVSH@9",
            "La Hi",
            "HH`IILd$0Hl$(H|$ `",
            "1H@[^_]A\\f",
            "VSH8HD$XHHT$XLD$`LL$hHD$(",
            "LH`A",
            "Ht$(^",
            "HH`HI_",
            "ffffff.",
            "AUATUWVSH",
            "MHHLu",
            "[^_]A\\A]",
            "HcLlm",
            "HT$PHE",
            "HT$ HH",
            "uwIHHH\u0118",
            "[^_]A\\A]B]",
            "HT$hHL$PM",
            "@tL$",
            "HT$8HL$ H-",
            "IHH\\",
            "D$D@",
            "HT$8L$",
            "HL$ \u0550H\u0118",
            "[^_]A\\A]1jH",
            "BUHATWVSH`D%a",
            "He[^_A\\]",
            "H)HD$ H",
            "HH)H",
            "EH9r\u06cb",
            "511L%%",
            "HUAH",
            "LMHUHMD",
            "Eu%H",
            "wH=I",
            "tXw!",
            "@uI)L",
            "\tLMHUA",
            "H9rD",
            "LEHUA",
            "]I)M",
            "LMtw`",
            "uHUA",
            "tM\tI)M",
            "LEHUA",
            "LE\ub943 t\u0283@",
            "=1f9MZt",
            "HcQ<H",
            "\u04419PE",
            "u1fy",
            "HcA<H",
            "Et6E",
            "LL(fH",
            "AI9w",
            "H(L9u1WVSH 1HX",
            "]tWHc",
            "H(H9t'A",
            "uHH [^_",
            "1HH [^_",
            "SH HH",
            "HH)H [1H [",
            "H(SH HH",
            "\\1\u0485tPHc",
            "B' t\tHt",
            "H(H9u1HH [ffff.",
            "EHH(f",
            "VSH(1HH",
            "u\tH([^H",
            "HH)HtX$",
            "H([^",
            "UWVSH(1H",
            "}XtSHc",
            "t:HH`Ht*H",
            "HH([^_]",
            "1HH([^_]fSH H",
            "H [f",
            "HuH(ff.",
            "VSH(H",
            "H([^",
            "1H5Y",
            "\ub110ATUWVSH@H",
            "H2-+",
            "HD$ ",
            "H@[^_]A\\fHL$ ",
            "Ld$ ",
            "HL$0",
            "L3d$0H",
            "I1I1I1I!LI9Ht",
            "H@[^_]A\\H] fI3-+",
            "UHVSHpHH",
            "E1HUH",
            "HEHD$8",
            "IHU1HD$0HEHD$(H",
            "HD$ ",
            "1H5mY",
            "xUWVSH(H",
            "Ht3H=4",
            "Ht\tHC",
            "H([^_]H",
            "UWVSH(",
            "1\u06c9H\u0585u",
            "H([^_]",
            "HHt=8Hp",
            "H-e]",
            "H([^_]",
            "\ub690SH ",
            "1H [",
            "9t)HHH",
            "1H [",
            "\ub4d0QPH=",
            "wH)H\t",
            "HHHt\"HL$ ",
            "toT$ ",
            "HtLH$",
            "*!NbH",
            "HBz\u0554HHd",
            "fffff.",
            "SH0HHL$ >u!HD$ L$(Mb",
            "1\u0489H0[fff.",
            "SH0HHL$ u!HD$ L$(Mb",
            "1\u0489H0[",
            "H8LL$XLL$XLL$(P",
            "ATUWVSH`",
            "HH$@",
            "ID(N",
            "1\u0184$4",
            "HT$0",
            "LD$0H",
            "HH|$(l$ M",
            "ujH`",
            "[^_]A\\",
            "H<unknownf\u01c4$X",
            "Of\u01c4$@",
            "H<unknownfD$8>",
            "HT$0AN",
            "HH`IM",
            "fffff.",
            "UWVSH8HDD$(HpL",
            "HH[L",
            "1DD$(t&",
            "IHHJ",
            "1\u0484t%",
            "IHHJ",
            "HH|H$L",
            "HH8[^_]",
            "ATUWVSH`HHH",
            "HT$ HM",
            "D$$fG",
            "D$&fG",
            "D$(fG",
            "D$*fG",
            "D$,fG",
            "D$0G",
            "HD$8G",
            "HD$@HG",
            "HD$HHG HD$PHG(H`[^_]A\\f",
            "gAD$",
            "</tm<\\tiIc",
            "D+<\\t",
            "ED$HHHMclJ",
            "HT$ D.",
            "/t{H",
            "ft.\\u",
            "\\tTtP/ux",
            "\ub510UHAUATWVSH(1H\u03b9",
            "E11;K",
            "H5;T",
            "HHe[^_A\\A]]E1H1J",
            " IHH)HLd$ LLJ",
            "fA\\t",
            "fE;\\$",
            "DMMf\\t\tf/Lu,A",
            "f\\tf/tft",
            "fuM9",
            "L1fA",
            "ILHHH",
            "HLHe[^_A\\A]]f/u#fIIRI9s",
            "Jf\\tL+I9",
            "$Lf\\",
            "fA\\tfA/tIM)I",
            "Hft#f",
            "f/tGf;\\LC",
            "Lfuf",
            "ILHH",
            "f/uH",
            "f\\tLfA|$",
            "=MD$",
            "-f/L",
            "PafA/",
            "fA9T$",
            "H-fA|$",
            "fA\\t",
            "fA/L",
            "fE9X",
            ")t$ ",
            ")|$0f",
            "(t$ ",
            "(|$0HHf",
            "(t$ ",
            "(|$0HH",
            "AWAVAUATUWVSH8HHHDt",
            "$~\"D",
            "1H8[^_]A\\A]A^A_H",
            "uE1@-HA",
            "AE\u0403\t",
            "McE1HcI",
            "J\u0403\tv",
            "\u0449T$(F",
            "J\u024919",
            "t}LLH?HH",
            "I9vA",
            "\u0449T$(E",
            "T$(u1Ht",
            "EupM",
            "LHEI",
            "DmJ8",
            "uVDAE",
            "I9vB",
            "HEeD",
            "SHPL",
            "HD$@LL$LHD$ p",
            "\\$DT$@",
            "H H\t\u04e8",
            "H\u0603H ",
            "H H\tH\\$8",
            "D$8HP[H",
            "1T$LL$D\\$@3",
            "\tH H\tf",
            "T$D\\$@H H\tH",
            "uSH ",
            "H [f",
            "0\u06c5tAMb",
            "UHAVAUATWVSH 1H\u03f9",
            "E11B",
            "H=\tL",
            "HHe[^_A\\A]A^]",
            "E1H1B",
            " IHH)HLl$ LLiB",
            "EfADE",
            "Hf\\t\tf/Hu/",
            "f\\tf/tf",
            "fuf;",
            "E11A",
            "IHHH",
            "H9wfLLILHHA",
            "E1L1f",
            "Ezf\\H",
            "HH)r",
            "Hx#H",
            "*H)x8H",
            "HH\tH",
            "HH\tH",
            "X\ubd90VSH(DA",
            "McJL",
            "H9wD;C",
            "H([^f",
            "HH([^",
            "AWAVAUATUWVSHH$",
            "HLHT$<LD$8",
            "T$8D#H\u01cbD$<D)",
            "\u0405\u0489T$8D$<",
            "A5t<",
            "E1HDD$(3+",
            "DD$(",
            "D$<E",
            "A\u0409T$<A)E9|qK",
            "ujAXE",
            "HcD#D",
            "HD$(R+",
            "D$(AE",
            "IDL)",
            "HD$(U",
            "D$(HH[^_]A\\A]A^A_",
            "1T$<;",
            "D$<D$",
            "E111\ub2c9",
            "9tPEu",
            "D$<YH&\"",
            "H\u01cbD$<_f.",
            "D$< ",
            "dHDD$(",
            "ADD$(",
            "CH\u01cbD$<}",
            "fffff.",
            "SH0Z",
            "HcHL",
            "I9s A",
            "L9wH)H",
            ")AhH0[f",
            "T$(7",
            "T$(f.",
            "AWAVAUATUWVSH",
            "IH$h",
            "ID$d",
            "E1<0",
            "E111\u0243/R",
            "4tpH",
            "FD@D",
            "AfD$d",
            "E1D$d",
            "D\\$dEu^Mt",
            "[^_]A\\A]A^A_",
            "fD$d",
            "LL$PE1E1E1Et",
            "E1\u0243e",
            "D\tD\t",
            "0u H$",
            "0tPE1\u0243",
            "DHH$",
            "IHD$XHI",
            "/~69",
            "IFLH",
            "L+|$XI",
            "D|$`DED",
            "u\tH$",
            "\t\u04280$",
            "<0tE1",
            "E)\u01c4$",
            "DL$hB",
            "+T$d",
            "t\"T$d",
            "*AT$H",
            "D$hD)",
            "E1H$",
            "A)\u0749$",
            "E~%DH",
            "A)A@",
            "A9\u0109D$x",
            "AA)A",
            "DD$xD$X",
            "L$xH$x",
            "HcL$hH",
            "HD$015",
            "L$(D$ ",
            "LL$PE1E1PA",
            "DLL$PE1E1E1",
            "HE1\u06c30u\"A",
            "0tP\u03c3",
            "HT$PIf",
            "PD$h",
            "HD$0$",
            "HL$PDAAl$ ",
            "D\\$hHD$pS",
            "D$hD$`",
            "HL$p\\$l$",
            "ID$`H",
            "D$`1",
            "D1\u8244$",
            "E1D$| ",
            "(DD$X$",
            "L$Pu",
            "9L$l",
            "L$XH$",
            "9~!L$x9$",
            "EtQ$",
            "D|$X1E",
            "HD$pE1H",
            "HT$pHH",
            "HHcB",
            "HHcB",
            "DT$hH\u014bD$`A",
            "A)ED",
            "Od$hEE)Ex",
            "D+t$lD)D9t$x~",
            "D+t$xD",
            "\u0549D$PDE9A",
            ")A)A)\u0549D$PDL$`Et/T$`HK",
            "HHD$H",
            "HD$HHA)A",
            "HDD$PE~",
            "T$PH!",
            "HHHc",
            "HAD$",
            "E1D$|",
            "} HcH",
            "9D$l$",
            "ED$XD$X",
            "\\$lDt$X$",
            "HL$p",
            "H9wE1",
            ")\u0289h6",
            "L$x9$",
            "D$l1",
            "~#Hc\u0443",
            "A9EL",
            "@\\$l$",
            "E1D$|",
            "(vID",
            "+D$|A",
            "*D$|f\u01c4$",
            "%D$|\\$l\t$",
            "Dt$lA)H$",
            "T$lH$",
            "E1D$| ",
            "HE1@",
            "E1L$dL$x",
            "L$ H$",
            "AA)A",
            "zD$`",
            "HD$0T$(D$h%",
            "D$hDD$()H",
            "HD$0",
            "D)\u8244$",
            "zLL$P1E1A",
            "D9D$x",
            "Dl$XE",
            "HHI\t",
            "E\\$l",
            "D\\$XEtID$",
            "DT$XEu\tD9",
            "Dl$dE",
            "bDd$dE",
            "OD$l1L$",
            "Q4E1A4wRDL$XE",
            "\\$lL$",
            "DD$x\u01c4$",
            "ti\u01c4$",
            "DD$|\\$lD\t$",
            "9L$x\u01c4$",
            "(T$xA@",
            "VSH(",
            "t@ui",
            "H([^H",
            "tH([^",
            "HH [Hfffff.",
            "WVSH 1\t",
            "HcH<Ht\\H",
            "HH [^_",
            "FHHH",
            "ffff.",
            "SH HHtCy",
            "-1HcS",
            "1H [d",
            "H [f",
            "H [f.",
            "UWVSH(q",
            "IcHc1f",
            "HH([^_]",
            "THHt3HH",
            "SH \u02f9",
            "H [f.",
            "AVAUATUWVSH i",
            "HI9}",
            "H\u04c9I\u03091\u024dt=",
            "LcHH",
            "I9wHcMT$",
            "HcMd",
            "M9sZHA",
            "tCHLE1",
            "I H9wDJ",
            "M9w~%BL",
            "H [^_]A\\A]A^fffff.",
            "UWVSH(H\u02c9\u0583",
            "tQH=/",
            "HtDH@",
            "tHHHH",
            "HH)u",
            "HH([^_]",
            "H/Ht>",
            "HHHHH",
            "1HH([^_]",
            "iH=.",
            "tHHH",
            "fff.",
            "AUATUWVSH(H\u02c9\u05c9Dc",
            "AE\tD",
            "AM9wA",
            "lLH([^_]A\\A]A",
            "D)u/McLA",
            "D9Iu",
            "WVSH HH",
            "IcH|",
            "I)I)LE",
            "L9wH9MHv;",
            "I)LE",
            "H9wHH",
            "EtDX",
            "H [^_",
            "1\tHt@",
            "H [^_H\u063f",
            "HHff.",
            "WVSH",
            "D1D)",
            "?H L9s",
            "B4AH",
            "AD\tH\tHt$",
            "1L9s",
            "AD)AE1A",
            "?AE\tI I9v",
            "ECA\u0589D\tL\tf.",
            "?H H\twff.",
            "WVSH0",
            "D$(HLHt$(H",
            "II DA",
            "E\u0445t]D",
            "AD)AD\tH",
            "H0[^_",
            "EDI P",
            "H0[^_f.",
            "AVAUATUWVSH $",
            "DH\u03c9\u058dK",
            "98E\u0309",
            "B\tD`",
            "~rLo\tDfNt'",
            "HA0GL9uK|%",
            "9uH [^_]A\\A]A^",
            "H|/\t\ube90WVSHP",
            ")t$@HHT$8HHT$<H",
            "D$(f",
            "(H|$(F",
            "D$(T$8+T$<HL$(",
            "\u0405~6H",
            "H H\tH|$(",
            "(t$@HP[^_",
            "H )H H\tHL$(",
            "D$(ff.",
            "DP ZA",
            "ND9u\"D",
            "1ffff.",
            "HcL\\",
            "L9s:HD",
            "I9wM)IBH",
            "I9wffffff.",
            "A9}OMcI",
            "L9s)GD",
            "H9s[H",
            "Lc~+",
            "EAAE9tf",
            "UWVSHHY",
            "HcMcH",
            ")AI9HvKL)E1HoH",
            "AE\tF",
            "AI9uHL",
            "toHQ",
            "[^_]M9HLvfD",
            "I9wIK",
            "t[^_]f.",
            "HH)H",
            "1L9s",
            " I9w",
            "AUATUWVSH(B",
            "HH\u03cbN",
            "IcHl",
            "DfDX",
            "H9wDF",
            "E)McN\\",
            "I9vCf.",
            "DfDH",
            "I9w\u01c5t",
            "t#IcA",
            "HH([^_]A\\A]",
            "HHDV",
            "\ub950AWAVAUATUWVSH8HHL$",
            "J0tL5Rm",
            "C:T%",
            "u8uxEtsA",
            "A:L$",
            "$1Mt",
            "E)B<",
            "LD$(",
            "t$(C",
            "D#DA",
            "u0E1HE",
            "McD)BT",
            "H8[^_]A\\A]A^A_A",
            "Et8A",
            "ALJD",
            "EuD\\$(AAEA",
            "uL1L)",
            "ILL$(t",
            "L\\$(E1E11",
            "A\tM9s",
            "D$It$A:",
            "uII)M9rA",
            "L+\\$(D#I",
            "D$E11$",
            "LLD$ *LD$ A\u0149LL$(",
            "LD$ D",
            "ELA){",
            "LD$ ",
            "LD$ ",
            "LD$ ",
            "{DL)",
            "I)LL$(D$(",
            "$1E1",
            "A9D)LLD$ E1sLD$ t<N",
            "HcAD",
            "L=LD$ ",
            "LLD$ ",
            "LD$ ",
            "ME1M",
            "BE1D$",
            "MVD$",
            "7@L\\$( ",
            "E1#M1A",
            "LL$(E",
            "rLL$(A@",
            "HcA#D",
            "\u0583\"AT$LLD$ qLD$ ",
            "gAWAVAUATUWVSHX=d",
            "Hc\u0489D$LH",
            "M4IV",
            "LM1E11f",
            "NI9sI",
            ")LHD$(",
            "A)DZ",
            "DDD\tEA",
            "H9wHD$(M9",
            "I9sAV\u04b8",
            "u,M9u",
            "HX[^_]A\\A]A^A_",
            "H\u0600 w",
            " v0t.",
            "M9vAA",
            "+L$LA#VAVI9",
            "DD\tD0P",
            "H9rM9s^)",
            "lHT$@LD$8",
            "LD$8HT$@",
            "Xt\tx",
            "aHc\u0488",
            "LwV'f<[\u0708j}|{8X.",
            "MND_",
            "~:73,(>",
            "FqO4Zt",
            "_set_invalid_parameter_handler",
            "WTF MUTEX ERROR ON LOCK!",
            "WTF MUTEX ERROR ON UNLOCK!",
            "WTF WRLOCK ERROR ON LOCK!",
            "WTF RDLOCK ERROR ON LOCK!",
            "WTF RWLOCK ERROR ON UNLOCK!",
            "Failed to pthread_mutex_init",
            "Failed to pthread_rwlock_init",
            "Failover",
            "Round Robin",
            "Rotate",
            "Load Balance",
            "Balance",
            "bfgminer 2.99.0",
            "bfgminer.conf",
            "[%d-%02d-%02d %02d:%02d:%02d]",
            "[%02d:%02d:%02d]",
            "%lu,%s,%s,%s,%s,%u,%s,%s",
            "sharelog printf error",
            "sharelog fwrite error",
            "{\"method\": \"getwork\", \"params\": [], \"id\":0}",
            "Failed to malloc pool in add_pool",
            "Failed to pthread_cond_init in add_pool",
            "Value out of range",
            "Invalid address",
            "Failed to convert address to script",
            "scan-serial: QueryDosDevice returned insufficent buffer error; enlarging to %lx",
            "scan-serial: Error occurred trying to enumerate COM ports with QueryDosDevice",
            "\\\\.\\",
            "scan-serial: QueryDosDevice all-adding %s",
            "Invalid device number",
            "stratum+tcp://",
            "http://",
            "https://",
            "Failed to malloc httpinput",
            "User + pass options must be balanced before userpass",
            "Failed to find : delimited user info",
            "Usage of --pool-priority before pools are defined does not make sense",
            "Usage of --pool-proxy before pools are defined does not make sense",
            "Your installed cURL library does not support proxy URIs. At least version 7.21.7 is required.",
            "Usage of --force-rollntime before pools are defined does not make sense",
            "%d:%d",
            "Invalid time set, should be HH:MM",
            "Invalid time set.",
            "Failed to open fd %u for share log",
            "Standard output missing for share log",
            "Failed to open %s for share log",
            "Invalid parameters for set temp cutoff",
            "Invalid value passed to set temp cutoff",
            "Invalid parameters for set temp target",
            "Invalid value passed to set temp target",
            "%-6s: Set temperature config: target=%d cutoff=%d",
            "Too many values passed to set temp cutoff",
            "Too many values passed to set temp target",
            "--api-allow",
            "Allow API access only to the given list of [G:]IP[/Prefix] addresses[/subnets]",
            "--api-description",
            "Description placed in the API status header, default: BFGMiner version",
            "--api-groups",
            "API one letter groups G:cmd:cmd[,P:cmd:*...] defining the cmds a groups can use",
            "--api-listen",
            "Enable API, default: disabled",
            "--api-network",
            "Allow API (if enabled) to listen on/for any address, default: only 127.0.0.1",
            "--api-port",
            "Port number of miner API",
            "--auto-fan",
            "Automatically adjust all GPU fan speeds to maintain a target temperature",
            "--auto-gpu",
            "Automatically adjust all GPU engine clock speeds to maintain a target temperature",
            "--balance",
            "Change multipool strategy from failover to even share balance",
            "--benchmark",
            "Run BFGMiner in benchmark mode - produces no shares",
            "--bfl-range",
            "Use nonce range on bitforce devices if supported",
            "--coinbase-addr",
            "Set coinbase payout address for solo mining",
            "--coinbase-payout|--cbaddr|--cb-addr|--payout",
            "--coinbase-sig",
            "Set coinbase signature when possible",
            "--coinbase|--cbsig|--cb-sig|--cb|--prayer",
            "--compact",
            "Use compact display without per device statistics",
            "--debug|-D",
            "Enable debug output",
            "--debuglog",
            "Enable debug logging",
            "--device|-d",
            "Select device to use, (Use repeat -d for multiple devices, default: all)",
            "--disable-gpu|-G",
            "Disable GPU mining even if suitable devices exist",
            "--disable-rejecting",
            "Automatically disable pools that continually reject shares",
            "--expiry|-E",
            "Upper bound on how many seconds after getting work we consider a share from it stale (w/o longpoll active)",
            "--expiry-lp",
            "Upper bound on how many seconds after getting work we consider a share from it stale (with longpoll active)",
            "--failover-only",
            "Don't leak work to backup pools when primary pool is lagging",
            "--force-dev-init",
            "Always initialize devices when possible (such as bitstream uploads to some FPGAs)",
            "--gpu-dyninterval",
            "Set the refresh interval in ms for GPUs using dynamic intensity",
            "--gpu-platform",
            "Select OpenCL platform ID to use for GPU mining",
            "--gpu-threads|-g",
            "Number of threads per GPU (1 - 10)",
            "--gpu-engine",
            "GPU engine (over)clock range in MHz - one value, range and/or comma separated list (e.g. 850-900,900,750-850)",
            "--gpu-fan",
            "GPU fan percentage range - one value, range and/or comma separated list (e.g. 0-85,85,65)",
            "--gpu-map",
            "Map OpenCL to ADL device order manually, paired CSV (e.g. 1:0,2:1 maps OpenCL 1 to ADL 0, 2 to 1)",
            "--gpu-memclock",
            "Set the GPU memory (over)clock in MHz - one value for all or separate by commas for per card",
            "--gpu-memdiff",
            "Set a fixed difference in clock speed between the GPU and memory in auto-gpu mode",
            "--gpu-powertune",
            "Set the GPU powertune percentage - one value for all or separate by commas for per card",
            "--gpu-reorder",
            "Attempt to reorder GPU devices according to PCI Bus ID",
            "--gpu-vddc",
            "Set the GPU voltage in Volts - one value for all or separate by commas for per card",
            "--lookup-gap",
            "Set GPU lookup gap for scrypt mining, comma separated",
            "--intensity|-I",
            "Intensity of GPU scanning (d or -10 -> 20, default: d to maintain desktop interactivity)",
            "--kernel-path|-K",
            "Specify a path to where bitstream and kernel files are",
            "--kernel|-k",
            "Override sha256 kernel to use (diablo, poclbm, phatk or diakgcn) - one value or comma separated",
            "--icarus-options",
            "--icarus-timing",
            "--load-balance",
            "Change multipool strategy from failover to efficiency based balance",
            "--log|-l",
            "Interval in seconds between log output",
            "--net-delay",
            "Impose small delays in networking to not overload slow routers",
            "--no-adl",
            "Disable the ATI display library used for monitoring and setting GPU parameters",
            "--no-gbt",
            "Disable getblocktemplate support",
            "--no-getwork",
            "Disable getwork support",
            "--no-longpoll",
            "Disable X-Long-Polling support",
            "--no-pool-disable",
            "--no-restart",
            "Do not attempt to restart devices that hang",
            "--no-show-processors",
            "--no-show-procs",
            "--no-stratum",
            "Disable Stratum detection",
            "--no-submit-stale",
            "Don't submit shares if they are detected as stale",
            "--pass|-p",
            "Password for bitcoin JSON-RPC server",
            "--per-device-stats",
            "Force verbose mode and output per-device statistics",
            "--pool-priority",
            "Priority for just the previous-defined pool",
            "--pool-proxy|-x",
            "Proxy URI to use for connecting to just the previous-defined pool",
            "--force-rollntime",
            "--protocol-dump|-P",
            "Verbose dump of protocol-level activities",
            "--queue|-Q",
            "Minimum number of work items to have queued (0+)",
            "--quiet|-q",
            "Disable logging output, display status and errors",
            "--quiet-work-updates|--quiet-work-update",
            "--real-quiet",
            "Disable all output",
            "--remove-disabled",
            "Remove disabled devices entirely, as if they didn't exist",
            "--request-diff",
            "Request a specific difficulty from pools",
            "--retries",
            "Number of times to retry failed submissions before giving up (-1 means never)",
            "--retry-pause",
            "--rotate",
            "Change multipool strategy from failover to regularly rotate at N minutes",
            "--round-robin",
            "Change multipool strategy from failover to round robin on failure",
            "--scan-serial|-S",
            "Serial port to probe for FPGA Mining device",
            "--scan-time|-s",
            "Upper bound on time spent scanning current work, in seconds",
            "--scantime",
            "--sched-start",
            "Set a time of day in HH:MM to start mining (a once off without a stop time)",
            "--sched-stop",
            "Set a time of day in HH:MM to stop mining (will quit without a start time)",
            "--scrypt",
            "Use the scrypt algorithm for mining (non-bitcoin)",
            "--shaders",
            "GPU shaders per card for tuning scrypt, comma separated",
            "--sharelog",
            "Append share log to file",
            "--shares",
            "Quit after mining N shares (default: unlimited)",
            "--show-processors",
            "Show per processor statistics in summary",
            "--show-procs",
            "--skip-security-checks",
            "Skip security checks sometimes to save bandwidth; only check 1/<arg>th of the time (default: never skip)",
            "--socks-proxy",
            "Set socks4 proxy (host:port)",
            "--submit-stale",
            "--submit-threads",
            "Minimum number of concurrent share submissions (default: 64)",
            "--temp-cutoff",
            "Temperature where a device will be automatically disabled, one value or comma separated list",
            "--temp-hysteresis",
            "Set how much the temperature can fluctuate outside limits when automanaging speeds",
            "--temp-overheat",
            "Overheat temperature when automatically managing fan and GPU speeds, one value or comma separated list",
            "--temp-target",
            "Target temperature when automatically managing fan and clock speeds, one value or comma separated list",
            "--text-only|-T",
            "Disable ncurses formatted screen output",
            "--thread-concurrency",
            "Set GPU thread concurrency for scrypt mining, comma separated",
            "--url|-o",
            "URL for bitcoin JSON-RPC server",
            "--user|-u",
            "Username for bitcoin JSON-RPC server",
            "--vectors|-v",
            "Override detected optimal vector (1, 2 or 4) - one value or comma separated list",
            "--verbose",
            "Log verbose output to stderr as well as status output",
            "--worksize|-w",
            "Override detected optimal worksize - one value or comma separated list",
            "--userpass|-O",
            "Username:Password pair for bitcoin JSON-RPC server",
            "--worktime",
            "Display extra work time debug information",
            "--pools",
            "miner.c",
            "!(opt->type & OPT_SUBTABLE)",
            "Invalid value",
            "Invalid config option %s: %s",
            "Parsing JSON option %s: %s",
            "include",
            "Too many levels of JSON includes (limit 10) or a loop",
            "Malloc failure in json error",
            "JSON decode of file '%s' failed",
            "Built with GPU bitforce icarus modminer x6500 ztex scrypt mining support.",
            "--config|-c",
            "Load a JSON-format configuration file",
            "See example.conf for an example configuration.",
            "--help|-h",
            "Print this message",
            "--ndevs|-n",
            "Display number of detected GPUs, OpenCL platform information, and exit",
            "--version|-V",
            "Display version and exit",
            "JSON key '%s' not found",
            "JSON key '%s' is not a string",
            "Failed to calloc work in make_work",
            "000000800000000000000000000000000000000000000000000000000000000000000000000000000000000080020000",
            "...%s",
            " #%6u",
            "Learned that block id %08x is height %u",
            "result",
            "algorithm",
            "scrypt",
            "blktmpl error: %s",
            "Cannot append template-nonce to coinbase on pool %u (%I64d) - you might be wasting hashing!",
            "Cannot append coinbase signature at all on pool %u (%I64d)",
            "bfgminer",
            "Pool %u truncating appended coinbase signature at %I64d bytes: %s(%s)",
            "Error appending coinbase signature (%I64d)",
            "data",
            "JSON inval data",
            "midstate",
            "Calculating midstate locally",
            "target",
            "JSON inval target",
            "height",
            "%.3g%s",
            "%d%s",
            "%*.*f%s",
            "kMGTPEZY?",
            "%5.*f",
            " %-6s: ",
            " %s: ",
            "               | ",
            "DEAD ",
            "SICK ",
            "OFF  ",
            "REST ",
            " ERR ",
            "WAIT ",
            "%s/%s/%s | A:%*d R:%*d HW:%*d U:%*.2f/m",
            "%ds:%s avg:%s u:%s | A:%d R:%d HW:%d U:%.1f/m",
            " bfgminer version 2.99.0 - Started: %s",
            " - [%3u day%c %02d:%02d:%02d]",
            " ST: %d  DW: %d  GW: %d  LW: %d  GF: %d  NB: %d  AS: %d  RF: %d  E: %.2f",
            " Connected to multiple pools with%s LP",
            " Connected to %s diff %s with stratum as user %s",
            " Connected to %s diff %s with%s LP as user %s",
            " Block: %s  Diff:%s  Started: %s  Best share: %s   ",
            "[G]PU management ",
            "[P]ool management %s[S]ettings [D]isplay options [Q]uit",
            " pool %d",
            "(resubmit)",
            "%s %02x%02x%02x%02x %-6s%s Diff %s/%s%s %s%s",
            "PROOF OF WORK RESULT: true (yay!!!)",
            "Accepted",
            "accept",
            "Successfully mined %d accepted shares as requested and exiting.",
            "Rejecting pool %d now accepting shares, re-enabling!",
            "PROOF OF WORK RESULT: false (booooo)",
            "pool %d",
            "reject-reason",
            " (%s)",
            "Rejected",
            "Pool %d rejected %d sequential shares, disabling!",
            "{\"method\": \"getwork\", \"params\": [ \"",
            "\" ], \"id\":1}",
            "DBG: sending %s submit RPC call: %s",
            "submit_upstream_work json_rpc_call failed",
            "Pool %d communication failure, caching submissions",
            "Pool %d communication resumed, submitting work",
            "error",
            "C:%1.3f",
            " <-%08lx.%08lx M:%c D:%1.*f G:%02d:%02d:%02d:%1.3f %s (%1.3f) W:%1.3f (%1.3f) S:%1.3f R:%02d:%02d:%02d",
            "params",
            "getblocktemplate",
            "getwork",
            "UNKNOWN",
            "DBG: sending %s get RPC call: %s",
            "Failed to decode work in get_upstream_work",
            "Pool %u failed getblocktemplate request; falling back to getwork protocol",
            "Failed json_rpc_call in get_upstream_work",
            "Received kill message",
            "Prompting submit_work thread to finish",
            "Killing off watchpool thread",
            "Killing off watchdog thread",
            "Stopping mining threads",
            "Killing off mining threads",
            "Killing off stage thread",
            "Killing off API thread",
            "Shutdown signal received.",
            "Attempting to restart %s",
            "Failed to restart application",
            "Failed to calloc in recruit_curl",
            "Failed to init in recruit_curl",
            "Recruited curl %d for pool %d",
            "Attempted to add NULL in push_curl_entry",
            "Failed to get next data from template; spinning wheels!",
            "Successfully rolled extranonce to dataid %u",
            "Successfully rolled time header in work",
            "Pushing cloned available work to stage thread",
            "Pool %d %s not responding!",
            "Pool %d %s failed to return work",
            "Share stale due to block mismatch (%08lx != %08lx)",
            "Share stale due to mandatory work update (%02x != %02x)",
            "Work stale due to block mismatch (%08lx != 1 ? %08lx : %08lx)",
            "Work stale due to block mismatch (%08lx != 0 ? %08lx : %08lx)",
            "Work stale due to work update (%02x != %02x)",
            "Work stale due to stratum job_id mismatch",
            "Share",
            "Work",
            "%s stale due to expiry (%.0f >= %u)",
            "Work stale due to fail only pool mismatch (pool %u vs %u)",
            "Found block for pool %d!",
            "discard",
            "Share found for dead stratum pool %u, discarding",
            "disconnect",
            "Pool %d stale share detected, submitting as user requested",
            "Pool %d stale share detected, submitting as pool requested",
            "Pool %d stale share detected, discarding",
            "{\"params\": [\"%s\", \"%s\", \"%s\", \"%s\", \"%s\"], \"id\": %d, \"method\": \"mining.submit\"}",
            "submit_thread queuing submission",
            "submit_thread queuing submissions (see --submit-threads)",
            "Pool %d share became stale during submission failure, will retry as user requested",
            "Pool %d share became stale during submission failure, will retry as pool requested",
            "Pool %d share became stale during submission failure, discarding",
            "Pool %d failed %d submission retries, discarding",
            "Pool %d stale share failed to submit for 5 minutes, discarding",
            "json_rpc_call failed on submit_work, retrying",
            "submit_work",
            "Creating extra submit work thread",
            "Stratum pool %u died while share waiting to submit, discarding",
            "Successfully submitted, adding to stratum_shares db",
            "Pool %d stratum share submission failure",
            "!write_sws",
            "submit_work thread exiting",
            "WTF No pool %d found!",
            "Pool %d priority changed from %d to %d",
            "Switching to %s",
            "Discarded work",
            "Discarded cloned or rolled work",
            "Discarded %d stales that didn't match current hash",
            "New block: %s diff %s",
            "q]I5!",
            "000000000000000000000000000000000000",
            "test_work_current OOM",
            "Deleted block %d from database",
            "Longpoll from pool %d detected new block",
            "New block detected on network before longpoll",
            "New block detected on network",
            "Longpoll from pool",
            "Pool",
            "%s %d caught up to new block",
            "%s %d is issuing work for an old block: %s",
            "Longpoll from pool %d requested work update",
            "t`L;'",
            "stage",
            "Popping work to stage thread",
            "Failed to tq_pop in stage_thread",
            "Pushing work to getwork queue (queued=%c)",
            "Failed to hash_push in stage_thread",
            "Pushing work from pool %d to hash queue",
            "Pool: %s",
            "SOLVED %d BLOCK%s!",
            "Does not have",
            "%s own long-poll support",
            " Queued work requests: %d",
            " Share submissions: %d",
            " Accepted shares: %d",
            " Rejected shares: %d",
            " Accepted difficulty shares: %1.f",
            " Rejected difficulty shares: %1.f",
            " Reject ratio: %.1f%%",
            " Efficiency (accepted * difficulty / 2 KB): %.2f",
            " Discarded work due to new blocks: %d",
            " Stale submissions discarded due to new blocks: %d",
            " Unable to get work from server occasions: %d",
            " Submitting work remotely delay occasions: %d",
            "\"pools\" : [",
            "\t\t\"url\" : \"%s\",",
            "\t\t\"pool-proxy\" : \"%s\",",
            "\t\t\"user\" : \"%s\",",
            "\t\t\"pass\" : \"%s\",",
            "\t\t\"pool-priority\" : \"%d\"",
            "\t\t\"force-rollntime\" : %d",
            "\"intensity\" : \"",
            "%s%d",
            "\"vectors\" : \"",
            "\"worksize\" : \"",
            "\"kernel\" : \"",
            "poclbm",
            "phatk",
            "diakgcn",
            "diablo",
            "\"lookup-gap\" : \"",
            "\"thread-concurrency\" : \"",
            "\"shaders\" : \"",
            "\"gpu-engine\" : \"",
            "%s%d-%d",
            "\"gpu-fan\" : \"",
            "\"gpu-memclock\" : \"",
            "\"gpu-memdiff\" : \"",
            "\"gpu-powertune\" : \"",
            "\"gpu-vddc\" : \"",
            "%s%1.3f",
            "\"temp-cutoff\" : \"",
            "\"temp-overheat\" : \"",
            "\"temp-target\" : \"",
            "\"gpu-reorder\" : true",
            "\"%s\" : true",
            "\"%s\" : \"%d\"",
            "\"shares\" : \"%d\"",
            "\"balance\" : true",
            "\"load-balance\" : true",
            "\"round-robin\" : true",
            "\"rotate\" : \"%d\"",
            "\"kernel-path\" : \"%s\"",
            "\"sched-time\" : \"%d:%d\"",
            "\"stop-time\" : \"%d:%d\"",
            "\"socks-proxy\" : \"%s\"",
            "\"device\" : \"%d\"",
            "\"api-allow\" : \"%s\"",
            "\"api-description\" : \"%s\"",
            "\"api-groups\" : \"%s\"",
            "\"icarus-options\" : \"%s\"",
            "\"icarus-timing\" : \"%s\"",
            "%d: ",
            "Enabled  ",
            "Disabled ",
            "Rejectin ",
            "Dead ",
            "Strtm",
            "Mixed",
            " GBT ",
            "GWork",
            "Alive",
            " Pool %d: %s  User:%s",
            "Current pool management strategy: %s",
            "Set to rotate every %d minutes",
            "enabled",
            "disabled",
            "[F]ailover only %s",
            "[A]dd pool [R]emove pool [D]isable pool [E]nable pool [P]rioritize pool",
            "[C]hange management strategy [S]witch pool [I]nformation",
            "Or press any other key to continue",
            "Cannot remove last pool",
            "Select pool number",
            "Invalid selection",
            "Unable to remove pool due to activity",
            "Cannot disable last pool",
            "%d: %s",
            "Select strategy number type",
            "Select interval in minutes",
            "Enter new pool priority (comma separated list)",
            "No pools",
            "Missing pool id parameter",
            "Invalid pool id %d - range is 0 - %d",
            "Duplicate pool specified %d",
            "compact",
            "processors",
            "devices",
            "[N]ormal [C]lear [S]ilent mode (disable all output)",
            "[D]ebug:%s",
            "[P]er-device:%s",
            "[Q]uiet:%s",
            "[V]erbose:%s",
            "[R]PC debug:%s",
            "[W]orkTime details:%s",
            "su[M]mary detail level:%s",
            "[L]og interval:%d",
            "[Z]ero statistics",
            "Select an option or any other key to return",
            "Quiet mode %s",
            "Verbose mode %s",
            "Output mode reset to normal",
            "Debug mode %s",
            "su[M]mary detail level changed to: %s",
            "Per-device stats %s",
            "RPC protocol debugging %s",
            "Interval in seconds",
            "Log interval set to %d seconds",
            "WorkTime details %s",
            "[L]ongpoll: %s",
            "[Q]ueue: %d",
            "[S]cantime: %d",
            "[E]xpiry: %d",
            "[R]etries: %d",
            "[W]rite config file",
            "[B]FGMiner restart",
            "Extra work items to queue",
            "Longpoll %s",
            "Set scantime in seconds",
            "Set expiry time in seconds",
            "Retries before failing (-1 infinite)",
            "Config filename to write (Enter for default) [%s]",
            "File exists, overwrite?",
            "Cannot open or create file",
            "Are you sure?",
            "input",
            "[thread %d: %I64u hashes, %.1f khash/sec]",
            "%s          ",
            "ALL ",
            "%s%ds:%s avg:%s u:%s | A:%d R:%d S:%d HW:%d U:%.1f/m",
            "JSON decode failed(%d): %s",
            "(unknown reason)",
            "JSON-RPC non method decode failed: %s",
            "txlist",
            "Pool %u is sending mismatched block contents to us (%u is not %u-%u)",
            "Pool %u now providing block contents to us",
            "Accepted untracked stratum share from pool %d",
            "Rejected untracked stratum share from pool %d",
            "yFfFLF2F",
            "FEEEE",
            "EeELost %d shares due to stratum disconnect on pool %d",
            "Stratum connection to pool %d resumed",
            "stratum",
            "Stratum connection to pool %d interrupted",
            "Unknown stratum msg: %s",
            "Stratum from pool %d requested work update",
            "Stratum from pool %d detected new block",
            "Pool %u is hiding block contents from us",
            "Failed to create stratum thread",
            "Testing pool %d stratum %s",
            "Testing pool %s",
            "CURL initialisation failed",
            "Switching pool %d %s to %s",
            "bits",
            "Successfully retrieved and deciphered work from pool %u %s",
            "Pushing pooltest work to base pool",
            "Successfully retrieved but FAILED to decipher work from pool %u %s",
            "Selected %s protocol for pool %u",
            "Failed to create pool longpoll thread",
            "FAILED to retrieve work from pool %u %s",
            "Pool %u slow/down or URL or credentials invalid",
            "Pool %d %s alive",
            "Pool %d %s resumed returning work",
            "Pushing rolled converted work to stage thread",
            "Generated target %s",
            "Failed to calloc coinbase in gen_stratum_work",
            "Failed to calloc header in gen_stratum_work",
            "%s%s%s%s%s%s%s",
            "00000000",
            "Generated stratum merkle %s",
            "Generated stratum header %s",
            "Work job_id %s nonce2 %s ntime %s",
            "Failed to convert header to data in gen_stratum_work",
            "%s: Popping work from get queue to get work",
            "%s: Got work from get queue to get work for thread %d",
            "Pushing submit work to work thread",
            "%s: invalid nonce - HW error",
            "Thread %d being disabled",
            "Thread %d being re-enabled",
            "Waiting for wakeup notification in miner thread",
            "Could not convert longpoll data to work",
            "Pushing converted work to stage thread",
            "Converted longpoll data to work",
            "longpoll",
            "No suitable long-poll found for %s",
            "Block change for %s detection via %s stratum",
            "Long-polling activated for %s (%s)",
            "Long-polling activated for %s via %s (%s)",
            "submitold",
            "longpoll failed for %s, retrying every 30s",
            "Reaped %d curl%s from pool %d",
            "watchpool",
            "Waking up thread %d",
            "watchdog",
            "Pausing execution as per stop time %02d:%02d scheduled",
            "Terminating execution as planned",
            "Will restart execution as scheduled at %02d:%02d",
            "Restarting execution as per start time %02d:%02d scheduled",
            "Will pause execution as scheduled at %02d:%02d",
            "%.1f C  F: %d%%(%dRPM)  E: %dMHz  M: %dMHz  V: %.3fV  A: %d%%  P: %d%%",
            "Attempting to reinitialize %s",
            "%s recovered to temperature below target, re-enabling",
            "%s hit thermal cutoff limit, disabling!",
            "%s: Recovered, declaring WELL!",
            "%s: Idle for more than 60 seconds, declaring SICK!",
            "GPU still showing activity suggesting a hard hang.",
            "Will not attempt to auto-restart it.",
            "%s: Attempting to restart",
            "%s: Not responded for more than 10 minutes, declaring DEAD!",
            "Summary of runtime statistics:",
            "Started at %s",
            "Pool: %s",
            "Runtime: %d hrs : %d mins : %d secs",
            "Average hashrate: %.1f Megahash/s",
            "Solved blocks: %d",
            "Best share difficulty: %s",
            "Queued work requests: %d",
            "Share submissions: %d",
            "Accepted shares: %d",
            "Rejected shares: %d",
            "Accepted difficulty shares: %1.f",
            "Rejected difficulty shares: %1.f",
            "Reject ratio: %.1f%%",
            "Hardware errors: %d",
            "Efficiency (accepted shares * difficulty / 2 KB): %.2f",
            "Utility (accepted shares / min): %.2f/min",
            "Discarded work due to new blocks: %d",
            "Stale submissions discarded due to new blocks: %d",
            "Unable to get work from server occasions: %d",
            "Work items generated locally: %d",
            "Submitting work remotely delay occasions: %d",
            "New blocks detected on network: %d",
            "SOLVED %d BLOCK%s!",
            " Queued work requests: %d",
            " Share submissions: %d",
            " Accepted shares: %d",
            " Rejected shares: %d",
            " Accepted difficulty shares: %1.f",
            " Rejected difficulty shares: %1.f",
            " Reject ratio: %.1f%%",
            " Efficiency (accepted * difficulty / 2 KB): %.2f",
            " Discarded work due to new blocks: %d",
            " Stale submissions discarded due to new blocks: %d",
            " Unable to get work from server occasions: %d",
            " Submitting work remotely delay occasions: %d",
            "Summary of per device statistics:",
            "Mined %d accepted shares of %d requested",
            "WARNING - Mined only %d shares of %d requested.",
            "__BFGMINER_SEGFAULT_ERRQUIT",
            "Failed to malloc input",
            "Failed to malloc userpass",
            "%s:%s",
            "Input server details.",
            "Username",
            "Password",
            "r^|hT@/",
            "\u049eFailed to curl_global_init",
            "libusb_init() failed err %d",
            "libusb_init() failed",
            "Failed to pthread_cond_init lp_cond",
            "Failed to pthread_cond_init gws_cond",
            "%s %s",
            "2.99.0",
            "C:\\Program Files\\BFGMiner\\/bin",
            "main OOM",
            "Options for both config file and command line",
            "Options for command line only",
            "Unexpected extra commandline arguments",
            "Benchmark",
            "Started %s",
            "Loaded configuration file %s",
            "Fatal JSON error in configuration file.",
            "Configuration file could not be used.",
            "Error in configuration file, partially loaded.",
            "Start BFGMiner with -T to see what failed to load.",
            "Devices detected:",
            " %2d. %-6s: %s (driver: %s)",
            " %2d. %-6s (driver: %s)",
            "%d devices listed",
            "Command line options set a device that doesn't exist",
            "All devices disabled, cannot mine!",
            "Need to specify at least one pool server.",
            "Pool setup failed",
            "No login credentials supplied for pool %u %s",
            "Failed to calloc thr_info",
            "Failed to tq_new",
            "stage thread create failed",
            "Failed to create getq",
            "Probing for an alive pool",
            "Pool %d %s active",
            "Unable to get work from pool %d %s",
            "No servers were found that could be used to get work from.",
            "Please check the details from the list below of the servers you have input",
            "Most likely you have input the wrong URL, forgotten to add a port, or have not set up workers",
            "Pool: %d  URL: %s  User: %s  Password: %s",
            "Press any key to exit, or BFGMiner will try again in 15s.",
            "No servers could be used! Exiting.",
            "Detected scrypt algorithm",
            "thread %d create failed",
            "%d gpu miner threads started",
            "submit_work thread create failed",
            "watchpool thread create failed",
            "watchdog thread create failed",
            "tq_new failed for gpur_thr_id",
            "reinit_gpu thread create failed",
            "API thread create failed",
            "input thread create failed",
            "Pool %d not providing work fast enough",
            "Generated stratum work",
            "Generated work from latest GBT job in get_work_thread with %d seconds left",
            "Cloned getwork work",
            "Generated benchmark work",
            "Pool %d json_rpc_call failed on get work, retrying in 5s",
            "Pool %d json_rpc_call failed on get work, failover activated",
            "Generated getwork work",
            "vcI/",
            "?)\\(?(\\?Hz",
            "%s failure, attempting to reinitialize",
            "%s failure, disabling!",
            "work prepare failed, exiting mining thread %d",
            "%s: Work prepare failed, disabling!",
            "miner_%s",
            "Popping ping in miner thread",
            "Thread %d failure, exiting",
            "%s%2u",
            "%s%u",
            "?WTF MUTEX ERROR ON LOCK!",
            "WTF MUTEX ERROR ON UNLOCK!",
            "WTF WRLOCK ERROR ON LOCK!",
            "WTF RDLOCK ERROR ON LOCK!",
            "WTF RWLOCK ERROR ON UNLOCK!",
            "HTTP hdr(%s): %s",
            "X-Roll-Ntime",
            "X-Roll-Ntime: N found",
            "expire=",
            "X-Roll-Ntime expiry set to %d",
            "X-Long-Polling",
            "X-Reject-Reason",
            "X-Stratum",
            "Pool %u: %s",
            "JSON protocol request:",
            "Content-Length: %lu",
            "User-Agent: %s",
            "bfgminer 2.99.0",
            "Content-type: application/json",
            "X-Mining-Extensions: longpoll midstate rollntime submitold",
            "X-Minimum-Wait: 0",
            "X-Mining-Hashrate: %I64u",
            "Expect:",
            "Failed to get private curl data",
            "HTTP request failed: %s",
            "Empty data received in json_rpc_call.",
            "JSON decode failed(%d): %s",
            "JSON protocol response:",
            "result",
            "error",
            "(unknown reason)",
            "JSON-RPC call failed: %s",
            "reject-reason",
            "Failed to connect in json_rpc_call",
            "Malloc failure in absolute_uri",
            "%s%s%s",
            "Failed to calloc in bin2hex",
            "%02x",
            "hex2bin str truncated",
            "hex2bin sscanf '%s' failed",
            "YES (hash < target)",
            "no (false positive; hash > target)",
            " Proof: %s",
            "Target: %s",
            "TrgVal? %s",
            "%.*s",
            "SEND: %s",
            "Write select failed on pool %d sock",
            "Failed to curl_easy_send in stratum_send",
            "Stratum send failed due to no pool stratum_active",
            "Recallocing pool sockbuf to %lu",
            "Failed to realloc pool sockbuf in recalloc_sock",
            "Timed out waiting for data on socket_full",
            "Failed to recv sock in recv_line",
            "Failed to parse a \\n terminated string in recv_line",
            "RECVD: %s",
            "{\"params\": [\"%s\"], \"id\": \"txlist%s\", \"method\": \"mining.get_transactions\"}",
            "Received stratum notify from pool %u with job_id=%s",
            "job_id: %s",
            "prev_hash: %s",
            "coinbase1: %s",
            "coinbase2: %s",
            "merkle%d: %s",
            "bbversion: %s",
            "nbit: %s",
            "ntime: %s",
            "clean: %s",
            "Pool %d difficulty set to %f",
            "%s:%s",
            "Reconnect requested from pool %d to %s",
            "{\"id\": %d, \"result\": \"bfgminer/2.99.0\", \"error\": null}",
            "method",
            "params",
            "JSON-RPC method decode failed: %s",
            "mining.notify",
            "mining.set_difficulty",
            "client.reconnect",
            "client.get_version",
            "{\"id\": \"auth\", \"method\": \"mining.authorize\", \"params\": [\"%s\", \"%s\"]}",
            "JSON stratum auth failed: %s",
            "Stratum authorisation success for pool %d",
            "initiate_stratum with sockbuf=%p",
            "Failed to curl_easy_init in initiate_stratum",
            "Failed to calloc pool sockbuf in initiate_stratum",
            "http://%s:%s",
            "Stratum connect failed to pool %d: %s",
            "Stratum connect succeeded, but technical problem extracting socket (pool %u)",
            "{\"id\": %d, \"method\": \"mining.subscribe\", \"params\": []}",
            "Failed to send s in initiate_stratum",
            "Timed out waiting for response in initiate_stratum",
            "JSON-RPC decode failed: %s",
            "Failed to get nonce1 in initiate_stratum",
            "Failed to get n2size in initiate_stratum",
            "Pool %d confirmed mining.subscribe with extranonce1 %s extran2size %d",
            "Initiate stratum failed",
            "Closing socket for stratum pool %d",
            "q//////",
            "0,0E0^0",
            "Failed to malloc in realloc_strcat",
            "%s%s",
            "Failed to create listener socket in create_notifier: %s",
            "Failed to create connect socket in create_notifier: %s",
            "Failed to bind listener socket in create_notifier: %s",
            "Failed to getsockname in create_notifier: %s",
            "Failed to listen in create_notifier: %s",
            "Failed to connect in create_notifier: %s",
            "Failed to accept in create_notifier: %s",
            "Error #%ld",
            "WTF MUTEX ERROR ON LOCK!",
            "WTF MUTEX ERROR ON UNLOCK!",
            "Failed to pthread_mutex_init",
            "No error",
            "Interrupted system call",
            "Bad file number",
            "Permission denied",
            "Bad address",
            "Invalid argument",
            "Too many open sockets",
            "Operation would block",
            "Operation now in progress",
            "Operation already in progress",
            "Socket operation on non-socket",
            "Destination address required",
            "Message too long",
            "Protocol wrong type for socket",
            "Bad protocol option",
            "Protocol not supported",
            "Socket type not supported",
            "Operation not supported on socket",
            "Protocol family not supported",
            "Address family not supported",
            "Address already in use",
            "Can't assign requested address",
            "Network is down",
            "Network is unreachable",
            "Net connection reset",
            "Software caused connection abort",
            "Connection reset by peer",
            "No buffer space available",
            "Socket is already connected",
            "Socket is not connected",
            "Can't send after socket shutdown",
            "Too many references, can't splice",
            "Connection timed out",
            "Connection refused",
            "Too many levels of symbolic links",
            "File name too long",
            "Host is down",
            "No route to host",
            "Directory not empty",
            "Too many processes",
            "Too many users",
            "Disc quota exceeded",
            "Stale NFS file handle",
            "Too many levels of remote in path",
            "Network system is unavailable",
            "Winsock version out of range",
            "WSAStartup not yet called",
            "Graceful shutdown in progress",
            "Host not found",
            "No host data of that type was found",
            "Unknown error code",
            "Socket Error: (%d) %s",
            " - API will not be available",
            "Invalid --api-groups parameter",
            "|,1.24",
            "Dead",
            "Sick",
            "NoStart",
            "Initialising",
            "Waiting",
            "Disabled",
            "Alive",
            "Rejecting",
            "Unknown",
            "(null)",
            "true",
            "false",
            "scrypt",
            "sha256",
            "GPU BFL ICA XBS ZTX MMQ ",
            "Windows",
            "{command",
            "parameter",
            "Invalid GPU id %d - range is 0 - %d",
            "GPU %d already enabled",
            "GPU %d already disabled",
            "GPU %d must be restarted first",
            "GPU %d sent enable message",
            "No GPUs",
            "%d Pool(s)",
            "No pools",
            "%d GPU(s) - %d PGA(s)",
            "No GPUs/PGAs",
            "Summary",
            "GPU %d set disable flag",
            "GPU %d restart attempted",
            "Invalid command",
            "Missing device id parameter",
            "GPU%d",
            "No PGAs",
            "PGA%d",
            "Invalid PGA id %d - range is 0 - %d",
            "PGA %d already enabled",
            "PGA %d already disabled",
            "PGA %d sent enable message",
            "PGA %d set disable flag",
            "PGA %d is not flagged WELL, cannot enable",
            "GPU count",
            "PGA count",
            "CPU count",
            "BFGMiner versions",
            "Invalid JSON",
            "Missing JSON '%s'",
            "Missing pool id parameter",
            "Invalid pool id %d - range is 0 - %d",
            "Switching to pool %d:'%s'",
            "Missing comma after GPU number",
            "ADL is not available",
            "GPU %d does not have ADL",
            "Invalid intensity (%s) - must be 'D' or range -10 - 20",
            "GPU %d set new intensity to %s",
            "BFGMiner config",
            "Setting GPU %d memoryclock to (%s) reported failure",
            "Setting GPU %d memoryclock to (%s) reported success",
            "Setting GPU %d clock to (%s) reported failure",
            "Setting GPU %d clock to (%s) reported success",
            "Setting GPU %d vddc to (%s) reported failure",
            "Setting GPU %d vddc to (%s) reported success",
            "Setting GPU %d fan to (%s) reported failure",
            "Setting GPU %d fan to (%s) reported success",
            "Missing save filename parameter",
            "Can't open or create save file '%s'",
            "Configuration saved to file '%s'",
            "Access denied to '%s' command",
            "Privileged access OK",
            "Enabling pool %d:'%s'",
            "Changed pool priorities",
            "Duplicate pool specified %d",
            "Disabling pool %d:'%s'",
            "Pool %d:'%s' already enabled",
            "Pool %d:'%s' already disabled",
            "Cannot disable last active pool %d:'%s'",
            "Missing addpool details",
            "Invalid addpool details '%s'",
            "Reached maximum number of pools (%d)",
            "Added pool '%s'",
            "Cannot remove last pool %d:'%s'",
            "Cannot remove active pool %d:'%s'",
            "Removed pool %d:'%s'",
            "Notify",
            "Device Details",
            "BFGMiner stats",
            "Missing check cmd",
            "Check command",
            "Missing parameter: true/false",
            "Invalid parameter should be true or false",
            "Failover-Only set to %s",
            "BFGMiner coin",
            "Debug settings",
            "Identify command sent to PGA%d",
            "PGA%d does not support identify",
            "Set config '%s' to %d",
            "Unknown config '%s'",
            "Invalid number (%d) for '%s' range is 0-9999",
            "Missing config parameters 'name,N'",
            "Missing config value N for '%s,N'",
            "Missing option after PGA number",
            "PGA %d does not support pgaset",
            "PGA %d set help: %s",
            "PGA %d set OK",
            "PGA %d set failed: %s",
            "Missing zero parameters",
            "Invalid zero parameter '%s'",
            "Zeroed %s stats with summary",
            "Zeroed %s stats without summary",
            "Failed to malloc escape buf",
            "API: unknown1 data type %d ignored",
            "z7zazzzzz",
            "{:{zzc{zzc{zz{{",
            "%s%s%s%s",
            "%s%s%s",
            "%I64u",
            "%.0f",
            "%.2f",
            "%.3f",
            "%.4f",
            "%.15f",
            "%.8f",
            "%I64u.%06lu",
            "API: unknown2 data type %d ignored",
            "~{\"STATUS\":[",
            "STATUS",
            "When",
            "Code",
            "Description",
            " h,\"VERSION\":[",
            "VERSION,",
            "2.99.0",
            "CGMiner",
            ",\"CONFIG\":[",
            "CONFIG,",
            "GPU Count",
            "PGA Count",
            "CPU Count",
            "Pool Count",
            "ADL in use",
            "Strategy",
            "Log Interval",
            "Device Code",
            "Failover-Only",
            "ScanTime",
            "Queue",
            "Expiry",
            "Coinbase-Sig",
            "\u0113\u0353\u0593\u07d3Name",
            "ProcID",
            "Driver",
            "Kernel",
            "Model",
            "Device Path",
            "Enabled",
            "Status",
            "Temperature",
            "MHS av",
            "MHS %ds",
            "Accepted",
            "Rejected",
            "Hardware Errors",
            "Utility",
            "Last Share Pool",
            "Last Share Time",
            "Total MH",
            "Diff1 Work",
            "Difficulty Accepted",
            "Difficulty Rejected",
            "Last Share Difficulty",
            ",\"DEVS\":[",
            ",\"GPU\":[",
            ",\"PGA\":[",
            "API: request to pgaenable pgaid %d device %d %s",
            "API: request to pgadisable pgaid %d device %d %s",
            ",\"POOLS\":[",
            "POOL",
            "Priority",
            "Long Poll",
            "Getworks",
            "Discarded",
            "Stale",
            "Get Failures",
            "Remote Failures",
            "User",
            "Diff1 Shares",
            "Proxy",
            "Difficulty Stale",
            "Has Stratum",
            "Stratum Active",
            "Stratum URL",
            "Best Share",
            ",\"SUMMARY\":[",
            "SUMMARY,",
            "Elapsed",
            "Found Blocks",
            "Local Work",
            "Network Blocks",
            "Work Utility",
            "API: request to gpuenable gpuid %d %s",
            "API: request to gpudisable gpuid %d %s",
            ",\"GPUS\":[",
            "GPUS,",
            "Count",
            ",\"PGAS\":[",
            "PGAS,",
            ",\"CPUS\":[",
            "CPUS,",
            "Failed to malloc pooldetails buf",
            "{\"BYE\"",
            "{\"RESTART\"",
            "RESTART",
            "None",
            "Thread failed to init",
            "Thread got zero hashes",
            "Thread failed to queue work",
            "Device idle for 60s",
            "Device dead - idle for 600s",
            "Device failed to start",
            "Device over heated",
            "Device reached thermal cutoff",
            "Device comms error",
            "Unknown reason - code bug",
            "NOTIFY",
            "Last Well",
            "Last Not Well",
            "Reason Not Well",
            "*Thread Fail Init",
            "*Thread Zero Hash",
            "*Thread Fail Queue",
            "*Dev Sick Idle 60s",
            "*Dev Dead Idle 600s",
            "*Dev Nostart",
            "*Dev Over Heat",
            "*Dev Thermal Cutoff",
            "*Dev Comms Error",
            "*Dev Throttle",
            "/?O_o",
            ",\"NOTIFY\":[",
            ",\"DEVDETAILS\":[",
            "DEVDETAILS",
            "STATS",
            "Calls",
            "Wait",
            "Pool Calls",
            "Pool Attempts",
            "Pool Wait",
            "Pool Max",
            "Pool Min",
            "Pool Av",
            "Work Had Roll Time",
            "Work Can Roll",
            "Work Had Expire",
            "Work Roll Time",
            "Work Diff",
            "Min Diff",
            "Max Diff",
            "Min Diff Count",
            "Max Diff Count",
            "Times Sent",
            "Bytes Sent",
            "Times Recv",
            "Bytes Recv",
            "Net Bytes Sent",
            "Net Bytes Recv",
            ",\"STATS\":[",
            "POOL%d",
            ",\"COIN\":[",
            "COIN,",
            "Hash Method",
            "Current Block Time",
            "Current Block Hash",
            ",\"DEBUG\":[",
            "DEBUG,",
            "Silent",
            "Quiet",
            "Verbose",
            "Debug",
            "RPCProto",
            "PerDevice",
            "WorkTime",
            "a5coinbase-sig",
            "queue",
            "scantime",
            "expiry",
            "help",
            "bestshare",
            "BestShare",
            "version",
            "config",
            "devs",
            "devdetail",
            "pools",
            "summary",
            "gpuenable",
            "gpudisable",
            "gpurestart",
            "pgaenable",
            "pgadisable",
            "pgaidentify",
            "gpucount",
            "pgacount",
            "cpucount",
            "switchpool",
            "addpool",
            "poolpriority",
            "enablepool",
            "disablepool",
            "removepool",
            "gpuintensity",
            "gpumem",
            "gpuengine",
            "gpufan",
            "gpuvddc",
            "save",
            "quit",
            "privileged",
            "notify",
            "devdetails",
            "restart",
            "stats",
            "check",
            "failover-only",
            "coin",
            "debug",
            "setconfig",
            "pgaset",
            "zero",
            "|%s|",
            ",\"CHECK\":[",
            "CHECK,",
            "Exists",
            "Access",
            "API: send reply: (%d) '%.10s%s'",
            "API: send failed: %s",
            "API: sent %d",
            "Failed to malloc ipgroups buf",
            "API invalid group name '%s'",
            "API invalid group name '%c'",
            "API group name can't be '%c'",
            "API duplicate group name '%c'",
            "API unknown command '%s' in group '%c'",
            "Failed to malloc group commands buf",
            "Failed to malloc noprivgroup commands buf",
            "Failed to malloc ipaccess buf",
            "Failed to calloc ipaccess",
            "rpc_quit",
            "API: killing BFGMiner",
            "rpc_restart",
            "API: restarting BFGMiner",
            "127.0.0.1",
            "API not running%s",
            "API not running (no valid IPs specified)%s",
            "API1 initialisation failed (%s)%s",
            "API2 initialisation failed (%s)%s",
            "API bind to port %d failed - trying again in 30sec",
            "API bind to port %d failed (%s)%s",
            "API3 initialisation failed (%s)%s",
            "API running in IP access mode on port %d",
            "API running in UNRESTRICTED read access mode on port %d",
            "API running in local read access mode on port %d",
            "API failed (%s)%s",
            "Ignored",
            "API: connection from %s - %s",
            "API: recv failed: %s",
            "API: recv command: (%d) '%s'",
            "API: access denied to '%s' for '%s' command",
            "QUIT",
            "UNKNOWN!",
            "API: terminating due to: %s",
            "API failed to initiate a restart - aborting",
            "API failed to initiate a clean quit - aborting",
            "N@WTF MUTEX ERROR ON LOCK!",
            "WTF MUTEX ERROR ON UNLOCK!",
            "                    ",
            " [%d-%02d-%02d %02d:%02d:%02d] %s",
            "OpenCL.dll",
            "Failed to load OpenCL library, no GPUs usable",
            "clGetPlatformIDs",
            "Failed to load OpenCL symbol clGetPlatformIDs, no GPUs usable",
            "clGetPlatformInfo",
            "Failed to load OpenCL symbol clGetPlatformInfo, no GPUs usable",
            "clGetDeviceIDs",
            "Failed to load OpenCL symbol clGetDeviceIDs, no GPUs usable",
            "clGetDeviceInfo",
            "Failed to load OpenCL symbol clGetDeviceInfo, no GPUs usable",
            "clCreateContextFromType",
            "Failed to load OpenCL symbol clCreateContextFromType, no GPUs usable",
            "clReleaseContext",
            "Failed to load OpenCL symbol clReleaseContext, no GPUs usable",
            "clCreateCommandQueue",
            "Failed to load OpenCL symbol clCreateCommandQueue, no GPUs usable",
            "clReleaseCommandQueue",
            "Failed to load OpenCL symbol clReleaseCommandQueue, no GPUs usable",
            "clCreateBuffer",
            "Failed to load OpenCL symbol clCreateBuffer, no GPUs usable",
            "clCreateProgramWithSource",
            "Failed to load OpenCL symbol clCreateProgramWithSource, no GPUs usable",
            "clCreateProgramWithBinary",
            "Failed to load OpenCL symbol clCreateProgramWithBinary, no GPUs usable",
            "clReleaseProgram",
            "Failed to load OpenCL symbol clReleaseProgram, no GPUs usable",
            "clBuildProgram",
            "Failed to load OpenCL symbol clBuildProgram, no GPUs usable",
            "clGetProgramInfo",
            "Failed to load OpenCL symbol clGetProgramInfo, no GPUs usable",
            "clGetProgramBuildInfo",
            "Failed to load OpenCL symbol clGetProgramBuildInfo, no GPUs usable",
            "clCreateKernel",
            "Failed to load OpenCL symbol clCreateKernel, no GPUs usable",
            "clReleaseKernel",
            "Failed to load OpenCL symbol clReleaseKernel, no GPUs usable",
            "clSetKernelArg",
            "Failed to load OpenCL symbol clSetKernelArg, no GPUs usable",
            "clFinish",
            "Failed to load OpenCL symbol clFinish, no GPUs usable",
            "clEnqueueReadBuffer",
            "Failed to load OpenCL symbol clEnqueueReadBuffer, no GPUs usable",
            "clEnqueueWriteBuffer",
            "Failed to load OpenCL symbol clEnqueueWriteBuffer, no GPUs usable",
            "clEnqueueNDRangeKernel",
            "Failed to load OpenCL symbol clEnqueueNDRangeKernel, no GPUs usable",
            "Invalid parameters for set vector",
            "Invalid value passed to set_vector",
            "Invalid parameters for set work size",
            "Invalid value passed to set_worksize",
            "Invalid parameters for set lookup gap",
            "Invalid parameters for set thread concurrency",
            "diablo",
            "diakgcn",
            "poclbm",
            "phatk",
            "scrypt",
            "Cannot use sha256 kernel with scrypt",
            "Invalid parameters for set kernel",
            "Invalid parameter to set_kernel",
            "Invalid parameters for set gpu map",
            "%d:%d",
            "Invalid description for map pair",
            "Invalid value passed to set_gpu_map",
            "%d-%d",
            "Invalid parameters for set gpu engine",
            "Invalid value passed to set_gpu_engine",
            "Invalid parameters for set gpu fan",
            "Invalid value passed to set_gpu_fan",
            "Invalid parameters for set gpu memclock",
            "Invalid value passed to set_gpu_memclock",
            "Invalid parameters for set gpu memdiff",
            "Invalid value passed to set_gpu_memdiff",
            "Invalid parameters for set gpu powertune",
            "Invalid value passed to set_gpu_powertune",
            "Invalid parameters for set gpu vddc",
            "Invalid value passed to set_gpu_vddc",
            "Invalid parameters for set temp overheat",
            "Invalid value passed to set temp overheat",
            "Invalid parameters for set intensity",
            "Invalid value passed to set intensity",
            "opencl",
            "%i GPU devices max detected",
            "Disabling extra threads due to dynamic mode.",
            "Tune dynamic intensity with --gpu-dyninterval",
            "%s: %.1f / %.1f %sh/s | A:%d  R:%d  HW:%d  U:%.2f/m  I:%d",
            "%.1f C  ",
            "%d%% ",
            "(%d RPM) ",
            "E: %d MHz  ",
            "M: %d MHz  ",
            "V: %.3fV  ",
            "A: %d%%  ",
            "P: %d%%",
            "Last initialised: %s",
            "Intensity: ",
            "Dynamic (only one thread in use)",
            "Enabled",
            "Disabled",
            "Thread %d: %.1f %sh/s %s ",
            "ALIVE",
            "SICK reported in %s",
            "DEAD reported in %s",
            "Never started",
            " paused",
            "[C]hange settings",
            "[E]nable [D]isable [I]ntensity [R]estart GPU %s",
            "Or press any other key to continue",
            "Select GPU to enable",
            "Invalid selection",
            "Device already enabled",
            "Must restart device before enabling it",
            "Select GPU to disable",
            "Device already disabled",
            "Select GPU to change intensity on",
            "Set GPU scan intensity (d or -10 -> 20)",
            "Invalid input",
            "Dynamic mode enabled on gpu %d",
            "Intensity on gpu %d set to %d",
            "Select GPU to attempt to restart",
            "Attempting to restart threads of GPU %d",
            "Select GPU to change settings on",
            "reinit_gpu",
            "Hardware not reporting same number of active devices, will not attempt to restart GPU",
            "Thread %d still exists, killing it off",
            "Thread %d no longer exists",
            "Failed to tq_new in reinit_gpu",
            "Reinit GPU thread %d",
            "Failed to reinit GPU thread %d",
            "initCl() finished. Found %s",
            "thread %d create failed",
            "Thread %d restarted",
            "clDevicesNum returned error, no GPUs usable",
            "%5.1fC ",
            "       ",
            "%4dRPM ",
            "%3d%%    ",
            "        ",
            "               | ",
            "Fan Speed",
            "Fan Percent",
            "GPU Clock",
            "Memory Clock",
            "GPU Voltage",
            "GPU Activity",
            "Powertune",
            "Intensity",
            "Failed to calloc in opencl_thread_init",
            "Init GPU thread %i GPU %i virtual GPU %i",
            "Failed to init GPU thread %d, disabling device %d",
            "Restarting the GPU from the menu will not fix this.",
            "Try restarting BFGMiner.",
            "Press enter to continue",
            "IIkITI=IIError: clEnqueueWriteBuffer failed.",
            "Error: clSetKernelArg of all params failed.",
            "Error %d: Enqueueing kernel onto command queue. (clEnqueueNDRangeKernel)",
            "Error: clEnqueueReadBuffer failed error %d. (clEnqueueReadBuffer)",
            "GPU %d found something?",
            "Unable to open %s or %s for reading",
            "Error %d: clGetPlatformsIDs failed (no OpenCL SDK installed?)",
            "clGetPlatformsIDs returned no platforms (no OpenCL SDK installed?)",
            "Error %d: Getting Platform Ids. (clGetPlatformsIDs)",
            "Error %d: Getting Platform Info. (clGetPlatformInfo)",
            "CL Platform %d vendor: %s",
            "CL Platform %d name: %s",
            "CL Platform %d version: %s",
            "Error %d: Getting Device IDs (num)",
            "Platform %d devices: %d",
            "\t%i\t%s",
            "Marker \"%s\" not found",
            "Potential OP3 instructions identified: %i BFE_INT, %i BFE_UINT, %i BYTE_ALIGN",
            "Patched a total of %i BFI_INT instructions",
            "Error %d: Getting Platforms. (clGetPlatformsIDs)",
            "Specified platform that does not exist",
            "NULL platform found!",
            "CL Platform vendor: %s",
            "CL Platform name: %s",
            "CL Platform version: %s",
            "Error %d: Getting Device IDs (list)",
            "List of devices:",
            "Error %d: Getting Device Info",
            "Selected %i: %s",
            "Invalid GPU %i",
            "Error %d: Creating Context. (clCreateContextFromType)",
            "Error %d: Creating Command Queue. (clCreateCommandQueue)",
            "cl_amd_media_ops",
            "Error %d: Failed to clGetDeviceInfo when trying to get CL_DEVICE_EXTENSIONS",
            "OpenCL 1.0",
            "Error %d: Failed to clGetDeviceInfo when trying to get CL_DEVICE_VERSION",
            "Error %d: Failed to clGetDeviceInfo when trying to get CL_DEVICE_PREFERRED_VECTOR_WIDTH_INT",
            "Preferred vector width reported %d",
            "Error %d: Failed to clGetDeviceInfo when trying to get CL_DEVICE_MAX_WORK_GROUP_SIZE",
            "Max work group size reported %I64d",
            "Error %d: Failed to clGetDeviceInfo when trying to get CL_DEVICE_MAX_MEM_ALLOC_SIZE",
            "Max mem alloc size is %lu",
            "Selecting scrypt kernel",
            "Tahiti",
            "844.4",
            "851.4",
            "831.4",
            "898.1",
            "923.1",
            "938.2",
            "Selecting diablo kernel",
            "Selecting poclbm kernel",
            "Selecting phatk kernel",
            "WARNING: You have selected the phatk kernel.",
            "You are running SDK 2.6+ which performs poorly with this kernel.",
            "Downgrade your SDK and delete any .bin files before starting again.",
            "Or allow BFGMiner to automatically choose a more suitable kernel.",
            "poclbm121016.cl",
            "poclbm121016",
            "phatk121016.cl",
            "phatk121016",
            "diakgcn121016.cl",
            "diakgcn121016",
            "scrypt121016.cl",
            "scrypt121016",
            "diablo121016.cl",
            "diablo121016",
            "GPU %d: selecting lookup gap of 2",
            "GPU %u: selecting thread concurrency of %lu",
            "Max alloc decreased to %lu",
            "Unable to calloc binary_sizes",
            "Unable to calloc binaries",
            "lg%utc%u",
            "No binary found, generating from source",
            "Unable to stat binary, generating from source",
            "Unable to fread binaries",
            "Error %d: Loading Binary into cl_program (clCreateProgramWithBinary)",
            "Loaded binary image %s",
            "Error %d: Loading Binary into cl_program (clCreateProgramWithSource)",
            "-D LOOKUP_GAP=%d -D CONCURRENT_THREADS=%d -D WORKSIZE=%d",
            "-D WORKSIZE=%d -D VECTORS%d -D WORKVEC=%d",
            "Setting worksize to %I64d",
            "Patched source to suit %d vectors",
            "cl_amd_media_ops found, setting BITALIGN",
            "Cedar",
            "Redwood",
            "Juniper",
            "Cypress",
            "Hemlock",
            "Caicos",
            "Turks",
            "Barts",
            "Cayman",
            "Antilles",
            "Wrestler",
            "Zacate",
            "WinterPark",
            "cl_amd_media_ops not found, will not set BITALIGN",
            "BFI_INT patch requiring device found, patched source with BFI_INT",
            "BFI_INT patch requiring device not found, will not BFI_INT patch",
            "CompilerOptions: %s",
            "Error %d: Building Program (clBuildProgram)",
            "Error %d: Getting program info CL_PROGRAM_NUM_DEVICES. (clGetProgramInfo)",
            "Error %d: Getting program info CL_PROGRAM_BINARY_SIZES. (clGetProgramInfo)",
            "Binary size for gpu %u found in binary slot %u: %I64d",
            "OpenCL compiler generated a zero sized binary, FAIL!",
            "Error %d: Getting program info. CL_PROGRAM_BINARIES (clGetProgramInfo)",
            ".text",
            "At %p (%u rem. bytes), to begin patching",
            "Error %d: Releasing program. (clReleaseProgram)",
            "Unable to create file %s",
            "Unable to fwrite to binaryfile",
            "Initialising kernel %s with%s bitalign, %I64d vectors and worksize %I64u",
            "search",
            "Error %d: Creating Kernel from program. (clCreateKernel)",
            "Maximum buffer memory device %d supports says %lu",
            "Your scrypt settings come to %lu",
            "Creating scrypt buffer sized %ld",
            "Error %d: clCreateBuffer (padbuffer8), decrease CT or increase LG",
            "Error %d: clCreateBuffer (CLbuffer0)",
            "Error %d: clCreateBuffer (outputBuffer)",
            "XXSX",
            "/BD7q\u06f5[V9",
            "Ut]r\u0780",
            "\u071btiG\u019d",
            "$o,-tJ\u0729\\\u0688vRQ>m1'",
            ".m,M",
            "8STs",
            ",r\u8fe2Kf",
            "LwH'4",
            "9JNO\u029c[o.h\ue08ftocx",
            "\u01cclPxqpostcalchsh",
            "%s: invalid nonce count - HW error",
            "OCL NONCE %u found in slot %d",
            "Failed to malloc pc_data in postcalc_hash_async",
            "Failed to create postcalc_hash thread",
            "WTF MUTEX ERROR ON LOCK!",
            "WTF MUTEX ERROR ON UNLOCK!",
            "atiadlxx.dll",
            "atiadlxy.dll",
            "Unable to load ati adl library",
            "ADL_Main_Control_Create",
            "ADL_Main_Control_Destroy",
            "ADL_Adapter_NumberOfAdapters_Get",
            "ADL_Adapter_AdapterInfo_Get",
            "ADL_Adapter_ID_Get",
            "ADL_Overdrive5_Temperature_Get",
            "ADL_Overdrive5_CurrentActivity_Get",
            "ADL_Overdrive5_ODParameters_Get",
            "ADL_Overdrive5_FanSpeedInfo_Get",
            "ADL_Overdrive5_FanSpeed_Get",
            "ADL_Overdrive5_FanSpeed_Set",
            "ADL_Overdrive5_ODPerformanceLevels_Get",
            "ADL_Overdrive5_ODPerformanceLevels_Set",
            "ADL_Main_Control_Refresh",
            "ADL_Overdrive5_PowerControl_Get",
            "ADL_Overdrive5_PowerControl_Set",
            "ADL_Overdrive5_FanSpeedToDefault_Set",
            "ATI ADL's API is missing",
            "ADL Initialisation Error! Error %d!",
            "ADL Refresh Error! Error %d!",
            "Failed to init adl_lock in init_adl",
            "Cannot get the number of adapters! Error %d!",
            "ADL_Adapter_AdapterInfo_Get Error! Error %d",
            "No adapters found",
            "Failed to ADL_Adapter_ID_Get. Error %d",
            "This error says the device is not enabled",
            "GPU %d iAdapterIndex %d strUDID %s iBusNumber %d iDeviceNumber %d iFunctionNumber %d iVendorID %d strAdapterName  %s ",
            "ADL found more devices than opencl!",
            "There is possibly at least one GPU that doesn't support OpenCL",
            "Use the gpu map feature to reliably map OpenCL to ADL",
            "Adapter returns ID 0 meaning not AMD. Card order might be confused",
            "ADL found less devices than opencl!",
            "There is possibly more than one display attached to a GPU",
            "Mapping OpenCL device %d to ADL device %d",
            "WARNING: Number of OpenCL and ADL devices did not match!",
            "Hardware monitoring may NOT match up with devices!",
            "Mapping device %d to GPU %d according to Bus Number order",
            "GPU %d %s hardware monitoring enabled",
            "Failed to ADL_Overdrive5_ODParameters_Get",
            "Failed to ADL_Overdrive5_ODPerformanceLevels_Get",
            "Setting GPU %d engine clock to %d",
            "Setting GPU %d memory clock to %d",
            "Setting GPU %d voltage to %.3f",
            "Failed to ADL_Overdrive5_FanSpeedInfo_Get",
            "Failed to ADL_Overdrive5_PowerControl_get",
            "Dual GPUs detected: %d and %d",
            "Get enginerange not supported",
            "Set engineclock not supported",
            "Get memoryrange not supported",
            "Set memoryclock not supported",
            "Get vddcrange not supported",
            "Set vddc not supported",
            "Get fanrange not supported",
            "Set fanspeed not supported",
            "GPU %d doesn't support rpm or percent write",
            "GPU %d call to fanspeed get failed",
            "Set powertune not supported",
            "Overheat detected on GPU %d, increasing fan to 100%%",
            "Temperature over target, increasing fanspeed",
            "Temperature %d degrees below target, decreasing fanspeed",
            "Temperature climbed %d while below target, increasing fanspeed",
            "Temperature dropping while in target range, decreasing fanspeed",
            "Temperature rising while in target range, increasing fanspeed",
            "Setting GPU %d fan percentage to %d",
            "Overheat detected, decreasing GPU %d clock speed",
            "Temperature %d degrees over target, decreasing clock speed",
            "Temperature below target, increasing clock speed",
            "Target temperature: %d",
            "Overheat temperature: %d",
            "Cutoff temperature: %d",
            "Toggle [F]an auto [G]PU auto",
            "Change [T]arget [O]verheat [C]utoff",
            "Or press any other key to continue",
            "enabled",
            "disabled",
            "Fan autotune is now %s",
            "Resetting fan to startup settings",
            "GPU engine clock autotune is now %s",
            "Resetting GPU engine clock to startup settings",
            "Enter target temperature for this GPU in C (0-200)",
            "Invalid temperature",
            "Enter overheat temperature for this GPU in C (%d+)",
            "Enter cutoff temperature for this GPU in C (%d+)",
            "Temp: %.1f C",
            "Fan Speed: ",
            "%d%% ",
            "(%d RPM)",
            "Engine Clock: %d MHz",
            "Memory Clock: %d MHz",
            "Vddc: %.3f V",
            "Activity: %d%%",
            "Powertune: %d%%",
            "Fan autotune is %s (%d-%d)",
            "GPU engine clock autotune is %s (%d-%d)",
            "Change [A]utomatic [E]ngine [F]an [M]emory [V]oltage [P]owertune",
            "Enter GPU engine clock speed (%d - %d MHz)",
            "Value is outside safe range, are you sure?",
            "Driver reports success but check values below",
            "Failed to modify engine clock speed",
            "Enter fan percentage (%d - %d %)",
            "Failed to modify fan speed",
            "Enter GPU memory clock speed (%d - %d MHz)",
            "Failed to modify memory clock speed",
            "Enter GPU voltage (%.3f - %.3f V)",
            "Failed to modify voltage",
            "Enter powertune value (-20 - 20)",
            "Failed to modify powertune value",
            "Failed to malloc scratchbuf in scanhash_scrypt",
            "FTD2XX.DLL",
            "FTD2XX.DLL failed to load, not using FTDI autodetect",
            "FT_ListDevices",
            "Failed to load FT_ListDevices, not using FTDI autodetect",
            "FT_Open",
            "Failed to load FT_Open, not using FTDI autodetect",
            "FT_GetComPortNumber",
            "Failed to load FT_GetComPortNumber, not using FTDI autodetect",
            "FT_Close",
            "Failed to load FT_Close, not using FTDI autodetect",
            "FTDI device count failed, not using FTDI autodetect",
            "FTDI reports %u devices",
            "FTDI device list failed, not using FTDI autodetect",
            "auto",
            "noauto",
            "%s is already claimed... skipping probes",
            "mYE4 ",
            "Do not have user privileges required to open %s",
            "%s is already in use by another process",
            "Open %s failed, GetLastError:%u",
            "../share/bfgminer",
            "bitstreams",
            "%s: Error opening firmware file %s",
            "%s: Error reading firmware (magic)",
            "%s: Firmware has wrong magic (9)",
            "%s: Firmware seek failed",
            "%s: Error reading firmware ('%c')",
            "%s: Firmware has wrong magic ('%c')",
            "%s: Error reading firmware (design name len)",
            "%s: Firmware design name too long",
            "%s: Error reading firmware (design name)",
            "%s: Firmware file %s info:",
            "  Design name: %s",
            "%s: Bad usercode in firmware file",
            "%s: Firmware doesn't support user code",
            "  Version: %u, build %u",
            "%s: Error reading firmware (part number len)",
            "%s: Firmware part number too long",
            "%s: Error reading firmware (part number)",
            "  Part number: %s",
            "%s: Error reading firmware (build date len)",
            "%s: Firmware build date too long",
            "%s: Error reading firmware (build date)",
            "  Build date: %s",
            "%s: Error reading firmware (build time len)",
            "%s: Firmware build time too long",
            "%s: Error reading firmware (build time)",
            "  Build time: %s",
            "%s: Error reading firmware (data len)",
            "  Bitstream size: %lu",
            "dropped",
            "raised ",
            "%s: Frequency %s from %u to %u MHz%s",
            "%s: frequency drop of %.1f%% detect. This may be caused by overheating. FPGA is shut down to prevent damage.",
            "Y@333333?\u05e3p=",
            "Gz?WTF MUTEX ERROR ON LOCK!",
            "WTF MUTEX ERROR ON UNLOCK!",
            "Failed to pthread_mutex_init",
            "full work",
            "nonce range",
            "work queue",
            "bitforce",
            "BFL: Attempting to open %s",
            "BFL: Failed to open %s",
            "BFL: Error reading/timeout (ZGX)",
            "SHA256",
            "BFL: Didn't recognise BitForce on %s",
            "Found BitForce device on %s",
            "  %s",
            "DEVICES IN CHAIN:",
            "DEVICE:",
            ">>>ID: ",
            "BitFORCE",
            "%s: Comms error",
            "%s: Error reopening %s",
            "%5.1fC ",
            "       ",
            "        | ",
            "%s: Failed to open %s",
            "%s: Opened %s",
            "%s: Clearing read buffer",
            "%s: Re-initialising",
            "%s: Error reading/timeout (ZGX)",
            "BUSY",
            "%s: Didn't recognise BitForce on %s returned: %s",
            "%s: Error: Get temp returned empty string/timed out",
            "TEMP",
            "%s: Garbled response probably throttling, clearing buffer",
            "%s: block data: %s",
            "%s: Does not support work queue, disabling",
            "%s: Does not support nonce range, disabling",
            "%s: Error: Send work reports: %s",
            "COUNT:",
            "%s: Ran out of buffer space for results, discarding extra data",
            "%s: took %lums - longer than %lums",
            "%s: waited %dms until %s",
            "%s: Abandoning stale search to restart",
            "NONCE-FOUND",
            "%s: Wait time changed to: %d, waited %u",
            "%s: Error: Get result reports: %s",
            "%s: Disabling broken nonce range support",
            "%s: Failed to find work for queued results",
            "%s: Delaying start by %dms",
            "Sleep Time",
            "Avg Wait",
            "%s: Unexpected poll from device API!",
            "?default",
            "short",
            "long",
            "value",
            "unknown",
            "icarus",
            "Icarus Read: No data in %.2f seconds",
            "Icarus Read: Work restart at %.2f seconds",
            "%s: Init: mode=%s read_count=%d Hs=%e",
            "Invalid2 icarus-options for work_division (%d) must be 1, 2, 4 or 8",
            "Invalid icarus-options for baud (%s) must be 115200 or 57600",
            "Invalid icarus-options for work_division (%s) must be 1, 2, 4 or 8",
            "Invalid icarus-options for fpga_count (%s) must be >0 and <=work_division (%d)",
            "Icarus Detect: Attempting to open %s",
            "Icarus Detect: Failed to open %s",
            "Icarus Detect: Test failed at %s: get %s, should: %s",
            "Icarus Detect: Test succeeded at %s: got %s",
            "Icarus device %s already claimed by other driver: %s",
            "Found %s at %s",
            "%s: Init: baud=%d work_division=%d fpga_count=%d",
            "4679ba4ec99876bf4bfe086082b400254df6c356451471139a3afa71e48f544a000000000000000000000000000000000000000087320b1a1426674f2fa722ce",
            "Failed to malloc ICARUS_INFO",
            "Failed to open Icarus on %s",
            "Opened Icarus on %s",
            "%s: Failed to reopen on %s",
            "ICA%i: Comms error",
            "%s sent: %s",
            "%s: Received job attempting to send a command, corrupting it!",
            "%s no nonce = 0x%08I64x hashes (%I64d.%06lus)",
            "%s nonce = 0x%08x = 0x%08I64x hashes (%I64d.%06lus)",
            "%s: Autodetect device speed: %d MH/s",
            "fast",
            "slow",
            "%s: Seems too %s to be an Icarus; calibrating with short timing",
            "%s: Seems to be a real Icarus",
            "%s: Detected Cairnsmore1 device, upgrading driver to %s",
            "%s Re-estimate: Hs=%e W=%e read_count=%d fullnonce=%.3fs",
            "read_count",
            "fullnonce",
            "count",
            "total_values",
            "range",
            "history_count",
            "history_time",
            "min_data_count",
            "timing_values",
            "timing_mode",
            "is_timing",
            "baud",
            "work_division",
            "fpga_count",
            "Failed to malloc ICARUS_INFO",
            "Cairnsmore1",
            "bfg0",
            "Cairnsmore dynclock detection... Got %08x",
            "Unexpected nonce from dynclock probe: %08x",
            "%s: Frequency set to %u MHz (range: %u-%u)",
            "%s: Frequency scaling not supported",
            "Frequency",
            "cairnsmore",
            "WTF MUTEX ERROR ON LOCK!",
            "WTF MUTEX ERROR ON UNLOCK!",
            "Failed to pthread_mutex_init",
            "modminer",
            "ModMiner detect: failed to open %s",
            "ModMiner detect: write failed on %s (get version)",
            "ModMiner detect: no response to version request from %s",
            "ModMiner identified as: %s",
            "ModMiner detect: write failed on %s (get FPGA count)",
            "ModMiner detect: timeout waiting for FPGA count from %s",
            "ModMiner detect: zero FPGAs reported on %s",
            "ModMiner %s has %u FPGAs",
            "ModMiner",
            "BTCFPGA",
            "%s: Failed to reopen %s",
            "fpgaminer_x6500-overclocker-0402.bit",
            "%s: Programming %s... DO NOT EXIT UNTIL COMPLETE",
            "%s: Error programming %s (cmd)",
            "%s: Error programming %s (cmd reply)",
            "%s: Wrong cmd reply programming %s",
            "%s: File underrun programming %s (%d bytes left)",
            "%s: Error programming %s (data)",
            "%s: Programming %s... %d%% complete...",
            "%s: Error programming %s (status)",
            "%s: Wrong status programming %s",
            "%s: Error programming %s (final status)",
            "%s: Wrong final status programming %s",
            "%s: Done programming %s",
            "%s: Failed to open %s",
            "%s: Opened %s",
            "%s: Error writing (set frequency)",
            "%s: Error reading (set frequency)",
            "%s: Error writing (get nonce)",
            "%s: Short read (get nonce)",
            "%s: Error writing (read USER code)",
            "%s: Error reading (read USER code)",
            "%s: FPGA not programmed",
            "%s: FPGA is already programmed, but --force-dev-init is set",
            "%s: FPGA is already programmed :)",
            "%s: Hit minimum trying to find acceptable frequencies",
            "%s: Error detecting acceptable frequencies",
            "%s: Failed to set desired initial frequency of %u",
            "%s: Frequency set to %u MHz (range: %u-%u)",
            "%3d%%",
            "%5.1fC ",
            "       ",
            "        | ",
            "dropped",
            "raised ",
            "%s: Frequency %s from %u to %u MHz (temp: %d)",
            "Temperature",
            "Frequency",
            "Cool Max Frequency",
            "Max Frequency",
            "Hardware Errors",
            "Valid Nonces",
            "%s: Error writing (start work)",
            "%s: Error programming %s (start work)",
            "%s: Wrong start work programming %s",
            "%s: Started work: %s",
            "%s: Nonce for current  work: %02x%02x%02x%02x",
            "%s: Nonce for previous work: %02x%02x%02x%02x",
            "%s: Nonce with H not zero  : %02x%02x%02x%02x",
            "%s: Finished work before new one sent",
            "help",
            "clock: range %d-%d and a multiple of 2",
            "clock",
            "missing clock setting",
            "invalid clock: '%s' valid range %d-%d and a multiple of 2",
            "Set clock failed: %s",
            " on user request",
            "Unknown option: %s",
            "WTF MUTEX ERROR ON LOCK!",
            "WTF MUTEX ERROR ON UNLOCK!",
            "Failed to pthread_mutex_init",
            "x6500",
            "X6500 FPGA Miner",
            "fpgaminer_x6500-overclocker-0402.bit",
            "%s: Programming %s...",
            "%s%c: JPROGRAM ready",
            "%s: File underrun programming %s (%lu bytes left)",
            "%s: Programming %s... %d%% complete...",
            "%s: Done programming %s",
            "%s: JTAG reset failed",
            "%s: JTAG detect returned %d",
            "%s: JTAG error reading user code",
            "@ $B",
            "%-6s: FPGA not programmed",
            "%-6s: FPGA is already programmed, but --force-dev-init is set",
            "%s-6s: FPGA is already programmed :)",
            "%-6s: Flushed %d nonces from buffer at init",
            "%-6s: Frequency set to %u MHz (range: %u-%u)",
            "x6500_get_temperature: fpga[%d]->temp=%.1fC",
            "%-6s: Frequency dropped from %u to %u MHz (temp: %.1fC)",
            "%3d%%",
            "%.1fC",
            "%.1fC/%.1fC",
            "Temperature",
            "Frequency",
            "Cool Max Frequency",
            "Max Frequency",
            "%-6s: Started work: %s",
            "%-6s: Nonce for current  work: %08lx",
            "%-6s: Nonce for PREVIOUS work: %08lx",
            "%-6s: Nonce with H not zero  : %08lx",
            "ft232r_scan: Error getting USB device list: %s",
            "ft232r_scan: Error getting device descriptor: %s",
            "ft232r_scan: Found %04x:%04x - not a ft232r",
            "ft232r_scan: Error opening device: %s",
            "ft232r_scan: Error getting iProduct string: %s",
            "ft232r_scan: Error getting iSerialNumber string: %s",
            "ft232r_scan: Found \"%s\" serial \"%s\"",
            "ft232r_open: Error opening device",
            "ft232r_open: Error setting configuration",
            "ft232r_open: Error claiming interface",
            "ft232r_open: Error performing control transfer",
            "ft232r_open: Error getting config descriptor",
            "ft232r_open: Too few endpoints",
            "ft232r_read: %I64u bytes extra",
            "jtag_clock: request for tdo in async mode not possible",
            "WTF MUTEX ERROR ON LOCK!",
            "WTF MUTEX ERROR ON UNLOCK!",
            "ztex",
            "%s: Found Ztex (ZTEX %s)",
            "Found %d ztex board%s",
            "%s: checkNonce failed for %08x",
            "%s: Failed to send hash data with err %d, retrying",
            "%s: Failed to send hash data with err %d, giving up",
            "%s: sent hashdata",
            "%s: failed to allocate lastnonce[%d]",
            "%s: failed to allocate backlog[%d]",
            "%s: entering poll loop",
            "%s: New work detected",
            "%s: Failed to read hash data with err %d, retrying",
            "%s: Failed to read hash data with err %d, giving up",
            "%s: overflow nonce=%08x lastnonce=%08x",
            "%s: submitted %08x (from N%dE%d)",
            "%s: exit %1.8X",
            "%s| ",
            "Frequency",
            "%s-%u",
            "%s: Disabling!",
            "%s: prepare",
            "%s: shutdown",
            "%s: Failed to read LANGIDs: %s",
            "%s: Failed to read string descriptor: %s",
            "Ztex reset %d failed: %s",
            "Ztex check device: Failed to open read descriptor with error %d",
            "Not a ZTEX device %04x:%04x",
            "%s: Can not open ZTEX device: %s",
            "Ztex check device: Failed to read ztex descriptor with err %d",
            "Ztex check device: Error reading ztex descriptor",
            "Found ztex board 1.15d or 1.15x",
            "Found ztex board 1.15y",
            "Found unknown ztex board",
            "Found dummy firmware, trying to send mining firmware",
            "Ztex check device: Failed to read device productString with err %d",
            "productString: %s",
            "USB-FPGA Module 1.15d (default)",
            "ztex_ufm1_15d4.bin",
            "USB-FPGA Module 1.15x (default)",
            "USB-FPGA Module 1.15y (default)",
            "ztex_ufm1_15y1.bin",
            "could not figure out which firmware to use",
            "Mining firmware filename: %s",
            "ztex",
            "failed to open firmware file '%s'",
            "Ztex firmware fseek: %s",
            "%s: Can not allocate memory: %s",
            "%s: Incomplete firmware read: %I64u/%I64u",
            "%s: found firmware is not ZTEX",
            "%s: found a ZTEX dummy firmware",
            "Ztex device: Failed to write firmware at %d with: %s",
            "Ztex device: succesfully wrote firmware",
            "%s: capability missing: %d %d",
            "Unable to determine bitstream bit order: no signature found",
            "%s: Failed getFpgaState with err %d",
            "Bitstream already configured",
            "%s: Failed getHSFpgaSettings with err %d",
            "%s: failed to claim interface for hs transfer",
            "%s: failed to read bitstream '%s'",
            "%s: cnt != length",
            "%s: Failed send hs fpga data",
            "%s: HS FPGA configuration failed: DONE pin does not go high",
            "%s: HS FPGA configuration done",
            "%s: Failed reset fpga with err %d",
            "%s: Failed send ls fpga data",
            "%s: LS FPGA configuration failed: DONE pin does not go high",
            "%s: FPGA configuration done",
            "%s: Failed getMultiFpgaInfo with err %d",
            "%s: Trying to select wrong fpga (%d in %d)",
            "Ztex check device: Failed to set fpga with err %d",
            "Ztex check device: Failed to set frequency with err %d",
            "%s: Frequency set to %u MHz (range: %u-%u)",
            "Ztex check device: Failed to read device snString with err %d",
            "Invalid BTCMiner descriptor version. Firmware must be updated (%d).",
            "Firmware out of date (%d).",
            "Invalid bitstream file name .",
            "PID: %d numNonces: %d offsNonces: %d freqM1: %f freqMaxM: %d freqM: %d suspendSupported: %s hashesPerClock: %f extraSolutions: %d",
            "ztex_ufm1_15b",
            "HASHES_PER_CLOCK not defined, assuming %0.2f",
            "ZTEX %s-1",
            "Ztex scan devices: Failed to list usb devices with err %I64d",
            "Ztex: Can not check device: %s",
            "Ztex scan devices: Failed to allocate memory",
            "%s: Can not allocate memory for device struct: %s",
            "prepare device: %d",
            "%s: Can not allocate memory for device: %s",
            "%s: Failed sendHashData with err %d",
            "%s: Failed to allocate memory for reading nonces",
            "%s: Failed readHashData with err %d",
            "libztex_scanDevices",
            "libztex_prepare_device",
            "libztex_checkDevice",
            "libztex_get_string_descriptor_ascii",
            "Usage: %s",
            " <arg>",
            "%.*s",
            "                    ",
            " (default: %s)",
            "Option %s: unknown entry type %u",
            "Option %s: description cannot be NULL",
            "Option %s: does not begin with '-'",
            "Option %s: invalid long option '--'",
            "Option %s: invalid short option '%.*s'",
            "Option %s: does not take arguments '%s'",
            "Invalid argument '%s'",
            "true",
            "false",
            "value '%s' does not fit into an integer",
            "'%s' is not a number",
            "'%s' is out of range",
            "'%s' is negative",
            "%.1f",
            "%s: %.*s: %s",
            "POSIXLY_CORRECT",
            "opt/parse.c",
            "*offset == 0",
            "unrecognized option",
            "doesn't allow an argument",
            "requires an argument",
            ".pdata",
            "Argument domain error (DOMAIN)",
            "Argument singularity (SIGN)",
            "Overflow range error (OVERFLOW)",
            "Partial loss of significance (PLOSS)",
            "Total loss of significance (TLOSS)",
            "The result is too small to be represented (UNDERFLOW)",
            "Unknown error",
            "_matherr(): %s in %s(%g, %g)  (retval=%g)",
            "kJJJ",
            "K,KJMingw-w64 runtime failure:",
            "Address %p has no image-section",
            "  VirtualQuery failed for %d bytes at address %p",
            "  VirtualProtect failed with code 0x%x",
            "  Unknown pseudo relocation protocol version %d.",
            "  Unknown pseudo relocation bit size %d.",
            "Assertion failed!",
            "Program: %s",
            "File: %s, Line %u",
            "Expression: %s",
            "MinGW Runtime Assertion",
            "g!gfff",
            "inity",
            "o1o1o1o1o1o1o1o1oppppp1o1o1o1o1o1o1o1o1o1o1o1o1o1o1o1o1o1op1o1o1o1o1o1o1o1o1o1op1oo",
            "vH7B",
            "7yAC",
            "\u0605W4vC",
            "NgmC",
            "=`XC@x",
            "\u0617\u049c<3#I9=D",
            "[%Cod(",
            "7yAC",
            "O8M2",
            "0HwZ<s",
            "ABCDEF",
            "abcdef",
            "0123456789",
            "CreateFileA",
            "DeleteCriticalSection",
            "EnterCriticalSection",
            "FormatMessageA",
            "FreeLibrary",
            "GetConsoleScreenBufferInfo",
            "GetCurrentProcess",
            "GetCurrentProcessId",
            "GetCurrentThreadId",
            "GetLastError",
            "GetModuleFileNameA",
            "GetModuleHandleA",
            "GetProcAddress",
            "GetStartupInfoA",
            "GetStdHandle",
            "GetSystemTimeAsFileTime",
            "GetTickCount",
            "GetTimeZoneInformation",
            "InitializeCriticalSection",
            "LeaveCriticalSection",
            "LoadLibraryA",
            "LoadLibraryW",
            "LocalAlloc",
            "LocalFree",
            "PurgeComm",
            "QueryDosDeviceA",
            "QueryPerformanceCounter",
            "RtlAddFunctionTable",
            "RtlCaptureContext",
            "RtlLookupFunctionEntry",
            "RtlVirtualUnwind",
            "SetCommConfig",
            "SetCommTimeouts",
            "SetConsoleCursorPosition",
            "SetUnhandledExceptionFilter",
            "Sleep",
            "SleepEx",
            "TerminateProcess",
            "TlsGetValue",
            "UnhandledExceptionFilter",
            "VirtualProtect",
            "VirtualQuery",
            "_access",
            "_close",
            "_execv",
            "_fdopen",
            "_fileno",
            "_isatty",
            "_read",
            "_strdup",
            "_write",
            "__C_specific_handler",
            "__dllonexit",
            "__getmainargs",
            "__initenv",
            "__iob_func",
            "__lconv_init",
            "__set_app_type",
            "__setusermatherr",
            "_acmdln",
            "_amsg_exit",
            "_cexit",
            "_errno",
            "_exit",
            "_fmode",
            "_initterm",
            "_localtime64",
            "_lock",
            "_onexit",
            "_open_osfhandle",
            "_stat64",
            "_stricmp",
            "_strnicmp",
            "_time64",
            "_unlock",
            "_vsnprintf",
            "abort",
            "atof",
            "atoi",
            "calloc",
            "ceil",
            "exit",
            "fclose",
            "feof",
            "fflush",
            "floor",
            "fopen",
            "fprintf",
            "fputc",
            "fputs",
            "fread",
            "free",
            "fseek",
            "ftell",
            "fwrite",
            "getenv",
            "isalpha",
            "islower",
            "isspace",
            "isupper",
            "ldiv",
            "localeconv",
            "log10",
            "malloc",
            "mbstowcs",
            "memcmp",
            "memcpy",
            "memmove",
            "memset",
            "perror",
            "printf",
            "puts",
            "raise",
            "rand",
            "realloc",
            "rewind",
            "setlocale",
            "signal",
            "sprintf",
            "srand",
            "sscanf",
            "strcat",
            "strchr",
            "strcmp",
            "strcpy",
            "strcspn",
            "strerror",
            "strlen",
            "strncat",
            "strncmp",
            "strncpy",
            "strpbrk",
            "strrchr",
            "strspn",
            "strstr",
            "strtok",
            "strtol",
            "tolower",
            "toupper",
            "vfprintf",
            "vprintf",
            "vsprintf",
            "wcstombs",
            "MessageBoxA",
            "WSAGetLastError",
            "WSAIoctl",
            "__WSAFDIsSet",
            "accept",
            "bind",
            "closesocket",
            "connect",
            "getsockname",
            "htonl",
            "htons",
            "inet_addr",
            "inet_ntoa",
            "listen",
            "recv",
            "select",
            "send",
            "setsockopt",
            "shutdown",
            "socket",
            "curl_easy_cleanup",
            "curl_easy_getinfo",
            "curl_easy_init",
            "curl_easy_perform",
            "curl_easy_reset",
            "curl_easy_setopt",
            "curl_global_cleanup",
            "curl_global_init",
            "curl_multi_add_handle",
            "curl_multi_cleanup",
            "curl_multi_fdset",
            "curl_multi_info_read",
            "curl_multi_init",
            "curl_multi_perform",
            "curl_multi_remove_handle",
            "curl_multi_setopt",
            "curl_slist_append",
            "curl_slist_free_all",
            "curl_version_info",
            "json_array",
            "json_array_append_new",
            "json_array_get",
            "json_array_size",
            "json_deep_copy",
            "json_delete",
            "json_dumps",
            "json_integer_value",
            "json_load_file",
            "json_loadb",
            "json_loads",
            "json_number_value",
            "json_object",
            "json_object_get",
            "json_object_set_new",
            "json_real_value",
            "json_string",
            "json_string_value",
            "pthread_cancel",
            "pthread_cond_broadcast",
            "pthread_cond_destroy",
            "pthread_cond_init",
            "pthread_cond_signal",
            "pthread_cond_timedwait",
            "pthread_cond_wait",
            "pthread_create",
            "pthread_detach",
            "pthread_mutex_destroy",
            "pthread_mutex_init",
            "pthread_mutex_lock",
            "pthread_mutex_trylock",
            "pthread_mutex_unlock",
            "pthread_rwlock_init",
            "pthread_rwlock_rdlock",
            "pthread_rwlock_unlock",
            "pthread_rwlock_wrlock",
            "pthread_self",
            "pthread_setcancelstate",
            "pthread_setcanceltype",
            "ptw32_pop_cleanup",
            "ptw32_push_cleanup",
            "libusb_bulk_transfer",
            "libusb_claim_interface",
            "libusb_close",
            "libusb_control_transfer",
            "libusb_detach_kernel_driver",
            "libusb_error_name",
            "libusb_exit",
            "libusb_free_config_descriptor",
            "libusb_free_device_list",
            "libusb_get_bus_number",
            "libusb_get_config_descriptor",
            "libusb_get_device_address",
            "libusb_get_device_descriptor",
            "libusb_get_device_list",
            "libusb_get_string_descriptor_ascii",
            "libusb_init",
            "libusb_open",
            "libusb_ref_device",
            "libusb_release_interface",
            "libusb_reset_device",
            "libusb_set_configuration",
            "libusb_unref_device",
            "LINES",
            "cbreak",
            "delwin",
            "echo",
            "endwin",
            "erase",
            "getmaxx",
            "getmaxy",
            "halfdelay",
            "idlok",
            "immedok",
            "initscr",
            "keypad",
            "leaveok",
            "mvwhline",
            "mvwin",
            "mvwprintw",
            "newwin",
            "nocbreak",
            "noecho",
            "scrollok",
            "stdscr",
            "touchwin",
            "vw_printw",
            "waddstr",
            "wattroff",
            "wattron",
            "wclear",
            "wclrtoeol",
            "wgetch",
            "wgetnstr",
            "wmove",
            "wprintw",
            "wrefresh",
            "wresize",
            "blkmk_address_to_script",
            "blkmk_append_coinbase_safe",
            "blkmk_get_data",
            "blkmk_init_generation2",
            "blkmk_sha256_impl",
            "blkmk_time_left",
            "blkmk_work_left",
            "blktmpl_addcaps",
            "blktmpl_create",
            "blktmpl_free",
            "blktmpl_get_longpoll",
            "blkmk_submit_jansson",
            "blktmpl_add_jansson",
            "blktmpl_request_jansson",
            "KERNEL32.dll",
            "msvcrt.dll",
            "msvcrt.dll",
            "USER32.dll",
            "WS2_32.dll",
            "libcurl-4.dll",
            "libjansson-4.dll",
            "pthreadGC2.dll",
            "libusb-1.0.dll",
            "pdcurses.dll",
            "libblkmaker-0.1-0.dll",
            "libblkmaker_jansson-0.1-0.dll",
            "GNU C 4.6.3",
            "miner.c",
            "/home/luke-jr/Projects/Education/Tonal/BitCoin/cgminer",
            "__gnuc_va_list",
            "__builtin_va_list",
            "char",
            "va_list",
            "size_t",
            "long long unsigned int",
            "ssize_t",
            "long long int",
            "intptr_t",
            "ptrdiff_t",
            "short unsigned int",
            "long int",
            "__time64_t",
            "time_t",
            "unsigned int",
            "long unsigned int",
            "unsigned char",
            "_iobuf",
            "\t_ptr",
            "\t_cnt",
            "\t_base",
            "\t_flag",
            "\t_file",
            "\t_charbuf",
            "# \t_bufsiz",
            "#$\t_tmpfname",
            "FILE",
            "_off_t",
            "bool",
            "chtype",
            "short int",
            "_win",
            "\t_cury",
            "\t_curx",
            "\t_maxy",
            "\t_maxx",
            "\t_begy",
            "\t_begx",
            "\t_flags",
            "\t_attrs",
            "\t_bkgd",
            "# \t_clear",
            "#$\t_leaveit",
            "#%\t_scroll",
            "#&\t_nodelay",
            "#'\t_immed",
            "#(\t_sync",
            "#)\t_use_keypad",
            "#*\t_y",
            "#0\t_firstch",
            "_lastch",
            "_tmarg",
            "_bmarg",
            "_delayms",
            "_parx",
            "_pary",
            "_parent",
            "WINDOW",
            "_div_t",
            "\tquot",
            "\trem",
            "div_t",
            "_ldiv_t",
            "\tquot",
            "\trem",
            "ldiv_t",
            "double",
            "float",
            "long double",
            "signed char",
            "uint8_t",
            "int16_t",
            "uint16_t",
            "uint32_t",
            "int64_t",
            "uint64_t",
            "_ino_t",
            "_dev_t",
            "_pid_t",
            "pid_t",
            "timespec",
            "\ttv_sec",
            "\ttv_nsec",
            "\ttm_sec",
            "\ttm_min",
            "\ttm_hour",
            "\ttm_mday",
            "\ttm_mon",
            "\ttm_year",
            "\ttm_wday",
            "\ttm_yday",
            "\ttm_isdst",
            "timeval",
            "\ttv_sec",
            "\ttv_usec",
            "sigset_t",
            "sigval",
            "sival_int",
            "sival_ptr",
            "si_signo",
            "si_code",
            "si_errno",
            "si_pid",
            "si_uid",
            "si_addr",
            "si_status",
            "si_band",
            "si_value",
            "_sa_handler",
            "_sa_sigaction",
            "sigaction",
            "_sa_func",
            "sa_mask",
            "sa_flags",
            "stat",
            "\tst_dev",
            "\tst_ino",
            "\tst_mode",
            "\tst_nlink",
            "\tst_uid",
            "\tst_gid",
            "\tst_rdev",
            "\tst_size",
            "\tst_atime",
            "\tst_mtime",
            "# \tst_ctime",
            "WORD",
            "DWORD",
            "UINT_PTR",
            "SHORT",
            "HANDLE",
            "_COORD",
            "COORD",
            "_SMALL_RECT",
            "\tLeft",
            "\tTop",
            "\tRight",
            "\tBottom",
            "SMALL_RECT",
            "_CONSOLE_SCREEN_BUFFER_INFO",
            "\tdwSize",
            "\tdwCursorPosition",
            "\twAttributes",
            "\tsrWindow",
            "\tdwMaximumWindowSize",
            "CONSOLE_SCREEN_BUFFER_INFO",
            "VARENUM",
            "VT_EMPTY",
            "VT_NULL",
            "VT_I2",
            "VT_I4",
            "VT_R4",
            "VT_R8",
            "VT_CY",
            "VT_DATE",
            "VT_BSTR",
            "VT_DISPATCH",
            "VT_ERROR",
            "VT_BOOL",
            "VT_VARIANT",
            "VT_UNKNOWN",
            "VT_DECIMAL",
            "VT_I1",
            "VT_UI1",
            "VT_UI2",
            "VT_UI4",
            "VT_I8",
            "VT_UI8",
            "VT_INT",
            "VT_UINT",
            "VT_VOID",
            "VT_HRESULT",
            "VT_PTR",
            "VT_SAFEARRAY",
            "VT_CARRAY",
            "VT_USERDEFINED",
            "VT_LPSTR",
            "VT_LPWSTR",
            "VT_RECORD",
            "VT_INT_PTR",
            "VT_UINT_PTR",
            "VT_FILETIME",
            "VT_BLOB",
            "VT_STREAM",
            "VT_STORAGE",
            "VT_STREAMED_OBJECT",
            "VT_STORED_OBJECT",
            "VT_BLOB_OBJECT",
            "VT_CF",
            "VT_CLSID",
            "VT_VERSIONED_STREAM",
            "VT_BSTR_BLOB",
            "VT_VECTOR",
            "VT_ARRAY",
            "VT_BYREF",
            "VT_RESERVED",
            "VT_ILLEGAL",
            "VT_ILLEGALMASKED",
            "VT_TYPEMASK",
            "u_short",
            "u_int",
            "SOCKET",
            "fd_set",
            "\tfd_count",
            "\tfd_array",
            "fd_set",
            "sockaddr",
            "\tsa_family",
            "\tsa_data",
            "opt_type",
            "OPT_NOARG",
            "OPT_HASARG",
            "OPT_SUBTABLE",
            "OPT_END",
            "carg",
            "tlen",
            "opt_table",
            "names",
            "type",
            "cb_arg",
            "show",
            "desc",
            "JSON_OBJECT",
            "JSON_ARRAY",
            "JSON_STRING",
            "JSON_INTEGER",
            "JSON_REAL",
            "JSON_TRUE",
            "JSON_FALSE",
            "JSON_NULL",
            "json_type",
            "\ttype",
            "\trefcount",
            "json_t",
            "\tline",
            "\tcolumn",
            "\tposition",
            "\tsource",
            "\ttext",
            "json_error_t",
            " CURL",
            "curl_socket_t",
            "CURLSOCKTYPE_IPCXN",
            "CURLSOCKTYPE_ACCEPT",
            "CURLSOCKTYPE_LAST",
            "curlsocktype",
            "curl_sockaddr",
            "family",
            "socktype",
            "protocol",
            "addrlen",
            "addr",
            "CURLE_OK",
            "CURLE_UNSUPPORTED_PROTOCOL",
            "CURLE_FAILED_INIT",
            "CURLE_URL_MALFORMAT",
            "CURLE_NOT_BUILT_IN",
            "CURLE_COULDNT_RESOLVE_PROXY",
            "CURLE_COULDNT_RESOLVE_HOST",
            "CURLE_COULDNT_CONNECT",
            "CURLE_FTP_WEIRD_SERVER_REPLY",
            "CURLE_REMOTE_ACCESS_DENIED",
            "CURLE_FTP_ACCEPT_FAILED",
            "CURLE_FTP_WEIRD_PASS_REPLY",
            "CURLE_FTP_ACCEPT_TIMEOUT",
            "CURLE_FTP_WEIRD_PASV_REPLY",
            "CURLE_FTP_WEIRD_227_FORMAT",
            "CURLE_FTP_CANT_GET_HOST",
            "CURLE_OBSOLETE16",
            "CURLE_FTP_COULDNT_SET_TYPE",
            "CURLE_PARTIAL_FILE",
            "CURLE_FTP_COULDNT_RETR_FILE",
            "CURLE_OBSOLETE20",
            "CURLE_QUOTE_ERROR",
            "CURLE_HTTP_RETURNED_ERROR",
            "CURLE_WRITE_ERROR",
            "CURLE_OBSOLETE24",
            "CURLE_UPLOAD_FAILED",
            "CURLE_READ_ERROR",
            "CURLE_OUT_OF_MEMORY",
            "CURLE_OPERATION_TIMEDOUT",
            "CURLE_OBSOLETE29",
            "CURLE_FTP_PORT_FAILED",
            "CURLE_FTP_COULDNT_USE_REST",
            "CURLE_OBSOLETE32",
            "CURLE_RANGE_ERROR",
            "CURLE_HTTP_POST_ERROR",
            "CURLE_SSL_CONNECT_ERROR",
            "CURLE_BAD_DOWNLOAD_RESUME",
            "CURLE_FILE_COULDNT_READ_FILE",
            "CURLE_LDAP_CANNOT_BIND",
            "CURLE_LDAP_SEARCH_FAILED",
            "CURLE_OBSOLETE40",
            "CURLE_FUNCTION_NOT_FOUND",
            "CURLE_ABORTED_BY_CALLBACK",
            "CURLE_BAD_FUNCTION_ARGUMENT",
            "CURLE_OBSOLETE44",
            "CURLE_INTERFACE_FAILED",
            "CURLE_OBSOLETE46",
            "CURLE_TOO_MANY_REDIRECTS",
            "CURLE_UNKNOWN_OPTION",
            "CURLE_TELNET_OPTION_SYNTAX",
            "CURLE_OBSOLETE50",
            "CURLE_PEER_FAILED_VERIFICATION",
            "CURLE_GOT_NOTHING",
            "CURLE_SSL_ENGINE_NOTFOUND",
            "CURLE_SSL_ENGINE_SETFAILED",
            "CURLE_SEND_ERROR",
            "CURLE_RECV_ERROR",
            "CURLE_OBSOLETE57",
            "CURLE_SSL_CERTPROBLEM",
            "CURLE_SSL_CIPHER",
            "CURLE_SSL_CACERT",
            "CURLE_BAD_CONTENT_ENCODING",
            "CURLE_LDAP_INVALID_URL",
            "CURLE_FILESIZE_EXCEEDED",
            "CURLE_USE_SSL_FAILED",
            "CURLE_SEND_FAIL_REWIND",
            "CURLE_SSL_ENGINE_INITFAILED",
            "CURLE_LOGIN_DENIED",
            "CURLE_TFTP_NOTFOUND",
            "CURLE_TFTP_PERM",
            "CURLE_REMOTE_DISK_FULL",
            "CURLE_TFTP_ILLEGAL",
            "CURLE_TFTP_UNKNOWNID",
            "CURLE_REMOTE_FILE_EXISTS",
            "CURLE_TFTP_NOSUCHUSER",
            "CURLE_CONV_FAILED",
            "CURLE_CONV_REQD",
            "CURLE_SSL_CACERT_BADFILE",
            "CURLE_REMOTE_FILE_NOT_FOUND",
            "CURLE_SSH",
            "CURLE_SSL_SHUTDOWN_FAILED",
            "CURLE_AGAIN",
            "CURLE_SSL_CRL_BADFILE",
            "CURLE_SSL_ISSUER_ERROR",
            "CURLE_FTP_PRET_FAILED",
            "CURLE_RTSP_CSEQ_ERROR",
            "CURLE_RTSP_SESSION_ERROR",
            "CURLE_FTP_BAD_FILE_LIST",
            "CURLE_CHUNK_FAILED",
            "CURL_LAST",
            "CURLcode",
            "CURLOPT_FILE",
            "CURLOPT_URL",
            "CURLOPT_PORT",
            "CURLOPT_PROXY",
            "CURLOPT_USERPWD",
            "CURLOPT_PROXYUSERPWD",
            "CURLOPT_RANGE",
            "CURLOPT_INFILE",
            "CURLOPT_ERRORBUFFER",
            "CURLOPT_WRITEFUNCTION",
            "CURLOPT_READFUNCTION",
            "CURLOPT_TIMEOUT",
            "CURLOPT_INFILESIZE",
            "CURLOPT_POSTFIELDS",
            "CURLOPT_REFERER",
            "CURLOPT_FTPPORT",
            "CURLOPT_USERAGENT",
            "CURLOPT_LOW_SPEED_LIMIT",
            "CURLOPT_LOW_SPEED_TIME",
            "CURLOPT_RESUME_FROM",
            "CURLOPT_COOKIE",
            "CURLOPT_HTTPHEADER",
            "CURLOPT_HTTPPOST",
            "CURLOPT_SSLCERT",
            "CURLOPT_KEYPASSWD",
            "CURLOPT_CRLF",
            "CURLOPT_QUOTE",
            "CURLOPT_WRITEHEADER",
            "CURLOPT_COOKIEFILE",
            "CURLOPT_SSLVERSION",
            "CURLOPT_TIMECONDITION",
            "CURLOPT_TIMEVALUE",
            "CURLOPT_CUSTOMREQUEST",
            "CURLOPT_STDERR",
            "CURLOPT_POSTQUOTE",
            "CURLOPT_WRITEINFO",
            "CURLOPT_VERBOSE",
            "CURLOPT_HEADER",
            "CURLOPT_NOPROGRESS",
            "CURLOPT_NOBODY",
            "CURLOPT_FAILONERROR",
            "CURLOPT_UPLOAD",
            "CURLOPT_POST",
            "CURLOPT_DIRLISTONLY",
            "CURLOPT_APPEND",
            "CURLOPT_NETRC",
            "CURLOPT_FOLLOWLOCATION",
            "CURLOPT_TRANSFERTEXT",
            "CURLOPT_PUT",
            "CURLOPT_PROGRESSFUNCTION",
            "CURLOPT_PROGRESSDATA",
            "CURLOPT_AUTOREFERER",
            "CURLOPT_PROXYPORT",
            "CURLOPT_POSTFIELDSIZE",
            "CURLOPT_HTTPPROXYTUNNEL",
            "CURLOPT_INTERFACE",
            "CURLOPT_KRBLEVEL",
            "CURLOPT_SSL_VERIFYPEER",
            "CURLOPT_CAINFO",
            "CURLOPT_MAXREDIRS",
            "CURLOPT_FILETIME",
            "CURLOPT_TELNETOPTIONS",
            "CURLOPT_MAXCONNECTS",
            "CURLOPT_CLOSEPOLICY",
            "CURLOPT_FRESH_CONNECT",
            "CURLOPT_FORBID_REUSE",
            "CURLOPT_RANDOM_FILE",
            "CURLOPT_EGDSOCKET",
            "CURLOPT_CONNECTTIMEOUT",
            "CURLOPT_HEADERFUNCTION",
            "CURLOPT_HTTPGET",
            "CURLOPT_SSL_VERIFYHOST",
            "CURLOPT_COOKIEJAR",
            "CURLOPT_SSL_CIPHER_LIST",
            "CURLOPT_HTTP_VERSION",
            "CURLOPT_FTP_USE_EPSV",
            "CURLOPT_SSLCERTTYPE",
            "CURLOPT_SSLKEY",
            "CURLOPT_SSLKEYTYPE",
            "CURLOPT_SSLENGINE",
            "CURLOPT_SSLENGINE_DEFAULT",
            "CURLOPT_DNS_USE_GLOBAL_CACHE",
            "CURLOPT_DNS_CACHE_TIMEOUT",
            "CURLOPT_PREQUOTE",
            "CURLOPT_DEBUGFUNCTION",
            "CURLOPT_DEBUGDATA",
            "CURLOPT_COOKIESESSION",
            "CURLOPT_CAPATH",
            "CURLOPT_BUFFERSIZE",
            "CURLOPT_NOSIGNAL",
            "CURLOPT_SHARE",
            "CURLOPT_PROXYTYPE",
            "CURLOPT_ACCEPT_ENCODING",
            "CURLOPT_PRIVATE",
            "CURLOPT_HTTP200ALIASES",
            "CURLOPT_UNRESTRICTED_AUTH",
            "CURLOPT_FTP_USE_EPRT",
            "CURLOPT_HTTPAUTH",
            "CURLOPT_SSL_CTX_FUNCTION",
            "CURLOPT_SSL_CTX_DATA",
            "CURLOPT_FTP_CREATE_MISSING_DIRS",
            "CURLOPT_PROXYAUTH",
            "CURLOPT_FTP_RESPONSE_TIMEOUT",
            "CURLOPT_IPRESOLVE",
            "CURLOPT_MAXFILESIZE",
            "CURLOPT_INFILESIZE_LARGE",
            "CURLOPT_RESUME_FROM_LARGE",
            "CURLOPT_MAXFILESIZE_LARGE",
            "CURLOPT_NETRC_FILE",
            "CURLOPT_USE_SSL",
            "CURLOPT_POSTFIELDSIZE_LARGE",
            "CURLOPT_TCP_NODELAY",
            "CURLOPT_FTPSSLAUTH",
            "CURLOPT_IOCTLFUNCTION",
            "CURLOPT_IOCTLDATA",
            "CURLOPT_FTP_ACCOUNT",
            "CURLOPT_COOKIELIST",
            "CURLOPT_IGNORE_CONTENT_LENGTH",
            "CURLOPT_FTP_SKIP_PASV_IP",
            "CURLOPT_FTP_FILEMETHOD",
            "CURLOPT_LOCALPORT",
            "CURLOPT_LOCALPORTRANGE",
            "CURLOPT_CONNECT_ONLY",
            "CURLOPT_CONV_FROM_NETWORK_FUNCTION",
            "CURLOPT_CONV_TO_NETWORK_FUNCTION",
            "CURLOPT_CONV_FROM_UTF8_FUNCTION",
            "CURLOPT_MAX_SEND_SPEED_LARGE",
            "CURLOPT_MAX_RECV_SPEED_LARGE",
            "CURLOPT_FTP_ALTERNATIVE_TO_USER",
            "CURLOPT_SOCKOPTFUNCTION",
            "CURLOPT_SOCKOPTDATA",
            "CURLOPT_SSL_SESSIONID_CACHE",
            "CURLOPT_SSH_AUTH_TYPES",
            "CURLOPT_SSH_PUBLIC_KEYFILE",
            "CURLOPT_SSH_PRIVATE_KEYFILE",
            "CURLOPT_FTP_SSL_CCC",
            "CURLOPT_TIMEOUT_MS",
            "CURLOPT_CONNECTTIMEOUT_MS",
            "CURLOPT_HTTP_TRANSFER_DECODING",
            "CURLOPT_HTTP_CONTENT_DECODING",
            "CURLOPT_NEW_FILE_PERMS",
            "CURLOPT_NEW_DIRECTORY_PERMS",
            "CURLOPT_POSTREDIR",
            "CURLOPT_SSH_HOST_PUBLIC_KEY_MD5",
            "CURLOPT_OPENSOCKETFUNCTION",
            "CURLOPT_OPENSOCKETDATA",
            "CURLOPT_COPYPOSTFIELDS",
            "CURLOPT_PROXY_TRANSFER_MODE",
            "CURLOPT_SEEKFUNCTION",
            "CURLOPT_SEEKDATA",
            "CURLOPT_CRLFILE",
            "CURLOPT_ISSUERCERT",
            "CURLOPT_ADDRESS_SCOPE",
            "CURLOPT_CERTINFO",
            "CURLOPT_USERNAME",
            "CURLOPT_PASSWORD",
            "CURLOPT_PROXYUSERNAME",
            "CURLOPT_PROXYPASSWORD",
            "CURLOPT_NOPROXY",
            "CURLOPT_TFTP_BLKSIZE",
            "CURLOPT_SOCKS5_GSSAPI_SERVICE",
            "CURLOPT_SOCKS5_GSSAPI_NEC",
            "CURLOPT_PROTOCOLS",
            "CURLOPT_REDIR_PROTOCOLS",
            "CURLOPT_SSH_KNOWNHOSTS",
            "CURLOPT_SSH_KEYFUNCTION",
            "CURLOPT_SSH_KEYDATA",
            "CURLOPT_MAIL_FROM",
            "CURLOPT_MAIL_RCPT",
            "CURLOPT_FTP_USE_PRET",
            "CURLOPT_RTSP_REQUEST",
            "CURLOPT_RTSP_SESSION_ID",
            "CURLOPT_RTSP_STREAM_URI",
            "CURLOPT_RTSP_TRANSPORT",
            "CURLOPT_RTSP_CLIENT_CSEQ",
            "CURLOPT_RTSP_SERVER_CSEQ",
            "CURLOPT_INTERLEAVEDATA",
            "CURLOPT_INTERLEAVEFUNCTION",
            "CURLOPT_WILDCARDMATCH",
            "CURLOPT_CHUNK_BGN_FUNCTION",
            "CURLOPT_CHUNK_END_FUNCTION",
            "CURLOPT_FNMATCH_FUNCTION",
            "CURLOPT_CHUNK_DATA",
            "CURLOPT_FNMATCH_DATA",
            "CURLOPT_RESOLVE",
            "CURLOPT_TLSAUTH_USERNAME",
            "CURLOPT_TLSAUTH_PASSWORD",
            "CURLOPT_TLSAUTH_TYPE",
            "CURLOPT_TRANSFER_ENCODING",
            "CURLOPT_CLOSESOCKETFUNCTION",
            "CURLOPT_CLOSESOCKETDATA",
            "CURLOPT_GSSAPI_DELEGATION",
            "CURLOPT_DNS_SERVERS",
            "CURLOPT_ACCEPTTIMEOUT_MS",
            "CURLOPT_TCP_KEEPALIVE",
            "CURLOPT_TCP_KEEPIDLE",
            "CURLOPT_TCP_KEEPINTVL",
            "CURLOPT_SSL_OPTIONS",
            "CURLOPT_MAIL_AUTH",
            "CURLOPT_LASTENTRY",
            " CURLM",
            "CURLMSG_NONE",
            "CURLMSG_DONE",
            "CURLMSG_LAST",
            "CURLMSG",
            "#whatever",
            "#result",
            "CURLMsg",
            "\tmsg",
            "\teasy_handle",
            "CURLMsg",
            "CURLMOPT_SOCKETFUNCTION",
            "CURLMOPT_SOCKETDATA",
            "CURLMOPT_PIPELINING",
            "CURLMOPT_TIMERFUNCTION",
            "CURLMOPT_TIMERDATA",
            "CURLMOPT_MAXCONNECTS",
            "CURLMOPT_LASTENTRY",
            "\ttotal",
            "\tstate",
            "\tbuffer",
            "#(\tipad",
            "#h\topad",
            "sha2_context",
            "blkheight_t",
            "libblkmaker_hash_t",
            "blkhash_t",
            "txnhash_t",
            "blktime_t",
            "blktime_diff_t",
            "blknonce_t",
            "blktxn_t",
            "\tdatasz",
            "\tdependcount",
            "\tdepends",
            "# \tfee",
            "#($/",
            "#0\tsigops",
            "_Bool",
            "blktmpl_longpoll_req",
            "\turi",
            "GBT_CBTXN",
            "GBT_CBVALUE",
            "GBT_WORKID",
            "GBT_LONGPOLL",
            "GBT_PROPOSAL",
            "GBT_SERVICE",
            "BMM_CBAPPEND",
            "BMM_CBSET",
            "BMM_GENERATE",
            "BMM_TIMEINC",
            "BMM_TIMEDEC",
            "BMM_TXNADD",
            "BMM_PREVBLK",
            "BMM_VERFORCE",
            "BMM_VERDROP",
            "BMA_TXNHASH",
            "BMAb_COINBASE",
            "BMAb_TRUNCATE",
            "BMAs_COINBASE",
            "BMAs_MERKLE",
            "BMAs_TRUNCATE",
            "gbt_capabilities_t",
            "blkmutations_t",
            "!IJ5",
            "\tversion",
            "\tdiffbits",
            "!KJ5",
            "\theight",
            "!L&0",
            "\tprevblk",
            "!MS0",
            "\tsigoplimit",
            "#,\tsizelimit",
            "#0\ttxncount",
            "#4\ttxns",
            "!SZ5",
            "#8\tcbtxn",
            "!TZ5",
            "#@\tcbvalue",
            "#H\t_time_rcvd",
            "#P\tcurtime",
            "!Xu0",
            "#X\tauxcount",
            "#\\\tauxnames",
            "#`\tauxdata",
            "![`5",
            "#h\tworkid",
            "#p\tlp",
            "!`Q1",
            "#x\tsubmitold",
            "!aH1",
            "\texpires",
            "!eS0",
            "\tmutations",
            "\tmaxtime",
            "!iu0",
            "\tmaxtimeoff",
            "\tmintime",
            "!ku0",
            "\tmintimeoff",
            "\tminnonce",
            "\tmaxnonce",
            "\t_mrklroot",
            "!q90",
            "\tnext_dataid",
            "blktemplate_t",
            "ptw32_handle_t",
            "pthread_t",
            "pthread_mutex_t",
            "&pthread_mutex_t_",
            "pthread_cond_t",
            "&pthread_cond_t_",
            "pthread_rwlock_t",
            "&pthread_rwlock_t_",
            "PTHREAD_CREATE_JOINABLE",
            "PTHREAD_CREATE_DETACHED",
            "PTHREAD_INHERIT_SCHED",
            "PTHREAD_EXPLICIT_SCHED",
            "PTHREAD_SCOPE_PROCESS",
            "PTHREAD_SCOPE_SYSTEM",
            "PTHREAD_CANCEL_ENABLE",
            "PTHREAD_CANCEL_DISABLE",
            "PTHREAD_CANCEL_ASYNCHRONOUS",
            "PTHREAD_CANCEL_DEFERRED",
            "PTHREAD_PROCESS_PRIVATE",
            "PTHREAD_PROCESS_SHARED",
            "PTHREAD_MUTEX_STALLED",
            "PTHREAD_MUTEX_ROBUST",
            "PTHREAD_BARRIER_SERIAL_THREAD",
            "list_head",
            "\tprev",
            "hh_head",
            "count",
            "expand_mult",
            "prev",
            "hh_prev",
            "hh_next",
            "keylen",
            "hashv",
            "buckets",
            "num_buckets",
            "log2_num_buckets",
            "num_items",
            "tail",
            "ideal_chain_maxlen",
            "nonideal_items",
            "ineff_expands",
            "noexpand",
            "signature",
            "LOG_ERR",
            "LOG_WARNING",
            "LOG_NOTICE",
            "LOG_INFO",
            "LOG_DEBUG",
            "notifier_t",
            "cl_uint",
            "cl_ulong",
            "iVddc",
            "iActivityPercent",
            "iCurrentPerformanceLevel",
            "iCurrentBusSpeed",
            "iCurrentBusLanes",
            "iMaximumBusLanes",
            "# 't",
            "iTemperature",
            "iFlags",
            "iMinPercent",
            "iMaxPercent",
            "iMinRPM",
            "iMaxRPM",
            "iSpeedType",
            "iFanSpeed",
            "iFlags",
            "iMin",
            "iMax",
            "iStep",
            "iNumberOfPerformanceLevels",
            "iActivityReportingSupported",
            "iDiscretePerformanceLevels",
            "sEngineClock",
            "sMemoryClock",
            "sVddc",
            "iVddc",
            "aLevels",
            "libusb_device_descriptor",
            "bLength",
            "bDescriptorType",
            "bcdUSB",
            "bDeviceClass",
            "bDeviceSubClass",
            "bDeviceProtocol",
            "bMaxPacketSize0",
            "idVendor",
            "idProduct",
            "bcdDevice",
            "iManufacturer",
            "iProduct",
            "iSerialNumber",
            "bNumConfigurations",
            "dclk_data",
            "\tfreqM",
            "\tfreqMaxM",
            "\tfreqMDefault",
            "\tminGoodSamples",
            "\terrorCount",
            "\terrorWeight",
            "\terrorRate",
            "# \tmaxErrorRate",
            "device_thread",
            "primary_thread",
            "#('8",
            "last",
            "sick",
            "scanhash_working",
            "#H'|",
            "tv_hashes_done",
            "tv_lastupdate",
            "pause",
            "getwork",
            "prev_work",
            "next_work",
            "tv_morework",
            "results_work",
            "_job_transition_in_progress",
            "_proceed_with_new_job",
            "tv_results_jobstart",
            "tv_jobstart",
            "tv_poll",
            "notifier",
            "starting_next_work",
            "_max_nonce",
            "work_restart",
            "work_restart_notifier",
            "libztex_device",
            " )-\"F",
            "\tmutex",
            "\troot",
            ")/\"F",
            "\tfpgaNum",
            "\tdescriptor",
            "\thndl",
            ")2Q@",
            "#(\tusbbus",
            "#0\tusbaddress",
            "#1\tsnString",
            ")5(F",
            "#2\tproductId",
            ")6J5",
            "#=\tfwVersion",
            "#A\tinterfaceVersion",
            "#B\tinterfaceCapabilities",
            ")98F",
            "#C\tmoduleReserved",
            "#I\tnumNonces",
            "#U\toffsNonces",
            "#V\tfreqM1",
            "#X\tbitFileName",
            "#`\tsuspendSupported",
            ")?H1",
            "#h\thashesPerClock",
            "#p\textraSolutions",
            "#x\tdclk",
            ")CW@",
            "\tnumberOfFpgas",
            "#A\tselectedFpga",
            "#A\tparallelConfigSupport",
            ")GH1",
            "#A\trepr",
            ")IHF",
            "alive",
            "LIFE_WELL",
            "LIFE_SICK",
            "LIFE_DEAD",
            "LIFE_NOSTART",
            "LIFE_INIT",
            "LIFE_WAIT",
            "POOL_FAILOVER",
            "POOL_ROUNDROBIN",
            "POOL_ROTATE",
            "POOL_LOADBALANCE",
            "POOL_BALANCE",
            "gpu_adl",
            "\tlpTemperature",
            "\tiAdapterIndex",
            "\tlpAdapterID",
            "\tiBusNumber",
            "\tstrAdapterName",
            "\tlpActivity",
            "\tlpOdParameters",
            "\tDefPerfLev",
            "\tlpFanSpeedInfo",
            "\tlpFanSpeedValue",
            "\tDefFanSpeedValue",
            "\tiVddc",
            "\tiPercentage",
            "\tautofan",
            "\tautoengine",
            "\tmanaged",
            "\tlastengine",
            "\tlasttemp",
            "\ttargetfan",
            "\tovertemp",
            "\tminspeed",
            "\tmaxspeed",
            "has_fanspeed",
            "twin",
            "device_api",
            "dname",
            "api_detect",
            "get_dev_statline_before",
            "get_dev_statline_after",
            "# ' ",
            "get_statline_before",
            "get_statline",
            "get_api_extra_device_detail",
            "get_api_extra_device_status",
            "get_api_stats",
            "get_stats",
            "identify_device",
            "set_device",
            "thread_prepare",
            "minerloop",
            "can_limit_work",
            "thread_init",
            "prepare_work",
            "scanhash",
            "hw_error",
            "thread_shutdown",
            "thread_enable",
            "poll",
            "job_prepare",
            "job_start",
            "job_get_results",
            "job_process_results",
            "-cgpu_info",
            "cgminer_id",
            "device_line_id",
            "devtype",
            "device_id",
            "dev_repr",
            "dev_repr_ns",
            "#('~",
            "procs",
            "proc_id",
            "proc_repr",
            "proc_repr_ns",
            "device",
            "next_proc",
            "device_path",
            "device_file",
            "#h.]",
            "work_start_tv",
            "wait_ms",
            "sleep_ms",
            "avg_wait_f",
            "avg_wait_d",
            "nonces",
            "polling",
            "flash_led",
            "device_mutex",
            "deven",
            "total_mhashes",
            "utility_diff1",
            "status",
            "init",
            "last_message_tv",
            "threads",
            "max_hashes",
            "kname",
            "mapped",
            "virtual_gpu",
            "virtual_adl",
            "intensity",
            "dynamic",
            "vwidth",
            "kernel",
            "max_alloc",
            "opt_lg",
            "lookup_gap",
            "opt_tc",
            "thread_concurrency",
            "shaders",
            "tv_gpustart",
            "temp",
            "cutofftemp",
            "targettemp",
            "has_adl",
            "gpu_engine",
            "min_engine",
            "gpu_fan",
            "min_fan",
            "gpu_memclock",
            "gpu_memdiff",
            "gpu_powertune",
            "gpu_vddc",
            "diff1",
            "last_share_pool",
            "last_share_pool_time",
            "device_last_well",
            "device_last_not_well",
            "device_not_well_reason",
            "reinit_backoff",
            "thread_fail_init_count",
            "thread_zero_hash_count",
            "thread_fail_queue_count",
            "dev_sick_idle_60_count",
            "dev_dead_idle_600_count",
            "dev_nostart_count",
            "dev_over_heat_count",
            "dev_thermal_cutoff_count",
            "dev_comms_error_count",
            "dev_throttle_count",
            "api_data",
            "type",
            "data_was_malloc",
            "prev",
            "# 'l",
            "midstate",
            "rolls",
            "tv_staged",
            "mined",
            "clone",
            "longpoll",
            "stale",
            "mandatory",
            "queued",
            "stratum",
            "job_id",
            "nonce2",
            "sdiff",
            "work_difficulty",
            "tmpl",
            "tmpl_refcount",
            "dataid",
            "tv_cloned",
            "tv_work_start",
            "getwork_mode",
            "list",
            "dev_enable",
            "DEV_ENABLED",
            "DEV_DISABLED",
            "DEV_RECOVER",
            "DEV_RECOVER_ERR",
            "cl_kernels",
            "KL_NONE",
            "KL_POCLBM",
            "KL_PHATK",
            "KL_DIAKGCN",
            "KL_DIABLO",
            "KL_SCRYPT",
            "dev_reason",
            "REASON_THREAD_FAIL_INIT",
            "REASON_THREAD_ZERO_HASH",
            "REASON_THREAD_FAIL_QUEUE",
            "REASON_DEV_SICK_IDLE_60",
            "REASON_DEV_DEAD_IDLE_600",
            "REASON_DEV_NOSTART",
            "REASON_DEV_OVER_HEAT",
            "REASON_DEV_THERMAL_CUTOFF",
            "REASON_DEV_COMMS_ERROR",
            "REASON_DEV_THROTTLE",
            "MSG_NOPOOL",
            "MSG_MISPID",
            "MSG_INVPID",
            "MSG_DUPPID",
            "MSG_POOLPRIO",
            "_get_start",
            "getwork_attempts",
            "getwork_wait_rolling",
            "hadrolltime",
            "canroll",
            "hadexpire",
            "#*'a",
            "min_diff",
            "max_diff",
            "last_diff",
            "min_diff_count",
            "max_diff_count",
            "times_sent",
            "bytes_sent",
            "net_bytes_sent",
            "times_received",
            "bytes_received",
            "net_bytes_received",
            "device_ztex",
            "device_fd",
            "device_ft232r",
            "&ft232r_device_handle",
            "thread_q",
            "frozen",
            "mutex",
            "cond",
            "string_elist",
            "string",
            "free_me",
            "list",
            "ctx_a",
            "ctx_b",
            "ctx_c",
            "ctx_d",
            "ctx_e",
            "ctx_f",
            "ctx_g",
            "ctx_h",
            "cty_a",
            "cty_b",
            "cty_c",
            "cty_d",
            "cty_e",
            "cty_f",
            "cty_g",
            "cty_h",
            "merkle",
            "nbits",
            "#H'u",
            "fW15",
            "fW01r",
            "fcty_e",
            "fcty_e2",
            "PreVal4",
            "C1addK5",
            "W17_2",
            "PreVal4addT1",
            "T1substate0",
            "PreVal4_2",
            "PreVal0",
            "PreW18",
            "PreW19",
            "PreW31",
            "PreW32",
            "B1addK6",
            "PreVal0addK7",
            "W16addK16",
            "W17addK17",
            "zeroA",
            "zeroB",
            "oneA",
            "twoA",
            "threeA",
            "fourA",
            "fiveA",
            "sixA",
            "sevenA",
            "dev_blk_ctx",
            "curl_ent",
            "curl",
            "node",
            "pool_enable",
            "POOL_DISABLED",
            "POOL_ENABLED",
            "POOL_REJECTING",
            "pool_protocol",
            "PLP_NONE",
            "PLP_GETWORK",
            "PLP_GETBLOCKTEMPLATE",
            "stratum_work",
            "job_id",
            "prev_hash",
            "coinbase1",
            "coinbase2",
            "merkle",
            "bbversion",
            "nbit",
            "clean",
            "cb1_len",
            "cb2_len",
            "cb_len",
            "header_len",
            "merkles",
            "transparency_probed",
            "transparency_time",
            "opaque",
            "pool_no",
            "prio",
            "seq_rejects",
            "seq_getfails",
            "solved",
            "diff1",
            "#('*",
            "#0'q",
            "submit_fail",
            "idle",
            "#A'B",
            "probed",
            "force_rollntime",
            "enabled",
            "submit_old",
            "removed",
            "lp_started",
            "#O'Y",
            "#P'{",
            "hdr_path",
            "lp_url",
            "lp_id",
            "lp_proto",
            "lp_socket",
            "getwork_requested",
            "stale_shares",
            "discarded_work",
            "getfail_occasions",
            "remotefail_occasions",
            "tv_idle",
            "last_shares",
            "shares",
            "rpc_url",
            "rpc_userpass",
            "rpc_user",
            "rpc_pass",
            "rpc_proxy",
            "pool_lock",
            "submit_q",
            "getwork_q",
            "getwork_thread",
            "curls",
            "cr_cond",
            "curlring",
            "sws_waiting_on_curl",
            "last_share_time",
            "stratum_url",
            "stratum_port",
            "stratum_curl",
            "sock",
            "sockbuf",
            "sockbuf_size",
            "sockaddr_url",
            "nonce1",
            "n1_len",
            "nonce2",
            "n2size",
            "has_stratum",
            "stratum_active",
            "last_work_time",
            "stratum_auth",
            "stratum_notify",
            "swork",
            "stratum_lock",
            "last_work_lock",
            "last_work_copy",
            "submit_work_state",
            "staleexpire",
            "tv_submit",
            "#0'l",
            "test_nonce2_result",
            "TNR_GOOD",
            "TNR_HIGH",
            "TNR_BAD",
            "api_data_type",
            "API_ESCAPE",
            "API_STRING",
            "API_CONST",
            "API_INT",
            "API_UINT",
            "API_UINT32",
            "API_UINT64",
            "API_DOUBLE",
            "API_ELAPSED",
            "API_BOOL",
            "API_TIMEVAL",
            "API_TIME",
            "API_MHS",
            "API_MHTOTAL",
            "API_TEMP",
            "API_UTILITY",
            "API_FREQ",
            "API_VOLTS",
            "API_HS",
            "API_DIFF",
            "API_JSON",
            "_cbscript_t",
            "block_no",
            "stratum_share",
            "schedtime",
            "enable",
            "h2bs_fmt",
            "H2B_NOUNIT",
            "H2B_SHORT",
            "H2B_SPACED",
            "_cgpu_devid_counter",
            "lastid",
            "0json_decref",
            "1json",
            "2_curl_easy_setopt_err_long",
            "2_curl_easy_setopt_err_curl_off_t",
            "2_curl_easy_setopt_err_string",
            "2_curl_easy_setopt_err_write_callback",
            "2_curl_easy_setopt_err_read_cb",
            "2_curl_easy_setopt_err_ioctl_cb",
            "2_curl_easy_setopt_err_sockopt_cb",
            "2_curl_easy_setopt_err_opensocket_cb",
            "2_curl_easy_setopt_err_progress_cb",
            "2_curl_easy_setopt_err_debug_cb",
            "2_curl_easy_setopt_err_ssl_ctx_cb",
            "2_curl_easy_setopt_err_conv_cb",
            "2_curl_easy_setopt_err_seek_cb",
            "2_curl_easy_setopt_err_cb_data",
            "2_curl_easy_setopt_err_error_buffer",
            "2_curl_easy_setopt_err_FILE",
            "2_curl_easy_setopt_err_postfields",
            "2_curl_easy_setopt_err_curl_httpost",
            "2_curl_easy_setopt_err_curl_slist",
            "2_curl_easy_setopt_err_CURLSH",
            "2_curl_easy_getinfo_err_string",
            "2_curl_easy_getinfo_err_long",
            "2_curl_easy_getinfo_err_double",
            "2_curl_easy_getinfo_err_curl_slist",
            "3localtime_convert",
            "3nanosleep",
            "1req",
            "1rem",
            "4tstart",
            "`4msecs",
            "4tdone",
            "P4tnow",
            "@4tleft",
            "3sleep",
            "1secs",
            "4req",
            "`4rem",
            "0__list_add",
            "1new",
            "1prev",
            "0list_add",
            "1new",
            "1head",
            "0list_add_tail",
            "1new",
            "1head",
            "0__list_del",
            "1prev",
            "0list_del",
            "1entry",
            "3list_empty",
            "1head",
            "0align_len",
            "1len",
            "7__real_getch",
            "8string_elist_add",
            "9head",
            ";swab32",
            "8swap256",
            "9dest_p",
            "9src_p",
            ":dest",
            "h:src",
            "8swap32yes",
            "9out",
            ":swapcounter",
            "8swab256",
            "9dest_p",
            "9src_p",
            ":dest",
            "X:src",
            "8mutex_lock",
            "8mutex_unlock",
            "8wr_lock",
            "8rd_lock",
            "8rw_unlock",
            "8rd_unlock",
            "8wr_unlock",
            "8mutex_init",
            "8rwlock_init",
            ";time_before",
            "9tm1",
            "9tm2",
            ";should_run",
            "`:tm",
            ":within_range",
            "get_datestamp",
            ":_tm",
            "@:tm",
            "get_timestamp",
            ":_tm",
            "@:tm",
            "8applog_and_exit",
            "9fmt",
            ",:ap",
            "8sharelog",
            "\\:rv",
            "w:ret",
            "add_pool",
            ";pool_tset",
            "9var",
            ":ret",
            "pool_tclear",
            "9var",
            ":ret",
            "current_pool",
            "set_int_range",
            "9arg",
            "9min",
            "9max",
            ":err",
            ";set_int_0_to_9999",
            "9arg",
            ";set_int_1_to_65535",
            "9arg",
            ";set_int_0_to_10",
            "9arg",
            ";set_int_1_to_10",
            "9arg",
            "set_strdup",
            "9arg",
            ";set_b58addr",
            "9arg",
            ":scriptsz",
            "h:script",
            "set_request_diff",
            "9arg",
            ";add_serial_all",
            "9arg",
            ":bufLen",
            ":buf",
            ":tLen",
            ":dev",
            ":devp",
            "5()@",
            ";add_serial",
            "9arg",
            ";set_devices",
            "9arg",
            ";set_balance",
            ";set_loadbalance",
            ";set_rotate",
            "9arg",
            ";set_rr",
            "detect_stratum",
            "9url",
            ";set_url",
            "9arg",
            "X5$-@",
            ";set_user",
            "9arg",
            ";set_pass",
            "9arg",
            ";set_userpass",
            "9arg",
            "h:updup",
            ";set_pool_priority",
            "9arg",
            ";set_pool_proxy",
            "9arg",
            ";set_pool_force_rollntime",
            "9arg",
            ";enable_debug",
            "9flag",
            ";set_schedtime",
            "9arg",
            ";set_sharelog",
            "9arg",
            "set_temp_cutoff",
            "9arg",
            ":val",
            "set_temp_target",
            "9arg",
            ":val",
            ";temp_strtok",
            "9base",
            "Bload_temp_config",
            "l:val",
            "d:target_off",
            "h:cutoff_n",
            "P:target_n",
            ";set_api_allow",
            "9arg",
            ";set_api_groups",
            "9arg",
            ";set_api_description",
            "9arg",
            ";set_icarus_options",
            "9arg",
            ";set_icarus_timing",
            "9arg",
            ";set_null",
            "9arg",
            ";parse_config",
            "9config",
            "9fileconf",
            ":err_buf",
            ":opt",
            "X:val",
            "5/7@",
            ":err",
            "HC8@",
            ":buf",
            ":size",
            ";load_config",
            "9arg",
            "9unused",
            ":err",
            "}:config",
            "X:json_error",
            "Eload_default_config",
            ";opt_verusage_and_exit",
            "9extra",
            ";jobj_binary",
            "9obj",
            "9key",
            "9buf",
            "9buflen",
            "`:tmp",
            "8calc_midstate",
            ":ctx",
            ";make_work",
            "clean_work",
            "X:free_tmpl",
            "free_work",
            "8__update_block_title",
            ":tmp",
            "8have_block_height",
            ";work_decode",
            "9val",
            "@:tmp_val",
            "~:ret",
            ":tmp",
            ":err",
            "C!F@",
            ":newcb",
            "~5ZF@",
            "X:appenderr",
            "5OG@",
            ":cbappend",
            "P:cbappendsz",
            ":truncatewarning",
            "CaG@",
            ":full",
            ":tmp",
            "C3K@",
            "H5=K@",
            "dev_from_id",
            "decay_time",
            "9fadd",
            ":ratio",
            "F__total_staged",
            ";total_staged",
            ":ret",
            "Eunlock_curses",
            "Elock_curses",
            ";curses_active_locked",
            ":ret",
            "my_cancellable_getch",
            "real_getch_t",
            ":real_getch",
            "h:type",
            "\\:rv",
            "`:sct",
            "tailsprintf",
            "9fmt",
            ",:ap",
            "8suffix_string",
            "9val",
            "9buf",
            "9sigdigits",
            ":dkilo",
            "H:kilo",
            "@:mega",
            ":giga",
            ":tera",
            ":peta",
            ":exa",
            ":suffix",
            ":decimal",
            "_:dval",
            "P5Q@",
            ":ndigits",
            ";utility_to_hashrate",
            "8hashrate_pick_unit",
            "9unit",
            ";hashrate_to_bufstr",
            "9buf",
            "9unitin",
            "9fmt",
            ":prec",
            "n:ucp",
            "m:unit",
            "8ti_hashrate_bufstr",
            "9out",
            "9current",
            "9average",
            "9sharebased",
            "9longfmt",
            " :unit",
            "8get_statline2",
            "9buf",
            "9for_curses",
            ":awidth",
            ":rwidth",
            ":hwwidth",
            ":uwidth",
            ":api",
            ":statline_func",
            "X:hashrate_style",
            ":cHr",
            ":aHr",
            ":uHr",
            "P:mhashes",
            "H:wutil",
            ":hwerrs",
            ":util",
            ":slave",
            "5J[@",
            ":cHrStatsOpt",
            "}:cHrStatsI",
            ":all_dead",
            ":all_off",
            ":proc",
            "8text_print_status",
            "8curses_print_status",
            "E\t{l",
            ":now",
            "5l`@",
            ":days",
            ":hours",
            "8adj_width",
            "9var",
            "9length",
            "8curses_print_devstatus",
            "}:ypos",
            "8print_status",
            "8change_logwinsize",
            "l:logx",
            "`:logy",
            "8check_winsizes",
            "5~g@",
            "Eswitch_compact",
            "wlog",
            ",:ap",
            "wlogprint",
            ",:ap",
            "log_curses_only",
            "9prio",
            ":high_prio",
            "clear_logwin",
            ";solves_block",
            "8enable_pool",
            "8disable_pool",
            "8reject_pool",
            "8share_result_msg",
            "9disp",
            "X:hashpart",
            "P:shrdiff",
            "H:shrdiffdisp",
            ":tgtdiff",
            "D:tgtdiffdisp",
            ":where",
            "8share_result",
            "9val",
            "9res",
            "9err",
            "HC\"p@",
            ":fakework",
            ":where",
            "~Cr@",
            ":reasontmp",
            "@:reasonLen",
            ":reason_val",
            ":reason_str",
            ";share_diff",
            ":ret",
            ";submit_upstream_work_request",
            "h:sd",
            "P5v@",
            "~:req",
            ";submit_upstream_work_completed",
            "9ptv_submit",
            "9val",
            ":res",
            ":err",
            ":tv_submit_reply",
            "|Hout",
            ":workclone",
            "|:_tm",
            "y:tm",
            "~:tm_getwork",
            "{:tm_submit_reply",
            "|:getwork_time",
            "~:getwork_to_work",
            "~:work_time",
            "~:work_to_submit",
            "~:submit_time",
            "~:diffplaces",
            "5&~@",
            ";select_balanced",
            "l:lowest",
            "h:ret",
            "`5~@",
            ";select_pool",
            ":rotating_pool",
            "h:cp",
            "Hhave_pool",
            ";target_diff",
            ":targ",
            "8calc_diff",
            "9known",
            "h:difficulty",
            "8get_benchmark_work",
            ":bench_block",
            ":bench_size",
            "P:min_size",
            "8update_last_work",
            "8gbt_req_target",
            "9req",
            "`Herradd",
            ";prepare_rpc_req2",
            "9lpid",
            "9probe",
            "XHgbtfail2",
            "Hgbtfail",
            ":caps",
            "l:req",
            ";pool_protocol_name",
            ";pool_protocol_fallback",
            ";get_upstream_work",
            "9curl",
            ":val",
            "P:rc",
            "o:url",
            "8disable_curses",
            ":hout",
            "h:csbi",
            "P:coord",
            "8__kill_work",
            ":thr",
            "kill_work",
            "app_restart",
            "8sighandler",
            "9sig",
            "8recruit_curl",
            ";pop_curl_entry3",
            ":curl_limit",
            "l:ce",
            ";pop_curl_entry2",
            ";pop_curl_entry",
            "8push_curl_entry",
            ";should_roll",
            ":now",
            "P:expiry",
            ";can_roll",
            "8roll_work",
            ":work_ntime",
            "__copy_work",
            "copy_work",
            ";make_clone",
            ";clone_available",
            "`:tmp",
            "8pool_died",
            "stale_work",
            "9share",
            ":work_expiry",
            "T:getwork_delay",
            "@:max_expiry",
            "D:elapsed_since_staged",
            ":same_job",
            "8regen_hash",
            "8check_solve",
            "8submit_discard_share2",
            "8submit_discard_share",
            ";my_curl_timer_set",
            "9curlm",
            "9timeout_ms",
            "9userp",
            "8sws_has_ce",
            "9sws",
            ";begin_submission",
            ":sws",
            "Hout",
            "~:noncehex",
            ";retry_submission",
            "9sws",
            "8free_sws",
            "9sws",
            ";submit_work_thread",
            ":wip",
            "\\:curlm",
            ":curlm_timeout_ms",
            "~:sws",
            "~:swsp",
            "P:write_sws",
            "~:tsreduce",
            "L:rfds",
            "}:wfds",
            "{:efds",
            "y:maxfd",
            "y:timeoutp",
            "y:cm",
            ":__i",
            ":__i",
            ":__i",
            ":finished",
            ":val",
            "~5\u05fb@",
            ";priority_pool",
            "9choice",
            ":ret",
            "d5l@",
            "prioritize_pools",
            "9param",
            "9pid",
            ":ptr",
            "T:pr",
            "P:prio",
            "L:pools_changed",
            ":new_prio",
            "validate_pool_priorities",
            "X:used",
            ":valid",
            "switch_pools",
            "\\:pool_no",
            "8discard_work",
            "Ewake_gws",
            "8discard_stale",
            "h:tmp",
            "`:stale",
            "\\5\t@",
            "stale_work_future",
            "9share",
            "9ustime",
            "o:tv",
            "`:orig",
            "8restart_threads",
            "\\:thr",
            ";blkhashstr",
            "8set_curblock",
            "@:old_hash",
            ";block_exists",
            ";block_sort",
            "9blocka",
            "9blockb",
            "8set_blockdiff",
            "@:diff64",
            ";test_work_current",
            ":ret",
            "~Hout_free",
            "~:deleted_block",
            ":oldblock",
            ":_hs_i",
            ":_hs_p",
            ":_hs_q",
            ":_hs_e",
            "~C)@",
            ":restart",
            "~:curpool",
            "~5y@",
            ":was_active",
            ";tv_sort",
            "9worka",
            "9workb",
            ";work_rollable",
            ";hash_push",
            "_C^@",
            ":_hs_i",
            ":_hs_p",
            ":_hs_q",
            ":_hs_e",
            ";stage_thread",
            "h:ok",
            "g5g@",
            "8stage_work",
            "curses_int",
            "9query",
            ":ret",
            "d:cvar",
            "8display_pool_summary",
            "remove_pool",
            "h:other",
            "Bjson_escape_free",
            ":jeptr",
            "h:jenext",
            ";json_escape",
            "9str",
            ":jeptr",
            "H:buf",
            "P:ptr",
            "write_config",
            "9fcfg",
            "\\:opt",
            ":kpath",
            "zero_bestshare",
            "zero_stats",
            "8display_pools",
            "Hupdated",
            ":prilist",
            "@:res",
            "Fsummary_detail_level_str",
            "8display_options",
            "default_save_file",
            "8set_options",
            ":fcfg",
            "X:str",
            "}:prompt",
            "z5j)A",
            ":statbuf",
            ";input_thread",
            "h5',A",
            ";api_thread",
            "thread_reportin",
            "9thr",
            "thread_reportout",
            "9thr",
            "8hashmeter",
            ":temp_tv_end",
            "~:total_diff",
            "}:secs",
            "~:local_secs",
            "~:local_mhashes_done",
            ":local_mhashes",
            ":showlog",
            ":cHr",
            ":aHr",
            ":uHr",
            ":thr",
            "~:thread_rolling",
            ":now",
            "}:elapsed",
            "}:last_msg_tv",
            "~5c2A",
            "hashmeter2",
            "9thr",
            ":tv_now",
            "8stratum_share_result",
            "9val",
            "9err_val",
            "parse_stratum_response",
            ":val",
            ":err_val",
            ":id_val",
            "H:err",
            "|:ret",
            "G:id",
            "|Hout",
            "Hfishy",
            ":maxtx",
            "~:mintx",
            "~:acttx",
            "C+;A",
            "5F;A",
            "8shutdown_stratum",
            "8clear_stratum_shares",
            "h:tmpshare",
            ":cleared",
            "P5'FA",
            "8clear_pool_work",
            "h:tmp",
            "`:cleared",
            "\\5IA",
            ";cnx_needed",
            "8stratum_resumed",
            "HHout",
            "XCxOA",
            ":__i",
            "5 RA",
            "@:hex_height",
            ":cb_height_sz",
            ":height",
            "8init_stratum_thread",
            ";stratum_works",
            ";pool_active",
            "9pinging",
            ":ret",
            "_:val",
            ":curl",
            "XHnohttp",
            "Hretry_stratum",
            "Hbadwork",
            "Hout",
            ":res",
            ";cp_prio",
            ":prio",
            "8pool_resus",
            ";hash_pop",
            "h:tmp",
            "`:hc",
            "\\5^A",
            ";clone_work",
            ":mrs",
            "gen_hash",
            "9len",
            ":hash1",
            "8bdiff_target_leadzero",
            ":data64",
            "h:h64",
            "X:d64",
            "`59cA",
            ":rtarget",
            "8set_work_target",
            ":rtarget",
            "@5dA",
            ":htarget",
            "8gen_stratum_work",
            ":coinbase",
            "P:merkle_root",
            ":merkle_sha",
            "~:header",
            ":merkle_hash",
            ":data32",
            "H:swap32",
            "@:alloc_len",
            "\\5gA",
            ":merkle_bin",
            "request_work",
            "9thr",
            "X5kA",
            ":proc",
            "get_work",
            "9thr",
            "@:tv_get",
            "h5lA",
            ":proc",
            "submit_work_async",
            "9work_in",
            "hashtest2",
            ":hash2_32",
            "_test_nonce2",
            "submit_nonce",
            "9thr",
            "h:bak_nonce",
            "PHout",
            "abandon_work",
            "9wdiff",
            "9hashes",
            "mt_disable_start",
            "mt_disable_finish",
            "l:api",
            "mt_disable",
            "8convert_to_work",
            "9val",
            "9tv_lp",
            " 9tv_lp_reply",
            "(:rc",
            ";select_longpoll_pool",
            "l53vA",
            "8wait_lpcurrent",
            ";save_curl_socket",
            "9vpool",
            "9purpose",
            "9addr",
            "h:sock",
            "h:start",
            ":reply",
            ":end",
            "~:curl",
            "d:lp_url",
            "~Hretry_pool",
            "Hout",
            "Hlpfail",
            ":val",
            ":soval",
            "@:lpreq",
            "CQyA",
            "CqyA",
            "8stop_longpoll",
            "l5{A",
            "8start_longpoll",
            "l5z|A",
            "8reap_curl",
            ":ent",
            "h:iter",
            "`:now",
            "P:reaped",
            ";watchpool_thread",
            "\\5~A",
            ":now",
            ":shares",
            "mt_enable",
            "9thr",
            "proc_enable",
            ";watchdog_thread",
            ":interval",
            "P:zero_tv",
            "\\:now",
            ":thr",
            ":thr",
            ":thr",
            ":denable",
            ":dev_str",
            ":gpu",
            ":engineclock",
            "~:memclock",
            "~:activity",
            "~:fanspeed",
            "~:fanpercent",
            "~:powertune",
            "~:temp",
            "~:vddc",
            ":thrid",
            "X:cgpu_idle",
            "8log_print_status",
            "print_summary",
            ":hours",
            "L:mins",
            "H:secs",
            "PChA",
            "Eclean_up",
            "quit",
            "9status",
            "9format",
            ",:ap",
            "H5kA",
            "curses_input",
            "9query",
            "add_pool_details",
            "9live",
            "9url",
            "9user",
            "9pass",
            ";input_pool",
            "9live",
            ":url",
            "X:user",
            "P:pass",
            ":ret",
            "GHout",
            "enable_curses",
            "register_device",
            "renumber_cgpu",
            ":devids",
            ";my_blkmaker_sha256_callback",
            "9digest",
            "9buffer",
            "9length",
            "main",
            "9argc",
            "9argv",
            ":pools_active",
            ":handler",
            "}:thr",
            ":err",
            "Hbegin_bench",
            "Hfound_active_pool",
            "~:api",
            ":max_staged",
            "t {l",
            "t {l",
            "u H1",
            ":altpool",
            ":last_work",
            "4packagename",
            "4opt_benchmark",
            "4want_longpoll",
            "4want_gbt",
            "4want_getwork",
            "4opt_coinbase_script",
            "4template_nonce",
            "4want_stratum",
            "4opt_retries",
            "4opt_time",
            "4detect_algo",
            "4opt_nogpu",
            "4devices_enabled",
            "4opt_removedisabled",
            "4opt_submit_stale",
            "4opt_shares",
            "4opt_submit_threads",
            "4gwsched_thr_id",
            "4stage_thr_id",
            "4watchpool_thr_id",
            "4watchdog_thr_id",
            "4input_thr_id",
            "4api_thr_id",
            "4total_threads",
            "4qd_lock",
            "4stgd_lock",
            "4blk_lock",
            "4sshare_lock",
            "4lp_lock",
            "4lp_cond",
            "4total_tv_start",
            "4total_tv_end",
            "4miner_started",
            "4submitting_lock",
            "4total_submitting",
            "4submit_waiting",
            "4staged_rollable",
            "4currentpool",
            "4total_urls",
            "4total_users",
            "4total_passes",
            ":curses_active",
            ":current_block",
            ":current_hash",
            ":current_block_id",
            ":datestamp",
            ":blocktime",
            ":best_share",
            ":block_diff",
            ":known_blkheight_current",
            ":known_blkheight",
            ":known_blkheight_blkid",
            ":blocks",
            ":stratum_shares",
            ":def_conf",
            ":config_loaded",
            ":include_count",
            ":total_work",
            ":sharelog_lock",
            ":sharelog_file",
            ":getwork_req",
            ":temp_cutoff_str",
            ":temp_target_str",
            ":opt_config_table",
            ":fileconf_load",
            ":opt_cmdline_table",
            ":workpadding",
            ":statusline",
            ":devcursor",
            ":logstart",
            ":logcursor",
            ":statusy",
            ":devsummaryYOffset",
            ":total_lines",
            ":_unitchar",
            ":h2bs_fmt_size",
            ":dev_width",
            ":device_line_id_count",
            ":diffone",
            ":DIFFEXACTONE",
            ":initial_args",
            ":jedata",
            ":rotate_tv",
            ":cgminer_id_count",
            "LLINES",
            "Lstdscr",
            "Nopt_hidden",
            "Nblkmk_sha256_impl",
            "Nopt_debug",
            "Nopt_debug_console",
            "Nopt_log_output",
            "Oopt_realquiet",
            "Owant_per_device_stats",
            "Oopt_protocol",
            "Oopt_coinbase_sig",
            "Ohave_longpoll",
            "Oopt_skip_checks",
            "Oopt_kernel_path",
            "Popt_socks_proxy",
            "Ocgminer_path",
            "Oopt_fail_only",
            "Oopt_autofan",
            "Oopt_autoengine",
            "Ouse_curses",
            "Oopt_api_allow",
            "Oopt_api_groups",
            "Oopt_api_description",
            "Oopt_api_port",
            "Oopt_api_listen",
            "Oopt_api_network",
            "Oopt_delaynet",
            "Oopt_restart",
            "Oopt_icarus_options",
            "Oopt_icarus_timing",
            "Oopt_worktime",
            "Oopt_bfl_noncerange",
            "Pswork_id",
            "Onetacc_lock",
            "Oopt_queue",
            "Oopt_scantime",
            "Oopt_expiry",
            "Ohash_lock",
            "Oconsole_lock",
            "Och_lock",
            "Oenabled_pools",
            "Oscan_devices",
            "Oopt_force_dev_init",
            "OnDevs",
            "Oopt_n_threads",
            "Onum_processors",
            "Ouse_syslog",
            "Oopt_quiet",
            "Pgpus",
            "Ogpu_threads",
            "Oopt_scrypt",
            "Ptotal_secs",
            "Omining_threads",
            "Pcpus",
            "Ototal_devices",
            "Odevices",
            "Ototal_pools",
            "Opools",
            "Oopt_rotate_period",
            "Ototal_mhashes_done",
            "Onew_blocks",
            "Ofound_blocks",
            "Ototal_accepted",
            "Ototal_rejected",
            "Ototal_diff1",
            "Ototal_getworks",
            "Ototal_stale",
            "Ototal_discarded",
            "Ototal_bytes_xfer",
            "Ototal_diff_accepted",
            "Ototal_diff_rejected",
            "Ototal_diff_stale",
            "Olocal_work",
            "Ototal_go",
            "Ototal_ro",
            "Oopt_cutofftemp",
            "Oopt_hysteresis",
            "Oopt_fail_pause",
            "Oopt_log_interval",
            "Oglobal_hashrate",
            "Pcurrent_fullhash",
            "Pblock_timeval",
            "Lsuccessful_connect",
            "Oadl_active",
            "Oopt_reorder",
            "Oopt_targettemp",
            "Oopt_overheattemp",
            "Pcpu_api",
            "Ohave_opencl",
            "Nopt_platform_id",
            "Nopencl_api",
            "Orequest_target_str",
            "Orequest_pdiff",
            "Orequest_bdiff",
            "Oopt_quiet_work_updates",
            "Oopt_loginput",
            "Oopt_compact",
            "Oopt_show_procs",
            "Oopt_expiry_lp",
            "Oopt_bench_algo",
            "Oopt_dynamic_interval",
            "Oopt_g_threads",
            "Oopt_noadl",
            "Oopt_disable_pool",
            "Ogpur_thr_id",
            "Ogws_cond",
            "Oshutting_down",
            "Ocontrol_lock",
            "Ostats_lock",
            "Osubmit_waiting_notifier",
            "Ptermhandler",
            "Pinthandler",
            "Pgetq",
            "Pstaged_work",
            "Pschedstart",
            "Pschedstop",
            "Psched_paused",
            "Pcnfbuf",
            "Lopt_argv0",
            "Pmainwin",
            "Pstatuswin",
            "Plogwin",
            "Lbitforce_api",
            "Lcairnsmore_api",
            "Licarus_api",
            "Lmodminer_api",
            "Lx6500_api",
            "Lztex_api",
            "GNU C 4.6.3",
            "deviceapi.c",
            "/home/luke-jr/Projects/Education/Tonal/BitCoin/cgminer",
            "char",
            "size_t",
            "long long unsigned int",
            "long long int",
            "ptrdiff_t",
            "short unsigned int",
            "long int",
            "__time64_t",
            "time_t",
            "unsigned int",
            "long unsigned int",
            "unsigned char",
            "DWORD",
            "float",
            "signed char",
            "short int",
            "UINT_PTR",
            "double",
            "long double",
            "\ttimeval",
            "tv_sec",
            "tv_usec",
            "u_int",
            "SOCKET",
            "fd_set",
            "fd_count",
            "fd_array",
            "fd_set",
            "uint8_t",
            "int16_t",
            "uint16_t",
            "uint32_t",
            "int64_t",
            "uint64_t",
            "\ttimespec",
            "tv_sec",
            "tv_nsec",
            "ptw32_handle_t",
            "pthread_t",
            "pthread_mutex_t",
            "pthread_mutex_t_",
            "pthread_cond_t",
            "pthread_cond_t_",
            "PTHREAD_CREATE_JOINABLE",
            "PTHREAD_CREATE_DETACHED",
            "PTHREAD_INHERIT_SCHED",
            "PTHREAD_EXPLICIT_SCHED",
            "PTHREAD_SCOPE_PROCESS",
            "PTHREAD_SCOPE_SYSTEM",
            "PTHREAD_CANCEL_ENABLE",
            "PTHREAD_CANCEL_DISABLE",
            "PTHREAD_CANCEL_ASYNCHRONOUS",
            "PTHREAD_CANCEL_DEFERRED",
            "PTHREAD_PROCESS_PRIVATE",
            "PTHREAD_PROCESS_SHARED",
            "PTHREAD_MUTEX_STALLED",
            "PTHREAD_MUTEX_ROBUST",
            "PTHREAD_BARRIER_SERIAL_THREAD",
            "\t_iobuf",
            "_ptr",
            "_cnt",
            "_base",
            "_flag",
            "_file",
            "_charbuf",
            "_bufsiz",
            "_tmpfname",
            "FILE",
            "CURL",
            "curl_socket_t",
            "blkheight_t",
            "libblkmaker_hash_t",
            "blkhash_t",
            "txnhash_t",
            "blktime_t",
            "blktime_diff_t",
            "blknonce_t",
            "\tblktxn_t",
            "data",
            "datasz",
            "hash",
            "dependcount",
            "depends",
            "required",
            "sigops",
            "_Bool",
            "\tblktmpl_longpoll_req",
            "GBT_CBTXN",
            "GBT_CBVALUE",
            "GBT_WORKID",
            "GBT_LONGPOLL",
            "GBT_PROPOSAL",
            "GBT_SERVICE",
            "BMM_CBAPPEND",
            "BMM_CBSET",
            "BMM_GENERATE",
            "BMM_TIMEINC",
            "BMM_TIMEDEC",
            "BMM_TXNADD",
            "BMM_PREVBLK",
            "BMM_VERFORCE",
            "BMM_VERDROP",
            "BMA_TXNHASH",
            "BMAb_COINBASE",
            "BMAb_TRUNCATE",
            "BMAs_COINBASE",
            "BMAs_MERKLE",
            "BMAs_TRUNCATE",
            "gbt_capabilities_t",
            "blkmutations_t",
            "version",
            "diffbits",
            "height",
            "prevblk",
            "sigoplimit",
            "sizelimit",
            "txncount",
            "txns",
            "cbtxn",
            "cbvalue",
            "_time_rcvd",
            "curtime",
            "auxcount",
            "auxnames",
            "auxdata",
            "workid",
            "submitold",
            "expires",
            "target",
            "mutations",
            "maxtime",
            "maxtimeoff",
            "mintime",
            "mintimeoff",
            "minnonce",
            "maxnonce",
            "_mrklroot",
            "next_dataid",
            "blktemplate_t",
            "\tlist_head",
            "next",
            "prev",
            "hh_head",
            "count",
            "expand_mult",
            "prev",
            "next",
            "hh_prev",
            "hh_next",
            "keylen",
            "hashv",
            "UT_hash_table",
            "buckets",
            "num_buckets",
            "log2_num_buckets",
            "num_items",
            "tail",
            "ideal_chain_maxlen",
            "nonideal_items",
            "ineff_expands",
            "noexpand",
            "signature",
            "LOG_ERR",
            "LOG_WARNING",
            "LOG_NOTICE",
            "LOG_INFO",
            "LOG_DEBUG",
            "notifier_t",
            "cl_uint",
            "cl_ulong",
            "iVddc",
            "iActivityPercent",
            "iCurrentPerformanceLevel",
            "iCurrentBusSpeed",
            "iCurrentBusLanes",
            "iMaximumBusLanes",
            "iTemperature",
            "iFlags",
            "iMinPercent",
            "iMaxPercent",
            "iMinRPM",
            "iMaxRPM",
            "iSpeedType",
            "iFanSpeed",
            "iFlags",
            "iMin",
            "iMax",
            "iStep",
            "iNumberOfPerformanceLevels",
            "iActivityReportingSupported",
            "iDiscretePerformanceLevels",
            "sEngineClock",
            "sMemoryClock",
            "sVddc",
            "iVddc",
            "aLevels",
            "libusb_device_descriptor",
            "bLength",
            "bDescriptorType",
            "bcdUSB",
            "bDeviceClass",
            "bDeviceSubClass",
            "bDeviceProtocol",
            "bMaxPacketSize0",
            "idVendor",
            "idProduct",
            "bcdDevice",
            "iManufacturer",
            "iProduct",
            "iSerialNumber",
            "bNumConfigurations",
            "dclk_data",
            "freqM",
            "freqMaxM",
            "freqMDefault",
            "minGoodSamples",
            "errorCount",
            "errorWeight",
            "errorRate",
            "maxErrorRate",
            "thr_info",
            "device_thread",
            "primary_thread",
            "last",
            "sick",
            "scanhash_working",
            "tv_hashes_done",
            "tv_lastupdate",
            "pause",
            "getwork",
            "rolling",
            "prev_work",
            "next_work",
            "tv_morework",
            "results_work",
            "_job_transition_in_progress",
            "_proceed_with_new_job",
            "tv_results_jobstart",
            "tv_jobstart",
            "tv_poll",
            "notifier",
            "starting_next_work",
            "_max_nonce",
            "work_restart",
            "work_restart_notifier",
            "libztex_device",
            "mutex",
            "root",
            "fpgaNum",
            "descriptor",
            "hndl",
            "usbbus",
            "usbaddress",
            "snString",
            "productId",
            "fwVersion",
            "interfaceVersion",
            "interfaceCapabilities",
            "moduleReserved",
            "numNonces",
            "offsNonces",
            "freqM1",
            "bitFileName",
            "suspendSupported",
            "hashesPerClock",
            "extraSolutions",
            "dclk",
            "numberOfFpgas",
            "selectedFpga",
            "parallelConfigSupport",
            "repr",
            "alive",
            "LIFE_WELL",
            "LIFE_SICK",
            "LIFE_DEAD",
            "LIFE_NOSTART",
            "LIFE_INIT",
            "LIFE_WAIT",
            "gpu_adl",
            "lpTemperature",
            "iAdapterIndex",
            "lpAdapterID",
            "iBusNumber",
            "strAdapterName",
            "lpActivity",
            "lpOdParameters",
            "DefPerfLev",
            "lpFanSpeedInfo",
            "lpFanSpeedValue",
            "DefFanSpeedValue",
            "iVddc",
            "iPercentage",
            "autofan",
            "autoengine",
            "managed",
            "lastengine",
            "lasttemp",
            "targetfan",
            "overtemp",
            "minspeed",
            "maxspeed",
            "has_fanspeed",
            "twin",
            "device_api",
            "dname",
            "name",
            "api_detect",
            "get_dev_statline_before",
            "get_dev_statline_after",
            "reinit_device",
            "get_statline_before",
            "get_statline",
            "get_api_extra_device_detail",
            "get_api_extra_device_status",
            "get_api_stats",
            "get_stats",
            "identify_device",
            "set_device",
            "thread_prepare",
            "minerloop",
            "can_limit_work",
            "thread_init",
            "prepare_work",
            "scanhash",
            "hw_error",
            "thread_shutdown",
            "thread_enable",
            "poll",
            "job_prepare",
            "job_start",
            "job_get_results",
            "job_process_results",
            "!cgpu_info",
            "cgminer_id",
            "device_line_id",
            "devtype",
            "device_id",
            "dev_repr",
            "dev_repr_ns",
            "name",
            "procs",
            "proc_id",
            "proc_repr",
            "proc_repr_ns",
            "device",
            "next_proc",
            "device_path",
            "device_file",
            "#h\"0",
            "work_start_tv",
            "wait_ms",
            "sleep_ms",
            "avg_wait_f",
            "avg_wait_d",
            "nonces",
            "polling",
            "flash_led",
            "device_mutex",
            "deven",
            "hw_errors",
            "rolling",
            "total_mhashes",
            "utility",
            "utility_diff1",
            "status",
            "init",
            "last_message_tv",
            "threads",
            "max_hashes",
            "kname",
            "mapped",
            "virtual_gpu",
            "virtual_adl",
            "intensity",
            "dynamic",
            "vwidth",
            "work_size",
            "kernel",
            "max_alloc",
            "opt_lg",
            "lookup_gap",
            "opt_tc",
            "thread_concurrency",
            "shaders",
            "tv_gpustart",
            "intervals",
            "temp",
            "cutofftemp",
            "targettemp",
            "has_adl",
            "gpu_engine",
            "min_engine",
            "gpu_fan",
            "min_fan",
            "gpu_memclock",
            "gpu_memdiff",
            "gpu_powertune",
            "gpu_vddc",
            "diff1",
            "last_share_pool",
            "last_share_pool_time",
            "device_last_well",
            "device_last_not_well",
            "device_not_well_reason",
            "reinit_backoff",
            "thread_fail_init_count",
            "thread_zero_hash_count",
            "thread_fail_queue_count",
            "dev_sick_idle_60_count",
            "dev_dead_idle_600_count",
            "dev_nostart_count",
            "dev_over_heat_count",
            "dev_thermal_cutoff_count",
            "dev_comms_error_count",
            "dev_throttle_count",
            "api_data",
            "type",
            "name",
            "data",
            "data_was_malloc",
            "prev",
            "next",
            "data",
            "midstate",
            "target",
            "hash",
            "rolls",
            "pool",
            "tv_staged",
            "mined",
            "clone",
            "cloned",
            "longpoll",
            "stale",
            "mandatory",
            "block",
            "queued",
            "stratum",
            "job_id",
            "nonce2",
            "ntime",
            "sdiff",
            "work_difficulty",
            "tmpl",
            "tmpl_refcount",
            "dataid",
            "tv_getwork",
            "tv_getwork_reply",
            "tv_cloned",
            "tv_work_start",
            "tv_work_found",
            "getwork_mode",
            "list",
            "%dev_enable",
            "DEV_ENABLED",
            "DEV_DISABLED",
            "DEV_RECOVER",
            "DEV_RECOVER_ERR",
            "%cl_kernels",
            "KL_NONE",
            "KL_POCLBM",
            "KL_PHATK",
            "KL_DIAKGCN",
            "KL_DIABLO",
            "KL_SCRYPT",
            "dev_reason",
            "REASON_THREAD_FAIL_INIT",
            "REASON_THREAD_ZERO_HASH",
            "REASON_THREAD_FAIL_QUEUE",
            "REASON_DEV_SICK_IDLE_60",
            "REASON_DEV_DEAD_IDLE_600",
            "REASON_DEV_NOSTART",
            "REASON_DEV_OVER_HEAT",
            "REASON_DEV_THERMAL_CUTOFF",
            "REASON_DEV_COMMS_ERROR",
            "REASON_DEV_THROTTLE",
            "_get_start",
            "getwork_attempts",
            "getwork_wait_rolling",
            "hadrolltime",
            "canroll",
            "hadexpire",
            "min_diff",
            "max_diff",
            "last_diff",
            "min_diff_count",
            "max_diff_count",
            "times_sent",
            "bytes_sent",
            "net_bytes_sent",
            "times_received",
            "bytes_received",
            "net_bytes_received",
            "'device_ztex",
            "'device_fd",
            "'device_ft232r",
            "ft232r_device_handle",
            "thread_q",
            "frozen",
            "mutex",
            "cond",
            "ctx_a",
            "ctx_b",
            "ctx_c",
            "ctx_d",
            "ctx_e",
            "ctx_f",
            "ctx_g",
            "ctx_h",
            "cty_a",
            "cty_b",
            "cty_c",
            "cty_d",
            "cty_e",
            "cty_f",
            "cty_g",
            "cty_h",
            "merkle",
            "ntime",
            "nbits",
            "nonce",
            "fW15",
            "fW01r",
            "fcty_e",
            "fcty_e2",
            "PreVal4",
            "C1addK5",
            "W17_2",
            "PreVal4addT1",
            "T1substate0",
            "PreVal4_2",
            "PreVal0",
            "PreW18",
            "PreW19",
            "PreW31",
            "PreW32",
            "B1addK6",
            "PreVal0addK7",
            "W16addK16",
            "W17addK17",
            "zeroA",
            "zeroB",
            "oneA",
            "twoA",
            "threeA",
            "fourA",
            "fiveA",
            "sixA",
            "sevenA",
            "dev_blk_ctx",
            "%pool_enable",
            "POOL_DISABLED",
            "POOL_ENABLED",
            "POOL_REJECTING",
            "%pool_protocol",
            "PLP_NONE",
            "PLP_GETWORK",
            "PLP_GETBLOCKTEMPLATE",
            "stratum_work",
            "job_id",
            "prev_hash",
            "coinbase1",
            "coinbase2",
            "merkle",
            "bbversion",
            "nbit",
            "ntime",
            "clean",
            "cb1_len",
            "cb2_len",
            "cb_len",
            "header_len",
            "merkles",
            "diff",
            "transparency_probed",
            "transparency_time",
            "opaque",
            "!pool",
            "pool_no",
            "prio",
            "seq_rejects",
            "seq_getfails",
            "solved",
            "diff1",
            "diff",
            "diff_stale",
            "submit_fail",
            "idle",
            "lagging",
            "probed",
            "force_rollntime",
            "enabled",
            "submit_old",
            "removed",
            "lp_started",
            "block_id",
            "proto",
            "hdr_path",
            "lp_url",
            "lp_id",
            "lp_proto",
            "lp_socket",
            "getwork_requested",
            "stale_shares",
            "discarded_work",
            "getfail_occasions",
            "remotefail_occasions",
            "tv_idle",
            "utility",
            "last_shares",
            "shares",
            "rpc_url",
            "rpc_userpass",
            "rpc_user",
            "rpc_pass",
            "rpc_proxy",
            "pool_lock",
            "submit_q",
            "getwork_q",
            "longpoll_thread",
            "submit_thread",
            "getwork_thread",
            "curls",
            "cr_cond",
            "curlring",
            "sws_waiting_on_curl",
            "last_share_time",
            "best_diff",
            "stratum_url",
            "stratum_port",
            "stratum_curl",
            "sock",
            "sockbuf",
            "sockbuf_size",
            "sockaddr_url",
            "nonce1",
            "n1_len",
            "nonce2",
            "n2size",
            "has_stratum",
            "stratum_active",
            "last_work_time",
            "stratum_auth",
            "stratum_notify",
            "swork",
            "stratum_thread",
            "stratum_lock",
            "last_work_lock",
            "last_work_copy",
            "submit_work_state",
            "%api_data_type",
            "API_ESCAPE",
            "API_STRING",
            "API_CONST",
            "API_INT",
            "API_UINT",
            "API_UINT32",
            "API_UINT64",
            "API_DOUBLE",
            "API_ELAPSED",
            "API_BOOL",
            "API_TIMEVAL",
            "API_TIME",
            "API_MHS",
            "API_MHTOTAL",
            "API_TEMP",
            "API_UTILITY",
            "API_FREQ",
            "API_VOLTS",
            "API_HS",
            "API_DIFF",
            "API_JSON",
            "(nanosleep",
            ")req",
            ")rem",
            "*tstart",
            "`*msecs",
            "l+2A",
            "*tdone",
            "P*tnow",
            "@*tleft",
            ",_curl_easy_setopt_err_long",
            ",_curl_easy_setopt_err_curl_off_t",
            ",_curl_easy_setopt_err_string",
            ",_curl_easy_setopt_err_write_callback",
            ",_curl_easy_setopt_err_read_cb",
            ",_curl_easy_setopt_err_ioctl_cb",
            ",_curl_easy_setopt_err_sockopt_cb",
            ",_curl_easy_setopt_err_opensocket_cb",
            ",_curl_easy_setopt_err_progress_cb",
            ",_curl_easy_setopt_err_debug_cb",
            ",_curl_easy_setopt_err_ssl_ctx_cb",
            ",_curl_easy_setopt_err_conv_cb",
            ",_curl_easy_setopt_err_seek_cb",
            ",_curl_easy_setopt_err_cb_data",
            ",_curl_easy_setopt_err_error_buffer",
            ",_curl_easy_setopt_err_FILE",
            ",_curl_easy_setopt_err_postfields",
            ",_curl_easy_setopt_err_curl_httpost",
            ",_curl_easy_setopt_err_curl_slist",
            ",_curl_easy_setopt_err_CURLSH",
            ",_curl_easy_getinfo_err_string",
            ",_curl_easy_getinfo_err_long",
            ",_curl_easy_getinfo_err_double",
            ",_curl_easy_getinfo_err_curl_slist",
            "-set_maxfd",
            ")p_maxfd",
            "(timer_passed",
            ")tvp_timer",
            "-reduce_timeout_to",
            ")tvp_time",
            "(select_timeout",
            ")thr",
            ")tvp_hashes",
            "h*cycle",
            "*now",
            "*mult",
            "minerloop_scanhash",
            "`*api",
            "X*tv_start",
            "*tv_end",
            "H*primary",
            "*rgtp",
            "do_job_prepare",
            "h*api",
            "job_prepare_complete",
            "do_get_results",
            ")proceed_with_new_job",
            "h*api",
            "job_results_fetched",
            "do_job_start",
            "h*api",
            "mt_job_transition",
            "job_start_complete",
            "job_start_abort",
            "7failure",
            "do_process_results",
            "7stopping",
            "`:api",
            "minerloop_async",
            "X:api",
            "@:tv_timeout",
            "h:maxfd",
            ":rfds",
            "}:is_running",
            "O:should_be_running",
            "N;djp",
            ":__i",
            ":__i",
            "miner_thread",
            "7userdata",
            "P:api",
            "H:threadname",
            ";out",
            ":slave",
            "add_cgpu",
            ":lpcount",
            "@+IA",
            ":tpp",
            ":nlp_p",
            "H:slave",
            "=opt_restart",
            "=total_devices",
            "=devices",
            "=opt_log_interval",
            "GNU C 4.6.3",
            "util.c",
            "/home/luke-jr/Projects/Education/Tonal/BitCoin/cgminer",
            "char",
            "size_t",
            "long long unsigned int",
            "ssize_t",
            "long long int",
            "intptr_t",
            "ptrdiff_t",
            "short unsigned int",
            "long int",
            "__time64_t",
            "time_t",
            "unsigned int",
            "long unsigned int",
            "unsigned char",
            "_iobuf",
            "_ptr",
            "_cnt",
            "_base",
            "_flag",
            "_file",
            "_charbuf",
            "_bufsiz",
            "_tmpfname",
            "FILE",
            "_ldiv_t",
            "quot",
            "ldiv_t",
            "double",
            "float",
            "long double",
            "timeval",
            "tv_sec",
            "tv_usec",
            "short int",
            "timespec",
            "tv_sec",
            "tv_nsec",
            "ptw32_handle_t",
            "pthread_t",
            "pthread_attr_t",
            "pthread_attr_t_",
            "pthread_mutex_t",
            "pthread_mutex_t_",
            "pthread_cond_t",
            "pthread_cond_t_",
            "pthread_rwlock_t",
            "pthread_rwlock_t_",
            "JSON_OBJECT",
            "JSON_ARRAY",
            "JSON_STRING",
            "JSON_INTEGER",
            "JSON_REAL",
            "JSON_TRUE",
            "JSON_FALSE",
            "JSON_NULL",
            "json_type",
            "type",
            "refcount",
            "json_t",
            "line",
            "column",
            "position",
            "source",
            "text",
            "json_error_t",
            "DWORD",
            "signed char",
            "UINT_PTR",
            "CHAR",
            "LPSTR",
            "LPTSTR",
            "u_char",
            "u_short",
            "u_int",
            "u_long",
            "s_b1",
            "s_b2",
            "s_b3",
            "s_b4",
            "s_w1",
            "s_w2",
            "S_un_b",
            "S_un_w",
            "S_addr",
            "in_addr",
            "S_un",
            "SOCKET",
            "fd_set",
            "fd_count",
            "fd_array",
            "fd_set",
            "sockaddr_in",
            "sin_family",
            "sin_port",
            "sin_addr",
            "sin_zero",
            "sockaddr",
            "sa_family",
            "sa_data",
            "socklen_t",
            "tcp_keepalive",
            "onoff",
            "keepalivetime",
            "keepaliveinterval",
            "uint8_t",
            "int16_t",
            "uint16_t",
            "uint32_t",
            "int64_t",
            "uint64_t",
            "CURL",
            "curl_socket_t",
            "curl_slist",
            "CURLSOCKTYPE_IPCXN",
            "CURLSOCKTYPE_ACCEPT",
            "CURLSOCKTYPE_LAST",
            "curlsocktype",
            "curl_sockaddr",
            "family",
            "socktype",
            "protocol",
            "addrlen",
            "addr",
            "CURLINFO_TEXT",
            "CURLINFO_HEADER_IN",
            "CURLINFO_HEADER_OUT",
            "CURLINFO_DATA_IN",
            "CURLINFO_DATA_OUT",
            "CURLINFO_SSL_DATA_IN",
            "CURLINFO_SSL_DATA_OUT",
            "CURLINFO_END",
            "curl_infotype",
            "CURLE_OK",
            "CURLE_UNSUPPORTED_PROTOCOL",
            "CURLE_FAILED_INIT",
            "CURLE_URL_MALFORMAT",
            "CURLE_NOT_BUILT_IN",
            "CURLE_COULDNT_RESOLVE_PROXY",
            "CURLE_COULDNT_RESOLVE_HOST",
            "CURLE_COULDNT_CONNECT",
            "CURLE_FTP_WEIRD_SERVER_REPLY",
            "CURLE_REMOTE_ACCESS_DENIED",
            "CURLE_FTP_ACCEPT_FAILED",
            "CURLE_FTP_WEIRD_PASS_REPLY",
            "CURLE_FTP_ACCEPT_TIMEOUT",
            "CURLE_FTP_WEIRD_PASV_REPLY",
            "CURLE_FTP_WEIRD_227_FORMAT",
            "CURLE_FTP_CANT_GET_HOST",
            "CURLE_OBSOLETE16",
            "CURLE_FTP_COULDNT_SET_TYPE",
            "CURLE_PARTIAL_FILE",
            "CURLE_FTP_COULDNT_RETR_FILE",
            "CURLE_OBSOLETE20",
            "CURLE_QUOTE_ERROR",
            "CURLE_HTTP_RETURNED_ERROR",
            "CURLE_WRITE_ERROR",
            "CURLE_OBSOLETE24",
            "CURLE_UPLOAD_FAILED",
            "CURLE_READ_ERROR",
            "CURLE_OUT_OF_MEMORY",
            "CURLE_OPERATION_TIMEDOUT",
            "CURLE_OBSOLETE29",
            "CURLE_FTP_PORT_FAILED",
            "CURLE_FTP_COULDNT_USE_REST",
            "CURLE_OBSOLETE32",
            "CURLE_RANGE_ERROR",
            "CURLE_HTTP_POST_ERROR",
            "CURLE_SSL_CONNECT_ERROR",
            "CURLE_BAD_DOWNLOAD_RESUME",
            "CURLE_FILE_COULDNT_READ_FILE",
            "CURLE_LDAP_CANNOT_BIND",
            "CURLE_LDAP_SEARCH_FAILED",
            "CURLE_OBSOLETE40",
            "CURLE_FUNCTION_NOT_FOUND",
            "CURLE_ABORTED_BY_CALLBACK",
            "CURLE_BAD_FUNCTION_ARGUMENT",
            "CURLE_OBSOLETE44",
            "CURLE_INTERFACE_FAILED",
            "CURLE_OBSOLETE46",
            "CURLE_TOO_MANY_REDIRECTS",
            "CURLE_UNKNOWN_OPTION",
            "CURLE_TELNET_OPTION_SYNTAX",
            "CURLE_OBSOLETE50",
            "CURLE_PEER_FAILED_VERIFICATION",
            "CURLE_GOT_NOTHING",
            "CURLE_SSL_ENGINE_NOTFOUND",
            "CURLE_SSL_ENGINE_SETFAILED",
            "CURLE_SEND_ERROR",
            "CURLE_RECV_ERROR",
            "CURLE_OBSOLETE57",
            "CURLE_SSL_CERTPROBLEM",
            "CURLE_SSL_CIPHER",
            "CURLE_SSL_CACERT",
            "CURLE_BAD_CONTENT_ENCODING",
            "CURLE_LDAP_INVALID_URL",
            "CURLE_FILESIZE_EXCEEDED",
            "CURLE_USE_SSL_FAILED",
            "CURLE_SEND_FAIL_REWIND",
            "CURLE_SSL_ENGINE_INITFAILED",
            "CURLE_LOGIN_DENIED",
            "CURLE_TFTP_NOTFOUND",
            "CURLE_TFTP_PERM",
            "CURLE_REMOTE_DISK_FULL",
            "CURLE_TFTP_ILLEGAL",
            "CURLE_TFTP_UNKNOWNID",
            "CURLE_REMOTE_FILE_EXISTS",
            "CURLE_TFTP_NOSUCHUSER",
            "CURLE_CONV_FAILED",
            "CURLE_CONV_REQD",
            "CURLE_SSL_CACERT_BADFILE",
            "CURLE_REMOTE_FILE_NOT_FOUND",
            "CURLE_SSH",
            "CURLE_SSL_SHUTDOWN_FAILED",
            "CURLE_AGAIN",
            "CURLE_SSL_CRL_BADFILE",
            "CURLE_SSL_ISSUER_ERROR",
            "CURLE_FTP_PRET_FAILED",
            "CURLE_RTSP_CSEQ_ERROR",
            "CURLE_RTSP_SESSION_ERROR",
            "CURLE_FTP_BAD_FILE_LIST",
            "CURLE_CHUNK_FAILED",
            "CURL_LAST",
            "CURLPROXY_HTTP",
            "CURLPROXY_HTTP_1_0",
            "CURLPROXY_SOCKS4",
            "CURLPROXY_SOCKS5",
            "CURLPROXY_SOCKS4A",
            "CURLPROXY_SOCKS5_HOSTNAME",
            "CURLUSESSL_NONE",
            "CURLUSESSL_TRY",
            "CURLUSESSL_CONTROL",
            "CURLUSESSL_ALL",
            "CURLUSESSL_LAST",
            "CURLOPT_FILE",
            "CURLOPT_URL",
            "CURLOPT_PORT",
            "CURLOPT_PROXY",
            "CURLOPT_USERPWD",
            "CURLOPT_PROXYUSERPWD",
            "CURLOPT_RANGE",
            "CURLOPT_INFILE",
            "CURLOPT_ERRORBUFFER",
            "CURLOPT_WRITEFUNCTION",
            "CURLOPT_READFUNCTION",
            "CURLOPT_TIMEOUT",
            "CURLOPT_INFILESIZE",
            "CURLOPT_POSTFIELDS",
            "CURLOPT_REFERER",
            "CURLOPT_FTPPORT",
            "CURLOPT_USERAGENT",
            "CURLOPT_LOW_SPEED_LIMIT",
            "CURLOPT_LOW_SPEED_TIME",
            "CURLOPT_RESUME_FROM",
            "CURLOPT_COOKIE",
            "CURLOPT_HTTPHEADER",
            "CURLOPT_HTTPPOST",
            "CURLOPT_SSLCERT",
            "CURLOPT_KEYPASSWD",
            "CURLOPT_CRLF",
            "CURLOPT_QUOTE",
            "CURLOPT_WRITEHEADER",
            "CURLOPT_COOKIEFILE",
            "CURLOPT_SSLVERSION",
            "CURLOPT_TIMECONDITION",
            "CURLOPT_TIMEVALUE",
            "CURLOPT_CUSTOMREQUEST",
            "CURLOPT_STDERR",
            "CURLOPT_POSTQUOTE",
            "CURLOPT_WRITEINFO",
            "CURLOPT_VERBOSE",
            "CURLOPT_HEADER",
            "CURLOPT_NOPROGRESS",
            "CURLOPT_NOBODY",
            "CURLOPT_FAILONERROR",
            "CURLOPT_UPLOAD",
            "CURLOPT_POST",
            "CURLOPT_DIRLISTONLY",
            "CURLOPT_APPEND",
            "CURLOPT_NETRC",
            "CURLOPT_FOLLOWLOCATION",
            "CURLOPT_TRANSFERTEXT",
            "CURLOPT_PUT",
            "CURLOPT_PROGRESSFUNCTION",
            "CURLOPT_PROGRESSDATA",
            "CURLOPT_AUTOREFERER",
            "CURLOPT_PROXYPORT",
            "CURLOPT_POSTFIELDSIZE",
            "CURLOPT_HTTPPROXYTUNNEL",
            "CURLOPT_INTERFACE",
            "CURLOPT_KRBLEVEL",
            "CURLOPT_SSL_VERIFYPEER",
            "CURLOPT_CAINFO",
            "CURLOPT_MAXREDIRS",
            "CURLOPT_FILETIME",
            "CURLOPT_TELNETOPTIONS",
            "CURLOPT_MAXCONNECTS",
            "CURLOPT_CLOSEPOLICY",
            "CURLOPT_FRESH_CONNECT",
            "CURLOPT_FORBID_REUSE",
            "CURLOPT_RANDOM_FILE",
            "CURLOPT_EGDSOCKET",
            "CURLOPT_CONNECTTIMEOUT",
            "CURLOPT_HEADERFUNCTION",
            "CURLOPT_HTTPGET",
            "CURLOPT_SSL_VERIFYHOST",
            "CURLOPT_COOKIEJAR",
            "CURLOPT_SSL_CIPHER_LIST",
            "CURLOPT_HTTP_VERSION",
            "CURLOPT_FTP_USE_EPSV",
            "CURLOPT_SSLCERTTYPE",
            "CURLOPT_SSLKEY",
            "CURLOPT_SSLKEYTYPE",
            "CURLOPT_SSLENGINE",
            "CURLOPT_SSLENGINE_DEFAULT",
            "CURLOPT_DNS_USE_GLOBAL_CACHE",
            "CURLOPT_DNS_CACHE_TIMEOUT",
            "CURLOPT_PREQUOTE",
            "CURLOPT_DEBUGFUNCTION",
            "CURLOPT_DEBUGDATA",
            "CURLOPT_COOKIESESSION",
            "CURLOPT_CAPATH",
            "CURLOPT_BUFFERSIZE",
            "CURLOPT_NOSIGNAL",
            "CURLOPT_SHARE",
            "CURLOPT_PROXYTYPE",
            "CURLOPT_ACCEPT_ENCODING",
            "CURLOPT_PRIVATE",
            "CURLOPT_HTTP200ALIASES",
            "CURLOPT_UNRESTRICTED_AUTH",
            "CURLOPT_FTP_USE_EPRT",
            "CURLOPT_HTTPAUTH",
            "CURLOPT_SSL_CTX_FUNCTION",
            "CURLOPT_SSL_CTX_DATA",
            "CURLOPT_FTP_CREATE_MISSING_DIRS",
            "CURLOPT_PROXYAUTH",
            "CURLOPT_FTP_RESPONSE_TIMEOUT",
            "CURLOPT_IPRESOLVE",
            "CURLOPT_MAXFILESIZE",
            "CURLOPT_INFILESIZE_LARGE",
            "CURLOPT_RESUME_FROM_LARGE",
            "CURLOPT_MAXFILESIZE_LARGE",
            "CURLOPT_NETRC_FILE",
            "CURLOPT_USE_SSL",
            "CURLOPT_POSTFIELDSIZE_LARGE",
            "CURLOPT_TCP_NODELAY",
            "CURLOPT_FTPSSLAUTH",
            "CURLOPT_IOCTLFUNCTION",
            "CURLOPT_IOCTLDATA",
            "CURLOPT_FTP_ACCOUNT",
            "CURLOPT_COOKIELIST",
            "CURLOPT_IGNORE_CONTENT_LENGTH",
            "CURLOPT_FTP_SKIP_PASV_IP",
            "CURLOPT_FTP_FILEMETHOD",
            "CURLOPT_LOCALPORT",
            "CURLOPT_LOCALPORTRANGE",
            "CURLOPT_CONNECT_ONLY",
            "CURLOPT_CONV_FROM_NETWORK_FUNCTION",
            "CURLOPT_CONV_TO_NETWORK_FUNCTION",
            "CURLOPT_CONV_FROM_UTF8_FUNCTION",
            "CURLOPT_MAX_SEND_SPEED_LARGE",
            "CURLOPT_MAX_RECV_SPEED_LARGE",
            "CURLOPT_FTP_ALTERNATIVE_TO_USER",
            "CURLOPT_SOCKOPTFUNCTION",
            "CURLOPT_SOCKOPTDATA",
            "CURLOPT_SSL_SESSIONID_CACHE",
            "CURLOPT_SSH_AUTH_TYPES",
            "CURLOPT_SSH_PUBLIC_KEYFILE",
            "CURLOPT_SSH_PRIVATE_KEYFILE",
            "CURLOPT_FTP_SSL_CCC",
            "CURLOPT_TIMEOUT_MS",
            "CURLOPT_CONNECTTIMEOUT_MS",
            "CURLOPT_HTTP_TRANSFER_DECODING",
            "CURLOPT_HTTP_CONTENT_DECODING",
            "CURLOPT_NEW_FILE_PERMS",
            "CURLOPT_NEW_DIRECTORY_PERMS",
            "CURLOPT_POSTREDIR",
            "CURLOPT_SSH_HOST_PUBLIC_KEY_MD5",
            "CURLOPT_OPENSOCKETFUNCTION",
            "CURLOPT_OPENSOCKETDATA",
            "CURLOPT_COPYPOSTFIELDS",
            "CURLOPT_PROXY_TRANSFER_MODE",
            "CURLOPT_SEEKFUNCTION",
            "CURLOPT_SEEKDATA",
            "CURLOPT_CRLFILE",
            "CURLOPT_ISSUERCERT",
            "CURLOPT_ADDRESS_SCOPE",
            "CURLOPT_CERTINFO",
            "CURLOPT_USERNAME",
            "CURLOPT_PASSWORD",
            "CURLOPT_PROXYUSERNAME",
            "CURLOPT_PROXYPASSWORD",
            "CURLOPT_NOPROXY",
            "CURLOPT_TFTP_BLKSIZE",
            "CURLOPT_SOCKS5_GSSAPI_SERVICE",
            "CURLOPT_SOCKS5_GSSAPI_NEC",
            "CURLOPT_PROTOCOLS",
            "CURLOPT_REDIR_PROTOCOLS",
            "CURLOPT_SSH_KNOWNHOSTS",
            "CURLOPT_SSH_KEYFUNCTION",
            "CURLOPT_SSH_KEYDATA",
            "CURLOPT_MAIL_FROM",
            "CURLOPT_MAIL_RCPT",
            "CURLOPT_FTP_USE_PRET",
            "CURLOPT_RTSP_REQUEST",
            "CURLOPT_RTSP_SESSION_ID",
            "CURLOPT_RTSP_STREAM_URI",
            "CURLOPT_RTSP_TRANSPORT",
            "CURLOPT_RTSP_CLIENT_CSEQ",
            "CURLOPT_RTSP_SERVER_CSEQ",
            "CURLOPT_INTERLEAVEDATA",
            "CURLOPT_INTERLEAVEFUNCTION",
            "CURLOPT_WILDCARDMATCH",
            "CURLOPT_CHUNK_BGN_FUNCTION",
            "CURLOPT_CHUNK_END_FUNCTION",
            "CURLOPT_FNMATCH_FUNCTION",
            "CURLOPT_CHUNK_DATA",
            "CURLOPT_FNMATCH_DATA",
            "CURLOPT_RESOLVE",
            "CURLOPT_TLSAUTH_USERNAME",
            "CURLOPT_TLSAUTH_PASSWORD",
            "CURLOPT_TLSAUTH_TYPE",
            "CURLOPT_TRANSFER_ENCODING",
            "CURLOPT_CLOSESOCKETFUNCTION",
            "CURLOPT_CLOSESOCKETDATA",
            "CURLOPT_GSSAPI_DELEGATION",
            "CURLOPT_DNS_SERVERS",
            "CURLOPT_ACCEPTTIMEOUT_MS",
            "CURLOPT_TCP_KEEPALIVE",
            "CURLOPT_TCP_KEEPIDLE",
            "CURLOPT_TCP_KEEPINTVL",
            "CURLOPT_SSL_OPTIONS",
            "CURLOPT_MAIL_AUTH",
            "CURLOPT_LASTENTRY",
            "CURLINFO_NONE",
            "CURLINFO_EFFECTIVE_URL",
            "CURLINFO_RESPONSE_CODE",
            "CURLINFO_TOTAL_TIME",
            "CURLINFO_NAMELOOKUP_TIME",
            "CURLINFO_CONNECT_TIME",
            "CURLINFO_PRETRANSFER_TIME",
            "CURLINFO_SIZE_UPLOAD",
            "CURLINFO_SIZE_DOWNLOAD",
            "CURLINFO_SPEED_DOWNLOAD",
            "CURLINFO_SPEED_UPLOAD",
            "CURLINFO_HEADER_SIZE",
            "CURLINFO_REQUEST_SIZE",
            "CURLINFO_SSL_VERIFYRESULT",
            "CURLINFO_FILETIME",
            "CURLINFO_CONTENT_LENGTH_DOWNLOAD",
            "CURLINFO_CONTENT_LENGTH_UPLOAD",
            "CURLINFO_STARTTRANSFER_TIME",
            "CURLINFO_CONTENT_TYPE",
            "CURLINFO_REDIRECT_TIME",
            "CURLINFO_REDIRECT_COUNT",
            "CURLINFO_PRIVATE",
            "CURLINFO_HTTP_CONNECTCODE",
            "CURLINFO_HTTPAUTH_AVAIL",
            "CURLINFO_PROXYAUTH_AVAIL",
            "CURLINFO_OS_ERRNO",
            "CURLINFO_NUM_CONNECTS",
            "CURLINFO_SSL_ENGINES",
            "CURLINFO_COOKIELIST",
            "CURLINFO_LASTSOCKET",
            "CURLINFO_FTP_ENTRY_PATH",
            "CURLINFO_REDIRECT_URL",
            "CURLINFO_PRIMARY_IP",
            "CURLINFO_APPCONNECT_TIME",
            "CURLINFO_CERTINFO",
            "CURLINFO_CONDITION_UNMET",
            "CURLINFO_RTSP_SESSION_ID",
            "CURLINFO_RTSP_CLIENT_CSEQ",
            "CURLINFO_RTSP_SERVER_CSEQ",
            "CURLINFO_RTSP_CSEQ_RECV",
            "CURLINFO_PRIMARY_PORT",
            "CURLINFO_LOCAL_IP",
            "CURLINFO_LOCAL_PORT",
            "CURLINFO_LASTONE",
            "CURLVERSION_FIRST",
            "CURLVERSION_SECOND",
            "CURLVERSION_THIRD",
            "CURLVERSION_FOURTH",
            "CURLVERSION_LAST",
            "CURLversion",
            "version",
            "version_num",
            "host",
            "features",
            "ssl_version",
            "ssl_version_num",
            "libz_version",
            "protocols",
            "ares",
            "ares_num",
            "libidn",
            "iconv_ver_num",
            "libssh_version",
            "curl_version_info_data",
            "blkheight_t",
            "libblkmaker_hash_t",
            "blkhash_t",
            "txnhash_t",
            "blktime_t",
            "blktime_diff_t",
            "blknonce_t",
            "blktxn_t",
            "datasz",
            "hash",
            "dependcount",
            "depends",
            "required",
            "sigops",
            "_Bool",
            "blktmpl_longpoll_req",
            "GBT_CBTXN",
            "GBT_CBVALUE",
            "GBT_WORKID",
            "GBT_LONGPOLL",
            "GBT_PROPOSAL",
            "GBT_SERVICE",
            "BMM_CBAPPEND",
            "BMM_CBSET",
            "BMM_GENERATE",
            "BMM_TIMEINC",
            "BMM_TIMEDEC",
            "BMM_TXNADD",
            "BMM_PREVBLK",
            "BMM_VERFORCE",
            "BMM_VERDROP",
            "BMA_TXNHASH",
            "BMAb_COINBASE",
            "BMAb_TRUNCATE",
            "BMAs_COINBASE",
            "BMAs_MERKLE",
            "BMAs_TRUNCATE",
            "gbt_capabilities_t",
            "blkmutations_t",
            "version",
            "diffbits",
            "height",
            "prevblk",
            "sigoplimit",
            "sizelimit",
            "txncount",
            "txns",
            "cbtxn",
            "cbvalue",
            "_time_rcvd",
            "curtime",
            "auxcount",
            "auxnames",
            "auxdata",
            "workid",
            "submitold",
            "expires",
            "mutations",
            "maxtime",
            "maxtimeoff",
            "mintime",
            "mintimeoff",
            "minnonce",
            "maxnonce",
            "_mrklroot",
            "next_dataid",
            "blktemplate_t",
            "list_head",
            "prev",
            "hh_head",
            "count",
            "expand_mult",
            "prev",
            "hh_prev",
            "hh_next",
            "keylen",
            "hashv",
            "UT_hash_table",
            "buckets",
            "num_buckets",
            "log2_num_buckets",
            "num_items",
            "tail",
            "ideal_chain_maxlen",
            "nonideal_items",
            "ineff_expands",
            "noexpand",
            "signature",
            "LOG_ERR",
            "LOG_WARNING",
            "LOG_NOTICE",
            "LOG_INFO",
            "LOG_DEBUG",
            "notifier_t",
            "cl_uint",
            "cl_ulong",
            "iVddc",
            "iActivityPercent",
            "iCurrentPerformanceLevel",
            "iCurrentBusSpeed",
            "iCurrentBusLanes",
            "iMaximumBusLanes",
            "iTemperature",
            "iFlags",
            "iMinPercent",
            "iMaxPercent",
            "iMinRPM",
            "iMaxRPM",
            "iSpeedType",
            "iFanSpeed",
            "iFlags",
            "iMin",
            "iMax",
            "iStep",
            "iNumberOfPerformanceLevels",
            "iActivityReportingSupported",
            "iDiscretePerformanceLevels",
            "sEngineClock",
            "sMemoryClock",
            "sVddc",
            "iVddc",
            "aLevels",
            "libusb_device_descriptor",
            "bLength",
            "bDescriptorType",
            "bcdUSB",
            "bDeviceClass",
            "bDeviceSubClass",
            "bDeviceProtocol",
            "bMaxPacketSize0",
            "idVendor",
            "idProduct",
            "bcdDevice",
            "iManufacturer",
            "iProduct",
            "iSerialNumber",
            "bNumConfigurations",
            "dclk_data",
            "freqM",
            "freqMaxM",
            "freqMDefault",
            "minGoodSamples",
            "errorCount",
            "errorWeight",
            "errorRate",
            "maxErrorRate",
            "thr_info",
            "device_thread",
            "primary_thread",
            "cgpu",
            "last",
            "sick",
            "scanhash_working",
            "hashes_done",
            "tv_hashes_done",
            "tv_lastupdate",
            "pause",
            "getwork",
            "rolling",
            "prev_work",
            "work",
            "next_work",
            "tv_morework",
            "results_work",
            "_job_transition_in_progress",
            "_proceed_with_new_job",
            "tv_results_jobstart",
            "tv_jobstart",
            "tv_poll",
            "notifier",
            "starting_next_work",
            "_max_nonce",
            "work_restart",
            "work_restart_notifier",
            "libztex_device",
            " !-A",
            "mutex",
            "root",
            "fpgaNum",
            "descriptor",
            "!1W:",
            "hndl",
            "usbbus",
            "usbaddress",
            "snString",
            "productId",
            "!6;3",
            "fwVersion",
            "interfaceVersion",
            "interfaceCapabilities",
            "moduleReserved",
            "numNonces",
            "offsNonces",
            "freqM1",
            "bitFileName",
            "suspendSupported",
            "!?9/",
            "hashesPerClock",
            "extraSolutions",
            "dclk",
            "numberOfFpgas",
            "selectedFpga",
            "parallelConfigSupport",
            "!G9/",
            "repr",
            "alive",
            "LIFE_WELL",
            "LIFE_SICK",
            "LIFE_DEAD",
            "LIFE_NOSTART",
            "LIFE_INIT",
            "LIFE_WAIT",
            "gpu_adl",
            "lpTemperature",
            "iAdapterIndex",
            "lpAdapterID",
            "iBusNumber",
            "strAdapterName",
            "lpActivity",
            "lpOdParameters",
            "DefPerfLev",
            "lpFanSpeedInfo",
            "lpFanSpeedValue",
            "DefFanSpeedValue",
            "iVddc",
            "iPercentage",
            "autofan",
            "autoengine",
            "managed",
            "lastengine",
            "lasttemp",
            "targetfan",
            "overtemp",
            "minspeed",
            "maxspeed",
            "has_fanspeed",
            "twin",
            "device_api",
            "dname",
            "name",
            "api_detect",
            "get_dev_statline_before",
            "get_dev_statline_after",
            "reinit_device",
            "get_statline_before",
            "get_statline",
            "get_api_extra_device_detail",
            "get_api_extra_device_status",
            "get_api_stats",
            "get_stats",
            "identify_device",
            "set_device",
            "thread_prepare",
            "minerloop",
            "can_limit_work",
            "thread_init",
            "prepare_work",
            "scanhash",
            "hw_error",
            "thread_shutdown",
            "thread_enable",
            "poll",
            "job_prepare",
            "job_start",
            "job_get_results",
            "job_process_results",
            "$cgpu_info",
            "cgminer_id",
            "device_line_id",
            "devtype",
            "device_id",
            "dev_repr",
            "dev_repr_ns",
            "name",
            "procs",
            "proc_id",
            "proc_repr",
            "proc_repr_ns",
            "device",
            "next_proc",
            "device_path",
            "device_file",
            "#h%X",
            "work_start_tv",
            "wait_ms",
            "sleep_ms",
            "avg_wait_f",
            "avg_wait_d",
            "nonces",
            "polling",
            "flash_led",
            "device_mutex",
            "deven",
            "hw_errors",
            "rolling",
            "total_mhashes",
            "utility",
            "utility_diff1",
            "status",
            "init",
            "last_message_tv",
            "threads",
            "max_hashes",
            "kname",
            "mapped",
            "virtual_gpu",
            "virtual_adl",
            "intensity",
            "dynamic",
            "vwidth",
            "work_size",
            "kernel",
            "max_alloc",
            "opt_lg",
            "lookup_gap",
            "opt_tc",
            "thread_concurrency",
            "shaders",
            "tv_gpustart",
            "intervals",
            "temp",
            "cutofftemp",
            "targettemp",
            "has_adl",
            "gpu_engine",
            "min_engine",
            "gpu_fan",
            "min_fan",
            "gpu_memclock",
            "gpu_memdiff",
            "gpu_powertune",
            "gpu_vddc",
            "diff1",
            "last_share_pool",
            "last_share_pool_time",
            "device_last_well",
            "device_last_not_well",
            "device_not_well_reason",
            "reinit_backoff",
            "thread_fail_init_count",
            "thread_zero_hash_count",
            "thread_fail_queue_count",
            "dev_sick_idle_60_count",
            "dev_dead_idle_600_count",
            "dev_nostart_count",
            "dev_over_heat_count",
            "dev_thermal_cutoff_count",
            "dev_comms_error_count",
            "dev_throttle_count",
            "api_data",
            "type",
            "name",
            "data_was_malloc",
            "prev",
            "$work",
            "midstate",
            "hash",
            "rolls",
            "thr_id",
            "tv_staged",
            "mined",
            "clone",
            "cloned",
            "stale",
            "mandatory",
            "block",
            "queued",
            "stratum",
            "nonce2",
            "sdiff",
            "work_difficulty",
            "tmpl",
            "tmpl_refcount",
            "dataid",
            "tv_getwork",
            "tv_getwork_reply",
            "tv_cloned",
            "tv_work_start",
            "tv_work_found",
            "getwork_mode",
            "list",
            "'dev_enable",
            "DEV_ENABLED",
            "DEV_DISABLED",
            "DEV_RECOVER",
            "DEV_RECOVER_ERR",
            "'cl_kernels",
            "KL_NONE",
            "KL_POCLBM",
            "KL_PHATK",
            "KL_DIAKGCN",
            "KL_DIABLO",
            "KL_SCRYPT",
            "dev_reason",
            "REASON_THREAD_FAIL_INIT",
            "REASON_THREAD_ZERO_HASH",
            "REASON_THREAD_FAIL_QUEUE",
            "REASON_DEV_SICK_IDLE_60",
            "REASON_DEV_DEAD_IDLE_600",
            "REASON_DEV_NOSTART",
            "REASON_DEV_OVER_HEAT",
            "REASON_DEV_THERMAL_CUTOFF",
            "REASON_DEV_COMMS_ERROR",
            "REASON_DEV_THROTTLE",
            "_get_start",
            "getwork_attempts",
            "getwork_wait_rolling",
            "canroll",
            "min_diff",
            "max_diff",
            "last_diff",
            "min_diff_count",
            "max_diff_count",
            "times_sent",
            "bytes_sent",
            "net_bytes_sent",
            "times_received",
            "bytes_received",
            "net_bytes_received",
            ")device_ztex",
            ")device_fd",
            ")device_ft232r",
            "ft232r_device_handle",
            "thread_q",
            "frozen",
            "mutex",
            "cond",
            "ctx_a",
            "ctx_b",
            "ctx_c",
            "ctx_d",
            "ctx_e",
            "ctx_f",
            "ctx_g",
            "ctx_h",
            "cty_a",
            "cty_b",
            "cty_c",
            "cty_d",
            "cty_e",
            "cty_f",
            "cty_g",
            "cty_h",
            "merkle",
            "nbits",
            "nonce",
            "fW15",
            "fW01r",
            "fcty_e",
            "fcty_e2",
            "PreVal4",
            "C1addK5",
            "W17_2",
            "PreVal4addT1",
            "T1substate0",
            "PreVal4_2",
            "PreVal0",
            "PreW18",
            "PreW19",
            "PreW31",
            "PreW32",
            "B1addK6",
            "PreVal0addK7",
            "W16addK16",
            "W17addK17",
            "zeroA",
            "zeroB",
            "oneA",
            "twoA",
            "threeA",
            "fourA",
            "fiveA",
            "sixA",
            "sevenA",
            "work",
            "dev_blk_ctx",
            "'pool_enable",
            "POOL_DISABLED",
            "POOL_ENABLED",
            "POOL_REJECTING",
            "'pool_protocol",
            "PLP_NONE",
            "PLP_GETWORK",
            "PLP_GETBLOCKTEMPLATE",
            "stratum_work",
            "merkle",
            "nbit",
            "clean",
            "cb1_len",
            "cb2_len",
            "cb_len",
            "header_len",
            "merkles",
            "diff",
            "transparency_probed",
            "transparency_time",
            "opaque",
            "pool_no",
            "prio",
            "seq_rejects",
            "seq_getfails",
            "solved",
            "diff1",
            "diff",
            "diff_stale",
            "submit_fail",
            "idle",
            "lagging",
            "probed",
            "force_rollntime",
            "enabled",
            "submit_old",
            "removed",
            "lp_started",
            "block_id",
            "proto",
            "hdr_path",
            "lp_url",
            "lp_id",
            "lp_proto",
            "lp_socket",
            "getwork_requested",
            "stale_shares",
            "discarded_work",
            "getfail_occasions",
            "remotefail_occasions",
            "tv_idle",
            "utility",
            "last_shares",
            "shares",
            "rpc_url",
            "rpc_userpass",
            "rpc_user",
            "rpc_pass",
            "rpc_proxy",
            "pool_lock",
            "submit_q",
            "getwork_q",
            "longpoll_thread",
            "submit_thread",
            "getwork_thread",
            "curls",
            "cr_cond",
            "curlring",
            "sws_waiting_on_curl",
            "last_share_time",
            "best_diff",
            "stratum_port",
            "stratum_curl",
            "sock",
            "sockbuf",
            "sockbuf_size",
            "sockaddr_url",
            "nonce1",
            "n1_len",
            "nonce2",
            "n2size",
            "has_stratum",
            "stratum_active",
            "last_work_time",
            "stratum_auth",
            "stratum_notify",
            "swork",
            "stratum_thread",
            "stratum_lock",
            "last_work_lock",
            "last_work_copy",
            "submit_work_state",
            "'api_data_type",
            "API_ESCAPE",
            "API_STRING",
            "API_CONST",
            "API_INT",
            "API_UINT",
            "API_UINT32",
            "API_UINT64",
            "API_DOUBLE",
            "API_ELAPSED",
            "API_BOOL",
            "API_TIMEVAL",
            "API_TIME",
            "API_MHS",
            "API_MHTOTAL",
            "API_TEMP",
            "API_UTILITY",
            "API_FREQ",
            "API_VOLTS",
            "API_HS",
            "API_DIFF",
            "API_JSON",
            "data_buffer",
            "idlemarker",
            "upload_buffer",
            "header_info",
            "lp_path",
            "reason",
            "canroll",
            "tq_ent",
            "q_node",
            "$json_rpc_call_state",
            "all_data",
            "priv",
            "headers",
            "upload_data",
            "+json_decref",
            ",json",
            "-_curl_easy_setopt_err_long",
            "-_curl_easy_setopt_err_curl_off_t",
            "-_curl_easy_setopt_err_string",
            "-_curl_easy_setopt_err_write_callback",
            "-_curl_easy_setopt_err_read_cb",
            "-_curl_easy_setopt_err_ioctl_cb",
            "-_curl_easy_setopt_err_sockopt_cb",
            "-_curl_easy_setopt_err_opensocket_cb",
            "-_curl_easy_setopt_err_progress_cb",
            "-_curl_easy_setopt_err_debug_cb",
            "-_curl_easy_setopt_err_ssl_ctx_cb",
            "-_curl_easy_setopt_err_conv_cb",
            "-_curl_easy_setopt_err_seek_cb",
            "-_curl_easy_setopt_err_cb_data",
            "-_curl_easy_setopt_err_error_buffer",
            "-_curl_easy_setopt_err_FILE",
            "-_curl_easy_setopt_err_postfields",
            "-_curl_easy_setopt_err_curl_httpost",
            "-_curl_easy_setopt_err_curl_slist",
            "-_curl_easy_setopt_err_CURLSH",
            "-_curl_easy_getinfo_err_string",
            "-_curl_easy_getinfo_err_long",
            "-_curl_easy_getinfo_err_double",
            "-_curl_easy_getinfo_err_curl_slist",
            "+__list_add",
            ",new",
            ",prev",
            "+list_add_tail",
            ",new",
            ",head",
            "+__list_del",
            ",prev",
            "+list_del",
            ",entry",
            "/list_empty",
            ",head",
            "/nanosleep",
            ",req",
            ",rem",
            "0tstart",
            "`0msecs",
            "l1FA",
            "0tdone",
            "P0tnow",
            "@0tleft",
            "+align_len",
            ",len",
            "2swab32",
            "4swap32yes",
            "3out",
            "5swapcounter",
            "4mutex_lock",
            "4mutex_unlock",
            "4wr_lock",
            "4rd_lock",
            "4rw_unlock",
            "4rd_unlock",
            "4wr_unlock",
            "+databuf_free",
            "/all_data_cb",
            ",ptr",
            ",size",
            ",nmemb",
            "`0oldlen",
            "X0newlen",
            "@0len",
            "P0newmem",
            "0zero",
            "0cptr",
            "H1LA",
            "/upload_data_cb",
            ",ptr",
            ",size",
            ",nmemb",
            "`0len",
            "/resp_hdr_cb",
            ",ptr",
            ",size",
            ",nmemb",
            "@0remlen",
            "X0slen",
            "0ptrlen",
            "0rem",
            "P0val",
            "H0key",
            "0tmp",
            "7out",
            "/keep_sockalive",
            "0tcp_keepidle",
            "h0tcp_keepintvl",
            "d0keepalive",
            "`0ret",
            "l5zero",
            "\\5vals",
            "P5outputBytes",
            "json_rpc_call_sockopt_cb",
            "3purpose",
            "4last_nettime",
            "3last",
            "9set_nettime",
            "2curl_debug_cb",
            "3handle",
            "3type",
            "3size",
            " :m\t",
            "5datacp",
            "json_rpc_call_async",
            "3curl",
            "3url",
            "3rpc_req",
            "z6m\t",
            "(3share",
            "z3priv",
            "85state",
            "L5len_hdr",
            "~5user_agent_hdr",
            "}5headers",
            "=@\tB",
            "=i\tB",
            "5ghashrate",
            "5now_msecs",
            "~5last_msecs",
            "~5now",
            "}5last",
            "5rgtp",
            "json_rpc_call_completed",
            "3curl",
            "3probe",
            "3out_priv",
            " 5state",
            ">err_out",
            "5val",
            "5err",
            "}:m\t",
            "X5probing",
            "5_curl_info",
            "json_rpc_call",
            "3curl",
            "3url",
            "3rpc_req",
            "3probe",
            "X6K\t",
            "06m\t",
            "83share",
            "T5rc",
            "our_curl_supports_proxy_uris",
            "absolute_uri",
            "3uri",
            "3ref",
            "5copy_start",
            "P5abs",
            "H5need_slash",
            "bin2hex",
            "3len",
            "l5slen",
            "hex2bin",
            "3hexstr",
            "3len",
            "5ret",
            "5hex_byte",
            "hash_data",
            "3out_hash",
            "5blkheader",
            "real_block_target",
            "5targetshift",
            "hash_target_check",
            "3hash",
            "5h32",
            "`5t32",
            "5h32i",
            "T5t32i",
            "hash_target_check_v",
            "3hash",
            "5hash_swap",
            "5target_swap",
            "5hash_str",
            "`5target_str",
            "fulltest",
            "3hash",
            "5hash2",
            "tq_new",
            "tq_free",
            "5ent",
            "h5iter",
            "4tq_freezethaw",
            "3frozen",
            "tq_freeze",
            "tq_thaw",
            "tq_push",
            "5ent",
            "`5rc",
            "tq_pop",
            "3abstime",
            "5ent",
            "X5rval",
            "h5rc",
            "d>pop",
            ">out",
            "thr_info_create",
            "3thr",
            "3attr",
            "3start",
            "3arg",
            "thr_info_freeze",
            "3thr",
            "5ent",
            "h5iter",
            "`5tq",
            "thr_info_cancel",
            "3thr",
            "nmsleep",
            "3msecs",
            "5twait",
            "P5tleft",
            "@5ret",
            "us_tdiff",
            "3end",
            "3start",
            "tdiff",
            "3end",
            "3start",
            "extract_sockaddr",
            "3url",
            "5url_begin",
            "X5url_end",
            "P5ipv6_begin",
            "5ipv6_end",
            "5port_start",
            "H5url_address",
            "}5port",
            "}5url_len",
            "D5port_len",
            "2__stratum_send",
            "3len",
            "5sock",
            "@5ssent",
            "5sent",
            "P5wd",
            "}1%&B",
            "5__i",
            "stratum_send",
            "3len",
            "5ret",
            "2socket_full",
            "3wait",
            "5sock",
            "P5rd",
            "}1(B",
            "5__i",
            "sock_full",
            "4clear_sock",
            "4recalloc_sock",
            "3len",
            "5old",
            "X5new",
            "recv_line",
            "5len",
            "5buflen",
            "@5tok",
            "5sret",
            "X>out",
            "5rstart",
            "5now",
            "1R,B",
            "5slen",
            "2__json_array_string",
            "3val",
            "3entry",
            "5arr_entry",
            "2json_array_string",
            "3val",
            "3entry",
            "5buf",
            "stratum_probe_transparency",
            "w5sLen",
            "2parse_notify",
            "3val",
            "5nbit",
            "5clean",
            "5ret",
            "_5merkles",
            "X5arr",
            "P>out",
            "2parse_diff",
            "3val",
            "5diff",
            "2parse_reconnect",
            "3val",
            "5url",
            "X5port",
            "P5address",
            "2send_version",
            "3val",
            "parse_method",
            "5val",
            "h5method",
            "H5params",
            "@5err",
            "}5ret",
            "g5buf",
            ">out",
            "1:=B",
            "auth_stratum",
            "5val",
            "5sret",
            "@5err",
            "5ret",
            "W>out",
            "grab_socket_opensocket_cb",
            "3clientp",
            "3purpose",
            "3addr",
            "h5sck",
            "initiate_stratum",
            "5val",
            "5sret",
            "@5curl",
            "5err",
            "5ret",
            "W>out",
            "=(EB",
            "=UEB",
            "=~EB",
            "=%FB",
            "=OFB",
            "=#GB",
            "suspend_stratum",
            "dev_error",
            "3dev",
            "3reason",
            "realloc_strcat",
            "3ptr",
            "5old",
            "X5len",
            "H5ret",
            "RenameThread",
            "3name",
            "2WindowsErrorStr",
            "3dwMessageId",
            "5msg",
            "5fmt",
            "5ldMsgId",
            "l5sz",
            "notifier_init",
            "3pipefd",
            "5listener",
            "h5connecter",
            "`5acceptor",
            "X5inaddr",
            "@5inaddr_sz",
            "1*QB",
            "5reuse",
            "notifier_wake",
            "notifier_read",
            "5buf",
            "notifier_destroy",
            "@opt_debug",
            "Aopt_protocol",
            "Aopt_skip_checks",
            "Aopt_socks_proxy",
            "Aopt_delaynet",
            "Aswork_id",
            "Anetacc_lock",
            "Aopt_scantime",
            "Atotal_getworks",
            "Atotal_bytes_xfer",
            "Aglobal_hashrate",
            "Bsuccessful_connect",
            "Bnettime",
            "GNU C 4.6.3",
            "sha2.c",
            "/home/luke-jr/Projects/Education/Tonal/BitCoin/cgminer",
            "char",
            "long long unsigned int",
            "long long int",
            "short unsigned int",
            "long int",
            "unsigned int",
            "long unsigned int",
            "unsigned char",
            "signed char",
            "short int",
            "uint32_t",
            "total",
            "state",
            "buffer",
            "ipad",
            "opad",
            "sha2_context",
            "sha2_starts",
            "sha2_process",
            "data",
            "temp1",
            "temp2",
            "sha2_update",
            "input",
            "ilen",
            "fill",
            "left",
            "sha2_finish",
            "output",
            "last",
            "padn",
            "high",
            "msglen",
            "sha2",
            "input",
            "ilen",
            "output",
            "sha2_padding",
            "GNU C 4.6.3",
            "api.c",
            "/home/luke-jr/Projects/Education/Tonal/BitCoin/cgminer",
            "char",
            "size_t",
            "long long unsigned int",
            "long long int",
            "ptrdiff_t",
            "short unsigned int",
            "long int",
            "__time64_t",
            "time_t",
            "unsigned int",
            "long unsigned int",
            "unsigned char",
            "_iobuf",
            "_ptr",
            "_cnt",
            "_base",
            "_flag",
            "_file",
            "_charbuf",
            "_bufsiz",
            "_tmpfname",
            "FILE",
            "double",
            "float",
            "long double",
            "signed char",
            "uint8_t",
            "int16_t",
            "short int",
            "uint16_t",
            "uint32_t",
            "int64_t",
            "uint64_t",
            "timespec",
            "tv_sec",
            "tv_nsec",
            "DWORD",
            "UINT_PTR",
            "VARENUM",
            "VT_EMPTY",
            "VT_NULL",
            "VT_I2",
            "VT_I4",
            "VT_R4",
            "VT_R8",
            "VT_CY",
            "VT_DATE",
            "VT_BSTR",
            "VT_DISPATCH",
            "VT_ERROR",
            "VT_BOOL",
            "VT_VARIANT",
            "VT_UNKNOWN",
            "VT_DECIMAL",
            "VT_I1",
            "VT_UI1",
            "VT_UI2",
            "VT_UI4",
            "VT_I8",
            "VT_UI8",
            "VT_INT",
            "VT_UINT",
            "VT_VOID",
            "VT_HRESULT",
            "VT_PTR",
            "VT_SAFEARRAY",
            "VT_CARRAY",
            "VT_USERDEFINED",
            "VT_LPSTR",
            "VT_LPWSTR",
            "VT_RECORD",
            "VT_INT_PTR",
            "VT_UINT_PTR",
            "VT_FILETIME",
            "VT_BLOB",
            "VT_STREAM",
            "VT_STORAGE",
            "VT_STREAMED_OBJECT",
            "VT_STORED_OBJECT",
            "VT_BLOB_OBJECT",
            "VT_CF",
            "VT_CLSID",
            "VT_VERSIONED_STREAM",
            "VT_BSTR_BLOB",
            "VT_VECTOR",
            "VT_ARRAY",
            "VT_BYREF",
            "VT_RESERVED",
            "VT_ILLEGAL",
            "VT_ILLEGALMASKED",
            "VT_TYPEMASK",
            "timeval",
            "tv_sec",
            "tv_usec",
            "u_char",
            "u_short",
            "u_long",
            "s_b1",
            "s_b2",
            "s_b3",
            "s_b4",
            "s_w1",
            "s_w2",
            "S_un_b",
            "S_un_w",
            "S_addr",
            "in_addr",
            "S_un",
            "SOCKET",
            "sockaddr_in",
            "sin_family",
            "sin_port",
            "sin_addr",
            "sin_zero",
            "sockaddr",
            "sa_family",
            "sa_data",
            "ptw32_handle_t",
            "pthread_t",
            "pthread_mutex_t",
            "pthread_mutex_t_",
            "pthread_cond_t",
            "pthread_cond_t_",
            "routine",
            "prev",
            "ptw32_cleanup_callback_t",
            "JSON_OBJECT",
            "JSON_ARRAY",
            "JSON_STRING",
            "JSON_INTEGER",
            "JSON_REAL",
            "JSON_TRUE",
            "JSON_FALSE",
            "JSON_NULL",
            "json_type",
            "type",
            "refcount",
            "json_t",
            "line",
            "column",
            "position",
            "source",
            "text",
            "json_error_t",
            "socklen_t",
            "CURL",
            "curl_socket_t",
            "blkheight_t",
            "libblkmaker_hash_t",
            "blkhash_t",
            "txnhash_t",
            "blktime_t",
            "blktime_diff_t",
            "blknonce_t",
            "blktxn_t",
            "datasz",
            "hash",
            "dependcount",
            "depends",
            "required",
            "sigops",
            "_Bool",
            "blktmpl_longpoll_req",
            "GBT_CBTXN",
            "GBT_CBVALUE",
            "GBT_WORKID",
            "GBT_LONGPOLL",
            "GBT_PROPOSAL",
            "GBT_SERVICE",
            "BMM_CBAPPEND",
            "BMM_CBSET",
            "BMM_GENERATE",
            "BMM_TIMEINC",
            "BMM_TIMEDEC",
            "BMM_TXNADD",
            "BMM_PREVBLK",
            "BMM_VERFORCE",
            "BMM_VERDROP",
            "BMA_TXNHASH",
            "BMAb_COINBASE",
            "BMAb_TRUNCATE",
            "BMAs_COINBASE",
            "BMAs_MERKLE",
            "BMAs_TRUNCATE",
            "gbt_capabilities_t",
            "blkmutations_t",
            "version",
            "diffbits",
            "height",
            "prevblk",
            "sigoplimit",
            "sizelimit",
            "txncount",
            "txns",
            "cbtxn",
            "cbvalue",
            "_time_rcvd",
            "curtime",
            "auxcount",
            "auxnames",
            "auxdata",
            "workid",
            "submitold",
            "expires",
            "target",
            "mutations",
            "maxtime",
            "maxtimeoff",
            "mintime",
            "mintimeoff",
            "minnonce",
            "maxnonce",
            "_mrklroot",
            "next_dataid",
            "blktemplate_t",
            "list_head",
            "next",
            "prev",
            "hh_head",
            "expand_mult",
            "prev",
            "next",
            "hh_prev",
            "hh_next",
            "keylen",
            "hashv",
            "UT_hash_table",
            "buckets",
            "num_buckets",
            "log2_num_buckets",
            "num_items",
            "tail",
            "ideal_chain_maxlen",
            "nonideal_items",
            "ineff_expands",
            "noexpand",
            "signature",
            "LOG_ERR",
            "LOG_WARNING",
            "LOG_NOTICE",
            "LOG_INFO",
            "LOG_DEBUG",
            "notifier_t",
            "cl_uint",
            "cl_ulong",
            "iVddc",
            "iActivityPercent",
            "iCurrentPerformanceLevel",
            "iCurrentBusSpeed",
            "iCurrentBusLanes",
            "iMaximumBusLanes",
            "iTemperature",
            "iFlags",
            "iMinPercent",
            "iMaxPercent",
            "iMinRPM",
            "iMaxRPM",
            "iSpeedType",
            "iFanSpeed",
            "iFlags",
            "iMin",
            "iMax",
            "iStep",
            "iNumberOfPerformanceLevels",
            "iActivityReportingSupported",
            "iDiscretePerformanceLevels",
            "sEngineClock",
            "sMemoryClock",
            "sVddc",
            "iVddc",
            "aLevels",
            "libusb_device_descriptor",
            "bLength",
            "bDescriptorType",
            "bcdUSB",
            "bDeviceClass",
            "bDeviceSubClass",
            "bDeviceProtocol",
            "bMaxPacketSize0",
            "idVendor",
            "idProduct",
            "bcdDevice",
            "iManufacturer",
            "iProduct",
            "iSerialNumber",
            "bNumConfigurations",
            "dclk_data",
            "freqM",
            "freqMaxM",
            "freqMDefault",
            "minGoodSamples",
            "errorCount",
            "errorWeight",
            "errorRate",
            "maxErrorRate",
            "thr_info",
            "device_thread",
            "primary_thread",
            "last",
            "sick",
            "scanhash_working",
            "hashes_done",
            "tv_hashes_done",
            "tv_lastupdate",
            "pause",
            "getwork",
            "rolling",
            "prev_work",
            "work",
            "next_work",
            "tv_morework",
            "results_work",
            "_job_transition_in_progress",
            "_proceed_with_new_job",
            "tv_results_jobstart",
            "tv_jobstart",
            "tv_poll",
            "notifier",
            "starting_next_work",
            "_max_nonce",
            "work_restart",
            "work_restart_notifier",
            "libztex_device",
            "mutex",
            "fpgaNum",
            "descriptor",
            "hndl",
            "usbbus",
            "usbaddress",
            "snString",
            "productId",
            "fwVersion",
            "interfaceVersion",
            "interfaceCapabilities",
            "moduleReserved",
            "numNonces",
            "offsNonces",
            "freqM1",
            "bitFileName",
            "suspendSupported",
            "hashesPerClock",
            "extraSolutions",
            "dclk",
            "numberOfFpgas",
            "selectedFpga",
            "parallelConfigSupport",
            "repr",
            "alive",
            "LIFE_WELL",
            "LIFE_SICK",
            "LIFE_DEAD",
            "LIFE_NOSTART",
            "LIFE_INIT",
            "LIFE_WAIT",
            "POOL_FAILOVER",
            "POOL_ROUNDROBIN",
            "POOL_ROTATE",
            "POOL_LOADBALANCE",
            "POOL_BALANCE",
            "gpu_adl",
            "lpTemperature",
            "iAdapterIndex",
            "lpAdapterID",
            "iBusNumber",
            "strAdapterName",
            "lpActivity",
            "lpOdParameters",
            "DefPerfLev",
            "lpFanSpeedInfo",
            "lpFanSpeedValue",
            "DefFanSpeedValue",
            "iVddc",
            "iPercentage",
            "autofan",
            "autoengine",
            "managed",
            "lastengine",
            "lasttemp",
            "targetfan",
            "overtemp",
            "minspeed",
            "maxspeed",
            "has_fanspeed",
            "twin",
            "device_api",
            "dname",
            "api_detect",
            "get_dev_statline_before",
            "get_dev_statline_after",
            "reinit_device",
            "get_statline_before",
            "get_statline",
            "get_api_extra_device_detail",
            "get_api_extra_device_status",
            "get_api_stats",
            "get_stats",
            "identify_device",
            "set_device",
            "thread_prepare",
            "minerloop",
            "can_limit_work",
            "thread_init",
            "prepare_work",
            "scanhash",
            "hw_error",
            "thread_shutdown",
            "thread_enable",
            "poll",
            "job_prepare",
            "job_start",
            "job_get_results",
            "job_process_results",
            "$cgpu_info",
            "cgminer_id",
            "device_line_id",
            "devtype",
            "device_id",
            "dev_repr",
            "dev_repr_ns",
            "procs",
            "proc_id",
            "proc_repr",
            "proc_repr_ns",
            "device",
            "next_proc",
            "device_path",
            "device_file",
            "#h%U5",
            "work_start_tv",
            "wait_ms",
            "sleep_ms",
            "avg_wait_f",
            "avg_wait_d",
            "nonces",
            "polling",
            "flash_led",
            "device_mutex",
            "deven",
            "rolling",
            "total_mhashes",
            "utility_diff1",
            "init",
            "last_message_tv",
            "threads",
            "max_hashes",
            "kname",
            "mapped",
            "virtual_gpu",
            "virtual_adl",
            "dynamic",
            "vwidth",
            "work_size",
            "kernel",
            "max_alloc",
            "opt_lg",
            "lookup_gap",
            "opt_tc",
            "thread_concurrency",
            "shaders",
            "tv_gpustart",
            "intervals",
            "temp",
            "cutofftemp",
            "targettemp",
            "has_adl",
            "gpu_engine",
            "min_engine",
            "gpu_fan",
            "min_fan",
            "gpu_memclock",
            "gpu_memdiff",
            "gpu_powertune",
            "gpu_vddc",
            "diff1",
            "last_share_pool_time",
            "device_last_well",
            "device_last_not_well",
            "device_not_well_reason",
            "reinit_backoff",
            "thread_fail_init_count",
            "thread_zero_hash_count",
            "thread_fail_queue_count",
            "dev_sick_idle_60_count",
            "dev_dead_idle_600_count",
            "dev_nostart_count",
            "dev_over_heat_count",
            "dev_thermal_cutoff_count",
            "dev_comms_error_count",
            "dev_throttle_count",
            "type",
            "data_was_malloc",
            "prev",
            "next",
            "$work",
            "midstate",
            "target",
            "hash",
            "rolls",
            "thr_id",
            "tv_staged",
            "mined",
            "clone",
            "cloned",
            "longpoll",
            "stale",
            "mandatory",
            "block",
            "queued",
            "stratum",
            "job_id",
            "nonce2",
            "ntime",
            "sdiff",
            "work_difficulty",
            "tmpl",
            "tmpl_refcount",
            "dataid",
            "tv_getwork",
            "tv_getwork_reply",
            "tv_cloned",
            "tv_work_start",
            "tv_work_found",
            "getwork_mode",
            "list",
            "'dev_enable",
            "DEV_ENABLED",
            "DEV_DISABLED",
            "DEV_RECOVER",
            "DEV_RECOVER_ERR",
            "'cl_kernels",
            "KL_NONE",
            "KL_POCLBM",
            "KL_PHATK",
            "KL_DIAKGCN",
            "KL_DIABLO",
            "KL_SCRYPT",
            "dev_reason",
            "REASON_THREAD_FAIL_INIT",
            "REASON_THREAD_ZERO_HASH",
            "REASON_THREAD_FAIL_QUEUE",
            "REASON_DEV_SICK_IDLE_60",
            "REASON_DEV_DEAD_IDLE_600",
            "REASON_DEV_NOSTART",
            "REASON_DEV_OVER_HEAT",
            "REASON_DEV_THERMAL_CUTOFF",
            "REASON_DEV_COMMS_ERROR",
            "REASON_DEV_THROTTLE",
            "_get_start",
            "getwork_attempts",
            "getwork_wait_rolling",
            "hadrolltime",
            "canroll",
            "hadexpire",
            "min_diff",
            "max_diff",
            "last_diff",
            "min_diff_count",
            "max_diff_count",
            "times_sent",
            "bytes_sent",
            "net_bytes_sent",
            "times_received",
            "bytes_received",
            "net_bytes_received",
            ")device_ztex",
            ")device_fd",
            ")device_ft232r",
            "ft232r_device_handle",
            "thread_q",
            "frozen",
            "mutex",
            "cond",
            "ctx_a",
            "ctx_b",
            "ctx_c",
            "ctx_d",
            "ctx_e",
            "ctx_f",
            "ctx_g",
            "ctx_h",
            "cty_a",
            "cty_b",
            "cty_c",
            "cty_d",
            "cty_e",
            "cty_f",
            "cty_g",
            "cty_h",
            "merkle",
            "ntime",
            "nbits",
            "nonce",
            "fW15",
            "fW01r",
            "fcty_e",
            "fcty_e2",
            "PreVal4",
            "C1addK5",
            "W17_2",
            "PreVal4addT1",
            "T1substate0",
            "PreVal4_2",
            "PreVal0",
            "PreW18",
            "PreW19",
            "PreW31",
            "PreW32",
            "B1addK6",
            "PreVal0addK7",
            "W16addK16",
            "W17addK17",
            "zeroA",
            "zeroB",
            "oneA",
            "twoA",
            "threeA",
            "fourA",
            "fiveA",
            "sixA",
            "sevenA",
            "work",
            "dev_blk_ctx",
            "'pool_enable",
            "POOL_DISABLED",
            "POOL_ENABLED",
            "POOL_REJECTING",
            "'pool_protocol",
            "PLP_NONE",
            "PLP_GETWORK",
            "PLP_GETBLOCKTEMPLATE",
            "stratum_work",
            "job_id",
            "prev_hash",
            "coinbase1",
            "coinbase2",
            "merkle",
            "bbversion",
            "nbit",
            "ntime",
            "clean",
            "cb1_len",
            "cb2_len",
            "cb_len",
            "header_len",
            "merkles",
            "diff",
            "transparency_probed",
            "transparency_time",
            "opaque",
            "pool_no",
            "prio",
            "seq_rejects",
            "seq_getfails",
            "solved",
            "diff1",
            "diff",
            "diff_stale",
            "submit_fail",
            "idle",
            "lagging",
            "probed",
            "force_rollntime",
            "enabled",
            "submit_old",
            "removed",
            "lp_started",
            "block_id",
            "proto",
            "hdr_path",
            "lp_url",
            "lp_id",
            "lp_proto",
            "lp_socket",
            "getwork_requested",
            "stale_shares",
            "discarded_work",
            "getfail_occasions",
            "remotefail_occasions",
            "tv_idle",
            "last_shares",
            "shares",
            "rpc_url",
            "rpc_userpass",
            "rpc_user",
            "rpc_pass",
            "rpc_proxy",
            "pool_lock",
            "submit_q",
            "getwork_q",
            "longpoll_thread",
            "submit_thread",
            "getwork_thread",
            "curls",
            "cr_cond",
            "curlring",
            "sws_waiting_on_curl",
            "last_share_time",
            "stratum_url",
            "stratum_port",
            "stratum_curl",
            "sock",
            "sockbuf",
            "sockbuf_size",
            "sockaddr_url",
            "nonce1",
            "n1_len",
            "nonce2",
            "n2size",
            "has_stratum",
            "stratum_active",
            "last_work_time",
            "stratum_auth",
            "stratum_notify",
            "swork",
            "stratum_thread",
            "stratum_lock",
            "last_work_lock",
            "last_work_copy",
            "submit_work_state",
            "'api_data_type",
            "API_ESCAPE",
            "API_STRING",
            "API_CONST",
            "API_INT",
            "API_UINT",
            "API_UINT32",
            "API_UINT64",
            "API_DOUBLE",
            "API_ELAPSED",
            "API_BOOL",
            "API_TIMEVAL",
            "API_TIME",
            "API_MHS",
            "API_MHTOTAL",
            "API_TEMP",
            "API_UTILITY",
            "API_FREQ",
            "API_VOLTS",
            "API_HS",
            "API_DIFF",
            "API_JSON",
            "WSAERRORS",
            "code",
            "'code_severity",
            "SEVERITY_ERR",
            "SEVERITY_WARN",
            "SEVERITY_INFO",
            "SEVERITY_SUCC",
            "SEVERITY_FAIL",
            "'code_parameters",
            "PARAM_GPU",
            "PARAM_PGA",
            "PARAM_CPU",
            "PARAM_PID",
            "PARAM_GPUMAX",
            "PARAM_PGAMAX",
            "PARAM_CPUMAX",
            "PARAM_PMAX",
            "PARAM_POOLMAX",
            "PARAM_DMAX",
            "PARAM_CMD",
            "PARAM_POOL",
            "PARAM_STR",
            "PARAM_BOTH",
            "PARAM_BOOL",
            "PARAM_SET",
            "PARAM_NONE",
            "CODES",
            "code",
            "params",
            "description",
            "IP4ACCESS",
            "mask",
            "APIGROUPS",
            "sock",
            "full",
            "close",
            "prev",
            "next",
            "CMDS",
            "func",
            "iswritemode",
            "+nanosleep",
            ",req",
            ",rem",
            "-tstart",
            "`-msecs",
            "-tdone",
            "P-tnow",
            "@-tleft",
            "+sleep",
            ",secs",
            "-req",
            "`-rem",
            "+json_incref",
            ",json",
            "/json_decref",
            ",json",
            "0_curl_easy_setopt_err_long",
            "0_curl_easy_setopt_err_curl_off_t",
            "0_curl_easy_setopt_err_string",
            "0_curl_easy_setopt_err_write_callback",
            "0_curl_easy_setopt_err_read_cb",
            "0_curl_easy_setopt_err_ioctl_cb",
            "0_curl_easy_setopt_err_sockopt_cb",
            "0_curl_easy_setopt_err_opensocket_cb",
            "0_curl_easy_setopt_err_progress_cb",
            "0_curl_easy_setopt_err_debug_cb",
            "0_curl_easy_setopt_err_ssl_ctx_cb",
            "0_curl_easy_setopt_err_conv_cb",
            "0_curl_easy_setopt_err_seek_cb",
            "0_curl_easy_setopt_err_cb_data",
            "0_curl_easy_setopt_err_error_buffer",
            "0_curl_easy_setopt_err_FILE",
            "0_curl_easy_setopt_err_postfields",
            "0_curl_easy_setopt_err_curl_httpost",
            "0_curl_easy_setopt_err_curl_slist",
            "0_curl_easy_setopt_err_CURLSH",
            "0_curl_easy_getinfo_err_string",
            "0_curl_easy_getinfo_err_long",
            "0_curl_easy_getinfo_err_double",
            "0_curl_easy_getinfo_err_curl_slist",
            "1mutex_lock",
            "2lock",
            "1mutex_unlock",
            "2lock",
            "1mutex_init",
            "2lock",
            "WSAErrorMsg",
            "l-id",
            "1io_reinit",
            "5_io_new",
            "2initial",
            "2socket_buf",
            "5io_add",
            "2buf",
            "7len",
            "P7dif",
            "H7tot",
            "7new",
            "5io_put",
            "2buf",
            "1io_close",
            "8io_free",
            "h7io_next",
            "5escape_string",
            "2str",
            "7buf",
            "H7ptr",
            "5api_add_extra",
            "2extra",
            "7tmp",
            "5api_add_data_full",
            "2type",
            "api_add_escape",
            "api_add_string",
            "api_add_const",
            "api_add_int",
            "api_add_uint",
            "api_add_uint32",
            "api_add_uint64",
            "api_add_double",
            "api_add_elapsed",
            "api_add_bool",
            "api_add_timeval",
            "api_add_time",
            "api_add_mhs",
            "api_add_mhtotal",
            "api_add_temp",
            "api_add_utility",
            "api_add_freq",
            "api_add_volts",
            "api_add_hs",
            "api_add_diff",
            "api_add_json",
            "5print_data",
            "2buf",
            "7tmp",
            "H7first",
            "o7original",
            "X7escape",
            "P7quote",
            ":numpgas",
            "5pgadevice",
            "2pgaid",
            "1message",
            "2messageid",
            "2paramid",
            "2param2",
            "`7buf",
            "7buf2",
            "~7pga",
            "l7id",
            "1apiversion",
            "h7buf",
            "1minerconfig",
            "X7buf",
            "7adlinuse",
            "h7adl",
            "5bool2str",
            "5status2str",
            "5api_add_device_identifier",
            "1devdetail_an",
            "h7buf",
            "1devstatus_an",
            "h7buf",
            "d7mhs",
            "7mhsname",
            "1gpustatus",
            "2gpu",
            "1pgastatus",
            "2pga",
            "7dev",
            "1devinfo_internal",
            "2func",
            "1devdetail",
            "1devstatus",
            "1gpudev",
            "o7id",
            "1pgadev",
            "h7id",
            "1pgaenable",
            "l7id",
            "h7dev",
            "1pgadisable",
            "l7id",
            "h7dev",
            "1pgaidentify",
            "l7id",
            "h7dev",
            "X7api",
            "1poolstatus",
            "h7buf",
            "X7lp",
            "1summary",
            "h7buf",
            "7mhs",
            "7work_utility",
            "1gpuenable",
            "\\7id",
            "1gpudisable",
            "\\7id",
            "1gpurestart",
            "\\7id",
            "h7buf",
            "g7numgpu",
            "h7buf",
            "h7buf",
            "1switchpool",
            "`7id",
            "1copyadvanceafter",
            "2buf",
            "5pooldetails",
            "2url",
            "2user",
            "2pass",
            "7ptr",
            "X7buf",
            "P<exitsama",
            "1addpool",
            "7url",
            "X7user",
            "P7pass",
            "`7ptr",
            "1enablepool",
            "P7id",
            "1poolpriority",
            "1disablepool",
            "`7id",
            "1removepool",
            "6\tqC",
            "`7rpc_url",
            "X7dofree",
            "o7id",
            "5splitgpuvalue",
            "2gpu",
            "\\7id",
            "d7gpusep",
            "1gpuintensity",
            "L7id",
            "l7intensitystr",
            "1gpumem",
            "\\7id",
            "`7clock",
            "1gpuengine",
            "\\7id",
            "`7clock",
            "1gpufan",
            "\\7id",
            "`7fan",
            "1gpuvddc",
            "\\7id",
            "`7vddc",
            "doquit",
            "dorestart",
            "privileged",
            "notifystatus",
            "2device",
            "`7buf",
            "7reason",
            "1notify",
            "1devdetails",
            "h7buf",
            "dosave",
            "}7filename",
            "}7fcfg",
            "h7ptr",
            "5itemstats",
            "2stats",
            "2pool_stats",
            " 2extra",
            "h7buf",
            "1minerstats",
            "o7extra",
            "`7id",
            "1failoveronly",
            "\\7tf",
            "1minecoin",
            "h7buf",
            "1debugstate",
            "h7buf",
            "1setconfig",
            "\\7comma",
            "1pgaset",
            "7buf",
            "\\7opt",
            "h7id",
            "X7dev",
            "H7api",
            "@7set",
            "7ret",
            "1dozero",
            "\\7sum",
            "h7all",
            "g7bs",
            "f7dosum",
            "1checkcommand",
            "P7buf",
            "7found",
            "_7access",
            "1send_result",
            "7buf",
            "|7len",
            "1tidyup",
            "2arg",
            "8setup_groups",
            "7api_groups",
            "7buf",
            "7ptr",
            "X7next",
            "P7colon",
            "7cmd",
            "@7addstar",
            "7did",
            "8setup_ipaccess",
            "7buf",
            "7ptr",
            "X7comma",
            "P7slash",
            "7dot",
            "H7ipcount",
            "D7mask",
            "@7octet",
            "<popipo",
            "5quit_thread",
            "5restart_thread",
            "2api_thr_id",
            "7bye_thr",
            "|7buf",
            "7param_buf",
            "~7localaddr",
            "~7bound",
            "\\7connectaddr",
            "~7binderror",
            "P7bindstart",
            "7port",
            "7serv",
            "~7cli",
            "~7clisiz",
            "~7cmd",
            "@7addrok",
            "7json_err",
            "~7json_config",
            "7json_val",
            "7did",
            "<die",
            "7_cleanup",
            "~.;C",
            "7client_ip",
            "-WSAbuf",
            "-sock",
            "-UNAVAILABLE",
            "-INVAPIGROUPS",
            "-BLANK",
            "-COMMA",
            "-SEPARATOR",
            "-GPUSEP",
            "-APIVERSION",
            "-DEAD",
            "-SICK",
            "-NOSTART",
            "-INIT",
            "-WAIT",
            "-DISABLED",
            "-ALIVE",
            "-REJECTING",
            "-UNKNOWN",
            "-DYNAMIC",
            "-YES",
            "-NULLSTR",
            "-TRUESTR",
            "-FALSESTR",
            "-SCRYPTSTR",
            "-SHA256STR",
            "-DEVICECODE",
            "-OSINFO",
            "-ISJSON",
            "7JSON_COMMAND",
            "7JSON_PARAMETER",
            "7my_thr_id",
            "7bye",
            "7quit_restart_lock",
            "7do_a_quit",
            "7do_a_restart",
            "7when",
            "7ipaccess",
            "7ips",
            "7io_head",
            "?opt_debug",
            "?opt_log_output",
            "?opt_realquiet",
            "?want_per_device_stats",
            "@opt_protocol",
            "@opt_coinbase_sig",
            "@have_longpoll",
            "@opt_fail_only",
            "@opt_api_allow",
            "@opt_api_groups",
            "@opt_api_description",
            "@opt_api_port",
            "@opt_api_listen",
            "@opt_api_network",
            "@opt_worktime",
            "@opt_queue",
            "@opt_scantime",
            "@opt_expiry",
            "@hash_lock",
            "@ch_lock",
            "@enabled_pools",
            "@nDevs",
            "@opt_quiet",
            "@gpus",
            "@gpu_threads",
            "@opt_scrypt",
            "@total_secs",
            "@total_devices",
            "@devices",
            "@total_pools",
            "@pools",
            "@total_mhashes_done",
            "@new_blocks",
            "@found_blocks",
            "@total_accepted",
            "@total_rejected",
            "@total_diff1",
            "@total_getworks",
            "@total_stale",
            "@total_discarded",
            "@total_diff_accepted",
            "@total_diff_rejected",
            "@total_diff_stale",
            "@local_work",
            "@total_go",
            "@total_ro",
            "@opt_log_interval",
            "@current_fullhash",
            "@block_timeval",
            "CWSAErrors",
            "Dcodes",
            "Dapigroups",
            "@opencl_api",
            "Dcmds",
            "GNU C 4.6.3",
            "logging.c",
            "/home/luke-jr/Projects/Education/Tonal/BitCoin/cgminer",
            "__gnuc_va_list",
            "__builtin_va_list",
            "char",
            "va_list",
            "long long unsigned int",
            "long long int",
            "short unsigned int",
            "long int",
            "__time64_t",
            "time_t",
            "unsigned int",
            "long unsigned int",
            "unsigned char",
            "float",
            "signed char",
            "short int",
            "double",
            "long double",
            "VARENUM",
            "VT_EMPTY",
            "VT_NULL",
            "VT_I2",
            "VT_I4",
            "VT_R4",
            "VT_R8",
            "VT_CY",
            "VT_DATE",
            "VT_BSTR",
            "VT_DISPATCH",
            "VT_ERROR",
            "VT_BOOL",
            "VT_VARIANT",
            "VT_UNKNOWN",
            "VT_DECIMAL",
            "VT_I1",
            "VT_UI1",
            "VT_UI2",
            "VT_UI4",
            "VT_I8",
            "VT_UI8",
            "VT_INT",
            "VT_UINT",
            "VT_VOID",
            "VT_HRESULT",
            "VT_PTR",
            "VT_SAFEARRAY",
            "VT_CARRAY",
            "VT_USERDEFINED",
            "VT_LPSTR",
            "VT_LPWSTR",
            "VT_RECORD",
            "VT_INT_PTR",
            "VT_UINT_PTR",
            "VT_FILETIME",
            "VT_BLOB",
            "VT_STREAM",
            "VT_STORAGE",
            "VT_STREAMED_OBJECT",
            "VT_STORED_OBJECT",
            "VT_BLOB_OBJECT",
            "VT_CF",
            "VT_CLSID",
            "VT_VERSIONED_STREAM",
            "VT_BSTR_BLOB",
            "VT_VECTOR",
            "VT_ARRAY",
            "VT_BYREF",
            "VT_RESERVED",
            "VT_ILLEGAL",
            "VT_ILLEGALMASKED",
            "VT_TYPEMASK",
            "\ttimeval",
            "tv_sec",
            "tv_usec",
            "tm_sec",
            "tm_min",
            "tm_hour",
            "tm_mday",
            "tm_mon",
            "tm_year",
            "tm_wday",
            "tm_yday",
            "tm_isdst",
            "pthread_mutex_t",
            "pthread_mutex_t_",
            "PTHREAD_CREATE_JOINABLE",
            "PTHREAD_CREATE_DETACHED",
            "PTHREAD_INHERIT_SCHED",
            "PTHREAD_EXPLICIT_SCHED",
            "PTHREAD_SCOPE_PROCESS",
            "PTHREAD_SCOPE_SYSTEM",
            "PTHREAD_CANCEL_ENABLE",
            "PTHREAD_CANCEL_DISABLE",
            "PTHREAD_CANCEL_ASYNCHRONOUS",
            "PTHREAD_CANCEL_DEFERRED",
            "PTHREAD_PROCESS_PRIVATE",
            "PTHREAD_PROCESS_SHARED",
            "PTHREAD_MUTEX_STALLED",
            "PTHREAD_MUTEX_ROBUST",
            "PTHREAD_BARRIER_SERIAL_THREAD",
            "LOG_ERR",
            "LOG_WARNING",
            "LOG_NOTICE",
            "LOG_INFO",
            "LOG_DEBUG",
            "\t_iobuf",
            "_ptr",
            "_cnt",
            "_base",
            "_flag",
            "_file",
            "_charbuf",
            "_bufsiz",
            "_tmpfname",
            "FILE",
            "_Bool",
            "localtime_convert",
            "_curl_easy_setopt_err_long",
            "_curl_easy_setopt_err_curl_off_t",
            "_curl_easy_setopt_err_string",
            "_curl_easy_setopt_err_write_callback",
            "_curl_easy_setopt_err_read_cb",
            "_curl_easy_setopt_err_ioctl_cb",
            "_curl_easy_setopt_err_sockopt_cb",
            "_curl_easy_setopt_err_opensocket_cb",
            "_curl_easy_setopt_err_progress_cb",
            "_curl_easy_setopt_err_debug_cb",
            "_curl_easy_setopt_err_ssl_ctx_cb",
            "_curl_easy_setopt_err_conv_cb",
            "_curl_easy_setopt_err_seek_cb",
            "_curl_easy_setopt_err_cb_data",
            "_curl_easy_setopt_err_error_buffer",
            "_curl_easy_setopt_err_FILE",
            "_curl_easy_setopt_err_postfields",
            "_curl_easy_setopt_err_curl_httpost",
            "_curl_easy_setopt_err_curl_slist",
            "_curl_easy_setopt_err_CURLSH",
            "_curl_easy_getinfo_err_string",
            "_curl_easy_getinfo_err_long",
            "_curl_easy_getinfo_err_double",
            "_curl_easy_getinfo_err_curl_slist",
            "mutex_lock",
            "lock",
            "mutex_unlock",
            "lock",
            "my_log_curses",
            "prio",
            "cancelstate",
            "vapplog",
            "prio",
            "applog",
            "prio",
            "log_generic",
            "prio",
            "writetocon",
            "writetofile",
            "log_error",
            "log_warning",
            "log_notice",
            "log_info",
            "log_debug",
            "opt_debug",
            "opt_debug_console",
            "opt_log_output",
            "opt_log_level",
            "console_lock",
            "opt_quiet",
            "GNU C 4.6.3",
            "driver-opencl.c",
            "/home/luke-jr/Projects/Education/Tonal/BitCoin/cgminer",
            "char",
            "size_t",
            "long long unsigned int",
            "long long int",
            "intptr_t",
            "ptrdiff_t",
            "short unsigned int",
            "long int",
            "__time64_t",
            "time_t",
            "unsigned int",
            "long unsigned int",
            "unsigned char",
            "float",
            "signed char",
            "short int",
            "UINT_PTR",
            "double",
            "long double",
            "HINSTANCE__",
            "unused",
            "HINSTANCE",
            "HMODULE",
            "VARENUM",
            "VT_EMPTY",
            "VT_NULL",
            "VT_I2",
            "VT_I4",
            "VT_R4",
            "VT_R8",
            "VT_CY",
            "VT_DATE",
            "VT_BSTR",
            "VT_DISPATCH",
            "VT_ERROR",
            "VT_BOOL",
            "VT_VARIANT",
            "VT_UNKNOWN",
            "VT_DECIMAL",
            "VT_I1",
            "VT_UI1",
            "VT_UI2",
            "VT_UI4",
            "VT_I8",
            "VT_UI8",
            "VT_INT",
            "VT_UINT",
            "VT_VOID",
            "VT_HRESULT",
            "VT_PTR",
            "VT_SAFEARRAY",
            "VT_CARRAY",
            "VT_USERDEFINED",
            "VT_LPSTR",
            "VT_LPWSTR",
            "VT_RECORD",
            "VT_INT_PTR",
            "VT_UINT_PTR",
            "VT_FILETIME",
            "VT_BLOB",
            "VT_STREAM",
            "VT_STORAGE",
            "VT_STREAMED_OBJECT",
            "VT_STORED_OBJECT",
            "VT_BLOB_OBJECT",
            "VT_CF",
            "VT_CLSID",
            "VT_VERSIONED_STREAM",
            "VT_BSTR_BLOB",
            "VT_VECTOR",
            "VT_ARRAY",
            "VT_BYREF",
            "VT_RESERVED",
            "VT_ILLEGAL",
            "VT_ILLEGALMASKED",
            "VT_TYPEMASK",
            "timeval",
            "tv_sec",
            "tv_usec",
            "SOCKET",
            "_iobuf",
            "_ptr",
            "_cnt",
            "_base",
            "_flag",
            "_file",
            "_charbuf",
            "_bufsiz",
            "_tmpfname",
            "FILE",
            "bool",
            "chtype",
            "_win",
            "_cury",
            "_curx",
            "_maxy",
            "_maxx",
            "_begy",
            "_begx",
            "_flags",
            "_attrs",
            "_bkgd",
            "_clear",
            "_leaveit",
            "_scroll",
            "_nodelay",
            "_immed",
            "_sync",
            "_use_keypad",
            "_firstch",
            "_lastch",
            "_tmarg",
            "_bmarg",
            "_delayms",
            "_parx",
            "_pary",
            "_parent",
            "WINDOW",
            "uint8_t",
            "int16_t",
            "uint16_t",
            "int32_t",
            "uint32_t",
            "int64_t",
            "uint64_t",
            "ptw32_handle_t",
            "pthread_t",
            "pthread_mutex_t",
            "pthread_mutex_t_",
            "pthread_cond_t",
            "pthread_cond_t_",
            "uint",
            "CURL",
            "curl_socket_t",
            "blkheight_t",
            "libblkmaker_hash_t",
            "blkhash_t",
            "txnhash_t",
            "blktime_t",
            "blktime_diff_t",
            "blknonce_t",
            "blktxn_t",
            "data",
            "datasz",
            "hash",
            "dependcount",
            "depends",
            "required",
            "sigops",
            "_Bool",
            "blktmpl_longpoll_req",
            "GBT_CBTXN",
            "GBT_CBVALUE",
            "GBT_WORKID",
            "GBT_LONGPOLL",
            "GBT_PROPOSAL",
            "GBT_SERVICE",
            "BMM_CBAPPEND",
            "BMM_CBSET",
            "BMM_GENERATE",
            "BMM_TIMEINC",
            "BMM_TIMEDEC",
            "BMM_TXNADD",
            "BMM_PREVBLK",
            "BMM_VERFORCE",
            "BMM_VERDROP",
            "BMA_TXNHASH",
            "BMAb_COINBASE",
            "BMAb_TRUNCATE",
            "BMAs_COINBASE",
            "BMAs_MERKLE",
            "BMAs_TRUNCATE",
            "gbt_capabilities_t",
            "blkmutations_t",
            "version",
            "diffbits",
            "height",
            "prevblk",
            "sigoplimit",
            "sizelimit",
            "txncount",
            "txns",
            "cbtxn",
            "cbvalue",
            "_time_rcvd",
            "curtime",
            "auxcount",
            "auxnames",
            "auxdata",
            "workid",
            "submitold",
            "expires",
            "target",
            "mutations",
            "maxtime",
            "maxtimeoff",
            "mintime",
            "mintimeoff",
            "minnonce",
            "maxnonce",
            "_mrklroot",
            "next_dataid",
            "blktemplate_t",
            "list_head",
            "next",
            "prev",
            "hh_head",
            "count",
            "expand_mult",
            "prev",
            "next",
            "hh_prev",
            "hh_next",
            "keylen",
            "hashv",
            "UT_hash_table",
            "buckets",
            "num_buckets",
            "log2_num_buckets",
            "num_items",
            "tail",
            "ideal_chain_maxlen",
            "nonideal_items",
            "ineff_expands",
            "noexpand",
            "signature",
            "LOG_ERR",
            "LOG_WARNING",
            "LOG_NOTICE",
            "LOG_INFO",
            "LOG_DEBUG",
            "notifier_t",
            "cl_int",
            "cl_uint",
            "cl_ulong",
            "cl_platform_id",
            "_cl_platform_id",
            "cl_device_id",
            "_cl_device_id",
            "cl_context",
            "_cl_context",
            "cl_command_queue",
            "_cl_command_queue",
            "cl_mem",
            "_cl_mem",
            "cl_program",
            "_cl_program",
            "cl_kernel",
            "_cl_kernel",
            "cl_event",
            "_cl_event",
            "cl_bool",
            "cl_bitfield",
            "cl_device_type",
            "cl_platform_info",
            "cl_device_info",
            "cl_command_queue_properties",
            "cl_context_properties",
            "cl_mem_flags",
            "cl_program_info",
            "cl_program_build_info",
            "iVddc",
            "iActivityPercent",
            "iCurrentPerformanceLevel",
            "iCurrentBusSpeed",
            "iCurrentBusLanes",
            "iMaximumBusLanes",
            "iTemperature",
            "iFlags",
            "iMinPercent",
            "iMaxPercent",
            "iMinRPM",
            "iMaxRPM",
            "iSpeedType",
            "iFanSpeed",
            "iFlags",
            "iMin",
            "iMax",
            "iStep",
            "iNumberOfPerformanceLevels",
            "iActivityReportingSupported",
            "iDiscretePerformanceLevels",
            "sEngineClock",
            "sMemoryClock",
            "sVddc",
            "iVddc",
            "aLevels",
            "libusb_device_descriptor",
            "bLength",
            "bDescriptorType",
            "bcdUSB",
            "bDeviceClass",
            "bDeviceSubClass",
            "bDeviceProtocol",
            "bMaxPacketSize0",
            "idVendor",
            "idProduct",
            "bcdDevice",
            "iManufacturer",
            "iProduct",
            "iSerialNumber",
            "bNumConfigurations",
            "dclk_data",
            "freqM",
            "freqMaxM",
            "freqMDefault",
            "minGoodSamples",
            "errorCount",
            "errorWeight",
            "errorRate",
            "maxErrorRate",
            "device_thread",
            "primary_thread",
            "last",
            "sick",
            "scanhash_working",
            "hashes_done",
            "tv_hashes_done",
            "tv_lastupdate",
            "pause",
            "getwork",
            "rolling",
            "prev_work",
            "work",
            "next_work",
            "tv_morework",
            "results_work",
            "_job_transition_in_progress",
            "_proceed_with_new_job",
            "tv_results_jobstart",
            "tv_jobstart",
            "tv_poll",
            "notifier",
            "starting_next_work",
            "_max_nonce",
            "work_restart",
            "work_restart_notifier",
            "libztex_device",
            "mutex",
            "root",
            "fpgaNum",
            "descriptor",
            "hndl",
            "usbbus",
            "usbaddress",
            "snString",
            "productId",
            "fwVersion",
            "interfaceVersion",
            "interfaceCapabilities",
            "moduleReserved",
            "numNonces",
            "offsNonces",
            "freqM1",
            "bitFileName",
            "suspendSupported",
            "hashesPerClock",
            "extraSolutions",
            "dclk",
            "numberOfFpgas",
            "selectedFpga",
            "parallelConfigSupport",
            "repr",
            "alive",
            "LIFE_WELL",
            "LIFE_SICK",
            "LIFE_DEAD",
            "LIFE_NOSTART",
            "LIFE_INIT",
            "LIFE_WAIT",
            "gpu_adl",
            "lpTemperature",
            "iAdapterIndex",
            "lpAdapterID",
            "iBusNumber",
            "strAdapterName",
            "lpActivity",
            "lpOdParameters",
            "DefPerfLev",
            "lpFanSpeedInfo",
            "lpFanSpeedValue",
            "DefFanSpeedValue",
            "iVddc",
            "iPercentage",
            "autofan",
            "autoengine",
            "managed",
            "lastengine",
            "lasttemp",
            "targetfan",
            "overtemp",
            "minspeed",
            "maxspeed",
            "has_fanspeed",
            "twin",
            "device_api",
            "dname",
            "name",
            "api_detect",
            "get_dev_statline_before",
            "get_dev_statline_after",
            "reinit_device",
            "get_statline_before",
            "get_statline",
            "get_api_extra_device_detail",
            "get_api_extra_device_status",
            "get_api_stats",
            "get_stats",
            "identify_device",
            "set_device",
            "thread_prepare",
            "minerloop",
            "can_limit_work",
            "thread_init",
            "prepare_work",
            "scanhash",
            "hw_error",
            "thread_shutdown",
            "thread_enable",
            "poll",
            "job_prepare",
            "job_start",
            "job_get_results",
            "job_process_results",
            " cgpu_info",
            "cgminer_id",
            "device_line_id",
            "devtype",
            "device_id",
            "dev_repr",
            "dev_repr_ns",
            "name",
            "procs",
            "proc_id",
            "proc_repr",
            "proc_repr_ns",
            "next_proc",
            "device_path",
            "device_file",
            "#h!5",
            "work_start_tv",
            "wait_ms",
            "sleep_ms",
            "avg_wait_f",
            "avg_wait_d",
            "polling",
            "flash_led",
            "device_mutex",
            "deven",
            "hw_errors",
            "rolling",
            "total_mhashes",
            "utility",
            "utility_diff1",
            "init",
            "last_message_tv",
            "max_hashes",
            "kname",
            "mapped",
            "virtual_adl",
            "dynamic",
            "work_size",
            "max_alloc",
            "opt_lg",
            "lookup_gap",
            "opt_tc",
            "thread_concurrency",
            "shaders",
            "tv_gpustart",
            "intervals",
            "temp",
            "cutofftemp",
            "targettemp",
            "has_adl",
            "gpu_engine",
            "min_engine",
            "gpu_fan",
            "min_fan",
            "gpu_memclock",
            "gpu_memdiff",
            "gpu_powertune",
            "gpu_vddc",
            "diff1",
            "last_share_pool",
            "last_share_pool_time",
            "device_last_well",
            "device_last_not_well",
            "device_not_well_reason",
            "reinit_backoff",
            "thread_fail_init_count",
            "thread_zero_hash_count",
            "thread_fail_queue_count",
            "dev_sick_idle_60_count",
            "dev_dead_idle_600_count",
            "dev_nostart_count",
            "dev_over_heat_count",
            "dev_thermal_cutoff_count",
            "dev_comms_error_count",
            "dev_throttle_count",
            "api_data",
            "type",
            "name",
            "data",
            "data_was_malloc",
            "prev",
            "next",
            " work",
            "data",
            "target",
            "hash",
            "rolls",
            "pool",
            "tv_staged",
            "mined",
            "clone",
            "cloned",
            "longpoll",
            "stale",
            "mandatory",
            "block",
            "queued",
            "stratum",
            "job_id",
            "nonce2",
            "ntime",
            "sdiff",
            "work_difficulty",
            "tmpl",
            "tmpl_refcount",
            "dataid",
            "tv_getwork",
            "tv_getwork_reply",
            "tv_cloned",
            "tv_work_start",
            "tv_work_found",
            "getwork_mode",
            "list",
            "#dev_enable",
            "DEV_ENABLED",
            "DEV_DISABLED",
            "DEV_RECOVER",
            "DEV_RECOVER_ERR",
            "#cl_kernels",
            "KL_NONE",
            "KL_POCLBM",
            "KL_PHATK",
            "KL_DIAKGCN",
            "KL_DIABLO",
            "KL_SCRYPT",
            "dev_reason",
            "REASON_THREAD_FAIL_INIT",
            "REASON_THREAD_ZERO_HASH",
            "REASON_THREAD_FAIL_QUEUE",
            "REASON_DEV_SICK_IDLE_60",
            "REASON_DEV_DEAD_IDLE_600",
            "REASON_DEV_NOSTART",
            "REASON_DEV_OVER_HEAT",
            "REASON_DEV_THERMAL_CUTOFF",
            "REASON_DEV_COMMS_ERROR",
            "REASON_DEV_THROTTLE",
            "_get_start",
            "getwork_attempts",
            "getwork_wait_rolling",
            "hadrolltime",
            "canroll",
            "hadexpire",
            "min_diff",
            "max_diff",
            "last_diff",
            "min_diff_count",
            "max_diff_count",
            "times_sent",
            "bytes_sent",
            "net_bytes_sent",
            "times_received",
            "bytes_received",
            "net_bytes_received",
            "%device_ztex",
            "%device_fd",
            "%device_ft232r",
            "ft232r_device_handle",
            "thread_q",
            "frozen",
            "mutex",
            "cond",
            "ctx_a",
            "ctx_b",
            "ctx_c",
            "ctx_d",
            "ctx_e",
            "ctx_f",
            "ctx_g",
            "ctx_h",
            "cty_a",
            "cty_b",
            "cty_c",
            "cty_d",
            "cty_e",
            "cty_f",
            "cty_g",
            "cty_h",
            "merkle",
            "ntime",
            "nbits",
            "nonce",
            "fW15",
            "fW01r",
            "fcty_e",
            "fcty_e2",
            "PreVal4",
            "C1addK5",
            "W17_2",
            "PreVal4addT1",
            "T1substate0",
            "PreVal4_2",
            "PreVal0",
            "PreW18",
            "PreW19",
            "PreW31",
            "PreW32",
            "B1addK6",
            "PreVal0addK7",
            "W16addK16",
            "W17addK17",
            "zeroA",
            "zeroB",
            "oneA",
            "twoA",
            "threeA",
            "fourA",
            "fiveA",
            "sixA",
            "sevenA",
            "work",
            "dev_blk_ctx",
            "#pool_enable",
            "POOL_DISABLED",
            "POOL_ENABLED",
            "POOL_REJECTING",
            "#pool_protocol",
            "PLP_NONE",
            "PLP_GETWORK",
            "PLP_GETBLOCKTEMPLATE",
            "stratum_work",
            "job_id",
            "prev_hash",
            "coinbase1",
            "coinbase2",
            "merkle",
            "bbversion",
            "nbit",
            "ntime",
            "clean",
            "cb1_len",
            "cb2_len",
            "cb_len",
            "header_len",
            "merkles",
            "diff",
            "transparency_probed",
            "transparency_time",
            "opaque",
            " pool",
            "pool_no",
            "prio",
            "seq_rejects",
            "seq_getfails",
            "solved",
            "diff1",
            "diff",
            "diff_stale",
            "submit_fail",
            "idle",
            "lagging",
            "probed",
            "force_rollntime",
            "enabled",
            "submit_old",
            "removed",
            "lp_started",
            "block_id",
            "proto",
            "hdr_path",
            "lp_url",
            "lp_id",
            "lp_proto",
            "lp_socket",
            "getwork_requested",
            "stale_shares",
            "discarded_work",
            "getfail_occasions",
            "remotefail_occasions",
            "tv_idle",
            "utility",
            "last_shares",
            "shares",
            "rpc_url",
            "rpc_userpass",
            "rpc_user",
            "rpc_pass",
            "rpc_proxy",
            "pool_lock",
            "submit_q",
            "getwork_q",
            "longpoll_thread",
            "submit_thread",
            "getwork_thread",
            "curls",
            "cr_cond",
            "curlring",
            "sws_waiting_on_curl",
            "last_share_time",
            "best_diff",
            "stratum_url",
            "stratum_port",
            "stratum_curl",
            "sock",
            "sockbuf",
            "sockbuf_size",
            "sockaddr_url",
            "nonce1",
            "n1_len",
            "nonce2",
            "n2size",
            "has_stratum",
            "stratum_active",
            "last_work_time",
            "stratum_auth",
            "stratum_notify",
            "swork",
            "stratum_thread",
            "stratum_lock",
            "last_work_lock",
            "last_work_copy",
            "submit_work_state",
            "#api_data_type",
            "API_ESCAPE",
            "API_STRING",
            "API_CONST",
            "API_INT",
            "API_UINT",
            "API_UINT32",
            "API_UINT64",
            "API_DOUBLE",
            "API_ELAPSED",
            "API_BOOL",
            "API_TIMEVAL",
            "API_TIME",
            "API_MHS",
            "API_MHTOTAL",
            "API_TEMP",
            "API_UTILITY",
            "API_FREQ",
            "API_VOLTS",
            "API_HS",
            "API_DIFF",
            "API_JSON",
            "context",
            "commandQueue",
            "program",
            "outputBuffer",
            "CLbuffer0",
            "padbuffer8",
            "padbufsize",
            "cldata",
            "hasBitAlign",
            "hasOpenCL11plus",
            "goffset",
            "max_work_size",
            "wsize",
            "chosen_kernel",
            "_clState",
            "opencl_thread_data",
            "queue_kernel_parameters",
            "&_curl_easy_setopt_err_long",
            "&_curl_easy_setopt_err_curl_off_t",
            "&_curl_easy_setopt_err_string",
            "&_curl_easy_setopt_err_write_callback",
            "&_curl_easy_setopt_err_read_cb",
            "&_curl_easy_setopt_err_ioctl_cb",
            "&_curl_easy_setopt_err_sockopt_cb",
            "&_curl_easy_setopt_err_opensocket_cb",
            "&_curl_easy_setopt_err_progress_cb",
            "&_curl_easy_setopt_err_debug_cb",
            "&_curl_easy_setopt_err_ssl_ctx_cb",
            "&_curl_easy_setopt_err_conv_cb",
            "&_curl_easy_setopt_err_seek_cb",
            "&_curl_easy_setopt_err_cb_data",
            "&_curl_easy_setopt_err_error_buffer",
            "&_curl_easy_setopt_err_FILE",
            "&_curl_easy_setopt_err_postfields",
            "&_curl_easy_setopt_err_curl_httpost",
            "&_curl_easy_setopt_err_curl_slist",
            "&_curl_easy_setopt_err_CURLSH",
            "&_curl_easy_getinfo_err_string",
            "&_curl_easy_getinfo_err_long",
            "&_curl_easy_getinfo_err_double",
            "&_curl_easy_getinfo_err_curl_slist",
            "'__real_getch",
            "(load_opencl_symbols",
            "set_vector",
            "+arg",
            "l,val",
            "set_worksize",
            "+arg",
            "l,val",
            "set_shaders",
            "+arg",
            "l,val",
            "set_lookup_gap",
            "+arg",
            "l,val",
            "set_thread_concurrency",
            "+arg",
            "l,val",
            ".select_kernel",
            "+arg",
            "set_kernel",
            "+arg",
            ",kern",
            "set_gpu_map",
            "+arg",
            ",val1",
            "d,val2",
            "get_intrange",
            "+arg",
            "+val1",
            "+val2",
            "set_gpu_engine",
            "+arg",
            "l,val1",
            "\\,val2",
            "set_gpu_fan",
            "+arg",
            "l,val1",
            "\\,val2",
            "set_gpu_memclock",
            "+arg",
            "l,val",
            "set_gpu_memdiff",
            "+arg",
            "l,val",
            "set_gpu_powertune",
            "+arg",
            "l,val",
            "set_gpu_vddc",
            "+arg",
            "h,val",
            "set_temp_overheat",
            "+arg",
            "l,val",
            "d,to",
            "set_intensity",
            "+arg",
            "h,tt",
            "X,val",
            "print_ndevs_and_exit",
            "+ndevs",
            "pause_dynamic_threads",
            "+gpu",
            "\\0CjC",
            ",thr",
            "manage_gpu",
            ",thr",
            ",selected",
            "\\,gpu",
            "T,checkin",
            "~,input",
            "~1retry",
            "2VkC",
            ",displayed_rolling",
            "H,displayed_total",
            "@,mhash_base",
            ",engineclock",
            "~,memclock",
            "~,activity",
            "~,fanspeed",
            "~,fanpercent",
            "~,powertune",
            "~,temp",
            "~,vddc",
            "~0mC",
            ",logline",
            "0qtC",
            ",intvar",
            ".queue_poclbm_kernel",
            "+blk",
            "X,num",
            "h0yC",
            ".queue_phatk_kernel",
            "+blk",
            "l,num",
            ".queue_diakgcn_kernel",
            "+blk",
            "X,num",
            ".queue_diablo_kernel",
            "+blk",
            "X,num",
            ".queue_scrypt_kernel",
            "+blk",
            "`,num",
            "\\,le_target",
            "4set_threads_hashes",
            "+vectors",
            "+hashes",
            "+minthreads",
            "reinit_gpu",
            "+userdata",
            ",mythr",
            "X,sel_cgpu",
            "P,thr",
            "H,now",
            ",name",
            "l1select_cgpu",
            "1out",
            "5opencl_detect",
            "l0@C",
            "4reinit_opencl_device",
            "+gpu",
            "4get_opencl_statline_before",
            "+buf",
            "+gpu",
            ",gpuid",
            "l,gt",
            "h,gf",
            "d,gp",
            ".get_opencl_api_extra_device_status",
            "+gpu",
            ",root",
            "h,gt",
            "d,gv",
            "`,ga",
            "\\,gf",
            "X,gp",
            "T,gc",
            "P,gm",
            "L,pt",
            ".opencl_thread_prepare",
            "+thr",
            ",name",
            "},now",
            "h,gpu",
            "\\,failmessage",
            ",buf",
            ".opencl_thread_init",
            "+thr",
            "l,gpu",
            "`,thrdata",
            ".opencl_prepare_work",
            "+thr",
            "+work",
            ".opencl_scanhash",
            "+thr",
            "+work",
            "+max_nonce",
            "X,thrdata",
            "P,gpu",
            ",dynamic_us",
            ",localThreads",
            ",hashes",
            ",tv_gpuend",
            ",gpu_us",
            ",global_work_offset",
            "4opencl_thread_shutdown",
            "+thr",
            ",clStates",
            ",blank_res",
            "6stdscr",
            "7opt_log_output",
            "6use_curses",
            "6nDevs",
            "9gpus",
            "6opt_scrypt",
            "6total_secs",
            "6mining_threads",
            "9cpus",
            "6have_opencl",
            "9opencl_api",
            ":adl_active",
            ":opt_reorder",
            ":opt_targettemp",
            ":opt_overheattemp",
            ":clGetPlatformIDs",
            ":clGetPlatformInfo",
            ":clGetDeviceIDs",
            ":clGetDeviceInfo",
            ":clCreateContextFromType",
            ":clReleaseContext",
            ":clCreateCommandQueue",
            ":clReleaseCommandQueue",
            ":clCreateBuffer",
            ":clCreateProgramWithSource",
            ":clCreateProgramWithBinary",
            ":clReleaseProgram",
            ":clBuildProgram",
            ":clGetProgramInfo",
            ":clGetProgramBuildInfo",
            ":clCreateKernel",
            ":clReleaseKernel",
            ":clSetKernelArg",
            ":clFinish",
            ":clEnqueueReadBuffer",
            ":clEnqueueWriteBuffer",
            ":clEnqueueNDRangeKernel",
            "6logwin",
            "6opt_g_threads",
            "6opt_loginput",
            "6gpur_thr_id",
            "6opt_noadl",
            "6opt_dynamic_interval",
            "GNU C 4.6.3",
            "ocl.c",
            "/home/luke-jr/Projects/Education/Tonal/BitCoin/cgminer",
            "char",
            "size_t",
            "long long unsigned int",
            "long long int",
            "intptr_t",
            "ptrdiff_t",
            "short unsigned int",
            "long int",
            "__time64_t",
            "time_t",
            "unsigned int",
            "long unsigned int",
            "unsigned char",
            "_ino_t",
            "_dev_t",
            "_off_t",
            "double",
            "float",
            "long double",
            "_iobuf",
            "_ptr",
            "_cnt",
            "_base",
            "_flag",
            "_file",
            "_charbuf",
            "_bufsiz",
            "_tmpfname",
            "FILE",
            "signed char",
            "short int",
            "UINT_PTR",
            "VARENUM",
            "VT_EMPTY",
            "VT_NULL",
            "VT_I2",
            "VT_I4",
            "VT_R4",
            "VT_R8",
            "VT_CY",
            "VT_DATE",
            "VT_BSTR",
            "VT_DISPATCH",
            "VT_ERROR",
            "VT_BOOL",
            "VT_VARIANT",
            "VT_UNKNOWN",
            "VT_DECIMAL",
            "VT_I1",
            "VT_UI1",
            "VT_UI2",
            "VT_UI4",
            "VT_I8",
            "VT_UI8",
            "VT_INT",
            "VT_UINT",
            "VT_VOID",
            "VT_HRESULT",
            "VT_PTR",
            "VT_SAFEARRAY",
            "VT_CARRAY",
            "VT_USERDEFINED",
            "VT_LPSTR",
            "VT_LPWSTR",
            "VT_RECORD",
            "VT_INT_PTR",
            "VT_UINT_PTR",
            "VT_FILETIME",
            "VT_BLOB",
            "VT_STREAM",
            "VT_STORAGE",
            "VT_STREAMED_OBJECT",
            "VT_STORED_OBJECT",
            "VT_BLOB_OBJECT",
            "VT_CF",
            "VT_CLSID",
            "VT_VERSIONED_STREAM",
            "VT_BSTR_BLOB",
            "VT_VECTOR",
            "VT_ARRAY",
            "VT_BYREF",
            "VT_RESERVED",
            "VT_ILLEGAL",
            "VT_ILLEGALMASKED",
            "VT_TYPEMASK",
            "timeval",
            "tv_sec",
            "tv_usec",
            "SOCKET",
            "ptw32_handle_t",
            "pthread_t",
            "pthread_mutex_t",
            "pthread_mutex_t_",
            "pthread_cond_t",
            "pthread_cond_t_",
            "stat",
            "st_dev",
            "st_ino",
            "st_mode",
            "st_nlink",
            "st_uid",
            "st_gid",
            "st_rdev",
            "st_size",
            "st_atime",
            "st_mtime",
            "st_ctime",
            "uint8_t",
            "int16_t",
            "uint16_t",
            "int32_t",
            "uint32_t",
            "int64_t",
            "uint64_t",
            "CURL",
            "curl_socket_t",
            "blkheight_t",
            "libblkmaker_hash_t",
            "blkhash_t",
            "txnhash_t",
            "blktime_t",
            "blktime_diff_t",
            "blknonce_t",
            "blktxn_t",
            "data",
            "datasz",
            "hash",
            "dependcount",
            "depends",
            "required",
            "sigops",
            "_Bool",
            "blktmpl_longpoll_req",
            "GBT_CBTXN",
            "GBT_CBVALUE",
            "GBT_WORKID",
            "GBT_LONGPOLL",
            "GBT_PROPOSAL",
            "GBT_SERVICE",
            "BMM_CBAPPEND",
            "BMM_CBSET",
            "BMM_GENERATE",
            "BMM_TIMEINC",
            "BMM_TIMEDEC",
            "BMM_TXNADD",
            "BMM_PREVBLK",
            "BMM_VERFORCE",
            "BMM_VERDROP",
            "BMA_TXNHASH",
            "BMAb_COINBASE",
            "BMAb_TRUNCATE",
            "BMAs_COINBASE",
            "BMAs_MERKLE",
            "BMAs_TRUNCATE",
            "gbt_capabilities_t",
            "blkmutations_t",
            "version",
            "diffbits",
            "height",
            "prevblk",
            "sigoplimit",
            "sizelimit",
            "txncount",
            "txns",
            "cbtxn",
            "cbvalue",
            "_time_rcvd",
            "curtime",
            "auxcount",
            "auxnames",
            "auxdata",
            "workid",
            "submitold",
            "expires",
            "target",
            "mutations",
            "maxtime",
            "maxtimeoff",
            "mintime",
            "mintimeoff",
            "minnonce",
            "maxnonce",
            "_mrklroot",
            "next_dataid",
            "blktemplate_t",
            "list_head",
            "next",
            "prev",
            "hh_head",
            "count",
            "expand_mult",
            "prev",
            "next",
            "hh_prev",
            "hh_next",
            "keylen",
            "hashv",
            "UT_hash_table",
            "buckets",
            "num_buckets",
            "log2_num_buckets",
            "num_items",
            "tail",
            "ideal_chain_maxlen",
            "nonideal_items",
            "ineff_expands",
            "noexpand",
            "signature",
            "LOG_ERR",
            "LOG_WARNING",
            "LOG_NOTICE",
            "LOG_INFO",
            "LOG_DEBUG",
            "notifier_t",
            "cl_int",
            "cl_uint",
            "cl_ulong",
            "cl_platform_id",
            "_cl_platform_id",
            "cl_device_id",
            "_cl_device_id",
            "cl_context",
            "_cl_context",
            "cl_command_queue",
            "_cl_command_queue",
            "cl_mem",
            "_cl_mem",
            "cl_program",
            "_cl_program",
            "cl_kernel",
            "_cl_kernel",
            "cl_bitfield",
            "cl_device_type",
            "cl_platform_info",
            "cl_device_info",
            "cl_command_queue_properties",
            "cl_context_properties",
            "cl_mem_flags",
            "cl_program_info",
            "cl_program_build_info",
            "iVddc",
            "iActivityPercent",
            "iCurrentPerformanceLevel",
            "iCurrentBusSpeed",
            "iCurrentBusLanes",
            "iMaximumBusLanes",
            "iTemperature",
            "iFlags",
            "iMinPercent",
            "iMaxPercent",
            "iMinRPM",
            "iMaxRPM",
            "iSpeedType",
            "iFanSpeed",
            "iFlags",
            "iMin",
            "iMax",
            "iStep",
            "iNumberOfPerformanceLevels",
            "iActivityReportingSupported",
            "iDiscretePerformanceLevels",
            "sEngineClock",
            "sMemoryClock",
            "sVddc",
            "iVddc",
            "aLevels",
            "libusb_device_descriptor",
            "bLength",
            "bDescriptorType",
            "bcdUSB",
            "bDeviceClass",
            "bDeviceSubClass",
            "bDeviceProtocol",
            "bMaxPacketSize0",
            "idVendor",
            "idProduct",
            "bcdDevice",
            "iManufacturer",
            "iProduct",
            "iSerialNumber",
            "bNumConfigurations",
            "dclk_data",
            "freqM",
            "freqMaxM",
            "freqMDefault",
            "minGoodSamples",
            "errorCount",
            "errorWeight",
            "errorRate",
            "maxErrorRate",
            "thr_info",
            "device_thread",
            "primary_thread",
            "cgpu",
            "last",
            "sick",
            "scanhash_working",
            "hashes_done",
            "tv_hashes_done",
            "tv_lastupdate",
            "pause",
            "getwork",
            "rolling",
            "prev_work",
            "work",
            "next_work",
            "tv_morework",
            "results_work",
            "_job_transition_in_progress",
            "_proceed_with_new_job",
            "tv_results_jobstart",
            "tv_jobstart",
            "tv_poll",
            "notifier",
            "starting_next_work",
            "_max_nonce",
            "work_restart",
            "work_restart_notifier",
            "libztex_device",
            "mutex",
            "root",
            "fpgaNum",
            "descriptor",
            "hndl",
            "usbbus",
            "usbaddress",
            "snString",
            "productId",
            "fwVersion",
            "interfaceVersion",
            "interfaceCapabilities",
            "moduleReserved",
            "numNonces",
            "offsNonces",
            "freqM1",
            "bitFileName",
            "suspendSupported",
            "hashesPerClock",
            "extraSolutions",
            "dclk",
            "numberOfFpgas",
            "selectedFpga",
            "parallelConfigSupport",
            "repr",
            "alive",
            "LIFE_WELL",
            "LIFE_SICK",
            "LIFE_DEAD",
            "LIFE_NOSTART",
            "LIFE_INIT",
            "LIFE_WAIT",
            "gpu_adl",
            "lpTemperature",
            "iAdapterIndex",
            "lpAdapterID",
            "iBusNumber",
            "strAdapterName",
            "lpActivity",
            "lpOdParameters",
            "DefPerfLev",
            "lpFanSpeedInfo",
            "lpFanSpeedValue",
            "DefFanSpeedValue",
            "iVddc",
            "iPercentage",
            "autofan",
            "autoengine",
            "managed",
            "lastengine",
            "lasttemp",
            "targetfan",
            "overtemp",
            "minspeed",
            "maxspeed",
            "has_fanspeed",
            "twin",
            "device_api",
            "dname",
            "name",
            "api_detect",
            "get_dev_statline_before",
            "get_dev_statline_after",
            "reinit_device",
            "get_statline_before",
            "get_statline",
            "get_api_extra_device_detail",
            "get_api_extra_device_status",
            "get_api_stats",
            "get_stats",
            "identify_device",
            "set_device",
            "thread_prepare",
            "minerloop",
            "can_limit_work",
            "thread_init",
            "prepare_work",
            "scanhash",
            "hw_error",
            "thread_shutdown",
            "thread_enable",
            "poll",
            "job_prepare",
            "job_start",
            "job_get_results",
            "job_process_results",
            " cgpu_info",
            "cgminer_id",
            "device_line_id",
            "devtype",
            "device_id",
            "dev_repr",
            "dev_repr_ns",
            "name",
            "procs",
            "proc_id",
            "proc_repr",
            "proc_repr_ns",
            "device",
            "next_proc",
            "device_path",
            "device_file",
            "#h!m4",
            "work_start_tv",
            "wait_ms",
            "sleep_ms",
            "avg_wait_f",
            "avg_wait_d",
            "nonces",
            "polling",
            "flash_led",
            "device_mutex",
            "deven",
            "hw_errors",
            "rolling",
            "total_mhashes",
            "utility",
            "utility_diff1",
            "init",
            "last_message_tv",
            "threads",
            "max_hashes",
            "kname",
            "mapped",
            "virtual_gpu",
            "virtual_adl",
            "intensity",
            "dynamic",
            "vwidth",
            "work_size",
            "kernel",
            "max_alloc",
            "opt_lg",
            "lookup_gap",
            "opt_tc",
            "thread_concurrency",
            "shaders",
            "tv_gpustart",
            "intervals",
            "temp",
            "cutofftemp",
            "targettemp",
            "has_adl",
            "gpu_engine",
            "min_engine",
            "gpu_fan",
            "min_fan",
            "gpu_memclock",
            "gpu_memdiff",
            "gpu_powertune",
            "gpu_vddc",
            "diff1",
            "last_share_pool",
            "last_share_pool_time",
            "device_last_well",
            "device_last_not_well",
            "device_not_well_reason",
            "reinit_backoff",
            "thread_fail_init_count",
            "thread_zero_hash_count",
            "thread_fail_queue_count",
            "dev_sick_idle_60_count",
            "dev_dead_idle_600_count",
            "dev_nostart_count",
            "dev_over_heat_count",
            "dev_thermal_cutoff_count",
            "dev_comms_error_count",
            "dev_throttle_count",
            "api_data",
            "type",
            "name",
            "data",
            "data_was_malloc",
            "prev",
            "next",
            " work",
            "data",
            "midstate",
            "target",
            "hash",
            "rolls",
            "thr_id",
            "pool",
            "tv_staged",
            "mined",
            "clone",
            "cloned",
            "longpoll",
            "stale",
            "mandatory",
            "block",
            "queued",
            "stratum",
            "job_id",
            "nonce2",
            "ntime",
            "sdiff",
            "work_difficulty",
            "tmpl",
            "tmpl_refcount",
            "dataid",
            "tv_getwork",
            "tv_getwork_reply",
            "tv_cloned",
            "tv_work_start",
            "tv_work_found",
            "getwork_mode",
            "list",
            "#dev_enable",
            "DEV_ENABLED",
            "DEV_DISABLED",
            "DEV_RECOVER",
            "DEV_RECOVER_ERR",
            "#cl_kernels",
            "KL_NONE",
            "KL_POCLBM",
            "KL_PHATK",
            "KL_DIAKGCN",
            "KL_DIABLO",
            "KL_SCRYPT",
            "dev_reason",
            "REASON_THREAD_FAIL_INIT",
            "REASON_THREAD_ZERO_HASH",
            "REASON_THREAD_FAIL_QUEUE",
            "REASON_DEV_SICK_IDLE_60",
            "REASON_DEV_DEAD_IDLE_600",
            "REASON_DEV_NOSTART",
            "REASON_DEV_OVER_HEAT",
            "REASON_DEV_THERMAL_CUTOFF",
            "REASON_DEV_COMMS_ERROR",
            "REASON_DEV_THROTTLE",
            "_get_start",
            "getwork_attempts",
            "getwork_wait_rolling",
            "hadrolltime",
            "canroll",
            "hadexpire",
            "min_diff",
            "max_diff",
            "last_diff",
            "min_diff_count",
            "max_diff_count",
            "times_sent",
            "bytes_sent",
            "net_bytes_sent",
            "times_received",
            "bytes_received",
            "net_bytes_received",
            "%device_ztex",
            "%device_fd",
            "%device_ft232r",
            "ft232r_device_handle",
            "thread_q",
            "frozen",
            "mutex",
            "cond",
            "ctx_a",
            "ctx_b",
            "ctx_c",
            "ctx_d",
            "ctx_e",
            "ctx_f",
            "ctx_g",
            "ctx_h",
            "cty_a",
            "cty_b",
            "cty_c",
            "cty_d",
            "cty_e",
            "cty_f",
            "cty_g",
            "cty_h",
            "merkle",
            "ntime",
            "nbits",
            "nonce",
            "fW15",
            "fW01r",
            "fcty_e",
            "fcty_e2",
            "PreVal4",
            "C1addK5",
            "W17_2",
            "PreVal4addT1",
            "T1substate0",
            "PreVal4_2",
            "PreVal0",
            "PreW18",
            "PreW19",
            "PreW31",
            "PreW32",
            "B1addK6",
            "PreVal0addK7",
            "W16addK16",
            "W17addK17",
            "zeroA",
            "zeroB",
            "oneA",
            "twoA",
            "threeA",
            "fourA",
            "fiveA",
            "sixA",
            "sevenA",
            "work",
            "dev_blk_ctx",
            "#pool_enable",
            "POOL_DISABLED",
            "POOL_ENABLED",
            "POOL_REJECTING",
            "#pool_protocol",
            "PLP_NONE",
            "PLP_GETWORK",
            "PLP_GETBLOCKTEMPLATE",
            "stratum_work",
            "job_id",
            "prev_hash",
            "coinbase1",
            "coinbase2",
            "merkle",
            "bbversion",
            "nbit",
            "ntime",
            "clean",
            "cb1_len",
            "cb2_len",
            "cb_len",
            "header_len",
            "merkles",
            "diff",
            "transparency_probed",
            "transparency_time",
            "opaque",
            " pool",
            "pool_no",
            "prio",
            "seq_rejects",
            "seq_getfails",
            "solved",
            "diff1",
            "diff",
            "diff_stale",
            "submit_fail",
            "idle",
            "lagging",
            "probed",
            "force_rollntime",
            "enabled",
            "submit_old",
            "removed",
            "lp_started",
            "block_id",
            "proto",
            "hdr_path",
            "lp_url",
            "lp_id",
            "lp_proto",
            "lp_socket",
            "getwork_requested",
            "stale_shares",
            "discarded_work",
            "getfail_occasions",
            "remotefail_occasions",
            "tv_idle",
            "utility",
            "last_shares",
            "shares",
            "rpc_url",
            "rpc_userpass",
            "rpc_user",
            "rpc_pass",
            "rpc_proxy",
            "pool_lock",
            "submit_q",
            "getwork_q",
            "longpoll_thread",
            "submit_thread",
            "getwork_thread",
            "curls",
            "cr_cond",
            "curlring",
            "sws_waiting_on_curl",
            "last_share_time",
            "best_diff",
            "stratum_url",
            "stratum_port",
            "stratum_curl",
            "sock",
            "sockbuf",
            "sockbuf_size",
            "sockaddr_url",
            "nonce1",
            "n1_len",
            "nonce2",
            "n2size",
            "has_stratum",
            "stratum_active",
            "last_work_time",
            "stratum_auth",
            "stratum_notify",
            "swork",
            "stratum_thread",
            "stratum_lock",
            "last_work_lock",
            "last_work_copy",
            "submit_work_state",
            "#api_data_type",
            "API_ESCAPE",
            "API_STRING",
            "API_CONST",
            "API_INT",
            "API_UINT",
            "API_UINT32",
            "API_UINT64",
            "API_DOUBLE",
            "API_ELAPSED",
            "API_BOOL",
            "API_TIMEVAL",
            "API_TIME",
            "API_MHS",
            "API_MHTOTAL",
            "API_TEMP",
            "API_UTILITY",
            "API_FREQ",
            "API_VOLTS",
            "API_HS",
            "API_DIFF",
            "API_JSON",
            "context",
            "kernel",
            "commandQueue",
            "program",
            "outputBuffer",
            "CLbuffer0",
            "padbuffer8",
            "padbufsize",
            "cldata",
            "hasBitAlign",
            "hasOpenCL11plus",
            "goffset",
            "vwidth",
            "max_work_size",
            "wsize",
            "chosen_kernel",
            "_clState",
            "&_curl_easy_setopt_err_long",
            "&_curl_easy_setopt_err_curl_off_t",
            "&_curl_easy_setopt_err_string",
            "&_curl_easy_setopt_err_write_callback",
            "&_curl_easy_setopt_err_read_cb",
            "&_curl_easy_setopt_err_ioctl_cb",
            "&_curl_easy_setopt_err_sockopt_cb",
            "&_curl_easy_setopt_err_opensocket_cb",
            "&_curl_easy_setopt_err_progress_cb",
            "&_curl_easy_setopt_err_debug_cb",
            "&_curl_easy_setopt_err_ssl_ctx_cb",
            "&_curl_easy_setopt_err_conv_cb",
            "&_curl_easy_setopt_err_seek_cb",
            "&_curl_easy_setopt_err_cb_data",
            "&_curl_easy_setopt_err_error_buffer",
            "&_curl_easy_setopt_err_FILE",
            "&_curl_easy_setopt_err_postfields",
            "&_curl_easy_setopt_err_curl_httpost",
            "&_curl_easy_setopt_err_curl_slist",
            "&_curl_easy_setopt_err_CURLSH",
            "&_curl_easy_getinfo_err_string",
            "&_curl_easy_getinfo_err_long",
            "&_curl_easy_getinfo_err_double",
            "&_curl_easy_getinfo_err_curl_slist",
            "file_contents",
            ")length",
            "*fullpath",
            "`*buffer",
            "clDevicesNum",
            "T,pbuff",
            "X,most_devices",
            "h,mdplatform",
            "`,pbuff",
            "{,devices",
            "/advance",
            "0area",
            "0marker",
            ",find",
            "patch_opcodes",
            ",opcode",
            "h,patched",
            "d,count_bfe_int",
            "`,count_bfe_uint",
            "\\,count_byte_align",
            ",clamp",
            "T,dest_rel",
            "P,alu_inst",
            "L,s2_neg",
            "H,s2_rel",
            "D,pred_sel",
            "initCl",
            "0gpu",
            "0name",
            "0nameSize",
            ",clState",
            ",patchbfi",
            "_,prog_built",
            "^,cgpu",
            ",pbuff",
            "|,vbuff",
            ",preferred_vwidth",
            "z,devices",
            "z,cps",
            "z,extensions",
            ",camo",
            ",find",
            ",devoclver",
            "~,ocl10",
            "~,binaryfilename",
            "v,numbuf",
            "u,binaryfile",
            "~,binary_sizes",
            "~,binaries",
            "~,pl",
            "u,source",
            "u,sourceSize",
            "u,slot",
            "L,cpnd",
            "u5build",
            "5built",
            ",CompilerOptions",
            "P,mt",
            ",binary_stat",
            "u,start",
            "u,length",
            ",logSize",
            "u,log",
            ",logSize",
            "u,log",
            ",ipt",
            "~,bufsize",
            "8opt_kernel_path",
            "8cgminer_path",
            "8gpus",
            "8opt_scrypt",
            "9clGetPlatformIDs",
            "9clGetPlatformInfo",
            "9clGetDeviceIDs",
            "9clGetDeviceInfo",
            "9clCreateContextFromType",
            "9clCreateCommandQueue",
            "9clCreateBuffer",
            "9clCreateProgramWithSource",
            "9clCreateProgramWithBinary",
            "9clReleaseProgram",
            "9clBuildProgram",
            "9clGetProgramInfo",
            "9clGetProgramBuildInfo",
            "9clCreateKernel",
            ":opt_platform_id",
            "GNU C 4.6.3",
            "findnonce.c",
            "/home/luke-jr/Projects/Education/Tonal/BitCoin/cgminer",
            "char",
            "size_t",
            "long long unsigned int",
            "long long int",
            "ptrdiff_t",
            "short unsigned int",
            "long int",
            "__time64_t",
            "time_t",
            "unsigned int",
            "long unsigned int",
            "unsigned char",
            "_iobuf",
            "_ptr",
            "_cnt",
            "_base",
            "_flag",
            "_file",
            "_charbuf",
            "_bufsiz",
            "_tmpfname",
            "FILE",
            "signed char",
            "uint8_t",
            "int16_t",
            "short int",
            "uint16_t",
            "uint32_t",
            "int64_t",
            "uint64_t",
            "timeval",
            "tv_sec",
            "tv_usec",
            "double",
            "float",
            "long double",
            "ptw32_handle_t",
            "pthread_t",
            "pthread_mutex_t",
            "pthread_mutex_t_",
            "pthread_cond_t",
            "pthread_cond_t_",
            "UINT_PTR",
            "VARENUM",
            "VT_EMPTY",
            "VT_NULL",
            "VT_I2",
            "VT_I4",
            "VT_R4",
            "VT_R8",
            "VT_CY",
            "VT_DATE",
            "VT_BSTR",
            "VT_DISPATCH",
            "VT_ERROR",
            "VT_BOOL",
            "VT_VARIANT",
            "VT_UNKNOWN",
            "VT_DECIMAL",
            "VT_I1",
            "VT_UI1",
            "VT_UI2",
            "VT_UI4",
            "VT_I8",
            "VT_UI8",
            "VT_INT",
            "VT_UINT",
            "VT_VOID",
            "VT_HRESULT",
            "VT_PTR",
            "VT_SAFEARRAY",
            "VT_CARRAY",
            "VT_USERDEFINED",
            "VT_LPSTR",
            "VT_LPWSTR",
            "VT_RECORD",
            "VT_INT_PTR",
            "VT_UINT_PTR",
            "VT_FILETIME",
            "VT_BLOB",
            "VT_STREAM",
            "VT_STORAGE",
            "VT_STREAMED_OBJECT",
            "VT_STORED_OBJECT",
            "VT_BLOB_OBJECT",
            "VT_CF",
            "VT_CLSID",
            "VT_VERSIONED_STREAM",
            "VT_BSTR_BLOB",
            "VT_VECTOR",
            "VT_ARRAY",
            "VT_BYREF",
            "VT_RESERVED",
            "VT_ILLEGAL",
            "VT_ILLEGALMASKED",
            "VT_TYPEMASK",
            "SOCKET",
            "CURL",
            "curl_socket_t",
            "blkheight_t",
            "libblkmaker_hash_t",
            "blkhash_t",
            "txnhash_t",
            "blktime_t",
            "blktime_diff_t",
            "blknonce_t",
            "blktxn_t",
            "data",
            "datasz",
            "hash",
            "dependcount",
            "depends",
            "required",
            "sigops",
            "_Bool",
            "blktmpl_longpoll_req",
            "GBT_CBTXN",
            "GBT_CBVALUE",
            "GBT_WORKID",
            "GBT_LONGPOLL",
            "GBT_PROPOSAL",
            "GBT_SERVICE",
            "BMM_CBAPPEND",
            "BMM_CBSET",
            "BMM_GENERATE",
            "BMM_TIMEINC",
            "BMM_TIMEDEC",
            "BMM_TXNADD",
            "BMM_PREVBLK",
            "BMM_VERFORCE",
            "BMM_VERDROP",
            "BMA_TXNHASH",
            "BMAb_COINBASE",
            "BMAb_TRUNCATE",
            "BMAs_COINBASE",
            "BMAs_MERKLE",
            "BMAs_TRUNCATE",
            "gbt_capabilities_t",
            "blkmutations_t",
            "version",
            "diffbits",
            "height",
            "prevblk",
            "sigoplimit",
            "sizelimit",
            "txncount",
            "txns",
            "cbtxn",
            "cbvalue",
            "_time_rcvd",
            "curtime",
            "auxcount",
            "auxnames",
            "auxdata",
            "workid",
            "submitold",
            "expires",
            "target",
            "mutations",
            "maxtime",
            "maxtimeoff",
            "mintime",
            "mintimeoff",
            "minnonce",
            "maxnonce",
            "_mrklroot",
            "next_dataid",
            "blktemplate_t",
            "list_head",
            "next",
            "prev",
            "hh_head",
            "count",
            "expand_mult",
            "prev",
            "next",
            "hh_prev",
            "hh_next",
            "keylen",
            "hashv",
            "UT_hash_table",
            "buckets",
            "num_buckets",
            "log2_num_buckets",
            "num_items",
            "tail",
            "ideal_chain_maxlen",
            "nonideal_items",
            "ineff_expands",
            "noexpand",
            "signature",
            "LOG_ERR",
            "LOG_WARNING",
            "LOG_NOTICE",
            "LOG_INFO",
            "LOG_DEBUG",
            "notifier_t",
            "cl_uint",
            "cl_ulong",
            "iVddc",
            "iActivityPercent",
            "iCurrentPerformanceLevel",
            "iCurrentBusSpeed",
            "iCurrentBusLanes",
            "iMaximumBusLanes",
            "iTemperature",
            "iFlags",
            "iMinPercent",
            "iMaxPercent",
            "iMinRPM",
            "iMaxRPM",
            "iSpeedType",
            "iFanSpeed",
            "iFlags",
            "iMin",
            "iMax",
            "iStep",
            "iNumberOfPerformanceLevels",
            "iActivityReportingSupported",
            "iDiscretePerformanceLevels",
            "sEngineClock",
            "sMemoryClock",
            "sVddc",
            "iVddc",
            "aLevels",
            "libusb_device_descriptor",
            "bLength",
            "bDescriptorType",
            "bcdUSB",
            "bDeviceClass",
            "bDeviceSubClass",
            "bDeviceProtocol",
            "bMaxPacketSize0",
            "idVendor",
            "idProduct",
            "bcdDevice",
            "iManufacturer",
            "iProduct",
            "iSerialNumber",
            "bNumConfigurations",
            "dclk_data",
            "freqM",
            "freqMaxM",
            "freqMDefault",
            "minGoodSamples",
            "errorCount",
            "errorWeight",
            "errorRate",
            "maxErrorRate",
            "thr_info",
            "device_thread",
            "primary_thread",
            "cgpu",
            "last",
            "sick",
            "scanhash_working",
            "hashes_done",
            "tv_hashes_done",
            "tv_lastupdate",
            "pause",
            "getwork",
            "rolling",
            "prev_work",
            "work",
            "next_work",
            "tv_morework",
            "results_work",
            "_job_transition_in_progress",
            "_proceed_with_new_job",
            "tv_results_jobstart",
            "tv_jobstart",
            "tv_poll",
            "notifier",
            "starting_next_work",
            "_max_nonce",
            "work_restart",
            "work_restart_notifier",
            "libztex_device",
            "mutex",
            "root",
            "fpgaNum",
            "descriptor",
            "hndl",
            "usbbus",
            "usbaddress",
            "snString",
            "productId",
            "fwVersion",
            "interfaceVersion",
            "interfaceCapabilities",
            "moduleReserved",
            "numNonces",
            "offsNonces",
            "freqM1",
            "bitFileName",
            "suspendSupported",
            "hashesPerClock",
            "extraSolutions",
            "dclk",
            "numberOfFpgas",
            "selectedFpga",
            "parallelConfigSupport",
            "repr",
            "alive",
            "LIFE_WELL",
            "LIFE_SICK",
            "LIFE_DEAD",
            "LIFE_NOSTART",
            "LIFE_INIT",
            "LIFE_WAIT",
            "gpu_adl",
            "lpTemperature",
            "iAdapterIndex",
            "lpAdapterID",
            "iBusNumber",
            "strAdapterName",
            "lpActivity",
            "lpOdParameters",
            "DefPerfLev",
            "lpFanSpeedInfo",
            "lpFanSpeedValue",
            "DefFanSpeedValue",
            "iVddc",
            "iPercentage",
            "autofan",
            "autoengine",
            "managed",
            "lastengine",
            "lasttemp",
            "targetfan",
            "overtemp",
            "minspeed",
            "maxspeed",
            "has_fanspeed",
            "twin",
            "device_api",
            "dname",
            "name",
            "api_detect",
            "get_dev_statline_before",
            "get_dev_statline_after",
            "reinit_device",
            "get_statline_before",
            "get_statline",
            "get_api_extra_device_detail",
            "get_api_extra_device_status",
            "get_api_stats",
            "get_stats",
            "identify_device",
            "set_device",
            "thread_prepare",
            "minerloop",
            "can_limit_work",
            "thread_init",
            "prepare_work",
            "scanhash",
            "hw_error",
            "thread_shutdown",
            "thread_enable",
            "poll",
            "job_prepare",
            "job_start",
            "job_get_results",
            "job_process_results",
            "cgpu_info",
            "cgminer_id",
            "device_line_id",
            "devtype",
            "device_id",
            "dev_repr",
            "dev_repr_ns",
            "name",
            "procs",
            "proc_id",
            "proc_repr",
            "proc_repr_ns",
            "device",
            "next_proc",
            "device_path",
            "device_file",
            "#h 51",
            "work_start_tv",
            "wait_ms",
            "sleep_ms",
            "avg_wait_f",
            "avg_wait_d",
            "nonces",
            "polling",
            "flash_led",
            "device_mutex",
            "deven",
            "rolling",
            "total_mhashes",
            "utility",
            "utility_diff1",
            "status",
            "init",
            "last_message_tv",
            "threads",
            "max_hashes",
            "kname",
            "mapped",
            "virtual_gpu",
            "virtual_adl",
            "intensity",
            "dynamic",
            "vwidth",
            "work_size",
            "kernel",
            "max_alloc",
            "opt_lg",
            "lookup_gap",
            "opt_tc",
            "thread_concurrency",
            "shaders",
            "tv_gpustart",
            "intervals",
            "temp",
            "cutofftemp",
            "targettemp",
            "has_adl",
            "gpu_engine",
            "min_engine",
            "gpu_fan",
            "min_fan",
            "gpu_memclock",
            "gpu_memdiff",
            "gpu_powertune",
            "gpu_vddc",
            "diff1",
            "last_share_pool",
            "last_share_pool_time",
            "device_last_well",
            "device_last_not_well",
            "device_not_well_reason",
            "reinit_backoff",
            "thread_fail_init_count",
            "thread_zero_hash_count",
            "thread_fail_queue_count",
            "dev_sick_idle_60_count",
            "dev_dead_idle_600_count",
            "dev_nostart_count",
            "dev_over_heat_count",
            "dev_thermal_cutoff_count",
            "dev_comms_error_count",
            "dev_throttle_count",
            "api_data",
            "type",
            "name",
            "data",
            "data_was_malloc",
            "prev",
            "next",
            "work",
            "data",
            "midstate",
            "target",
            "hash",
            "rolls",
            "thr_id",
            "pool",
            "tv_staged",
            "mined",
            "clone",
            "cloned",
            "longpoll",
            "stale",
            "mandatory",
            "block",
            "queued",
            "stratum",
            "job_id",
            "nonce2",
            "ntime",
            "sdiff",
            "work_difficulty",
            "tmpl",
            "tmpl_refcount",
            "dataid",
            "tv_getwork",
            "tv_getwork_reply",
            "tv_cloned",
            "tv_work_start",
            "tv_work_found",
            "getwork_mode",
            "list",
            "\"dev_enable",
            "DEV_ENABLED",
            "DEV_DISABLED",
            "DEV_RECOVER",
            "DEV_RECOVER_ERR",
            "\"cl_kernels",
            "KL_NONE",
            "KL_POCLBM",
            "KL_PHATK",
            "KL_DIAKGCN",
            "KL_DIABLO",
            "KL_SCRYPT",
            "dev_reason",
            "REASON_THREAD_FAIL_INIT",
            "REASON_THREAD_ZERO_HASH",
            "REASON_THREAD_FAIL_QUEUE",
            "REASON_DEV_SICK_IDLE_60",
            "REASON_DEV_DEAD_IDLE_600",
            "REASON_DEV_NOSTART",
            "REASON_DEV_OVER_HEAT",
            "REASON_DEV_THERMAL_CUTOFF",
            "REASON_DEV_COMMS_ERROR",
            "REASON_DEV_THROTTLE",
            "_get_start",
            "getwork_attempts",
            "getwork_wait_rolling",
            "hadrolltime",
            "canroll",
            "hadexpire",
            "min_diff",
            "max_diff",
            "last_diff",
            "min_diff_count",
            "max_diff_count",
            "times_sent",
            "bytes_sent",
            "net_bytes_sent",
            "times_received",
            "bytes_received",
            "net_bytes_received",
            "$device_ztex",
            "$device_fd",
            "$device_ft232r",
            "ft232r_device_handle",
            "thread_q",
            "frozen",
            "mutex",
            "cond",
            "ctx_a",
            "ctx_b",
            "ctx_c",
            "ctx_d",
            "ctx_e",
            "ctx_f",
            "ctx_g",
            "ctx_h",
            "cty_a",
            "cty_b",
            "cty_c",
            "cty_d",
            "cty_e",
            "cty_f",
            "cty_g",
            "cty_h",
            "merkle",
            "ntime",
            "nbits",
            "nonce",
            "fW15",
            "fW01r",
            "fcty_e",
            "fcty_e2",
            "PreVal4",
            "C1addK5",
            "W17_2",
            "PreVal4addT1",
            "T1substate0",
            "PreVal4_2",
            "PreVal0",
            "PreW18",
            "PreW19",
            "PreW31",
            "PreW32",
            "B1addK6",
            "PreVal0addK7",
            "W16addK16",
            "W17addK17",
            "zeroA",
            "zeroB",
            "oneA",
            "twoA",
            "threeA",
            "fourA",
            "fiveA",
            "sixA",
            "sevenA",
            "work",
            "dev_blk_ctx",
            "\"pool_enable",
            "POOL_DISABLED",
            "POOL_ENABLED",
            "POOL_REJECTING",
            "\"pool_protocol",
            "PLP_NONE",
            "PLP_GETWORK",
            "PLP_GETBLOCKTEMPLATE",
            "stratum_work",
            "job_id",
            "prev_hash",
            "coinbase1",
            "coinbase2",
            "merkle",
            "bbversion",
            "nbit",
            "ntime",
            "clean",
            "cb1_len",
            "cb2_len",
            "cb_len",
            "header_len",
            "merkles",
            "diff",
            "transparency_probed",
            "transparency_time",
            "opaque",
            "pool",
            "pool_no",
            "prio",
            "seq_rejects",
            "seq_getfails",
            "solved",
            "diff1",
            "diff",
            "diff_stale",
            "submit_fail",
            "idle",
            "lagging",
            "probed",
            "force_rollntime",
            "enabled",
            "submit_old",
            "removed",
            "lp_started",
            "block_id",
            "proto",
            "hdr_path",
            "lp_url",
            "lp_id",
            "lp_proto",
            "lp_socket",
            "getwork_requested",
            "stale_shares",
            "discarded_work",
            "getfail_occasions",
            "remotefail_occasions",
            "tv_idle",
            "utility",
            "last_shares",
            "shares",
            "rpc_url",
            "rpc_userpass",
            "rpc_user",
            "rpc_pass",
            "rpc_proxy",
            "pool_lock",
            "submit_q",
            "getwork_q",
            "longpoll_thread",
            "submit_thread",
            "getwork_thread",
            "curls",
            "cr_cond",
            "curlring",
            "sws_waiting_on_curl",
            "last_share_time",
            "best_diff",
            "stratum_url",
            "stratum_port",
            "stratum_curl",
            "sock",
            "sockbuf",
            "sockbuf_size",
            "sockaddr_url",
            "nonce1",
            "n1_len",
            "nonce2",
            "n2size",
            "has_stratum",
            "stratum_active",
            "last_work_time",
            "stratum_auth",
            "stratum_notify",
            "swork",
            "stratum_thread",
            "stratum_lock",
            "last_work_lock",
            "last_work_copy",
            "submit_work_state",
            "\"api_data_type",
            "API_ESCAPE",
            "API_STRING",
            "API_CONST",
            "API_INT",
            "API_UINT",
            "API_UINT32",
            "API_UINT64",
            "API_DOUBLE",
            "API_ELAPSED",
            "API_BOOL",
            "API_TIMEVAL",
            "API_TIME",
            "API_MHS",
            "API_MHTOTAL",
            "API_TEMP",
            "API_UTILITY",
            "API_FREQ",
            "API_VOLTS",
            "API_HS",
            "API_DIFF",
            "API_JSON",
            "pc_data",
            "work",
            "found",
            "%_curl_easy_setopt_err_long",
            "%_curl_easy_setopt_err_curl_off_t",
            "%_curl_easy_setopt_err_string",
            "%_curl_easy_setopt_err_write_callback",
            "%_curl_easy_setopt_err_read_cb",
            "%_curl_easy_setopt_err_ioctl_cb",
            "%_curl_easy_setopt_err_sockopt_cb",
            "%_curl_easy_setopt_err_opensocket_cb",
            "%_curl_easy_setopt_err_progress_cb",
            "%_curl_easy_setopt_err_debug_cb",
            "%_curl_easy_setopt_err_ssl_ctx_cb",
            "%_curl_easy_setopt_err_conv_cb",
            "%_curl_easy_setopt_err_seek_cb",
            "%_curl_easy_setopt_err_cb_data",
            "%_curl_easy_setopt_err_error_buffer",
            "%_curl_easy_setopt_err_FILE",
            "%_curl_easy_setopt_err_postfields",
            "%_curl_easy_setopt_err_curl_httpost",
            "%_curl_easy_setopt_err_curl_slist",
            "%_curl_easy_setopt_err_CURLSH",
            "%_curl_easy_getinfo_err_string",
            "%_curl_easy_getinfo_err_long",
            "%_curl_easy_getinfo_err_double",
            "%_curl_easy_getinfo_err_curl_slist",
            "precalc_hash",
            "'blk",
            "'state",
            "'data",
            ")postcalc_hash",
            "'userdata",
            "(pcd",
            "`(thr",
            "X(entry",
            "(nonce",
            "postcalc_hash_async",
            "'thr",
            "'work",
            "'res",
            "(pcd",
            ",SHA256_K",
            "GNU C 4.6.3",
            "adl.c",
            "/home/luke-jr/Projects/Education/Tonal/BitCoin/cgminer",
            "char",
            "size_t",
            "long long unsigned int",
            "long long int",
            "ptrdiff_t",
            "short unsigned int",
            "long int",
            "__time64_t",
            "time_t",
            "unsigned int",
            "long unsigned int",
            "unsigned char",
            "_iobuf",
            "_ptr",
            "_cnt",
            "_base",
            "_flag",
            "_file",
            "_charbuf",
            "_bufsiz",
            "_tmpfname",
            "FILE",
            "double",
            "float",
            "bool",
            "chtype",
            "short int",
            "_win",
            "_cury",
            "_curx",
            "_maxy",
            "_maxx",
            "_begy",
            "_begx",
            "_flags",
            "_attrs",
            "_bkgd",
            "_clear",
            "_leaveit",
            "_scroll",
            "_nodelay",
            "_immed",
            "_sync",
            "_use_keypad",
            "_firstch",
            "#8\t_lastch",
            "#@\t_tmarg",
            "#H\t_bmarg",
            "#L\t_delayms",
            "#P\t_parx",
            "#T\t_pary",
            "#X\t_parent",
            "WINDOW",
            "DWORD",
            "signed char",
            "UINT_PTR",
            "long double",
            "HINSTANCE__",
            "unused",
            "HINSTANCE",
            "VARENUM",
            "VT_EMPTY",
            "VT_NULL",
            "VT_I2",
            "VT_I4",
            "VT_R4",
            "VT_R8",
            "VT_CY",
            "VT_DATE",
            "VT_BSTR",
            "VT_DISPATCH",
            "VT_ERROR",
            "VT_BOOL",
            "VT_VARIANT",
            "VT_UNKNOWN",
            "VT_DECIMAL",
            "VT_I1",
            "VT_UI1",
            "VT_UI2",
            "VT_UI4",
            "VT_I8",
            "VT_UI8",
            "VT_INT",
            "VT_UINT",
            "VT_VOID",
            "VT_HRESULT",
            "VT_PTR",
            "VT_SAFEARRAY",
            "VT_CARRAY",
            "VT_USERDEFINED",
            "VT_LPSTR",
            "VT_LPWSTR",
            "VT_RECORD",
            "VT_INT_PTR",
            "VT_UINT_PTR",
            "VT_FILETIME",
            "VT_BLOB",
            "VT_STREAM",
            "VT_STORAGE",
            "VT_STREAMED_OBJECT",
            "VT_STORED_OBJECT",
            "VT_BLOB_OBJECT",
            "VT_CF",
            "VT_CLSID",
            "VT_VERSIONED_STREAM",
            "VT_BSTR_BLOB",
            "VT_VECTOR",
            "VT_ARRAY",
            "VT_BYREF",
            "VT_RESERVED",
            "VT_ILLEGAL",
            "VT_ILLEGALMASKED",
            "VT_TYPEMASK",
            "timeval",
            "tv_sec",
            "tv_usec",
            "SOCKET",
            "uint8_t",
            "int16_t",
            "uint16_t",
            "uint32_t",
            "int64_t",
            "uint64_t",
            "timespec",
            "tv_sec",
            "tv_nsec",
            "ptw32_handle_t",
            "pthread_t",
            "pthread_mutex_t",
            "pthread_mutex_t_",
            "pthread_cond_t",
            "pthread_cond_t_",
            "CURL",
            "curl_socket_t",
            "blkheight_t",
            "libblkmaker_hash_t",
            "blkhash_t",
            "txnhash_t",
            "blktime_t",
            "blktime_diff_t",
            "blknonce_t",
            "blktxn_t",
            "data",
            "datasz",
            "hash",
            "dependcount",
            "depends",
            "required",
            "sigops",
            "_Bool",
            "blktmpl_longpoll_req",
            "GBT_CBTXN",
            "GBT_CBVALUE",
            "GBT_WORKID",
            "GBT_LONGPOLL",
            "GBT_PROPOSAL",
            "GBT_SERVICE",
            "BMM_CBAPPEND",
            "BMM_CBSET",
            "BMM_GENERATE",
            "BMM_TIMEINC",
            "BMM_TIMEDEC",
            "BMM_TXNADD",
            "BMM_PREVBLK",
            "BMM_VERFORCE",
            "BMM_VERDROP",
            "BMA_TXNHASH",
            "BMAb_COINBASE",
            "BMAb_TRUNCATE",
            "BMAs_COINBASE",
            "BMAs_MERKLE",
            "BMAs_TRUNCATE",
            "gbt_capabilities_t",
            "blkmutations_t",
            "version",
            "diffbits",
            "height",
            "prevblk",
            "sigoplimit",
            "sizelimit",
            "txncount",
            "txns",
            "cbtxn",
            "cbvalue",
            "_time_rcvd",
            "curtime",
            "auxcount",
            "auxnames",
            "auxdata",
            "workid",
            "submitold",
            "expires",
            "target",
            "mutations",
            "maxtime",
            "maxtimeoff",
            "mintime",
            "mintimeoff",
            "minnonce",
            "maxnonce",
            "_mrklroot",
            "next_dataid",
            "blktemplate_t",
            "list_head",
            "next",
            "prev",
            "\thh_head",
            "\tcount",
            "\texpand_mult",
            "\ttbl",
            "\tprev",
            "\tnext",
            "\thh_prev",
            "\thh_next",
            "# \tkey",
            "#(\tkeylen",
            "#0\thashv",
            "UT_hash_table",
            "\tbuckets",
            "\tnum_buckets",
            "\tlog2_num_buckets",
            "\tnum_items",
            "\ttail",
            "\thho",
            "# \tideal_chain_maxlen",
            "#(\tnonideal_items",
            "#,\tineff_expands",
            "#0\tnoexpand",
            "#4\tsignature",
            "LOG_ERR",
            "LOG_WARNING",
            "LOG_NOTICE",
            "LOG_INFO",
            "LOG_DEBUG",
            "notifier_t",
            "cl_uint",
            "cl_ulong",
            "ADL_OK_WAIT",
            "ADL_OK_RESTART",
            "ADL_OK_MODE_CHANGE",
            "ADL_OK_WARNING",
            "ADL_OK",
            "ADL_ERR",
            "ADL_ERR_NOT_INIT",
            "ADL_ERR_INVALID_PARAM",
            "ADL_ERR_INVALID_PARAM_SIZE",
            "ADL_ERR_INVALID_ADL_IDX",
            "ADL_ERR_INVALID_CONTROLLER_IDX",
            "ADL_ERR_INVALID_DIPLAY_IDX",
            "ADL_ERR_NOT_SUPPORTED",
            "ADL_ERR_NULL_POINTER",
            "ADL_ERR_DISABLED_ADAPTER",
            "ADL_ERR_INVALID_CALLBACK",
            "ADL_ERR_RESOURCE_CONFLICT",
            "ADL_DL_FANCTRL_SUPPORTS_PERCENT_READ",
            "ADL_DL_FANCTRL_SUPPORTS_PERCENT_WRITE",
            "ADL_DL_FANCTRL_SUPPORTS_RPM_READ",
            "ADL_DL_FANCTRL_SUPPORTS_RPM_WRITE",
            "ADL_DL_FANCTRL_SPEED_TYPE_PERCENT",
            "ADL_DL_FANCTRL_SPEED_TYPE_RPM",
            "ADL_DL_FANCTRL_FLAG_USER_DEFINED_SPEED",
            "AdapterInfo",
            "strUDID",
            "iDeviceNumber",
            "iFunctionNumber",
            "iVendorID",
            "strDisplayName",
            "iPresent",
            "iExist",
            "strDriverPath",
            "strDriverPathExt",
            "strPNPString",
            "iOSDisplayIndex",
            "LPAdapterInfo",
            "\tiActivityPercent",
            "\tiCurrentPerformanceLevel",
            "\tiCurrentBusSpeed",
            "\tiCurrentBusLanes",
            "\tiMaximumBusLanes",
            "\tiTemperature",
            "\tiFlags",
            "\tiMinPercent",
            "\tiMaxPercent",
            "\tiMinRPM",
            "\tiMaxRPM",
            "\tiSpeedType",
            "\tiFlags",
            "\tiMin",
            "\tiMax",
            "\tiStep",
            "\tiNumberOfPerformanceLevels",
            "\tiActivityReportingSupported",
            "\tiDiscretePerformanceLevels",
            "\tsEngineClock",
            "\tsMemoryClock",
            "# \tsVddc",
            "\taLevels",
            "ADL_MAIN_MALLOC_CALLBACK",
            "libusb_device_descriptor",
            "\tbLength",
            "\tbDescriptorType",
            "\tbcdUSB",
            "\tbDeviceClass",
            "\tbDeviceSubClass",
            "\tbDeviceProtocol",
            "\tbMaxPacketSize0",
            "\tidVendor",
            "\tidProduct",
            "\tbcdDevice",
            "\tiManufacturer",
            "\tiProduct",
            "\tiSerialNumber",
            "\tbNumConfigurations",
            "dclk_data",
            "freqM",
            "freqMaxM",
            "freqMDefault",
            "minGoodSamples",
            "errorCount",
            "errorWeight",
            "errorRate",
            "maxErrorRate",
            "thr_info",
            "\tdevice_thread",
            "\tprimary_thread",
            "\tpth",
            "# \tcgpu",
            "#0\tlast",
            "#8\tsick",
            "#@\tscanhash_working",
            "#H\thashes_done",
            "#P\ttv_hashes_done",
            "#X\ttv_lastupdate",
            "#`\tpause",
            "#h\tgetwork",
            "#p\trolling",
            "#x\tprev_work",
            "\twork",
            "\tnext_work",
            "\ttv_morework",
            "\tresults_work",
            "\t_job_transition_in_progress",
            "\t_proceed_with_new_job",
            "\ttv_results_jobstart",
            "\ttv_jobstart",
            "\ttv_poll",
            "\tnotifier",
            "\tstarting_next_work",
            "\t_max_nonce",
            "\twork_restart",
            "\twork_restart_notifier",
            "libztex_device",
            "mutex",
            "root",
            "fpgaNum",
            "descriptor",
            "hndl",
            "usbbus",
            "usbaddress",
            "snString",
            "productId",
            "fwVersion",
            "interfaceVersion",
            "interfaceCapabilities",
            "moduleReserved",
            "numNonces",
            "offsNonces",
            "freqM1",
            "bitFileName",
            "suspendSupported",
            "hashesPerClock",
            "extraSolutions",
            "dclk",
            "numberOfFpgas",
            "selectedFpga",
            "parallelConfigSupport",
            "repr",
            "alive",
            "LIFE_WELL",
            "LIFE_SICK",
            "LIFE_DEAD",
            "LIFE_NOSTART",
            "LIFE_INIT",
            "LIFE_WAIT",
            "gpu_adl",
            "lpTemperature",
            "lpActivity",
            "lpOdParameters",
            "DefPerfLev",
            "lpFanSpeedInfo",
            "lpFanSpeedValue",
            "DefFanSpeedValue",
            "autofan",
            "autoengine",
            "managed",
            "lastengine",
            "targetfan",
            "overtemp",
            "minspeed",
            "maxspeed",
            "\tgpu",
            "\thas_fanspeed",
            "\ttwin",
            "device_api",
            "\tdname",
            "\tname",
            "\tapi_detect",
            "\tget_dev_statline_before",
            "\tget_dev_statline_after",
            "# \treinit_device",
            "#(\tget_statline_before",
            "#0\tget_statline",
            "#8\tget_api_extra_device_detail",
            "#@\tget_api_extra_device_status",
            "#H\tget_api_stats",
            "#P\tget_stats",
            "#X\tidentify_device",
            "#`\tset_device",
            "#h\tthread_prepare",
            "#p\tminerloop",
            "#x\tcan_limit_work",
            "\tthread_init",
            "\tprepare_work",
            "\tscanhash",
            "\thw_error",
            "\tthread_shutdown",
            "\tthread_enable",
            "\tpoll",
            "\tjob_prepare",
            "\tjob_start",
            "\tjob_get_results",
            "\tjob_process_results",
            "!cgpu_info",
            "\tcgminer_id",
            "\tdevice_line_id",
            "\tapi",
            "\tdevtype",
            "\tdevice_id",
            "\tdev_repr",
            "# \tdev_repr_ns",
            "#(\tname",
            "#0\tprocs",
            "#8\tproc_id",
            "#<\tproc_repr",
            "#@\tproc_repr_ns",
            "#H\tdevice",
            "#P\tnext_proc",
            "#X\tdevice_path",
            "#`\tdevice_file",
            "#h\"7",
            "#p\twork_start_tv",
            "#x\twait_ms",
            "\tsleep_ms",
            "\tavg_wait_f",
            "\tavg_wait_d",
            "\tnonces",
            "\tpolling",
            "\tflash_led",
            "\tdevice_mutex",
            "\tdeven",
            "\thw_errors",
            "\trolling",
            "\ttotal_mhashes",
            "\tutility",
            "\tutility_diff1",
            "\tstatus",
            "\tinit",
            "\tlast_message_tv",
            "\tthreads",
            "\tthr",
            "\tmax_hashes",
            "\tkname",
            "\tmapped",
            "\tvirtual_adl",
            "\tintensity",
            "\tdynamic",
            "\tvwidth",
            "\twork_size",
            "\tkernel",
            "\tmax_alloc",
            "\topt_lg",
            "\tlookup_gap",
            "\topt_tc",
            "\tthread_concurrency",
            "\tshaders",
            "\ttv_gpustart",
            "\tintervals",
            "\ttemp",
            "\tcutofftemp",
            "\ttargettemp",
            "\thas_adl",
            "\tadl",
            "\tgpu_engine",
            "\tmin_engine",
            "\tgpu_fan",
            "\tmin_fan",
            "\tgpu_memdiff",
            "\tdiff1",
            "\tlast_share_pool",
            "\tlast_share_pool_time",
            "\tdevice_last_well",
            "\tdevice_last_not_well",
            "\tdevice_not_well_reason",
            "\treinit_backoff",
            "\tthread_fail_init_count",
            "\tthread_zero_hash_count",
            "\tthread_fail_queue_count",
            "\tdev_sick_idle_60_count",
            "\tdev_dead_idle_600_count",
            "\tdev_nostart_count",
            "\tdev_over_heat_count",
            "\tdev_thermal_cutoff_count",
            "\tdev_comms_error_count",
            "\tdev_throttle_count",
            "api_data",
            "\ttype",
            "\tname",
            "\tdata",
            "\tdata_was_malloc",
            "\tprev",
            "# \tnext",
            "!work",
            "\tdata",
            "\tmidstate",
            "\ttarget",
            "\thash",
            "\trolls",
            "\tblk",
            "\tthr",
            "\tthr_id",
            "\tpool",
            "\ttv_staged",
            "\tmined",
            "\tclone",
            "\tcloned",
            "\tlongpoll",
            "\tstale",
            "\tmandatory",
            "\tblock",
            "\tqueued",
            "\tstratum",
            "\tjob_id",
            "\tnonce2",
            "\tntime",
            "\tsdiff",
            "\twork_difficulty",
            "\ttmpl",
            "\ttmpl_refcount",
            "\tdataid",
            "\ttv_getwork",
            "\ttv_getwork_reply",
            "\ttv_cloned",
            "\ttv_work_start",
            "\ttv_work_found",
            "\tgetwork_mode",
            "\tlist",
            "#dev_enable",
            "DEV_ENABLED",
            "DEV_DISABLED",
            "DEV_RECOVER",
            "DEV_RECOVER_ERR",
            "#cl_kernels",
            "KL_NONE",
            "KL_POCLBM",
            "KL_PHATK",
            "KL_DIAKGCN",
            "KL_DIABLO",
            "KL_SCRYPT",
            "dev_reason",
            "REASON_THREAD_FAIL_INIT",
            "REASON_THREAD_ZERO_HASH",
            "REASON_THREAD_FAIL_QUEUE",
            "REASON_DEV_SICK_IDLE_60",
            "REASON_DEV_DEAD_IDLE_600",
            "REASON_DEV_NOSTART",
            "REASON_DEV_OVER_HEAT",
            "REASON_DEV_THERMAL_CUTOFF",
            "REASON_DEV_COMMS_ERROR",
            "REASON_DEV_THROTTLE",
            "\t_get_start",
            "\tgetwork_attempts",
            "\tgetwork_wait_rolling",
            "# \thadrolltime",
            "#(\tcanroll",
            "#)\thadexpire",
            "#,\tmin_diff",
            "#0\tmax_diff",
            "#8\tlast_diff",
            "#@\tmin_diff_count",
            "#H\tmax_diff_count",
            "#L\ttimes_sent",
            "#P\tbytes_sent",
            "#X\tnet_bytes_sent",
            "#`\ttimes_received",
            "#h\tbytes_received",
            "#p\tnet_bytes_received",
            "%device_ztex",
            "%device_fd",
            "%device_ft232r",
            "ft232r_device_handle",
            "thread_q",
            "\tfrozen",
            "\tmutex",
            "\tcond",
            "\tctx_a",
            "\tctx_b",
            "\tctx_c",
            "\tctx_d",
            "\tctx_e",
            "\tctx_f",
            "\tctx_g",
            "\tctx_h",
            "\tcty_a",
            "# \tcty_b",
            "#$\tcty_c",
            "#(\tcty_d",
            "#,\tcty_e",
            "#0\tcty_f",
            "#4\tcty_g",
            "#8\tcty_h",
            "#<\tmerkle",
            "#@\tntime",
            "#D\tnbits",
            "#H\tnonce",
            "#L\tfW0",
            "#P\tfW1",
            "#T\tfW2",
            "#X\tfW3",
            "#\\\tfW15",
            "#`\tfW01r",
            "#d\tfcty_e",
            "#h\tfcty_e2",
            "#l\tW16",
            "#p\tW17",
            "#t\tW2",
            "#x\tPreVal4",
            "#|\tT1",
            "\tC1addK5",
            "\tD1A",
            "\tW2A",
            "\tW17_2",
            "\tPreVal4addT1",
            "\tT1substate0",
            "\tPreVal4_2",
            "\tPreVal0",
            "\tPreW18",
            "\tPreW19",
            "\tPreW31",
            "\tPreW32",
            "\tB1addK6",
            "\tPreVal0addK7",
            "\tW16addK16",
            "\tW17addK17",
            "\tzeroA",
            "\tzeroB",
            "\toneA",
            "\ttwoA",
            "\tthreeA",
            "\tfourA",
            "\tfiveA",
            "\tsixA",
            "\tsevenA",
            "\twork",
            "dev_blk_ctx",
            "#pool_enable",
            "POOL_DISABLED",
            "POOL_ENABLED",
            "POOL_REJECTING",
            "#pool_protocol",
            "PLP_NONE",
            "PLP_GETWORK",
            "PLP_GETBLOCKTEMPLATE",
            "stratum_work",
            "\tjob_id",
            "\tprev_hash",
            "\tcoinbase1",
            "\tcoinbase2",
            "\tmerkle",
            "# \tbbversion",
            "#(\tnbit",
            "#0\tntime",
            "#8\tclean",
            "#@\tcb1_len",
            "#H\tcb2_len",
            "#P\tcb_len",
            "#X\theader_len",
            "#`\tmerkles",
            "#h\tdiff",
            "#p\ttransparency_probed",
            "#x\ttransparency_time",
            "\topaque",
            "!pool",
            "\tpool_no",
            "\tprio",
            "\tseq_rejects",
            "\tseq_getfails",
            "\tsolved",
            "\tdiff1",
            "\tdiff",
            "#0\tdiff_stale",
            "#8\tsubmit_fail",
            "#@\tidle",
            "#A\tlagging",
            "#B\tprobed",
            "#C\tforce_rollntime",
            "#D\tenabled",
            "#H\tsubmit_old",
            "#L\tremoved",
            "#M\tlp_started",
            "#O\tblock_id",
            "#P\tproto",
            "#T\thdr_path",
            "#X\tlp_url",
            "#`\tlp_id",
            "#h\tlp_proto",
            "#p\tlp_socket",
            "#x\tgetwork_requested",
            "\tstale_shares",
            "\tdiscarded_work",
            "\tgetfail_occasions",
            "\tremotefail_occasions",
            "\ttv_idle",
            "\tutility",
            "\tlast_shares",
            "\tshares",
            "\trpc_url",
            "\trpc_userpass",
            "\trpc_user",
            "\trpc_pass",
            "\trpc_proxy",
            "\tpool_lock",
            "\tsubmit_q",
            "\tgetwork_q",
            "\tlongpoll_thread",
            "\tsubmit_thread",
            "\tgetwork_thread",
            "\tcurls",
            "\tcr_cond",
            "\tcurlring",
            "\tsws_waiting_on_curl",
            "\tlast_share_time",
            "\tbest_diff",
            "\tstratum_url",
            "\tstratum_port",
            "\tstratum_curl",
            "\tsock",
            "\tsockbuf",
            "\tsockbuf_size",
            "\tsockaddr_url",
            "\tnonce1",
            "\tn1_len",
            "\tnonce2",
            "\tn2size",
            "\thas_stratum",
            "\tstratum_active",
            "\tlast_work_time",
            "\tstratum_auth",
            "\tstratum_notify",
            "\tswork",
            "\tstratum_thread",
            "\tstratum_lock",
            "\tlast_work_lock",
            "\tlast_work_copy",
            "submit_work_state",
            "#api_data_type",
            "API_ESCAPE",
            "API_STRING",
            "API_CONST",
            "API_INT",
            "API_UINT",
            "API_UINT32",
            "API_UINT64",
            "API_DOUBLE",
            "API_ELAPSED",
            "API_BOOL",
            "API_TIMEVAL",
            "API_TIME",
            "API_MHS",
            "API_MHTOTAL",
            "API_TEMP",
            "API_UTILITY",
            "API_FREQ",
            "API_VOLTS",
            "API_HS",
            "API_DIFF",
            "API_JSON",
            "ADL_MAIN_CONTROL_CREATE",
            "ADL_MAIN_CONTROL_REFRESH",
            "ADL_MAIN_CONTROL_DESTROY",
            "ADL_ADAPTER_NUMBEROFADAPTERS_GET",
            "ADL_ADAPTER_ADAPTERINFO_GET",
            "ADL_ADAPTER_ID_GET",
            "ADL_OVERDRIVE5_CURRENTACTIVITY_GET",
            "ADL_OVERDRIVE5_TEMPERATURE_GET",
            "ADL_OVERDRIVE5_FANSPEEDINFO_GET",
            "ADL_OVERDRIVE5_FANSPEED_GET",
            "ADL_OVERDRIVE5_FANSPEED_SET",
            "ADL_OVERDRIVE5_FANSPEEDTODEFAULT_SET",
            "ADL_OVERDRIVE5_ODPARAMETERS_GET",
            "ADL_OVERDRIVE5_ODPERFORMANCELEVELS_GET",
            "ADL_OVERDRIVE5_ODPERFORMANCELEVELS_SET",
            "ADL_OVERDRIVE5_POWERCONTROL_GET",
            "ADL_OVERDRIVE5_POWERCONTROL_SET",
            "gpu_adapters",
            "'_curl_easy_setopt_err_long",
            "'_curl_easy_setopt_err_curl_off_t",
            "'_curl_easy_setopt_err_string",
            "'_curl_easy_setopt_err_write_callback",
            "'_curl_easy_setopt_err_read_cb",
            "'_curl_easy_setopt_err_ioctl_cb",
            "'_curl_easy_setopt_err_sockopt_cb",
            "'_curl_easy_setopt_err_opensocket_cb",
            "'_curl_easy_setopt_err_progress_cb",
            "'_curl_easy_setopt_err_debug_cb",
            "'_curl_easy_setopt_err_ssl_ctx_cb",
            "'_curl_easy_setopt_err_conv_cb",
            "'_curl_easy_setopt_err_seek_cb",
            "'_curl_easy_setopt_err_cb_data",
            "'_curl_easy_setopt_err_error_buffer",
            "'_curl_easy_setopt_err_FILE",
            "'_curl_easy_setopt_err_postfields",
            "'_curl_easy_setopt_err_curl_httpost",
            "'_curl_easy_setopt_err_curl_slist",
            "'_curl_easy_setopt_err_CURLSH",
            "'_curl_easy_getinfo_err_string",
            "'_curl_easy_getinfo_err_long",
            "'_curl_easy_getinfo_err_double",
            "'_curl_easy_getinfo_err_curl_slist",
            "(nanosleep",
            ")req",
            ")rem",
            "*tstart",
            "`*msecs",
            "l+BC",
            "*tdone",
            "P*tnow",
            "@*tleft",
            "(sleep",
            ")secs",
            "*req",
            "`*rem",
            ",__real_getch",
            "-mutex_lock",
            ".lock",
            "-mutex_unlock",
            ".lock",
            "(ADL_Main_Memory_Alloc",
            "1ADL_Main_Memory_Free",
            "'lock_adl",
            "'unlock_adl",
            "(fanspeed_twin",
            "(prepare_adl",
            "*result",
            "init_adl",
            ")nDevs",
            "*result",
            "X*devices",
            "T*last_adapter",
            "P*gpu",
            "L*dummy",
            "~*adapters",
            "|*vadapters",
            "z*devs_match",
            "4lev",
            "4adlGpu",
            "4setengine",
            "4setmem",
            "4setv",
            "6__gpu_temp",
            "gpu_temp",
            ".gpu",
            "`4ret",
            "6__gpu_engineclock",
            "gpu_engineclock",
            ".gpu",
            "`4ret",
            "l8out",
            "6__gpu_memclock",
            ".gpu",
            "`4ret",
            "l8out",
            "6__gpu_vddc",
            ".gpu",
            "`4ret",
            "l8out",
            "6__gpu_activity",
            "gpu_activity",
            ".gpu",
            "`4ret",
            "6__gpu_fanspeed",
            "gpu_fanspeed",
            ".gpu",
            "`4ret",
            "6__gpu_fanpercent",
            "gpu_fanpercent",
            ".gpu",
            "`4ret",
            "6__gpu_powertune",
            "4dummy",
            ".gpu",
            "`4ret",
            "gpu_stats",
            ".gpu",
            ".temp",
            ".vddc",
            "-get_enginerange",
            ".gpu",
            ".imin",
            ".imax",
            "set_engineclock",
            ".gpu",
            "P4cgpu",
            "l4lev",
            "\\4ret",
            "h4ga",
            "`8out",
            "-get_memoryrange",
            ".gpu",
            ".imin",
            ".imax",
            "set_memoryclock",
            ".gpu",
            "l4lev",
            "\\4ret",
            "h4ga",
            "`8out",
            "-get_vddcrange",
            ".gpu",
            ".imin",
            ".imax",
            "6curses_float",
            ".query",
            "4ret",
            "d4cvar",
            "set_vddc",
            ".gpu",
            ".fVddc",
            "d4lev",
            "T4ret",
            "h4ga",
            "X8out",
            "-get_fanrange",
            ".gpu",
            ".imin",
            ".imax",
            "set_fanspeed",
            ".gpu",
            "`4ret",
            "6set_powertune",
            ".gpu",
            "`4dummy",
            "\\4ret",
            "6fan_autotune",
            ".gpu",
            ".temp",
            " 4cgpu",
            "`4tdiff",
            "\\4ga",
            "P4top",
            "L4bot",
            "H4newpercent",
            "l4iMin",
            "D4iMax",
            "gpu_autotune",
            ".gpu",
            ".denable",
            "4temp",
            "4engine",
            "4newengine",
            "l4twintemp",
            "h4fan_optimal",
            "4cgpu",
            "H4ga",
            "4hightemp",
            "`4fan_gpu",
            "4iStep",
            "set_defaultfan",
            ".gpu",
            "set_defaultengine",
            ".gpu",
            "change_autosettings",
            ".gpu",
            "h4input",
            "c4val",
            "change_gpusettings",
            ".gpu",
            "h4fval",
            "`4fmin",
            "\\4fmax",
            "X4val",
            "d4imin",
            "T4imax",
            "P4input",
            "4temp",
            "4vddc",
            "8updated",
            "<free_adl",
            "clear_adl",
            ".nDevs",
            "*opt_targettemp",
            "*adl_lock",
            "*ADL_Main_Control_Create",
            "*ADL_Main_Control_Destroy",
            "*ADL_Adapter_NumberOfAdapters_Get",
            "*ADL_Adapter_AdapterInfo_Get",
            "*ADL_Adapter_ID_Get",
            "*ADL_Overdrive5_Temperature_Get",
            "*ADL_Overdrive5_CurrentActivity_Get",
            "*ADL_Overdrive5_ODParameters_Get",
            "*ADL_Overdrive5_FanSpeedInfo_Get",
            "*ADL_Overdrive5_FanSpeed_Get",
            "*ADL_Overdrive5_FanSpeed_Set",
            "*ADL_Overdrive5_ODPerformanceLevels_Get",
            "*ADL_Overdrive5_ODPerformanceLevels_Set",
            "*ADL_Main_Control_Refresh",
            "*ADL_Overdrive5_PowerControl_Get",
            "*ADL_Overdrive5_PowerControl_Set",
            "*ADL_Overdrive5_FanSpeedToDefault_Set",
            "*iNumberAdapters",
            "*lpInfo",
            "=stdscr",
            "=opt_autofan",
            "=opt_autoengine",
            "=gpus",
            "=opt_cutofftemp",
            "=opt_hysteresis",
            ">adl_active",
            ">opt_reorder",
            ">opt_overheattemp",
            ">hDLL",
            "GNU C 4.6.3",
            "scrypt.c",
            "/home/luke-jr/Projects/Education/Tonal/BitCoin/cgminer",
            "char",
            "size_t",
            "long long unsigned int",
            "long long int",
            "uintptr_t",
            "ptrdiff_t",
            "short unsigned int",
            "long int",
            "__time64_t",
            "time_t",
            "unsigned int",
            "long unsigned int",
            "unsigned char",
            "float",
            "signed char",
            "short int",
            "UINT_PTR",
            "double",
            "long double",
            "VARENUM",
            "VT_EMPTY",
            "VT_NULL",
            "VT_I2",
            "VT_I4",
            "VT_R4",
            "VT_R8",
            "VT_CY",
            "VT_DATE",
            "VT_BSTR",
            "VT_DISPATCH",
            "VT_ERROR",
            "VT_BOOL",
            "VT_VARIANT",
            "VT_UNKNOWN",
            "VT_DECIMAL",
            "VT_I1",
            "VT_UI1",
            "VT_UI2",
            "VT_UI4",
            "VT_I8",
            "VT_UI8",
            "VT_INT",
            "VT_UINT",
            "VT_VOID",
            "VT_HRESULT",
            "VT_PTR",
            "VT_SAFEARRAY",
            "VT_CARRAY",
            "VT_USERDEFINED",
            "VT_LPSTR",
            "VT_LPWSTR",
            "VT_RECORD",
            "VT_INT_PTR",
            "VT_UINT_PTR",
            "VT_FILETIME",
            "VT_BLOB",
            "VT_STREAM",
            "VT_STORAGE",
            "VT_STREAMED_OBJECT",
            "VT_STORED_OBJECT",
            "VT_BLOB_OBJECT",
            "VT_CF",
            "VT_CLSID",
            "VT_VERSIONED_STREAM",
            "VT_BSTR_BLOB",
            "VT_VECTOR",
            "VT_ARRAY",
            "VT_BYREF",
            "VT_RESERVED",
            "VT_ILLEGAL",
            "VT_ILLEGALMASKED",
            "VT_TYPEMASK",
            "timeval",
            "tv_sec",
            "tv_usec",
            "SOCKET",
            "uint8_t",
            "int16_t",
            "uint16_t",
            "uint32_t",
            "int64_t",
            "uint64_t",
            "ptw32_handle_t",
            "pthread_t",
            "pthread_mutex_t",
            "pthread_mutex_t_",
            "pthread_cond_t",
            "pthread_cond_t_",
            "_iobuf",
            "_ptr",
            "_cnt",
            "_base",
            "_flag",
            "_file",
            "_charbuf",
            "_bufsiz",
            "_tmpfname",
            "FILE",
            "CURL",
            "curl_socket_t",
            "blkheight_t",
            "libblkmaker_hash_t",
            "blkhash_t",
            "txnhash_t",
            "blktime_t",
            "blktime_diff_t",
            "blknonce_t",
            "blktxn_t",
            "datasz",
            "hash",
            "dependcount",
            "depends",
            "required",
            "sigops",
            "_Bool",
            "blktmpl_longpoll_req",
            "GBT_CBTXN",
            "GBT_CBVALUE",
            "GBT_WORKID",
            "GBT_LONGPOLL",
            "GBT_PROPOSAL",
            "GBT_SERVICE",
            "BMM_CBAPPEND",
            "BMM_CBSET",
            "BMM_GENERATE",
            "BMM_TIMEINC",
            "BMM_TIMEDEC",
            "BMM_TXNADD",
            "BMM_PREVBLK",
            "BMM_VERFORCE",
            "BMM_VERDROP",
            "BMA_TXNHASH",
            "BMAb_COINBASE",
            "BMAb_TRUNCATE",
            "BMAs_COINBASE",
            "BMAs_MERKLE",
            "BMAs_TRUNCATE",
            "gbt_capabilities_t",
            "blkmutations_t",
            "version",
            "diffbits",
            "height",
            "prevblk",
            "sigoplimit",
            "sizelimit",
            "txncount",
            "txns",
            "cbtxn",
            "cbvalue",
            "_time_rcvd",
            "curtime",
            "auxcount",
            "auxnames",
            "auxdata",
            "workid",
            "submitold",
            "expires",
            "target",
            "mutations",
            "maxtime",
            "maxtimeoff",
            "mintime",
            "mintimeoff",
            "minnonce",
            "maxnonce",
            "_mrklroot",
            "next_dataid",
            "blktemplate_t",
            "list_head",
            "next",
            "prev",
            "hh_head",
            "count",
            "expand_mult",
            "prev",
            "next",
            "hh_prev",
            "hh_next",
            "keylen",
            "hashv",
            "UT_hash_table",
            "buckets",
            "num_buckets",
            "log2_num_buckets",
            "num_items",
            "tail",
            "ideal_chain_maxlen",
            "nonideal_items",
            "ineff_expands",
            "noexpand",
            "signature",
            "LOG_ERR",
            "LOG_WARNING",
            "LOG_NOTICE",
            "LOG_INFO",
            "LOG_DEBUG",
            "notifier_t",
            "cl_uint",
            "cl_ulong",
            "iVddc",
            "iActivityPercent",
            "iCurrentPerformanceLevel",
            "iCurrentBusSpeed",
            "iCurrentBusLanes",
            "iMaximumBusLanes",
            "iTemperature",
            "iFlags",
            "iMinPercent",
            "iMaxPercent",
            "iMinRPM",
            "iMaxRPM",
            "iSpeedType",
            "iFanSpeed",
            "iFlags",
            "iMin",
            "iMax",
            "iStep",
            "iNumberOfPerformanceLevels",
            "iActivityReportingSupported",
            "iDiscretePerformanceLevels",
            "sEngineClock",
            "sMemoryClock",
            "sVddc",
            "iVddc",
            "aLevels",
            "libusb_device_descriptor",
            "bLength",
            "bDescriptorType",
            "bcdUSB",
            "bDeviceClass",
            "bDeviceSubClass",
            "bDeviceProtocol",
            "bMaxPacketSize0",
            "idVendor",
            "idProduct",
            "bcdDevice",
            "iManufacturer",
            "iProduct",
            "iSerialNumber",
            "bNumConfigurations",
            "dclk_data",
            "freqM",
            "freqMaxM",
            "freqMDefault",
            "minGoodSamples",
            "errorCount",
            "errorWeight",
            "errorRate",
            "maxErrorRate",
            "thr_info",
            "device_thread",
            "primary_thread",
            "cgpu",
            "last",
            "sick",
            "scanhash_working",
            "hashes_done",
            "tv_hashes_done",
            "tv_lastupdate",
            "pause",
            "getwork",
            "rolling",
            "prev_work",
            "work",
            "next_work",
            "tv_morework",
            "results_work",
            "_job_transition_in_progress",
            "_proceed_with_new_job",
            "tv_results_jobstart",
            "tv_jobstart",
            "tv_poll",
            "notifier",
            "starting_next_work",
            "_max_nonce",
            "work_restart",
            "work_restart_notifier",
            "libztex_device",
            "mutex",
            "root",
            "fpgaNum",
            "descriptor",
            "hndl",
            "usbbus",
            "usbaddress",
            "snString",
            "productId",
            "fwVersion",
            "interfaceVersion",
            "interfaceCapabilities",
            "moduleReserved",
            "numNonces",
            "offsNonces",
            "freqM1",
            "bitFileName",
            "suspendSupported",
            "hashesPerClock",
            "extraSolutions",
            "dclk",
            "numberOfFpgas",
            "selectedFpga",
            "parallelConfigSupport",
            "repr",
            "alive",
            "LIFE_WELL",
            "LIFE_SICK",
            "LIFE_DEAD",
            "LIFE_NOSTART",
            "LIFE_INIT",
            "LIFE_WAIT",
            "gpu_adl",
            "lpTemperature",
            "iAdapterIndex",
            "lpAdapterID",
            "iBusNumber",
            "strAdapterName",
            "lpActivity",
            "lpOdParameters",
            "DefPerfLev",
            "lpFanSpeedInfo",
            "lpFanSpeedValue",
            "DefFanSpeedValue",
            "iVddc",
            "iPercentage",
            "autofan",
            "autoengine",
            "managed",
            "lastengine",
            "lasttemp",
            "targetfan",
            "overtemp",
            "minspeed",
            "maxspeed",
            "has_fanspeed",
            "twin",
            "device_api",
            "dname",
            "name",
            "api_detect",
            "get_dev_statline_before",
            "get_dev_statline_after",
            "reinit_device",
            "get_statline_before",
            "get_statline",
            "get_api_extra_device_detail",
            "get_api_extra_device_status",
            "get_api_stats",
            "get_stats",
            "identify_device",
            "set_device",
            "thread_prepare",
            "minerloop",
            "can_limit_work",
            "thread_init",
            "prepare_work",
            "scanhash",
            "hw_error",
            "thread_shutdown",
            "thread_enable",
            "poll",
            "job_prepare",
            "job_start",
            "job_get_results",
            "job_process_results",
            " cgpu_info",
            "cgminer_id",
            "device_line_id",
            "devtype",
            "device_id",
            "dev_repr",
            "dev_repr_ns",
            "name",
            "procs",
            "proc_id",
            "proc_repr",
            "proc_repr_ns",
            "device",
            "next_proc",
            "device_path",
            "device_file",
            "#h!Y1",
            "work_start_tv",
            "wait_ms",
            "sleep_ms",
            "avg_wait_f",
            "avg_wait_d",
            "nonces",
            "polling",
            "flash_led",
            "device_mutex",
            "deven",
            "hw_errors",
            "rolling",
            "total_mhashes",
            "utility",
            "utility_diff1",
            "status",
            "init",
            "last_message_tv",
            "threads",
            "max_hashes",
            "kname",
            "mapped",
            "virtual_gpu",
            "virtual_adl",
            "intensity",
            "dynamic",
            "vwidth",
            "work_size",
            "kernel",
            "max_alloc",
            "opt_lg",
            "lookup_gap",
            "opt_tc",
            "thread_concurrency",
            "shaders",
            "tv_gpustart",
            "intervals",
            "temp",
            "cutofftemp",
            "targettemp",
            "has_adl",
            "gpu_engine",
            "min_engine",
            "gpu_fan",
            "min_fan",
            "gpu_memclock",
            "gpu_memdiff",
            "gpu_powertune",
            "gpu_vddc",
            "diff1",
            "last_share_pool",
            "last_share_pool_time",
            "device_last_well",
            "device_last_not_well",
            "device_not_well_reason",
            "reinit_backoff",
            "thread_fail_init_count",
            "thread_zero_hash_count",
            "thread_fail_queue_count",
            "dev_sick_idle_60_count",
            "dev_dead_idle_600_count",
            "dev_nostart_count",
            "dev_over_heat_count",
            "dev_thermal_cutoff_count",
            "dev_comms_error_count",
            "dev_throttle_count",
            "api_data",
            "type",
            "name",
            "data_was_malloc",
            "prev",
            "next",
            " work",
            "midstate",
            "target",
            "hash",
            "rolls",
            "thr_id",
            "pool",
            "tv_staged",
            "mined",
            "clone",
            "cloned",
            "longpoll",
            "stale",
            "mandatory",
            "block",
            "queued",
            "stratum",
            "job_id",
            "nonce2",
            "ntime",
            "sdiff",
            "work_difficulty",
            "tmpl",
            "tmpl_refcount",
            "dataid",
            "tv_getwork",
            "tv_getwork_reply",
            "tv_cloned",
            "tv_work_start",
            "tv_work_found",
            "getwork_mode",
            "list",
            "#dev_enable",
            "DEV_ENABLED",
            "DEV_DISABLED",
            "DEV_RECOVER",
            "DEV_RECOVER_ERR",
            "#cl_kernels",
            "KL_NONE",
            "KL_POCLBM",
            "KL_PHATK",
            "KL_DIAKGCN",
            "KL_DIABLO",
            "KL_SCRYPT",
            "dev_reason",
            "REASON_THREAD_FAIL_INIT",
            "REASON_THREAD_ZERO_HASH",
            "REASON_THREAD_FAIL_QUEUE",
            "REASON_DEV_SICK_IDLE_60",
            "REASON_DEV_DEAD_IDLE_600",
            "REASON_DEV_NOSTART",
            "REASON_DEV_OVER_HEAT",
            "REASON_DEV_THERMAL_CUTOFF",
            "REASON_DEV_COMMS_ERROR",
            "REASON_DEV_THROTTLE",
            "_get_start",
            "getwork_attempts",
            "getwork_wait_rolling",
            "hadrolltime",
            "canroll",
            "hadexpire",
            "min_diff",
            "max_diff",
            "last_diff",
            "min_diff_count",
            "max_diff_count",
            "times_sent",
            "bytes_sent",
            "net_bytes_sent",
            "times_received",
            "bytes_received",
            "net_bytes_received",
            "%device_ztex",
            "%device_fd",
            "%device_ft232r",
            "ft232r_device_handle",
            "thread_q",
            "frozen",
            "mutex",
            "cond",
            "ctx_a",
            "ctx_b",
            "ctx_c",
            "ctx_d",
            "ctx_e",
            "ctx_f",
            "ctx_g",
            "ctx_h",
            "cty_a",
            "cty_b",
            "cty_c",
            "cty_d",
            "cty_e",
            "cty_f",
            "cty_g",
            "cty_h",
            "merkle",
            "ntime",
            "nbits",
            "fW15",
            "fW01r",
            "fcty_e",
            "fcty_e2",
            "PreVal4",
            "C1addK5",
            "W17_2",
            "PreVal4addT1",
            "T1substate0",
            "PreVal4_2",
            "PreVal0",
            "PreW18",
            "PreW19",
            "PreW31",
            "PreW32",
            "B1addK6",
            "PreVal0addK7",
            "W16addK16",
            "W17addK17",
            "zeroA",
            "zeroB",
            "oneA",
            "twoA",
            "threeA",
            "fourA",
            "fiveA",
            "sixA",
            "sevenA",
            "work",
            "dev_blk_ctx",
            "#pool_enable",
            "POOL_DISABLED",
            "POOL_ENABLED",
            "POOL_REJECTING",
            "#pool_protocol",
            "PLP_NONE",
            "PLP_GETWORK",
            "PLP_GETBLOCKTEMPLATE",
            "stratum_work",
            "job_id",
            "prev_hash",
            "coinbase1",
            "coinbase2",
            "merkle",
            "bbversion",
            "nbit",
            "ntime",
            "clean",
            "cb1_len",
            "cb2_len",
            "cb_len",
            "header_len",
            "merkles",
            "diff",
            "transparency_probed",
            "transparency_time",
            "opaque",
            " pool",
            "pool_no",
            "prio",
            "seq_rejects",
            "seq_getfails",
            "solved",
            "diff1",
            "diff",
            "diff_stale",
            "submit_fail",
            "idle",
            "lagging",
            "probed",
            "force_rollntime",
            "enabled",
            "submit_old",
            "removed",
            "lp_started",
            "block_id",
            "proto",
            "hdr_path",
            "lp_url",
            "lp_id",
            "lp_proto",
            "lp_socket",
            "getwork_requested",
            "stale_shares",
            "discarded_work",
            "getfail_occasions",
            "remotefail_occasions",
            "tv_idle",
            "utility",
            "last_shares",
            "shares",
            "rpc_url",
            "rpc_userpass",
            "rpc_user",
            "rpc_pass",
            "rpc_proxy",
            "pool_lock",
            "submit_q",
            "getwork_q",
            "longpoll_thread",
            "submit_thread",
            "getwork_thread",
            "curls",
            "cr_cond",
            "curlring",
            "sws_waiting_on_curl",
            "last_share_time",
            "best_diff",
            "stratum_url",
            "stratum_port",
            "stratum_curl",
            "sock",
            "sockbuf",
            "sockbuf_size",
            "sockaddr_url",
            "nonce1",
            "n1_len",
            "nonce2",
            "n2size",
            "has_stratum",
            "stratum_active",
            "last_work_time",
            "stratum_auth",
            "stratum_notify",
            "swork",
            "stratum_thread",
            "stratum_lock",
            "last_work_lock",
            "last_work_copy",
            "submit_work_state",
            "#api_data_type",
            "API_ESCAPE",
            "API_STRING",
            "API_CONST",
            "API_INT",
            "API_UINT",
            "API_UINT32",
            "API_UINT64",
            "API_DOUBLE",
            "API_ELAPSED",
            "API_BOOL",
            "API_TIMEVAL",
            "API_TIME",
            "API_MHS",
            "API_MHTOTAL",
            "API_TEMP",
            "API_UTILITY",
            "API_FREQ",
            "API_VOLTS",
            "API_HS",
            "API_DIFF",
            "API_JSON",
            "SHA256Context",
            "state",
            "SHA256_CTX",
            "&_curl_easy_setopt_err_long",
            "&_curl_easy_setopt_err_curl_off_t",
            "&_curl_easy_setopt_err_string",
            "&_curl_easy_setopt_err_write_callback",
            "&_curl_easy_setopt_err_read_cb",
            "&_curl_easy_setopt_err_ioctl_cb",
            "&_curl_easy_setopt_err_sockopt_cb",
            "&_curl_easy_setopt_err_opensocket_cb",
            "&_curl_easy_setopt_err_progress_cb",
            "&_curl_easy_setopt_err_debug_cb",
            "&_curl_easy_setopt_err_ssl_ctx_cb",
            "&_curl_easy_setopt_err_conv_cb",
            "&_curl_easy_setopt_err_seek_cb",
            "&_curl_easy_setopt_err_cb_data",
            "&_curl_easy_setopt_err_error_buffer",
            "&_curl_easy_setopt_err_FILE",
            "&_curl_easy_setopt_err_postfields",
            "&_curl_easy_setopt_err_curl_httpost",
            "&_curl_easy_setopt_err_curl_slist",
            "&_curl_easy_setopt_err_CURLSH",
            "&_curl_easy_getinfo_err_string",
            "&_curl_easy_getinfo_err_long",
            "&_curl_easy_getinfo_err_double",
            "&_curl_easy_getinfo_err_curl_slist",
            "'swab32",
            ")swap32yes",
            "(out",
            "*swapcounter",
            "+be32enc_vect",
            ",dst",
            ",src",
            ",len",
            "+SHA256_Transform",
            ",state",
            ",block",
            ",swap",
            "}-t0",
            "h-t1",
            "+SHA256_InitState",
            ",state",
            "+PBKDF2_SHA256_80_128",
            ",passwd",
            ",buf",
            "-PShictx",
            "-PShoctx",
            "~-tstate",
            "~-ihash",
            "l-pad",
            "}-innerpad",
            ".J`D",
            "-istate",
            "+PBKDF2_SHA256_80_128_32",
            ",passwd",
            ",salt",
            "*tstate",
            "@*ihash",
            "l*pad",
            "~*ihash_finalblk",
            ")salsa20_8",
            "*x00",
            "l*x01",
            "h*x02",
            "d*x03",
            "`*x04",
            "\\*x05",
            "X*x06",
            "T*x07",
            "P*x08",
            "L*x09",
            "H*x10",
            "D*x11",
            "@*x12",
            "*x13",
            "*x14",
            "*x15",
            ")scrypt_1024_1_1_256_sp",
            "(input",
            "(scratchpad",
            "h*p1",
            "`*p2",
            "scrypt_outputhash",
            "(work",
            "h*ohash",
            "scrypt_test",
            "(pdata",
            "(ptarget",
            "\\*Htarg",
            "*ohash",
            "scanhash_scrypt",
            "(thr",
            "(pmidstate",
            "(pdata",
            "(phash1",
            "(phash",
            " (ptarget",
            "((max_nonce",
            "0(last_nonce",
            "L*Htarg",
            "\\*ret",
            "-passwdpad",
            "-outerpad",
            "GNU C 4.6.3",
            "fpgautils.c",
            "/home/luke-jr/Projects/Education/Tonal/BitCoin/cgminer",
            "__gnuc_va_list",
            "__builtin_va_list",
            "char",
            "va_list",
            "size_t",
            "long long unsigned int",
            "ssize_t",
            "long long int",
            "intptr_t",
            "ptrdiff_t",
            "wchar_t",
            "short unsigned int",
            "long int",
            "__time64_t",
            "time_t",
            "unsigned int",
            "long unsigned int",
            "unsigned char",
            "BYTE",
            "WORD",
            "DWORD",
            "float",
            "LPLONG",
            "signed char",
            "short int",
            "UINT_PTR",
            "LONG_PTR",
            "PVOID",
            "LONG",
            "WCHAR",
            "HANDLE",
            "double",
            "long double",
            "HINSTANCE__",
            "unused",
            "HINSTANCE",
            "HMODULE",
            "_DCB",
            "DCBlength",
            "BaudRate",
            "fBinary",
            "fParity",
            "fOutxCtsFlow",
            "fOutxDsrFlow",
            "fDtrControl",
            "fDsrSensitivity",
            "fTXContinueOnXoff",
            "fOutX",
            "fInX",
            "fErrorChar",
            "fNull",
            "fRtsControl",
            "fAbortOnError",
            "fDummy2",
            "XonLim",
            "XoffLim",
            "ByteSize",
            "Parity",
            "StopBits",
            "XonChar",
            "XoffChar",
            "ErrorChar",
            "EofChar",
            "EvtChar",
            "wReserved1",
            "_COMMTIMEOUTS",
            "ReadIntervalTimeout",
            "ReadTotalTimeoutMultiplier",
            "ReadTotalTimeoutConstant",
            "WriteTotalTimeoutMultiplier",
            "WriteTotalTimeoutConstant",
            "COMMTIMEOUTS",
            "_COMMCONFIG",
            "dwSize",
            "wVersion",
            "dwProviderSubType",
            "dwProviderOffset",
            "dwProviderSize",
            "wcProviderData",
            "COMMCONFIG",
            "VARENUM",
            "VT_EMPTY",
            "VT_NULL",
            "VT_I2",
            "VT_I4",
            "VT_R4",
            "VT_R8",
            "VT_CY",
            "VT_DATE",
            "VT_BSTR",
            "VT_DISPATCH",
            "VT_ERROR",
            "VT_BOOL",
            "VT_VARIANT",
            "VT_UNKNOWN",
            "VT_DECIMAL",
            "VT_I1",
            "VT_UI1",
            "VT_UI2",
            "VT_UI4",
            "VT_I8",
            "VT_UI8",
            "VT_INT",
            "VT_UINT",
            "VT_VOID",
            "VT_HRESULT",
            "VT_PTR",
            "VT_SAFEARRAY",
            "VT_CARRAY",
            "VT_USERDEFINED",
            "VT_LPSTR",
            "VT_LPWSTR",
            "VT_RECORD",
            "VT_INT_PTR",
            "VT_UINT_PTR",
            "VT_FILETIME",
            "VT_BLOB",
            "VT_STREAM",
            "VT_STORAGE",
            "VT_STREAMED_OBJECT",
            "VT_STORED_OBJECT",
            "VT_BLOB_OBJECT",
            "VT_CF",
            "VT_CLSID",
            "VT_VERSIONED_STREAM",
            "VT_BSTR_BLOB",
            "VT_VECTOR",
            "VT_ARRAY",
            "VT_BYREF",
            "VT_RESERVED",
            "VT_ILLEGAL",
            "VT_ILLEGALMASKED",
            "VT_TYPEMASK",
            "timeval",
            "tv_sec",
            "tv_usec",
            "SOCKET",
            "uint8_t",
            "int16_t",
            "uint16_t",
            "uint32_t",
            "int64_t",
            "uint64_t",
            "FT_STATUS",
            "FT_HANDLE",
            "FT_OK",
            "list_head",
            "next",
            "prev",
            "LOG_ERR",
            "LOG_WARNING",
            "LOG_NOTICE",
            "LOG_INFO",
            "LOG_DEBUG",
            "ptw32_handle_t",
            "pthread_t",
            "pthread_mutex_t",
            "pthread_mutex_t_",
            "pthread_cond_t",
            "pthread_cond_t_",
            "_iobuf",
            "_ptr",
            "_cnt",
            "_base",
            "_flag",
            "_file",
            "_charbuf",
            "_bufsiz",
            "_tmpfname",
            "FILE",
            "CURL",
            "curl_socket_t",
            "blkheight_t",
            "libblkmaker_hash_t",
            "blkhash_t",
            "txnhash_t",
            "blktime_t",
            "blktime_diff_t",
            "blknonce_t",
            "blktxn_t",
            "data",
            "datasz",
            "hash",
            "dependcount",
            "depends",
            "required",
            "sigops",
            "_Bool",
            "blktmpl_longpoll_req",
            "GBT_CBTXN",
            "GBT_CBVALUE",
            "GBT_WORKID",
            "GBT_LONGPOLL",
            "GBT_PROPOSAL",
            "GBT_SERVICE",
            "BMM_CBAPPEND",
            "BMM_CBSET",
            "BMM_GENERATE",
            "BMM_TIMEINC",
            "BMM_TIMEDEC",
            "BMM_TXNADD",
            "BMM_PREVBLK",
            "BMM_VERFORCE",
            "BMM_VERDROP",
            "BMA_TXNHASH",
            "BMAb_COINBASE",
            "BMAb_TRUNCATE",
            "BMAs_COINBASE",
            "BMAs_MERKLE",
            "BMAs_TRUNCATE",
            "gbt_capabilities_t",
            "blkmutations_t",
            "version",
            "diffbits",
            "height",
            "prevblk",
            "sigoplimit",
            "sizelimit",
            "txncount",
            "txns",
            "cbtxn",
            "cbvalue",
            "_time_rcvd",
            "curtime",
            "auxcount",
            "auxnames",
            "auxdata",
            "workid",
            "submitold",
            "expires",
            "target",
            "mutations",
            "maxtime",
            "maxtimeoff",
            "mintime",
            "mintimeoff",
            "minnonce",
            "maxnonce",
            "_mrklroot",
            "next_dataid",
            "blktemplate_t",
            "hh_head",
            "count",
            "expand_mult",
            "prev",
            "next",
            "hh_prev",
            "hh_next",
            "keylen",
            "hashv",
            "buckets",
            "num_buckets",
            "log2_num_buckets",
            "num_items",
            "tail",
            "ideal_chain_maxlen",
            "nonideal_items",
            "ineff_expands",
            "noexpand",
            "signature",
            "notifier_t",
            "cl_uint",
            "cl_ulong",
            "iVddc",
            "iActivityPercent",
            "iCurrentPerformanceLevel",
            "iCurrentBusSpeed",
            "iCurrentBusLanes",
            "iMaximumBusLanes",
            "iTemperature",
            "iFlags",
            "iMinPercent",
            "iMaxPercent",
            "iMinRPM",
            "iMaxRPM",
            "iSpeedType",
            "iFanSpeed",
            "iFlags",
            "iMin",
            "iMax",
            "iStep",
            "iNumberOfPerformanceLevels",
            "iActivityReportingSupported",
            "iDiscretePerformanceLevels",
            "sEngineClock",
            "sMemoryClock",
            "sVddc",
            "iVddc",
            "aLevels",
            "libusb_device_descriptor",
            "bLength",
            "bDescriptorType",
            "bcdUSB",
            "bDeviceClass",
            "bDeviceSubClass",
            "bDeviceProtocol",
            "bMaxPacketSize0",
            "idVendor",
            "idProduct",
            "bcdDevice",
            "iManufacturer",
            "iProduct",
            "iSerialNumber",
            "bNumConfigurations",
            "dclk_data",
            "freqM",
            "freqMaxM",
            "freqMDefault",
            "minGoodSamples",
            "errorCount",
            "errorWeight",
            "errorRate",
            "maxErrorRate",
            "thr_info",
            "device_thread",
            "primary_thread",
            "cgpu",
            "last",
            "sick",
            "scanhash_working",
            "hashes_done",
            "tv_hashes_done",
            "tv_lastupdate",
            "pause",
            "getwork",
            "rolling",
            "prev_work",
            "work",
            "next_work",
            "tv_morework",
            "results_work",
            "_job_transition_in_progress",
            "_proceed_with_new_job",
            "tv_results_jobstart",
            "tv_jobstart",
            "tv_poll",
            "notifier",
            "starting_next_work",
            "_max_nonce",
            "work_restart",
            "work_restart_notifier",
            "libztex_device",
            "mutex",
            "root",
            "fpgaNum",
            "descriptor",
            "hndl",
            "usbbus",
            "usbaddress",
            "snString",
            "productId",
            "fwVersion",
            "interfaceVersion",
            "interfaceCapabilities",
            "moduleReserved",
            "numNonces",
            "offsNonces",
            "freqM1",
            "bitFileName",
            "suspendSupported",
            "hashesPerClock",
            "extraSolutions",
            "dclk",
            "numberOfFpgas",
            "selectedFpga",
            "parallelConfigSupport",
            "repr",
            "alive",
            "LIFE_WELL",
            "LIFE_SICK",
            "LIFE_DEAD",
            "LIFE_NOSTART",
            "LIFE_INIT",
            "LIFE_WAIT",
            "gpu_adl",
            "lpTemperature",
            "iAdapterIndex",
            "lpAdapterID",
            "iBusNumber",
            "strAdapterName",
            "lpActivity",
            "lpOdParameters",
            "DefPerfLev",
            "lpFanSpeedInfo",
            "lpFanSpeedValue",
            "DefFanSpeedValue",
            "iVddc",
            "iPercentage",
            "autofan",
            "autoengine",
            "managed",
            "lastengine",
            "lasttemp",
            "targetfan",
            "overtemp",
            "minspeed",
            "maxspeed",
            "has_fanspeed",
            "twin",
            "device_api",
            "dname",
            "name",
            "api_detect",
            "get_dev_statline_before",
            "get_dev_statline_after",
            "reinit_device",
            "get_statline_before",
            "get_statline",
            "get_api_extra_device_detail",
            "get_api_extra_device_status",
            "get_api_stats",
            "get_stats",
            "identify_device",
            "set_device",
            "thread_prepare",
            "minerloop",
            "can_limit_work",
            "thread_init",
            "prepare_work",
            "scanhash",
            "hw_error",
            "thread_shutdown",
            "thread_enable",
            "poll",
            "job_prepare",
            "job_start",
            "job_get_results",
            "job_process_results",
            "\"cgpu_info",
            "cgminer_id",
            "device_line_id",
            "devtype",
            "device_id",
            "dev_repr",
            "dev_repr_ns",
            "name",
            "procs",
            "proc_id",
            "proc_repr",
            "proc_repr_ns",
            "device",
            "next_proc",
            "device_path",
            "device_file",
            "work_start_tv",
            "wait_ms",
            "sleep_ms",
            "avg_wait_f",
            "avg_wait_d",
            "nonces",
            "polling",
            "flash_led",
            "device_mutex",
            "deven",
            "hw_errors",
            "rolling",
            "total_mhashes",
            "utility",
            "utility_diff1",
            "status",
            "init",
            "last_message_tv",
            "threads",
            "max_hashes",
            "kname",
            "mapped",
            "virtual_gpu",
            "virtual_adl",
            "intensity",
            "dynamic",
            "vwidth",
            "work_size",
            "kernel",
            "max_alloc",
            "opt_lg",
            "lookup_gap",
            "opt_tc",
            "thread_concurrency",
            "shaders",
            "tv_gpustart",
            "intervals",
            "temp",
            "cutofftemp",
            "targettemp",
            "has_adl",
            "gpu_engine",
            "min_engine",
            "gpu_fan",
            "min_fan",
            "gpu_memclock",
            "gpu_memdiff",
            "gpu_powertune",
            "gpu_vddc",
            "diff1",
            "last_share_pool",
            "last_share_pool_time",
            "device_last_well",
            "device_last_not_well",
            "device_not_well_reason",
            "reinit_backoff",
            "thread_fail_init_count",
            "thread_zero_hash_count",
            "thread_fail_queue_count",
            "dev_sick_idle_60_count",
            "dev_dead_idle_600_count",
            "dev_nostart_count",
            "dev_over_heat_count",
            "dev_thermal_cutoff_count",
            "dev_comms_error_count",
            "dev_throttle_count",
            "api_data",
            "type",
            "name",
            "data",
            "data_was_malloc",
            "prev",
            "next",
            "\"work",
            "data",
            "midstate",
            "target",
            "hash",
            "rolls",
            "thr_id",
            "pool",
            "tv_staged",
            "mined",
            "clone",
            "cloned",
            "longpoll",
            "stale",
            "mandatory",
            "block",
            "queued",
            "stratum",
            "job_id",
            "nonce2",
            "ntime",
            "sdiff",
            "work_difficulty",
            "tmpl",
            "tmpl_refcount",
            "dataid",
            "tv_getwork",
            "tv_getwork_reply",
            "tv_cloned",
            "tv_work_start",
            "tv_work_found",
            "getwork_mode",
            "list",
            "%dev_enable",
            "DEV_ENABLED",
            "DEV_DISABLED",
            "DEV_RECOVER",
            "DEV_RECOVER_ERR",
            "%cl_kernels",
            "KL_NONE",
            "KL_POCLBM",
            "KL_PHATK",
            "KL_DIAKGCN",
            "KL_DIABLO",
            "KL_SCRYPT",
            "dev_reason",
            "REASON_THREAD_FAIL_INIT",
            "REASON_THREAD_ZERO_HASH",
            "REASON_THREAD_FAIL_QUEUE",
            "REASON_DEV_SICK_IDLE_60",
            "REASON_DEV_DEAD_IDLE_600",
            "REASON_DEV_NOSTART",
            "REASON_DEV_OVER_HEAT",
            "REASON_DEV_THERMAL_CUTOFF",
            "REASON_DEV_COMMS_ERROR",
            "REASON_DEV_THROTTLE",
            "_get_start",
            "getwork_attempts",
            "getwork_wait_rolling",
            "hadrolltime",
            "canroll",
            "hadexpire",
            "min_diff",
            "max_diff",
            "last_diff",
            "min_diff_count",
            "max_diff_count",
            "times_sent",
            "bytes_sent",
            "net_bytes_sent",
            "times_received",
            "bytes_received",
            "net_bytes_received",
            "'device_ztex",
            "'device_fd",
            "'device_ft232r",
            "ft232r_device_handle",
            "thread_q",
            "frozen",
            "mutex",
            "cond",
            "string_elist",
            "string",
            "free_me",
            "list",
            "ctx_a",
            "ctx_b",
            "ctx_c",
            "ctx_d",
            "ctx_e",
            "ctx_f",
            "ctx_g",
            "ctx_h",
            "cty_a",
            "cty_b",
            "cty_c",
            "cty_d",
            "cty_e",
            "cty_f",
            "cty_g",
            "cty_h",
            "merkle",
            "ntime",
            "nbits",
            "nonce",
            "fW15",
            "fW01r",
            "fcty_e",
            "fcty_e2",
            "PreVal4",
            "C1addK5",
            "W17_2",
            "PreVal4addT1",
            "T1substate0",
            "PreVal4_2",
            "PreVal0",
            "PreW18",
            "PreW19",
            "PreW31",
            "PreW32",
            "B1addK6",
            "PreVal0addK7",
            "W16addK16",
            "W17addK17",
            "zeroA",
            "zeroB",
            "oneA",
            "twoA",
            "threeA",
            "fourA",
            "fiveA",
            "sixA",
            "sevenA",
            "work",
            "dev_blk_ctx",
            "%pool_enable",
            "POOL_DISABLED",
            "POOL_ENABLED",
            "POOL_REJECTING",
            "%pool_protocol",
            "PLP_NONE",
            "PLP_GETWORK",
            "PLP_GETBLOCKTEMPLATE",
            "stratum_work",
            "job_id",
            "prev_hash",
            "coinbase1",
            "coinbase2",
            "merkle",
            "bbversion",
            "nbit",
            "ntime",
            "clean",
            "cb1_len",
            "cb2_len",
            "cb_len",
            "header_len",
            "merkles",
            "diff",
            "transparency_probed",
            "transparency_time",
            "opaque",
            "\"pool",
            "pool_no",
            "prio",
            "seq_rejects",
            "seq_getfails",
            "solved",
            "diff1",
            "diff",
            "diff_stale",
            "submit_fail",
            "idle",
            "lagging",
            "probed",
            "force_rollntime",
            "enabled",
            "submit_old",
            "removed",
            "lp_started",
            "block_id",
            "proto",
            "hdr_path",
            "lp_url",
            "lp_id",
            "lp_proto",
            "lp_socket",
            "getwork_requested",
            "stale_shares",
            "discarded_work",
            "getfail_occasions",
            "remotefail_occasions",
            "tv_idle",
            "utility",
            "last_shares",
            "shares",
            "rpc_url",
            "rpc_userpass",
            "rpc_user",
            "rpc_pass",
            "rpc_proxy",
            "pool_lock",
            "submit_q",
            "getwork_q",
            "longpoll_thread",
            "submit_thread",
            "getwork_thread",
            "curls",
            "cr_cond",
            "curlring",
            "sws_waiting_on_curl",
            "last_share_time",
            "best_diff",
            "stratum_url",
            "stratum_port",
            "stratum_curl",
            "sock",
            "sockbuf",
            "sockbuf_size",
            "sockaddr_url",
            "nonce1",
            "n1_len",
            "nonce2",
            "n2size",
            "has_stratum",
            "stratum_active",
            "last_work_time",
            "stratum_auth",
            "stratum_notify",
            "swork",
            "stratum_thread",
            "stratum_lock",
            "last_work_lock",
            "last_work_copy",
            "submit_work_state",
            "%api_data_type",
            "API_ESCAPE",
            "API_STRING",
            "API_CONST",
            "API_INT",
            "API_UINT",
            "API_UINT32",
            "API_UINT64",
            "API_DOUBLE",
            "API_ELAPSED",
            "API_BOOL",
            "API_TIMEVAL",
            "API_TIME",
            "API_MHS",
            "API_MHTOTAL",
            "API_TEMP",
            "API_UTILITY",
            "API_FREQ",
            "API_VOLTS",
            "API_HS",
            "API_DIFF",
            "API_JSON",
            "detectone_func_t",
            "autoscan_func_t",
            "my_dev_t",
            "_device_claim",
            ")__list_del",
            "*prev",
            "*next",
            ")list_del",
            "*entry",
            "+_curl_easy_setopt_err_long",
            "+_curl_easy_setopt_err_curl_off_t",
            "+_curl_easy_setopt_err_string",
            "+_curl_easy_setopt_err_write_callback",
            "+_curl_easy_setopt_err_read_cb",
            "+_curl_easy_setopt_err_ioctl_cb",
            "+_curl_easy_setopt_err_sockopt_cb",
            "+_curl_easy_setopt_err_opensocket_cb",
            "+_curl_easy_setopt_err_progress_cb",
            "+_curl_easy_setopt_err_debug_cb",
            "+_curl_easy_setopt_err_ssl_ctx_cb",
            "+_curl_easy_setopt_err_conv_cb",
            "+_curl_easy_setopt_err_seek_cb",
            "+_curl_easy_setopt_err_cb_data",
            "+_curl_easy_setopt_err_error_buffer",
            "+_curl_easy_setopt_err_FILE",
            "+_curl_easy_setopt_err_postfields",
            "+_curl_easy_setopt_err_curl_httpost",
            "+_curl_easy_setopt_err_curl_slist",
            "+_curl_easy_setopt_err_CURLSH",
            "+_curl_easy_getinfo_err_string",
            "+_curl_easy_getinfo_err_long",
            "+_curl_easy_getinfo_err_double",
            "+_curl_easy_getinfo_err_curl_slist",
            ",string_elist_del",
            "-item",
            ".search_needles",
            "*haystack",
            "o1qD",
            "0needle",
            "`0__cont",
            "n0ap",
            "2_serial_autodetect_ftdi",
            "5devpathnum",
            "`5bufptrs",
            "@5buf",
            "H5found",
            "h5ftStatus",
            "T5numDevs",
            "5dll",
            "X6out",
            "5ftHandle",
            "5lComPortNumber",
            "_serial_autodetect",
            "_serial_detect",
            "-api",
            "-autoscan",
            "-flags",
            "5iter",
            "X5tmp",
            "P5dev",
            "H5colon",
            "5inhibitauto",
            "G5found",
            "F5forceauto",
            "E5hasname",
            "D5namel",
            "5dnamel",
            "5idlen",
            "serial_claim",
            "-api",
            "5claims",
            "X5dev",
            "~9xD",
            "5_hf_bkt",
            "5_hf_hashv",
            "T1-yD",
            "5_hj_i",
            "P5_hj_j",
            "L5_hj_k",
            "H5_hj_key",
            "5_ha_bkt",
            "5_hj_i",
            "5_hj_j",
            "5_hj_k",
            "5_hj_key",
            "5_he_bkt",
            "~5_he_bkt_i",
            "5_he_thh",
            "5_he_hh_nxt",
            "~5_he_new_buckets",
            "5_he_newbkt",
            "serial_open",
            "-baud",
            "-timeout",
            "-purge",
            "5hSerial",
            "X5comCfg",
            "5ctoms",
            "P5cto",
            "~13D",
            "_serial_read",
            "-buf",
            "-bufsiz",
            "-eol",
            "5len",
            "`5tlen",
            "2_open_bitstream",
            "-path",
            "-subdir",
            "-sub2",
            "5fullpath",
            "open_bitstream",
            "-dname",
            "open_xilinx_bitstream",
            "-dname",
            "-repr",
            "-fwfile",
            "-out_len",
            "5buf",
            "}5ubuf",
            "h5len",
            "`5fwusercode",
            ":FT_ListDevices",
            ":FT_Open",
            ":FT_GetComPortNumber",
            ":FT_Close",
            ":FT_OPEN_BY_DESCRIPTION",
            ":FT_LIST_ALL",
            ":FT_LIST_NUMBER_ONLY",
            ";opt_kernel_path",
            ";cgminer_path",
            ";scan_devices",
            "GNU C 4.6.3",
            "dynclock.c",
            "/home/luke-jr/Projects/Education/Tonal/BitCoin/cgminer",
            "char",
            "size_t",
            "long long unsigned int",
            "long long int",
            "ptrdiff_t",
            "short unsigned int",
            "long int",
            "__time64_t",
            "time_t",
            "unsigned int",
            "long unsigned int",
            "unsigned char",
            "signed char",
            "uint8_t",
            "int16_t",
            "short int",
            "uint16_t",
            "uint32_t",
            "int64_t",
            "uint64_t",
            "dclk_data",
            "freqM",
            "freqMaxM",
            "minGoodSamples",
            "errorCount",
            "errorWeight",
            "errorRate",
            "maxErrorRate",
            "double",
            "dclk_change_clock_func_t",
            "_Bool",
            "thr_info",
            "device_thread",
            "primary_thread",
            "cgpu",
            "last",
            "sick",
            "scanhash_working",
            "hashes_done",
            "tv_hashes_done",
            "tv_lastupdate",
            "pause",
            "getwork",
            "rolling",
            "prev_work",
            "work",
            "next_work",
            "tv_morework",
            "results_work",
            "_job_transition_in_progress",
            "_proceed_with_new_job",
            "tv_results_jobstart",
            "tv_jobstart",
            "tv_poll",
            "notifier",
            "starting_next_work",
            "_max_nonce",
            "work_restart",
            "work_restart_notifier",
            "float",
            "UINT_PTR",
            "long double",
            "timeval",
            "tv_sec",
            "tv_usec",
            "SOCKET",
            "ptw32_handle_t",
            "pthread_t",
            "pthread_mutex_t",
            "pthread_mutex_t_",
            "pthread_cond_t",
            "pthread_cond_t_",
            "_iobuf",
            "_ptr",
            "_cnt",
            "_base",
            "_flag",
            "_file",
            "_charbuf",
            "_bufsiz",
            "_tmpfname",
            "FILE",
            "CURL",
            "curl_socket_t",
            "blkheight_t",
            "libblkmaker_hash_t",
            "blkhash_t",
            "txnhash_t",
            "blktime_t",
            "blktime_diff_t",
            "blknonce_t",
            "blktxn_t",
            "datasz",
            "hash",
            "dependcount",
            "depends",
            "required",
            "sigops",
            "blktmpl_longpoll_req",
            "GBT_CBTXN",
            "GBT_CBVALUE",
            "GBT_WORKID",
            "GBT_LONGPOLL",
            "GBT_PROPOSAL",
            "GBT_SERVICE",
            "BMM_CBAPPEND",
            "BMM_CBSET",
            "BMM_GENERATE",
            "BMM_TIMEINC",
            "BMM_TIMEDEC",
            "BMM_TXNADD",
            "BMM_PREVBLK",
            "BMM_VERFORCE",
            "BMM_VERDROP",
            "BMA_TXNHASH",
            "BMAb_COINBASE",
            "BMAb_TRUNCATE",
            "BMAs_COINBASE",
            "BMAs_MERKLE",
            "BMAs_TRUNCATE",
            "gbt_capabilities_t",
            "blkmutations_t",
            "version",
            "diffbits",
            "height",
            "prevblk",
            "sigoplimit",
            "sizelimit",
            "txncount",
            "txns",
            "cbtxn",
            "cbvalue",
            "_time_rcvd",
            "curtime",
            "auxcount",
            "auxnames",
            "auxdata",
            "workid",
            "submitold",
            "expires",
            "target",
            "mutations",
            "maxtime",
            "maxtimeoff",
            "mintime",
            "mintimeoff",
            "minnonce",
            "maxnonce",
            "_mrklroot",
            "next_dataid",
            "blktemplate_t",
            "list_head",
            "next",
            "prev",
            "hh_head",
            "count",
            "expand_mult",
            "prev",
            "next",
            "hh_prev",
            "hh_next",
            "keylen",
            "hashv",
            "UT_hash_table",
            "buckets",
            "num_buckets",
            "log2_num_buckets",
            "num_items",
            "tail",
            "ideal_chain_maxlen",
            "nonideal_items",
            "ineff_expands",
            "noexpand",
            "signature",
            "LOG_ERR",
            "LOG_WARNING",
            "LOG_NOTICE",
            "LOG_INFO",
            "LOG_DEBUG",
            "notifier_t",
            "cl_uint",
            "cl_ulong",
            "iVddc",
            "iActivityPercent",
            "iCurrentPerformanceLevel",
            "iCurrentBusSpeed",
            "iCurrentBusLanes",
            "iMaximumBusLanes",
            "iTemperature",
            "iFlags",
            "iMinPercent",
            "iMaxPercent",
            "iMinRPM",
            "iMaxRPM",
            "iSpeedType",
            "iFanSpeed",
            "iFlags",
            "iMin",
            "iMax",
            "iStep",
            "iNumberOfPerformanceLevels",
            "iActivityReportingSupported",
            "iDiscretePerformanceLevels",
            "sEngineClock",
            "sMemoryClock",
            "sVddc",
            "iVddc",
            "aLevels",
            "libusb_device_descriptor",
            "bLength",
            "bDescriptorType",
            "bcdUSB",
            "bDeviceClass",
            "bDeviceSubClass",
            "bDeviceProtocol",
            "bMaxPacketSize0",
            "idVendor",
            "idProduct",
            "bcdDevice",
            "iManufacturer",
            "iProduct",
            "iSerialNumber",
            "bNumConfigurations",
            "libztex_device",
            "mutex",
            "root",
            "fpgaNum",
            "descriptor",
            "hndl",
            "usbbus",
            "usbaddress",
            "snString",
            "productId",
            "fwVersion",
            "interfaceVersion",
            "interfaceCapabilities",
            "moduleReserved",
            "numNonces",
            "offsNonces",
            "freqM1",
            "bitFileName",
            "suspendSupported",
            "hashesPerClock",
            "extraSolutions",
            "dclk",
            "numberOfFpgas",
            "selectedFpga",
            "parallelConfigSupport",
            "repr",
            "alive",
            "LIFE_WELL",
            "LIFE_SICK",
            "LIFE_DEAD",
            "LIFE_NOSTART",
            "LIFE_INIT",
            "LIFE_WAIT",
            "gpu_adl",
            "lpTemperature",
            "iAdapterIndex",
            "lpAdapterID",
            "iBusNumber",
            "strAdapterName",
            "lpActivity",
            "lpOdParameters",
            "DefPerfLev",
            "lpFanSpeedInfo",
            "lpFanSpeedValue",
            "DefFanSpeedValue",
            "iVddc",
            "iPercentage",
            "autofan",
            "autoengine",
            "managed",
            "lastengine",
            "lasttemp",
            "targetfan",
            "overtemp",
            "minspeed",
            "maxspeed",
            "has_fanspeed",
            "twin",
            "device_api",
            "dname",
            "name",
            "api_detect",
            "get_dev_statline_before",
            "get_dev_statline_after",
            "reinit_device",
            "get_statline_before",
            "get_statline",
            "get_api_extra_device_detail",
            "get_api_extra_device_status",
            "get_api_stats",
            "get_stats",
            "identify_device",
            "set_device",
            "thread_prepare",
            "minerloop",
            "can_limit_work",
            "thread_init",
            "prepare_work",
            "scanhash",
            "hw_error",
            "thread_shutdown",
            "thread_enable",
            "poll",
            "job_prepare",
            "job_start",
            "job_get_results",
            "job_process_results",
            " cgpu_info",
            "cgminer_id",
            "device_line_id",
            "devtype",
            "device_id",
            "dev_repr",
            "dev_repr_ns",
            "name",
            "procs",
            "proc_id",
            "proc_repr",
            "proc_repr_ns",
            "device",
            "next_proc",
            "device_path",
            "device_file",
            "#h!.",
            "work_start_tv",
            "wait_ms",
            "sleep_ms",
            "avg_wait_f",
            "avg_wait_d",
            "nonces",
            "polling",
            "flash_led",
            "device_mutex",
            "deven",
            "hw_errors",
            "rolling",
            "total_mhashes",
            "utility",
            "utility_diff1",
            "status",
            "init",
            "last_message_tv",
            "threads",
            "max_hashes",
            "kname",
            "mapped",
            "virtual_gpu",
            "virtual_adl",
            "intensity",
            "dynamic",
            "vwidth",
            "work_size",
            "kernel",
            "max_alloc",
            "opt_lg",
            "lookup_gap",
            "opt_tc",
            "thread_concurrency",
            "shaders",
            "tv_gpustart",
            "intervals",
            "temp",
            "cutofftemp",
            "targettemp",
            "has_adl",
            "gpu_engine",
            "min_engine",
            "gpu_fan",
            "min_fan",
            "gpu_memclock",
            "gpu_memdiff",
            "gpu_powertune",
            "gpu_vddc",
            "diff1",
            "last_share_pool",
            "last_share_pool_time",
            "device_last_well",
            "device_last_not_well",
            "device_not_well_reason",
            "reinit_backoff",
            "thread_fail_init_count",
            "thread_zero_hash_count",
            "thread_fail_queue_count",
            "dev_sick_idle_60_count",
            "dev_dead_idle_600_count",
            "dev_nostart_count",
            "dev_over_heat_count",
            "dev_thermal_cutoff_count",
            "dev_comms_error_count",
            "dev_throttle_count",
            "api_data",
            "type",
            "name",
            "data_was_malloc",
            "prev",
            "next",
            " work",
            "midstate",
            "target",
            "hash",
            "rolls",
            "thr_id",
            "pool",
            "tv_staged",
            "mined",
            "clone",
            "cloned",
            "longpoll",
            "stale",
            "mandatory",
            "block",
            "queued",
            "stratum",
            "job_id",
            "nonce2",
            "ntime",
            "sdiff",
            "work_difficulty",
            "tmpl",
            "tmpl_refcount",
            "dataid",
            "tv_getwork",
            "tv_getwork_reply",
            "tv_cloned",
            "tv_work_start",
            "tv_work_found",
            "getwork_mode",
            "list",
            "\"dev_enable",
            "DEV_ENABLED",
            "DEV_DISABLED",
            "DEV_RECOVER",
            "DEV_RECOVER_ERR",
            "\"cl_kernels",
            "KL_NONE",
            "KL_POCLBM",
            "KL_PHATK",
            "KL_DIAKGCN",
            "KL_DIABLO",
            "KL_SCRYPT",
            "dev_reason",
            "REASON_THREAD_FAIL_INIT",
            "REASON_THREAD_ZERO_HASH",
            "REASON_THREAD_FAIL_QUEUE",
            "REASON_DEV_SICK_IDLE_60",
            "REASON_DEV_DEAD_IDLE_600",
            "REASON_DEV_NOSTART",
            "REASON_DEV_OVER_HEAT",
            "REASON_DEV_THERMAL_CUTOFF",
            "REASON_DEV_COMMS_ERROR",
            "REASON_DEV_THROTTLE",
            "_get_start",
            "getwork_attempts",
            "getwork_wait_rolling",
            "hadrolltime",
            "canroll",
            "hadexpire",
            "min_diff",
            "max_diff",
            "last_diff",
            "min_diff_count",
            "max_diff_count",
            "times_sent",
            "bytes_sent",
            "net_bytes_sent",
            "times_received",
            "bytes_received",
            "net_bytes_received",
            "$device_ztex",
            "$device_fd",
            "$device_ft232r",
            "ft232r_device_handle",
            "thread_q",
            "frozen",
            "mutex",
            "cond",
            "ctx_a",
            "ctx_b",
            "ctx_c",
            "ctx_d",
            "ctx_e",
            "ctx_f",
            "ctx_g",
            "ctx_h",
            "cty_a",
            "cty_b",
            "cty_c",
            "cty_d",
            "cty_e",
            "cty_f",
            "cty_g",
            "cty_h",
            "merkle",
            "ntime",
            "nbits",
            "nonce",
            "fW15",
            "fW01r",
            "fcty_e",
            "fcty_e2",
            "PreVal4",
            "C1addK5",
            "W17_2",
            "PreVal4addT1",
            "T1substate0",
            "PreVal4_2",
            "PreVal0",
            "PreW18",
            "PreW19",
            "PreW31",
            "PreW32",
            "B1addK6",
            "PreVal0addK7",
            "W16addK16",
            "W17addK17",
            "zeroA",
            "zeroB",
            "oneA",
            "twoA",
            "threeA",
            "fourA",
            "fiveA",
            "sixA",
            "sevenA",
            "work",
            "dev_blk_ctx",
            "\"pool_enable",
            "POOL_DISABLED",
            "POOL_ENABLED",
            "POOL_REJECTING",
            "\"pool_protocol",
            "PLP_NONE",
            "PLP_GETWORK",
            "PLP_GETBLOCKTEMPLATE",
            "stratum_work",
            "job_id",
            "prev_hash",
            "coinbase1",
            "coinbase2",
            "merkle",
            "bbversion",
            "nbit",
            "ntime",
            "clean",
            "cb1_len",
            "cb2_len",
            "cb_len",
            "header_len",
            "merkles",
            "diff",
            "transparency_probed",
            "transparency_time",
            "opaque",
            " pool",
            "pool_no",
            "prio",
            "seq_rejects",
            "seq_getfails",
            "solved",
            "diff1",
            "diff",
            "diff_stale",
            "submit_fail",
            "idle",
            "lagging",
            "probed",
            "force_rollntime",
            "enabled",
            "submit_old",
            "removed",
            "lp_started",
            "block_id",
            "proto",
            "hdr_path",
            "lp_url",
            "lp_id",
            "lp_proto",
            "lp_socket",
            "getwork_requested",
            "stale_shares",
            "discarded_work",
            "getfail_occasions",
            "remotefail_occasions",
            "tv_idle",
            "utility",
            "last_shares",
            "shares",
            "rpc_url",
            "rpc_userpass",
            "rpc_user",
            "rpc_pass",
            "rpc_proxy",
            "pool_lock",
            "submit_q",
            "getwork_q",
            "longpoll_thread",
            "submit_thread",
            "getwork_thread",
            "curls",
            "cr_cond",
            "curlring",
            "sws_waiting_on_curl",
            "last_share_time",
            "best_diff",
            "stratum_url",
            "stratum_port",
            "stratum_curl",
            "sock",
            "sockbuf",
            "sockbuf_size",
            "sockaddr_url",
            "nonce1",
            "n1_len",
            "nonce2",
            "n2size",
            "has_stratum",
            "stratum_active",
            "last_work_time",
            "stratum_auth",
            "stratum_notify",
            "swork",
            "stratum_thread",
            "stratum_lock",
            "last_work_lock",
            "last_work_copy",
            "submit_work_state",
            "\"api_data_type",
            "API_ESCAPE",
            "API_STRING",
            "API_CONST",
            "API_INT",
            "API_UINT",
            "API_UINT32",
            "API_UINT64",
            "API_DOUBLE",
            "API_ELAPSED",
            "API_BOOL",
            "API_TIMEVAL",
            "API_TIME",
            "API_MHS",
            "API_MHTOTAL",
            "API_TEMP",
            "API_UTILITY",
            "API_FREQ",
            "API_VOLTS",
            "API_HS",
            "API_DIFF",
            "API_JSON",
            "%_curl_easy_setopt_err_long",
            "%_curl_easy_setopt_err_curl_off_t",
            "%_curl_easy_setopt_err_string",
            "%_curl_easy_setopt_err_write_callback",
            "%_curl_easy_setopt_err_read_cb",
            "%_curl_easy_setopt_err_ioctl_cb",
            "%_curl_easy_setopt_err_sockopt_cb",
            "%_curl_easy_setopt_err_opensocket_cb",
            "%_curl_easy_setopt_err_progress_cb",
            "%_curl_easy_setopt_err_debug_cb",
            "%_curl_easy_setopt_err_ssl_ctx_cb",
            "%_curl_easy_setopt_err_conv_cb",
            "%_curl_easy_setopt_err_seek_cb",
            "%_curl_easy_setopt_err_cb_data",
            "%_curl_easy_setopt_err_error_buffer",
            "%_curl_easy_setopt_err_FILE",
            "%_curl_easy_setopt_err_postfields",
            "%_curl_easy_setopt_err_curl_httpost",
            "%_curl_easy_setopt_err_curl_slist",
            "%_curl_easy_setopt_err_CURLSH",
            "%_curl_easy_getinfo_err_string",
            "%_curl_easy_getinfo_err_long",
            "%_curl_easy_getinfo_err_double",
            "%_curl_easy_getinfo_err_curl_slist",
            "dclk_prepare",
            "dclk_msg_freqchange",
            "(repr",
            "(oldFreq",
            "(newFreq",
            "(tail",
            "dclk_updateFreq",
            "(changeclock",
            "(thr",
            "*cgpu",
            "h*maxM",
            "d*bestM",
            "`*bestR",
            "@*rv",
            "dclk_gotNonces",
            "dclk_errorCount",
            "(portion",
            "dclk_preUpdate",
            "GNU C 4.6.3",
            "driver-bitforce.c",
            "/home/luke-jr/Projects/Education/Tonal/BitCoin/cgminer",
            "char",
            "size_t",
            "long long unsigned int",
            "ssize_t",
            "long long int",
            "ptrdiff_t",
            "short unsigned int",
            "long int",
            "__time64_t",
            "time_t",
            "unsigned int",
            "long unsigned int",
            "unsigned char",
            "timeval",
            "tv_sec",
            "tv_usec",
            "short int",
            "timespec",
            "tv_sec",
            "tv_nsec",
            "double",
            "float",
            "long double",
            "ptw32_handle_t",
            "pthread_t",
            "pthread_mutex_t",
            "pthread_mutex_t_",
            "pthread_cond_t",
            "pthread_cond_t_",
            "signed char",
            "uint8_t",
            "int16_t",
            "uint16_t",
            "uint32_t",
            "int64_t",
            "uint64_t",
            "_iobuf",
            "_ptr",
            "_cnt",
            "_base",
            "_flag",
            "_file",
            "_charbuf",
            "_bufsiz",
            "_tmpfname",
            "FILE",
            "DWORD",
            "UINT_PTR",
            "VARENUM",
            "VT_EMPTY",
            "VT_NULL",
            "VT_I2",
            "VT_I4",
            "VT_R4",
            "VT_R8",
            "VT_CY",
            "VT_DATE",
            "VT_BSTR",
            "VT_DISPATCH",
            "VT_ERROR",
            "VT_BOOL",
            "VT_VARIANT",
            "VT_UNKNOWN",
            "VT_DECIMAL",
            "VT_I1",
            "VT_UI1",
            "VT_UI2",
            "VT_UI4",
            "VT_I8",
            "VT_UI8",
            "VT_INT",
            "VT_UINT",
            "VT_VOID",
            "VT_HRESULT",
            "VT_PTR",
            "VT_SAFEARRAY",
            "VT_CARRAY",
            "VT_USERDEFINED",
            "VT_LPSTR",
            "VT_LPWSTR",
            "VT_RECORD",
            "VT_INT_PTR",
            "VT_UINT_PTR",
            "VT_FILETIME",
            "VT_BLOB",
            "VT_STREAM",
            "VT_STORAGE",
            "VT_STREAMED_OBJECT",
            "VT_STORED_OBJECT",
            "VT_BLOB_OBJECT",
            "VT_CF",
            "VT_CLSID",
            "VT_VERSIONED_STREAM",
            "VT_BSTR_BLOB",
            "VT_VECTOR",
            "VT_ARRAY",
            "VT_BYREF",
            "VT_RESERVED",
            "VT_ILLEGAL",
            "VT_ILLEGALMASKED",
            "VT_TYPEMASK",
            "SOCKET",
            "CURL",
            "curl_socket_t",
            "blkheight_t",
            "libblkmaker_hash_t",
            "blkhash_t",
            "txnhash_t",
            "blktime_t",
            "blktime_diff_t",
            "blknonce_t",
            "blktxn_t",
            "datasz",
            "hash",
            "dependcount",
            "depends",
            "required",
            "sigops",
            "_Bool",
            "blktmpl_longpoll_req",
            "GBT_CBTXN",
            "GBT_CBVALUE",
            "GBT_WORKID",
            "GBT_LONGPOLL",
            "GBT_PROPOSAL",
            "GBT_SERVICE",
            "BMM_CBAPPEND",
            "BMM_CBSET",
            "BMM_GENERATE",
            "BMM_TIMEINC",
            "BMM_TIMEDEC",
            "BMM_TXNADD",
            "BMM_PREVBLK",
            "BMM_VERFORCE",
            "BMM_VERDROP",
            "BMA_TXNHASH",
            "BMAb_COINBASE",
            "BMAb_TRUNCATE",
            "BMAs_COINBASE",
            "BMAs_MERKLE",
            "BMAs_TRUNCATE",
            "gbt_capabilities_t",
            "blkmutations_t",
            "version",
            "diffbits",
            "height",
            "prevblk",
            "sigoplimit",
            "sizelimit",
            "txncount",
            "txns",
            "cbtxn",
            "cbvalue",
            "_time_rcvd",
            "curtime",
            "auxcount",
            "auxnames",
            "auxdata",
            "workid",
            "submitold",
            "expires",
            "target",
            "mutations",
            "maxtime",
            "maxtimeoff",
            "mintime",
            "mintimeoff",
            "minnonce",
            "maxnonce",
            "_mrklroot",
            "next_dataid",
            "blktemplate_t",
            "list_head",
            "next",
            "prev",
            "hh_head",
            "expand_mult",
            "prev",
            "next",
            "hh_prev",
            "hh_next",
            "keylen",
            "hashv",
            "UT_hash_table",
            "buckets",
            "num_buckets",
            "log2_num_buckets",
            "num_items",
            "tail",
            "ideal_chain_maxlen",
            "nonideal_items",
            "ineff_expands",
            "noexpand",
            "signature",
            "LOG_ERR",
            "LOG_WARNING",
            "LOG_NOTICE",
            "LOG_INFO",
            "LOG_DEBUG",
            "notifier_t",
            "cl_uint",
            "cl_ulong",
            "iVddc",
            "iActivityPercent",
            "iCurrentPerformanceLevel",
            "iCurrentBusSpeed",
            "iCurrentBusLanes",
            "iMaximumBusLanes",
            "iTemperature",
            "iFlags",
            "iMinPercent",
            "iMaxPercent",
            "iMinRPM",
            "iMaxRPM",
            "iSpeedType",
            "iFanSpeed",
            "iFlags",
            "iMin",
            "iMax",
            "iStep",
            "iNumberOfPerformanceLevels",
            "iActivityReportingSupported",
            "iDiscretePerformanceLevels",
            "sEngineClock",
            "sMemoryClock",
            "sVddc",
            "iVddc",
            "aLevels",
            "libusb_device_descriptor",
            "bLength",
            "bDescriptorType",
            "bcdUSB",
            "bDeviceClass",
            "bDeviceSubClass",
            "bDeviceProtocol",
            "bMaxPacketSize0",
            "idVendor",
            "idProduct",
            "bcdDevice",
            "iManufacturer",
            "iProduct",
            "iSerialNumber",
            "bNumConfigurations",
            "dclk_data",
            "freqM",
            "freqMaxM",
            "freqMDefault",
            "minGoodSamples",
            "errorCount",
            "errorWeight",
            "errorRate",
            "maxErrorRate",
            "thr_info",
            "device_thread",
            "primary_thread",
            "cgpu",
            "last",
            "sick",
            "scanhash_working",
            "hashes_done",
            "tv_hashes_done",
            "tv_lastupdate",
            "pause",
            "getwork",
            "rolling",
            "prev_work",
            "next_work",
            "tv_morework",
            "results_work",
            "_job_transition_in_progress",
            "_proceed_with_new_job",
            "tv_results_jobstart",
            "tv_jobstart",
            "tv_poll",
            "notifier",
            "starting_next_work",
            "_max_nonce",
            "work_restart",
            "work_restart_notifier",
            "libztex_device",
            "mutex",
            "root",
            "fpgaNum",
            "descriptor",
            "hndl",
            "usbbus",
            "usbaddress",
            "snString",
            "productId",
            "fwVersion",
            "interfaceVersion",
            "interfaceCapabilities",
            "moduleReserved",
            "numNonces",
            "offsNonces",
            "freqM1",
            "bitFileName",
            "suspendSupported",
            "hashesPerClock",
            "extraSolutions",
            "dclk",
            "numberOfFpgas",
            "selectedFpga",
            "parallelConfigSupport",
            "repr",
            "alive",
            "LIFE_WELL",
            "LIFE_SICK",
            "LIFE_DEAD",
            "LIFE_NOSTART",
            "LIFE_INIT",
            "LIFE_WAIT",
            "gpu_adl",
            "lpTemperature",
            "iAdapterIndex",
            "lpAdapterID",
            "iBusNumber",
            "strAdapterName",
            "lpActivity",
            "lpOdParameters",
            "DefPerfLev",
            "lpFanSpeedInfo",
            "lpFanSpeedValue",
            "DefFanSpeedValue",
            "iVddc",
            "iPercentage",
            "autofan",
            "autoengine",
            "managed",
            "lastengine",
            "lasttemp",
            "targetfan",
            "overtemp",
            "minspeed",
            "maxspeed",
            "has_fanspeed",
            "twin",
            "device_api",
            "dname",
            "name",
            "api_detect",
            "get_dev_statline_before",
            "get_dev_statline_after",
            "reinit_device",
            "get_statline_before",
            "get_statline",
            "get_api_extra_device_detail",
            "get_api_extra_device_status",
            "get_api_stats",
            "get_stats",
            "identify_device",
            "set_device",
            "thread_prepare",
            "minerloop",
            "can_limit_work",
            "thread_init",
            "prepare_work",
            "scanhash",
            "hw_error",
            "thread_shutdown",
            "thread_enable",
            "poll",
            "job_prepare",
            "job_start",
            "job_get_results",
            "job_process_results",
            " cgpu_info",
            "cgminer_id",
            "device_line_id",
            "devtype",
            "device_id",
            "dev_repr",
            "dev_repr_ns",
            "name",
            "procs",
            "proc_id",
            "proc_repr",
            "proc_repr_ns",
            "device",
            "next_proc",
            "device_path",
            "device_file",
            "#h!1",
            "work_start_tv",
            "wait_ms",
            "sleep_ms",
            "avg_wait_f",
            "avg_wait_d",
            "nonces",
            "polling",
            "flash_led",
            "device_mutex",
            "deven",
            "rolling",
            "total_mhashes",
            "utility",
            "utility_diff1",
            "status",
            "init",
            "last_message_tv",
            "threads",
            "max_hashes",
            "kname",
            "mapped",
            "virtual_gpu",
            "virtual_adl",
            "intensity",
            "dynamic",
            "vwidth",
            "work_size",
            "kernel",
            "max_alloc",
            "opt_lg",
            "lookup_gap",
            "opt_tc",
            "thread_concurrency",
            "shaders",
            "tv_gpustart",
            "intervals",
            "temp",
            "cutofftemp",
            "targettemp",
            "has_adl",
            "gpu_engine",
            "min_engine",
            "gpu_fan",
            "min_fan",
            "gpu_memclock",
            "gpu_memdiff",
            "gpu_powertune",
            "gpu_vddc",
            "diff1",
            "last_share_pool",
            "last_share_pool_time",
            "device_last_well",
            "device_last_not_well",
            "device_not_well_reason",
            "reinit_backoff",
            "thread_fail_init_count",
            "thread_zero_hash_count",
            "thread_fail_queue_count",
            "dev_sick_idle_60_count",
            "dev_dead_idle_600_count",
            "dev_nostart_count",
            "dev_over_heat_count",
            "dev_thermal_cutoff_count",
            "dev_comms_error_count",
            "dev_throttle_count",
            "api_data",
            "type",
            "name",
            "data_was_malloc",
            "prev",
            "next",
            "target",
            "hash",
            "rolls",
            "thr_id",
            "pool",
            "tv_staged",
            "mined",
            "clone",
            "cloned",
            "longpoll",
            "stale",
            "mandatory",
            "block",
            "queued",
            "stratum",
            "job_id",
            "nonce2",
            "ntime",
            "sdiff",
            "work_difficulty",
            "tmpl",
            "tmpl_refcount",
            "dataid",
            "tv_getwork",
            "tv_getwork_reply",
            "tv_cloned",
            "tv_work_start",
            "tv_work_found",
            "getwork_mode",
            "list",
            "$dev_enable",
            "DEV_ENABLED",
            "DEV_DISABLED",
            "DEV_RECOVER",
            "DEV_RECOVER_ERR",
            "$cl_kernels",
            "KL_NONE",
            "KL_POCLBM",
            "KL_PHATK",
            "KL_DIAKGCN",
            "KL_DIABLO",
            "KL_SCRYPT",
            "dev_reason",
            "REASON_THREAD_FAIL_INIT",
            "REASON_THREAD_ZERO_HASH",
            "REASON_THREAD_FAIL_QUEUE",
            "REASON_DEV_SICK_IDLE_60",
            "REASON_DEV_DEAD_IDLE_600",
            "REASON_DEV_NOSTART",
            "REASON_DEV_OVER_HEAT",
            "REASON_DEV_THERMAL_CUTOFF",
            "REASON_DEV_COMMS_ERROR",
            "REASON_DEV_THROTTLE",
            "_get_start",
            "getwork_attempts",
            "getwork_wait_rolling",
            "hadrolltime",
            "canroll",
            "hadexpire",
            "min_diff",
            "max_diff",
            "last_diff",
            "min_diff_count",
            "max_diff_count",
            "times_sent",
            "bytes_sent",
            "net_bytes_sent",
            "times_received",
            "bytes_received",
            "net_bytes_received",
            "&device_ztex",
            "&device_fd",
            "&device_ft232r",
            "ft232r_device_handle",
            "thread_q",
            "frozen",
            "mutex",
            "cond",
            "ctx_a",
            "ctx_b",
            "ctx_c",
            "ctx_d",
            "ctx_e",
            "ctx_f",
            "ctx_g",
            "ctx_h",
            "cty_a",
            "cty_b",
            "cty_c",
            "cty_d",
            "cty_e",
            "cty_f",
            "cty_g",
            "cty_h",
            "merkle",
            "ntime",
            "nbits",
            "nonce",
            "fW15",
            "fW01r",
            "fcty_e",
            "fcty_e2",
            "PreVal4",
            "C1addK5",
            "W17_2",
            "PreVal4addT1",
            "T1substate0",
            "PreVal4_2",
            "PreVal0",
            "PreW18",
            "PreW19",
            "PreW31",
            "PreW32",
            "B1addK6",
            "PreVal0addK7",
            "W16addK16",
            "W17addK17",
            "zeroA",
            "zeroB",
            "oneA",
            "twoA",
            "threeA",
            "fourA",
            "fiveA",
            "sixA",
            "sevenA",
            "dev_blk_ctx",
            "$pool_enable",
            "POOL_DISABLED",
            "POOL_ENABLED",
            "POOL_REJECTING",
            "$pool_protocol",
            "PLP_NONE",
            "PLP_GETWORK",
            "PLP_GETBLOCKTEMPLATE",
            "stratum_work",
            "job_id",
            "prev_hash",
            "coinbase1",
            "coinbase2",
            "merkle",
            "bbversion",
            "nbit",
            "ntime",
            "clean",
            "cb1_len",
            "cb2_len",
            "cb_len",
            "header_len",
            "merkles",
            "diff",
            "transparency_probed",
            "transparency_time",
            "opaque",
            " pool",
            "pool_no",
            "prio",
            "seq_rejects",
            "seq_getfails",
            "solved",
            "diff1",
            "diff",
            "diff_stale",
            "submit_fail",
            "idle",
            "lagging",
            "probed",
            "force_rollntime",
            "enabled",
            "submit_old",
            "removed",
            "lp_started",
            "block_id",
            "proto",
            "hdr_path",
            "lp_url",
            "lp_id",
            "lp_proto",
            "lp_socket",
            "getwork_requested",
            "stale_shares",
            "discarded_work",
            "getfail_occasions",
            "remotefail_occasions",
            "tv_idle",
            "utility",
            "last_shares",
            "shares",
            "rpc_url",
            "rpc_userpass",
            "rpc_user",
            "rpc_pass",
            "rpc_proxy",
            "pool_lock",
            "submit_q",
            "getwork_q",
            "longpoll_thread",
            "submit_thread",
            "getwork_thread",
            "curls",
            "cr_cond",
            "curlring",
            "sws_waiting_on_curl",
            "last_share_time",
            "best_diff",
            "stratum_url",
            "stratum_port",
            "stratum_curl",
            "sock",
            "sockbuf",
            "sockbuf_size",
            "sockaddr_url",
            "nonce1",
            "n1_len",
            "nonce2",
            "n2size",
            "has_stratum",
            "stratum_active",
            "last_work_time",
            "stratum_auth",
            "stratum_notify",
            "swork",
            "stratum_thread",
            "stratum_lock",
            "last_work_lock",
            "last_work_copy",
            "submit_work_state",
            "$api_data_type",
            "API_ESCAPE",
            "API_STRING",
            "API_CONST",
            "API_INT",
            "API_UINT",
            "API_UINT32",
            "API_UINT64",
            "API_DOUBLE",
            "API_ELAPSED",
            "API_BOOL",
            "API_TIMEVAL",
            "API_TIME",
            "API_MHS",
            "API_MHTOTAL",
            "API_TEMP",
            "API_UTILITY",
            "API_FREQ",
            "API_VOLTS",
            "API_HS",
            "API_DIFF",
            "API_JSON",
            "bitforce_proto",
            "BFP_WORK",
            "BFP_RANGE",
            "BFP_QUEUE",
            "bitforce_data",
            "next_work_ob",
            "next_work_obs",
            "next_work_obsz",
            "next_work_cmd",
            "noncebuf",
            "poll_func",
            "proto",
            "queued",
            "(nanosleep",
            ")req",
            ")rem",
            "*tstart",
            "`*msecs",
            "l+\"D",
            "*tdone",
            "P*tnow",
            "@*tleft",
            "(sleep",
            ")secs",
            "*req",
            "`*rem",
            ",_curl_easy_setopt_err_long",
            ",_curl_easy_setopt_err_curl_off_t",
            ",_curl_easy_setopt_err_string",
            ",_curl_easy_setopt_err_write_callback",
            ",_curl_easy_setopt_err_read_cb",
            ",_curl_easy_setopt_err_ioctl_cb",
            ",_curl_easy_setopt_err_sockopt_cb",
            ",_curl_easy_setopt_err_opensocket_cb",
            ",_curl_easy_setopt_err_progress_cb",
            ",_curl_easy_setopt_err_debug_cb",
            ",_curl_easy_setopt_err_ssl_ctx_cb",
            ",_curl_easy_setopt_err_conv_cb",
            ",_curl_easy_setopt_err_seek_cb",
            ",_curl_easy_setopt_err_cb_data",
            ",_curl_easy_setopt_err_error_buffer",
            ",_curl_easy_setopt_err_FILE",
            ",_curl_easy_setopt_err_postfields",
            ",_curl_easy_setopt_err_curl_httpost",
            ",_curl_easy_setopt_err_curl_slist",
            ",_curl_easy_setopt_err_CURLSH",
            ",_curl_easy_getinfo_err_string",
            ",_curl_easy_getinfo_err_long",
            ",_curl_easy_getinfo_err_double",
            ",_curl_easy_getinfo_err_curl_slist",
            "-mutex_lock",
            ".lock",
            "-mutex_unlock",
            ".lock",
            "/mutex_trylock",
            ".lock",
            "-mutex_init",
            ".lock",
            "0BFgets",
            ")buf",
            "(BFwrite",
            ")buf",
            "(bitforce_send",
            ")buf",
            "*bufLeft",
            "X*realbuf",
            "*bufp",
            "@*rv",
            "0bitforce_cmd1",
            ")buf",
            ")bufsz",
            ")cmd",
            "0bitforce_cmd2",
            ")buf",
            ")bufsz",
            ")cmd",
            "()datasz",
            "(bitforce_detect_one",
            ")devpath",
            "}*pdevbuf_len",
            "*procs",
            "\\*sc",
            "4bitforce_detect_auto",
            ",bitforce_detect",
            "0bitforce_comm_error",
            ")thr",
            "X*fd",
            "0get_bitforce_statline_before",
            ")buf",
            "(bitforce_thread_prepare",
            ")thr",
            "d*now",
            "-bitforce_clear_buffer",
            "bitforce_init",
            "8devpath",
            "L8retries",
            "-bitforce_flash_led",
            "/bitforce_get_temp",
            "P+mD",
            "8temp",
            "-dbg_block_data",
            "/bitforce_job_prepare",
            ".thr",
            ".max_nonce",
            "\\8ob_ms",
            "P8ob_dt",
            "H9&D",
            "8ob_nonce",
            "-bitforce_change_mode",
            ".proto",
            "-bitforce_job_start",
            ".thr",
            "T8ob",
            "}8tv_now",
            "}:commerr",
            ":re_send",
            "-bitforce_job_get_results",
            ".thr",
            "8delay_time_ms",
            "8elapsed",
            "~8now",
            "8stale",
            ":commerr",
            ":noqr",
            ":out",
            "8cmd",
            "8cls",
            "8pmorebuf",
            "P8szleft",
            "H8sz",
            "-bitforce_process_result_nonces",
            ".thr",
            "`8nonce",
            "/bitforce_process_qresult_line_i",
            ".thr",
            ".buf",
            "-bitforce_process_qresult_line",
            ".thr",
            ".buf",
            "/next_line",
            "/bitforce_job_process_results",
            ".thr",
            ".stopping",
            "-bitforce_shutdown",
            ".thr",
            "-biforce_thread_enable",
            ".thr",
            "/bitforce_get_stats",
            "/bitforce_identify",
            "/bitforce_thread_init",
            ".thr",
            "X8wait",
            "H8sc",
            "/bitforce_api_stats",
            ".cgpu",
            "8root",
            "bitforce_poll",
            ".thr",
            "`8poll",
            "*protonames",
            "8_discardedbuf",
            "<opt_debug",
            "=opt_bfl_noncerange",
            "?bitforce_api",
            "GNU C 4.6.3",
            "driver-icarus.c",
            "/home/luke-jr/Projects/Education/Tonal/BitCoin/cgminer",
            "char",
            "size_t",
            "long long unsigned int",
            "ssize_t",
            "long long int",
            "ptrdiff_t",
            "short unsigned int",
            "long int",
            "__time64_t",
            "time_t",
            "unsigned int",
            "long unsigned int",
            "unsigned char",
            "float",
            "signed char",
            "short int",
            "UINT_PTR",
            "double",
            "long double",
            "VARENUM",
            "VT_EMPTY",
            "VT_NULL",
            "VT_I2",
            "VT_I4",
            "VT_R4",
            "VT_R8",
            "VT_CY",
            "VT_DATE",
            "VT_BSTR",
            "VT_DISPATCH",
            "VT_ERROR",
            "VT_BOOL",
            "VT_VARIANT",
            "VT_UNKNOWN",
            "VT_DECIMAL",
            "VT_I1",
            "VT_UI1",
            "VT_UI2",
            "VT_UI4",
            "VT_I8",
            "VT_UI8",
            "VT_INT",
            "VT_UINT",
            "VT_VOID",
            "VT_HRESULT",
            "VT_PTR",
            "VT_SAFEARRAY",
            "VT_CARRAY",
            "VT_USERDEFINED",
            "VT_LPSTR",
            "VT_LPWSTR",
            "VT_RECORD",
            "VT_INT_PTR",
            "VT_UINT_PTR",
            "VT_FILETIME",
            "VT_BLOB",
            "VT_STREAM",
            "VT_STORAGE",
            "VT_STREAMED_OBJECT",
            "VT_STORED_OBJECT",
            "VT_BLOB_OBJECT",
            "VT_CF",
            "VT_CLSID",
            "VT_VERSIONED_STREAM",
            "VT_BSTR_BLOB",
            "VT_VECTOR",
            "VT_ARRAY",
            "VT_BYREF",
            "VT_RESERVED",
            "VT_ILLEGAL",
            "VT_ILLEGALMASKED",
            "VT_TYPEMASK",
            "timeval",
            "tv_sec",
            "tv_usec",
            "SOCKET",
            "ptw32_handle_t",
            "pthread_t",
            "pthread_mutex_t",
            "pthread_mutex_t_",
            "pthread_cond_t",
            "pthread_cond_t_",
            "_iobuf",
            "_ptr",
            "_cnt",
            "_base",
            "_flag",
            "_file",
            "_charbuf",
            "_bufsiz",
            "_tmpfname",
            "FILE",
            "uint8_t",
            "int16_t",
            "uint16_t",
            "uint32_t",
            "int64_t",
            "uint64_t",
            "dclk_data",
            "freqM",
            "freqMaxM",
            "freqMDefault",
            "minGoodSamples",
            "errorCount",
            "errorWeight",
            "errorRate",
            "maxErrorRate",
            "dclk_change_clock_func_t",
            "_Bool",
            "thr_info",
            "device_thread",
            "primary_thread",
            "cgpu",
            "last",
            "sick",
            "scanhash_working",
            "hashes_done",
            "tv_hashes_done",
            "tv_lastupdate",
            "pause",
            "getwork",
            "rolling",
            "prev_work",
            "work",
            "next_work",
            "tv_morework",
            "results_work",
            "_job_transition_in_progress",
            "_proceed_with_new_job",
            "tv_results_jobstart",
            "tv_jobstart",
            "tv_poll",
            "notifier",
            "starting_next_work",
            "_max_nonce",
            "work_restart",
            "work_restart_notifier",
            "list_head",
            "next",
            "prev",
            "CURL",
            "curl_socket_t",
            "blkheight_t",
            "libblkmaker_hash_t",
            "blkhash_t",
            "txnhash_t",
            "blktime_t",
            "blktime_diff_t",
            "blknonce_t",
            "blktxn_t",
            "data",
            "datasz",
            "hash",
            "dependcount",
            "depends",
            "required",
            "sigops",
            "blktmpl_longpoll_req",
            "GBT_CBTXN",
            "GBT_CBVALUE",
            "GBT_WORKID",
            "GBT_LONGPOLL",
            "GBT_PROPOSAL",
            "GBT_SERVICE",
            "BMM_CBAPPEND",
            "BMM_CBSET",
            "BMM_GENERATE",
            "BMM_TIMEINC",
            "BMM_TIMEDEC",
            "BMM_TXNADD",
            "BMM_PREVBLK",
            "BMM_VERFORCE",
            "BMM_VERDROP",
            "BMA_TXNHASH",
            "BMAb_COINBASE",
            "BMAb_TRUNCATE",
            "BMAs_COINBASE",
            "BMAs_MERKLE",
            "BMAs_TRUNCATE",
            "gbt_capabilities_t",
            "blkmutations_t",
            "version",
            "diffbits",
            "height",
            "prevblk",
            "sigoplimit",
            "sizelimit",
            "txncount",
            "txns",
            "cbtxn",
            "cbvalue",
            "_time_rcvd",
            "curtime",
            "auxcount",
            "auxnames",
            "auxdata",
            "workid",
            "submitold",
            "expires",
            "target",
            "mutations",
            "maxtime",
            "maxtimeoff",
            "mintime",
            "mintimeoff",
            "minnonce",
            "maxnonce",
            "_mrklroot",
            "next_dataid",
            "blktemplate_t",
            "hh_head",
            "count",
            "expand_mult",
            "prev",
            "next",
            "hh_prev",
            "hh_next",
            "keylen",
            "hashv",
            "UT_hash_table",
            "buckets",
            "num_buckets",
            "log2_num_buckets",
            "num_items",
            "tail",
            "ideal_chain_maxlen",
            "nonideal_items",
            "ineff_expands",
            "noexpand",
            "signature",
            "LOG_ERR",
            "LOG_WARNING",
            "LOG_NOTICE",
            "LOG_INFO",
            "LOG_DEBUG",
            "notifier_t",
            "cl_uint",
            "cl_ulong",
            "iVddc",
            "iActivityPercent",
            "iCurrentPerformanceLevel",
            "iCurrentBusSpeed",
            "iCurrentBusLanes",
            "iMaximumBusLanes",
            "iTemperature",
            "iFlags",
            "iMinPercent",
            "iMaxPercent",
            "iMinRPM",
            "iMaxRPM",
            "iSpeedType",
            "iFanSpeed",
            "iFlags",
            "iMin",
            "iMax",
            "iStep",
            "iNumberOfPerformanceLevels",
            "iActivityReportingSupported",
            "iDiscretePerformanceLevels",
            "sEngineClock",
            "sMemoryClock",
            "sVddc",
            "iVddc",
            "aLevels",
            "libusb_device_descriptor",
            "bLength",
            "bDescriptorType",
            "bcdUSB",
            "bDeviceClass",
            "bDeviceSubClass",
            "bDeviceProtocol",
            "bMaxPacketSize0",
            "idVendor",
            "idProduct",
            "bcdDevice",
            "iManufacturer",
            "iProduct",
            "iSerialNumber",
            "bNumConfigurations",
            "libztex_device",
            "mutex",
            "root",
            "fpgaNum",
            "descriptor",
            "hndl",
            "usbbus",
            "usbaddress",
            "snString",
            "productId",
            "fwVersion",
            "interfaceVersion",
            "interfaceCapabilities",
            "moduleReserved",
            "numNonces",
            "offsNonces",
            "freqM1",
            "bitFileName",
            "suspendSupported",
            "hashesPerClock",
            "extraSolutions",
            "dclk",
            "numberOfFpgas",
            "selectedFpga",
            "parallelConfigSupport",
            "repr",
            "alive",
            "LIFE_WELL",
            "LIFE_SICK",
            "LIFE_DEAD",
            "LIFE_NOSTART",
            "LIFE_INIT",
            "LIFE_WAIT",
            "gpu_adl",
            "lpTemperature",
            "iAdapterIndex",
            "lpAdapterID",
            "iBusNumber",
            "strAdapterName",
            "lpActivity",
            "lpOdParameters",
            "DefPerfLev",
            "lpFanSpeedInfo",
            "lpFanSpeedValue",
            "DefFanSpeedValue",
            "iVddc",
            "iPercentage",
            "autofan",
            "autoengine",
            "managed",
            "lastengine",
            "lasttemp",
            "targetfan",
            "overtemp",
            "minspeed",
            "maxspeed",
            "has_fanspeed",
            "twin",
            "device_api",
            "dname",
            "name",
            "api_detect",
            "get_dev_statline_before",
            "get_dev_statline_after",
            "reinit_device",
            "get_statline_before",
            "get_statline",
            "get_api_extra_device_detail",
            "get_api_extra_device_status",
            "get_api_stats",
            "get_stats",
            "identify_device",
            "set_device",
            "thread_prepare",
            "minerloop",
            "can_limit_work",
            "thread_init",
            "prepare_work",
            "scanhash",
            "hw_error",
            "thread_shutdown",
            "thread_enable",
            "poll",
            "job_prepare",
            "job_start",
            "job_get_results",
            "job_process_results",
            "!cgpu_info",
            "cgminer_id",
            "device_line_id",
            "devtype",
            "device_id",
            "dev_repr",
            "dev_repr_ns",
            "name",
            "procs",
            "proc_id",
            "proc_repr",
            "proc_repr_ns",
            "device",
            "next_proc",
            "device_path",
            "device_file",
            "#h\"1",
            "work_start_tv",
            "wait_ms",
            "sleep_ms",
            "avg_wait_f",
            "avg_wait_d",
            "nonces",
            "polling",
            "flash_led",
            "device_mutex",
            "deven",
            "hw_errors",
            "rolling",
            "total_mhashes",
            "utility",
            "utility_diff1",
            "status",
            "init",
            "last_message_tv",
            "threads",
            "max_hashes",
            "kname",
            "mapped",
            "virtual_gpu",
            "virtual_adl",
            "intensity",
            "dynamic",
            "vwidth",
            "work_size",
            "kernel",
            "max_alloc",
            "opt_lg",
            "lookup_gap",
            "opt_tc",
            "thread_concurrency",
            "shaders",
            "tv_gpustart",
            "intervals",
            "temp",
            "cutofftemp",
            "targettemp",
            "has_adl",
            "gpu_engine",
            "min_engine",
            "gpu_fan",
            "min_fan",
            "gpu_memclock",
            "gpu_memdiff",
            "gpu_powertune",
            "gpu_vddc",
            "diff1",
            "last_share_pool",
            "last_share_pool_time",
            "device_last_well",
            "device_last_not_well",
            "device_not_well_reason",
            "reinit_backoff",
            "thread_fail_init_count",
            "thread_zero_hash_count",
            "thread_fail_queue_count",
            "dev_sick_idle_60_count",
            "dev_dead_idle_600_count",
            "dev_nostart_count",
            "dev_over_heat_count",
            "dev_thermal_cutoff_count",
            "dev_comms_error_count",
            "dev_throttle_count",
            "api_data",
            "type",
            "name",
            "data",
            "data_was_malloc",
            "prev",
            "next",
            "!work",
            "data",
            "midstate",
            "target",
            "hash",
            "rolls",
            "thr_id",
            "pool",
            "tv_staged",
            "mined",
            "clone",
            "cloned",
            "longpoll",
            "stale",
            "mandatory",
            "block",
            "queued",
            "stratum",
            "job_id",
            "nonce2",
            "ntime",
            "sdiff",
            "work_difficulty",
            "tmpl",
            "tmpl_refcount",
            "dataid",
            "tv_getwork",
            "tv_getwork_reply",
            "tv_cloned",
            "tv_work_start",
            "tv_work_found",
            "getwork_mode",
            "list",
            "#dev_enable",
            "DEV_ENABLED",
            "DEV_DISABLED",
            "DEV_RECOVER",
            "DEV_RECOVER_ERR",
            "#cl_kernels",
            "KL_NONE",
            "KL_POCLBM",
            "KL_PHATK",
            "KL_DIAKGCN",
            "KL_DIABLO",
            "KL_SCRYPT",
            "dev_reason",
            "REASON_THREAD_FAIL_INIT",
            "REASON_THREAD_ZERO_HASH",
            "REASON_THREAD_FAIL_QUEUE",
            "REASON_DEV_SICK_IDLE_60",
            "REASON_DEV_DEAD_IDLE_600",
            "REASON_DEV_NOSTART",
            "REASON_DEV_OVER_HEAT",
            "REASON_DEV_THERMAL_CUTOFF",
            "REASON_DEV_COMMS_ERROR",
            "REASON_DEV_THROTTLE",
            "_get_start",
            "getwork_attempts",
            "getwork_wait_rolling",
            "hadrolltime",
            "canroll",
            "hadexpire",
            "min_diff",
            "max_diff",
            "last_diff",
            "min_diff_count",
            "max_diff_count",
            "times_sent",
            "bytes_sent",
            "net_bytes_sent",
            "times_received",
            "bytes_received",
            "net_bytes_received",
            "%device_ztex",
            "%device_fd",
            "%device_ft232r",
            "ft232r_device_handle",
            "thread_q",
            "frozen",
            "mutex",
            "cond",
            "ctx_a",
            "ctx_b",
            "ctx_c",
            "ctx_d",
            "ctx_e",
            "ctx_f",
            "ctx_g",
            "ctx_h",
            "cty_a",
            "cty_b",
            "cty_c",
            "cty_d",
            "cty_e",
            "cty_f",
            "cty_g",
            "cty_h",
            "merkle",
            "ntime",
            "nbits",
            "nonce",
            "fW15",
            "fW01r",
            "fcty_e",
            "fcty_e2",
            "PreVal4",
            "C1addK5",
            "W17_2",
            "PreVal4addT1",
            "T1substate0",
            "PreVal4_2",
            "PreVal0",
            "PreW18",
            "PreW19",
            "PreW31",
            "PreW32",
            "B1addK6",
            "PreVal0addK7",
            "W16addK16",
            "W17addK17",
            "zeroA",
            "zeroB",
            "oneA",
            "twoA",
            "threeA",
            "fourA",
            "fiveA",
            "sixA",
            "sevenA",
            "work",
            "dev_blk_ctx",
            "#pool_enable",
            "POOL_DISABLED",
            "POOL_ENABLED",
            "POOL_REJECTING",
            "#pool_protocol",
            "PLP_NONE",
            "PLP_GETWORK",
            "PLP_GETBLOCKTEMPLATE",
            "stratum_work",
            "job_id",
            "prev_hash",
            "coinbase1",
            "coinbase2",
            "merkle",
            "bbversion",
            "nbit",
            "ntime",
            "clean",
            "cb1_len",
            "cb2_len",
            "cb_len",
            "header_len",
            "merkles",
            "diff",
            "transparency_probed",
            "transparency_time",
            "opaque",
            "!pool",
            "pool_no",
            "prio",
            "seq_rejects",
            "seq_getfails",
            "solved",
            "diff1",
            "diff",
            "diff_stale",
            "submit_fail",
            "idle",
            "lagging",
            "probed",
            "force_rollntime",
            "enabled",
            "submit_old",
            "removed",
            "lp_started",
            "block_id",
            "proto",
            "hdr_path",
            "lp_url",
            "lp_id",
            "lp_proto",
            "lp_socket",
            "getwork_requested",
            "stale_shares",
            "discarded_work",
            "getfail_occasions",
            "remotefail_occasions",
            "tv_idle",
            "utility",
            "last_shares",
            "shares",
            "rpc_url",
            "rpc_userpass",
            "rpc_user",
            "rpc_pass",
            "rpc_proxy",
            "pool_lock",
            "submit_q",
            "getwork_q",
            "longpoll_thread",
            "submit_thread",
            "getwork_thread",
            "curls",
            "cr_cond",
            "curlring",
            "sws_waiting_on_curl",
            "last_share_time",
            "best_diff",
            "stratum_url",
            "stratum_port",
            "stratum_curl",
            "sock",
            "sockbuf",
            "sockbuf_size",
            "sockaddr_url",
            "nonce1",
            "n1_len",
            "nonce2",
            "n2size",
            "has_stratum",
            "stratum_active",
            "last_work_time",
            "stratum_auth",
            "stratum_notify",
            "swork",
            "stratum_thread",
            "stratum_lock",
            "last_work_lock",
            "last_work_copy",
            "submit_work_state",
            "#test_nonce2_result",
            "TNR_GOOD",
            "TNR_HIGH",
            "TNR_BAD",
            "#api_data_type",
            "API_ESCAPE",
            "API_STRING",
            "API_CONST",
            "API_INT",
            "API_UINT",
            "API_UINT32",
            "API_UINT64",
            "API_DOUBLE",
            "API_ELAPSED",
            "API_BOOL",
            "API_TIMEVAL",
            "API_TIME",
            "API_MHS",
            "API_MHTOTAL",
            "API_TEMP",
            "API_UTILITY",
            "API_FREQ",
            "API_VOLTS",
            "API_HS",
            "API_DIFF",
            "API_JSON",
            "ICARUS_HISTORY",
            "finish",
            "sumXiTi",
            "sumXi",
            "sumTi",
            "sumXi2",
            "hash_count_min",
            "hash_count_max",
            "MODE_DEFAULT",
            "MODE_SHORT",
            "MODE_LONG",
            "MODE_VALUE",
            "ICARUS_INFO",
            "golden_hashes",
            "golden_tv",
            "history",
            "min_data_count",
            "do_icarus_timing",
            "do_default_detection",
            "count",
            "history_count",
            "history_time",
            "baud",
            "quirk_reopen",
            "user_set",
            "dclk_change_clock_func",
            "dclk",
            "icarus_state",
            "firstrun",
            "tv_workstart",
            "tv_workfinish",
            "last_work",
            "changework",
            "'_curl_easy_setopt_err_long",
            "'_curl_easy_setopt_err_curl_off_t",
            "'_curl_easy_setopt_err_string",
            "'_curl_easy_setopt_err_write_callback",
            "'_curl_easy_setopt_err_read_cb",
            "'_curl_easy_setopt_err_ioctl_cb",
            "'_curl_easy_setopt_err_sockopt_cb",
            "'_curl_easy_setopt_err_opensocket_cb",
            "'_curl_easy_setopt_err_progress_cb",
            "'_curl_easy_setopt_err_debug_cb",
            "'_curl_easy_setopt_err_ssl_ctx_cb",
            "'_curl_easy_setopt_err_conv_cb",
            "'_curl_easy_setopt_err_seek_cb",
            "'_curl_easy_setopt_err_cb_data",
            "'_curl_easy_setopt_err_error_buffer",
            "'_curl_easy_setopt_err_FILE",
            "'_curl_easy_setopt_err_postfields",
            "'_curl_easy_setopt_err_curl_httpost",
            "'_curl_easy_setopt_err_curl_slist",
            "'_curl_easy_setopt_err_CURLSH",
            "'_curl_easy_getinfo_err_string",
            "'_curl_easy_getinfo_err_long",
            "'_curl_easy_getinfo_err_double",
            "'_curl_easy_getinfo_err_curl_slist",
            "(rev",
            "icarus_gets",
            ")buf",
            ")thr",
            " *ret",
            "X*rc",
            "l*epollfd",
            "T*read_amount",
            "h*first",
            "-icarus_write",
            ".buf",
            ".bufLen",
            "/ret",
            "0do_icarus_close",
            ".thr",
            "-timing_mode_str",
            "0set_timing_mode",
            "/buf",
            "{/ptr",
            "H/comma",
            "/max",
            "/def_read_count",
            "-mask",
            "/err_buf",
            "0get_options",
            "/baud",
            "/err_buf",
            "{/buf",
            "w/ptr",
            "X/comma",
            "/colon",
            "P/colon2",
            "H/max",
            "/tmp",
            "icarus_detect_custom",
            ".devpath",
            ".api",
            "H/golden_ob",
            "~/golden_nonce",
            "}/golden_nonce_val",
            "}/nonce_hex",
            "@/baud",
            "/claimedby",
            "-icarus_detect_one",
            ".devpath",
            "6icarus_detect",
            "-icarus_prepare",
            ".thr",
            "`/now",
            "@/fd",
            "-icarus_reopen",
            ".fdp",
            "-icarus_start_work",
            ".thr",
            "`/fd",
            "\\/ret",
            "X/ob_hex",
            "-icarus_scanhash",
            ".thr",
            ".work",
            ".max_nonce",
            "~/ret",
            "}/nonce",
            "}/hash_count",
            "}/elapsed",
            "}/tv_history_start",
            "}/tv_history_finish",
            "}/Ti",
            "~/Xi",
            "~/curr_hw_errors",
            "X/was_hw_error",
            "/history0",
            "~/history",
            "~/count",
            "T/Hs",
            "~/estimate_hashes",
            "/qsec",
            "/MHs",
            "/old_repr_len",
            "/old_repr",
            "-icarus_api_stats",
            ".cgpu",
            "/root",
            "0icarus_shutdown",
            ".thr",
            "*sizeof_uint32_t_must_be_4",
            "*history_sec",
            "*MODE_DEFAULT_STR",
            "*MODE_SHORT_STR",
            "*MODE_LONG_STR",
            "*MODE_VALUE_STR",
            "*MODE_UNKNOWN_STR",
            "*option_offset",
            "9opt_debug",
            ":opt_icarus_options",
            ":opt_icarus_timing",
            ";icarus_api",
            "GNU C 4.6.3",
            "driver-cairnsmore.c",
            "/home/luke-jr/Projects/Education/Tonal/BitCoin/cgminer",
            "char",
            "size_t",
            "long long unsigned int",
            "long long int",
            "ptrdiff_t",
            "short unsigned int",
            "long int",
            "__time64_t",
            "time_t",
            "unsigned int",
            "long unsigned int",
            "unsigned char",
            "DWORD",
            "float",
            "signed char",
            "short int",
            "UINT_PTR",
            "double",
            "long double",
            "\tVARENUM",
            "VT_EMPTY",
            "VT_NULL",
            "VT_I2",
            "VT_I4",
            "VT_R4",
            "VT_R8",
            "VT_CY",
            "VT_DATE",
            "VT_BSTR",
            "VT_DISPATCH",
            "VT_ERROR",
            "VT_BOOL",
            "VT_VARIANT",
            "VT_UNKNOWN",
            "VT_DECIMAL",
            "VT_I1",
            "VT_UI1",
            "VT_UI2",
            "VT_UI4",
            "VT_I8",
            "VT_UI8",
            "VT_INT",
            "VT_UINT",
            "VT_VOID",
            "VT_HRESULT",
            "VT_PTR",
            "VT_SAFEARRAY",
            "VT_CARRAY",
            "VT_USERDEFINED",
            "VT_LPSTR",
            "VT_LPWSTR",
            "VT_RECORD",
            "VT_INT_PTR",
            "VT_UINT_PTR",
            "VT_FILETIME",
            "VT_BLOB",
            "VT_STREAM",
            "VT_STORAGE",
            "VT_STREAMED_OBJECT",
            "VT_STORED_OBJECT",
            "VT_BLOB_OBJECT",
            "VT_CF",
            "VT_CLSID",
            "VT_VERSIONED_STREAM",
            "VT_BSTR_BLOB",
            "VT_VECTOR",
            "VT_ARRAY",
            "VT_BYREF",
            "VT_RESERVED",
            "VT_ILLEGAL",
            "VT_ILLEGALMASKED",
            "VT_TYPEMASK",
            "timeval",
            "tv_sec",
            "tv_usec",
            "SOCKET",
            "timespec",
            "tv_sec",
            "tv_nsec",
            "ptw32_handle_t",
            "pthread_t",
            "pthread_mutex_t",
            "pthread_mutex_t_",
            "pthread_cond_t",
            "pthread_cond_t_",
            "uint8_t",
            "int16_t",
            "uint16_t",
            "uint32_t",
            "int64_t",
            "uint64_t",
            "dclk_data",
            "freqM",
            "freqMaxM",
            "freqMDefault",
            "minGoodSamples",
            "errorCount",
            "errorWeight",
            "errorRate",
            "maxErrorRate",
            "dclk_change_clock_func_t",
            "_Bool",
            "thr_info",
            "device_thread",
            "primary_thread",
            "cgpu",
            "last",
            "sick",
            "scanhash_working",
            "hashes_done",
            "tv_hashes_done",
            "tv_lastupdate",
            "pause",
            "getwork",
            "rolling",
            "prev_work",
            "work",
            "next_work",
            "tv_morework",
            "results_work",
            "_job_transition_in_progress",
            "_proceed_with_new_job",
            "tv_results_jobstart",
            "tv_jobstart",
            "tv_poll",
            "notifier",
            "starting_next_work",
            "_max_nonce",
            "work_restart",
            "work_restart_notifier",
            "_iobuf",
            "_ptr",
            "_cnt",
            "_base",
            "_flag",
            "_file",
            "_charbuf",
            "_bufsiz",
            "_tmpfname",
            "FILE",
            "CURL",
            "curl_socket_t",
            "blkheight_t",
            "libblkmaker_hash_t",
            "blkhash_t",
            "txnhash_t",
            "blktime_t",
            "blktime_diff_t",
            "blknonce_t",
            "blktxn_t",
            "data",
            "datasz",
            "hash",
            "dependcount",
            "depends",
            "required",
            "sigops",
            "blktmpl_longpoll_req",
            "GBT_CBTXN",
            "GBT_CBVALUE",
            "GBT_WORKID",
            "GBT_LONGPOLL",
            "GBT_PROPOSAL",
            "GBT_SERVICE",
            "BMM_CBAPPEND",
            "BMM_CBSET",
            "BMM_GENERATE",
            "BMM_TIMEINC",
            "BMM_TIMEDEC",
            "BMM_TXNADD",
            "BMM_PREVBLK",
            "BMM_VERFORCE",
            "BMM_VERDROP",
            "BMA_TXNHASH",
            "BMAb_COINBASE",
            "BMAb_TRUNCATE",
            "BMAs_COINBASE",
            "BMAs_MERKLE",
            "BMAs_TRUNCATE",
            "gbt_capabilities_t",
            "blkmutations_t",
            "version",
            "diffbits",
            "height",
            "prevblk",
            "sigoplimit",
            "sizelimit",
            "txncount",
            "txns",
            "cbtxn",
            "cbvalue",
            "_time_rcvd",
            "curtime",
            "auxcount",
            "auxnames",
            "auxdata",
            "workid",
            "submitold",
            "expires",
            "target",
            "mutations",
            "maxtime",
            "maxtimeoff",
            "mintime",
            "mintimeoff",
            "minnonce",
            "maxnonce",
            "_mrklroot",
            "next_dataid",
            "blktemplate_t",
            "list_head",
            "next",
            "prev",
            "hh_head",
            "count",
            "expand_mult",
            "prev",
            "next",
            "hh_prev",
            "hh_next",
            "keylen",
            "hashv",
            "UT_hash_table",
            "buckets",
            "num_buckets",
            "log2_num_buckets",
            "num_items",
            "tail",
            "ideal_chain_maxlen",
            "nonideal_items",
            "ineff_expands",
            "noexpand",
            "signature",
            "LOG_ERR",
            "LOG_WARNING",
            "LOG_NOTICE",
            "LOG_INFO",
            "LOG_DEBUG",
            "notifier_t",
            "cl_uint",
            "cl_ulong",
            "iVddc",
            "iActivityPercent",
            "iCurrentPerformanceLevel",
            "iCurrentBusSpeed",
            "iCurrentBusLanes",
            "iMaximumBusLanes",
            "iTemperature",
            "iFlags",
            "iMinPercent",
            "iMaxPercent",
            "iMinRPM",
            "iMaxRPM",
            "iSpeedType",
            "iFanSpeed",
            "iFlags",
            "iMin",
            "iMax",
            "iStep",
            "iNumberOfPerformanceLevels",
            "iActivityReportingSupported",
            "iDiscretePerformanceLevels",
            "sEngineClock",
            "sMemoryClock",
            "sVddc",
            "iVddc",
            "aLevels",
            "libusb_device_descriptor",
            "bLength",
            "bDescriptorType",
            "bcdUSB",
            "bDeviceClass",
            "bDeviceSubClass",
            "bDeviceProtocol",
            "bMaxPacketSize0",
            "idVendor",
            "idProduct",
            "bcdDevice",
            "iManufacturer",
            "iProduct",
            "iSerialNumber",
            "bNumConfigurations",
            "libztex_device",
            "mutex",
            "root",
            "fpgaNum",
            "descriptor",
            "hndl",
            "usbbus",
            "usbaddress",
            "snString",
            "productId",
            "fwVersion",
            "interfaceVersion",
            "interfaceCapabilities",
            "moduleReserved",
            "numNonces",
            "offsNonces",
            "freqM1",
            "bitFileName",
            "suspendSupported",
            "hashesPerClock",
            "extraSolutions",
            "dclk",
            "numberOfFpgas",
            "selectedFpga",
            "parallelConfigSupport",
            "repr",
            "\talive",
            "LIFE_WELL",
            "LIFE_SICK",
            "LIFE_DEAD",
            "LIFE_NOSTART",
            "LIFE_INIT",
            "LIFE_WAIT",
            "gpu_adl",
            "lpTemperature",
            "iAdapterIndex",
            "lpAdapterID",
            "iBusNumber",
            "strAdapterName",
            "lpActivity",
            "lpOdParameters",
            "DefPerfLev",
            "lpFanSpeedInfo",
            "lpFanSpeedValue",
            "DefFanSpeedValue",
            "iVddc",
            "iPercentage",
            "autofan",
            "autoengine",
            "managed",
            "lastengine",
            "lasttemp",
            "targetfan",
            "overtemp",
            "minspeed",
            "maxspeed",
            "has_fanspeed",
            "twin",
            "device_api",
            "dname",
            "name",
            "api_detect",
            "get_dev_statline_before",
            "get_dev_statline_after",
            "reinit_device",
            "get_statline_before",
            "get_statline",
            "get_api_extra_device_detail",
            "get_api_extra_device_status",
            "get_api_stats",
            "get_stats",
            "identify_device",
            "set_device",
            "thread_prepare",
            "minerloop",
            "can_limit_work",
            "thread_init",
            "prepare_work",
            "scanhash",
            "hw_error",
            "thread_shutdown",
            "thread_enable",
            "poll",
            "job_prepare",
            "job_start",
            "job_get_results",
            "job_process_results",
            " cgpu_info",
            "cgminer_id",
            "device_line_id",
            "devtype",
            "device_id",
            "dev_repr",
            "dev_repr_ns",
            "name",
            "procs",
            "proc_id",
            "proc_repr",
            "proc_repr_ns",
            "device",
            "next_proc",
            "device_path",
            "device_file",
            "#h!1",
            "work_start_tv",
            "wait_ms",
            "sleep_ms",
            "avg_wait_f",
            "avg_wait_d",
            "nonces",
            "polling",
            "flash_led",
            "device_mutex",
            "deven",
            "hw_errors",
            "rolling",
            "total_mhashes",
            "utility",
            "utility_diff1",
            "status",
            "init",
            "last_message_tv",
            "threads",
            "max_hashes",
            "kname",
            "mapped",
            "virtual_gpu",
            "virtual_adl",
            "intensity",
            "dynamic",
            "vwidth",
            "work_size",
            "kernel",
            "max_alloc",
            "opt_lg",
            "lookup_gap",
            "opt_tc",
            "thread_concurrency",
            "shaders",
            "tv_gpustart",
            "intervals",
            "temp",
            "cutofftemp",
            "targettemp",
            "has_adl",
            "gpu_engine",
            "min_engine",
            "gpu_fan",
            "min_fan",
            "gpu_memclock",
            "gpu_memdiff",
            "gpu_powertune",
            "gpu_vddc",
            "diff1",
            "last_share_pool",
            "last_share_pool_time",
            "device_last_well",
            "device_last_not_well",
            "device_not_well_reason",
            "reinit_backoff",
            "thread_fail_init_count",
            "thread_zero_hash_count",
            "thread_fail_queue_count",
            "dev_sick_idle_60_count",
            "dev_dead_idle_600_count",
            "dev_nostart_count",
            "dev_over_heat_count",
            "dev_thermal_cutoff_count",
            "dev_comms_error_count",
            "dev_throttle_count",
            "api_data",
            "type",
            "name",
            "data",
            "data_was_malloc",
            "prev",
            "next",
            " work",
            "data",
            "midstate",
            "target",
            "hash",
            "rolls",
            "thr_id",
            "pool",
            "tv_staged",
            "mined",
            "clone",
            "cloned",
            "longpoll",
            "stale",
            "mandatory",
            "block",
            "queued",
            "stratum",
            "job_id",
            "nonce2",
            "ntime",
            "sdiff",
            "work_difficulty",
            "tmpl",
            "tmpl_refcount",
            "dataid",
            "tv_getwork",
            "tv_getwork_reply",
            "tv_cloned",
            "tv_work_start",
            "tv_work_found",
            "getwork_mode",
            "list",
            "\"dev_enable",
            "DEV_ENABLED",
            "DEV_DISABLED",
            "DEV_RECOVER",
            "DEV_RECOVER_ERR",
            "\"cl_kernels",
            "KL_NONE",
            "KL_POCLBM",
            "KL_PHATK",
            "KL_DIAKGCN",
            "KL_DIABLO",
            "KL_SCRYPT",
            "\tdev_reason",
            "REASON_THREAD_FAIL_INIT",
            "REASON_THREAD_ZERO_HASH",
            "REASON_THREAD_FAIL_QUEUE",
            "REASON_DEV_SICK_IDLE_60",
            "REASON_DEV_DEAD_IDLE_600",
            "REASON_DEV_NOSTART",
            "REASON_DEV_OVER_HEAT",
            "REASON_DEV_THERMAL_CUTOFF",
            "REASON_DEV_COMMS_ERROR",
            "REASON_DEV_THROTTLE",
            "_get_start",
            "getwork_attempts",
            "getwork_wait_rolling",
            "hadrolltime",
            "canroll",
            "hadexpire",
            "min_diff",
            "max_diff",
            "last_diff",
            "min_diff_count",
            "max_diff_count",
            "times_sent",
            "bytes_sent",
            "net_bytes_sent",
            "times_received",
            "bytes_received",
            "net_bytes_received",
            "$device_ztex",
            "$device_fd",
            "$device_ft232r",
            "ft232r_device_handle",
            "thread_q",
            "frozen",
            "mutex",
            "cond",
            "ctx_a",
            "ctx_b",
            "ctx_c",
            "ctx_d",
            "ctx_e",
            "ctx_f",
            "ctx_g",
            "ctx_h",
            "cty_a",
            "cty_b",
            "cty_c",
            "cty_d",
            "cty_e",
            "cty_f",
            "cty_g",
            "cty_h",
            "merkle",
            "ntime",
            "nbits",
            "nonce",
            "fW15",
            "fW01r",
            "fcty_e",
            "fcty_e2",
            "PreVal4",
            "C1addK5",
            "W17_2",
            "PreVal4addT1",
            "T1substate0",
            "PreVal4_2",
            "PreVal0",
            "PreW18",
            "PreW19",
            "PreW31",
            "PreW32",
            "B1addK6",
            "PreVal0addK7",
            "W16addK16",
            "W17addK17",
            "zeroA",
            "zeroB",
            "oneA",
            "twoA",
            "threeA",
            "fourA",
            "fiveA",
            "sixA",
            "sevenA",
            "work",
            "dev_blk_ctx",
            "\"pool_enable",
            "POOL_DISABLED",
            "POOL_ENABLED",
            "POOL_REJECTING",
            "\"pool_protocol",
            "PLP_NONE",
            "PLP_GETWORK",
            "PLP_GETBLOCKTEMPLATE",
            "stratum_work",
            "job_id",
            "prev_hash",
            "coinbase1",
            "coinbase2",
            "merkle",
            "bbversion",
            "nbit",
            "ntime",
            "clean",
            "cb1_len",
            "cb2_len",
            "cb_len",
            "header_len",
            "merkles",
            "diff",
            "transparency_probed",
            "transparency_time",
            "opaque",
            " pool",
            "pool_no",
            "prio",
            "seq_rejects",
            "seq_getfails",
            "solved",
            "diff1",
            "diff",
            "diff_stale",
            "submit_fail",
            "idle",
            "lagging",
            "probed",
            "force_rollntime",
            "enabled",
            "submit_old",
            "removed",
            "lp_started",
            "block_id",
            "proto",
            "hdr_path",
            "lp_url",
            "lp_id",
            "lp_proto",
            "lp_socket",
            "getwork_requested",
            "stale_shares",
            "discarded_work",
            "getfail_occasions",
            "remotefail_occasions",
            "tv_idle",
            "utility",
            "last_shares",
            "shares",
            "rpc_url",
            "rpc_userpass",
            "rpc_user",
            "rpc_pass",
            "rpc_proxy",
            "pool_lock",
            "submit_q",
            "getwork_q",
            "longpoll_thread",
            "submit_thread",
            "getwork_thread",
            "curls",
            "cr_cond",
            "curlring",
            "sws_waiting_on_curl",
            "last_share_time",
            "best_diff",
            "stratum_url",
            "stratum_port",
            "stratum_curl",
            "sock",
            "sockbuf",
            "sockbuf_size",
            "sockaddr_url",
            "nonce1",
            "n1_len",
            "nonce2",
            "n2size",
            "has_stratum",
            "stratum_active",
            "last_work_time",
            "stratum_auth",
            "stratum_notify",
            "swork",
            "stratum_thread",
            "stratum_lock",
            "last_work_lock",
            "last_work_copy",
            "submit_work_state",
            "\"api_data_type",
            "API_ESCAPE",
            "API_STRING",
            "API_CONST",
            "API_INT",
            "API_UINT",
            "API_UINT32",
            "API_UINT64",
            "API_DOUBLE",
            "API_ELAPSED",
            "API_BOOL",
            "API_TIMEVAL",
            "API_TIME",
            "API_MHS",
            "API_MHTOTAL",
            "API_TEMP",
            "API_UTILITY",
            "API_FREQ",
            "API_VOLTS",
            "API_HS",
            "API_DIFF",
            "API_JSON",
            "ICARUS_HISTORY",
            "finish",
            "sumXiTi",
            "sumXi",
            "sumTi",
            "sumXi2",
            "values",
            "hash_count_min",
            "hash_count_max",
            "MODE_DEFAULT",
            "MODE_SHORT",
            "MODE_LONG",
            "MODE_VALUE",
            "ICARUS_INFO",
            "golden_hashes",
            "golden_tv",
            "history",
            "min_data_count",
            "read_count",
            "do_icarus_timing",
            "do_default_detection",
            "fullnonce",
            "count",
            "values",
            "hash_count_range",
            "history_count",
            "history_time",
            "baud",
            "work_division",
            "fpga_count",
            "nonce_mask",
            "quirk_reopen",
            "user_set",
            "dclk_change_clock_func",
            "dclk",
            "icarus_state",
            "firstrun",
            "tv_workstart",
            "tv_workfinish",
            "last_work",
            "changework",
            "&nanosleep",
            "'req",
            "'rem",
            "(tstart",
            "`(msecs",
            "(tdone",
            "P(tnow",
            "@(tleft",
            "&sleep",
            "'secs",
            "(req",
            "`(rem",
            "*_curl_easy_setopt_err_long",
            "*_curl_easy_setopt_err_curl_off_t",
            "*_curl_easy_setopt_err_string",
            "*_curl_easy_setopt_err_write_callback",
            "*_curl_easy_setopt_err_read_cb",
            "*_curl_easy_setopt_err_ioctl_cb",
            "*_curl_easy_setopt_err_sockopt_cb",
            "*_curl_easy_setopt_err_opensocket_cb",
            "*_curl_easy_setopt_err_progress_cb",
            "*_curl_easy_setopt_err_debug_cb",
            "*_curl_easy_setopt_err_ssl_ctx_cb",
            "*_curl_easy_setopt_err_conv_cb",
            "*_curl_easy_setopt_err_seek_cb",
            "*_curl_easy_setopt_err_cb_data",
            "*_curl_easy_setopt_err_error_buffer",
            "*_curl_easy_setopt_err_FILE",
            "*_curl_easy_setopt_err_postfields",
            "*_curl_easy_setopt_err_curl_httpost",
            "*_curl_easy_setopt_err_curl_slist",
            "*_curl_easy_setopt_err_CURLSH",
            "*_curl_easy_getinfo_err_string",
            "*_curl_easy_getinfo_err_long",
            "*_curl_easy_getinfo_err_double",
            "*_curl_easy_getinfo_err_curl_slist",
            "&cairnsmore_detect_one",
            "'devpath",
            ",cairnsmore_detect_auto",
            "-cairnsmore_detect",
            "&cairnsmore_send_cmd",
            "'cmd",
            "'data",
            "'probe",
            "(pkt",
            "cairnsmore_supports_dynclock",
            "(nonce",
            "(tv_finish",
            "P(dummy",
            "&cairnsmore_change_clock_func",
            "'thr",
            "'bestM",
            "(cm1",
            "&cairnsmore_init",
            "'thr",
            "(cm1",
            "`(state",
            "convert_icarus_to_cairnsmore",
            "'cm1",
            "&cairnsmore_api_extra_device_status",
            "'cm1",
            "`(root",
            "(frequency",
            "&cairnsmore_identify",
            "'cm1",
            "-cairnsmore_api_init",
            "0cairnsmore_api",
            "1icarus_api",
            "GNU C 4.6.3",
            "driver-modminer.c",
            "/home/luke-jr/Projects/Education/Tonal/BitCoin/cgminer",
            "__gnuc_va_list",
            "__builtin_va_list",
            "char",
            "va_list",
            "size_t",
            "long long unsigned int",
            "ssize_t",
            "long long int",
            "ptrdiff_t",
            "short unsigned int",
            "long int",
            "__time64_t",
            "time_t",
            "unsigned int",
            "long unsigned int",
            "unsigned char",
            "_iobuf",
            "_ptr",
            "_cnt",
            "_base",
            "_flag",
            "_file",
            "_charbuf",
            "_bufsiz",
            "_tmpfname",
            "FILE",
            "float",
            "signed char",
            "short int",
            "UINT_PTR",
            "double",
            "long double",
            "VARENUM",
            "VT_EMPTY",
            "VT_NULL",
            "VT_I2",
            "VT_I4",
            "VT_R4",
            "VT_R8",
            "VT_CY",
            "VT_DATE",
            "VT_BSTR",
            "VT_DISPATCH",
            "VT_ERROR",
            "VT_BOOL",
            "VT_VARIANT",
            "VT_UNKNOWN",
            "VT_DECIMAL",
            "VT_I1",
            "VT_UI1",
            "VT_UI2",
            "VT_UI4",
            "VT_I8",
            "VT_UI8",
            "VT_INT",
            "VT_UINT",
            "VT_VOID",
            "VT_HRESULT",
            "VT_PTR",
            "VT_SAFEARRAY",
            "VT_CARRAY",
            "VT_USERDEFINED",
            "VT_LPSTR",
            "VT_LPWSTR",
            "VT_RECORD",
            "VT_INT_PTR",
            "VT_UINT_PTR",
            "VT_FILETIME",
            "VT_BLOB",
            "VT_STREAM",
            "VT_STORAGE",
            "VT_STREAMED_OBJECT",
            "VT_STORED_OBJECT",
            "VT_BLOB_OBJECT",
            "VT_CF",
            "VT_CLSID",
            "VT_VERSIONED_STREAM",
            "VT_BSTR_BLOB",
            "VT_VECTOR",
            "VT_ARRAY",
            "VT_BYREF",
            "VT_RESERVED",
            "VT_ILLEGAL",
            "VT_ILLEGALMASKED",
            "VT_TYPEMASK",
            "timeval",
            "tv_sec",
            "tv_usec",
            "u_int",
            "SOCKET",
            "fd_set",
            "fd_count",
            "fd_array",
            "fd_set",
            "ptw32_handle_t",
            "pthread_t",
            "pthread_mutex_t",
            "pthread_mutex_t_",
            "pthread_cond_t",
            "pthread_cond_t_",
            "uint8_t",
            "int16_t",
            "uint16_t",
            "uint32_t",
            "int64_t",
            "uint64_t",
            "dclk_data",
            "freqM",
            "freqMaxM",
            "freqMDefault",
            "minGoodSamples",
            "errorCount",
            "errorWeight",
            "errorRate",
            "maxErrorRate",
            "_Bool",
            "thr_info",
            "device_thread",
            "primary_thread",
            "cgpu",
            "last",
            "sick",
            "scanhash_working",
            "hashes_done",
            "tv_hashes_done",
            "tv_lastupdate",
            "pause",
            "getwork",
            "rolling",
            "prev_work",
            "next_work",
            "tv_morework",
            "results_work",
            "_job_transition_in_progress",
            "_proceed_with_new_job",
            "tv_results_jobstart",
            "tv_jobstart",
            "tv_poll",
            "notifier",
            "starting_next_work",
            "_max_nonce",
            "work_restart",
            "work_restart_notifier",
            "LOG_ERR",
            "LOG_WARNING",
            "LOG_NOTICE",
            "LOG_INFO",
            "LOG_DEBUG",
            "CURL",
            "curl_socket_t",
            "blkheight_t",
            "libblkmaker_hash_t",
            "blkhash_t",
            "txnhash_t",
            "blktime_t",
            "blktime_diff_t",
            "blknonce_t",
            "blktxn_t",
            "data",
            "datasz",
            "hash",
            "dependcount",
            "depends",
            "required",
            "sigops",
            "blktmpl_longpoll_req",
            "GBT_CBTXN",
            "GBT_CBVALUE",
            "GBT_WORKID",
            "GBT_LONGPOLL",
            "GBT_PROPOSAL",
            "GBT_SERVICE",
            "BMM_CBAPPEND",
            "BMM_CBSET",
            "BMM_GENERATE",
            "BMM_TIMEINC",
            "BMM_TIMEDEC",
            "BMM_TXNADD",
            "BMM_PREVBLK",
            "BMM_VERFORCE",
            "BMM_VERDROP",
            "BMA_TXNHASH",
            "BMAb_COINBASE",
            "BMAb_TRUNCATE",
            "BMAs_COINBASE",
            "BMAs_MERKLE",
            "BMAs_TRUNCATE",
            "gbt_capabilities_t",
            "blkmutations_t",
            "version",
            "diffbits",
            "height",
            "prevblk",
            "sigoplimit",
            "sizelimit",
            "txncount",
            "txns",
            "cbtxn",
            "cbvalue",
            "_time_rcvd",
            "curtime",
            "auxcount",
            "auxnames",
            "auxdata",
            "workid",
            "submitold",
            "expires",
            "target",
            "mutations",
            "maxtime",
            "maxtimeoff",
            "mintime",
            "mintimeoff",
            "minnonce",
            "maxnonce",
            "_mrklroot",
            "next_dataid",
            "blktemplate_t",
            "list_head",
            "next",
            "prev",
            "hh_head",
            "count",
            "expand_mult",
            "prev",
            "next",
            "hh_prev",
            "hh_next",
            "keylen",
            "hashv",
            "UT_hash_table",
            "buckets",
            "num_buckets",
            "log2_num_buckets",
            "num_items",
            "tail",
            "ideal_chain_maxlen",
            "nonideal_items",
            "ineff_expands",
            "noexpand",
            "signature",
            "notifier_t",
            "cl_uint",
            "cl_ulong",
            "iVddc",
            "iActivityPercent",
            "iCurrentPerformanceLevel",
            "iCurrentBusSpeed",
            "iCurrentBusLanes",
            "iMaximumBusLanes",
            "iTemperature",
            "iFlags",
            "iMinPercent",
            "iMaxPercent",
            "iMinRPM",
            "iMaxRPM",
            "iSpeedType",
            "iFanSpeed",
            "iFlags",
            "iMin",
            "iMax",
            "iStep",
            "iNumberOfPerformanceLevels",
            "iActivityReportingSupported",
            "iDiscretePerformanceLevels",
            "sEngineClock",
            "sMemoryClock",
            "sVddc",
            "iVddc",
            "aLevels",
            "libusb_device_descriptor",
            "bLength",
            "bDescriptorType",
            "bcdUSB",
            "bDeviceClass",
            "bDeviceSubClass",
            "bDeviceProtocol",
            "bMaxPacketSize0",
            "idVendor",
            "idProduct",
            "bcdDevice",
            "iManufacturer",
            "iProduct",
            "iSerialNumber",
            "bNumConfigurations",
            "libztex_device",
            "mutex",
            "root",
            "fpgaNum",
            "descriptor",
            "hndl",
            "usbbus",
            "usbaddress",
            "snString",
            "productId",
            "fwVersion",
            "interfaceVersion",
            "interfaceCapabilities",
            "moduleReserved",
            "numNonces",
            "offsNonces",
            "freqM1",
            "bitFileName",
            "suspendSupported",
            "hashesPerClock",
            "extraSolutions",
            "dclk",
            "numberOfFpgas",
            "selectedFpga",
            "parallelConfigSupport",
            "repr",
            "alive",
            "LIFE_WELL",
            "LIFE_SICK",
            "LIFE_DEAD",
            "LIFE_NOSTART",
            "LIFE_INIT",
            "LIFE_WAIT",
            "gpu_adl",
            "lpTemperature",
            "iAdapterIndex",
            "lpAdapterID",
            "iBusNumber",
            "strAdapterName",
            "lpActivity",
            "lpOdParameters",
            "DefPerfLev",
            "lpFanSpeedInfo",
            "lpFanSpeedValue",
            "DefFanSpeedValue",
            "iVddc",
            "iPercentage",
            "autofan",
            "autoengine",
            "managed",
            "lastengine",
            "lasttemp",
            "targetfan",
            "overtemp",
            "minspeed",
            "maxspeed",
            "has_fanspeed",
            "twin",
            "device_api",
            "dname",
            "name",
            "api_detect",
            "get_dev_statline_before",
            "get_dev_statline_after",
            "reinit_device",
            "get_statline_before",
            "get_statline",
            "get_api_extra_device_detail",
            "get_api_extra_device_status",
            "get_api_stats",
            "get_stats",
            "identify_device",
            "set_device",
            "thread_prepare",
            "minerloop",
            "can_limit_work",
            "thread_init",
            "prepare_work",
            "scanhash",
            "hw_error",
            "thread_shutdown",
            "thread_enable",
            "poll",
            "job_prepare",
            "job_start",
            "job_get_results",
            "job_process_results",
            "!cgpu_info",
            "cgminer_id",
            "device_line_id",
            "devtype",
            "device_id",
            "dev_repr",
            "dev_repr_ns",
            "name",
            "procs",
            "proc_id",
            "proc_repr",
            "proc_repr_ns",
            "device",
            "next_proc",
            "device_path",
            "device_file",
            "#h\"1",
            "work_start_tv",
            "wait_ms",
            "sleep_ms",
            "avg_wait_f",
            "avg_wait_d",
            "nonces",
            "polling",
            "flash_led",
            "device_mutex",
            "deven",
            "rolling",
            "total_mhashes",
            "utility",
            "utility_diff1",
            "status",
            "init",
            "last_message_tv",
            "threads",
            "max_hashes",
            "kname",
            "mapped",
            "virtual_gpu",
            "virtual_adl",
            "intensity",
            "dynamic",
            "vwidth",
            "work_size",
            "kernel",
            "max_alloc",
            "opt_lg",
            "lookup_gap",
            "opt_tc",
            "thread_concurrency",
            "shaders",
            "tv_gpustart",
            "intervals",
            "temp",
            "cutofftemp",
            "targettemp",
            "has_adl",
            "gpu_engine",
            "min_engine",
            "gpu_fan",
            "min_fan",
            "gpu_memclock",
            "gpu_memdiff",
            "gpu_powertune",
            "gpu_vddc",
            "diff1",
            "last_share_pool",
            "last_share_pool_time",
            "device_last_well",
            "device_last_not_well",
            "device_not_well_reason",
            "reinit_backoff",
            "thread_fail_init_count",
            "thread_zero_hash_count",
            "thread_fail_queue_count",
            "dev_sick_idle_60_count",
            "dev_dead_idle_600_count",
            "dev_nostart_count",
            "dev_over_heat_count",
            "dev_thermal_cutoff_count",
            "dev_comms_error_count",
            "dev_throttle_count",
            "api_data",
            "type",
            "name",
            "data",
            "data_was_malloc",
            "prev",
            "next",
            "data",
            "target",
            "hash",
            "rolls",
            "thr_id",
            "pool",
            "tv_staged",
            "mined",
            "clone",
            "cloned",
            "longpoll",
            "stale",
            "mandatory",
            "block",
            "queued",
            "stratum",
            "job_id",
            "nonce2",
            "ntime",
            "sdiff",
            "work_difficulty",
            "tmpl",
            "tmpl_refcount",
            "dataid",
            "tv_getwork",
            "tv_getwork_reply",
            "tv_cloned",
            "tv_work_start",
            "tv_work_found",
            "getwork_mode",
            "list",
            "%dev_enable",
            "DEV_ENABLED",
            "DEV_DISABLED",
            "DEV_RECOVER",
            "DEV_RECOVER_ERR",
            "%cl_kernels",
            "KL_NONE",
            "KL_POCLBM",
            "KL_PHATK",
            "KL_DIAKGCN",
            "KL_DIABLO",
            "KL_SCRYPT",
            "dev_reason",
            "REASON_THREAD_FAIL_INIT",
            "REASON_THREAD_ZERO_HASH",
            "REASON_THREAD_FAIL_QUEUE",
            "REASON_DEV_SICK_IDLE_60",
            "REASON_DEV_DEAD_IDLE_600",
            "REASON_DEV_NOSTART",
            "REASON_DEV_OVER_HEAT",
            "REASON_DEV_THERMAL_CUTOFF",
            "REASON_DEV_COMMS_ERROR",
            "REASON_DEV_THROTTLE",
            "_get_start",
            "getwork_attempts",
            "getwork_wait_rolling",
            "hadrolltime",
            "canroll",
            "hadexpire",
            "min_diff",
            "max_diff",
            "last_diff",
            "min_diff_count",
            "max_diff_count",
            "times_sent",
            "bytes_sent",
            "net_bytes_sent",
            "times_received",
            "bytes_received",
            "net_bytes_received",
            "'device_ztex",
            "'device_fd",
            "'device_ft232r",
            "ft232r_device_handle",
            "thread_q",
            "frozen",
            "mutex",
            "cond",
            "ctx_a",
            "ctx_b",
            "ctx_c",
            "ctx_d",
            "ctx_e",
            "ctx_f",
            "ctx_g",
            "ctx_h",
            "cty_a",
            "cty_b",
            "cty_c",
            "cty_d",
            "cty_e",
            "cty_f",
            "cty_g",
            "cty_h",
            "merkle",
            "ntime",
            "nbits",
            "fW15",
            "fW01r",
            "fcty_e",
            "fcty_e2",
            "PreVal4",
            "C1addK5",
            "W17_2",
            "PreVal4addT1",
            "T1substate0",
            "PreVal4_2",
            "PreVal0",
            "PreW18",
            "PreW19",
            "PreW31",
            "PreW32",
            "B1addK6",
            "PreVal0addK7",
            "W16addK16",
            "W17addK17",
            "zeroA",
            "zeroB",
            "oneA",
            "twoA",
            "threeA",
            "fourA",
            "fiveA",
            "sixA",
            "sevenA",
            "dev_blk_ctx",
            "%pool_enable",
            "POOL_DISABLED",
            "POOL_ENABLED",
            "POOL_REJECTING",
            "%pool_protocol",
            "PLP_NONE",
            "PLP_GETWORK",
            "PLP_GETBLOCKTEMPLATE",
            "stratum_work",
            "job_id",
            "prev_hash",
            "coinbase1",
            "coinbase2",
            "merkle",
            "bbversion",
            "nbit",
            "ntime",
            "clean",
            "cb1_len",
            "cb2_len",
            "cb_len",
            "header_len",
            "merkles",
            "diff",
            "transparency_probed",
            "transparency_time",
            "opaque",
            "!pool",
            "pool_no",
            "prio",
            "seq_rejects",
            "seq_getfails",
            "solved",
            "diff1",
            "diff",
            "diff_stale",
            "submit_fail",
            "idle",
            "lagging",
            "probed",
            "force_rollntime",
            "enabled",
            "submit_old",
            "removed",
            "lp_started",
            "block_id",
            "proto",
            "hdr_path",
            "lp_url",
            "lp_id",
            "lp_proto",
            "lp_socket",
            "getwork_requested",
            "stale_shares",
            "discarded_work",
            "getfail_occasions",
            "remotefail_occasions",
            "tv_idle",
            "utility",
            "last_shares",
            "shares",
            "rpc_url",
            "rpc_userpass",
            "rpc_user",
            "rpc_pass",
            "rpc_proxy",
            "pool_lock",
            "submit_q",
            "getwork_q",
            "longpoll_thread",
            "submit_thread",
            "getwork_thread",
            "curls",
            "cr_cond",
            "curlring",
            "sws_waiting_on_curl",
            "last_share_time",
            "best_diff",
            "stratum_url",
            "stratum_port",
            "stratum_curl",
            "sock",
            "sockbuf",
            "sockbuf_size",
            "sockaddr_url",
            "nonce1",
            "n1_len",
            "nonce2",
            "n2size",
            "has_stratum",
            "stratum_active",
            "last_work_time",
            "stratum_auth",
            "stratum_notify",
            "swork",
            "stratum_thread",
            "stratum_lock",
            "last_work_lock",
            "last_work_copy",
            "submit_work_state",
            "%test_nonce2_result",
            "TNR_GOOD",
            "TNR_HIGH",
            "TNR_BAD",
            "%api_data_type",
            "API_ESCAPE",
            "API_STRING",
            "API_CONST",
            "API_INT",
            "API_UINT",
            "API_UINT32",
            "API_UINT64",
            "API_DOUBLE",
            "API_ELAPSED",
            "API_BOOL",
            "API_TIMEVAL",
            "API_TIME",
            "API_MHS",
            "API_MHTOTAL",
            "API_TEMP",
            "API_UTILITY",
            "API_FREQ",
            "API_VOLTS",
            "API_HS",
            "API_DIFF",
            "API_JSON",
            "modminer_fpga_state",
            "work_running",
            "running_work",
            "last_work",
            "tv_workstart",
            "next_work_cmd",
            "dclk",
            "freqMaxMaxM",
            "bad_share_counter",
            "good_share_counter",
            "last_cutoff_reduced",
            "temp",
            "pdone",
            "(_curl_easy_setopt_err_long",
            "(_curl_easy_setopt_err_curl_off_t",
            "(_curl_easy_setopt_err_string",
            "(_curl_easy_setopt_err_write_callback",
            "(_curl_easy_setopt_err_read_cb",
            "(_curl_easy_setopt_err_ioctl_cb",
            "(_curl_easy_setopt_err_sockopt_cb",
            "(_curl_easy_setopt_err_opensocket_cb",
            "(_curl_easy_setopt_err_progress_cb",
            "(_curl_easy_setopt_err_debug_cb",
            "(_curl_easy_setopt_err_ssl_ctx_cb",
            "(_curl_easy_setopt_err_conv_cb",
            "(_curl_easy_setopt_err_seek_cb",
            "(_curl_easy_setopt_err_cb_data",
            "(_curl_easy_setopt_err_error_buffer",
            "(_curl_easy_setopt_err_FILE",
            "(_curl_easy_setopt_err_postfields",
            "(_curl_easy_setopt_err_curl_httpost",
            "(_curl_easy_setopt_err_curl_slist",
            "(_curl_easy_setopt_err_CURLSH",
            "(_curl_easy_getinfo_err_string",
            "(_curl_easy_getinfo_err_long",
            "(_curl_easy_getinfo_err_double",
            "(_curl_easy_getinfo_err_curl_slist",
            ")mutex_lock",
            "*lock",
            ")mutex_unlock",
            "*lock",
            ")mutex_init",
            "*lock",
            "+_bailout",
            ",prio",
            ",fmt",
            "+modminer_detect_one",
            ",devpath",
            "l.buf",
            "}.len",
            "`.devname",
            "X02!",
            "1modminer_detect_auto",
            "2modminer_detect",
            "+modminer_reopen",
            "+modminer_fpga_upload_bitstream",
            "X.fds",
            "}.buf",
            "}.len",
            "}.flen",
            "D0+!",
            "H.fd",
            "@.buflen",
            ".nextstatus",
            ".__i",
            ".__i",
            ".__i",
            "4modminer_device_prepare",
            "l6now",
            "4modminer_fpga_prepare",
            "*thr",
            "6proc",
            "h72!",
            "4modminer_change_clock",
            "*thr",
            "*delta",
            "`7+!",
            "_7R!",
            "P6fd",
            "H6cmd",
            "@6buf",
            "6clk",
            "4modminer_dclk_change_clock",
            "*thr",
            "`6oldFreq",
            "_6delta",
            "4modminer_reduce_clock",
            "*thr",
            "4_modminer_get_nonce",
            "l6cmd",
            "4modminer_fpga_init",
            "*thr",
            "`6fd",
            "L7+!",
            "_7R!",
            "P7Y!",
            "H6cmd",
            "@6buf",
            "4get_modminer_upload_percent",
            "*buf",
            "6info",
            "P6pdone",
            ")get_modminer_statline_before",
            "*buf",
            "6thr",
            "`6gt",
            ")get_modminer_dev_statline_before",
            "*buf",
            "6info",
            "\\6havetemp",
            "T/%E",
            "6thr",
            "@6temp",
            ")modminer_get_temperature",
            "*thr",
            "X6fd",
            "T7+!",
            "P6cmd",
            "@6temperature",
            "6now",
            "6oldFreq",
            "4modminer_get_stats",
            "`6hottest",
            "l6get_temp",
            "_/)E",
            "h/)E",
            "6thr",
            "H6temp",
            "4get_modminer_api_extra_device_status",
            "6root",
            "h6thr",
            "4modminer_prepare_next_work",
            "h6taildata",
            "4modminer_start_work",
            "*thr",
            "6fds",
            "}72!",
            "X7R!",
            "P6fd",
            "l6buf",
            "}3-E",
            "6__i",
            "/Z/E",
            "6xdata",
            "4modminer_process_results",
            "*thr",
            "@7+!",
            "h7Y!",
            "6iter",
            "d6immediate_bad_nonces",
            "`6immediate_nonces",
            "\\6bad",
            "[6tv_workend",
            "6elapsed",
            "P/]0E",
            "6_safebailoutrv",
            "4modminer_scanhash",
            "*thr",
            "*max_nonce",
            "`7J\"",
            "h6startwork",
            ")modminer_fpga_shutdown",
            "*thr",
            "4modminer_set_device",
            "*option",
            "*setting",
            "*replybuf",
            "6val",
            "h6thr",
            "X6oldFreqM",
            "W6delta",
            ".NOOP",
            "8opt_debug",
            "9opt_force_dev_init",
            "9opt_hysteresis",
            ";modminer_api",
            "GNU C 4.6.3",
            "driver-x6500.c",
            "/home/luke-jr/Projects/Education/Tonal/BitCoin/cgminer",
            "char",
            "size_t",
            "long long unsigned int",
            "ssize_t",
            "long long int",
            "ptrdiff_t",
            "short unsigned int",
            "long int",
            "__time64_t",
            "time_t",
            "unsigned int",
            "long unsigned int",
            "unsigned char",
            "DWORD",
            "float",
            "signed char",
            "short int",
            "UINT_PTR",
            "double",
            "long double",
            "\tVARENUM",
            "VT_EMPTY",
            "VT_NULL",
            "VT_I2",
            "VT_I4",
            "VT_R4",
            "VT_R8",
            "VT_CY",
            "VT_DATE",
            "VT_BSTR",
            "VT_DISPATCH",
            "VT_ERROR",
            "VT_BOOL",
            "VT_VARIANT",
            "VT_UNKNOWN",
            "VT_DECIMAL",
            "VT_I1",
            "VT_UI1",
            "VT_UI2",
            "VT_UI4",
            "VT_I8",
            "VT_UI8",
            "VT_INT",
            "VT_UINT",
            "VT_VOID",
            "VT_HRESULT",
            "VT_PTR",
            "VT_SAFEARRAY",
            "VT_CARRAY",
            "VT_USERDEFINED",
            "VT_LPSTR",
            "VT_LPWSTR",
            "VT_RECORD",
            "VT_INT_PTR",
            "VT_UINT_PTR",
            "VT_FILETIME",
            "VT_BLOB",
            "VT_STREAM",
            "VT_STORAGE",
            "VT_STREAMED_OBJECT",
            "VT_STORED_OBJECT",
            "VT_BLOB_OBJECT",
            "VT_CF",
            "VT_CLSID",
            "VT_VERSIONED_STREAM",
            "VT_BSTR_BLOB",
            "VT_VECTOR",
            "VT_ARRAY",
            "VT_BYREF",
            "VT_RESERVED",
            "VT_ILLEGAL",
            "VT_ILLEGALMASKED",
            "VT_TYPEMASK",
            "timeval",
            "tv_sec",
            "tv_usec",
            "SOCKET",
            "timespec",
            "tv_sec",
            "tv_nsec",
            "uint8_t",
            "int16_t",
            "uint16_t",
            "uint32_t",
            "int64_t",
            "uint64_t",
            "libusb_device_descriptor",
            "bLength",
            "bDescriptorType",
            "bcdUSB",
            "bDeviceClass",
            "bDeviceSubClass",
            "bDeviceProtocol",
            "bMaxPacketSize0",
            "idVendor",
            "idProduct",
            "bcdDevice",
            "iManufacturer",
            "iProduct",
            "iSerialNumber",
            "bNumConfigurations",
            "ptw32_handle_t",
            "pthread_t",
            "pthread_mutex_t",
            "pthread_mutex_t_",
            "pthread_cond_t",
            "pthread_cond_t_",
            "_iobuf",
            "_ptr",
            "_cnt",
            "_base",
            "_flag",
            "_file",
            "_charbuf",
            "_bufsiz",
            "_tmpfname",
            "FILE",
            "CURL",
            "curl_socket_t",
            "blkheight_t",
            "libblkmaker_hash_t",
            "blkhash_t",
            "txnhash_t",
            "blktime_t",
            "blktime_diff_t",
            "blknonce_t",
            "blktxn_t",
            "data",
            "datasz",
            "hash",
            "dependcount",
            "depends",
            "required",
            "sigops",
            "_Bool",
            "blktmpl_longpoll_req",
            "GBT_CBTXN",
            "GBT_CBVALUE",
            "GBT_WORKID",
            "GBT_LONGPOLL",
            "GBT_PROPOSAL",
            "GBT_SERVICE",
            "BMM_CBAPPEND",
            "BMM_CBSET",
            "BMM_GENERATE",
            "BMM_TIMEINC",
            "BMM_TIMEDEC",
            "BMM_TXNADD",
            "BMM_PREVBLK",
            "BMM_VERFORCE",
            "BMM_VERDROP",
            "BMA_TXNHASH",
            "BMAb_COINBASE",
            "BMAb_TRUNCATE",
            "BMAs_COINBASE",
            "BMAs_MERKLE",
            "BMAs_TRUNCATE",
            "gbt_capabilities_t",
            "blkmutations_t",
            "version",
            "diffbits",
            "height",
            "prevblk",
            "sigoplimit",
            "sizelimit",
            "txncount",
            "txns",
            "cbtxn",
            "cbvalue",
            "_time_rcvd",
            "curtime",
            "auxcount",
            "auxnames",
            "auxdata",
            "workid",
            "submitold",
            "expires",
            "target",
            "mutations",
            "maxtime",
            "maxtimeoff",
            "mintime",
            "mintimeoff",
            "minnonce",
            "maxnonce",
            "_mrklroot",
            "next_dataid",
            "blktemplate_t",
            "list_head",
            "next",
            "prev",
            "hh_head",
            "count",
            "expand_mult",
            "prev",
            "next",
            "hh_prev",
            "hh_next",
            "keylen",
            "hashv",
            "UT_hash_table",
            "buckets",
            "num_buckets",
            "log2_num_buckets",
            "num_items",
            "tail",
            "ideal_chain_maxlen",
            "nonideal_items",
            "ineff_expands",
            "noexpand",
            "signature",
            "LOG_ERR",
            "LOG_WARNING",
            "LOG_NOTICE",
            "LOG_INFO",
            "LOG_DEBUG",
            "notifier_t",
            "cl_uint",
            "cl_ulong",
            "iVddc",
            "iActivityPercent",
            "iCurrentPerformanceLevel",
            "iCurrentBusSpeed",
            "iCurrentBusLanes",
            "iMaximumBusLanes",
            "iTemperature",
            "iFlags",
            "iMinPercent",
            "iMaxPercent",
            "iMinRPM",
            "iMaxRPM",
            "iSpeedType",
            "iFanSpeed",
            "iFlags",
            "iMin",
            "iMax",
            "iStep",
            "iNumberOfPerformanceLevels",
            "iActivityReportingSupported",
            "iDiscretePerformanceLevels",
            "sEngineClock",
            "sMemoryClock",
            "sVddc",
            "iVddc",
            "aLevels",
            "dclk_data",
            "freqM",
            "freqMaxM",
            "freqMDefault",
            "minGoodSamples",
            "errorCount",
            "errorWeight",
            "errorRate",
            "maxErrorRate",
            "thr_info",
            "device_thread",
            "primary_thread",
            "cgpu",
            "last",
            "sick",
            "scanhash_working",
            "hashes_done",
            "tv_hashes_done",
            "tv_lastupdate",
            "pause",
            "getwork",
            "rolling",
            "prev_work",
            "work",
            "next_work",
            "tv_morework",
            "results_work",
            "_job_transition_in_progress",
            "_proceed_with_new_job",
            "tv_results_jobstart",
            "tv_jobstart",
            "tv_poll",
            "notifier",
            "starting_next_work",
            "_max_nonce",
            "work_restart",
            "work_restart_notifier",
            "libztex_device",
            "mutex",
            "root",
            "fpgaNum",
            "descriptor",
            "hndl",
            "usbbus",
            "usbaddress",
            "snString",
            "productId",
            "fwVersion",
            "interfaceVersion",
            "interfaceCapabilities",
            "moduleReserved",
            "numNonces",
            "offsNonces",
            "freqM1",
            "bitFileName",
            "suspendSupported",
            "hashesPerClock",
            "extraSolutions",
            "dclk",
            "numberOfFpgas",
            "selectedFpga",
            "parallelConfigSupport",
            "repr",
            "\talive",
            "LIFE_WELL",
            "LIFE_SICK",
            "LIFE_DEAD",
            "LIFE_NOSTART",
            "LIFE_INIT",
            "LIFE_WAIT",
            "gpu_adl",
            "lpTemperature",
            "iAdapterIndex",
            "lpAdapterID",
            "iBusNumber",
            "strAdapterName",
            "lpActivity",
            "lpOdParameters",
            "DefPerfLev",
            "lpFanSpeedInfo",
            "lpFanSpeedValue",
            "DefFanSpeedValue",
            "iVddc",
            "iPercentage",
            "autofan",
            "autoengine",
            "managed",
            "lastengine",
            "lasttemp",
            "targetfan",
            "overtemp",
            "minspeed",
            "maxspeed",
            "has_fanspeed",
            "twin",
            "device_api",
            "dname",
            "name",
            "api_detect",
            "get_dev_statline_before",
            "get_dev_statline_after",
            "reinit_device",
            "get_statline_before",
            "get_statline",
            "get_api_extra_device_detail",
            "get_api_extra_device_status",
            "get_api_stats",
            "get_stats",
            "identify_device",
            "set_device",
            "thread_prepare",
            "minerloop",
            "can_limit_work",
            "thread_init",
            "prepare_work",
            "scanhash",
            "hw_error",
            "thread_shutdown",
            "thread_enable",
            "poll",
            "job_prepare",
            "job_start",
            "job_get_results",
            "job_process_results",
            "cgpu_info",
            "cgminer_id",
            "device_line_id",
            "devtype",
            "device_id",
            "dev_repr",
            "dev_repr_ns",
            "name",
            "procs",
            "proc_id",
            "proc_repr",
            "proc_repr_ns",
            "device",
            "next_proc",
            "device_path",
            "device_file",
            "#h 1",
            "work_start_tv",
            "wait_ms",
            "sleep_ms",
            "avg_wait_f",
            "avg_wait_d",
            "nonces",
            "polling",
            "flash_led",
            "device_mutex",
            "deven",
            "rolling",
            "total_mhashes",
            "utility",
            "utility_diff1",
            "status",
            "init",
            "last_message_tv",
            "threads",
            "max_hashes",
            "kname",
            "mapped",
            "virtual_gpu",
            "virtual_adl",
            "intensity",
            "dynamic",
            "vwidth",
            "work_size",
            "kernel",
            "max_alloc",
            "opt_lg",
            "lookup_gap",
            "opt_tc",
            "thread_concurrency",
            "shaders",
            "tv_gpustart",
            "intervals",
            "temp",
            "cutofftemp",
            "targettemp",
            "has_adl",
            "gpu_engine",
            "min_engine",
            "gpu_fan",
            "min_fan",
            "gpu_memclock",
            "gpu_memdiff",
            "gpu_powertune",
            "gpu_vddc",
            "diff1",
            "last_share_pool",
            "last_share_pool_time",
            "device_last_well",
            "device_last_not_well",
            "device_not_well_reason",
            "reinit_backoff",
            "thread_fail_init_count",
            "thread_zero_hash_count",
            "thread_fail_queue_count",
            "dev_sick_idle_60_count",
            "dev_dead_idle_600_count",
            "dev_nostart_count",
            "dev_over_heat_count",
            "dev_thermal_cutoff_count",
            "dev_comms_error_count",
            "dev_throttle_count",
            "api_data",
            "type",
            "name",
            "data",
            "data_was_malloc",
            "prev",
            "next",
            "work",
            "data",
            "midstate",
            "target",
            "hash",
            "rolls",
            "thr_id",
            "pool",
            "tv_staged",
            "mined",
            "clone",
            "cloned",
            "longpoll",
            "stale",
            "mandatory",
            "block",
            "queued",
            "stratum",
            "job_id",
            "nonce2",
            "ntime",
            "sdiff",
            "work_difficulty",
            "tmpl",
            "tmpl_refcount",
            "dataid",
            "tv_getwork",
            "tv_getwork_reply",
            "tv_cloned",
            "tv_work_start",
            "tv_work_found",
            "getwork_mode",
            "list",
            "\"dev_enable",
            "DEV_ENABLED",
            "DEV_DISABLED",
            "DEV_RECOVER",
            "DEV_RECOVER_ERR",
            "\"cl_kernels",
            "KL_NONE",
            "KL_POCLBM",
            "KL_PHATK",
            "KL_DIAKGCN",
            "KL_DIABLO",
            "KL_SCRYPT",
            "\tdev_reason",
            "REASON_THREAD_FAIL_INIT",
            "REASON_THREAD_ZERO_HASH",
            "REASON_THREAD_FAIL_QUEUE",
            "REASON_DEV_SICK_IDLE_60",
            "REASON_DEV_DEAD_IDLE_600",
            "REASON_DEV_NOSTART",
            "REASON_DEV_OVER_HEAT",
            "REASON_DEV_THERMAL_CUTOFF",
            "REASON_DEV_COMMS_ERROR",
            "REASON_DEV_THROTTLE",
            "_get_start",
            "getwork_attempts",
            "getwork_wait_rolling",
            "hadrolltime",
            "canroll",
            "hadexpire",
            "min_diff",
            "max_diff",
            "last_diff",
            "min_diff_count",
            "max_diff_count",
            "times_sent",
            "bytes_sent",
            "net_bytes_sent",
            "times_received",
            "bytes_received",
            "net_bytes_received",
            "$device_ztex",
            "$device_fd",
            "$device_ft232r",
            "ft232r_device_handle",
            "thread_q",
            "frozen",
            "mutex",
            "cond",
            "ctx_a",
            "ctx_b",
            "ctx_c",
            "ctx_d",
            "ctx_e",
            "ctx_f",
            "ctx_g",
            "ctx_h",
            "cty_a",
            "cty_b",
            "cty_c",
            "cty_d",
            "cty_e",
            "cty_f",
            "cty_g",
            "cty_h",
            "merkle",
            "ntime",
            "nbits",
            "nonce",
            "fW15",
            "fW01r",
            "fcty_e",
            "fcty_e2",
            "PreVal4",
            "C1addK5",
            "W17_2",
            "PreVal4addT1",
            "T1substate0",
            "PreVal4_2",
            "PreVal0",
            "PreW18",
            "PreW19",
            "PreW31",
            "PreW32",
            "B1addK6",
            "PreVal0addK7",
            "W16addK16",
            "W17addK17",
            "zeroA",
            "zeroB",
            "oneA",
            "twoA",
            "threeA",
            "fourA",
            "fiveA",
            "sixA",
            "sevenA",
            "work",
            "dev_blk_ctx",
            "\"pool_enable",
            "POOL_DISABLED",
            "POOL_ENABLED",
            "POOL_REJECTING",
            "\"pool_protocol",
            "PLP_NONE",
            "PLP_GETWORK",
            "PLP_GETBLOCKTEMPLATE",
            "stratum_work",
            "job_id",
            "prev_hash",
            "coinbase1",
            "coinbase2",
            "merkle",
            "bbversion",
            "nbit",
            "ntime",
            "clean",
            "cb1_len",
            "cb2_len",
            "cb_len",
            "header_len",
            "merkles",
            "diff",
            "transparency_probed",
            "transparency_time",
            "opaque",
            "pool",
            "pool_no",
            "prio",
            "seq_rejects",
            "seq_getfails",
            "solved",
            "diff1",
            "diff",
            "diff_stale",
            "submit_fail",
            "idle",
            "lagging",
            "probed",
            "force_rollntime",
            "enabled",
            "submit_old",
            "removed",
            "lp_started",
            "block_id",
            "proto",
            "hdr_path",
            "lp_url",
            "lp_id",
            "lp_proto",
            "lp_socket",
            "getwork_requested",
            "stale_shares",
            "discarded_work",
            "getfail_occasions",
            "remotefail_occasions",
            "tv_idle",
            "utility",
            "last_shares",
            "shares",
            "rpc_url",
            "rpc_userpass",
            "rpc_user",
            "rpc_pass",
            "rpc_proxy",
            "pool_lock",
            "submit_q",
            "getwork_q",
            "longpoll_thread",
            "submit_thread",
            "getwork_thread",
            "curls",
            "cr_cond",
            "curlring",
            "sws_waiting_on_curl",
            "last_share_time",
            "best_diff",
            "stratum_url",
            "stratum_port",
            "stratum_curl",
            "sock",
            "sockbuf",
            "sockbuf_size",
            "sockaddr_url",
            "nonce1",
            "n1_len",
            "nonce2",
            "n2size",
            "has_stratum",
            "stratum_active",
            "last_work_time",
            "stratum_auth",
            "stratum_notify",
            "swork",
            "stratum_thread",
            "stratum_lock",
            "last_work_lock",
            "last_work_copy",
            "submit_work_state",
            "\"test_nonce2_result",
            "TNR_GOOD",
            "TNR_HIGH",
            "TNR_BAD",
            "\"api_data_type",
            "API_ESCAPE",
            "API_STRING",
            "API_CONST",
            "API_INT",
            "API_UINT",
            "API_UINT32",
            "API_UINT64",
            "API_DOUBLE",
            "API_ELAPSED",
            "API_BOOL",
            "API_TIMEVAL",
            "API_TIME",
            "API_MHS",
            "API_MHTOTAL",
            "API_TEMP",
            "API_UTILITY",
            "API_FREQ",
            "API_VOLTS",
            "API_HS",
            "API_DIFF",
            "API_JSON",
            "jtag_port_a",
            "ftdi",
            "state",
            "async",
            "bufread",
            "jtag_port",
            "ignored",
            "\tjtagreg",
            "JTAG_REG_DR",
            "JTAG_REG_IR",
            "\tft232r_reset_purge",
            "FTDI_PURGE_RX",
            "FTDI_PURGE_TX",
            "FTDI_PURGE_BOTH",
            "x6500_fpga_data",
            "jtag",
            "tv_hashstart",
            "dclk",
            "freqMaxMaxM",
            "last_cutoff_reduced",
            "temp",
            "prepwork_last_register",
            "%nanosleep",
            "&req",
            "&rem",
            "'tstart",
            "`'msecs",
            "l(28E",
            "'tdone",
            "P'tnow",
            "@'tleft",
            "%sleep",
            "&secs",
            "'req",
            "`'rem",
            ")_curl_easy_setopt_err_long",
            ")_curl_easy_setopt_err_curl_off_t",
            ")_curl_easy_setopt_err_string",
            ")_curl_easy_setopt_err_write_callback",
            ")_curl_easy_setopt_err_read_cb",
            ")_curl_easy_setopt_err_ioctl_cb",
            ")_curl_easy_setopt_err_sockopt_cb",
            ")_curl_easy_setopt_err_opensocket_cb",
            ")_curl_easy_setopt_err_progress_cb",
            ")_curl_easy_setopt_err_debug_cb",
            ")_curl_easy_setopt_err_ssl_ctx_cb",
            ")_curl_easy_setopt_err_conv_cb",
            ")_curl_easy_setopt_err_seek_cb",
            ")_curl_easy_setopt_err_cb_data",
            ")_curl_easy_setopt_err_error_buffer",
            ")_curl_easy_setopt_err_FILE",
            ")_curl_easy_setopt_err_postfields",
            ")_curl_easy_setopt_err_curl_httpost",
            ")_curl_easy_setopt_err_curl_slist",
            ")_curl_easy_setopt_err_CURLSH",
            ")_curl_easy_getinfo_err_string",
            ")_curl_easy_getinfo_err_long",
            ")_curl_easy_getinfo_err_double",
            ")_curl_easy_getinfo_err_curl_slist",
            "*mutex_lock",
            "+lock",
            "*mutex_unlock",
            "+lock",
            "*mutex_init",
            "+lock",
            ",int2bits",
            "&bits",
            "%bits2int",
            "&bits",
            "&bits",
            ",x6500_jtag_set",
            ",x6500_set_register",
            "&addr",
            "'buf",
            "@0retry",
            "%x6500_get_register",
            "&addr",
            "'buf",
            "%x6500_foundusb",
            "&dev",
            "&product",
            "&serial",
            "%x6500_detect_one",
            "&serial",
            "1x6500_detect_auto",
            "2x6500_detect",
            "%x6500_prepare",
            "&thr",
            "`'ftdi",
            "X'jtag_a",
            "H'pdone",
            "P(@E",
            "'slave",
            "%x6500_fpga_upload_bitstream",
            "&jp1",
            "'buf",
            "}'len",
            "}'flen",
            "L'pdone",
            "`'ftdi",
            "P'jpt",
            "}'jp",
            "o3buflen",
            "3nextstatus",
            "4x6500_change_clock",
            "+thr",
            "h3jp",
            "4x6500_dclk_change_clock",
            "+thr",
            "h6@#",
            "`3oldFreq",
            "4x6500_thread_init",
            "+thr",
            "h3ftdi",
            "X(HE",
            "H3jp",
            "@3fpgaid",
            "T6j#",
            "S3buf",
            "*x6500_get_temperature",
            "P3jp",
            "H3ftdi",
            "\\3code",
            "3sio",
            "3thr",
            "3temperature",
            "3now",
            "3oldFreq",
            "4x6500_all_idle",
            "+any_proc",
            "(=QE",
            "3proc",
            "4x6500_get_stats",
            "3hottest",
            "l7QE",
            "h(QE",
            "3thr",
            "X6@#",
            "P3temp",
            "4get_x6500_upload_percent",
            "+buf",
            "3info",
            "P3pdone",
            "*get_x6500_statline_before",
            "+buf",
            "3info",
            "@6@#",
            "*get_x6500_dev_statline_before",
            "+buf",
            "3info",
            "3fpga0",
            "X3fpga1",
            "4get_x6500_api_extra_device_status",
            "3root",
            "h3thr",
            "`6@#",
            "4x6500_job_prepare",
            "+thr",
            "+work",
            "+max_nonce",
            "X6@#",
            "P3jp",
            "H7WE",
            "(KXE",
            "*x6500_job_start",
            "+thr",
            "h6@#",
            "`3jp",
            "X6\\#",
            "3usecs",
            "D7uZE",
            "3xdata",
            "4calc_hashes",
            "+thr",
            "`3tv_delta",
            "P3hashes",
            "4x6500_process_results",
            "+thr",
            "+work",
            "h6@#",
            "`3jtag",
            "X6\\#",
            "@3hashes",
            "H3nonce",
            "T3bad",
            "*x6500_fpga_poll",
            "+thr",
            "h(r_E",
            "`(_E",
            "8opt_debug",
            "9opt_force_dev_init",
            "9opt_hysteresis",
            ";x6500_api",
            "GNU C 4.6.3",
            "ft232r.c",
            "/home/luke-jr/Projects/Education/Tonal/BitCoin/cgminer",
            "char",
            "size_t",
            "long long unsigned int",
            "ssize_t",
            "long long int",
            "short unsigned int",
            "long int",
            "unsigned int",
            "long unsigned int",
            "unsigned char",
            "float",
            "signed char",
            "short int",
            "double",
            "long double",
            "\tVARENUM",
            "VT_EMPTY",
            "VT_NULL",
            "VT_I2",
            "VT_I4",
            "VT_R4",
            "VT_R8",
            "VT_CY",
            "VT_DATE",
            "VT_BSTR",
            "VT_DISPATCH",
            "VT_ERROR",
            "VT_BOOL",
            "VT_VARIANT",
            "VT_UNKNOWN",
            "VT_DECIMAL",
            "VT_I1",
            "VT_UI1",
            "VT_UI2",
            "VT_UI4",
            "VT_I8",
            "VT_UI8",
            "VT_INT",
            "VT_UINT",
            "VT_VOID",
            "VT_HRESULT",
            "VT_PTR",
            "VT_SAFEARRAY",
            "VT_CARRAY",
            "VT_USERDEFINED",
            "VT_LPSTR",
            "VT_LPWSTR",
            "VT_RECORD",
            "VT_INT_PTR",
            "VT_UINT_PTR",
            "VT_FILETIME",
            "VT_BLOB",
            "VT_STREAM",
            "VT_STORAGE",
            "VT_STREAMED_OBJECT",
            "VT_STORED_OBJECT",
            "VT_BLOB_OBJECT",
            "VT_CF",
            "VT_CLSID",
            "VT_VERSIONED_STREAM",
            "VT_BSTR_BLOB",
            "VT_VECTOR",
            "VT_ARRAY",
            "VT_BYREF",
            "VT_RESERVED",
            "VT_ILLEGAL",
            "VT_ILLEGALMASKED",
            "VT_TYPEMASK",
            "uint8_t",
            "uint16_t",
            "uint64_t",
            "\tlibusb_endpoint_direction",
            "LIBUSB_ENDPOINT_IN",
            "LIBUSB_ENDPOINT_OUT",
            "libusb_request_type",
            "LIBUSB_REQUEST_TYPE_STANDARD",
            "LIBUSB_REQUEST_TYPE_CLASS",
            "LIBUSB_REQUEST_TYPE_VENDOR",
            "LIBUSB_REQUEST_TYPE_RESERVED",
            "libusb_request_recipient",
            "LIBUSB_RECIPIENT_DEVICE",
            "LIBUSB_RECIPIENT_INTERFACE",
            "LIBUSB_RECIPIENT_ENDPOINT",
            "LIBUSB_RECIPIENT_OTHER",
            "libusb_device_descriptor",
            "bcdUSB",
            "bDeviceClass",
            "bDeviceSubClass",
            "bDeviceProtocol",
            "bMaxPacketSize0",
            "idVendor",
            "idProduct",
            "bcdDevice",
            "iManufacturer",
            "iProduct",
            "iSerialNumber",
            "bNumConfigurations",
            "libusb_endpoint_descriptor",
            "bEndpointAddress",
            "wMaxPacketSize",
            "bInterval",
            "bRefresh",
            "bSynchAddress",
            "extra",
            "libusb_interface_descriptor",
            "bInterfaceNumber",
            "bAlternateSetting",
            "bNumEndpoints",
            "bInterfaceClass",
            "bInterfaceSubClass",
            "bInterfaceProtocol",
            "iInterface",
            "extra",
            "libusb_interface",
            "altsetting",
            "num_altsetting",
            "libusb_config_descriptor",
            "wTotalLength",
            "bNumInterfaces",
            "bConfigurationValue",
            "iConfiguration",
            "MaxPower",
            "interface",
            "extra",
            "libusb_error",
            "LIBUSB_SUCCESS",
            "LIBUSB_ERROR_IO",
            "LIBUSB_ERROR_INVALID_PARAM",
            "LIBUSB_ERROR_ACCESS",
            "LIBUSB_ERROR_NO_DEVICE",
            "LIBUSB_ERROR_NOT_FOUND",
            "LIBUSB_ERROR_BUSY",
            "LIBUSB_ERROR_TIMEOUT",
            "LIBUSB_ERROR_OVERFLOW",
            "LIBUSB_ERROR_PIPE",
            "LIBUSB_ERROR_INTERRUPTED",
            "LIBUSB_ERROR_NO_MEM",
            "LIBUSB_ERROR_NOT_SUPPORTED",
            "LIBUSB_ERROR_OTHER",
            "_Bool",
            "\tft232r_reset_purge",
            "FTDI_PURGE_RX",
            "FTDI_PURGE_TX",
            "FTDI_PURGE_BOTH",
            "foundusb_func_t",
            "LOG_ERR",
            "LOG_WARNING",
            "LOG_NOTICE",
            "LOG_INFO",
            "LOG_DEBUG",
            "ft232r_device_handle",
            "ibuf",
            "ibufLen",
            "obuf",
            "obufsz",
            "ft232r_device_info",
            "libusb_dev",
            "product",
            "serial",
            "ft232r_rwfunc_t",
            "_curl_easy_setopt_err_long",
            "_curl_easy_setopt_err_curl_off_t",
            "_curl_easy_setopt_err_string",
            "_curl_easy_setopt_err_write_callback",
            "_curl_easy_setopt_err_read_cb",
            "_curl_easy_setopt_err_ioctl_cb",
            "_curl_easy_setopt_err_sockopt_cb",
            "_curl_easy_setopt_err_opensocket_cb",
            "_curl_easy_setopt_err_progress_cb",
            "_curl_easy_setopt_err_debug_cb",
            "_curl_easy_setopt_err_ssl_ctx_cb",
            "_curl_easy_setopt_err_conv_cb",
            "_curl_easy_setopt_err_seek_cb",
            "_curl_easy_setopt_err_cb_data",
            "_curl_easy_setopt_err_error_buffer",
            "_curl_easy_setopt_err_FILE",
            "_curl_easy_setopt_err_postfields",
            "_curl_easy_setopt_err_curl_httpost",
            "_curl_easy_setopt_err_curl_slist",
            "_curl_easy_setopt_err_CURLSH",
            "_curl_easy_getinfo_err_string",
            "_curl_easy_getinfo_err_long",
            "_curl_easy_getinfo_err_double",
            "_curl_easy_getinfo_err_curl_slist",
            "ft232r_scan_free",
            "info",
            "infop",
            "ft232r_scan",
            "9&aE",
            "found",
            "list",
            "desc",
            "handle",
            "info",
            "ft232r_detect",
            "product_needle",
            "serial",
            "info",
            "found",
            "infop",
            "ft232r_open",
            "devh",
            "ftdi",
            "altcfg",
            "ft232r_close",
            "ft232r_purge_buffers",
            "purge",
            "ft232r_set_bitmode",
            "mask",
            "mode",
            " ft232r_readwrite",
            "ft232r_flush",
            "#dev",
            "ft232r_write",
            "#dev",
            "$bufleft",
            "&ft232r_rw_all",
            "#rwfunc",
            "#dev",
            "h$writ",
            "`$total",
            "ft232r_write_all",
            "#dev",
            "ft232r_read",
            "#dev",
            "`$adj",
            "l$ibufs",
            "P$ibufsLen",
            "ft232r_read_all",
            "#dev",
            "ft232r_get_pins",
            "#dev",
            "#pins",
            "ft232r_get_bitmode",
            "#dev",
            "#out_mode",
            "ft232r_set_cbus_bits",
            "#dev",
            "$pin_state",
            "ft232r_get_cbus_bits",
            "#dev",
            "#out_sio0",
            "#out_sio1",
            "ft232r_devinfo_list",
            "GNU C 4.6.3",
            "jtag.c",
            "/home/luke-jr/Projects/Education/Tonal/BitCoin/cgminer",
            "char",
            "size_t",
            "long long unsigned int",
            "ssize_t",
            "long long int",
            "short unsigned int",
            "long int",
            "unsigned int",
            "long unsigned int",
            "unsigned char",
            "float",
            "signed char",
            "short int",
            "_div_t",
            "quot",
            "div_t",
            "double",
            "long double",
            "uint8_t",
            "uint32_t",
            "_Bool",
            "jtag_port_a",
            "ftdi",
            "state",
            "async",
            "bufread",
            "\tft232r_device_handle",
            "jtag_port",
            "ignored",
            "jtagreg",
            "JTAG_REG_DR",
            "JTAG_REG_IR",
            "LOG_ERR",
            "LOG_WARNING",
            "LOG_NOTICE",
            "LOG_INFO",
            "LOG_DEBUG",
            "_curl_easy_setopt_err_long",
            "_curl_easy_setopt_err_curl_off_t",
            "_curl_easy_setopt_err_string",
            "_curl_easy_setopt_err_write_callback",
            "_curl_easy_setopt_err_read_cb",
            "_curl_easy_setopt_err_ioctl_cb",
            "_curl_easy_setopt_err_sockopt_cb",
            "_curl_easy_setopt_err_opensocket_cb",
            "_curl_easy_setopt_err_progress_cb",
            "_curl_easy_setopt_err_debug_cb",
            "_curl_easy_setopt_err_ssl_ctx_cb",
            "_curl_easy_setopt_err_conv_cb",
            "_curl_easy_setopt_err_seek_cb",
            "_curl_easy_setopt_err_cb_data",
            "_curl_easy_setopt_err_error_buffer",
            "_curl_easy_setopt_err_FILE",
            "_curl_easy_setopt_err_postfields",
            "_curl_easy_setopt_err_curl_httpost",
            "_curl_easy_setopt_err_curl_slist",
            "_curl_easy_setopt_err_CURLSH",
            "_curl_easy_getinfo_err_string",
            "_curl_easy_getinfo_err_long",
            "_curl_easy_getinfo_err_double",
            "_curl_easy_getinfo_err_curl_slist",
            "jtag_clock_byte",
            "jtag_clock",
            "bufsz",
            "rbufsz",
            "rbuf",
            "jtag_rw_bit",
            "mask",
            "byte",
            "getbit",
            "data",
            "bitnum",
            "cdata",
            "setbit",
            "data",
            "bitnum",
            "cdata",
            "_jtag_llrw",
            "stage",
            "data",
            "rbuf",
            "wbuf",
            "rbufsz",
            "bitspending",
            "databitoff",
            "jtag_reset",
            "jtag_detect",
            "_jtag_rw",
            "stage",
            "jtag_run",
            "GNU C 4.6.3",
            "driver-ztex.c",
            "/home/luke-jr/Projects/Education/Tonal/BitCoin/cgminer",
            "char",
            "size_t",
            "long long unsigned int",
            "long long int",
            "ptrdiff_t",
            "short unsigned int",
            "long int",
            "__time64_t",
            "time_t",
            "unsigned int",
            "long unsigned int",
            "unsigned char",
            "signed char",
            "uint8_t",
            "int16_t",
            "short int",
            "uint16_t",
            "uint32_t",
            "int64_t",
            "uint64_t",
            "dclk_data",
            "\tfreqM",
            "\tfreqMaxM",
            "\tfreqMDefault",
            "\tminGoodSamples",
            "\terrorCount",
            "\terrorWeight",
            "\terrorRate",
            "# \tmaxErrorRate",
            "double",
            "_Bool",
            "thr_info",
            "device_thread",
            "primary_thread",
            "cgpu",
            "last",
            "sick",
            "scanhash_working",
            "hashes_done",
            "tv_hashes_done",
            "tv_lastupdate",
            "pause",
            "getwork",
            "rolling",
            "prev_work",
            "work",
            "next_work",
            "tv_morework",
            "results_work",
            "_job_transition_in_progress",
            "_proceed_with_new_job",
            "tv_results_jobstart",
            "tv_jobstart",
            "tv_poll",
            "notifier",
            "starting_next_work",
            "_max_nonce",
            "work_restart",
            "work_restart_notifier",
            "_iobuf",
            "\t_ptr",
            "\t_cnt",
            "\t_base",
            "\t_flag",
            "\t_file",
            "\t_charbuf",
            "# \t_bufsiz",
            "#$\t_tmpfname",
            "FILE",
            "float",
            "UINT_PTR",
            "long double",
            "VARENUM",
            "VT_EMPTY",
            "VT_NULL",
            "VT_I2",
            "VT_I4",
            "VT_R4",
            "VT_R8",
            "VT_CY",
            "VT_DATE",
            "VT_BSTR",
            "VT_DISPATCH",
            "VT_ERROR",
            "VT_BOOL",
            "VT_VARIANT",
            "VT_UNKNOWN",
            "VT_DECIMAL",
            "VT_I1",
            "VT_UI1",
            "VT_UI2",
            "VT_UI4",
            "VT_I8",
            "VT_UI8",
            "VT_INT",
            "VT_UINT",
            "VT_VOID",
            "VT_HRESULT",
            "VT_PTR",
            "VT_SAFEARRAY",
            "VT_CARRAY",
            "VT_USERDEFINED",
            "VT_LPSTR",
            "VT_LPWSTR",
            "VT_RECORD",
            "VT_INT_PTR",
            "VT_UINT_PTR",
            "VT_FILETIME",
            "VT_BLOB",
            "VT_STREAM",
            "VT_STORAGE",
            "VT_STREAMED_OBJECT",
            "VT_STORED_OBJECT",
            "VT_BLOB_OBJECT",
            "VT_CF",
            "VT_CLSID",
            "VT_VERSIONED_STREAM",
            "VT_BSTR_BLOB",
            "VT_VECTOR",
            "VT_ARRAY",
            "VT_BYREF",
            "VT_RESERVED",
            "VT_ILLEGAL",
            "VT_ILLEGALMASKED",
            "VT_TYPEMASK",
            "timeval",
            "\ttv_sec",
            "\ttv_usec",
            "SOCKET",
            "ptw32_handle_t",
            "pthread_t",
            "pthread_mutex_t",
            "pthread_mutex_t_",
            "pthread_cond_t",
            "pthread_cond_t_",
            "CURL",
            "curl_socket_t",
            "blkheight_t",
            "libblkmaker_hash_t",
            "blkhash_t",
            "txnhash_t",
            "blktime_t",
            "blktime_diff_t",
            "blknonce_t",
            "blktxn_t",
            "\tdata",
            "\tdatasz",
            "\thash",
            "\tdependcount",
            "\tdepends",
            "# \tfee",
            "#(\trequired",
            "#0\tsigops",
            "blktmpl_longpoll_req",
            "\turi",
            "GBT_CBTXN",
            "GBT_CBVALUE",
            "GBT_WORKID",
            "GBT_LONGPOLL",
            "GBT_PROPOSAL",
            "GBT_SERVICE",
            "BMM_CBAPPEND",
            "BMM_CBSET",
            "BMM_GENERATE",
            "BMM_TIMEINC",
            "BMM_TIMEDEC",
            "BMM_TXNADD",
            "BMM_PREVBLK",
            "BMM_VERFORCE",
            "BMM_VERDROP",
            "BMA_TXNHASH",
            "BMAb_COINBASE",
            "BMAb_TRUNCATE",
            "BMAs_COINBASE",
            "BMAs_MERKLE",
            "BMAs_TRUNCATE",
            "gbt_capabilities_t",
            "blkmutations_t",
            "\tversion",
            "\tdiffbits",
            "\theight",
            "\tprevblk",
            "\tsigoplimit",
            "#,\tsizelimit",
            "#0\ttxncount",
            "#4\ttxns",
            "#8\tcbtxn",
            "#@\tcbvalue",
            "#H\t_time_rcvd",
            "#P\tcurtime",
            "#X\tauxcount",
            "#\\\tauxnames",
            "#`\tauxdata",
            "#h\tworkid",
            "#p\tlp",
            "#x\tsubmitold",
            "\texpires",
            "\ttarget",
            "\tmutations",
            "\tmaxtime",
            "\tmaxtimeoff",
            "\tmintime",
            "\tmintimeoff",
            "\tminnonce",
            "\tmaxnonce",
            "\t_mrklroot",
            "\tnext_dataid",
            "blktemplate_t",
            "list_head",
            "\tnext",
            "\tprev",
            "hh_head",
            "count",
            "expand_mult",
            "prev",
            "next",
            "hh_prev",
            "hh_next",
            "keylen",
            "hashv",
            "UT_hash_table",
            "buckets",
            "num_buckets",
            "log2_num_buckets",
            "num_items",
            "tail",
            "ideal_chain_maxlen",
            "nonideal_items",
            "ineff_expands",
            "noexpand",
            "signature",
            "LOG_ERR",
            "LOG_WARNING",
            "LOG_NOTICE",
            "LOG_INFO",
            "LOG_DEBUG",
            "notifier_t",
            "cl_uint",
            "cl_ulong",
            "iVddc",
            "iActivityPercent",
            "iCurrentPerformanceLevel",
            "iCurrentBusSpeed",
            "iCurrentBusLanes",
            "iMaximumBusLanes",
            "iTemperature",
            "iFlags",
            "iMinPercent",
            "iMaxPercent",
            "iMinRPM",
            "iMaxRPM",
            "iSpeedType",
            "iFanSpeed",
            "iFlags",
            "iMin",
            "iMax",
            "iStep",
            "iNumberOfPerformanceLevels",
            "iActivityReportingSupported",
            "iDiscretePerformanceLevels",
            "sEngineClock",
            "sMemoryClock",
            "sVddc",
            "iVddc",
            "aLevels",
            "libusb_device_descriptor",
            "bLength",
            "bDescriptorType",
            "bcdUSB",
            "bDeviceClass",
            "bDeviceSubClass",
            "bDeviceProtocol",
            "bMaxPacketSize0",
            "idVendor",
            "idProduct",
            "bcdDevice",
            "iManufacturer",
            "iProduct",
            "iSerialNumber",
            "bNumConfigurations",
            "libztex_device",
            "\tmutex",
            "\troot",
            "\tfpgaNum",
            "\tdescriptor",
            "\thndl",
            "#(\tusbbus",
            "#0\tusbaddress",
            "#2\tproductId",
            "#=\tfwVersion",
            "#A\tinterfaceVersion",
            "#B\tinterfaceCapabilities",
            "#C\tmoduleReserved",
            "#I\tnumNonces",
            "#U\toffsNonces",
            "#V\tfreqM1",
            "#X\tbitFileName",
            "#`\tsuspendSupported",
            "#h\thashesPerClock",
            "#p\textraSolutions",
            "#x\tdclk",
            "\tnumberOfFpgas",
            "#A\tselectedFpga",
            "#A\tparallelConfigSupport",
            "#A\trepr",
            "libztex_dev_list",
            "\tdev",
            "\tnext",
            "libztex_hash_data",
            "\tgoldenNonce",
            "\tnonce",
            "\thash7",
            "alive",
            "LIFE_WELL",
            "LIFE_SICK",
            "LIFE_DEAD",
            "LIFE_NOSTART",
            "LIFE_INIT",
            "LIFE_WAIT",
            "gpu_adl",
            "\tlpTemperature",
            "\tiAdapterIndex",
            "\tlpAdapterID",
            "\tiBusNumber",
            "\tstrAdapterName",
            "\tlpActivity",
            "\tlpOdParameters",
            "\tDefPerfLev",
            "\tlpFanSpeedInfo",
            "\tlpFanSpeedValue",
            "\tDefFanSpeedValue",
            "\tiVddc",
            "\tiPercentage",
            "\tautofan",
            "\tautoengine",
            "\tmanaged",
            "\tlastengine",
            "\tlasttemp",
            "\ttargetfan",
            "\tovertemp",
            "\tminspeed",
            "\tmaxspeed",
            "has_fanspeed",
            "twin",
            "device_api",
            "dname",
            "name",
            "api_detect",
            "get_dev_statline_before",
            "get_dev_statline_after",
            "reinit_device",
            "get_statline_before",
            "get_statline",
            "get_api_extra_device_detail",
            "get_api_extra_device_status",
            "get_api_stats",
            "get_stats",
            "identify_device",
            "set_device",
            "thread_prepare",
            "minerloop",
            "can_limit_work",
            "thread_init",
            "prepare_work",
            "scanhash",
            "hw_error",
            "thread_shutdown",
            "thread_enable",
            "poll",
            "job_prepare",
            "job_start",
            "job_get_results",
            "job_process_results",
            " cgpu_info",
            "cgminer_id",
            "device_line_id",
            "devtype",
            "device_id",
            "dev_repr",
            "dev_repr_ns",
            "name",
            "procs",
            "proc_id",
            "proc_repr",
            "proc_repr_ns",
            "device",
            "next_proc",
            "device_path",
            "device_file",
            "#h!1",
            "work_start_tv",
            "wait_ms",
            "sleep_ms",
            "avg_wait_f",
            "avg_wait_d",
            "nonces",
            "polling",
            "flash_led",
            "device_mutex",
            "deven",
            "rolling",
            "total_mhashes",
            "utility",
            "utility_diff1",
            "status",
            "init",
            "last_message_tv",
            "threads",
            "max_hashes",
            "kname",
            "mapped",
            "virtual_gpu",
            "virtual_adl",
            "intensity",
            "dynamic",
            "vwidth",
            "work_size",
            "kernel",
            "max_alloc",
            "opt_lg",
            "lookup_gap",
            "opt_tc",
            "thread_concurrency",
            "shaders",
            "tv_gpustart",
            "intervals",
            "temp",
            "cutofftemp",
            "targettemp",
            "has_adl",
            "gpu_engine",
            "min_engine",
            "gpu_fan",
            "min_fan",
            "gpu_memclock",
            "gpu_memdiff",
            "gpu_powertune",
            "gpu_vddc",
            "diff1",
            "last_share_pool",
            "last_share_pool_time",
            "device_last_well",
            "device_last_not_well",
            "device_not_well_reason",
            "reinit_backoff",
            "thread_fail_init_count",
            "thread_zero_hash_count",
            "thread_fail_queue_count",
            "dev_sick_idle_60_count",
            "dev_dead_idle_600_count",
            "dev_nostart_count",
            "dev_over_heat_count",
            "dev_thermal_cutoff_count",
            "dev_comms_error_count",
            "dev_throttle_count",
            "api_data",
            "type",
            "name",
            "data",
            "data_was_malloc",
            "prev",
            "next",
            " work",
            "data",
            "midstate",
            "target",
            "hash",
            "rolls",
            "thr_id",
            "pool",
            "tv_staged",
            "mined",
            "clone",
            "cloned",
            "longpoll",
            "stale",
            "mandatory",
            "block",
            "queued",
            "stratum",
            "job_id",
            "nonce2",
            "ntime",
            "sdiff",
            "work_difficulty",
            "tmpl",
            "tmpl_refcount",
            "dataid",
            "tv_getwork",
            "tv_getwork_reply",
            "tv_cloned",
            "tv_work_start",
            "tv_work_found",
            "getwork_mode",
            "list",
            "#dev_enable",
            "DEV_ENABLED",
            "DEV_DISABLED",
            "DEV_RECOVER",
            "DEV_RECOVER_ERR",
            "#cl_kernels",
            "KL_NONE",
            "KL_POCLBM",
            "KL_PHATK",
            "KL_DIAKGCN",
            "KL_DIABLO",
            "KL_SCRYPT",
            "dev_reason",
            "REASON_THREAD_FAIL_INIT",
            "REASON_THREAD_ZERO_HASH",
            "REASON_THREAD_FAIL_QUEUE",
            "REASON_DEV_SICK_IDLE_60",
            "REASON_DEV_DEAD_IDLE_600",
            "REASON_DEV_NOSTART",
            "REASON_DEV_OVER_HEAT",
            "REASON_DEV_THERMAL_CUTOFF",
            "REASON_DEV_COMMS_ERROR",
            "REASON_DEV_THROTTLE",
            "_get_start",
            "getwork_attempts",
            "getwork_wait_rolling",
            "hadrolltime",
            "canroll",
            "hadexpire",
            "min_diff",
            "max_diff",
            "last_diff",
            "min_diff_count",
            "max_diff_count",
            "times_sent",
            "bytes_sent",
            "net_bytes_sent",
            "times_received",
            "bytes_received",
            "net_bytes_received",
            "%device_ztex",
            "%device_fd",
            "%device_ft232r",
            "ft232r_device_handle",
            "thread_q",
            "frozen",
            "mutex",
            "cond",
            "ctx_a",
            "ctx_b",
            "ctx_c",
            "ctx_d",
            "ctx_e",
            "ctx_f",
            "ctx_g",
            "ctx_h",
            "cty_a",
            "cty_b",
            "cty_c",
            "cty_d",
            "cty_e",
            "cty_f",
            "cty_g",
            "cty_h",
            "merkle",
            "ntime",
            "nbits",
            "nonce",
            "fW15",
            "fW01r",
            "fcty_e",
            "fcty_e2",
            "PreVal4",
            "C1addK5",
            "W17_2",
            "PreVal4addT1",
            "T1substate0",
            "PreVal4_2",
            "PreVal0",
            "PreW18",
            "PreW19",
            "PreW31",
            "PreW32",
            "B1addK6",
            "PreVal0addK7",
            "W16addK16",
            "W17addK17",
            "zeroA",
            "zeroB",
            "oneA",
            "twoA",
            "threeA",
            "fourA",
            "fiveA",
            "sixA",
            "sevenA",
            "work",
            "dev_blk_ctx",
            "#pool_enable",
            "POOL_DISABLED",
            "POOL_ENABLED",
            "POOL_REJECTING",
            "#pool_protocol",
            "PLP_NONE",
            "PLP_GETWORK",
            "PLP_GETBLOCKTEMPLATE",
            "stratum_work",
            "job_id",
            "prev_hash",
            "coinbase1",
            "coinbase2",
            "merkle",
            "bbversion",
            "nbit",
            "ntime",
            "clean",
            "cb1_len",
            "cb2_len",
            "cb_len",
            "header_len",
            "merkles",
            "diff",
            "transparency_probed",
            "transparency_time",
            "opaque",
            " pool",
            "pool_no",
            "prio",
            "seq_rejects",
            "seq_getfails",
            "solved",
            "diff1",
            "diff",
            "diff_stale",
            "submit_fail",
            "idle",
            "lagging",
            "probed",
            "force_rollntime",
            "enabled",
            "submit_old",
            "removed",
            "lp_started",
            "block_id",
            "proto",
            "hdr_path",
            "lp_url",
            "lp_id",
            "lp_proto",
            "lp_socket",
            "getwork_requested",
            "stale_shares",
            "discarded_work",
            "getfail_occasions",
            "remotefail_occasions",
            "tv_idle",
            "utility",
            "last_shares",
            "shares",
            "rpc_url",
            "rpc_userpass",
            "rpc_user",
            "rpc_pass",
            "rpc_proxy",
            "pool_lock",
            "submit_q",
            "getwork_q",
            "longpoll_thread",
            "submit_thread",
            "getwork_thread",
            "curls",
            "cr_cond",
            "curlring",
            "sws_waiting_on_curl",
            "last_share_time",
            "best_diff",
            "stratum_url",
            "stratum_port",
            "stratum_curl",
            "sock",
            "sockbuf",
            "sockbuf_size",
            "sockaddr_url",
            "nonce1",
            "n1_len",
            "nonce2",
            "n2size",
            "has_stratum",
            "stratum_active",
            "last_work_time",
            "stratum_auth",
            "stratum_notify",
            "swork",
            "stratum_thread",
            "stratum_lock",
            "last_work_lock",
            "last_work_copy",
            "submit_work_state",
            "#test_nonce2_result",
            "TNR_GOOD",
            "TNR_HIGH",
            "TNR_BAD",
            "#api_data_type",
            "API_ESCAPE",
            "API_STRING",
            "API_CONST",
            "API_INT",
            "API_UINT",
            "API_UINT32",
            "API_UINT64",
            "API_DOUBLE",
            "API_ELAPSED",
            "API_BOOL",
            "API_TIMEVAL",
            "API_TIME",
            "API_MHS",
            "API_MHTOTAL",
            "API_TEMP",
            "API_UTILITY",
            "API_FREQ",
            "API_VOLTS",
            "API_HS",
            "API_DIFF",
            "API_JSON",
            "&_curl_easy_setopt_err_long",
            "&_curl_easy_setopt_err_curl_off_t",
            "&_curl_easy_setopt_err_string",
            "&_curl_easy_setopt_err_write_callback",
            "&_curl_easy_setopt_err_read_cb",
            "&_curl_easy_setopt_err_ioctl_cb",
            "&_curl_easy_setopt_err_sockopt_cb",
            "&_curl_easy_setopt_err_opensocket_cb",
            "&_curl_easy_setopt_err_progress_cb",
            "&_curl_easy_setopt_err_debug_cb",
            "&_curl_easy_setopt_err_ssl_ctx_cb",
            "&_curl_easy_setopt_err_conv_cb",
            "&_curl_easy_setopt_err_seek_cb",
            "&_curl_easy_setopt_err_cb_data",
            "&_curl_easy_setopt_err_error_buffer",
            "&_curl_easy_setopt_err_FILE",
            "&_curl_easy_setopt_err_postfields",
            "&_curl_easy_setopt_err_curl_httpost",
            "&_curl_easy_setopt_err_curl_slist",
            "&_curl_easy_setopt_err_CURLSH",
            "&_curl_easy_getinfo_err_string",
            "&_curl_easy_getinfo_err_long",
            "&_curl_easy_getinfo_err_double",
            "&_curl_easy_getinfo_err_curl_slist",
            "'swab32",
            ")swap32yes",
            "(out",
            "*swapcounter",
            ")mutex_lock",
            "(lock",
            ")mutex_unlock",
            "(lock",
            "+ztex_selectFpga",
            "+ztex_releaseFpga",
            "-ztex_setup",
            ".dev",
            "-ztex_autodetect",
            "0cnt",
            "T0totaldevs",
            "h0ztex_devices",
            "1ztex_detect",
            "-ztex_change_clock_func",
            ".thr",
            ".bestM",
            "-ztex_updateFreq",
            ".thr",
            "h0rv",
            "-ztex_checkNonce",
            ".work",
            ".hdata",
            "0data32",
            "h0swap",
            "0swap32",
            "`0hash1",
            "~0hash2",
            "~0hash2_32",
            "-ztex_scanhash",
            ".thr",
            ".work",
            ".max_nonce",
            "0sendbuf",
            "T0backlog",
            "0backlog_p",
            "P0backlog_max",
            "0lastnonce",
            "0nonce",
            "0noncecnt",
            "L0overflow",
            "K0found",
            "J0hdata",
            "~0count",
            ")ztex_statline_before",
            "(buf",
            "(cgpu",
            "*before",
            "@2pE",
            "P*snStringLen",
            "'get_ztex_api_extra_device_status",
            "*root",
            "h*ztexr",
            "*frequency",
            "'ztex_prepare",
            "(thr",
            "*now",
            "P*cgpu",
            ")ztex_shutdown",
            "(thr",
            "*cgpu",
            ")ztex_disable",
            "(thr",
            "7devices",
            "8ztex_api",
            "GNU C 4.6.3",
            "libztex.c",
            "/home/luke-jr/Projects/Education/Tonal/BitCoin/cgminer",
            "char",
            "size_t",
            "long long unsigned int",
            "ssize_t",
            "long long int",
            "short unsigned int",
            "long int",
            "unsigned int",
            "long unsigned int",
            "unsigned char",
            "_iobuf",
            "_ptr",
            "_cnt",
            "_base",
            "_flag",
            "_file",
            "_charbuf",
            "_bufsiz",
            "_tmpfname",
            "FILE",
            "float",
            "signed char",
            "short int",
            "double",
            "long double",
            "pthread_mutex_t",
            "pthread_mutex_t_",
            "uint8_t",
            "int16_t",
            "uint16_t",
            "uint32_t",
            "int64_t",
            "uint64_t",
            "dclk_data",
            "freqM",
            "freqMaxM",
            "freqMDefault",
            "minGoodSamples",
            "errorCount",
            "errorWeight",
            "errorRate",
            "maxErrorRate",
            "_Bool",
            "LOG_ERR",
            "LOG_WARNING",
            "LOG_NOTICE",
            "LOG_INFO",
            "LOG_DEBUG",
            "libusb_descriptor_type",
            "LIBUSB_DT_DEVICE",
            "LIBUSB_DT_CONFIG",
            "LIBUSB_DT_STRING",
            "LIBUSB_DT_INTERFACE",
            "LIBUSB_DT_ENDPOINT",
            "LIBUSB_DT_HID",
            "LIBUSB_DT_REPORT",
            "LIBUSB_DT_PHYSICAL",
            "LIBUSB_DT_HUB",
            "libusb_endpoint_direction",
            "LIBUSB_ENDPOINT_IN",
            "LIBUSB_ENDPOINT_OUT",
            "libusb_standard_request",
            "LIBUSB_REQUEST_GET_STATUS",
            "LIBUSB_REQUEST_CLEAR_FEATURE",
            "LIBUSB_REQUEST_SET_FEATURE",
            "LIBUSB_REQUEST_SET_ADDRESS",
            "LIBUSB_REQUEST_GET_DESCRIPTOR",
            "LIBUSB_REQUEST_SET_DESCRIPTOR",
            "LIBUSB_REQUEST_GET_CONFIGURATION",
            "LIBUSB_REQUEST_SET_CONFIGURATION",
            "LIBUSB_REQUEST_GET_INTERFACE",
            "LIBUSB_REQUEST_SET_INTERFACE",
            "LIBUSB_REQUEST_SYNCH_FRAME",
            "libusb_device_descriptor",
            "bLength",
            "bDescriptorType",
            "bcdUSB",
            "bDeviceClass",
            "bDeviceSubClass",
            "bDeviceProtocol",
            "bMaxPacketSize0",
            "idVendor",
            "idProduct",
            "bcdDevice",
            "iManufacturer",
            "iProduct",
            "iSerialNumber",
            "bNumConfigurations",
            "libusb_error",
            "LIBUSB_SUCCESS",
            "LIBUSB_ERROR_IO",
            "LIBUSB_ERROR_INVALID_PARAM",
            "LIBUSB_ERROR_ACCESS",
            "LIBUSB_ERROR_NO_DEVICE",
            "LIBUSB_ERROR_NOT_FOUND",
            "LIBUSB_ERROR_BUSY",
            "LIBUSB_ERROR_TIMEOUT",
            "LIBUSB_ERROR_OVERFLOW",
            "LIBUSB_ERROR_PIPE",
            "LIBUSB_ERROR_INTERRUPTED",
            "LIBUSB_ERROR_NO_MEM",
            "LIBUSB_ERROR_NOT_SUPPORTED",
            "LIBUSB_ERROR_OTHER",
            "libztex_fpgastate",
            "fpgaConfigured",
            "fpgaChecksum",
            "fpgaBytes",
            "fpgaInitB",
            "fpgaFlashResult",
            "fpgaFlashBitSwap",
            "libztex_device",
            " \t-h",
            "mutex",
            "root",
            "fpgaNum",
            "descriptor",
            "hndl",
            "usbbus",
            "usbaddress",
            "snString",
            "productId",
            "fwVersion",
            "interfaceVersion",
            "interfaceCapabilities",
            "moduleReserved",
            "numNonces",
            "offsNonces",
            "freqM1",
            "bitFileName",
            "suspendSupported",
            "hashesPerClock",
            "extraSolutions",
            "dclk",
            "numberOfFpgas",
            "selectedFpga",
            "parallelConfigSupport",
            "repr",
            "libztex_dev_list",
            "next",
            "libztex_hash_data",
            "goldenNonce",
            "nonce",
            "hash7",
            "check_result",
            "CHECK_ERROR",
            "CHECK_IS_NOT_ZTEX",
            "CHECK_OK",
            "CHECK_RESCAN",
            "_curl_easy_setopt_err_long",
            "_curl_easy_setopt_err_curl_off_t",
            "_curl_easy_setopt_err_string",
            "_curl_easy_setopt_err_write_callback",
            "_curl_easy_setopt_err_read_cb",
            "_curl_easy_setopt_err_ioctl_cb",
            "_curl_easy_setopt_err_sockopt_cb",
            "_curl_easy_setopt_err_opensocket_cb",
            "_curl_easy_setopt_err_progress_cb",
            "_curl_easy_setopt_err_debug_cb",
            "_curl_easy_setopt_err_ssl_ctx_cb",
            "_curl_easy_setopt_err_conv_cb",
            "_curl_easy_setopt_err_seek_cb",
            "_curl_easy_setopt_err_cb_data",
            "_curl_easy_setopt_err_error_buffer",
            "_curl_easy_setopt_err_FILE",
            "_curl_easy_setopt_err_postfields",
            "_curl_easy_setopt_err_curl_httpost",
            "_curl_easy_setopt_err_curl_slist",
            "_curl_easy_setopt_err_CURLSH",
            "_curl_easy_getinfo_err_string",
            "_curl_easy_getinfo_err_long",
            "_curl_easy_getinfo_err_double",
            "_curl_easy_getinfo_err_curl_slist",
            "libusb_cpu_to_le16",
            "_tmp",
            "libztex_get_string_descriptor_ascii",
            "desc_index",
            "data",
            "langid",
            "libztex_firmwareReset",
            "hndl",
            "enable",
            "reset",
            "libztex_checkDevice",
            "hndl",
            "desc",
            "got_bytes",
            "fw_buf",
            "done",
            "productString",
            "productID2",
            "!numbytes",
            "\"libztex_checkCapability",
            "\"libztex_detectBitstreamBitOrder",
            "$buf",
            "$size",
            "%libztex_swapBits",
            "$buf",
            "$size",
            "\"libztex_getFpgaState",
            "$state",
            "!buf",
            "`!cnt",
            "\"libztex_configureFpgaHS",
            "$force",
            "!state",
            "X!buf",
            "!settings",
            "!tries",
            "\\!cnt",
            "!err",
            "D!fp",
            "\"libztex_configureFpgaLS",
            "$force",
            "!state",
            "X!buf",
            "!tries",
            "\\!cnt",
            "@ RE",
            "libztex_configureFpga",
            "!buf",
            "}!rv",
            "libztex_numberOfFpgas",
            "!cnt",
            "l!buf",
            "libztex_selectFpga",
            "!cnt",
            "d!fpgacnt",
            "l!number",
            "libztex_setFreq",
            "$freq",
            "!cnt",
            "h!oldfreq",
            "libztex_resetFpga",
            "libztex_suspend",
            "libztex_prepare_device",
            "$dev",
            "!newdev",
            "!cnt",
            "L!err",
            "!buf",
            "libztex_destroy_device",
            "libztex_scanDevices",
            "$devs_p",
            "!usbdevices",
            "o!devs",
            "X&0'",
            "o!found",
            "T!max_found",
            "P!pos",
            "L!err",
            "!rescan",
            "H!ret",
            "D!list",
            "o!cnt",
            "done",
            "libztex_sendHashData",
            "$sendbuf",
            "!cnt",
            "l!ret",
            "h!len",
            "libztex_readHashData",
            "$nonces",
            "!bufsize",
            "H!cnt",
            "T!ret",
            "P!len",
            "L!rbuf",
            "libztex_freeDevList",
            "$devs",
            "!done",
            "o!cnt",
            "GNU C 4.6.3",
            "strtok_r.c",
            "/home/luke-jr/Projects/Education/Tonal/BitCoin/cgminer/lib",
            "char",
            "long long unsigned int",
            "long long int",
            "short unsigned int",
            "long int",
            "unsigned int",
            "long unsigned int",
            "unsigned char",
            "strtok_r",
            "delim",
            "save_ptr",
            "token",
            "GNU C 4.6.3",
            "sigaction.c",
            "/home/luke-jr/Projects/Education/Tonal/BitCoin/cgminer/lib",
            "char",
            "long long unsigned int",
            "long long int",
            "short unsigned int",
            "long int",
            "unsigned int",
            "long unsigned int",
            "unsigned char",
            "__p_sig_fn_t",
            "_pid_t",
            "pid_t",
            "sigset_t",
            "sigval",
            "\tsival_int",
            "\tsival_ptr",
            "si_signo",
            "si_code",
            "si_errno",
            "si_pid",
            "si_uid",
            "si_addr",
            "si_status",
            "si_band",
            "si_value",
            "\t_sa_handler",
            "\t_sa_sigaction",
            "_sa_func",
            "sa_mask",
            "sa_flags",
            "signed char",
            "short int",
            "double",
            "float",
            "long double",
            "handler_t",
            "sigaction_handler",
            "handler",
            "mask",
            "oldmask",
            "oact",
            "mask",
            "oldmask",
            "failure",
            "action_array",
            "GNU C 4.6.3",
            "sigprocmask.c",
            "/home/luke-jr/Projects/Education/Tonal/BitCoin/cgminer/lib",
            "char",
            "long long unsigned int",
            "long long int",
            "short unsigned int",
            "long int",
            "unsigned int",
            "long unsigned int",
            "unsigned char",
            "sig_atomic_t",
            "__p_sig_fn_t",
            "sigset_t",
            "signed char",
            "short int",
            "double",
            "float",
            "long double",
            "handler_t",
            "sigismember",
            "\tset",
            "\tsig",
            "sigemptyset",
            "\tset",
            "sigaddset",
            "\tset",
            "\tsig",
            "sigdelset",
            "\tset",
            "\tsig",
            "sigfillset",
            "\tset",
            "blocked_handler",
            "\tsig",
            "sigpending",
            "\tset",
            "pending",
            "sigprocmask",
            "\toperation",
            "\tset",
            "\told_set",
            "new_blocked_set",
            "to_unblock",
            "to_block",
            "received",
            "rpl_signal",
            "handler",
            "result",
            "blocked_set",
            "pending_array",
            "old_handlers",
            "GNU C 4.6.3",
            "memchr.c",
            "/home/luke-jr/Projects/Education/Tonal/BitCoin/cgminer/lib",
            "char",
            "size_t",
            "long long unsigned int",
            "long long int",
            "short unsigned int",
            "long int",
            "unsigned int",
            "long unsigned int",
            "unsigned char",
            "rpl_memchr",
            "c_in",
            "longword",
            "\tchar_ptr",
            "h\tlongword_ptr",
            "`\trepeated_one",
            "X\trepeated_c",
            "\tlongword1",
            "GNU C 4.6.3",
            "memmem.c",
            "/home/luke-jr/Projects/Education/Tonal/BitCoin/cgminer/lib",
            "char",
            "size_t",
            "long long unsigned int",
            "long long int",
            "short unsigned int",
            "long int",
            "unsigned int",
            "long unsigned int",
            "unsigned char",
            "signed char",
            "short int",
            "critical_factorization",
            "max_suffix",
            "max_suffix_rev",
            "two_way_short_needle",
            "suffix",
            "memory",
            "two_way_long_needle",
            "suffix",
            "shift_table",
            "memory",
            "shift",
            "shift",
            "memmem",
            "haystack_start",
            "needle_start",
            "GNU C 4.6.3",
            "opt/usage.c",
            "/home/luke-jr/Projects/Education/Tonal/BitCoin/cgminer/ccan",
            "char",
            "size_t",
            "long long unsigned int",
            "long long int",
            "short unsigned int",
            "long int",
            "unsigned int",
            "long unsigned int",
            "unsigned char",
            "double",
            "float",
            "long double",
            "opt_type",
            "OPT_NOARG",
            "OPT_HASARG",
            "OPT_SUBTABLE",
            "OPT_END",
            "carg",
            "tlen",
            "names",
            "type",
            "cb_arg",
            "show",
            "desc",
            "signed char",
            "short int",
            "write_short_options",
            "opt_usage",
            "argv0",
            "extra",
            "opt_hidden",
            "opt_count",
            "opt_num_short",
            "GNU C 4.6.3",
            "opt/opt.c",
            "/home/luke-jr/Projects/Education/Tonal/BitCoin/cgminer/ccan",
            "__gnuc_va_list",
            "__builtin_va_list",
            "char",
            "va_list",
            "size_t",
            "long long unsigned int",
            "long long int",
            "short unsigned int",
            "long int",
            "unsigned int",
            "long unsigned int",
            "unsigned char",
            "double",
            "float",
            "long double",
            "opt_type",
            "OPT_NOARG",
            "OPT_HASARG",
            "OPT_SUBTABLE",
            "OPT_END",
            "carg",
            "tlen",
            "type",
            "cb_arg",
            "show",
            "desc",
            "signed char",
            "short int",
            "first_name",
            "next_name",
            "first_opt",
            "next_opt",
            "first_lopt",
            "next_lopt",
            "first_sopt",
            "next_sopt",
            "check_opt",
            "entry",
            "add_opt",
            "entry",
            "_opt_register",
            "type",
            "cb_arg",
            "show",
            "desc",
            "opt_register_table",
            "entry",
            "desc",
            "start",
            "heading",
            "opt_parse",
            "argc",
            "argv",
            "errlog",
            "offset",
            "original_argv0",
            "_Bool",
            "opt_free_table",
            "opt_log_stderr",
            "opt_log_stderr_exit",
            "opt_invalid_argument",
            "opt_count",
            "opt_num_short",
            "opt_num_short_arg",
            "opt_num_long",
            "opt_argv0",
            "GNU C 4.6.3",
            "opt/helpers.c",
            "/home/luke-jr/Projects/Education/Tonal/BitCoin/cgminer/ccan",
            "char",
            "size_t",
            "long long unsigned int",
            "long long int",
            "short unsigned int",
            "long int",
            "unsigned int",
            "long unsigned int",
            "unsigned char",
            "double",
            "float",
            "long double",
            "arg_bad",
            "opt_set_bool",
            "_Bool",
            "opt_set_invbool",
            "opt_set_bool_arg",
            "opt_set_invbool_arg",
            "opt_set_charp",
            "opt_set_intval",
            "opt_set_floatval",
            "endp",
            "opt_set_uintval",
            "opt_set_longval",
            "endp",
            "opt_set_ulongval",
            "opt_inc_intval",
            "opt_version_and_exit",
            "version",
            "opt_usage_and_exit",
            "extra",
            "opt_show_bool",
            "opt_show_invbool",
            "opt_show_charp",
            "opt_show_intval",
            "opt_show_floatval",
            "opt_show_uintval",
            "opt_show_longval",
            "opt_show_ulongval",
            "opt_argv0",
            "GNU C 4.6.3",
            "opt/parse.c",
            "/home/luke-jr/Projects/Education/Tonal/BitCoin/cgminer/ccan",
            "char",
            "size_t",
            "long long unsigned int",
            "long long int",
            "short unsigned int",
            "long int",
            "unsigned int",
            "long unsigned int",
            "unsigned char",
            "double",
            "float",
            "long double",
            "opt_type",
            "OPT_NOARG",
            "OPT_HASARG",
            "OPT_SUBTABLE",
            "OPT_END",
            "carg",
            "tlen",
            "names",
            "type",
            "cb_arg",
            "show",
            "desc",
            "parse_err",
            "errlog",
            "argv0",
            "problem",
            "consume_option",
            "argc",
            "argv",
            "optnum",
            "parse_one",
            "argc",
            "argv",
            "offset",
            "errlog",
            "optarg",
            "problem",
            "/usr/x86_64-w64-mingw32/mingw/include",
            "/usr/x86_64-w64-mingw32/mingw/include/curl",
            "/usr/x86_64-w64-mingw32/mingw/include/sys",
            "./lib",
            "/usr/x86_64-w64-mingw32/mingw/include/psdk_inc",
            "./ccan/opt",
            "libblkmaker",
            "/usr/x86_64-w64-mingw32/usr/include/libusb-1.0",
            "jansson.h",
            "typecheck-gcc.h",
            "compat.h",
            "elist.h",
            "util.h",
            "miner.h",
            "miner.c",
            "stdarg.h",
            "_mingw.h",
            "stdio.h",
            "_mingw_off_t.h",
            "curses.h",
            "stdlib.h",
            "stdint.h",
            "types.h",
            "time.h",
            "_timeval.h",
            "signal.h",
            "_mingw_stat64.h",
            "windef.h",
            "basetsd.h",
            "winnt.h",
            "wincon.h",
            "_bsd_types.h",
            "_socket_types.h",
            "_fd_types.h",
            "_ip_types.h",
            "_varenum.h",
            "opt.h",
            "curl.h",
            "multi.h",
            "sha2.h",
            "blktemplate.h",
            "pthread.h",
            "uthash.h",
            "logging.h",
            "cl_platform.h",
            "adl_structures.h",
            "libusb.h",
            "dynclock.h",
            "libztex.h",
            "blkmaker.h",
            "adl.h",
            "driver-opencl.h",
            "(fJ0J0J2J0J0J0J0J2J0J0J0J0J0J1J1J0J0J0J0J1J0J0J0J",
            ">vYiuu",
            "!iii",
            "!uY1",
            "zJAENF?G>rKs",
            "G0HKI",
            "!KiKi",
            "YiY1Y1",
            "YwYiY",
            "ZYiZ",
            "ZYiZ",
            ">YiuvuY1",
            "uYi\u05ed",
            "HhHg",
            "!iYiYiYjYiYkY",
            "fiiYYKj",
            "DA??&\u05d1k",
            "gYvYihk",
            "gi113",
            "wrL>>",
            "gKm\u0313[",
            "<D@$i",
            "qt@C",
            "/Ylu\u0292v1uvZ1",
            "hguKu",
            "=YY[",
            ". xZ",
            "0Ki\u02ad",
            "hKkL",
            " gKi",
            "IKIuIuIuI",
            "\t\u4ee0wi",
            "<w\u033bu",
            "0hKu",
            "0=:j",
            "gKLY",
            "bvKw",
            "v00\"",
            "00HvHuI",
            "=uwKu1u",
            "uuuuuuuYY",
            "YYZYZYZY[",
            "n.@@",
            "<#Y$Yj",
            "0\u02bcYi",
            "vvYi",
            "\u026d[IuI",
            ", K\u027b=i",
            "giKw",
            "yoxpvrus",
            "IYLuYi",
            "Ki\u5144xu",
            "zIuI",
            "* IuI",
            " [Yu",
            "=YKj",
            "ff@@",
            ">uuuK",
            "=YYug",
            "0t\u05d1\u0611\u05d4\u05d4\u05d4\u05d8[",
            "/usr/x86_64-w64-mingw32/mingw/include/curl",
            "/usr/x86_64-w64-mingw32/mingw/include",
            "/usr/x86_64-w64-mingw32/mingw/include/psdk_inc",
            "/usr/x86_64-w64-mingw32/mingw/include/sys",
            "libblkmaker",
            "/usr/x86_64-w64-mingw32/usr/include/libusb-1.0",
            "compat.h",
            "typecheck-gcc.h",
            "util.h",
            "deviceapi.c",
            "_mingw.h",
            "windef.h",
            "basetsd.h",
            "_timeval.h",
            "_bsd_types.h",
            "_socket_types.h",
            "_fd_types.h",
            "stdint.h",
            "timeb.h",
            "pthread.h",
            "stdio.h",
            "curl.h",
            "blktemplate.h",
            "elist.h",
            "uthash.h",
            "logging.h",
            "cl_platform.h",
            "adl_structures.h",
            "libusb.h",
            "dynclock.h",
            "miner.h",
            "libztex.h",
            "&fJ0J0J2J0J0J0J0J2J0J0J0J0J0J1J1J0J0J0J0J1J0J0J0J",
            "\t \\\u05ed",
            "zX&\\",
            "\"Yi\u746d",
            "/usr/x86_64-w64-mingw32/mingw/include",
            "/usr/x86_64-w64-mingw32/mingw/include/curl",
            "/usr/x86_64-w64-mingw32/mingw/include/sys",
            "/usr/x86_64-w64-mingw32/mingw/include/psdk_inc",
            "libblkmaker",
            "/usr/x86_64-w64-mingw32/usr/include/libusb-1.0",
            "jansson.h",
            "typecheck-gcc.h",
            "elist.h",
            "compat.h",
            "util.h",
            "miner.h",
            "util.c",
            "_mingw.h",
            "stdio.h",
            "stdlib.h",
            "_timeval.h",
            "timeb.h",
            "pthread.h",
            "windef.h",
            "basetsd.h",
            "winnt.h",
            "_bsd_types.h",
            "inaddr.h",
            "_socket_types.h",
            "_fd_types.h",
            "_ip_types.h",
            "ws2tcpip.h",
            "mstcpip.h",
            "stdint.h",
            "curl.h",
            "blktemplate.h",
            "uthash.h",
            "logging.h",
            "cl_platform.h",
            "adl_structures.h",
            "libusb.h",
            "dynclock.h",
            "libztex.h",
            "(fJ0J0J2J0J0J0J0J2J0J0J0J0J0J1J1J0J0J0J0J1J0J0J0J",
            "' Kwuuu",
            "uiYY",
            "iiiL",
            "=Kiu",
            "\t iw",
            "\"uYi",
            "lrus",
            "uuuuuu[",
            "\u026dwsus",
            "usgsus",
            "/usr/x86_64-w64-mingw32/mingw/include",
            "sha2.c",
            "sha2.h",
            "stdint.h",
            "=gw0Y",
            "/usr/x86_64-w64-mingw32/mingw/include",
            "/usr/x86_64-w64-mingw32/mingw/include/curl",
            "/usr/x86_64-w64-mingw32/mingw/include/sys",
            "/usr/x86_64-w64-mingw32/mingw/include/psdk_inc",
            "libblkmaker",
            "/usr/x86_64-w64-mingw32/usr/include/libusb-1.0",
            "compat.h",
            "jansson.h",
            "typecheck-gcc.h",
            "miner.h",
            "api.c",
            "_mingw.h",
            "stdio.h",
            "stdint.h",
            "types.h",
            "windef.h",
            "basetsd.h",
            "_timeval.h",
            "_bsd_types.h",
            "inaddr.h",
            "_socket_types.h",
            "_ip_types.h",
            "pthread.h",
            "ws2tcpip.h",
            "curl.h",
            "blktemplate.h",
            "elist.h",
            "uthash.h",
            "logging.h",
            "util.h",
            "cl_platform.h",
            "adl_structures.h",
            "libusb.h",
            "dynclock.h",
            "libztex.h",
            "_varenum.h",
            ">vYiuu",
            "(fJ0J0J2J0J0J0J0J2J0J0J0J0J0J1J1J0J0J0J0J1J0J0J0J",
            "hYwi1",
            "K0gK0K",
            "vKwuv\u0644Ki",
            "\u063buu\u7bbb",
            "g#Kw",
            "K0K0K1K\"L",
            "uuu\u067b",
            "00-0#",
            "\"uui",
            "\"uui",
            "Z00000000%",
            "u0uuuuuu0",
            "[<BA",
            "[gZgYgZg",
            "/usr/x86_64-w64-mingw32/mingw/include/curl",
            "/usr/x86_64-w64-mingw32/mingw/include",
            "/usr/x86_64-w64-mingw32/mingw/include/psdk_inc",
            "compat.h",
            "typecheck-gcc.h",
            "miner.h",
            "logging.c",
            "vadefs.h",
            "_mingw.h",
            "_timeval.h",
            "time.h",
            "pthread.h",
            "logging.h",
            "stdio.h",
            "_varenum.h",
            "fJ0J0J2J0J0J0J0J2J0J0J0J0J0J1J1J0J0J0J0J1J0J0J0J",
            "zJAENFMG>r=s",
            "/usr/x86_64-w64-mingw32/mingw/include/curl",
            "/usr/x86_64-w64-mingw32/mingw/include",
            "/usr/x86_64-w64-mingw32/mingw/include/psdk_inc",
            "libblkmaker",
            "/usr/x86_64-w64-mingw32/usr/include/libusb-1.0",
            "typecheck-gcc.h",
            "miner.h",
            "driver-opencl.c",
            "_mingw.h",
            "basetsd.h",
            "windef.h",
            "_timeval.h",
            "_socket_types.h",
            "stdio.h",
            "curses.h",
            "stdint.h",
            "pthread.h",
            "compat.h",
            "curl.h",
            "blktemplate.h",
            "elist.h",
            "uthash.h",
            "logging.h",
            "util.h",
            "cl_platform.h",
            "cl.h",
            "adl_structures.h",
            "libusb.h",
            "dynclock.h",
            "libztex.h",
            "_varenum.h",
            "ocl.h",
            "adl.h",
            "J0J0J2J0J0J0J0J2J0J0J0J0J0J1J1J0J0J0J0J1J0J0J0J",
            "vYMw",
            "jYiu",
            "lYkuL",
            "lYnu",
            "{pxpwqwqiq",
            "\u05fbZZZ",
            "0012#",
            "/usr/x86_64-w64-mingw32/mingw/include/curl",
            "/usr/x86_64-w64-mingw32/mingw/include",
            "/usr/x86_64-w64-mingw32/mingw/include/sys",
            "/usr/x86_64-w64-mingw32/mingw/include/psdk_inc",
            "libblkmaker",
            "/usr/x86_64-w64-mingw32/usr/include/libusb-1.0",
            "typecheck-gcc.h",
            "ocl.c",
            "_mingw.h",
            "types.h",
            "_mingw_off_t.h",
            "stdio.h",
            "basetsd.h",
            "_timeval.h",
            "_socket_types.h",
            "pthread.h",
            "_mingw_stat64.h",
            "stdint.h",
            "curl.h",
            "blktemplate.h",
            "elist.h",
            "uthash.h",
            "logging.h",
            "util.h",
            "cl_platform.h",
            "cl.h",
            "adl_structures.h",
            "libusb.h",
            "dynclock.h",
            "miner.h",
            "libztex.h",
            "_varenum.h",
            "ocl.h",
            "J0J0J2J0J0J0J0J2J0J0J0J0J0J1J1J0J0J0J0J1J0J0J0J",
            "\tuuuv",
            "ugggggL",
            "MhYKU$",
            "[/=s",
            "/YsK",
            "/usr/x86_64-w64-mingw32/mingw/include/curl",
            "/usr/x86_64-w64-mingw32/mingw/include",
            "/usr/x86_64-w64-mingw32/mingw/include/psdk_inc",
            "libblkmaker",
            "/usr/x86_64-w64-mingw32/usr/include/libusb-1.0",
            "typecheck-gcc.h",
            "findnonce.c",
            "_mingw.h",
            "stdio.h",
            "stdint.h",
            "_timeval.h",
            "pthread.h",
            "basetsd.h",
            "_socket_types.h",
            "curl.h",
            "blktemplate.h",
            "elist.h",
            "uthash.h",
            "logging.h",
            "util.h",
            "cl_platform.h",
            "adl_structures.h",
            "libusb.h",
            "dynclock.h",
            "miner.h",
            "libztex.h",
            "_varenum.h",
            "J0J0J2J0J0J0J0J2J0J0J0J0J0J1J1J0J0J0J0J1J0J0J0J",
            "/usr/x86_64-w64-mingw32/mingw/include/curl",
            "/usr/x86_64-w64-mingw32/mingw/include",
            "/usr/x86_64-w64-mingw32/mingw/include/psdk_inc",
            "/usr/x86_64-w64-mingw32/mingw/include/sys",
            "libblkmaker",
            "/usr/x86_64-w64-mingw32/usr/include/libusb-1.0",
            "typecheck-gcc.h",
            "compat.h",
            "miner.h",
            "adl.c",
            "_mingw.h",
            "stdio.h",
            "curses.h",
            "windef.h",
            "basetsd.h",
            "_timeval.h",
            "_socket_types.h",
            "stdint.h",
            "timeb.h",
            "pthread.h",
            "curl.h",
            "blktemplate.h",
            "elist.h",
            "uthash.h",
            "logging.h",
            "util.h",
            "cl_platform.h",
            "adl_defines.h",
            "adl_structures.h",
            "adl_sdk.h",
            "libusb.h",
            "dynclock.h",
            "libztex.h",
            "_varenum.h",
            "adl_functions.h",
            "J0J0J2J0J0J0J0J2J0J0J0J0J0J1J1J0J0J0J0J1J0J0J0J",
            ">vYiuu",
            "(fik",
            "sZsY",
            "gwYi",
            "#Y=i",
            "#Y=i",
            "-#Yiu1v",
            "YgYYi",
            "YY=i",
            "YY=iv",
            "YY=j",
            "!ZYj",
            " Y=\\",
            " Y=[",
            "Z=jv",
            "uY=m",
            "uvYiu",
            "/usr/x86_64-w64-mingw32/mingw/include/curl",
            "/usr/x86_64-w64-mingw32/mingw/include",
            "/usr/x86_64-w64-mingw32/mingw/include/psdk_inc",
            "libblkmaker",
            "/usr/x86_64-w64-mingw32/usr/include/libusb-1.0",
            "typecheck-gcc.h",
            "miner.h",
            "scrypt.c",
            "_mingw.h",
            "basetsd.h",
            "_timeval.h",
            "_socket_types.h",
            "stdint.h",
            "pthread.h",
            "stdio.h",
            "curl.h",
            "blktemplate.h",
            "elist.h",
            "uthash.h",
            "logging.h",
            "util.h",
            "cl_platform.h",
            "adl_structures.h",
            "libusb.h",
            "dynclock.h",
            "libztex.h",
            "_varenum.h",
            "J0J0J2J0J0J0J0J2J0J0J0J0J0J1J1J0J0J0J0J1J0J0J0J",
            "/usr/x86_64-w64-mingw32/mingw/include/curl",
            "/usr/x86_64-w64-mingw32/mingw/include",
            "/usr/x86_64-w64-mingw32/mingw/include/psdk_inc",
            "libblkmaker",
            "/usr/x86_64-w64-mingw32/usr/include/libusb-1.0",
            "elist.h",
            "typecheck-gcc.h",
            "miner.h",
            "fpgautils.c",
            "vadefs.h",
            "_mingw.h",
            "windef.h",
            "basetsd.h",
            "winnt.h",
            "winbase.h",
            "_timeval.h",
            "_socket_types.h",
            "stdint.h",
            "logging.h",
            "pthread.h",
            "stdio.h",
            "curl.h",
            "blktemplate.h",
            "uthash.h",
            "util.h",
            "cl_platform.h",
            "adl_structures.h",
            "libusb.h",
            "dynclock.h",
            "libztex.h",
            "_varenum.h",
            "fpgautils.h",
            "8fJ0J0J2J0J0J0J0J2J0J0J0J0J0J1J1J0J0J0J0J1J0J0J0J",
            "rf@A",
            "xC=k",
            "uuu\u026d",
            "ugugL",
            "x?$Ki",
            "/usr/x86_64-w64-mingw32/mingw/include/curl",
            "/usr/x86_64-w64-mingw32/mingw/include",
            "/usr/x86_64-w64-mingw32/mingw/include/psdk_inc",
            "libblkmaker",
            "/usr/x86_64-w64-mingw32/usr/include/libusb-1.0",
            "typecheck-gcc.h",
            "dynclock.c",
            "_mingw.h",
            "stdint.h",
            "dynclock.h",
            "miner.h",
            "basetsd.h",
            "_timeval.h",
            "_socket_types.h",
            "pthread.h",
            "stdio.h",
            "curl.h",
            "blktemplate.h",
            "elist.h",
            "uthash.h",
            "logging.h",
            "util.h",
            "cl_platform.h",
            "adl_structures.h",
            "libusb.h",
            "libztex.h",
            "J0J0J2J0J0J0J0J2J0J0J0J0J0J1J1J0J0J0J0J1J0J0J0J",
            "/usr/x86_64-w64-mingw32/mingw/include/curl",
            "/usr/x86_64-w64-mingw32/mingw/include",
            "/usr/x86_64-w64-mingw32/mingw/include/sys",
            "/usr/x86_64-w64-mingw32/mingw/include/psdk_inc",
            "libblkmaker",
            "/usr/x86_64-w64-mingw32/usr/include/libusb-1.0",
            "compat.h",
            "typecheck-gcc.h",
            "miner.h",
            "driver-bitforce.c",
            "_mingw.h",
            "_timeval.h",
            "timeb.h",
            "pthread.h",
            "stdint.h",
            "stdio.h",
            "windef.h",
            "basetsd.h",
            "_socket_types.h",
            "curl.h",
            "blktemplate.h",
            "elist.h",
            "uthash.h",
            "logging.h",
            "util.h",
            "cl_platform.h",
            "adl_structures.h",
            "libusb.h",
            "dynclock.h",
            "libztex.h",
            "_varenum.h",
            ">vYiuu",
            "fJ0J0J2J0J0J0J0J2J0J0J0J0J0J1J1J0J0J0J0J1J0J0J0J",
            "ugZx",
            "h<AA",
            "YV#j",
            "!i\u025fiiiY1\u027d",
            "/usr/x86_64-w64-mingw32/mingw/include/curl",
            "/usr/x86_64-w64-mingw32/mingw/include",
            "/usr/x86_64-w64-mingw32/mingw/include/psdk_inc",
            "libblkmaker",
            "/usr/x86_64-w64-mingw32/usr/include/libusb-1.0",
            "typecheck-gcc.h",
            "driver-icarus.c",
            "_mingw.h",
            "basetsd.h",
            "_timeval.h",
            "_socket_types.h",
            "pthread.h",
            "stdio.h",
            "stdint.h",
            "dynclock.h",
            "miner.h",
            "elist.h",
            "curl.h",
            "blktemplate.h",
            "uthash.h",
            "logging.h",
            "util.h",
            "cl_platform.h",
            "adl_structures.h",
            "libusb.h",
            "libztex.h",
            "_varenum.h",
            "icarus-common.h",
            "J0J0J2J0J0J0J0J2J0J0J0J0J0J1J1J0J0J0J0J1J0J0J0J",
            "guuu",
            "jXKg",
            "\u025fvYk\u05ediu",
            "rvrhr\u026b",
            "0000",
            "\u027bvYi",
            "uvYi\udbaf\udee2",
            ">919",
            "828\u05eb",
            "/usr/x86_64-w64-mingw32/mingw/include/curl",
            "/usr/x86_64-w64-mingw32/mingw/include",
            "/usr/x86_64-w64-mingw32/mingw/include/psdk_inc",
            "/usr/x86_64-w64-mingw32/mingw/include/sys",
            "libblkmaker",
            "/usr/x86_64-w64-mingw32/usr/include/libusb-1.0",
            "compat.h",
            "typecheck-gcc.h",
            "driver-cairnsmore.c",
            "_mingw.h",
            "windef.h",
            "basetsd.h",
            "_timeval.h",
            "_socket_types.h",
            "timeb.h",
            "pthread.h",
            "stdint.h",
            "dynclock.h",
            "miner.h",
            "stdio.h",
            "curl.h",
            "blktemplate.h",
            "elist.h",
            "uthash.h",
            "logging.h",
            "util.h",
            "cl_platform.h",
            "adl_structures.h",
            "libusb.h",
            "libztex.h",
            "_varenum.h",
            "icarus-common.h",
            ">vYiuu",
            "fJ0J0J2J0J0J0J0J2J0J0J0J0J0J1J1J0J0J0J0J1J0J0J0J",
            "\u027bvYi",
            "gKuu",
            "AvYi",
            "\u05edYkg",
            "/usr/x86_64-w64-mingw32/mingw/include/curl",
            "/usr/x86_64-w64-mingw32/mingw/include",
            "/usr/x86_64-w64-mingw32/mingw/include/psdk_inc",
            "libblkmaker",
            "/usr/x86_64-w64-mingw32/usr/include/libusb-1.0",
            "typecheck-gcc.h",
            "miner.h",
            "driver-modminer.c",
            "vadefs.h",
            "_mingw.h",
            "stdio.h",
            "basetsd.h",
            "_timeval.h",
            "_bsd_types.h",
            "_socket_types.h",
            "_fd_types.h",
            "pthread.h",
            "stdint.h",
            "dynclock.h",
            "curl.h",
            "blktemplate.h",
            "logging.h",
            "elist.h",
            "uthash.h",
            "util.h",
            "cl_platform.h",
            "adl_structures.h",
            "libusb.h",
            "libztex.h",
            "_varenum.h",
            "J0J0J2J0J0J0J0J2J0J0J0J0J0J1J1J0J0J0J0J1J0J0J0J",
            "hKuu",
            "$r[i\u5efb",
            "%hKu",
            ")'W#",
            "KvYj",
            "/gKg",
            "KrL>>=",
            "rL>>=",
            "rL>>=",
            "/muivg",
            "/usr/x86_64-w64-mingw32/mingw/include/curl",
            "/usr/x86_64-w64-mingw32/mingw/include",
            "/usr/x86_64-w64-mingw32/mingw/include/psdk_inc",
            "/usr/x86_64-w64-mingw32/mingw/include/sys",
            "/usr/x86_64-w64-mingw32/usr/include/libusb-1.0",
            "libblkmaker",
            "compat.h",
            "typecheck-gcc.h",
            "miner.h",
            "driver-x6500.c",
            "_mingw.h",
            "windef.h",
            "basetsd.h",
            "_timeval.h",
            "_socket_types.h",
            "timeb.h",
            "stdint.h",
            "libusb.h",
            "pthread.h",
            "stdio.h",
            "curl.h",
            "blktemplate.h",
            "elist.h",
            "uthash.h",
            "logging.h",
            "util.h",
            "cl_platform.h",
            "adl_structures.h",
            "dynclock.h",
            "libztex.h",
            "_varenum.h",
            "jtag.h",
            "ft232r.h",
            ">vYiuu",
            "fJ0J0J2J0J0J0J0J2J0J0J0J0J0J1J1J0J0J0J0J1J0J0J0J",
            "!Yi\u5efb",
            "Z====D9",
            "\t<A???",
            "KvYj",
            ">#Kj",
            "/usr/x86_64-w64-mingw32/mingw/include/curl",
            "/usr/x86_64-w64-mingw32/mingw/include",
            "/usr/x86_64-w64-mingw32/mingw/include/psdk_inc",
            "/usr/x86_64-w64-mingw32/usr/include/libusb-1.0",
            "typecheck-gcc.h",
            "ft232r.c",
            "_mingw.h",
            "stdint.h",
            "_varenum.h",
            "libusb.h",
            "ft232r.h",
            "logging.h",
            "J0J0J2J0J0J0J0J2J0J0J0J0J0J1J1J0J0J0J0J1J0J0J0J",
            "zf>>",
            "uvvi",
            "/usr/x86_64-w64-mingw32/mingw/include/curl",
            "/usr/x86_64-w64-mingw32/mingw/include",
            "typecheck-gcc.h",
            "jtag.c",
            "_mingw.h",
            "stdlib.h",
            "stdint.h",
            "jtag.h",
            "logging.h",
            "J0J0J2J0J0J0J0J2J0J0J0J0J0J1J1J0J0J0J0J1J0J0J0J",
            "/usr/x86_64-w64-mingw32/mingw/include/curl",
            "/usr/x86_64-w64-mingw32/mingw/include",
            "/usr/x86_64-w64-mingw32/mingw/include/psdk_inc",
            "libblkmaker",
            "/usr/x86_64-w64-mingw32/usr/include/libusb-1.0",
            "typecheck-gcc.h",
            "miner.h",
            "driver-ztex.c",
            "_mingw.h",
            "stdint.h",
            "dynclock.h",
            "stdio.h",
            "basetsd.h",
            "_timeval.h",
            "_socket_types.h",
            "pthread.h",
            "curl.h",
            "blktemplate.h",
            "elist.h",
            "uthash.h",
            "logging.h",
            "util.h",
            "cl_platform.h",
            "adl_structures.h",
            "libusb.h",
            "libztex.h",
            "_varenum.h",
            "J0J0J2J0J0J0J0J2J0J0J0J0J0J1J1J0J0J0J0J1J0J0J0J",
            "Kiyg",
            "/usr/x86_64-w64-mingw32/mingw/include/curl",
            "/usr/x86_64-w64-mingw32/usr/include/libusb-1.0",
            "/usr/x86_64-w64-mingw32/mingw/include",
            "typecheck-gcc.h",
            "libusb.h",
            "libztex.c",
            "_mingw.h",
            "stdio.h",
            "pthread.h",
            "stdint.h",
            "dynclock.h",
            "libztex.h",
            "logging.h",
            "J0J0J2J0J0J0J0J2J0J0J0J0J0J1J1J0J0J0J0J1J0J0J0J",
            ".\u06eduK",
            "<&\u547bg",
            "uKKIK==I",
            "<=wK/",
            "strtok_r.c",
            "string.h",
            "/usr/x86_64-w64-mingw32/mingw/include",
            "/usr/x86_64-w64-mingw32/mingw/include/sys",
            "sigaction.c",
            "signal.h",
            "types.h",
            "signal.h",
            "/usr/x86_64-w64-mingw32/mingw/include",
            "sigprocmask.c",
            "signal.h",
            "signal.h",
            "[Y@Y2",
            "xZyY",
            "/usr/x86_64-w64-mingw32/mingw/include",
            "memchr.c",
            "_mingw.h",
            "string.h",
            "00MY",
            "/usr/x86_64-w64-mingw32/mingw/include",
            "str-two-way.h",
            "memmem.c",
            "_mingw.h",
            "string.h",
            "../ccan/opt",
            "/usr/x86_64-w64-mingw32/mingw/include",
            "usage.c",
            "opt.h",
            "private.h",
            "_mingw.h",
            "/usr/x86_64-w64-mingw32/mingw/include",
            "../ccan/opt",
            "opt.c",
            "vadefs.h",
            "_mingw.h",
            "opt.h",
            "|Kiv",
            "\"Kiu",
            "/usr/x86_64-w64-mingw32/mingw/include",
            "helpers.c",
            "_mingw.h",
            "private.h",
            "gKwuY1uY1",
            "KKjY2",
            ">ugu",
            "=ugu",
            "!YiY2",
            "../ccan/opt",
            "/usr/x86_64-w64-mingw32/mingw/include",
            "parse.c",
            "opt.h",
            "_mingw.h",
            "private.h",
            "AABA",
            "v\tAA",
            "AAABBBBA",
            "AABBBBA",
            "AABBA",
            "AABA",
            "stratum_thread",
            "getwork_wait_min",
            "_hd_hh_del",
            "work_nonce",
            "res_val",
            "last_pool",
            "worktime",
            "out_unlock",
            "logline",
            "_he_thh",
            "next",
            "diff_stale",
            "hashes_done",
            "ADLODParameterRange",
            "_hd_bkt",
            "dev_stats",
            "tryagain",
            "tv_getwork",
            "cgminer_pool_stats",
            "hash_swap",
            "_curl_opt",
            "input",
            "thr_info",
            "_hj_i",
            "_hj_j",
            "_hj_k",
            "failures",
            "iEngineClock",
            "reinit_device",
            "_hs_looping",
            "httpinput",
            "_hs_insize",
            "block",
            "_hf_hashv",
            "_hs_tail",
            "timeout",
            "tv_work_found",
            "name",
            "ntime",
            "_hs_qsize",
            "data",
            "strategies",
            "iMemoryClock",
            "target",
            "_he_hh_nxt",
            "work_size",
            "pool_stats",
            "cgminer_stats",
            "threadobj",
            "userdata",
            "work_restart_id",
            "cloned",
            "efficiency",
            "sshare",
            "longpoll_thread",
            "ADLFanSpeedValue",
            "lagging",
            "rpc_req",
            "_hs_psize",
            "UT_hash_handle",
            "filename",
            "_hj_key",
            "strategy",
            "_he_bkt_i",
            "selected",
            "retry",
            "pool_bytes_xfer",
            "work",
            "ADLODPerformanceLevel",
            "_hs_nmerges",
            "best_diff",
            "iSize",
            "mythr",
            "ADLPMActivity",
            "resubmit",
            "_he_new_buckets",
            "diff_accepted",
            "hw_errors",
            "hashrate",
            "getwork_wait",
            "reason",
            "disposition",
            "UT_hash_table",
            "rolltime",
            "_he_newbkt",
            "nonce",
            "proto",
            "work_clone",
            "hexstr",
            "siginfo_t",
            "next_pool",
            "_hs_list",
            "lock",
            "rejected",
            "tv_getwork_reply",
            "thr_id",
            "_he_bkt",
            "getwork_wait_max",
            "ADLODParameters",
            "diff",
            "last_share_diff",
            "getwork_calls",
            "_hf_bkt",
            "hash",
            "required",
            "blkheight",
            "ADLODPerformanceLevels",
            "block_id",
            "base_work",
            "utility",
            "iReserved",
            "ADLTemperature",
            "pool",
            "blocking",
            "intervals",
            "UT_hash_bucket",
            "cgpu",
            "ADLFanSpeedInfo",
            "accepted",
            "libusb_device_handle",
            "pool_strategy",
            "checktarget",
            "_ha_bkt",
            "submit_thread",
            "rolling",
            "tv_elapsed",
            "diff_rejected",
            "cgpu_data",
            "work",
            "work_restart_id",
            "hashes_done",
            "getwork_wait_min",
            "ADLTemperature",
            "cgminer_stats",
            "rejected",
            "iSize",
            "ADLODParameters",
            "max_nonce",
            "UT_hash_bucket",
            "tv_hashes",
            "ADLODPerformanceLevels",
            "tv_now",
            "tvp_now",
            "mythr",
            "ADLFanSpeedInfo",
            "thr_id",
            "ADLODParameterRange",
            "tv_worktime",
            "proc",
            "iMemoryClock",
            "getwork_wait",
            "disabled",
            "rolltime",
            "iEngineClock",
            "UT_hash_handle",
            "diff_accepted",
            "diff_rejected",
            "ADLODPerformanceLevel",
            "ADLFanSpeedValue",
            "libusb_device_handle",
            "iReserved",
            "cgminer_pool_stats",
            "cgpu",
            "last_share_diff",
            "hashes",
            "ADLPMActivity",
            "getwork_wait_max",
            "getwork_calls",
            "cgpu_data",
            "accepted",
            "tvp_timeout",
            "longpoll",
            "userpass",
            "res_val",
            "next",
            "work_restart_id",
            "ADLODParameterRange",
            "user_data",
            "bbversion",
            "cgminer_pool_stats",
            "_curl_opt",
            "hadrolltime",
            "curl_err_str",
            "hadexpire",
            "timeout",
            "ntime",
            "data",
            "iMemoryClock",
            "target",
            "cgminer_stats",
            "userdata",
            "stratum_url",
            "ADLFanSpeedValue",
            "ADLODPerformanceLevel",
            "iSize",
            "ADLPMActivity",
            "iEngineClock",
            "rejected",
            "diff_accepted",
            "UT_hash_handle",
            "getwork_wait",
            "coinbase1",
            "getwork_calls",
            "lock",
            "err_val",
            "prev_hash",
            "getwork_wait_max",
            "ADLODParameters",
            "job_id",
            "last_share_diff",
            "getwork_wait_min",
            "ADLODPerformanceLevels",
            "rolltime",
            "iReserved",
            "ADLTemperature",
            "pool",
            "UT_hash_bucket",
            "ADLFanSpeedInfo",
            "accepted",
            "libusb_device_handle",
            "coinbase2",
            "cgpu_data",
            "diff_rejected",
            "work_restart_id",
            "ADLPMActivity",
            "userdata",
            "getwork_wait_min",
            "ADLTemperature",
            "data",
            "cgminer_stats",
            "rejected",
            "iSize",
            "value",
            "ADLODParameters",
            "pool_strategy",
            "commands",
            "UT_hash_bucket",
            "hw_errors",
            "precom",
            "best_diff",
            "ADLODPerformanceLevels",
            "api_data",
            "name",
            "iEngineClock",
            "ADLODParameterRange",
            "cgpu",
            "io_list",
            "UT_hash_handle",
            "io_data",
            "cmdbuf",
            "getwork_wait",
            "intensity",
            "status",
            "last_share_pool",
            "param",
            "isjson",
            "group",
            "count",
            "diff_accepted",
            "rolltime",
            "diff_rejected",
            "ADLODPerformanceLevel",
            "ADLFanSpeedValue",
            "libusb_device_handle",
            "io_open",
            "copy_data",
            "iReserved",
            "cgminer_pool_stats",
            "numpga",
            "last_share_diff",
            "gpucount",
            "ptw32_cleanup_t",
            "iMemoryClock",
            "getwork_wait_max",
            "utility",
            "getwork_calls",
            "cgpu_data",
            "pgacount",
            "pool",
            "accepted",
            "severity",
            "cpucount",
            "ADLFanSpeedInfo",
            "strategies",
            "root",
            "use_curses",
            "work_restart_id",
            "thr_info",
            "getwork_wait_min",
            "ADLTemperature",
            "cgminer_stats",
            "rejected",
            "iSize",
            "kernel",
            "ADLODParameters",
            "vwidth",
            "UT_hash_bucket",
            "clState",
            "device",
            "threads",
            "ADLODPerformanceLevels",
            "thr_id",
            "ADLODParameterRange",
            "globalThreads",
            "iMemoryClock",
            "getwork_wait",
            "nextptr",
            "intensity",
            "status",
            "rolltime",
            "virtual_gpu",
            "iEngineClock",
            "UT_hash_handle",
            "diff_accepted",
            "diff_rejected",
            "ADLODPerformanceLevel",
            "ADLFanSpeedValue",
            "libusb_device_handle",
            "iReserved",
            "cgminer_pool_stats",
            "cgpu",
            "last_share_diff",
            "ADLPMActivity",
            "getwork_wait_max",
            "getwork_calls",
            "cgpu_data",
            "accepted",
            "midstate",
            "ADLFanSpeedInfo",
            "nonces",
            "numPlatforms",
            "work_restart_id",
            "ADLPMActivity",
            "getwork_wait_min",
            "ADLTemperature",
            "filename",
            "cgminer_stats",
            "rejected",
            "iSize",
            "ADLODParameters",
            "UT_hash_bucket",
            "ADLODPerformanceLevels",
            "ADLODParameterRange",
            "iMemoryClock",
            "getwork_wait",
            "status",
            "rolltime",
            "platform",
            "iEngineClock",
            "UT_hash_handle",
            "diff_accepted",
            "diff_rejected",
            "ADLODPerformanceLevel",
            "ADLFanSpeedValue",
            "libusb_device_handle",
            "iReserved",
            "cgminer_pool_stats",
            "last_share_diff",
            "numDevices",
            "remaining",
            "getwork_wait_max",
            "getwork_calls",
            "cgpu_data",
            "accepted",
            "ADLFanSpeedInfo",
            "platforms",
            "ADLODParameterRange",
            "ADLODParameters",
            "ADLFanSpeedInfo",
            "UT_hash_bucket",
            "cgminer_stats",
            "getwork_wait_max",
            "iMemoryClock",
            "ADLPMActivity",
            "ADLODPerformanceLevel",
            "ADLTemperature",
            "rejected",
            "last_share_diff",
            "hw_errors",
            "diff_accepted",
            "cgminer_pool_stats",
            "cgpu_data",
            "rolltime",
            "ADLODPerformanceLevels",
            "ADLFanSpeedValue",
            "getwork_wait_min",
            "UT_hash_handle",
            "iSize",
            "iEngineClock",
            "getwork_calls",
            "work_restart_id",
            "libusb_device_handle",
            "diff_rejected",
            "iReserved",
            "accepted",
            "getwork_wait",
            "work_restart_id",
            "engineclock",
            "fan_window",
            "iFanSpeed",
            "gpu_memclock",
            "ADLTemperature",
            "strAdapterName",
            "cgminer_stats",
            "rejected",
            "lpBuffer",
            "lpAdapterID",
            "iSize",
            "iBusNumber",
            "ADLODParameters",
            "lasttemp",
            "UT_hash_bucket",
            "ADLODPerformanceLevels",
            "other_ga",
            "powertune",
            "gpu_vddc",
            "lpOdPerformanceLevels",
            "ADLODParameterRange",
            "libusb_device_handle",
            "UT_hash_handle",
            "iAdapterIndex",
            "iMemoryClock",
            "getwork_wait",
            "gpu_powertune",
            "rolltime",
            "fanspeed",
            "activity",
            "virtual_gpu",
            "getwork_wait_min",
            "iEngineClock",
            "iVddc",
            "diff_accepted",
            "diff_rejected",
            "ADLODPerformanceLevel",
            "ADLFanSpeedValue",
            "iReserved",
            "cgminer_pool_stats",
            "last_share_diff",
            "iPercentage",
            "fanpercent",
            "ADLPMActivity",
            "getwork_wait_max",
            "cgpu_data",
            "memclock",
            "accepted",
            "getwork_calls",
            "ADLFanSpeedInfo",
            "work_restart_id",
            "getwork_wait_min",
            "ADLTemperature",
            "data",
            "cgminer_stats",
            "rejected",
            "iSize",
            "ADLODParameters",
            "UT_hash_bucket",
            "ADLODPerformanceLevels",
            "scratchbuf",
            "nonce",
            "ADLODParameterRange",
            "iMemoryClock",
            "ostate",
            "getwork_wait",
            "rolltime",
            "tmp_hash7",
            "iEngineClock",
            "UT_hash_handle",
            "diff_accepted",
            "diff_rejected",
            "ADLODPerformanceLevel",
            "ADLFanSpeedValue",
            "libusb_device_handle",
            "iReserved",
            "cgminer_pool_stats",
            "last_share_diff",
            "ADLPMActivity",
            "getwork_wait_max",
            "getwork_calls",
            "cgpu_data",
            "accepted",
            "ADLFanSpeedInfo",
            "work_restart_id",
            "getwork_wait_min",
            "ADLTemperature",
            "filename",
            "cgminer_stats",
            "rejected",
            "iSize",
            "ADLODParameters",
            "wReserved",
            "UT_hash_bucket",
            "detectone",
            "ADLODPerformanceLevels",
            "ADLFanSpeedInfo",
            "ADLODParameterRange",
            "iMemoryClock",
            "getwork_wait",
            "rolltime",
            "devpath",
            "iEngineClock",
            "UT_hash_handle",
            "cgpu_data",
            "diff_accepted",
            "diff_rejected",
            "ADLODPerformanceLevel",
            "ADLFanSpeedValue",
            "libusb_device_handle",
            "iReserved",
            "cgminer_pool_stats",
            "last_share_diff",
            "UT_hash_table",
            "ADLPMActivity",
            "getwork_wait_max",
            "getwork_calls",
            "needles",
            "accepted",
            "ADLODParameterRange",
            "ADLODParameters",
            "ADLFanSpeedInfo",
            "UT_hash_bucket",
            "cgminer_stats",
            "getwork_wait_max",
            "data",
            "iMemoryClock",
            "freqMDefault",
            "ADLPMActivity",
            "ADLODPerformanceLevel",
            "ADLTemperature",
            "rejected",
            "last_share_diff",
            "diff_accepted",
            "cgminer_pool_stats",
            "cgpu_data",
            "rolltime",
            "ADLODPerformanceLevels",
            "ADLFanSpeedValue",
            "getwork_wait_min",
            "UT_hash_handle",
            "iSize",
            "iEngineClock",
            "getwork_calls",
            "work_restart_id",
            "libusb_device_handle",
            "diff_rejected",
            "iReserved",
            "accepted",
            "getwork_wait",
            "work",
            "work_restart_id",
            "pnoncebuf",
            "getwork_wait_min",
            "ADLTemperature",
            "data",
            "cgminer_stats",
            "rejected",
            "datatail",
            "iSize",
            "ADLODParameters",
            "procid",
            "UT_hash_bucket",
            "fdDev",
            "hw_errors",
            "p_fdDev",
            "ADLODPerformanceLevels",
            "mutexp",
            "ADLFanSpeedInfo",
            "ADLODParameterRange",
            "tv_add",
            "UT_hash_handle",
            "iMemoryClock",
            "getwork_wait",
            "rolltime",
            "iEngineClock",
            "diff_accepted",
            "bitforce",
            "diff_rejected",
            "ADLODPerformanceLevel",
            "bufLen",
            "ADLFanSpeedValue",
            "libusb_device_handle",
            "iReserved",
            "cgminer_pool_stats",
            "last_share_diff",
            "count",
            "ADLPMActivity",
            "getwork_wait_max",
            "getwork_calls",
            "cgpu_data",
            "accepted",
            "midstate",
            "pdevbuf",
            "ob_bin",
            "work_restart_id",
            "hash_count_range",
            "state",
            "work_division",
            "icarus",
            "ADLTemperature",
            "cgminer_stats",
            "rejected",
            "iSize",
            "ADLODParameters",
            "UT_hash_bucket",
            "read_count",
            "fpga_count",
            "ADLODPerformanceLevels",
            "values",
            "ADLODParameterRange",
            "iMemoryClock",
            "getwork_wait",
            "rolltime",
            "accepted",
            "getwork_wait_min",
            "iEngineClock",
            "UT_hash_handle",
            "cgpu_data",
            "diff_accepted",
            "diff_rejected",
            "ADLODPerformanceLevel",
            "ADLFanSpeedValue",
            "libusb_device_handle",
            "iReserved",
            "cgminer_pool_stats",
            "last_share_diff",
            "fullnonce",
            "this_option_offset",
            "info",
            "ADLPMActivity",
            "nonce_mask",
            "getwork_wait_max",
            "getwork_calls",
            "nonce_bin",
            "timing_mode",
            "ADLFanSpeedInfo",
            "tv_finish",
            "tv_start",
            "ADLODParameterRange",
            "ADLODParameters",
            "ADLFanSpeedInfo",
            "UT_hash_bucket",
            "cgminer_stats",
            "getwork_wait_max",
            "iMemoryClock",
            "ADLPMActivity",
            "ADLODPerformanceLevel",
            "ADLTemperature",
            "rejected",
            "info",
            "last_share_diff",
            "diff_accepted",
            "cgpu_data",
            "cgminer_pool_stats",
            "rolltime",
            "ADLODPerformanceLevels",
            "ADLFanSpeedValue",
            "getwork_wait_min",
            "UT_hash_handle",
            "iSize",
            "iEngineClock",
            "getwork_calls",
            "timing_mode",
            "work_restart_id",
            "libusb_device_handle",
            "diff_rejected",
            "iReserved",
            "accepted",
            "getwork_wait",
            "work",
            "work_restart_id",
            "multiplier",
            "state",
            "getwork_wait_min",
            "ADLTemperature",
            "cgminer_stats",
            "rejected",
            "iSize",
            "ADLODParameters",
            "UT_hash_bucket",
            "fpgaid",
            "modminer",
            "ADLODPerformanceLevels",
            "mutexp",
            "nonce",
            "ADLODParameterRange",
            "iMemoryClock",
            "getwork_wait",
            "rolltime",
            "needlock",
            "iEngineClock",
            "hw_errors",
            "UT_hash_handle",
            "diff_accepted",
            "diff_rejected",
            "ADLODPerformanceLevel",
            "ADLFanSpeedValue",
            "libusb_device_handle",
            "iReserved",
            "cgminer_pool_stats",
            "last_share_diff",
            "hashes",
            "ADLPMActivity",
            "getwork_wait_max",
            "getwork_calls",
            "cgpu_data",
            "accepted",
            "midstate",
            "ADLFanSpeedInfo",
            "work_restart_id",
            "multiplier",
            "getwork_wait_min",
            "ADLTemperature",
            "cgminer_stats",
            "rejected",
            "iSize",
            "ADLODParameters",
            "checksum",
            "hashes_left",
            "UT_hash_bucket",
            "hw_errors",
            "fpga",
            "ADLODPerformanceLevels",
            "tv_now",
            "mutexp",
            "pinoffset",
            "ADLODParameterRange",
            "x6500",
            "tv_add",
            "UT_hash_handle",
            "iMemoryClock",
            "getwork_wait",
            "rolltime",
            "iEngineClock",
            "diff_accepted",
            "diff_rejected",
            "ADLODPerformanceLevel",
            "ADLFanSpeedValue",
            "libusb_device_handle",
            "iReserved",
            "cgminer_pool_stats",
            "last_share_diff",
            "ADLPMActivity",
            "getwork_wait_max",
            "getwork_calls",
            "cgpu_data",
            "libusb_device",
            "accepted",
            "ADLFanSpeedInfo",
            "bDescriptorType",
            "transferred",
            "data",
            "count",
            "libusb_device_handle",
            "bmAttributes",
            "endpoint",
            "bLength",
            "extra_length",
            "libusb_device",
            "do_read",
            "bitlength",
            "work_restart_id",
            "getwork_wait_min",
            "ADLTemperature",
            "cgminer_stats",
            "rejected",
            "iSize",
            "ADLODParameters",
            "UT_hash_bucket",
            "fpgacount",
            "ADLODPerformanceLevels",
            "ADLODParameterRange",
            "iMemoryClock",
            "fpganame",
            "getwork_wait",
            "rolltime",
            "snString",
            "iEngineClock",
            "hw_errors",
            "UT_hash_handle",
            "diff_accepted",
            "diff_rejected",
            "ADLODPerformanceLevel",
            "ADLFanSpeedValue",
            "libusb_device_handle",
            "iReserved",
            "cgminer_pool_stats",
            "last_share_diff",
            "ztex",
            "ADLPMActivity",
            "getwork_wait_max",
            "getwork_calls",
            "cgpu_data",
            "accepted",
            "ztex_master",
            "ADLFanSpeedInfo",
            "length",
            "firmware",
            "ztex",
            "libusb_device_handle",
            "__func__",
            "transactionBytes",
            "libusb_device",
            "sigaction",
            "siginfo_t",
            "saved_errno",
            "period",
            "needle_len",
            "haystack",
            "haystack_len",
            "needle",
            "opt_table",
            "names",
            "opt_table",
            "opt_table",
            "v?-E",
            "v?[+",
            "v?.P",
            "v?zq",
            "w\tM\t",
            ".file",
            "crtexe.c",
            "envp",
            "argv",
            "argc",
            "argret",
            "mainret",
            ".l_endw",
            ".l_start",
            ".l_end",
            ".text",
            ".data",
            ".bss",
            ".xdata",
            ".pdata",
            ".rdata",
            ".file",
            "crtbegin.c",
            ".text",
            ".data",
            ".bss",
            ".file",
            "miner.c",
            "sleep",
            "list_add",
            "list_del",
            "swab32",
            "swap256",
            "swab256",
            "wr_lock",
            "rd_lock",
            "want_gbtI",
            "opt_time",
            "qd_lock",
            "blk_lock",
            "lp_lock",
            "lp_cond",
            "blocks",
            "def_conf%",
            "sharelog",
            "add_pool",
            "set_rr",
            "set_url",
            "set_user",
            "set_pass",
            "set_null&",
            "logstartd",
            "statusy",
            "wlog",
            "diffone",
            "can_roll",
            "free_sws?",
            "wake_gws`",
            "tv_sort",
            "jedata",
            "cp_prio",
            "hash_popgM",
            "gen_hash",
            "get_work2\\",
            "clean_upk",
            "quit",
            "main",
            ".text",
            ".data",
            ".bss",
            ".xdata",
            ".pdata",
            ".rdata",
            ".file",
            "deviceapi.c",
            "add_cgpu",
            ".text",
            ".data",
            ".bss",
            ".xdata",
            ".pdata",
            ".rdata",
            ".file",
            "util.c",
            "list_deli",
            "swab32",
            "wr_lock",
            "rd_lock",
            "bin2hex",
            "hex2bin",
            "fulltest*",
            "tq_new",
            "tq_free",
            "tq_thaw",
            "tq_push",
            "tq_pop",
            "nmsleep",
            "us_tdiff",
            "tdiff",
            ".text",
            ".data",
            ".bss",
            ".xdata",
            ".pdata",
            ".rdata",
            ".file",
            "sha2.c",
            "sha2",
            ".text",
            ".data",
            ".bss",
            ".xdata",
            ".pdata",
            ".rdata",
            ".file",
            "api.c",
            "sleep",
            "WSAbuf",
            "sock",
            "BLANK",
            "COMMA",
            "GPUSEP",
            "DEAD",
            "SICK",
            "NOSTART",
            "INIT",
            "WAIT",
            "DISABLED",
            "ALIVE",
            "UNKNOWN",
            "DYNAMIC",
            "NULLSTR",
            "TRUESTR",
            "FALSESTR",
            "OSINFO",
            "ISJSON",
            "when",
            "ipaccess\t",
            "io_head",
            "_io_new",
            "io_add",
            "io_put",
            "io_close",
            "io_free",
            "numpgas",
            "message",
            "bool2strF",
            "gpudev",
            "pgadev",
            "summary",
            "gpucount",
            "pgacount",
            "cpucount",
            "addpool",
            "gpumem",
            "gpufan",
            "gpuvddc",
            "doquit",
            "notify",
            "dosave",
            "minecoind",
            "pgaset",
            "dozero",
            "tidyup",
            ".text",
            ".data",
            ".bss",
            ".xdata",
            ".pdata",
            ".rdata",
            ".file",
            "logging.c",
            "vapplog",
            "applog",
            "log_info",
            ".text",
            ".data",
            ".bss",
            ".xdata",
            ".pdata",
            ".rdata",
            ".file",
            "driver-opencl.c",
            "clStates ",
            ".text",
            ".data",
            ".bss",
            ".xdata",
            ".pdata",
            ".rdata",
            ".file",
            "ocl.c",
            "advance",
            "initCl",
            ".text",
            ".data",
            ".bss",
            ".xdata",
            ".pdata",
            ".rdata",
            ".file",
            "findnonce.c",
            ".text",
            ".data",
            ".bss",
            ".xdata",
            ".pdata",
            ".rdata",
            ".file",
            "adl.c",
            "sleep",
            "adl_lock",
            "lpInfo",
            "lock_adl",
            "init_adlI",
            "gpu_tempw",
            "gpu_vddc",
            "set_vddc",
            "free_adl",
            ".text",
            ".data",
            ".bss",
            ".xdata",
            ".pdata",
            ".rdata",
            ".file",
            "scrypt.c",
            "swab32",
            "outerpad`",
            ".text",
            ".data",
            ".bss",
            ".xdata",
            ".pdata",
            ".rdata",
            ".file",
            "fpgautils.c",
            "list_dele`",
            ".text",
            ".data",
            ".bss",
            ".rdata",
            ".xdata",
            ".pdata",
            ".file",
            "dynclock.c",
            ".text",
            ".data",
            ".bss",
            ".xdata",
            ".pdata",
            ".rdata",
            ".file",
            "driver-bitforce.c",
            "sleep",
            "BFgets",
            "BFwrite",
            ".text",
            ".data",
            ".bss",
            ".xdata",
            ".pdata",
            ".rdata",
            ".file",
            "driver-icarus.c",
            "mask",
            ".text",
            ".data",
            ".bss",
            ".xdata",
            ".pdata",
            ".rdata",
            ".file",
            "sleep",
            ".text",
            ".data",
            ".bss",
            ".xdata",
            ".pdata",
            ".rdata",
            ".file",
            "driver-modminer.c",
            "_bailout",
            "NOOP",
            ".text",
            ".data",
            ".bss",
            ".xdata",
            ".pdata",
            ".rdata",
            ".file",
            "driver-x6500.c",
            "sleep",
            "int2bits*",
            "bits2intd+",
            "checksum+",
            ".text",
            ".data",
            ".bss",
            ".xdata",
            ".pdata",
            ".rdata",
            ".file",
            "ft232r.c",
            ".text",
            ".data",
            ".bss",
            ".xdata",
            ".pdata",
            ".rdata",
            ".file",
            "jtag.c",
            "getbit",
            "setbit",
            "_jtag_rw4m",
            "jtag_runm",
            ".text",
            ".data",
            ".bss",
            ".xdata",
            ".pdata",
            ".rdata",
            ".file",
            "driver-ztex.c",
            "swab32",
            ".text",
            ".data",
            ".bss",
            ".xdata",
            ".pdata",
            ".rdata",
            ".file",
            "libztex.c",
            ".text",
            ".data",
            ".bss",
            ".xdata",
            ".pdata",
            ".rdata",
            ".text",
            ".idata$7P)",
            ".idata$5",
            ".idata$4\\",
            ".idata$6",
            ".text",
            ".idata$7x)",
            ".idata$5D",
            ".idata$4",
            ".idata$6",
            ".text",
            ".idata$7)",
            ".idata$5\\",
            ".idata$4",
            ".idata$6",
            ".text",
            ".idata$7h)",
            ".idata$5$",
            ".idata$4",
            ".idata$6$",
            ".text",
            ".idata$7p)",
            ".idata$54",
            ".idata$4",
            ".idata$6T",
            ".text",
            ".idata$7|)",
            ".idata$5L",
            ".idata$4",
            ".idata$6",
            ".text",
            ".idata$7)",
            ".idata$5T",
            ".idata$4",
            ".idata$6",
            ".text",
            ".idata$7t)",
            ".idata$5<",
            ".idata$4",
            ".idata$6h",
            ".text",
            ".idata$7l)",
            ".idata$5,",
            ".idata$4",
            ".idata$6<",
            ".text",
            ".idata$7H)",
            ".idata$5",
            ".idata$4L",
            ".idata$6",
            ".text",
            ".idata$7\\)",
            ".idata$5",
            ".idata$4t",
            ".idata$6",
            ".text",
            ".idata$7`)",
            ".idata$5",
            ".idata$4|",
            ".idata$6",
            ".text",
            ".idata$7d)",
            ".idata$5",
            ".idata$4",
            ".idata$6",
            ".text",
            ".idata$7)",
            ".idata$5d",
            ".idata$4",
            ".idata$6",
            ".text",
            ".idata$7L)",
            ".idata$5",
            ".idata$4T",
            ".idata$6",
            ".text",
            ".idata$7)",
            ".idata$5l",
            ".idata$4",
            ".idata$6",
            ".text",
            ".idata$7X)",
            ".idata$5",
            ".idata$4l",
            ".idata$6",
            ".text",
            ".idata$7T)",
            ".idata$5",
            ".idata$4d",
            ".idata$6",
            ".text",
            ".idata$7)",
            ".idata$5t",
            ".idata$4",
            ".idata$6",
            ".text",
            ".idata$7)",
            ".idata$5",
            ".idata$4",
            ".idata$6",
            ".text",
            ".idata$7)",
            ".idata$5",
            ".idata$4T",
            ".idata$6",
            ".text",
            ".idata$7)",
            ".idata$5",
            ".idata$4t",
            ".idata$6`",
            ".text",
            ".idata$7)",
            ".idata$5",
            ".idata$4D",
            ".idata$6",
            ".text",
            ".idata$7)",
            ".idata$5",
            ".idata$4",
            ".idata$6X",
            ".text",
            ".idata$7)",
            ".idata$5",
            ".idata$4",
            ".idata$6D",
            ".text",
            ".idata$7)",
            ".idata$5",
            ".idata$4,",
            ".idata$6",
            ".text",
            ".idata$7)",
            ".idata$5",
            ".idata$4",
            ".idata$6",
            ".text",
            ".idata$7)",
            ".idata$5",
            ".idata$4",
            ".idata$6",
            ".text",
            ".idata$7)",
            ".idata$5",
            ".idata$4\\",
            ".idata$6$",
            ".text",
            ".idata$7)",
            ".idata$5",
            ".idata$4L",
            ".idata$6",
            ".text",
            ".idata$7)",
            ".idata$5",
            ".idata$4",
            ".idata$6,",
            ".text",
            ".idata$7)",
            ".idata$5",
            ".idata$4l",
            ".idata$6P",
            ".text",
            ".idata$7)",
            ".idata$5",
            ".idata$4<",
            ".idata$6",
            ".text",
            ".idata$7)",
            ".idata$5",
            ".idata$4$",
            ".idata$6",
            ".text",
            ".idata$7)",
            ".idata$5",
            ".idata$4",
            ".idata$6l",
            ".text",
            ".idata$7)",
            ".idata$5",
            ".idata$44",
            ".idata$6",
            ".text",
            ".idata$7)",
            ".idata$5",
            ".idata$4d",
            ".idata$6<",
            ".text",
            ".data",
            ".bss",
            ".idata$7,*",
            ".idata$5t",
            ".idata$4",
            ".idata$6b ",
            ".text",
            ".data",
            ".bss",
            ".idata$74*",
            ".idata$5",
            ".idata$4",
            ".idata$6 ",
            ".text",
            ".data",
            ".bss",
            ".idata$7D*",
            ".idata$5",
            ".idata$4",
            ".idata$6 ",
            ".text",
            ".data",
            ".bss",
            ".idata$7<*",
            ".idata$5",
            ".idata$4",
            ".idata$6 ",
            ".text",
            ".data",
            ".bss",
            ".idata$7@*",
            ".idata$5",
            ".idata$4",
            ".idata$6 ",
            ".text",
            ".data",
            ".bss",
            ".idata$7(*",
            ".idata$5l",
            ".idata$4",
            ".idata$6L ",
            ".text",
            ".data",
            ".bss",
            ".idata$78*",
            ".idata$5",
            ".idata$4",
            ".idata$6 ",
            ".text",
            ".data",
            ".bss",
            ".idata$7",
            ".idata$54",
            ".idata$4",
            ".idata$6",
            ".text",
            ".data",
            ".bss",
            ".idata$7P*",
            ".idata$5",
            ".idata$4$",
            ".idata$60!",
            ".text",
            ".data",
            ".bss",
            ".idata$7",
            ".idata$5L",
            ".idata$4",
            ".idata$6",
            ".text",
            ".data",
            ".bss",
            ".idata$7",
            ".idata$5$",
            ".idata$4",
            ".idata$6",
            ".text",
            ".data",
            ".bss",
            ".idata$7H*",
            ".idata$5",
            ".idata$4",
            ".idata$6",
            ".text",
            ".data",
            ".bss",
            ".idata$7 *",
            ".idata$5\\",
            ".idata$4",
            ".idata$6\" ",
            ".text",
            ".data",
            ".bss",
            ".idata$7",
            ".idata$5<",
            ".idata$4",
            ".idata$6",
            ".text",
            ".data",
            ".bss",
            ".idata$7",
            ".idata$5T",
            ".idata$4",
            ".idata$6",
            ".text",
            ".data",
            ".bss",
            ".idata$7",
            ".idata$5",
            ".idata$4",
            ".idata$6t",
            ".text",
            ".data",
            ".bss",
            ".idata$7",
            ".idata$5,",
            ".idata$4",
            ".idata$6",
            ".text",
            ".data",
            ".bss",
            ".idata$7$*",
            ".idata$5d",
            ".idata$4",
            ".idata$64 ",
            ".text",
            ".data",
            ".bss",
            ".idata$7",
            ".idata$5D",
            ".idata$4",
            ".idata$6",
            ".text",
            ".data",
            ".bss",
            ".idata$7X*",
            ".idata$5",
            ".idata$44",
            ".idata$6\\!",
            ".text",
            ".data",
            ".bss",
            ".idata$7T*",
            ".idata$5",
            ".idata$4,",
            ".idata$6H!",
            ".text",
            ".data",
            ".bss",
            ".idata$7L*",
            ".idata$5",
            ".idata$4",
            ".idata$6",
            ".text",
            ".data",
            ".bss",
            ".idata$70*",
            ".idata$5|",
            ".idata$4",
            ".idata$6x ",
            "hname",
            "fthunk",
            ".text",
            ".data",
            ".bss",
            ".idata$2",
            ".idata$4",
            ".idata$5",
            ".text",
            ".data",
            ".bss",
            ".idata$4<",
            ".idata$5",
            ".idata$7\\*",
            ".text",
            ".data",
            ".bss",
            ".idata$7()",
            ".idata$5",
            ".idata$4",
            ".idata$6H",
            ".text",
            ".data",
            ".bss",
            ".idata$74)",
            ".idata$5",
            ".idata$44",
            ".idata$6h",
            ".text",
            ".data",
            ".bss",
            ".idata$78)",
            ".idata$5",
            ".idata$4<",
            ".idata$6t",
            ".text",
            ".data",
            ".bss",
            ".idata$7(",
            ".idata$5T",
            ".idata$4",
            ".idata$6",
            ".text",
            ".data",
            ".bss",
            ".idata$70)",
            ".idata$5",
            ".idata$4,",
            ".idata$6Z",
            ".text",
            ".data",
            ".bss",
            ".idata$7(",
            ".idata$5L",
            ".idata$4",
            ".idata$6",
            ".text",
            ".data",
            ".bss",
            ".idata$7,)",
            ".idata$5",
            ".idata$4$",
            ".idata$6R",
            ".text",
            ".data",
            ".bss",
            ".idata$7$)",
            ".idata$5",
            ".idata$4",
            ".idata$6@",
            ".text",
            ".data",
            ".bss",
            ".idata$7",
            ".idata$5l",
            ".idata$4",
            ".idata$6",
            ".text",
            ".data",
            ".bss",
            ".idata$7(",
            ".idata$5D",
            ".idata$4",
            ".idata$6",
            ".text",
            ".data",
            ".bss",
            ".idata$7",
            ".idata$5",
            ".idata$4",
            ".idata$6",
            ".text",
            ".data",
            ".bss",
            ".idata$7",
            ".idata$5d",
            ".idata$4",
            ".idata$6",
            ".text",
            ".data",
            ".bss",
            ".idata$7",
            ".idata$5|",
            ".idata$4",
            ".idata$6",
            ".text",
            ".data",
            ".bss",
            ".idata$7 )",
            ".idata$5",
            ".idata$4",
            ".idata$66",
            ".text",
            ".data",
            ".bss",
            ".idata$7",
            ".idata$5t",
            ".idata$4",
            ".idata$6",
            ".text",
            ".data",
            ".bss",
            ".idata$7(",
            ".idata$5\\",
            ".idata$4",
            ".idata$6",
            ".text",
            ".data",
            ".bss",
            ".idata$7",
            ".idata$5",
            ".idata$4",
            ".idata$6",
            ".text",
            ".data",
            ".bss",
            ".idata$7",
            ".idata$5",
            ".idata$4",
            ".idata$6",
            ".text",
            ".data",
            ".bss",
            ".idata$7",
            ".idata$5",
            ".idata$4",
            ".idata$6*",
            "hname",
            "fthunk",
            ".text",
            ".data",
            ".bss",
            ".idata$2P",
            ".idata$4",
            ".idata$5D",
            ".text",
            ".data",
            ".bss",
            ".idata$4D",
            ".idata$5",
            ".idata$7<)",
            ".text",
            ".idata$7*",
            ".idata$5",
            ".idata$4t",
            ".idata$6",
            ".text",
            ".idata$7*",
            ".idata$5T",
            ".idata$4",
            ".idata$6",
            ".text",
            ".idata$7*",
            ".idata$5",
            ".idata$4",
            ".idata$6#",
            ".text",
            ".idata$7*",
            ".idata$5D",
            ".idata$4",
            ".idata$6\"",
            ".text",
            ".idata$7*",
            ".idata$5",
            ".idata$4l",
            ".idata$6!",
            ".text",
            ".idata$7*",
            ".idata$5<",
            ".idata$4",
            ".idata$6\"",
            ".text",
            ".idata$7*",
            ".idata$5\\",
            ".idata$4",
            ".idata$6",
            ".text",
            ".idata$7*",
            ".idata$5L",
            ".idata$4",
            ".idata$6\"",
            ".text",
            ".idata$7t*",
            ".idata$5",
            ".idata$4T",
            ".idata$6!",
            ".text",
            ".idata$7*",
            ".idata$5d",
            ".idata$4",
            ".idata$6,#",
            ".text",
            ".idata$7*",
            ".idata$5",
            ".idata$4",
            ".idata$68\"",
            ".text",
            ".idata$7*",
            ".idata$5t",
            ".idata$4",
            ".idata$6\\#",
            ".text",
            ".idata$7|*",
            ".idata$5",
            ".idata$4d",
            ".idata$6!",
            ".text",
            ".idata$7*",
            ".idata$5|",
            ".idata$4",
            ".idata$6t#",
            ".text",
            ".idata$7p*",
            ".idata$5",
            ".idata$4L",
            ".idata$6!",
            ".text",
            ".idata$7x*",
            ".idata$5",
            ".idata$4\\",
            ".idata$6!",
            ".text",
            ".idata$7*",
            ".idata$5,",
            ".idata$4",
            ".idata$6l\"",
            ".text",
            ".idata$7*",
            ".idata$5",
            ".idata$4|",
            ".idata$6",
            ".text",
            ".idata$7*",
            ".idata$5l",
            ".idata$4",
            ".idata$6@#",
            ".text",
            ".idata$7l*",
            ".idata$5",
            ".idata$4D",
            ".idata$6t!",
            ".text",
            ".idata$7*",
            ".idata$5$",
            ".idata$4",
            ".idata$6T\"",
            ".text",
            ".idata$7*",
            ".idata$54",
            ".idata$4",
            ".idata$6\"",
            ".file",
            "strtok_r.c",
            "strtok_r@",
            ".text",
            ".data",
            ".bss",
            ".xdata",
            ".pdata",
            ".file",
            "sigaction.c",
            ".text",
            ".data",
            ".bss",
            ".xdata",
            ".pdata",
            ".file",
            "sigprocmask.c",
            ".text",
            ".data",
            ".bss",
            ".xdata",
            ".pdata",
            ".file",
            "memchr.c",
            ".text",
            ".data",
            ".bss",
            ".xdata",
            ".pdata",
            ".file",
            "memmem.c",
            "memmem",
            ".text",
            ".data",
            ".bss",
            ".xdata",
            ".pdata",
            ".file",
            "usage.c",
            ".text",
            ".data",
            ".bss",
            ".xdata",
            ".pdata",
            ".rdata",
            ".file",
            "opt.c",
            "next_opt",
            "add_opt",
            ".text",
            ".data",
            ".bss",
            ".rdata",
            ".xdata",
            ".pdata",
            ".file",
            "helpers.c",
            "arg_bad",
            ".text",
            ".data",
            ".bss",
            ".xdata",
            ".pdata",
            ".rdata",
            ".file",
            "parse.c",
            ".text",
            ".data",
            ".bss",
            ".rdata",
            ".xdata",
            ".pdata",
            ".text",
            ".idata$7+",
            ".idata$5",
            ".idata$4<",
            ".idata$6%",
            ".text",
            ".idata$7p+",
            ".idata$5",
            ".idata$4",
            ".idata$64%",
            ".text",
            ".idata$7+",
            ".idata$5",
            ".idata$4d",
            ".idata$6",
            ".text",
            ".idata$7+",
            ".idata$5",
            ".idata$4D",
            ".idata$6%",
            ".text",
            ".idata$7|+",
            ".idata$5",
            ".idata$44",
            ".idata$6%",
            ".text",
            ".idata$7t+",
            ".idata$5",
            ".idata$4$",
            ".idata$6P%",
            ".text",
            ".idata$7x+",
            ".idata$5",
            ".idata$4,",
            ".idata$6p%",
            ".text",
            ".idata$7+",
            ".idata$5",
            ".idata$4l",
            ".idata$6",
            ".text",
            ".idata$7+",
            ".idata$5",
            ".idata$4\\",
            ".idata$6%",
            ".text",
            ".idata$7+",
            ".idata$5",
            ".idata$4T",
            ".idata$6%",
            ".text",
            ".idata$7+",
            ".idata$5",
            ".idata$4L",
            ".idata$6%",
            ".text",
            ".idata$7+",
            ".idata$5",
            ".idata$4",
            ".idata$6D&",
            ".text",
            ".idata$7+",
            ".idata$5",
            ".idata$4|",
            ".idata$6,&",
            ".text",
            ".idata$7+",
            ".idata$5$",
            ".idata$4",
            ".idata$6\\&",
            ".text",
            ".data",
            ".bss",
            ".text",
            ".data",
            ".bss",
            "__xd_a",
            "__xd_z",
            ".text",
            ".data",
            ".bss",
            ".xdata",
            ".pdata",
            ".CRT$XLDH",
            ".CRT$XLC@",
            ".tls",
            ".CRT$XLZP",
            ".CRT$XLA8",
            ".tls$ZZZD",
            ".tls$AAA@",
            ".CRT$XDAX",
            ".CRT$XDZ`",
            ".text",
            ".data",
            ".bss",
            ".xdata",
            ".pdata",
            ".CRT$XIC(",
            ".text",
            ".data",
            ".bss",
            ".xdata",
            ".pdata",
            ".text",
            ".data",
            ".bss",
            "atexit",
            ".text",
            ".data",
            ".bss",
            ".xdata",
            ".pdata",
            ".text",
            ".data",
            ".bss",
            ".text",
            ".data",
            ".bss",
            ".xdata",
            ".pdata",
            ".rdata",
            ".text",
            ".data",
            ".bss",
            ".CRT$XCZ",
            ".CRT$XCA",
            ".CRT$XIZ0",
            ".CRT$XIA",
            "_matherr ",
            ".text",
            ".data",
            ".bss",
            ".xdata",
            ".pdata",
            ".rdata",
            "_setargv",
            ".text",
            ".data",
            ".bss",
            ".xdata",
            ".pdata",
            "the_secs",
            ".text",
            ".data",
            ".bss",
            ".rdata",
            ".xdata",
            ".pdata",
            ".text",
            ".data",
            ".bss",
            ".xdata",
            ".pdata",
            ".rdata",
            "_fpreset",
            "fpreset",
            ".text",
            ".data",
            ".bss",
            ".xdata",
            ".pdata",
            "p.60671",
            "__main",
            ".text",
            ".data",
            ".bss",
            ".xdata",
            ".pdata",
            ".text",
            ".data",
            ".bss",
            ".xdata",
            ".pdata",
            ".text",
            ".data",
            ".bss",
            ".text",
            ".data",
            ".bss",
            ".xdata",
            ".pdata",
            ".text",
            ".data",
            ".bss",
            ".text",
            ".data",
            ".bss",
            ".text",
            ".data",
            ".bss",
            ".text",
            ".data",
            ".bss",
            ".idata$7L'",
            ".idata$5,",
            ".idata$4",
            ".idata$6",
            ".text",
            ".data",
            ".bss",
            ".idata$7<'",
            ".idata$5",
            ".idata$4t",
            ".idata$6",
            ".text",
            ".data",
            ".bss",
            ".idata$70'",
            ".idata$5",
            ".idata$4\\",
            ".idata$6n",
            ".text",
            ".data",
            ".bss",
            ".idata$78'",
            ".idata$5",
            ".idata$4l",
            ".idata$6",
            ".text",
            ".data",
            ".bss",
            ".idata$7@'",
            ".idata$5",
            ".idata$4|",
            ".idata$6",
            ".text",
            ".data",
            ".bss",
            ".idata$7D'",
            ".idata$5",
            ".idata$4",
            ".idata$6",
            ".text",
            ".data",
            ".bss",
            ".idata$7H'",
            ".idata$5$",
            ".idata$4",
            ".idata$6",
            ".text",
            ".data",
            ".bss",
            ".idata$7P'",
            ".idata$54",
            ".idata$4",
            ".idata$6",
            ".text",
            ".data",
            ".bss",
            ".idata$74'",
            ".idata$5",
            ".idata$4d",
            ".idata$6x",
            "hname",
            "fthunk",
            ".text",
            ".data",
            ".bss",
            ".idata$2",
            ".idata$4\\",
            ".idata$5",
            ".text",
            ".data",
            ".bss",
            ".idata$4",
            ".idata$5<",
            ".idata$7T'",
            ".text",
            ".data",
            ".bss",
            ".text",
            ".data",
            ".bss",
            ".xdata",
            ".pdata",
            ".text",
            ".data",
            ".bss",
            ".xdata",
            ".pdata",
            "snprintf",
            ".text",
            ".data",
            ".bss",
            ".xdata",
            ".pdata",
            "_wassert",
            "_assert",
            ".text",
            ".data",
            ".bss",
            ".rdata",
            ".xdata",
            ".pdata",
            "time",
            ".text",
            ".data",
            ".bss",
            ".xdata",
            ".pdata",
            "difftime`",
            ".text",
            ".data",
            ".bss",
            ".xdata",
            ".pdata",
            "stat",
            ".text",
            ".data",
            ".bss",
            ".xdata",
            ".pdata",
            "dirname",
            ".text",
            ".data",
            ".bss",
            ".rdata",
            ".xdata",
            ".pdata",
            "round",
            ".text",
            ".data",
            ".bss",
            ".xdata",
            ".pdata",
            ".rdata",
            "strtoll",
            ".text",
            ".data",
            ".bss",
            ".xdata",
            ".pdata",
            "strtof",
            ".text",
            ".data",
            ".bss",
            ".xdata",
            ".pdata",
            "__strtod",
            "fpi.3686`3",
            ".text",
            ".data",
            ".bss",
            ".xdata",
            ".rdata",
            ".pdata",
            "usleep",
            ".text",
            ".data",
            ".bss",
            ".xdata",
            ".pdata",
            "basename0",
            ".text",
            ".data",
            ".bss",
            ".rdata",
            ".xdata",
            ".pdata",
            ".text",
            ".data",
            ".bss",
            ".xdata",
            ".pdata",
            ".rdata",
            "rvOK",
            ".text",
            ".data",
            ".bss",
            ".xdata",
            ".pdata",
            ".rdata",
            "freelist",
            ".text",
            ".data",
            ".bss",
            ".xdata",
            ".pdata",
            ".rdata",
            ".text",
            ".data",
            ".bss",
            ".xdata",
            ".pdata",
            ".text",
            ".data",
            ".bss",
            ".xdata",
            ".pdata",
            ".text",
            ".data",
            ".bss",
            ".xdata",
            ".pdata",
            ".text",
            ".data",
            ".bss",
            ".xdata",
            ".pdata",
            ".text",
            ".data",
            ".bss",
            ".xdata",
            ".pdata",
            ".text",
            ".data",
            ".bss",
            ".rdata",
            ".xdata",
            ".pdata",
            ".text",
            ".data",
            ".bss",
            ".idata$7'",
            ".idata$5",
            ".idata$4",
            ".idata$6",
            ".text",
            ".data",
            ".bss",
            ".idata$7'",
            ".idata$5",
            ".idata$4",
            ".idata$6L",
            ".text",
            ".data",
            ".bss",
            ".idata$7l'",
            ".idata$5\\",
            ".idata$4",
            ".idata$6",
            ".text",
            ".data",
            ".bss",
            ".idata$7`'",
            ".idata$5D",
            ".idata$4",
            ".idata$6",
            ".text",
            ".data",
            ".bss",
            ".idata$7h'",
            ".idata$5T",
            ".idata$4",
            ".idata$6",
            ".text",
            ".data",
            ".bss",
            ".idata$7x'",
            ".idata$5t",
            ".idata$4",
            ".idata$6&",
            ".text",
            ".data",
            ".bss",
            ".idata$7@(",
            ".idata$5",
            ".idata$4l",
            ".idata$6&",
            ".text",
            ".data",
            ".bss",
            ".idata$74(",
            ".idata$5",
            ".idata$4T",
            ".idata$6",
            ".text",
            ".data",
            ".bss",
            ".idata$7(",
            ".idata$5",
            ".idata$4",
            ".idata$6",
            ".text",
            ".data",
            ".bss",
            ".idata$7'",
            ".idata$5",
            ".idata$4",
            ".idata$6d",
            ".text",
            ".data",
            ".bss",
            ".idata$7'",
            ".idata$5",
            ".idata$4",
            ".idata$6V",
            ".text",
            ".data",
            ".bss",
            ".idata$7'",
            ".idata$5",
            ".idata$4",
            ".idata$6",
            ".text",
            ".data",
            ".bss",
            ".idata$7'",
            ".idata$5<",
            ".idata$4",
            ".idata$6>",
            ".text",
            ".data",
            ".bss",
            ".idata$7'",
            ".idata$5",
            ".idata$4",
            ".idata$6n",
            ".text",
            ".data",
            ".bss",
            ".idata$7'",
            ".idata$5",
            ".idata$4L",
            ".idata$6",
            ".text",
            ".data",
            ".bss",
            ".idata$7'",
            ".idata$5",
            ".idata$4T",
            ".idata$6",
            ".text",
            ".data",
            ".bss",
            ".idata$7p'",
            ".idata$5d",
            ".idata$4",
            ".idata$6",
            ".text",
            ".data",
            ".bss",
            ".idata$7'",
            ".idata$5$",
            ".idata$4",
            ".idata$6&",
            ".text",
            ".data",
            ".bss",
            ".idata$7p(",
            ".idata$5d",
            ".idata$4",
            ".idata$6",
            ".text",
            ".data",
            ".bss",
            ".idata$7",
            ".idata$5",
            ".idata$4",
            ".idata$6",
            ".text",
            ".data",
            ".bss",
            ".idata$7'",
            ".idata$5T",
            ".idata$4",
            ".idata$6X",
            ".text",
            ".data",
            ".bss",
            ".idata$7`(",
            ".idata$5D",
            ".idata$4",
            ".idata$6p",
            ".text",
            ".data",
            ".bss",
            ".idata$7(",
            ".idata$5",
            ".idata$4",
            ".idata$6",
            ".text",
            ".data",
            ".bss",
            ".idata$7(",
            ".idata$5",
            ".idata$4\\",
            ".idata$6N",
            ".text",
            ".data",
            ".bss",
            ".idata$7(",
            ".idata$5",
            ".idata$4",
            ".idata$6",
            ".text",
            ".data",
            ".bss",
            ".idata$7(",
            ".idata$5",
            ".idata$4T",
            ".idata$6D",
            ".text",
            ".data",
            ".bss",
            ".idata$7x(",
            ".idata$5t",
            ".idata$4",
            ".idata$6",
            ".text",
            ".data",
            ".bss",
            ".idata$7'",
            ".idata$5d",
            ".idata$4",
            ".idata$6j",
            ".text",
            ".data",
            ".bss",
            ".idata$7'",
            ".idata$5",
            ".idata$4",
            ".idata$6",
            ".text",
            ".data",
            ".bss",
            ".idata$7P(",
            ".idata$5$",
            ".idata$4",
            ".idata$6N",
            ".text",
            ".data",
            ".bss",
            ".idata$7D(",
            ".idata$5",
            ".idata$4t",
            ".idata$60",
            ".text",
            ".data",
            ".bss",
            ".idata$7(",
            ".idata$5",
            ".idata$4",
            ".idata$6",
            ".text",
            ".data",
            ".bss",
            ".idata$7(",
            ".idata$5",
            ".idata$4",
            ".idata$6",
            ".text",
            ".data",
            ".bss",
            ".idata$70(",
            ".idata$5",
            ".idata$4L",
            ".idata$6",
            ".text",
            ".data",
            ".bss",
            ".idata$7'",
            ".idata$5\\",
            ".idata$4",
            ".idata$6b",
            ".text",
            ".data",
            ".bss",
            ".idata$7T(",
            ".idata$5,",
            ".idata$4",
            ".idata$6X",
            ".text",
            ".data",
            ".bss",
            ".idata$7'",
            ".idata$54",
            ".idata$4",
            ".idata$68",
            ".text",
            ".data",
            ".bss",
            ".idata$7H(",
            ".idata$5",
            ".idata$4|",
            ".idata$6:",
            ".text",
            ".data",
            ".bss",
            ".idata$7((",
            ".idata$5",
            ".idata$4<",
            ".idata$6",
            ".text",
            ".data",
            ".bss",
            ".idata$7(",
            ".idata$5",
            ".idata$4",
            ".idata$6",
            ".text",
            ".data",
            ".bss",
            ".idata$7<(",
            ".idata$5",
            ".idata$4d",
            ".idata$6",
            ".text",
            ".data",
            ".bss",
            ".idata$7",
            ".idata$5",
            ".idata$4",
            ".idata$6",
            ".text",
            ".data",
            ".bss",
            ".idata$7'",
            ".idata$5|",
            ".idata$4",
            ".idata$6",
            ".text",
            ".data",
            ".bss",
            ".idata$7'",
            ".idata$5t",
            ".idata$4",
            ".idata$6|",
            ".text",
            ".data",
            ".bss",
            ".idata$7'",
            ".idata$5l",
            ".idata$4",
            ".idata$6r",
            ".text",
            ".data",
            ".bss",
            ".idata$7'",
            ".idata$5D",
            ".idata$4",
            ".idata$6F",
            ".text",
            ".data",
            ".bss",
            ".idata$7t(",
            ".idata$5l",
            ".idata$4",
            ".idata$6",
            ".text",
            ".data",
            ".bss",
            ".idata$7'",
            ".idata$5,",
            ".idata$4",
            ".idata$60",
            ".text",
            ".data",
            ".bss",
            ".idata$7(",
            ".idata$5",
            ".idata$4t",
            ".idata$6l",
            ".text",
            ".data",
            ".bss",
            ".idata$7",
            ".idata$5",
            ".idata$4",
            ".idata$6",
            ".text",
            ".data",
            ".bss",
            ".idata$7 (",
            ".idata$5",
            ".idata$4,",
            ".idata$6",
            ".text",
            ".data",
            ".bss",
            ".idata$7(",
            ".idata$5",
            ".idata$4L",
            ".idata$6:",
            ".text",
            ".data",
            ".bss",
            ".idata$7|(",
            ".idata$5|",
            ".idata$4",
            ".idata$6",
            ".text",
            ".data",
            ".bss",
            ".idata$7\\(",
            ".idata$5<",
            ".idata$4",
            ".idata$6h",
            ".text",
            ".data",
            ".bss",
            ".idata$7(",
            ".idata$5",
            ".idata$4d",
            ".idata$6X",
            ".text",
            ".data",
            ".bss",
            ".idata$7(",
            ".idata$5",
            ".idata$4l",
            ".idata$6b",
            ".text",
            ".data",
            ".bss",
            ".idata$7",
            ".idata$5",
            ".idata$4",
            ".idata$6",
            ".text",
            ".data",
            ".bss",
            ".idata$7'",
            ".idata$5",
            ".idata$4|",
            ".idata$6",
            ".text",
            ".data",
            ".bss",
            ".idata$7(",
            ".idata$5",
            ".idata$4|",
            ".idata$6x",
            ".text",
            ".data",
            ".bss",
            ".idata$7",
            ".idata$5",
            ".idata$4",
            ".idata$6",
            ".text",
            ".data",
            ".bss",
            ".idata$7",
            ".idata$5",
            ".idata$4",
            ".idata$6",
            ".text",
            ".data",
            ".bss",
            ".idata$7",
            ".idata$5",
            ".idata$4",
            ".idata$6",
            ".text",
            ".data",
            ".bss",
            ".idata$7L(",
            ".idata$5",
            ".idata$4",
            ".idata$6D",
            ".text",
            ".data",
            ".bss",
            ".idata$7(",
            ".idata$5",
            ".idata$4,",
            ".idata$6",
            ".text",
            ".data",
            ".bss",
            ".idata$7'",
            ".idata$5",
            ".idata$4<",
            ".idata$6",
            ".text",
            ".data",
            ".bss",
            ".idata$7(",
            ".idata$5",
            ".idata$4<",
            ".idata$6&",
            ".text",
            ".data",
            ".bss",
            ".idata$7(",
            ".idata$5",
            ".idata$4$",
            ".idata$6",
            ".text",
            ".data",
            ".bss",
            ".idata$7(",
            ".idata$5",
            ".idata$4",
            ".idata$6",
            ".text",
            ".data",
            ".bss",
            ".idata$7d(",
            ".idata$5L",
            ".idata$4",
            ".idata$6z",
            ".text",
            ".data",
            ".bss",
            ".idata$7'",
            ".idata$5L",
            ".idata$4",
            ".idata$6P",
            ".text",
            ".data",
            ".bss",
            ".idata$7(",
            ".idata$5",
            ".idata$4D",
            ".idata$60",
            ".text",
            ".data",
            ".bss",
            ".idata$7(",
            ".idata$5",
            ".idata$44",
            ".idata$6",
            ".text",
            ".data",
            ".bss",
            ".idata$7'",
            ".idata$5",
            ".idata$4t",
            ".idata$6",
            ".text",
            ".data",
            ".bss",
            ".idata$7l(",
            ".idata$5\\",
            ".idata$4",
            ".idata$6",
            ".text",
            ".data",
            ".bss",
            ".idata$7X(",
            ".idata$54",
            ".idata$4",
            ".idata$6`",
            ".text",
            ".data",
            ".bss",
            ".idata$7(",
            ".idata$5",
            ".idata$4",
            ".idata$6",
            ".text",
            ".data",
            ".bss",
            ".idata$7t'",
            ".idata$5l",
            ".idata$4",
            ".idata$6",
            ".text",
            ".data",
            ".bss",
            ".idata$7'",
            ".idata$5",
            ".idata$44",
            ".idata$6",
            ".text",
            ".data",
            ".bss",
            ".idata$7'",
            ".idata$5",
            ".idata$4,",
            ".idata$6",
            ".text",
            ".data",
            ".bss",
            ".idata$7d'",
            ".idata$5L",
            ".idata$4",
            ".idata$6",
            ".text",
            ".data",
            ".bss",
            ".idata$7'",
            ".idata$5",
            ".idata$4d",
            ".idata$6",
            ".text",
            ".data",
            ".bss",
            ".idata$7|'",
            ".idata$5|",
            ".idata$4",
            ".idata$68",
            ".text",
            ".data",
            ".bss",
            ".idata$7'",
            ".idata$5",
            ".idata$4$",
            ".idata$6",
            ".text",
            ".data",
            ".bss",
            ".idata$7'",
            ".idata$5",
            ".idata$4l",
            ".idata$6",
            ".text",
            ".data",
            ".bss",
            ".idata$7'",
            ".idata$5",
            ".idata$4",
            ".idata$6x",
            ".text",
            ".data",
            ".bss",
            ".idata$7'",
            ".idata$5",
            ".idata$4\\",
            ".idata$6",
            ".text",
            ".data",
            ".bss",
            ".idata$7'",
            ".idata$5",
            ".idata$4D",
            ".idata$6",
            ".text",
            ".data",
            ".bss",
            ".idata$7h(",
            ".idata$5T",
            ".idata$4",
            ".idata$6",
            ".text",
            ".data",
            ".bss",
            ".idata$7(",
            ".idata$5$",
            ".idata$4",
            ".idata$6",
            ".text",
            ".data",
            ".bss",
            ".idata$78(",
            ".idata$5",
            ".idata$4\\",
            ".idata$6",
            ".text",
            ".data",
            ".bss",
            ".idata$7$(",
            ".idata$5",
            ".idata$44",
            ".idata$6",
            ".text",
            ".data",
            ".bss",
            ".idata$7",
            ".idata$5",
            ".idata$4$",
            ".idata$6",
            ".text",
            ".data",
            ".bss",
            ".idata$7,(",
            ".idata$5",
            ".idata$4D",
            ".idata$6",
            "hname",
            "fthunk",
            ".text",
            ".data",
            ".bss",
            ".idata$2(",
            ".idata$4",
            ".idata$5D",
            ".text",
            ".data",
            ".bss",
            ".idata$4",
            ".idata$5,",
            ".idata$7(",
            ".text",
            ".data",
            ".bss",
            ".idata$7(",
            ".idata$54",
            ".idata$4",
            ".idata$6",
            "hname",
            "fthunk",
            ".text",
            ".data",
            ".bss",
            ".idata$2<",
            ".idata$4",
            ".idata$54",
            ".text",
            ".data",
            ".bss",
            ".idata$4",
            ".idata$5<",
            ".idata$7(",
            ".text",
            ".data",
            ".bss",
            ".idata$7",
            ".idata$5",
            ".idata$4",
            ".idata$6",
            ".text",
            ".data",
            ".bss",
            ".idata$7",
            ".idata$5",
            ".idata$4",
            ".idata$6",
            ".text",
            ".data",
            ".bss",
            ".idata$7&",
            ".idata$5",
            ".idata$4d",
            ".idata$6*",
            ".text",
            ".data",
            ".bss",
            ".idata$7&",
            ".idata$5",
            ".idata$4l",
            ".idata$6<",
            ".text",
            ".data",
            ".bss",
            ".idata$7",
            ".idata$5",
            ".idata$4$",
            ".idata$6",
            ".text",
            ".data",
            ".bss",
            ".idata$7&",
            ".idata$5d",
            ".idata$4",
            ".idata$6",
            ".text",
            ".data",
            ".bss",
            ".idata$7&",
            ".idata$5",
            ".idata$4L",
            ".idata$6",
            ".text",
            ".data",
            ".bss",
            ".idata$7&",
            ".idata$5",
            ".idata$4t",
            ".idata$6N",
            ".text",
            ".data",
            ".bss",
            ".idata$7&",
            ".idata$5",
            ".idata$4,",
            ".idata$6",
            ".text",
            ".data",
            ".bss",
            ".idata$7&",
            ".idata$5",
            ".idata$4",
            ".idata$6",
            ".text",
            ".data",
            ".bss",
            ".idata$7&",
            ".idata$5T",
            ".idata$4",
            ".idata$6",
            ".text",
            ".data",
            ".bss",
            ".idata$7&",
            ".idata$5",
            ".idata$4",
            ".idata$6r",
            ".text",
            ".data",
            ".bss",
            ".idata$7&",
            ".idata$5L",
            ".idata$4",
            ".idata$6",
            ".text",
            ".data",
            ".bss",
            ".idata$7&",
            ".idata$5<",
            ".idata$4",
            ".idata$6",
            ".text",
            ".data",
            ".bss",
            ".idata$7&",
            ".idata$5",
            ".idata$4$",
            ".idata$6",
            ".text",
            ".data",
            ".bss",
            ".idata$7x&",
            ".idata$5",
            ".idata$4",
            ".idata$64",
            ".text",
            ".data",
            ".bss",
            ".idata$7&",
            ".idata$5",
            ".idata$4",
            ".idata$6",
            ".text",
            ".data",
            ".bss",
            ".idata$7&",
            ".idata$5",
            ".idata$4",
            ".idata$6",
            ".text",
            ".data",
            ".bss",
            ".idata$7&",
            ".idata$5\\",
            ".idata$4",
            ".idata$6",
            ".text",
            ".data",
            ".bss",
            ".idata$7&",
            ".idata$5t",
            ".idata$4",
            ".idata$6H",
            ".text",
            ".data",
            ".bss",
            ".idata$7",
            ".idata$5",
            ".idata$4L",
            ".idata$6^",
            ".text",
            ".data",
            ".bss",
            ".idata$7",
            ".idata$5",
            ".idata$4D",
            ".idata$6L",
            ".text",
            ".data",
            ".bss",
            ".idata$7&",
            ".idata$5",
            ".idata$4\\",
            ".idata$6",
            ".text",
            ".data",
            ".bss",
            ".idata$7&",
            ".idata$5D",
            ".idata$4",
            ".idata$6",
            ".text",
            ".data",
            ".bss",
            ".idata$7&",
            ".idata$5",
            ".idata$4|",
            ".idata$6^",
            ".text",
            ".data",
            ".bss",
            ".idata$7&",
            ".idata$5",
            ".idata$4<",
            ".idata$6",
            ".text",
            ".data",
            ".bss",
            ".idata$7&",
            ".idata$5",
            ".idata$4D",
            ".idata$6",
            ".text",
            ".data",
            ".bss",
            ".idata$7&",
            ".idata$5",
            ".idata$4",
            ".idata$6x",
            ".text",
            ".data",
            ".bss",
            ".idata$7&",
            ".idata$5l",
            ".idata$4",
            ".idata$6.",
            ".text",
            ".data",
            ".bss",
            ".idata$7&",
            ".idata$5|",
            ".idata$4",
            ".idata$6^",
            ".text",
            ".data",
            ".bss",
            ".idata$7&",
            ".idata$5",
            ".idata$4",
            ".idata$6r",
            ".text",
            ".data",
            ".bss",
            ".idata$7&",
            ".idata$5",
            ".idata$4",
            ".idata$6",
            ".text",
            ".data",
            ".bss",
            ".idata$7",
            ".idata$5",
            ".idata$4<",
            ".idata$60",
            ".text",
            ".data",
            ".bss",
            ".idata$7&",
            ".idata$5",
            ".idata$44",
            ".idata$6",
            ".text",
            ".data",
            ".bss",
            ".idata$7",
            ".idata$5",
            ".idata$4,",
            ".idata$6",
            ".text",
            ".data",
            ".bss",
            ".idata$7&",
            ".idata$5",
            ".idata$4",
            ".idata$6Z",
            ".text",
            ".data",
            ".bss",
            ".idata$7",
            ".idata$5",
            ".idata$44",
            ".idata$6\"",
            ".text",
            ".data",
            ".bss",
            ".idata$7&",
            ".idata$54",
            ".idata$4",
            ".idata$6",
            ".text",
            ".data",
            ".bss",
            ".idata$7|&",
            ".idata$5",
            ".idata$4",
            ".idata$6B",
            ".text",
            ".data",
            ".bss",
            ".idata$7&",
            ".idata$5,",
            ".idata$4",
            ".idata$6",
            ".text",
            ".data",
            ".bss",
            ".idata$7&",
            ".idata$5$",
            ".idata$4",
            ".idata$6",
            ".text",
            ".data",
            ".bss",
            ".idata$7&",
            ".idata$5",
            ".idata$4T",
            ".idata$6",
            "hname",
            "fthunk",
            ".text",
            ".data",
            ".bss",
            ".idata$2",
            ".idata$4",
            ".idata$5",
            ".text",
            ".data",
            ".bss",
            ".idata$4T",
            ".idata$5",
            ".idata$7 '",
            ".file",
            "crtend.c",
            ".text",
            ".data",
            ".bss",
            ".text",
            ".idata$7*",
            ".idata$5",
            ".idata$4",
            ".idata$6#",
            ".text",
            ".idata$7*",
            ".idata$5",
            ".idata$4",
            ".idata$6#",
            ".text",
            ".idata$7*",
            ".idata$5",
            ".idata$4",
            ".idata$6#",
            ".text",
            ".idata$7*",
            ".idata$5",
            ".idata$4",
            ".idata$6#",
            ".text",
            ".idata$7*",
            ".idata$5",
            ".idata$4",
            ".idata$6#",
            ".text",
            ".idata$7*",
            ".idata$5",
            ".idata$4$\t",
            ".idata$6#",
            ".text",
            ".idata$7*",
            ".idata$5",
            ".idata$4,\t",
            ".idata$6#",
            ".text",
            ".idata$7*",
            ".idata$5",
            ".idata$44\t",
            ".idata$6#",
            ".text",
            ".idata$7*",
            ".idata$5",
            ".idata$4<\t",
            ".idata$6#",
            ".text",
            ".idata$7*",
            ".idata$5",
            ".idata$4D\t",
            ".idata$6",
            ".text",
            ".idata$7*",
            ".idata$5",
            ".idata$4L\t",
            ".idata$6",
            ".text",
            ".idata$7",
            ".idata$5",
            ".idata$4T\t",
            ".idata$6",
            ".text",
            ".idata$7",
            ".idata$5",
            ".idata$4\\\t",
            ".idata$6($",
            ".text",
            ".idata$7",
            ".idata$5",
            ".idata$4d\t",
            ".idata$64$",
            ".text",
            ".idata$7",
            ".idata$5",
            ".idata$4l\t",
            ".idata$6@$",
            ".text",
            ".idata$7",
            ".idata$5",
            ".idata$4t\t",
            ".idata$6L$",
            ".text",
            ".idata$7",
            ".idata$5",
            ".idata$4|\t",
            ".idata$6T$",
            ".text",
            ".idata$7",
            ".idata$5",
            ".idata$4\t",
            ".idata$6`$",
            ".text",
            ".idata$7",
            ".idata$5$",
            ".idata$4\t",
            ".idata$6l$",
            ".text",
            ".idata$7 +",
            ".idata$5,",
            ".idata$4\t",
            ".idata$6x$",
            ".text",
            ".idata$7$+",
            ".idata$54",
            ".idata$4\t",
            ".idata$6$",
            ".text",
            ".idata$7(+",
            ".idata$5<",
            ".idata$4\t",
            ".idata$6$",
            ".text",
            ".idata$7,+",
            ".idata$5D",
            ".idata$4\t",
            ".idata$6$",
            ".text",
            ".idata$70+",
            ".idata$5L",
            ".idata$4\t",
            ".idata$6$",
            ".text",
            ".idata$74+",
            ".idata$5T",
            ".idata$4\t",
            ".idata$6$",
            ".text",
            ".idata$78+",
            ".idata$5\\",
            ".idata$4\t",
            ".idata$6$",
            ".text",
            ".idata$7<+",
            ".idata$5d",
            ".idata$4\t",
            ".idata$6$",
            ".text",
            ".idata$7@+",
            ".idata$5l",
            ".idata$4\t",
            ".idata$6$",
            ".text",
            ".idata$7D+",
            ".idata$5t",
            ".idata$4\t",
            ".idata$6$",
            ".text",
            ".idata$7H+",
            ".idata$5|",
            ".idata$4\t",
            ".idata$6$",
            ".text",
            ".idata$7L+",
            ".idata$5",
            ".idata$4\t",
            ".idata$6$",
            ".text",
            ".idata$7P+",
            ".idata$5",
            ".idata$4\t",
            ".idata$6",
            ".text",
            ".idata$7T+",
            ".idata$5",
            ".idata$4\t",
            ".idata$6",
            ".text",
            ".idata$7X+",
            ".idata$5",
            ".idata$4",
            ".idata$6",
            ".text",
            ".idata$7\\+",
            ".idata$5",
            ".idata$4",
            ".idata$6(%",
            ".rdata",
            ".idata$2d",
            ".idata$5",
            ".idata$4L",
            ".idata$2x",
            ".idata$5",
            ".idata$4",
            ".idata$2",
            ".idata$5",
            ".idata$4D",
            ".idata$2",
            ".idata$5",
            ".idata$4",
            ".idata$2",
            ".idata$5",
            ".idata$4",
            ".idata$2",
            ".idata$5",
            ".idata$4|",
            ".idata$4",
            ".idata$5|",
            ".idata$7)",
            ".idata$4|",
            ".idata$5",
            ".idata$7)",
            ".idata$4",
            ".idata$5",
            ".idata$7*",
            ".idata$4",
            ".idata$5",
            ".idata$7`+",
            ".idata$4t",
            ".idata$5",
            ".idata$7+",
            ".idata$4",
            ".idata$5,",
            ".idata$7+",
            "__xc_z",
            "strcpy",
            "printf",
            "vsprintfL",
            "recv",
            "connect",
            "strerrorM",
            "_lock",
            "memmove",
            "__xl_a",
            "_cexit",
            "getenv",
            "ceil",
            "codes",
            "floor",
            "__xl_d",
            "_tls_endD",
            "SHA256_K",
            "memcpy",
            "endwin",
            "perror",
            "puts",
            "islower",
            "pools",
            "tolower",
            "feof",
            "total_go\"",
            "malloc",
            "isatty",
            "_CRT_MT",
            "wcstombsN",
            "socket",
            "select",
            "SleepEx",
            "isspace",
            "fflush",
            "ch_lock",
            "mbstowcsN",
            "send",
            "abort",
            "mvwhlinexP",
            "echo",
            "__dll__",
            "strtol",
            "nocbreakP",
            "accept",
            "waddstr",
            "strrchr",
            "calloc",
            "idlok",
            "mainwin",
            "write",
            "atof",
            "fprintf",
            "wrefresh",
            "total_roL#",
            "strcat",
            "cbreak",
            "bind",
            "wattroffP",
            "vprintf",
            "Sleep",
            "fseek",
            "nettime",
            "_stat64",
            "__xi_z",
            "clFinishj",
            "keypad",
            "strstr",
            "rand",
            "signal",
            "read",
            "isupper",
            "strncmp",
            "wgetnstrP",
            "mvwin",
            "swork_id#",
            "strncpy",
            "htonl",
            "log10",
            "realloc",
            "noecho",
            "strtok",
            "memcmp",
            "listen",
            "wattron",
            "fdopen",
            "sscanf",
            "execv",
            "scrollokP",
            "getmaxx",
            "isalpha",
            "cpus",
            "strncat",
            "fread",
            "newwin",
            "strdup",
            "fopen",
            "memset",
            "initscr",
            "touchwinP",
            "ftell",
            "srand",
            "immedok",
            "fclose",
            "ztex_api",
            "wmove",
            "__xl_z",
            "__end__",
            "gpus",
            "strcmp",
            "delwin",
            "logwin",
            "shutdown",
            "thr_infoh",
            "__xi_a",
            "__xc_a",
            "leaveok",
            "sprintf",
            "strcspn",
            "_fmode",
            "wgetch",
            "ldiv",
            "wresize",
            "fputc",
            "__xl_c",
            "hDLL",
            "_newmode",
            "fwrite",
            "_time64",
            "devices",
            "access",
            "erase",
            "htons",
            "rewind",
            "wclear",
            "_stricmp8L",
            "_onexit",
            "exit",
            "_errno",
            "atoi",
            "_charmax2",
            "fileno",
            "_exit",
            "getq",
            "strspn",
            "cmds",
            "strlen",
            "toupper",
            "getmaxy",
            "nDevs",
            "cnfbuf",
            "FT_CloseXk",
            "gws_condi",
            "strchr",
            "fputs",
            "cpu_api",
            "_unlock",
            "WSAIoctl",
            "FT_Open",
            "wprintw",
            "close",
            "vfprintfHM",
            "strpbrk",
            "raise",
            "free",
            ".debug_aranges",
            ".debug_info",
            ".debug_abbrev",
            ".debug_line",
            ".debug_frame",
            ".debug_str",
            ".debug_loc",
            ".debug_ranges",
            "__mingw_invalidParameterHandler",
            "pre_cpp_init",
            "startinfo",
            "pre_c_init",
            "managedapp",
            "__tmainCRTStartup",
            "has_cctor",
            "WinMainCRTStartup",
            ".l_startw",
            "mainCRTStartup",
            ".CRT$XCAA",
            ".CRT$XIAA",
            "json_decref",
            "_curl_easy_setopt_err_long",
            "_curl_easy_setopt_err_curl_off_t",
            "_curl_easy_setopt_err_string",
            "_curl_easy_setopt_err_write_callback",
            "_curl_easy_setopt_err_read_cb",
            "_curl_easy_setopt_err_ioctl_cb",
            "_curl_easy_setopt_err_sockopt_cb",
            "_curl_easy_setopt_err_opensocket_cb",
            "_curl_easy_setopt_err_progress_cb",
            "_curl_easy_setopt_err_debug_cb",
            "_curl_easy_setopt_err_ssl_ctx_cb",
            "_curl_easy_setopt_err_conv_cb",
            "_curl_easy_setopt_err_seek_cb",
            "_curl_easy_setopt_err_cb_data",
            "_curl_easy_setopt_err_error_buffer",
            "_curl_easy_setopt_err_FILE",
            "_curl_easy_setopt_err_postfields",
            "_curl_easy_setopt_err_curl_httpost",
            "_curl_easy_setopt_err_curl_slist",
            "_curl_easy_setopt_err_CURLSH",
            "_curl_easy_getinfo_err_string",
            "_curl_easy_getinfo_err_long",
            "_curl_easy_getinfo_err_double",
            "_curl_easy_getinfo_err_curl_slist",
            "localtime_convert",
            "nanosleep",
            "__list_add",
            "list_add_tail",
            "__list_del",
            "list_empty",
            "align_len",
            "__real_getch",
            "string_elist_add",
            "swap32yes",
            "mutex_lock",
            "mutex_unlock",
            "rw_unlock",
            "rd_unlock",
            "wr_unlock",
            "mutex_init",
            "rwlock_init",
            "packagename",
            "opt_benchmark",
            "want_longpoll",
            "want_getwork",
            "opt_coinbase_script",
            "template_nonce",
            "want_stratum",
            "opt_retries",
            "detect_algo",
            "opt_nogpu",
            "devices_enabled",
            "opt_removedisabled",
            "opt_submit_stale",
            "opt_shares",
            "opt_submit_threads",
            "gwsched_thr_id",
            "stage_thr_id",
            "watchpool_thr_id",
            "watchdog_thr_id",
            "input_thr_id",
            "api_thr_id",
            "total_threads",
            "stgd_lock",
            "sshare_lock",
            "total_tv_start",
            "total_tv_end",
            "miner_started",
            "submitting_lock",
            "total_submitting",
            "submit_waiting",
            "staged_rollable",
            "currentpool",
            "total_urls",
            "total_users",
            "total_passes",
            "curses_active",
            "current_block",
            "current_hash",
            "current_block_id",
            "datestamp",
            "blocktime",
            "best_share",
            "block_diff",
            "known_blkheight_current",
            "known_blkheight",
            "known_blkheight_blkid",
            "stratum_shares",
            "config_loaded",
            "include_count",
            "total_work",
            "time_before",
            "should_run",
            "get_datestamp",
            "get_timestamp",
            "applog_and_exit",
            "sharelog_lock",
            "sharelog_file",
            "getwork_req",
            "pool_tset",
            "pool_tclear",
            "current_pool",
            "set_int_range",
            "set_int_0_to_9999",
            "set_int_1_to_65535",
            "set_int_0_to_10",
            "set_int_1_to_10",
            "set_strdup",
            "set_b58addr",
            "set_request_diff",
            "add_serial_all",
            "add_serial",
            "set_devices",
            "set_balance",
            "set_loadbalance",
            "set_rotate",
            "detect_stratum",
            "set_userpass",
            "set_pool_priority",
            "set_pool_proxy",
            "set_pool_force_rollntime",
            "enable_debug",
            "set_schedtime",
            "set_sharelog",
            "temp_cutoff_str",
            "temp_target_str",
            "set_temp_cutoff",
            "set_temp_target",
            "temp_strtok",
            "load_temp_config",
            "set_api_allow",
            "set_api_groups",
            "set_api_description",
            "set_icarus_options",
            "set_icarus_timing",
            "opt_config_table",
            "fileconf_load",
            "parse_config",
            "err_buf.72270",
            "load_config",
            "load_default_config",
            "opt_verusage_and_exit",
            "opt_cmdline_table",
            "jobj_binary",
            "calc_midstate",
            "make_work",
            "clean_work",
            "free_work",
            "workpadding",
            "__update_block_title",
            "have_block_height",
            "work_decode",
            "appenderr.72380",
            "truncatewarning.72384",
            "dev_from_id",
            "decay_time",
            "__total_staged",
            "total_staged",
            "statusline",
            "devcursor",
            "logcursor",
            "devsummaryYOffset",
            "total_lines",
            "unlock_curses",
            "lock_curses",
            "curses_active_locked",
            "my_cancellable_getch",
            "tailsprintf",
            "suffix_string",
            "utility_to_hashrate",
            "_unitchar",
            "hashrate_pick_unit",
            "h2bs_fmt_size",
            "hashrate_to_bufstr",
            "ti_hashrate_bufstr",
            "get_statline2",
            "awidth.72516",
            "rwidth.72517",
            "hwwidth.72518",
            "uwidth.72519",
            "text_print_status",
            "curses_print_status",
            "adj_width",
            "dev_width",
            "curses_print_devstatus",
            "print_status",
            "change_logwinsize",
            "check_winsizes",
            "device_line_id_count",
            "switch_compact",
            "wlogprint",
            "log_curses_only",
            "clear_logwin",
            "solves_block",
            "enable_pool",
            "disable_pool",
            "reject_pool",
            "share_result_msg",
            "share_result",
            "share_diff",
            "submit_upstream_work_request",
            "submit_upstream_work_completed",
            "select_balanced",
            "select_pool",
            "rotating_pool.72728",
            "DIFFEXACTONE",
            "target_diff",
            "calc_diff",
            "get_benchmark_work",
            "bench_block.72754",
            "update_last_work",
            "gbt_req_target",
            "prepare_rpc_req2",
            "pool_protocol_name",
            "pool_protocol_fallback",
            "get_upstream_work",
            "disable_curses",
            "__kill_work",
            "kill_work",
            "initial_args",
            "app_restart",
            "sighandler",
            "recruit_curl",
            "pop_curl_entry3",
            "pop_curl_entry2",
            "pop_curl_entry",
            "push_curl_entry",
            "should_roll",
            "roll_work",
            "__copy_work",
            "copy_work",
            "make_clone",
            "clone_available",
            "pool_died",
            "stale_work",
            "regen_hash",
            "check_solve",
            "submit_discard_share2",
            "submit_discard_share",
            "my_curl_timer_set",
            "sws_has_ce",
            "begin_submission",
            "retry_submission",
            "submit_work_thread",
            "priority_pool",
            "prioritize_pools",
            "validate_pool_priorities",
            "switch_pools",
            "discard_work",
            "discard_stale",
            "stale_work_future",
            "restart_threads",
            "blkhashstr",
            "set_curblock",
            "block_exists",
            "block_sort",
            "set_blockdiff",
            "test_work_current",
            "work_rollable",
            "hash_push",
            "stage_thread",
            "stage_work",
            "curses_int",
            "display_pool_summary",
            "remove_pool",
            "json_escape_free",
            "json_escape",
            "write_config",
            "zero_bestshare",
            "zero_stats",
            "display_pools",
            "summary_detail_level_str",
            "display_options",
            "default_save_file",
            "set_options",
            "input_thread",
            "api_thread",
            "thread_reportin",
            "thread_reportout",
            "hashmeter",
            "local_mhashes_done.73612",
            "rolling.73613",
            "hashmeter2",
            "stratum_share_result",
            "parse_stratum_response",
            "shutdown_stratum",
            "clear_stratum_shares",
            "clear_pool_work",
            "cnx_needed",
            "stratum_resumed",
            "stratum_thread",
            "init_stratum_thread",
            "stratum_works",
            "pool_active",
            "pool_resus",
            "clone_work",
            "bdiff_target_leadzero",
            "set_work_target",
            "gen_stratum_work",
            "request_work",
            "submit_work_async",
            "hashtest2",
            "_test_nonce2",
            "submit_nonce",
            "abandon_work",
            "mt_disable_start",
            "mt_disable_finish",
            "mt_disable",
            "convert_to_work",
            "select_longpoll_pool",
            "wait_lpcurrent",
            "save_curl_socket",
            "longpoll_thread",
            "stop_longpoll",
            "start_longpoll",
            "reinit_device",
            "rotate_tv",
            "reap_curl",
            "watchpool_thread",
            "mt_enable",
            "proc_enable",
            "watchdog_thread",
            "log_print_status",
            "print_summary",
            "curses_input",
            "add_pool_details",
            "input_pool",
            "enable_curses",
            "cgminer_id_count",
            "register_device",
            "renumber_cgpu",
            "devids.74172",
            "my_blkmaker_sha256_callback",
            ".debug_info",
            ".debug_abbrev",
            ".debug_loc",
            ".debug_aranges",
            ".debug_ranges",
            ".debug_line",
            ".debug_str",
            ".debug_frame",
            "set_maxfd",
            "timer_passed",
            "reduce_timeout_to",
            "select_timeout",
            "hashes_done",
            "minerloop_scanhash",
            "do_job_prepare",
            "job_prepare_complete",
            "do_get_results",
            "job_results_fetched",
            "do_job_start",
            "mt_job_transition",
            "job_start_complete",
            "job_start_abort",
            "do_process_results",
            "minerloop_async",
            "miner_thread",
            "databuf_free",
            "all_data_cb",
            "zero.32294",
            "upload_data_cb",
            "resp_hdr_cb",
            "keep_sockalive",
            "json_rpc_call_sockopt_cb",
            "last_nettime",
            "set_nettime",
            "curl_debug_cb",
            "json_rpc_call_async",
            "json_rpc_call_completed",
            "json_rpc_call",
            "our_curl_supports_proxy_uris",
            "absolute_uri",
            "hash_data",
            "real_block_target",
            "hash_target_check",
            "hash_target_check_v",
            "tq_freezethaw",
            "tq_freeze",
            "thr_info_create",
            "thr_info_freeze",
            "thr_info_cancel",
            "extract_sockaddr",
            "__stratum_send",
            "stratum_send",
            "socket_full",
            "sock_full",
            "clear_sock",
            "recalloc_sock",
            "recv_line",
            "__json_array_string",
            "json_array_string",
            "stratum_probe_transparency",
            "parse_notify",
            "parse_diff",
            "parse_reconnect",
            "send_version",
            "parse_method",
            "auth_stratum",
            "grab_socket_opensocket_cb",
            "initiate_stratum",
            "suspend_stratum",
            "dev_error",
            "realloc_strcat",
            "RenameThread",
            "WindowsErrorStr",
            "msg.32882",
            "fmt.32883",
            "notifier_init",
            "notifier_wake",
            "notifier_read",
            "notifier_destroy",
            "sha2_starts",
            "sha2_process",
            "sha2_update",
            "sha2_padding",
            "sha2_finish",
            "json_incref",
            "WSAErrorMsg",
            "UNAVAILABLE",
            "INVAPIGROUPS",
            "SEPARATOR",
            "APIVERSION",
            "REJECTING",
            "SCRYPTSTR",
            "SHA256STR",
            "DEVICECODE",
            "JSON_COMMAND",
            "JSON_PARAMETER",
            "my_thr_id",
            "quit_restart_lock",
            "do_a_quit",
            "do_a_restart",
            "io_reinit",
            "escape_string",
            "api_add_extra",
            "api_add_data_full",
            "api_add_escape",
            "api_add_string",
            "api_add_const",
            "api_add_int",
            "api_add_uint",
            "api_add_uint32",
            "api_add_uint64",
            "api_add_double",
            "api_add_elapsed",
            "api_add_bool",
            "api_add_timeval",
            "api_add_time",
            "api_add_mhs",
            "api_add_mhtotal",
            "api_add_temp",
            "api_add_utility",
            "api_add_freq",
            "api_add_volts",
            "api_add_hs",
            "api_add_diff",
            "api_add_json",
            "print_data",
            "pgadevice",
            "apiversion",
            "minerconfig",
            "status2str",
            "api_add_device_identifier",
            "devdetail_an",
            "devstatus_an",
            "gpustatus",
            "pgastatus",
            "devinfo_internal",
            "devdetail",
            "devstatus",
            "pgaenable",
            "pgadisable",
            "pgaidentify",
            "poolstatus",
            "gpuenable",
            "gpudisable",
            "gpurestart",
            "switchpool",
            "copyadvanceafter",
            "pooldetails",
            "enablepool",
            "poolpriority",
            "disablepool",
            "removepool",
            "splitgpuvalue",
            "gpuintensity",
            "gpuengine",
            "dorestart",
            "privileged",
            "notifystatus",
            "devdetails",
            "itemstats",
            "minerstats",
            "failoveronly",
            "debugstate",
            "setconfig",
            "checkcommand",
            "send_result",
            "setup_groups",
            "setup_ipaccess",
            "quit_thread",
            "restart_thread",
            "my_log_curses",
            "log_generic",
            "log_error",
            "log_warning",
            "log_notice",
            "log_debug",
            "load_opencl_symbols",
            "set_vector",
            "set_worksize",
            "set_shaders",
            "set_lookup_gap",
            "set_thread_concurrency",
            "select_kernel",
            "set_kernel",
            "set_gpu_map",
            "get_intrange",
            "set_gpu_engine",
            "set_gpu_fan",
            "set_gpu_memclock",
            "set_gpu_memdiff",
            "set_gpu_powertune",
            "set_gpu_vddc",
            "set_temp_overheat",
            "set_intensity",
            "print_ndevs_and_exit",
            "pause_dynamic_threads",
            "manage_gpu",
            "queue_poclbm_kernel",
            "queue_phatk_kernel",
            "queue_diakgcn_kernel",
            "queue_diablo_kernel",
            "queue_scrypt_kernel",
            "set_threads_hashes",
            "reinit_gpu",
            "opencl_detect",
            "reinit_opencl_device",
            "get_opencl_statline_before",
            "get_opencl_api_extra_device_status",
            "blank_res",
            "opencl_thread_prepare",
            "failmessage.70353",
            "opencl_thread_init",
            "opencl_prepare_work",
            "opencl_scanhash",
            "opencl_thread_shutdown",
            "file_contents",
            "clDevicesNum",
            "patch_opcodes",
            "precalc_hash",
            "postcalc_hash",
            "postcalc_hash_async",
            "opt_targettemp",
            "ADL_Main_Memory_Alloc",
            "ADL_Main_Memory_Free",
            "ADL_Main_Control_Create",
            "ADL_Main_Control_Destroy",
            "ADL_Adapter_NumberOfAdapters_Get",
            "ADL_Adapter_AdapterInfo_Get",
            "ADL_Adapter_ID_Get",
            "ADL_Overdrive5_Temperature_Get",
            "ADL_Overdrive5_CurrentActivity_Get",
            "ADL_Overdrive5_ODParameters_Get",
            "ADL_Overdrive5_FanSpeedInfo_Get",
            "ADL_Overdrive5_FanSpeed_Get",
            "ADL_Overdrive5_FanSpeed_Set",
            "ADL_Overdrive5_ODPerformanceLevels_Get",
            "ADL_Overdrive5_ODPerformanceLevels_Set",
            "ADL_Main_Control_Refresh",
            "ADL_Overdrive5_PowerControl_Get",
            "ADL_Overdrive5_PowerControl_Set",
            "ADL_Overdrive5_FanSpeedToDefault_Set",
            "iNumberAdapters",
            "unlock_adl",
            "fanspeed_twin",
            "prepare_adl",
            "__gpu_temp",
            "__gpu_engineclock",
            "gpu_engineclock",
            "__gpu_memclock",
            "gpu_memclock",
            "__gpu_vddc",
            "__gpu_activity",
            "gpu_activity",
            "__gpu_fanspeed",
            "gpu_fanspeed",
            "__gpu_fanpercent",
            "gpu_fanpercent",
            "__gpu_powertune",
            "gpu_powertune",
            "gpu_stats",
            "get_enginerange",
            "set_engineclock",
            "get_memoryrange",
            "set_memoryclock",
            "get_vddcrange",
            "curses_float",
            "get_fanrange",
            "set_fanspeed",
            "set_powertune",
            "fan_autotune",
            "gpu_autotune",
            "set_defaultfan",
            "set_defaultengine",
            "change_autosettings",
            "change_gpusettings",
            "clear_adl",
            "be32enc_vect",
            "SHA256_Transform",
            "SHA256_InitState",
            "passwdpad",
            "PBKDF2_SHA256_80_128",
            "innerpad.69036",
            "PBKDF2_SHA256_80_128_32",
            "ihash_finalblk.69063",
            "salsa20_8",
            "scrypt_1024_1_1_256_sp",
            "scrypt_outputhash",
            "scrypt_test",
            "scanhash_scrypt",
            "string_elist_del",
            "search_needles",
            "_serial_autodetect_ftdi",
            "_serial_autodetect",
            "_serial_detect",
            "serial_claim",
            "claims.69160",
            "serial_open",
            "_serial_read",
            "_open_bitstream",
            "open_bitstream",
            "open_xilinx_bitstream",
            "dclk_prepare",
            "dclk_msg_freqchange",
            "dclk_updateFreq",
            "dclk_gotNonces",
            "dclk_errorCount",
            "dclk_preUpdate",
            "mutex_trylock",
            "protonames",
            "bitforce_send",
            "bitforce_cmd1",
            "bitforce_cmd2",
            "bitforce_detect_one",
            "bitforce_detect_auto",
            "bitforce_detect",
            "bitforce_comm_error",
            "get_bitforce_statline_before",
            "bitforce_thread_prepare",
            "bitforce_clear_buffer",
            "bitforce_init",
            "bitforce_flash_led",
            "bitforce_get_temp",
            "dbg_block_data",
            "bitforce_job_prepare",
            "bitforce_change_mode",
            "bitforce_job_start",
            "_discardedbuf",
            "bitforce_job_get_results",
            "bitforce_process_result_nonces",
            "bitforce_process_qresult_line_i",
            "bitforce_process_qresult_line",
            "next_line",
            "bitforce_job_process_results",
            "bitforce_shutdown",
            "biforce_thread_enable",
            "bitforce_get_stats",
            "bitforce_identify",
            "bitforce_thread_init",
            "bitforce_api_stats",
            "bitforce_poll",
            "sizeof_uint32_t_must_be_4",
            "history_sec",
            "MODE_DEFAULT_STR",
            "MODE_SHORT_STR",
            "MODE_LONG_STR",
            "MODE_VALUE_STR",
            "MODE_UNKNOWN_STR",
            "option_offset",
            "icarus_gets",
            "icarus_write",
            "do_icarus_close",
            "timing_mode_str",
            "set_timing_mode",
            "get_options",
            "icarus_detect_custom",
            "icarus_detect_one",
            "icarus_detect",
            "icarus_prepare",
            "icarus_reopen",
            "icarus_start_work",
            "icarus_scanhash",
            "icarus_api_stats",
            "icarus_shutdown",
            "cairnsmore_detect_one",
            "cairnsmore_detect_auto",
            "cairnsmore_detect",
            "cairnsmore_send_cmd",
            "cairnsmore_supports_dynclock",
            "cairnsmore_change_clock_func",
            "cairnsmore_init",
            "convert_icarus_to_cairnsmore",
            "cairnsmore_api_extra_device_status",
            "cairnsmore_identify",
            "cairnsmore_api_init",
            "driver-cairnsmore.c",
            "modminer_detect_one",
            "modminer_detect_auto",
            "modminer_detect",
            "modminer_reopen",
            "modminer_fpga_upload_bitstream",
            "modminer_device_prepare",
            "modminer_fpga_prepare",
            "modminer_change_clock",
            "modminer_dclk_change_clock",
            "modminer_reduce_clock",
            "_modminer_get_nonce",
            "modminer_fpga_init",
            "get_modminer_upload_percent",
            "get_modminer_statline_before",
            "get_modminer_dev_statline_before",
            "modminer_get_temperature",
            "modminer_get_stats",
            "get_modminer_api_extra_device_status",
            "modminer_prepare_next_work",
            "modminer_start_work",
            "modminer_process_results",
            "modminer_scanhash",
            "modminer_fpga_shutdown",
            "modminer_set_device",
            "x6500_jtag_set",
            "x6500_set_register",
            "x6500_get_register",
            "x6500_foundusb",
            "x6500_detect_one",
            "x6500_detect_auto",
            "x6500_detect",
            "x6500_prepare",
            "x6500_fpga_upload_bitstream",
            "x6500_change_clock",
            "x6500_dclk_change_clock",
            "x6500_thread_init",
            "x6500_get_temperature",
            "x6500_all_idle",
            "x6500_get_stats",
            "get_x6500_upload_percent",
            "get_x6500_statline_before",
            "get_x6500_dev_statline_before",
            "get_x6500_api_extra_device_status",
            "x6500_job_prepare",
            "x6500_job_start",
            "calc_hashes",
            "x6500_process_results",
            "x6500_fpga_poll",
            "ft232r_devinfo_list",
            "ft232r_scan_free",
            "ft232r_scan",
            "ft232r_detect",
            "ft232r_open",
            "ft232r_close",
            "ft232r_purge_buffers",
            "ft232r_set_bitmode",
            "ft232r_readwrite",
            "ft232r_flush",
            "ft232r_write",
            "ft232r_rw_all",
            "ft232r_write_all",
            "ft232r_read",
            "ft232r_read_all",
            "ft232r_get_pins",
            "ft232r_get_bitmode",
            "ft232r_set_cbus_bits",
            "ft232r_get_cbus_bits",
            "jtag_clock_byte",
            "jtag_clock",
            "jtag_rw_bit",
            "_jtag_llrw",
            "jtag_reset",
            "jtag_detect",
            "ztex_selectFpga",
            "ztex_releaseFpga",
            "ztex_setup",
            "ztex_autodetect",
            "ztex_detect",
            "ztex_change_clock_func",
            "ztex_updateFreq",
            "ztex_checkNonce",
            "ztex_scanhash",
            "ztex_statline_before",
            "get_ztex_api_extra_device_status",
            "ztex_prepare",
            "ztex_shutdown",
            "ztex_disable",
            "libusb_cpu_to_le16",
            "libztex_get_string_descriptor_ascii",
            "__func__.69030",
            "libztex_firmwareReset",
            "libztex_checkDevice",
            "__func__.69059",
            "libztex_checkCapability",
            "libztex_detectBitstreamBitOrder",
            "libztex_swapBits",
            "libztex_getFpgaState",
            "libztex_configureFpgaHS",
            "libztex_configureFpgaLS",
            "libztex_configureFpga",
            "libztex_numberOfFpgas",
            "libztex_selectFpga",
            "libztex_setFreq",
            "libztex_resetFpga",
            "libztex_suspend",
            "libztex_prepare_device",
            "__func__.69178",
            "libztex_destroy_device",
            "libztex_scanDevices",
            "__func__.69212",
            "libztex_sendHashData",
            "libztex_readHashData",
            "libztex_freeDevList",
            "action_array",
            "sigaction_handler",
            "sigaction",
            "sigismember",
            "sigemptyset",
            "sigaddset",
            "sigdelset",
            "sigfillset",
            "blocked_set",
            "pending_array",
            "blocked_handler",
            "sigpending",
            "old_handlers",
            "sigprocmask",
            "rpl_signal",
            "rpl_memchr",
            "critical_factorization",
            "two_way_short_needle",
            "two_way_long_needle",
            "write_short_options",
            "opt_usage",
            "first_name",
            "next_name",
            "first_opt",
            "first_lopt",
            "next_lopt",
            "first_sopt",
            "next_sopt",
            "check_opt",
            "_opt_register",
            "opt_register_table",
            "opt_parse",
            "opt_free_table",
            "opt_log_stderr",
            "opt_log_stderr_exit",
            "opt_invalid_argument",
            "opt_set_bool",
            "opt_set_invbool",
            "opt_set_bool_arg",
            "opt_set_invbool_arg",
            "opt_set_charp",
            "opt_set_intval",
            "opt_set_floatval",
            "opt_set_uintval",
            "opt_set_longval",
            "opt_set_ulongval",
            "opt_inc_intval",
            "opt_version_and_exit",
            "opt_usage_and_exit",
            "opt_show_bool",
            "opt_show_invbool",
            "opt_show_charp",
            "opt_show_intval",
            "opt_show_floatval",
            "opt_show_uintval",
            "opt_show_longval",
            "opt_show_ulongval",
            "parse_err",
            "consume_option",
            "parse_one",
            "__dyn_tls_dtor",
            "__dyn_tls_init",
            "__tlregdtor",
            "my_lconv_init",
            "_decode_pointer",
            "_encode_pointer",
            "mingw_onexit",
            "__mingw_SEH_error_handler",
            "__mingw_init_ehandler",
            "was_here.61446",
            "emu_pdata",
            "emu_xdata",
            "_gnu_exception_handler",
            "__mingw_raise_matherr",
            "stUserMathErr",
            "__mingw_setusermatherr",
            "__report_error",
            "__write_memory",
            "maxSections",
            "_pei386_runtime_relocator",
            "was_init.61502",
            "_ValidateImageBase",
            "_FindPESection",
            "_FindPESectionByName",
            "__mingw_GetSectionForAddress",
            "__mingw_GetSectionCount",
            "_FindPESectionExec",
            "_GetPEImageBase",
            "_IsNonwritableInCurrentImage",
            "__mingw_enum_import_library_names",
            "__mingw_get_msvcrt_handle",
            "msvcrt_handle.60749",
            "__do_global_dtors",
            "__do_global_ctors",
            "initialized",
            "__security_init_cookie",
            ".data$__security_cookie",
            ".data$__security_cookie_complement",
            "__report_gsfailure",
            "GS_ContextRecord",
            "GS_ExceptionRecord",
            "GS_ExceptionPointers",
            "__mingwthr_run_key_dtors.part.0",
            "__mingwthr_cs",
            "key_dtor_list",
            "___w64_mingwthr_add_key_dtor",
            "__mingwthr_cs_init",
            "___w64_mingwthr_remove_key_dtor",
            "__mingw_TLScallback",
            "localtime",
            "getntptimeofday",
            "gettimeofday",
            "mingw_gettimeofday",
            "retfail.3559",
            "strtoimax",
            "_difftime64",
            "__increment_D2A",
            "__decrement_D2A",
            "__set_ones_D2A",
            "__strtodg",
            "fivesbits",
            "dtoa_lock",
            "dtoa_CS_init",
            "dtoa_CritSec",
            "dtoa_unlock",
            "dtoa_lock_cleanup",
            "__Balloc_D2A",
            "pmem_next",
            "private_mem",
            "__Bfree_D2A",
            "__multadd_D2A",
            "__i2b_D2A",
            "__mult_D2A",
            "__pow5mult_D2A",
            "p05.24583",
            "__lshift_D2A",
            "__cmp_D2A",
            "__diff_D2A",
            "__b2d_D2A",
            "__d2b_D2A",
            "__strcp_D2A",
            "__s2b_D2A",
            "__ratio_D2A",
            "__match_D2A",
            "__copybits_D2A",
            "__any_on_D2A",
            "__rshift_D2A",
            "__trailz_D2A",
            "__sum_D2A",
            "__gethex_D2A",
            "__hexnan_D2A",
            "__mingw_hexdig_init_D2A",
            ".rdata_runtime_pseudo_reloc",
            "__imp_setsockopt",
            "have_longpoll",
            "libusb_release_interface",
            "__imp_blkmk_append_coinbase_safe",
            "__imp_blkmk_get_data",
            "__imp_closesocket",
            "staged_work",
            "__imp_GetConsoleScreenBufferInfo",
            "___RUNTIME_PSEUDO_RELOC_LIST__",
            "__imp_GetStdHandle",
            "__imp_curl_easy_cleanup",
            "__imp__vsnprintf",
            "request_target_str",
            "__imp_GetStartupInfoA",
            "__imp_libusb_get_string_descriptor_ascii",
            "LocalAlloc",
            "FormatMessageA",
            "__imp_abort",
            "__lib64_libkernel32_a_iname",
            "json_dumps",
            "__imp_getsockname",
            "opt_argv0",
            "__imp_curl_slist_append",
            "__imp_keypad",
            "pthread_cond_signal",
            "__imp_libusb_claim_interface",
            "x6500_api",
            "__data_start__",
            "___DTOR_LIST__",
            "__imp_scrollok",
            "modminer_api",
            "__imp__fmode",
            "__imp_blkmk_address_to_script",
            "__imp__stricmp",
            "__imp__lock",
            "__imp_curl_multi_add_handle",
            "__imp_RtlVirtualUnwind",
            "SetUnhandledExceptionFilter",
            "__imp_GetTimeZoneInformation",
            "__imp_tolower",
            "__nm_LINES",
            "__imp_curl_easy_setopt",
            "icarus_api",
            "__imp_blkmk_time_left",
            "opt_protocol",
            "libusb_get_device_descriptor",
            "pthread_create",
            "__imp_json_dumps",
            "pthread_rwlock_rdlock",
            "libblkmaker_0_1_0_dll_iname",
            "_vsnprintf",
            "__imp_pthread_detach",
            "__imp_calloc",
            "opt_bench_algo",
            "LocalFree",
            "SetCommTimeouts",
            "__imp_FormatMessageA",
            "__imp_curl_multi_init",
            "__fu2_stdscr",
            "__imp_LoadLibraryW",
            "___tls_start__",
            "pthread_rwlock_init",
            "__imp_pthread_mutex_trylock",
            "__ImageBase",
            "libusb_control_transfer",
            "__imp_newwin",
            "MessageBoxA",
            "__imp_send",
            "__imp_json_number_value",
            "_head_libcurl_4_dll",
            "__imp_ceil",
            "__imp_fileno",
            "opt_socks_proxy",
            "GetLastError",
            "__imp_MessageBoxA",
            "__imp_curl_multi_remove_handle",
            "__WSAFDIsSet",
            "GetSystemTimeAsFileTime",
            "mingw_initltssuo_force",
            "opt_api_description",
            "__imp_libusb_control_transfer",
            "libusb_claim_interface",
            "__rt_psrelocs_start",
            "__imp_touchwin",
            "blkmk_append_coinbase_safe",
            "__imp_blktmpl_addcaps",
            "__imp_islower",
            "__imp___dllonexit",
            "__imp_setlocale",
            "__imp__strnicmp",
            "opt_restart",
            "__dll_characteristics__",
            "__imp___WSAFDIsSet",
            "total_bytes_xfer",
            "__size_of_stack_commit__",
            "schedstop",
            "opt_cutofftemp",
            "__imp_json_object",
            "__imp_libusb_exit",
            "__imp_getmaxx",
            "__imp_WSAGetLastError",
            "__iob_func",
            "__imp__acmdln",
            "num_processors",
            "__size_of_stack_reserve__",
            "__imp_recv",
            "__major_subsystem_version__",
            "__imp_strspn",
            "___crt_xl_start__",
            "__imp_DeleteCriticalSection",
            "__imp_curl_multi_fdset",
            "opt_expiry_lp",
            "clCreateProgramWithSource",
            "__imp_fputc",
            "__imp_wprintw",
            "VirtualQuery",
            "___crt_xi_start__",
            "schedstart",
            "QueryDosDeviceA",
            "__imp_LocalAlloc",
            "__imp_wgetch",
            "__imp__amsg_exit",
            "___crt_xi_end__",
            "__fu3_blkmk_sha256_impl",
            "__imp_libusb_reset_device",
            "__imp_pthread_cond_wait",
            "__imp__errno",
            "__imp_ftell",
            "inthandler",
            "global_hashrate",
            "_tls_start",
            "total_mhashes_done",
            "pthread_cancel",
            "__imp_nocbreak",
            "__imp_json_load_file",
            "__imp_strpbrk",
            "json_delete",
            "__imp_SetCommTimeouts",
            "__imp_getenv",
            "WSAGetLastError",
            "__mingw_winmain_lpCmdLine",
            "__imp_strncpy",
            "json_string",
            "__imp_blkmk_init_generation2",
            "__imp_curl_easy_perform",
            "cairnsmore_api",
            "__mingw_oldexcpt_handler",
            "__imp_curl_multi_perform",
            "GetConsoleScreenBufferInfo",
            "clReleaseKernel",
            "__imp_listen",
            "__imp_GetCurrentThreadId",
            "opt_show_procs",
            "total_discarded",
            "__imp_curl_multi_info_read",
            "curl_multi_cleanup",
            "__imp_cbreak",
            "GetCurrentProcessId",
            "opt_rotate_period",
            "current_fullhash",
            "__imp_pthread_mutex_destroy",
            "TlsGetValue",
            "__imp_shutdown",
            "__imp_strtol",
            "TerminateProcess",
            "clReleaseCommandQueue",
            "libusb_set_configuration",
            "__imp_strcmp",
            "__imp_pthread_setcanceltype",
            "opt_api_groups",
            "shutting_down",
            "__imp_read",
            "__bss_start__",
            "clGetPlatformInfo",
            "libusb_close",
            "__imp_blktmpl_free",
            "__imp___C_specific_handler",
            "__imp_htons",
            "__imp_rand",
            "___RUNTIME_PSEUDO_RELOC_LIST_END__",
            "__imp_idlok",
            "RtlLookupFunctionEntry",
            "__imp_pthread_rwlock_wrlock",
            "__size_of_heap_commit__",
            "__imp_strrchr",
            "__imp_GetLastError",
            "__imp_libusb_unref_device",
            "pthread_rwlock_unlock",
            "__imp_free",
            "__imp_fdopen",
            "__imp_libusb_get_config_descriptor",
            "total_diff_stale",
            "FT_GetComPortNumber",
            "LoadLibraryA",
            "__imp_mvwin",
            "_head_libpthreadGC2_a",
            "__imp_stdscr",
            "opt_platform_id",
            "__imp_mvwhline",
            "__imp_RtlLookupFunctionEntry",
            "scan_devices",
            "__imp_json_string",
            "opt_hidden",
            "__tens_D2A",
            "block_timeval",
            "_head_libjansson_4_dll",
            "VirtualProtect",
            "FT_LIST_NUMBER_ONLY",
            "mingw_app_type",
            "__imp_htonl",
            "new_blocks",
            "___crt_xp_start__",
            "__imp_blktmpl_add_jansson",
            "SetConsoleCursorPosition",
            "__imp_blkmk_sha256_impl",
            "__imp_LeaveCriticalSection",
            "__mingw_pinit",
            "__imp_libusb_release_interface",
            "_localtime64",
            "blktmpl_create",
            "opt_log_level",
            "opt_api_port",
            "__C_specific_handler",
            "json_loads",
            "apigroups",
            "pthread_detach",
            "opt_compact",
            "blkmk_get_data",
            "__imp_GetTickCount",
            "json_loadb",
            "__imp_pthread_mutex_unlock",
            "__imp_SetCommConfig",
            "opt_coinbase_sig",
            "libusb_get_device_address",
            "__imp_json_real_value",
            "blktmpl_add_jansson",
            "___crt_xp_end__",
            "__imp_strncat",
            "opt_realquiet",
            "__imp_json_object_set_new",
            "cgminer_path",
            "hw_errors",
            "clCreateProgramWithBinary",
            "__minor_os_version__",
            "__imp_GetSystemTimeAsFileTime",
            "__imp_feof",
            "__imp_wmove",
            "__imp_curl_multi_setopt",
            "best_diff",
            "GetTimeZoneInformation",
            "EnterCriticalSection",
            "_MINGW_INSTALL_DEBUG_MATHERR",
            "__imp_strdup",
            "__imp_puts",
            "__image_base__",
            "__imp_atoi",
            "json_object_get",
            "__imp_write",
            "__imp_curl_version_info",
            "RtlCaptureContext",
            "__imp__exit",
            "__fu0_stdscr",
            "__section_alignment__",
            "__native_dllmain_reason",
            "pthread_setcancelstate",
            "opt_quiet_work_updates",
            "__imp_fputs",
            "__imp_pthread_mutex_init",
            "__lib64_libuser32_a_iname",
            "libusb_ref_device",
            "__imp_strcpy",
            "__imp_pthread_cond_broadcast",
            "_tls_used",
            "__imp_memset",
            "curl_easy_getinfo",
            "json_array_append_new",
            "UnhandledExceptionFilter",
            "mingw_initcharmax",
            "__IAT_end__",
            "statuswin",
            "opt_autoengine",
            "_open_osfhandle",
            "curl_easy_setopt",
            "__imp_memcpy",
            "__imp_isalpha",
            "__imp_echo",
            "__RUNTIME_PSEUDO_RELOC_LIST__",
            "curl_multi_init",
            "ptw32_push_cleanup",
            "__imp_wattroff",
            "clCreateBuffer",
            "__imp_pthread_rwlock_rdlock",
            "__imp_memmove",
            "__imp_SetConsoleCursorPosition",
            "json_object_set_new",
            "curl_multi_add_handle",
            "inet_addr",
            "__lib64_libws2_32_a_iname",
            "__imp_rewind",
            "ptw32_pop_cleanup",
            "__imp_access",
            "pthread_cond_broadcast",
            "__imp_select",
            "opt_overheattemp",
            "json_real_value",
            "__imp_RtlAddFunctionTable",
            "__nm_blkmk_sha256_impl",
            "blkmk_init_generation2",
            "curl_global_cleanup",
            "__imp_strerror",
            "opt_debug",
            "__imp_vw_printw",
            "opt_table",
            "adl_active",
            "mingw_pcppinit",
            "opt_quiet",
            "__imp_PurgeComm",
            "libusb_detach_kernel_driver",
            "setsockopt",
            "__data_end__",
            "__imp_libusb_init",
            "json_integer_value",
            "__imp_fwrite",
            "__CTOR_LIST__",
            "mvwprintw",
            "__imp___getmainargs",
            "_head_lib64_libkernel32_a",
            "__imp_pthread_rwlock_init",
            "clEnqueueReadBuffer",
            "GetModuleHandleA",
            "libusb_get_config_descriptor",
            "_head_libusb_1_0_dll",
            "__bss_end__",
            "want_per_device_stats",
            "termhandler",
            "__tinytens_D2A",
            "GetTickCount",
            "opt_delaynet",
            "__imp_floor",
            "_head_lib64_libmsvcrt_a",
            "__imp_strstr",
            "__native_vcclrit_reason",
            "___crt_xc_end__",
            "blktmpl_free",
            "RtlAddFunctionTable",
            "vw_printw",
            "opt_num_short_arg",
            "clGetProgramInfo",
            "opt_g_threads",
            "__fu1_stdscr",
            "__imp_EnterCriticalSection",
            "__imp_delwin",
            "_tls_index",
            "__native_startup_state",
            "___crt_xc_start__",
            "__imp_LINES",
            "__imp_bind",
            "__onexitbegin",
            "curl_multi_remove_handle",
            "__imp_GetCurrentProcessId",
            "opt_kernel_path",
            "__imp_vsprintf",
            "console_lock",
            "request_bdiff",
            "__imp_mbstowcs",
            "__imp___lconv_init",
            "__imp_toupper",
            "pthread_rwlock_wrlock",
            "__imp_json_deep_copy",
            "__imp_TerminateProcess",
            "__imp_GetProcAddress",
            "__imp_json_array_size",
            "__imp_libusb_close",
            "curl_version_info",
            "___CTOR_LIST__",
            "__imp_sscanf",
            "json_load_file",
            "__imp_wgetnstr",
            "__imp_pthread_rwlock_unlock",
            "__imp_signal",
            "__imp_blkmk_submit_jansson",
            "__imp_blktmpl_create",
            "opt_num_long",
            "__imp_json_array_append_new",
            "opt_api_listen",
            "__imp_GetModuleHandleA",
            "opt_scantime",
            "__rt_psrelocs_size",
            "__imp_pthread_cond_init",
            "__imp_QueryPerformanceCounter",
            "__imp_libusb_get_device_address",
            "__imp_pthread_self",
            "hash_lock",
            "pthread_cond_init",
            "__imp_ptw32_pop_cleanup",
            "mining_threads",
            "libusb_free_device_list",
            "__imp_curl_global_cleanup",
            "opt_disable_pool",
            "__imp_erase",
            "__imp_json_integer_value",
            "clEnqueueWriteBuffer",
            "libusb_unref_device",
            "__imp_strlen",
            "__imp_isupper",
            "enabled_pools",
            "__imp_atof",
            "__imp_json_object_get",
            "__bigtens_D2A",
            "__imp_json_string_value",
            "total_getworks",
            "__imp_malloc",
            "__imp_pthread_cond_signal",
            "__mingw_winmain_nShowCmd",
            "halfdelay",
            "mingw_pcinit",
            "__imp_pthread_cond_destroy",
            "opt_worktime",
            "__file_alignment__",
            "__imp_InitializeCriticalSection",
            "__imp_mvwprintw",
            "__lconv_init",
            "__imp_wrefresh",
            "_head_lib64_libws2_32_a",
            "sched_paused",
            "FT_ListDevices",
            "__imp_inet_ntoa",
            "__getmainargs",
            "__imp_inet_addr",
            "__imp_stat",
            "__imp_strtok",
            "opt_n_threads",
            "__imp_realloc",
            "clGetProgramBuildInfo",
            "InitializeCriticalSection",
            "__imp_curl_easy_reset",
            "json_array_get",
            "__imp_pthread_setcancelstate",
            "__imp_exit",
            "__imp_libusb_get_device_list",
            "json_number_value",
            "opt_fail_pause",
            "curl_easy_perform",
            "blkmk_submit_jansson",
            "opt_api_network",
            "opt_log_interval",
            "__major_os_version__",
            "__imp_vfprintf",
            "curl_easy_init",
            "libusb_1_0_dll_iname",
            "libusb_reset_device",
            "__imp___initenv",
            "__imp_wresize",
            "opt_force_dev_init",
            "clGetPlatformIDs",
            "__IAT_start__",
            "inet_ntoa",
            "opt_num_short",
            "__imp_libusb_get_device_descriptor",
            "LoadLibraryW",
            "__imp_strcat",
            "__imp__cexit",
            "__imp_UnhandledExceptionFilter",
            "__imp_SetUnhandledExceptionFilter",
            "__imp_pthread_cond_timedwait",
            "local_work",
            "__imp_perror",
            "__fu5_LINES",
            "total_accepted",
            "libusb_get_device_list",
            "__imp__onexit",
            "__imp_json_array_get",
            "__imp_isatty",
            "curl_multi_setopt",
            "__imp_SleepEx",
            "pthread_mutex_unlock",
            "GetProcAddress",
            "__DTOR_LIST__",
            "RtlVirtualUnwind",
            "opt_icarus_options",
            "curl_easy_reset",
            "total_rejected",
            "curl_global_init",
            "__imp_curl_multi_cleanup",
            "opt_expiry",
            "__set_app_type",
            "__imp_Sleep",
            "gpu_threads",
            "LeaveCriticalSection",
            "json_array_size",
            "__imp___setusermatherr",
            "closesocket",
            "curl_multi_perform",
            "__size_of_heap_reserve__",
            "opt_hysteresis",
            "___crt_xt_start__",
            "opt_dynamic_interval",
            "__subsystem__",
            "_amsg_exit",
            "__security_cookie_complement",
            "__imp_json_delete",
            "__imp_strcspn",
            "__imp_TlsGetValue",
            "setlocale",
            "__imp_accept",
            "GetCurrentProcess",
            "__imp_blktmpl_request_jansson",
            "__imp_pthread_cancel",
            "clGetDeviceIDs",
            "__setusermatherr",
            "total_diff_accepted",
            "__imp_fprintf",
            "__imp_WSAIoctl",
            "curl_slist_free_all",
            "__imp_wcstombs",
            "__imp_FreeLibrary",
            "__imp_halfdelay",
            "__imp_immedok",
            "__imp_wclrtoeol",
            "PurgeComm",
            "bitforce_api",
            "__lib64_libmoldname_a_iname",
            "blkmk_work_left",
            "__imp_VirtualProtect",
            "libusb_free_config_descriptor",
            "__imp_json_loads",
            "clGetDeviceInfo",
            "__imp_libusb_get_bus_number",
            "clReleaseContext",
            "_head_pdcurses_dll",
            "have_opencl",
            "total_devices",
            "__imp_libusb_error_name",
            "___tls_end__",
            "__imp_ptw32_push_cleanup",
            "__imp_initscr",
            "blkmk_time_left",
            "__onexitend",
            "__imp_wclear",
            "pthread_self",
            "pthread_setcanceltype",
            "successful_connect",
            "QueryPerformanceCounter",
            "__imp_VirtualQuery",
            "__imp__initterm",
            "mingw_initltsdyn_force",
            "__imp_fclose",
            "_dowildcard",
            "__imp___iob_func",
            "__imp_localeconv",
            "__imp__localtime64",
            "libcurl_4_dll_iname",
            "__imp_json_loadb",
            "curl_multi_fdset",
            "localeconv",
            "__dyn_tls_init_callback",
            "found_blocks",
            "json_string_value",
            "_head_lib64_libuser32_a",
            "stats_lock",
            "__imp_endwin",
            "libusb_exit",
            "_initterm",
            "__imp_blkmk_work_left",
            "__imp_raise",
            "FT_LIST_ALL",
            "__imp_strncmp",
            "clCreateContextFromType",
            "_strnicmp",
            "__major_image_version__",
            "__imp_libusb_bulk_transfer",
            "__loader_flags__",
            "__imp_strchr",
            "pthread_mutex_destroy",
            "__imp__time64",
            "strategies",
            "__imp_close",
            "__imp_blktmpl_get_longpoll",
            "libjansson_4_dll_iname",
            "__imp_pthread_create",
            "pthread_mutex_lock",
            "opt_queue",
            "total_diff1",
            "___chkstk_ms",
            "clBuildProgram",
            "__imp_json_array",
            "__native_startup_lock",
            "opt_loginput",
            "pdcurses_dll_iname",
            "__mingw_winmain_hInstance",
            "pthread_cond_wait",
            "GetStartupInfoA",
            "json_deep_copy",
            "__imp_log10",
            "__imp_socket",
            "GetCurrentThreadId",
            "__rt_psrelocs_end",
            "__imp_GetModuleFileNameA",
            "clCreateKernel",
            "__imp_curl_slist_free_all",
            "__minor_subsystem_version__",
            "__imp_fflush",
            "__minor_image_version__",
            "__imp__unlock",
            "__libpthreadGC2_a_iname",
            "pthread_mutex_trylock",
            "opencl_api",
            "WSAErrors",
            "netacc_lock",
            "__imp_libusb_ref_device",
            "__imp___set_app_type",
            "__imp_libusb_free_config_descriptor",
            "use_syslog",
            "pool_strategy",
            "mingw_initltsdrot_force",
            "__imp_libusb_detach_kernel_driver",
            "opt_scrypt",
            "pthread_cond_destroy",
            "json_array",
            "SetCommConfig",
            "__imp_sprintf",
            "wclrtoeol",
            "clSetKernelArg",
            "libusb_error_name",
            "opt_autofan",
            "__imp_printf",
            "control_lock",
            "blkmk_address_to_script",
            "total_stale",
            "__imp_fread",
            "libusb_bulk_transfer",
            "__imp_curl_easy_init",
            "gpur_thr_id",
            "_head_libblkmaker_jansson_0_1_0_dll",
            "__imp__open_osfhandle",
            "pthread_mutex_init",
            "blktmpl_get_longpoll",
            "opt_noadl",
            "__imp_LoadLibraryA",
            "__imp_libusb_free_device_list",
            "opt_reorder",
            "FreeLibrary",
            "json_object",
            "_head_libblkmaker_0_1_0_dll",
            "opt_icarus_timing",
            "total_secs",
            "curl_slist_append",
            "opt_bfl_noncerange",
            "__imp_isspace",
            "__imp_vprintf",
            "GetModuleFileNameA",
            "opt_log_output",
            "clEnqueueNDRangeKernel",
            "libusb_get_string_descriptor_ascii",
            "libusb_init",
            "__nm_stdscr",
            "submit_waiting_notifier",
            "DeleteCriticalSection",
            "__imp_RtlCaptureContext",
            "__imp_pthread_mutex_lock",
            "__fu4_LINES",
            "__imp_waddstr",
            "curl_multi_info_read",
            "GetStdHandle",
            "__RUNTIME_PSEUDO_RELOC_LIST_END__",
            "__imp_curl_global_init",
            "libblkmaker_jansson_0_1_0_dll_iname",
            "total_diff_rejected",
            "__imp_fopen",
            "__imp__stat64",
            "libusb_get_bus_number",
            "_head_lib64_libmoldname_a",
            "__dllonexit",
            "blktmpl_addcaps",
            "clCreateCommandQueue",
            "opt_api_allow",
            "__imp_execv",
            "__imp_LocalFree",
            "opt_skip_checks",
            "__imp_libusb_open",
            "__imp_ldiv",
            "__imp_GetCurrentProcess",
            "__imp_connect",
            "curl_easy_cleanup",
            "__hexdig_D2A",
            "__imp_curl_easy_getinfo",
            "__imp_getmaxy",
            "pthread_cond_timedwait",
            "clReleaseProgram",
            "request_pdiff",
            "opt_debug_console",
            "__imp_noecho",
            "libusb_open",
            "___crt_xt_end__",
            "__imp_leaveok",
            "__imp_memcmp",
            "blktmpl_request_jansson",
            "use_curses",
            "opt_count",
            "__lib64_libmsvcrt_a_iname",
            "__imp_fseek",
            "CreateFileA",
            "__imp_QueryDosDeviceA",
            "__imp_CreateFileA",
            "__imp_srand",
            "__imp_div",
            "opt_fail_only",
            "__security_cookie",
            "__imp_libusb_set_configuration",
            "FT_OPEN_BY_DESCRIPTION",
            "getsockname",
            "total_pools",
            "__imp_wattron"
        ],
        "file": {
            "FTD2XX.DLL": "Library",
            "KERNEL32.dll": "Library",
            "OpenCL.dll": "Library",
            "USER32.dll": "Library",
            "WS2_32.dll": "Library",
            "atiadlxx.dll": "Library",
            "atiadlxy.dll": "Library",
            "libblkmaker-0.1-0.dll": "Library",
            "libblkmaker_jansson-0.1-0.dll": "Library",
            "libcurl-4.dll": "Library",
            "libjansson-4.dll": "Library",
            "libusb-1.0.dll": "Library",
            "msvcrt.dll": "Library",
            "pdcurses.dll": "Library",
            "pthreadGC2.dll": "Library",
            "ztex_ufm1_15d4.bin": "Binary",
            "ztex_ufm1_15y1.bin": "Binary"
        },
        "fuzzing": {
            "Possible connections": [
                "Your installed cURL library does not support proxy URIs. At least version 7.21.7 is required.",
                "Failed to calloc in recruit_curl",
                "Failed to init in recruit_curl",
                "Recruited curl %d for pool %d",
                "Attempted to add NULL in push_curl_entry",
                "CURL initialisation failed",
                "Reaped %d curl%s from pool %d",
                "\u049eFailed to curl_global_init",
                "Failed to get private curl data",
                "Failed to curl_easy_send in stratum_send",
                "Failed to curl_easy_init in initiate_stratum",
                "curl_easy_cleanup",
                "curl_easy_getinfo",
                "curl_easy_init",
                "curl_easy_perform",
                "curl_easy_reset",
                "curl_easy_setopt",
                "curl_global_cleanup",
                "curl_global_init",
                "curl_multi_add_handle",
                "curl_multi_cleanup",
                "curl_multi_fdset",
                "curl_multi_info_read",
                "curl_multi_init",
                "curl_multi_perform",
                "curl_multi_remove_handle",
                "curl_multi_setopt",
                "curl_slist_append",
                "curl_slist_free_all",
                "curl_version_info",
                "wgetch",
                "wgetnstr",
                "libcurl-4.dll",
                " CURL",
                "curl_socket_t",
                "CURLSOCKTYPE_IPCXN",
                "CURLSOCKTYPE_ACCEPT",
                "CURLSOCKTYPE_LAST",
                "curlsocktype",
                "curl_sockaddr",
                "CURLE_OK",
                "CURLE_UNSUPPORTED_PROTOCOL",
                "CURLE_FAILED_INIT",
                "CURLE_URL_MALFORMAT",
                "CURLE_NOT_BUILT_IN",
                "CURLE_COULDNT_RESOLVE_PROXY",
                "CURLE_COULDNT_RESOLVE_HOST",
                "CURLE_COULDNT_CONNECT",
                "CURLE_FTP_WEIRD_SERVER_REPLY",
                "CURLE_REMOTE_ACCESS_DENIED",
                "CURLE_FTP_ACCEPT_FAILED",
                "CURLE_FTP_WEIRD_PASS_REPLY",
                "CURLE_FTP_ACCEPT_TIMEOUT",
                "CURLE_FTP_WEIRD_PASV_REPLY",
                "CURLE_FTP_WEIRD_227_FORMAT",
                "CURLE_FTP_CANT_GET_HOST",
                "CURLE_OBSOLETE16",
                "CURLE_FTP_COULDNT_SET_TYPE",
                "CURLE_PARTIAL_FILE",
                "CURLE_FTP_COULDNT_RETR_FILE",
                "CURLE_OBSOLETE20",
                "CURLE_QUOTE_ERROR",
                "CURLE_HTTP_RETURNED_ERROR",
                "CURLE_WRITE_ERROR",
                "CURLE_OBSOLETE24",
                "CURLE_UPLOAD_FAILED",
                "CURLE_READ_ERROR",
                "CURLE_OUT_OF_MEMORY",
                "CURLE_OPERATION_TIMEDOUT",
                "CURLE_OBSOLETE29",
                "CURLE_FTP_PORT_FAILED",
                "CURLE_FTP_COULDNT_USE_REST",
                "CURLE_OBSOLETE32",
                "CURLE_RANGE_ERROR",
                "CURLE_HTTP_POST_ERROR",
                "CURLE_SSL_CONNECT_ERROR",
                "CURLE_BAD_DOWNLOAD_RESUME",
                "CURLE_FILE_COULDNT_READ_FILE",
                "CURLE_LDAP_CANNOT_BIND",
                "CURLE_LDAP_SEARCH_FAILED",
                "CURLE_OBSOLETE40",
                "CURLE_FUNCTION_NOT_FOUND",
                "CURLE_ABORTED_BY_CALLBACK",
                "CURLE_BAD_FUNCTION_ARGUMENT",
                "CURLE_OBSOLETE44",
                "CURLE_INTERFACE_FAILED",
                "CURLE_OBSOLETE46",
                "CURLE_TOO_MANY_REDIRECTS",
                "CURLE_UNKNOWN_OPTION",
                "CURLE_TELNET_OPTION_SYNTAX",
                "CURLE_OBSOLETE50",
                "CURLE_PEER_FAILED_VERIFICATION",
                "CURLE_GOT_NOTHING",
                "CURLE_SSL_ENGINE_NOTFOUND",
                "CURLE_SSL_ENGINE_SETFAILED",
                "CURLE_SEND_ERROR",
                "CURLE_RECV_ERROR",
                "CURLE_OBSOLETE57",
                "CURLE_SSL_CERTPROBLEM",
                "CURLE_SSL_CIPHER",
                "CURLE_SSL_CACERT",
                "CURLE_BAD_CONTENT_ENCODING",
                "CURLE_LDAP_INVALID_URL",
                "CURLE_FILESIZE_EXCEEDED",
                "CURLE_USE_SSL_FAILED",
                "CURLE_SEND_FAIL_REWIND",
                "CURLE_SSL_ENGINE_INITFAILED",
                "CURLE_LOGIN_DENIED",
                "CURLE_TFTP_NOTFOUND",
                "CURLE_TFTP_PERM",
                "CURLE_REMOTE_DISK_FULL",
                "CURLE_TFTP_ILLEGAL",
                "CURLE_TFTP_UNKNOWNID",
                "CURLE_REMOTE_FILE_EXISTS",
                "CURLE_TFTP_NOSUCHUSER",
                "CURLE_CONV_FAILED",
                "CURLE_CONV_REQD",
                "CURLE_SSL_CACERT_BADFILE",
                "CURLE_REMOTE_FILE_NOT_FOUND",
                "CURLE_SSH",
                "CURLE_SSL_SHUTDOWN_FAILED",
                "CURLE_AGAIN",
                "CURLE_SSL_CRL_BADFILE",
                "CURLE_SSL_ISSUER_ERROR",
                "CURLE_FTP_PRET_FAILED",
                "CURLE_RTSP_CSEQ_ERROR",
                "CURLE_RTSP_SESSION_ERROR",
                "CURLE_FTP_BAD_FILE_LIST",
                "CURLE_CHUNK_FAILED",
                "CURL_LAST",
                "CURLcode",
                "CURLOPT_FILE",
                "CURLOPT_URL",
                "CURLOPT_PORT",
                "CURLOPT_PROXY",
                "CURLOPT_USERPWD",
                "CURLOPT_PROXYUSERPWD",
                "CURLOPT_RANGE",
                "CURLOPT_INFILE",
                "CURLOPT_ERRORBUFFER",
                "CURLOPT_WRITEFUNCTION",
                "CURLOPT_READFUNCTION",
                "CURLOPT_TIMEOUT",
                "CURLOPT_INFILESIZE",
                "CURLOPT_POSTFIELDS",
                "CURLOPT_REFERER",
                "CURLOPT_FTPPORT",
                "CURLOPT_USERAGENT",
                "CURLOPT_LOW_SPEED_LIMIT",
                "CURLOPT_LOW_SPEED_TIME",
                "CURLOPT_RESUME_FROM",
                "CURLOPT_COOKIE",
                "CURLOPT_HTTPHEADER",
                "CURLOPT_HTTPPOST",
                "CURLOPT_SSLCERT",
                "CURLOPT_KEYPASSWD",
                "CURLOPT_CRLF",
                "CURLOPT_QUOTE",
                "CURLOPT_WRITEHEADER",
                "CURLOPT_COOKIEFILE",
                "CURLOPT_SSLVERSION",
                "CURLOPT_TIMECONDITION",
                "CURLOPT_TIMEVALUE",
                "CURLOPT_CUSTOMREQUEST",
                "CURLOPT_STDERR",
                "CURLOPT_POSTQUOTE",
                "CURLOPT_WRITEINFO",
                "CURLOPT_VERBOSE",
                "CURLOPT_HEADER",
                "CURLOPT_NOPROGRESS",
                "CURLOPT_NOBODY",
                "CURLOPT_FAILONERROR",
                "CURLOPT_UPLOAD",
                "CURLOPT_POST",
                "CURLOPT_DIRLISTONLY",
                "CURLOPT_APPEND",
                "CURLOPT_NETRC",
                "CURLOPT_FOLLOWLOCATION",
                "CURLOPT_TRANSFERTEXT",
                "CURLOPT_PUT",
                "CURLOPT_PROGRESSFUNCTION",
                "CURLOPT_PROGRESSDATA",
                "CURLOPT_AUTOREFERER",
                "CURLOPT_PROXYPORT",
                "CURLOPT_POSTFIELDSIZE",
                "CURLOPT_HTTPPROXYTUNNEL",
                "CURLOPT_INTERFACE",
                "CURLOPT_KRBLEVEL",
                "CURLOPT_SSL_VERIFYPEER",
                "CURLOPT_CAINFO",
                "CURLOPT_MAXREDIRS",
                "CURLOPT_FILETIME",
                "CURLOPT_TELNETOPTIONS",
                "CURLOPT_MAXCONNECTS",
                "CURLOPT_CLOSEPOLICY",
                "CURLOPT_FRESH_CONNECT",
                "CURLOPT_FORBID_REUSE",
                "CURLOPT_RANDOM_FILE",
                "CURLOPT_EGDSOCKET",
                "CURLOPT_CONNECTTIMEOUT",
                "CURLOPT_HEADERFUNCTION",
                "CURLOPT_HTTPGET",
                "CURLOPT_SSL_VERIFYHOST",
                "CURLOPT_COOKIEJAR",
                "CURLOPT_SSL_CIPHER_LIST",
                "CURLOPT_HTTP_VERSION",
                "CURLOPT_FTP_USE_EPSV",
                "CURLOPT_SSLCERTTYPE",
                "CURLOPT_SSLKEY",
                "CURLOPT_SSLKEYTYPE",
                "CURLOPT_SSLENGINE",
                "CURLOPT_SSLENGINE_DEFAULT",
                "CURLOPT_DNS_USE_GLOBAL_CACHE",
                "CURLOPT_DNS_CACHE_TIMEOUT",
                "CURLOPT_PREQUOTE",
                "CURLOPT_DEBUGFUNCTION",
                "CURLOPT_DEBUGDATA",
                "CURLOPT_COOKIESESSION",
                "CURLOPT_CAPATH",
                "CURLOPT_BUFFERSIZE",
                "CURLOPT_NOSIGNAL",
                "CURLOPT_SHARE",
                "CURLOPT_PROXYTYPE",
                "CURLOPT_ACCEPT_ENCODING",
                "CURLOPT_PRIVATE",
                "CURLOPT_HTTP200ALIASES",
                "CURLOPT_UNRESTRICTED_AUTH",
                "CURLOPT_FTP_USE_EPRT",
                "CURLOPT_HTTPAUTH",
                "CURLOPT_SSL_CTX_FUNCTION",
                "CURLOPT_SSL_CTX_DATA",
                "CURLOPT_FTP_CREATE_MISSING_DIRS",
                "CURLOPT_PROXYAUTH",
                "CURLOPT_FTP_RESPONSE_TIMEOUT",
                "CURLOPT_IPRESOLVE",
                "CURLOPT_MAXFILESIZE",
                "CURLOPT_INFILESIZE_LARGE",
                "CURLOPT_RESUME_FROM_LARGE",
                "CURLOPT_MAXFILESIZE_LARGE",
                "CURLOPT_NETRC_FILE",
                "CURLOPT_USE_SSL",
                "CURLOPT_POSTFIELDSIZE_LARGE",
                "CURLOPT_TCP_NODELAY",
                "CURLOPT_FTPSSLAUTH",
                "CURLOPT_IOCTLFUNCTION",
                "CURLOPT_IOCTLDATA",
                "CURLOPT_FTP_ACCOUNT",
                "CURLOPT_COOKIELIST",
                "CURLOPT_IGNORE_CONTENT_LENGTH",
                "CURLOPT_FTP_SKIP_PASV_IP",
                "CURLOPT_FTP_FILEMETHOD",
                "CURLOPT_LOCALPORT",
                "CURLOPT_LOCALPORTRANGE",
                "CURLOPT_CONNECT_ONLY",
                "CURLOPT_CONV_FROM_NETWORK_FUNCTION",
                "CURLOPT_CONV_TO_NETWORK_FUNCTION",
                "CURLOPT_CONV_FROM_UTF8_FUNCTION",
                "CURLOPT_MAX_SEND_SPEED_LARGE",
                "CURLOPT_MAX_RECV_SPEED_LARGE",
                "CURLOPT_FTP_ALTERNATIVE_TO_USER",
                "CURLOPT_SOCKOPTFUNCTION",
                "CURLOPT_SOCKOPTDATA",
                "CURLOPT_SSL_SESSIONID_CACHE",
                "CURLOPT_SSH_AUTH_TYPES",
                "CURLOPT_SSH_PUBLIC_KEYFILE",
                "CURLOPT_SSH_PRIVATE_KEYFILE",
                "CURLOPT_FTP_SSL_CCC",
                "CURLOPT_TIMEOUT_MS",
                "CURLOPT_CONNECTTIMEOUT_MS",
                "CURLOPT_HTTP_TRANSFER_DECODING",
                "CURLOPT_HTTP_CONTENT_DECODING",
                "CURLOPT_NEW_FILE_PERMS",
                "CURLOPT_NEW_DIRECTORY_PERMS",
                "CURLOPT_POSTREDIR",
                "CURLOPT_SSH_HOST_PUBLIC_KEY_MD5",
                "CURLOPT_OPENSOCKETFUNCTION",
                "CURLOPT_OPENSOCKETDATA",
                "CURLOPT_COPYPOSTFIELDS",
                "CURLOPT_PROXY_TRANSFER_MODE",
                "CURLOPT_SEEKFUNCTION",
                "CURLOPT_SEEKDATA",
                "CURLOPT_CRLFILE",
                "CURLOPT_ISSUERCERT",
                "CURLOPT_ADDRESS_SCOPE",
                "CURLOPT_CERTINFO",
                "CURLOPT_USERNAME",
                "CURLOPT_PASSWORD",
                "CURLOPT_PROXYUSERNAME",
                "CURLOPT_PROXYPASSWORD",
                "CURLOPT_NOPROXY",
                "CURLOPT_TFTP_BLKSIZE",
                "CURLOPT_SOCKS5_GSSAPI_SERVICE",
                "CURLOPT_SOCKS5_GSSAPI_NEC",
                "CURLOPT_PROTOCOLS",
                "CURLOPT_REDIR_PROTOCOLS",
                "CURLOPT_SSH_KNOWNHOSTS",
                "CURLOPT_SSH_KEYFUNCTION",
                "CURLOPT_SSH_KEYDATA",
                "CURLOPT_MAIL_FROM",
                "CURLOPT_MAIL_RCPT",
                "CURLOPT_FTP_USE_PRET",
                "CURLOPT_RTSP_REQUEST",
                "CURLOPT_RTSP_SESSION_ID",
                "CURLOPT_RTSP_STREAM_URI",
                "CURLOPT_RTSP_TRANSPORT",
                "CURLOPT_RTSP_CLIENT_CSEQ",
                "CURLOPT_RTSP_SERVER_CSEQ",
                "CURLOPT_INTERLEAVEDATA",
                "CURLOPT_INTERLEAVEFUNCTION",
                "CURLOPT_WILDCARDMATCH",
                "CURLOPT_CHUNK_BGN_FUNCTION",
                "CURLOPT_CHUNK_END_FUNCTION",
                "CURLOPT_FNMATCH_FUNCTION",
                "CURLOPT_CHUNK_DATA",
                "CURLOPT_FNMATCH_DATA",
                "CURLOPT_RESOLVE",
                "CURLOPT_TLSAUTH_USERNAME",
                "CURLOPT_TLSAUTH_PASSWORD",
                "CURLOPT_TLSAUTH_TYPE",
                "CURLOPT_TRANSFER_ENCODING",
                "CURLOPT_CLOSESOCKETFUNCTION",
                "CURLOPT_CLOSESOCKETDATA",
                "CURLOPT_GSSAPI_DELEGATION",
                "CURLOPT_DNS_SERVERS",
                "CURLOPT_ACCEPTTIMEOUT_MS",
                "CURLOPT_TCP_KEEPALIVE",
                "CURLOPT_TCP_KEEPIDLE",
                "CURLOPT_TCP_KEEPINTVL",
                "CURLOPT_SSL_OPTIONS",
                "CURLOPT_MAIL_AUTH",
                "CURLOPT_LASTENTRY",
                " CURLM",
                "CURLMSG_NONE",
                "CURLMSG_DONE",
                "CURLMSG_LAST",
                "CURLMSG",
                "CURLMOPT_SOCKETFUNCTION",
                "CURLMOPT_SOCKETDATA",
                "CURLMOPT_PIPELINING",
                "CURLMOPT_TIMERFUNCTION",
                "CURLMOPT_TIMERDATA",
                "CURLMOPT_MAXCONNECTS",
                "CURLMOPT_LASTENTRY",
                "curl_ent",
                "curl",
                "curls",
                "curlring",
                "sws_waiting_on_curl",
                "stratum_curl",
                "2_curl_easy_setopt_err_long",
                "2_curl_easy_setopt_err_curl_off_t",
                "2_curl_easy_setopt_err_string",
                "2_curl_easy_setopt_err_write_callback",
                "2_curl_easy_setopt_err_read_cb",
                "2_curl_easy_setopt_err_ioctl_cb",
                "2_curl_easy_setopt_err_sockopt_cb",
                "2_curl_easy_setopt_err_opensocket_cb",
                "2_curl_easy_setopt_err_progress_cb",
                "2_curl_easy_setopt_err_debug_cb",
                "2_curl_easy_setopt_err_ssl_ctx_cb",
                "2_curl_easy_setopt_err_conv_cb",
                "2_curl_easy_setopt_err_seek_cb",
                "2_curl_easy_setopt_err_cb_data",
                "2_curl_easy_setopt_err_error_buffer",
                "2_curl_easy_setopt_err_FILE",
                "2_curl_easy_setopt_err_postfields",
                "2_curl_easy_setopt_err_curl_httpost",
                "2_curl_easy_setopt_err_curl_slist",
                "2_curl_easy_setopt_err_CURLSH",
                "2_curl_easy_getinfo_err_string",
                "2_curl_easy_getinfo_err_long",
                "2_curl_easy_getinfo_err_double",
                "2_curl_easy_getinfo_err_curl_slist",
                "9curl",
                "8recruit_curl",
                ";pop_curl_entry3",
                ":curl_limit",
                ";pop_curl_entry2",
                ";pop_curl_entry",
                "8push_curl_entry",
                ";my_curl_timer_set",
                "9curlm",
                "\\:curlm",
                ":curlm_timeout_ms",
                ":curl",
                ";save_curl_socket",
                "~:curl",
                "8reap_curl",
                ",_curl_easy_setopt_err_long",
                ",_curl_easy_setopt_err_curl_off_t",
                ",_curl_easy_setopt_err_string",
                ",_curl_easy_setopt_err_write_callback",
                ",_curl_easy_setopt_err_read_cb",
                ",_curl_easy_setopt_err_ioctl_cb",
                ",_curl_easy_setopt_err_sockopt_cb",
                ",_curl_easy_setopt_err_opensocket_cb",
                ",_curl_easy_setopt_err_progress_cb",
                ",_curl_easy_setopt_err_debug_cb",
                ",_curl_easy_setopt_err_ssl_ctx_cb",
                ",_curl_easy_setopt_err_conv_cb",
                ",_curl_easy_setopt_err_seek_cb",
                ",_curl_easy_setopt_err_cb_data",
                ",_curl_easy_setopt_err_error_buffer",
                ",_curl_easy_setopt_err_FILE",
                ",_curl_easy_setopt_err_postfields",
                ",_curl_easy_setopt_err_curl_httpost",
                ",_curl_easy_setopt_err_curl_slist",
                ",_curl_easy_setopt_err_CURLSH",
                ",_curl_easy_getinfo_err_string",
                ",_curl_easy_getinfo_err_long",
                ",_curl_easy_getinfo_err_double",
                ",_curl_easy_getinfo_err_curl_slist",
                "curl_slist",
                "CURLINFO_TEXT",
                "CURLINFO_HEADER_IN",
                "CURLINFO_HEADER_OUT",
                "CURLINFO_DATA_IN",
                "CURLINFO_DATA_OUT",
                "CURLINFO_SSL_DATA_IN",
                "CURLINFO_SSL_DATA_OUT",
                "CURLINFO_END",
                "curl_infotype",
                "CURLPROXY_HTTP",
                "CURLPROXY_HTTP_1_0",
                "CURLPROXY_SOCKS4",
                "CURLPROXY_SOCKS5",
                "CURLPROXY_SOCKS4A",
                "CURLPROXY_SOCKS5_HOSTNAME",
                "CURLUSESSL_NONE",
                "CURLUSESSL_TRY",
                "CURLUSESSL_CONTROL",
                "CURLUSESSL_ALL",
                "CURLUSESSL_LAST",
                "CURLINFO_NONE",
                "CURLINFO_EFFECTIVE_URL",
                "CURLINFO_RESPONSE_CODE",
                "CURLINFO_TOTAL_TIME",
                "CURLINFO_NAMELOOKUP_TIME",
                "CURLINFO_CONNECT_TIME",
                "CURLINFO_PRETRANSFER_TIME",
                "CURLINFO_SIZE_UPLOAD",
                "CURLINFO_SIZE_DOWNLOAD",
                "CURLINFO_SPEED_DOWNLOAD",
                "CURLINFO_SPEED_UPLOAD",
                "CURLINFO_HEADER_SIZE",
                "CURLINFO_REQUEST_SIZE",
                "CURLINFO_SSL_VERIFYRESULT",
                "CURLINFO_FILETIME",
                "CURLINFO_CONTENT_LENGTH_DOWNLOAD",
                "CURLINFO_CONTENT_LENGTH_UPLOAD",
                "CURLINFO_STARTTRANSFER_TIME",
                "CURLINFO_CONTENT_TYPE",
                "CURLINFO_REDIRECT_TIME",
                "CURLINFO_REDIRECT_COUNT",
                "CURLINFO_PRIVATE",
                "CURLINFO_HTTP_CONNECTCODE",
                "CURLINFO_HTTPAUTH_AVAIL",
                "CURLINFO_PROXYAUTH_AVAIL",
                "CURLINFO_OS_ERRNO",
                "CURLINFO_NUM_CONNECTS",
                "CURLINFO_SSL_ENGINES",
                "CURLINFO_COOKIELIST",
                "CURLINFO_LASTSOCKET",
                "CURLINFO_FTP_ENTRY_PATH",
                "CURLINFO_REDIRECT_URL",
                "CURLINFO_PRIMARY_IP",
                "CURLINFO_APPCONNECT_TIME",
                "CURLINFO_CERTINFO",
                "CURLINFO_CONDITION_UNMET",
                "CURLINFO_RTSP_SESSION_ID",
                "CURLINFO_RTSP_CLIENT_CSEQ",
                "CURLINFO_RTSP_SERVER_CSEQ",
                "CURLINFO_RTSP_CSEQ_RECV",
                "CURLINFO_PRIMARY_PORT",
                "CURLINFO_LOCAL_IP",
                "CURLINFO_LOCAL_PORT",
                "CURLINFO_LASTONE",
                "CURLVERSION_FIRST",
                "CURLVERSION_SECOND",
                "CURLVERSION_THIRD",
                "CURLVERSION_FOURTH",
                "CURLVERSION_LAST",
                "CURLversion",
                "curl_version_info_data",
                "-_curl_easy_setopt_err_long",
                "-_curl_easy_setopt_err_curl_off_t",
                "-_curl_easy_setopt_err_string",
                "-_curl_easy_setopt_err_write_callback",
                "-_curl_easy_setopt_err_read_cb",
                "-_curl_easy_setopt_err_ioctl_cb",
                "-_curl_easy_setopt_err_sockopt_cb",
                "-_curl_easy_setopt_err_opensocket_cb",
                "-_curl_easy_setopt_err_progress_cb",
                "-_curl_easy_setopt_err_debug_cb",
                "-_curl_easy_setopt_err_ssl_ctx_cb",
                "-_curl_easy_setopt_err_conv_cb",
                "-_curl_easy_setopt_err_seek_cb",
                "-_curl_easy_setopt_err_cb_data",
                "-_curl_easy_setopt_err_error_buffer",
                "-_curl_easy_setopt_err_FILE",
                "-_curl_easy_setopt_err_postfields",
                "-_curl_easy_setopt_err_curl_httpost",
                "-_curl_easy_setopt_err_curl_slist",
                "-_curl_easy_setopt_err_CURLSH",
                "-_curl_easy_getinfo_err_string",
                "-_curl_easy_getinfo_err_long",
                "-_curl_easy_getinfo_err_double",
                "-_curl_easy_getinfo_err_curl_slist",
                "2curl_debug_cb",
                "3curl",
                "5_curl_info",
                "our_curl_supports_proxy_uris",
                "@5curl",
                "0_curl_easy_setopt_err_long",
                "0_curl_easy_setopt_err_curl_off_t",
                "0_curl_easy_setopt_err_string",
                "0_curl_easy_setopt_err_write_callback",
                "0_curl_easy_setopt_err_read_cb",
                "0_curl_easy_setopt_err_ioctl_cb",
                "0_curl_easy_setopt_err_sockopt_cb",
                "0_curl_easy_setopt_err_opensocket_cb",
                "0_curl_easy_setopt_err_progress_cb",
                "0_curl_easy_setopt_err_debug_cb",
                "0_curl_easy_setopt_err_ssl_ctx_cb",
                "0_curl_easy_setopt_err_conv_cb",
                "0_curl_easy_setopt_err_seek_cb",
                "0_curl_easy_setopt_err_cb_data",
                "0_curl_easy_setopt_err_error_buffer",
                "0_curl_easy_setopt_err_FILE",
                "0_curl_easy_setopt_err_postfields",
                "0_curl_easy_setopt_err_curl_httpost",
                "0_curl_easy_setopt_err_curl_slist",
                "0_curl_easy_setopt_err_CURLSH",
                "0_curl_easy_getinfo_err_string",
                "0_curl_easy_getinfo_err_long",
                "0_curl_easy_getinfo_err_double",
                "0_curl_easy_getinfo_err_curl_slist",
                "_curl_easy_setopt_err_long",
                "_curl_easy_setopt_err_curl_off_t",
                "_curl_easy_setopt_err_string",
                "_curl_easy_setopt_err_write_callback",
                "_curl_easy_setopt_err_read_cb",
                "_curl_easy_setopt_err_ioctl_cb",
                "_curl_easy_setopt_err_sockopt_cb",
                "_curl_easy_setopt_err_opensocket_cb",
                "_curl_easy_setopt_err_progress_cb",
                "_curl_easy_setopt_err_debug_cb",
                "_curl_easy_setopt_err_ssl_ctx_cb",
                "_curl_easy_setopt_err_conv_cb",
                "_curl_easy_setopt_err_seek_cb",
                "_curl_easy_setopt_err_cb_data",
                "_curl_easy_setopt_err_error_buffer",
                "_curl_easy_setopt_err_FILE",
                "_curl_easy_setopt_err_postfields",
                "_curl_easy_setopt_err_curl_httpost",
                "_curl_easy_setopt_err_curl_slist",
                "_curl_easy_setopt_err_CURLSH",
                "_curl_easy_getinfo_err_string",
                "_curl_easy_getinfo_err_long",
                "_curl_easy_getinfo_err_double",
                "_curl_easy_getinfo_err_curl_slist",
                "&_curl_easy_setopt_err_long",
                "&_curl_easy_setopt_err_curl_off_t",
                "&_curl_easy_setopt_err_string",
                "&_curl_easy_setopt_err_write_callback",
                "&_curl_easy_setopt_err_read_cb",
                "&_curl_easy_setopt_err_ioctl_cb",
                "&_curl_easy_setopt_err_sockopt_cb",
                "&_curl_easy_setopt_err_opensocket_cb",
                "&_curl_easy_setopt_err_progress_cb",
                "&_curl_easy_setopt_err_debug_cb",
                "&_curl_easy_setopt_err_ssl_ctx_cb",
                "&_curl_easy_setopt_err_conv_cb",
                "&_curl_easy_setopt_err_seek_cb",
                "&_curl_easy_setopt_err_cb_data",
                "&_curl_easy_setopt_err_error_buffer",
                "&_curl_easy_setopt_err_FILE",
                "&_curl_easy_setopt_err_postfields",
                "&_curl_easy_setopt_err_curl_httpost",
                "&_curl_easy_setopt_err_curl_slist",
                "&_curl_easy_setopt_err_CURLSH",
                "&_curl_easy_getinfo_err_string",
                "&_curl_easy_getinfo_err_long",
                "&_curl_easy_getinfo_err_double",
                "&_curl_easy_getinfo_err_curl_slist",
                "%_curl_easy_setopt_err_long",
                "%_curl_easy_setopt_err_curl_off_t",
                "%_curl_easy_setopt_err_string",
                "%_curl_easy_setopt_err_write_callback",
                "%_curl_easy_setopt_err_read_cb",
                "%_curl_easy_setopt_err_ioctl_cb",
                "%_curl_easy_setopt_err_sockopt_cb",
                "%_curl_easy_setopt_err_opensocket_cb",
                "%_curl_easy_setopt_err_progress_cb",
                "%_curl_easy_setopt_err_debug_cb",
                "%_curl_easy_setopt_err_ssl_ctx_cb",
                "%_curl_easy_setopt_err_conv_cb",
                "%_curl_easy_setopt_err_seek_cb",
                "%_curl_easy_setopt_err_cb_data",
                "%_curl_easy_setopt_err_error_buffer",
                "%_curl_easy_setopt_err_FILE",
                "%_curl_easy_setopt_err_postfields",
                "%_curl_easy_setopt_err_curl_httpost",
                "%_curl_easy_setopt_err_curl_slist",
                "%_curl_easy_setopt_err_CURLSH",
                "%_curl_easy_getinfo_err_string",
                "%_curl_easy_getinfo_err_long",
                "%_curl_easy_getinfo_err_double",
                "%_curl_easy_getinfo_err_curl_slist",
                "\tcurls",
                "\tcurlring",
                "\tsws_waiting_on_curl",
                "\tstratum_curl",
                "'_curl_easy_setopt_err_long",
                "'_curl_easy_setopt_err_curl_off_t",
                "'_curl_easy_setopt_err_string",
                "'_curl_easy_setopt_err_write_callback",
                "'_curl_easy_setopt_err_read_cb",
                "'_curl_easy_setopt_err_ioctl_cb",
                "'_curl_easy_setopt_err_sockopt_cb",
                "'_curl_easy_setopt_err_opensocket_cb",
                "'_curl_easy_setopt_err_progress_cb",
                "'_curl_easy_setopt_err_debug_cb",
                "'_curl_easy_setopt_err_ssl_ctx_cb",
                "'_curl_easy_setopt_err_conv_cb",
                "'_curl_easy_setopt_err_seek_cb",
                "'_curl_easy_setopt_err_cb_data",
                "'_curl_easy_setopt_err_error_buffer",
                "'_curl_easy_setopt_err_FILE",
                "'_curl_easy_setopt_err_postfields",
                "'_curl_easy_setopt_err_curl_httpost",
                "'_curl_easy_setopt_err_curl_slist",
                "'_curl_easy_setopt_err_CURLSH",
                "'_curl_easy_getinfo_err_string",
                "'_curl_easy_getinfo_err_long",
                "'_curl_easy_getinfo_err_double",
                "'_curl_easy_getinfo_err_curl_slist",
                "+_curl_easy_setopt_err_long",
                "+_curl_easy_setopt_err_curl_off_t",
                "+_curl_easy_setopt_err_string",
                "+_curl_easy_setopt_err_write_callback",
                "+_curl_easy_setopt_err_read_cb",
                "+_curl_easy_setopt_err_ioctl_cb",
                "+_curl_easy_setopt_err_sockopt_cb",
                "+_curl_easy_setopt_err_opensocket_cb",
                "+_curl_easy_setopt_err_progress_cb",
                "+_curl_easy_setopt_err_debug_cb",
                "+_curl_easy_setopt_err_ssl_ctx_cb",
                "+_curl_easy_setopt_err_conv_cb",
                "+_curl_easy_setopt_err_seek_cb",
                "+_curl_easy_setopt_err_cb_data",
                "+_curl_easy_setopt_err_error_buffer",
                "+_curl_easy_setopt_err_FILE",
                "+_curl_easy_setopt_err_postfields",
                "+_curl_easy_setopt_err_curl_httpost",
                "+_curl_easy_setopt_err_curl_slist",
                "+_curl_easy_setopt_err_CURLSH",
                "+_curl_easy_getinfo_err_string",
                "+_curl_easy_getinfo_err_long",
                "+_curl_easy_getinfo_err_double",
                "+_curl_easy_getinfo_err_curl_slist",
                "*_curl_easy_setopt_err_long",
                "*_curl_easy_setopt_err_curl_off_t",
                "*_curl_easy_setopt_err_string",
                "*_curl_easy_setopt_err_write_callback",
                "*_curl_easy_setopt_err_read_cb",
                "*_curl_easy_setopt_err_ioctl_cb",
                "*_curl_easy_setopt_err_sockopt_cb",
                "*_curl_easy_setopt_err_opensocket_cb",
                "*_curl_easy_setopt_err_progress_cb",
                "*_curl_easy_setopt_err_debug_cb",
                "*_curl_easy_setopt_err_ssl_ctx_cb",
                "*_curl_easy_setopt_err_conv_cb",
                "*_curl_easy_setopt_err_seek_cb",
                "*_curl_easy_setopt_err_cb_data",
                "*_curl_easy_setopt_err_error_buffer",
                "*_curl_easy_setopt_err_FILE",
                "*_curl_easy_setopt_err_postfields",
                "*_curl_easy_setopt_err_curl_httpost",
                "*_curl_easy_setopt_err_curl_slist",
                "*_curl_easy_setopt_err_CURLSH",
                "*_curl_easy_getinfo_err_string",
                "*_curl_easy_getinfo_err_long",
                "*_curl_easy_getinfo_err_double",
                "*_curl_easy_getinfo_err_curl_slist",
                "(_curl_easy_setopt_err_long",
                "(_curl_easy_setopt_err_curl_off_t",
                "(_curl_easy_setopt_err_string",
                "(_curl_easy_setopt_err_write_callback",
                "(_curl_easy_setopt_err_read_cb",
                "(_curl_easy_setopt_err_ioctl_cb",
                "(_curl_easy_setopt_err_sockopt_cb",
                "(_curl_easy_setopt_err_opensocket_cb",
                "(_curl_easy_setopt_err_progress_cb",
                "(_curl_easy_setopt_err_debug_cb",
                "(_curl_easy_setopt_err_ssl_ctx_cb",
                "(_curl_easy_setopt_err_conv_cb",
                "(_curl_easy_setopt_err_seek_cb",
                "(_curl_easy_setopt_err_cb_data",
                "(_curl_easy_setopt_err_error_buffer",
                "(_curl_easy_setopt_err_FILE",
                "(_curl_easy_setopt_err_postfields",
                "(_curl_easy_setopt_err_curl_httpost",
                "(_curl_easy_setopt_err_curl_slist",
                "(_curl_easy_setopt_err_CURLSH",
                "(_curl_easy_getinfo_err_string",
                "(_curl_easy_getinfo_err_long",
                "(_curl_easy_getinfo_err_double",
                "(_curl_easy_getinfo_err_curl_slist",
                ")_curl_easy_setopt_err_long",
                ")_curl_easy_setopt_err_curl_off_t",
                ")_curl_easy_setopt_err_string",
                ")_curl_easy_setopt_err_write_callback",
                ")_curl_easy_setopt_err_read_cb",
                ")_curl_easy_setopt_err_ioctl_cb",
                ")_curl_easy_setopt_err_sockopt_cb",
                ")_curl_easy_setopt_err_opensocket_cb",
                ")_curl_easy_setopt_err_progress_cb",
                ")_curl_easy_setopt_err_debug_cb",
                ")_curl_easy_setopt_err_ssl_ctx_cb",
                ")_curl_easy_setopt_err_conv_cb",
                ")_curl_easy_setopt_err_seek_cb",
                ")_curl_easy_setopt_err_cb_data",
                ")_curl_easy_setopt_err_error_buffer",
                ")_curl_easy_setopt_err_FILE",
                ")_curl_easy_setopt_err_postfields",
                ")_curl_easy_setopt_err_curl_httpost",
                ")_curl_easy_setopt_err_curl_slist",
                ")_curl_easy_setopt_err_CURLSH",
                ")_curl_easy_getinfo_err_string",
                ")_curl_easy_getinfo_err_long",
                ")_curl_easy_getinfo_err_double",
                ")_curl_easy_getinfo_err_curl_slist",
                "/usr/x86_64-w64-mingw32/mingw/include/curl",
                "curl.h",
                "_curl_opt",
                "curl_err_str",
                "wgetnstrP",
                "recruit_curl",
                "pop_curl_entry3",
                "pop_curl_entry2",
                "pop_curl_entry",
                "push_curl_entry",
                "my_curl_timer_set",
                "save_curl_socket",
                "reap_curl",
                "curl_debug_cb",
                "__imp_curl_easy_cleanup",
                "__imp_curl_slist_append",
                "__imp_curl_multi_add_handle",
                "__imp_curl_easy_setopt",
                "__imp_curl_multi_init",
                "_head_libcurl_4_dll",
                "__imp_curl_multi_remove_handle",
                "__imp_curl_multi_fdset",
                "__imp_wgetch",
                "__imp_curl_easy_perform",
                "__imp_curl_multi_perform",
                "__imp_curl_multi_info_read",
                "__imp_curl_multi_setopt",
                "__imp_curl_version_info",
                "__imp_wgetnstr",
                "__imp_curl_global_cleanup",
                "__imp_curl_easy_reset",
                "__imp_curl_multi_cleanup",
                "libcurl_4_dll_iname",
                "__imp_curl_slist_free_all",
                "__imp_curl_easy_init",
                "__imp_curl_global_init",
                "__imp_curl_easy_getinfo"
            ],
            "String too long": [
                "000000800000000000000000000000000000000000000000000000000000000000000000000000000000000080020000",
                "4679ba4ec99876bf4bfe086082b400254df6c356451471139a3afa71e48f544a000000000000000000000000000000000000000087320b1a1426674f2fa722ce",
                "o1o1o1o1o1o1o1o1oppppp1o1o1o1o1o1o1o1o1o1o1o1o1o1o1o1o1o1op1o1o1o1o1o1o1o1o1o1op1oo"
            ]
        },
        "ip": [
            "127.0.0.1"
        ],
        "url": [
            "https://",
            "http://%s:%s",
            "http://"
        ]
    },
    "time": "0:00:03.641804",
    "version": "6.0.3",
    "virustotal": {
        "positives": "",
        "total": ""
    },
    "yara_plugins": [
        {
            "packer_compiler_signatures.yar": "IsPE64"
        },
        {
            "packer_compiler_signatures.yar": "IsConsole"
        },
        {
            "packer_compiler_signatures.yar": "HasOverlay"
        },
        {
            "packer_compiler_signatures.yar": "MinGW_1"
        },
        {
            "crypto_signatures.yar": "Big_Numbers4"
        }
    ]
}
