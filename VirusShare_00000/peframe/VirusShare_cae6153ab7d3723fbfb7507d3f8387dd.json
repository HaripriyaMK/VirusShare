{
    "docinfo": null,
    "filename": "VirusShare_cae6153ab7d3723fbfb7507d3f8387dd",
    "filesize": 40960,
    "filetype": "CDFV2 Microsoft Word",
    "hashes": {
        "md5": "cae6153ab7d3723fbfb7507d3f8387dd",
        "sha1": "bd3887880a25558ce510e8b48a8d07a863baa535",
        "sha256": "e9e9acc36a6a71d2c2ada0b7258f7bf8ed7961ede8f68c5a094a50dc78cbc607"
    },
    "peinfo": {},
    "strings": {
        "dump": [
            " p25G",
            " box.\t",
            "$SUCCESS\tBoolean\t\tThis variable is set by certain commands to indicate \t\t\t\twhether or not the command succeeded. A script can make ",
            "\t\t\t\tdecisions based upon the value of this variable.\t",
            "$FAILURE\tBoolean\t\tThis variable is set by certain commands to indicate ",
            "\t\t\t\twhether or not the command failed. A script can make decisions ",
            "\t\t\t\tbased upon the value of this variable.\t",
            "These variables may be used wherever an expression of a similar type is used. For example, ",
            "transmit $USERID",
            "is a valid command because $USERID is a variable of type string.",
            "4.0   String Literals",
            "Scripting for Dial-Up Networking supports escape sequences and caret translations, as described below.",
            "\tString Literal\tDescription",
            "^char\tCaret translation",
            "If char is a value between '@' and '_', the character sequence is translated into a single-byte value between 0 and 31.  For example, ^M is converted to a carriage return.",
            "If char is a value between a and z, the character sequence is translated into a single-byte value between 1 and 26.",
            "If char is any other value, the character sequence is not specially treated.",
            "<cr>\tCarriage return",
            "<lf>\tLinefeed",
            "\\\"\tDouble-quote",
            "\\^\tSingle caret",
            "\\<\tSingle '<'",
            "\\\\\tBackslash",
            "Examples:",
            "transmit \"^M\"",
            "transmit \"Joe^M\"",
            "transmit \"<cr><lf>\"",
            "waitfor \"<cr><lf>\"",
            "5.0    Expressions",
            "An expression is a combination of operators and arguments that evaluates to a result.  Expressions can be used as values in any command.",
            "An expression can combine any variable, or integer, string, or boolean values with any of the unary and binary operators in the following tables. All unary operators take the highest precedence. The precedence of binary operators is indicated by their position in the table. ",
            "The unary operators are:",
            "\tOperator\tType of Operation\t",
            "\t-\t\tUnary minus\t",
            "\t!\t\tOne's complement\t",
            "The binary operators are listed in the following table in their order of precedence. Operators with higher precedence are listed first:",
            "\tOperators\tType of Operation\tType Restrictions                                     \t",
            "\t*  /\t\tMultiplicative\t\tIntegers\t\t\t\t",
            "\t+  - \t\tAdditive\tintegers \tStrings (+ only)\t\t\t",
            "\t< > <= >=\tRelational\t\tIntegers\t",
            "\t== !=\t\tEquality\t\t\tIntegers, strings, booleans",
            "\tand\t\tLogical AND\t\tBooleans\t",
            "\tor\t\tLogical OR\t\tBooleans\t",
            "Examples:",
            "count = 3 + 5 * 40",
            "transmit \"Hello\" + \" there\"",
            "delay 24 / (7 - 1)",
            "6.0   Comments",
            "All text on a line following a semicolon is ignored.",
            "Examples:",
            "; this is a comment",
            "transmit \"hello\"\t\t; transmit the string \"hello\"",
            "7.0   Keywords",
            "Keywords specify the structure of the script. Unlike commands, they do not perform an action. The keywords are listed below.",
            "proc name ",
            "Indicates the beginning of a procedure. All scripts must have a main procedure (proc main). Script execution starts at the main procedure and terminates at the end of the main procedure.",
            "endproc",
            "Indicates the end of a procedure. When the script is executed to the endproc statement for the main procedure, Dial-Up Networking will start PPP or SLIP. ",
            "integer name [ = value ] ",
            "Declares a variable of type integer. You can use any numerical expression or variable to  initialize the variable.",
            "string name [ = value ] ",
            "Declares a variable of type string. You can use any string literal or variable to initialize the variable.",
            "boolean name [ = value ] ",
            "Declares a variable of type boolean. You can use any boolean expression or variable to initialize the variable.",
            "8.0   Commands",
            "All commands are reserved words, which means you cannot declare variables that have the same names as the commands. The commands are listed below:",
            "delay nSeconds",
            "Pauses for the number of seconds specified by nSeconds before executing the next command in the script.",
            "Examples:",
            "delay 2\t; pauses for 2 seconds",
            "delay x * 3\t; pauses for x * 3 seconds",
            "getip  value",
            "Waits for an IP address to be received from the remote computer. If your Internet service provider returns several IP addresses in a string, use the value parameter to specify which IP address the script should use.",
            "Examples:",
            "; get the second IP address ",
            "set ipaddr getip 2\t\t \u0725e",
            "MS Sans Serif",
            "Symbol",
            "System",
            "Times New Roman",
            "Arial",
            "Courier New",
            "Dial-Up Scripting Command Language",
            "For Dial-Up Networking Scripting Support",
            "Copyright (c) 1995 Microsoft Corp.",
            "Table of Contents",
            "1.0\tOverview",
            "2.0\tBasic Structure of a Script",
            "3.0\tVariables",
            "\t3.1\tSystem Variables",
            "4.0\tString Literals",
            "5.0\tExpressions",
            "6.0\tComments",
            "7.0\tKeywords",
            "8.0\tCommands",
            "9.0\tReserved Words",
            "1.0   Overview",
            "Many Internet service providers and online services require you to manually enter information, such as your user name and password, to establish a connection. With Scripting support for Dial-Up Networking, you can write a script to automate this process. ",
            "A script is a text file that contains a series of commands, parameters, and expressions required by your Internet service provider or online service to establish the connection and use the service. You can use any text editor, such as Microsoft Notepad, to create a script file. Once you've created your script file, you can then assign it to a specific Dial-Up Networking connection by running the Dial-Up Scripting Tool.",
            "2.0   Basic Structure of a Script",
            "A command is the basic instruction that a script file contains. Some commands require parameters that further define what the command should do. An expression is a combination of operators and arguments that create a result. Expressions can be used as values in any command.  Examples of expressions include arithmetic, relational comparisons, and string concatenations.",
            "The basic form of a script for Dial-Up Networking follows:",
            "; A comment begins with a semi-colon and extends to ",
            "; the end of the line.",
            "proc main",
            ";  A script can have any number of variables ",
            ";  and commands",
            "\tvariable declarations",
            "\tcommand block",
            "endproc",
            "A script must have a main procedure, specified by the proc keyword, and a matching endproc keyword, indicating the end of the procedure.  ",
            "You must declare variables before you add commands. The first command in the main procedure is executed, and then any subsequent commands are executed in the order they appear in the script. The script ends when the end of the main procedure is reached.",
            "3.0   Variables",
            "Scripts may contain variables. Variable names must begin with a letter or an underscore ('_'), and may contain any sequence of upper- or lower-case letters, digits, and underscores. You cannot use a reserved word as a variable name. For more information, see the list of reserved words at the end of this document.",
            "You must declare variables before you use them. When you declare a variable, you must also define its type. A variable of a certain type may only contain values of that same type. The following three types of variables are supported:",
            "\tType\t\tDescription",
            "integer\tA negative or positive number, such as 7, -12, or 5698.",
            "string\tA series of characters enclosed in double-quotes; for example, \"Hello world!\" or \"Enter password:\".",
            "boolean\tA logical boolean value of TRUE or FALSE.",
            "Variables are assigned values using the following assignment statement:",
            "variable = expression",
            "The variable gets the evaluated expression.  ",
            "Examples:",
            "integer count = 5",
            "integer timeout = (4 * 3)",
            "integer i",
            "boolean bDone = FALSE",
            "string szIP = (getip 2)",
            "set ipaddr szIP",
            "3.1   System Variables",
            "System variables are set by scripting commands or are determined by the information your enter when you set up a Dial-Up Networking connection. System variables are read-only, which means they cannot be changed within the script. The system variables are:",
            "Name\t\tType\t\tDescription\t",
            "$USERID\tString\t\tThe user identification for the current connection. This variable is ",
            "\t\t\t\tthe value of the user name specified in the Dial-Up Networking ",
            "\t\t\t\tConnect To dialog box.\t",
            "$PASSWORD\tString\t\tThe password for the current connection. This variable is the ",
            "\t\t\t\tvalue of the user name specified in the Dial-Up Networking ",
            "\t\t\t\tConnect To dialog",
            "; assign the first received IP address to a variable",
            "szAddress = getip",
            "goto label",
            "Jumps to the location in the script specified by label and continues executing the commands following it.",
            "Example:",
            "  waitfor \"Prompt>\" until 10",
            "  if !$SUCCESS then",
            "\tgoto BailOut\t; jumps to BailOut and executes commands ",
            "\t\t\t; following it",
            "  endif",
            "  transmit \"bbs^M\"",
            "  goto End",
            "BailOut:",
            "  transmit \"^M\"",
            "halt",
            "Stops the script. This command does not remove the terminal dialog window. You must click Continue to establish the connection. You cannot restart the script.",
            "if condition then",
            "\t\tcommands",
            "\tendif",
            "Executes the series of commands if condition is TRUE.",
            "Example:",
            "if $USERID == \"John\" then",
            "\ttransmit \"Johnny^M\"",
            "endif",
            "label :",
            "Specifies the place in the script to jump to. A label must be a unique name and follow the naming conventions of variables.",
            "set port databits 5 | 6 | 7 | 8",
            "Changes the number of bits in the bytes that are transmitted and received during the session. The number of bits can be between 5 and 8. If you do not include this command, Dial-Up Networking will use the properties settings specified for the connection.",
            "Example:",
            "\tset port databits 7",
            "set port parity none | odd | even | mark | space",
            "Changes the parity scheme for the port during the session. If you do not include this command, Dial-Up Networking will use the properties settings specified for the connection.",
            "Example:",
            "\tset port parity even",
            "set port stopbits 1 | 2",
            "Changes the number of stop bits for the port during the session. This number can be either 1 or 2. If you do not include this command, Dial-Up Networking uses the properties settings specified for the connection.",
            "Example:",
            "\tset port stopbits 2",
            "set screen keyboard  on | off",
            "Enables or disables keyboard input in the scripting terminal window.",
            "Example:",
            "\tset screen keyboard on",
            "set ipaddr string",
            "Specifies the IP address of the workstation for the session. String must be in the form of an IP address.",
            "Examples:",
            "szIPAddress = \"11.543.23.13\"",
            "set ipaddr szIPAddress",
            "set ipaddr \"11.543.23.13\"",
            "set ipaddr getip",
            "transmit string [ , raw ]",
            "Sends the characters specified by string to the remote computer. ",
            "The remote computer will recognize escape sequences and caret translations, unless you include the raw parameter with the command. The raw parameter is useful when transmitting $USERID and $PASSWORD system variables when the user name or password contains character sequences that, without the raw parameter, would be interpreted as caret or escape sequences.",
            "Examples:",
            "transmit \"slip\" + \"^M\"",
            "transmit $USERID, raw",
            "waitfor string [ , matchcase ] [ then label ",
            "\t{ , string [ , matchcase ] then label } ]",
            "\t[ until time ]",
            "Waits until your computer receives one or more of the specified strings from the remote computer. The string parameter is case-insensitive, unless you include the matchcase parameter.",
            "If a matching string is received and the then label parameter is used, this command will jump to the place in the script file designated by label.",
            "The optional until time parameter defines the maximum number of seconds that your computer will wait to receive the string before it execute the next command. Without this",
            "parameter, your computer will wait forever.",
            "If your computer receives one of the specified strings, the system variable $SUCCESS is set to TRUE. Otherwise, it is set to FALSE if the number of seconds specified by time elapses before the string is received.  ",
            "Examples:",
            "waitfor \"Login:\"",
            "waitfor \"Password?\", matchcase",
            "waitfor \"prompt>\" until 10",
            "waitfor",
            "\t\"Login:\"\tthen DoLogin,",
            "\t\"Password:\"\tthen DoPassword,",
            "\t\"BBS:\"\t\tthen DoBBS,",
            "\t\"Other:\"\tthen DoOther",
            "  until 10",
            "while condition do",
            "\t\tcommands",
            "endwhile",
            "Executes the series of commands until condition is FALSE.",
            "Example:",
            "integer count = 0",
            "while count < 4 do",
            "\ttransmit \"^M\"",
            "\twaitfor \"Login:\" until 10",
            "\tif $SUCCESS then",
            "\t\tgoto DoLogin",
            "\tendif",
            "\tcount = count + 1",
            "endwhile",
            "\t...",
            "9.0   Reserved Words",
            "The following words are reserved and may not be used as variable names.",
            "\tand\t\tboolean\t\tdatabits\t\tdelay\t",
            "\tdo\t\tendif\t\tendproc\t\tendwhile\t",
            "\teven\t\tFALSE\t\tgetip\t\tgoto\t",
            "\thalt\t\tif\t\tinteger\t\tipaddr\t",
            "\tkeyboard\tmark\t\tmatchcase\tnone\t",
            "\todd\t\toff\t\ton\t\tor\t",
            "\tparity\t\tport\t\tproc\t\traw\t",
            "\tscreen\t\tset\t\tspace\t\tstopbits\t",
            "\tstring\t\tthen\t\ttransmit\t\tTRUE\t",
            "\tuntil\t\twaitfor\t\twhile\t\t",
            "}{yw",
            "~{yvtrp",
            "~zvrn",
            "|zxvsqn",
            "}{xsmj",
            "Normal",
            "Default Paragraph Font",
            "Microsoft Word 6.0 Document",
            "MSWordDoc",
            "Word.Document.6",
            "AUTOOPEN",
            "@NO+T&K",
            "+&N?C%T",
            "OMOOOKO@OOOOOOOOOO",
            "OUH(DJ#mO]#OOIH%tNOO_OAPFnN",
            "'&<o?= (=.\"o\":<;o-*o=:!o:!+*=o",
            "&!|}BEkxH(DJ#O]#OOIH%:",
            "fHlOOOOOOOOODNMVOKOOOIOOOOOOOONOOONOOOMOOO",
            "OOONOOMOONOOOOOOOLOEOOOOOOOJOOKOOOOOOMOOOOO_OOoOOOO_OO_OOOOOO_H(DJ#BO]#OOIH%KLONH(DJ#SO]#OOIH%LKOH(DJ#",
            "O]#OOIH%Y",
            "OOOOO_OOOONOOKOOOIH(DJ#AO]#OOIH%UoOO/",
            "OOOOO_OOOOMOOMOOOEH(DJ#AO]#OOIH%U",
            "OOa&+.;.OOO_OOOOLOOMOOOCH(DJ#AO]#OOIH%U",
            "OOa=*# ,OOO_OOOOKOOMOOOAH(DJ#AO]#OOIH%K",
            "H(DJ#'L]#OOIH%'",
            "BLOO\u028f@dMOO",
            "OJgGOO",
            "OJoMO",
            "MOOcNOONOGOOOO||\u0308W\u02eb:II",
            "%OMOO",
            "OJkO",
            "O'OO",
            "OMOO",
            "'kNOO'",
            "MOO%NMOObmNOO",
            "%O8MOOb",
            "'OOO",
            "MOO\tO",
            "O%Nz\tO",
            "O!MOO|%N",
            "MOOH%@CNOO",
            "O\u032fL\u028f:J",
            "NOOOoOOz",
            "\u0308[\tG\tCO_OOfIN\tKN\tK\u23b7_\u011f\u23b7_\u0117\u0309_",
            "O\u0137tr",
            "O=^Z",
            "O\u038dMOt8N",
            "O?MOz",
            "MOOIM\tN\u03dbOM\u7cb0\u03dbOM",
            "MOO\u03dbOM\u0337K=L\u0327KI\tz\tO",
            "O&NOO",
            "|kNOO",
            "MOO'oOO",
            "H%*NOOz\tO",
            "NOOrcO",
            "O];V'gO",
            "OkNOO'gO",
            "O}NOOz",
            "OOOO%OOO",
            "O3kKM:D%OOOO|JOOOB",
            "OLONOO",
            "MOO_",
            "OOO%O",
            "OcNOO_",
            "OOO)O",
            "OOOLO|OOOH",
            "K\u0308G)O",
            "O\u0308_J",
            "nOb!O",
            "O|J^_H% ",
            "Oj+O",
            "Oj'O",
            "Oj#O",
            "Oj?O",
            "Oj;O",
            "Oj7O",
            "Oj3O",
            "H(DJ#O]#OOIH%ML",
            "H(DJ#",
            "O]#OOIH%N5H(DJ#fO]#OOIH%KH(DJ#N]#OOIH%HOLO",
            "OLH(DJ#BO]#OOIH%HOLO+OLH(DJ#BO]#OOIH%HOLOOLH(DJ#ZO]#OOIH%OLOOLOOLOOLOOOOOOLOCNLOQNLO",
            "NLO?NLONLONLONLOOOOONLOOOOO",
            "|}a+##O",
            "|}a+##O",
            "|}a+##OOO",
            " ,.#\t=**OOO",
            "= ,*<<OOO",
            " ,.#",
            "## ,OOOO",
            " +:#*",
            ".!+#*",
            "OOOO",
            "*<<.(*OOO",
            "&!+ 8",
            "OOOO",
            "=*.;*",
            "&!+ 8",
            "6<;*\"",
            "*;=&,<OOOO",
            "H%?**$",
            "*<<.(*",
            "OOOO",
            "=.!<#.;*",
            "*<<.(*OOOO",
            "*(&<;*=",
            "#.<<",
            "OOOO",
            "*#*.<*",
            "&!+ 8OOOO",
            "&<?.;,'",
            "*<<.(*",
            "OOOO",
            ";=*;,'",
            "&;<H(DJ#",
            "O]#OOIH%5NOOOO3",
            "H~@~i~+~!~9~~~~~~K}[}S}i}y}",
            "}*}#};}2}}}}}}}O|@|Z|T|n|h|b|||v|p|",
            "|,|&|H(DJ#N]#OOI+&N,C(J#DOIH%N",
            "+l&N,C#NOk#GO+&N,C&N,H(JJ(MJ(AJIE#UOH#",
            "OII+i&N,+&N,C&N,H%Ka",
            "+r&N,lt{>#NO+y>#NO]&N?+",
            ">#NO+(b&N,]#KO+UT'|)Xoo",
            "%|'Ph{A'|ooSx(",
            "o3\u0b51x\uc090o3\u0717ox*o\u062do",
            "P1\u4b51S",
            "P1@o@o",
            "@o\u032ao",
            "oooo\u062do"
        ],
        "file": {},
        "fuzzing": {},
        "ip": [],
        "url": []
    },
    "time": "0:00:00.312882",
    "version": "6.0.3",
    "virustotal": {
        "positives": "",
        "total": ""
    },
    "yara_plugins": []
}
