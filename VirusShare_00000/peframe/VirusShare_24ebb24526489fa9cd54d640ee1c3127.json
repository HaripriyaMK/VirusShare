{
    "docinfo": {},
    "filename": "VirusShare_24ebb24526489fa9cd54d640ee1c3127",
    "filesize": 27128,
    "filetype": "ELF 32-bit LSB executable, Intel 80386, version 1 (FreeBSD), dynamically linked, interpreter /usr/libexec/ld-elf.so.1, for FreeBSD 4.7, stripped",
    "hashes": {
        "md5": "24ebb24526489fa9cd54d640ee1c3127",
        "sha1": "a66e4000c65fc0e22b67b3831d81e2bf4dafcdc4",
        "sha256": "2aee699877c05a3a41d310a44a7bb6d1ff88240341f123a5b7c8604b20b48952"
    },
    "peinfo": {},
    "strings": {
        "dump": [
            "/usr/libexec/ld-elf.so.1",
            "FreeBSD",
            "libstdc++.so.3",
            "_DYNAMIC",
            "memcpy",
            "_init",
            "__get_eh_context",
            "__sjthrow",
            "fprintf",
            "__deregister_frame_info",
            "fseek",
            "fread",
            "memset",
            "fclose",
            "strcmp",
            "__builtin_vec_new",
            "_fini",
            "atexit",
            "fwrite",
            "_GLOBAL_OFFSET_TABLE_",
            "__builtin_delete",
            "__terminate",
            "__builtin_new",
            "__register_frame_info",
            "libm.so.2",
            "libc.so.4",
            "chmod",
            "environ",
            "__progname",
            "memcmp",
            "sscanf",
            "fopen",
            "ftell",
            "stat",
            "rewind",
            "strlen",
            "_edata",
            "__bss_start",
            "_end",
            "WVS\u048du",
            "8/u\tH",
            "WVSk6",
            "UlWVSE",
            "Ef8u",
            "U\u010aE$tyE#E\u0105t",
            "U\tU\u030bE\u0103",
            "DE\u0103 t",
            "(E$t",
            "E\u0103@t\tE",
            "[E\tE\u030bE",
            "\tM\u0303}u",
            "E$8< u",
            "}tyE",
            "\"}@u",
            "E;Er",
            "UMMM\tMM",
            "EE\u03cdv",
            "E;Er",
            "B$UMMM\tMM",
            "EE\u03cdv",
            "M+MH",
            "e[^_U",
            "WVSE",
            " E\u0703}",
            "E\u05caE\u05cb}\u0608",
            "E\u02caE\u02cb}\u0308",
            "E}}}E;x",
            "}EEE}",
            "E}}}E;x",
            "E}$}EEE}",
            "E}}E+EEE",
            "h[^_",
            "WVSu",
            "e[^_",
            "WVS]",
            "t%EU",
            "u)E;C",
            "t3EP",
            "0EPx",
            "e[^_U$S]",
            "EPh ",
            ")EPS",
            "PEPh&",
            "EPH E",
            "E;Er",
            "tBEU",
            "t*EU",
            "E\ub089hS",
            "H09M|",
            "t=Ex",
            "t4EM",
            "r)EM@",
            "H09M|",
            "t1Ex",
            "t(EM",
            "U\\WVS]",
            "EuUC",
            "LuLC",
            "FuCC",
            "EE;C",
            "<1!<",
            "P09U|",
            "\u0189uEx",
            "tiEx",
            "t`EP",
            "uREP",
            "UEU@",
            "EUUH",
            "\u020bu1v$9Er",
            "EE;C",
            "REfx",
            "tWEfx",
            "REPh`",
            "<1!<",
            "uxEPS&",
            "EE;C",
            "tD=@",
            "EPEPh",
            "<1 <",
            "t'EPS",
            "PEPh",
            "<1 <",
            "EEPSN",
            "EE;C",
            "UEPS",
            "EE;C",
            "@uD=@",
            "EPEPh ",
            "<1 <",
            " t\tEE\tE\u03cdv",
            "fUEf=",
            "u<ES",
            "EEPS",
            "EEPS",
            "EE0tyE;C",
            "uY=@",
            "t'EPS.",
            "PEPh`",
            "<1 <",
            "EEEr}",
            "t'EPS",
            "PEPh",
            "<1\u07c9<",
            "<1@<",
            "t%j\th",
            "t'EPS",
            "PEPh",
            "E;Er",
            "E\u0389hS",
            "E;Er",
            "GtH=@",
            "t/EU",
            "MEE%",
            "u*EPSS",
            "u)EPS#",
            "r!=@",
            "@uS=@",
            "t'EPS%",
            "PEPh",
            "<1 <",
            "E;Er",
            "<1D<",
            "<1\u0749<",
            "EE}u",
            "eE;C",
            "AEEE",
            "e[^_",
            "WVS]",
            "\u040dPf:",
            "\u040dPf:t",
            "t1PPS$",
            "t*j\th",
            ";s\tC",
            "t1PPS",
            "PPh(",
            "EPhU",
            "ULWVS]",
            "EPhr",
            "u*=@",
            "E;Er",
            "E\u0389hS",
            "E;Er",
            "Gt,=@",
            "MEE%",
            "v+=@",
            "u*=@",
            "E;Er",
            "<1D<",
            "<1\u0749<",
            "EE\u0103}u",
            "eE;C",
            "v(=@",
            "@E\u0109EE;C",
            "e[^_",
            "WVS]",
            "EE;C",
            "t'EPS",
            "PEPh",
            ")\u0449M}",
            "PEP'",
            "EEEE%",
            "E$<u",
            "E$<pu",
            "U\u0580UE",
            "UEU\u0201",
            "E;Es",
            "A|\u01c5x",
            "E}O|\u01c5xEtv",
            "t;|u",
            "EpEtE",
            "tDpPS8",
            "PpPEPS",
            "PEPh",
            "pPS(",
            ")\u01c99E",
            "t@EPtPEPEPpPS",
            "PpPh ",
            " plpt",
            "l\ub750EPEPC",
            "phpU",
            "tDEPS",
            "PEPpPS",
            "PpPh",
            ")\u01c99E%",
            "tVpU",
            "tU)\u040b8",
            "9r;D%",
            "MtU)\u05c9}3v",
            "tJlPS",
            "PlP8PS",
            "P8Ph",
            " lPS",
            "U VS]",
            "P09U|",
            "\u0189uEx",
            "EUUH",
            "\u020bu1v$9Er",
            "u\tei",
            "u\te9",
            "u\te\t",
            "u1E@;E",
            "}(E\u030bE\u0309",
            "u1E@;E",
            "}(E\u030bE\u0309",
            "u1E@;E",
            "}(E\u030bE\u0309",
            "u1E@;E",
            "}(E\u030bE\u0309",
            "uYE@;E",
            "}PE\u030bE\u030d",
            "\u0409U\u0703EPhP",
            "u-E@;E",
            "}$E\u030bE\u0309",
            "Euhh",
            "u-E@;E",
            "}$E\u030bE\u0309",
            "EPEP",
            "t7E\u020b",
            "EPEP",
            "t7E\u020b",
            "tjEPh",
            "jj$j",
            "EPEP t7E\u020b",
            "t7E\u020b",
            "EPEP",
            "EPEP",
            "UE@RY",
            "E;Er",
            "M)9Er",
            "8EPEPE\u020bP",
            "}u\"j",
            "EPhm",
            "EPEPH",
            "EPEPEPEP",
            "t6E\u020b",
            "EPEP t7E\u020b",
            "(PEP\u837d",
            "REPr",
            "taEPh",
            "EPEP",
            "t4E\u020b",
            ")[^_",
            "\u0403;u[",
            "cant open input file",
            "cant create output file",
            "cant read file",
            "cant write file",
            "not enough memory",
            "bad file format",
            "error while disasm",
            "not enough free space in the target file",
            "snippet: loop/loopz/loopnz/jcxz are not supported yet",
            "internal error 1",
            "invalid hook offset",
            "not an opcode at hook offset",
            "no $ORIGINAL_BYTES$ signature within code snippet",
            "jmp/ret-alike opcode at hook offset",
            "internal error 2",
            "internal error 3",
            "internal error 4",
            "internal error 5",
            "internal error 6",
            "input file is too small",
            "[LABEL]",
            "%08X ",
            "%08X/.%08X ",
            "%s%s%s%s ",
            " %02X",
            "<%08X>",
            "[EOF]",
            "offs/va=%08X/.%08X sect=[%s] symbol=[%s]",
            ".got",
            ".got entry: marked next at offs/va=%08X/.%08X",
            "SUBROUTINE sign: marked next at offs/va=%08X/.%08X",
            "JMPTAB: marked next at offs/va=%08X/.%08X",
            "REL REF: marked next at offs/va=%08X/.%08X",
            "break: done",
            "NEXT at offs/va=%08X/.%08X",
            "$FreeBSD: ",
            "$NetBSD: ",
            "break: Exp$",
            "  %08X/.%08X  ",
            "break: disasm error",
            "quit: ERR_DISASM (offs=%08X,flag=%08X)",
            "break: rel out of range",
            "break: ptr into the middle of the opcode",
            "REL: marked next at offs/va=%08X/.%08X",
            "break: STOP",
            "break: nxt out of range",
            "break: already code",
            "padd: %08X/.%08X  len=%d",
            "$NetBSD:  ",
            "Exp$: %08X/.%08X  len=%d",
            "isl.sz",
            " %4d",
            "isl.# ",
            "total free space = %d bytes",
            "  %08X  ",
            "quit: ERR_DISASM",
            "break: eof",
            "$ORIGINAL_BYTES$",
            "orig opcode at %08X/.%08X",
            "link  : %08X/.%08X  jmp_to=%08X/.%08X",
            "opcode: %08X/.%08X  snippet=%08X new_op_len=%d free_len=%d rel_to=%08X",
            "jmpback: %08X/.%08X jmpto=%08X/.%08X",
            "fixjmp: %08X/.%08X link_to=%08X/.%08X",
            "syntax:",
            "  INFELF [option(s)] infile",
            "disasm options:",
            "  -relref-            dont search for relative references",
            "  -jmptab-            dont search for jmp tables",
            "  -func-              dont search for push ebp/mov ebp, esp",
            "  -sym-               dont process symbols",
            "  -got-               dont process .got section",
            "inject options:",
            "  -snippet infile     inject code snippet (see readme)",
            "  -hookaddr <offset|.va>  hook at specified address, or",
            "  -hookentry          hook at entrypoint, or",
            "  -hookfunc Func      hook Func() (if present in symbols), or",
            "  -hooksign B81234... hook by hex signature",
            "  -nop-               dont remove NOP's in the snippet",
            "  -bf                 1st fill bigger islands",
            "output:",
            "  -dump               debug printf while disasm",
            "  -outmap mapfile     disasm result: replace processed code with $",
            "  -outtext textfile   write result into textfile",
            "  -out outfile        write result into outfile",
            "INFELF v1.02 -- Code Snippet Island Injector for ELF files -- (x) 2002 Z0MBiE",
            "compilation error: structure alignment must be 1",
            "-dump",
            "-relref-",
            "-jmptab-",
            "-func-",
            "-sym-",
            "-got-",
            "-nop-",
            "-outmap",
            "-outtext",
            "-out",
            "-snippet",
            "-hookaddr",
            "-hookentry",
            "-hookfunc",
            "-hooksign",
            "ERROR: no memory",
            "+ reading source %s",
            "ERROR: Load() = %s",
            "+ disassembling",
            "ERROR: DisasmELF() = %s",
            "+ writing map %s",
            "ERROR: Save() = %s",
            "+ analyzing",
            "ERROR: Analyze() = %s",
            "%02X",
            "ERROR: invalid or not specified hook offset",
            "+ reading code snippet %s",
            "+ injecting (at offset %08X)",
            "ERROR: Inject() = %s",
            "+ writing destination %s",
            "+ writing text %s",
            "ERROR: SaveText() = %s",
            "GCC: (GNU) c 2.95.4 20020320 [FreeBSD]",
            "GCC: (GNU) c 2.95.4 20020320 [FreeBSD]",
            "GCC: (GNU) cplusplus 2.95.4 20020320 [FreeBSD]",
            "GCC: (GNU) c 2.95.4 20020320 [FreeBSD]",
            "01.01",
            "01.01",
            "01.01",
            "01.01",
            ".shstrtab",
            ".interp",
            ".note.ABI-tag",
            ".hash",
            ".dynsym",
            ".dynstr",
            ".rel.plt",
            ".init",
            ".text",
            ".fini",
            ".rodata",
            ".data",
            ".eh_frame",
            ".dynamic",
            ".ctors",
            ".dtors",
            ".got",
            ".bss",
            ".comment",
            ".note"
        ],
        "file": {},
        "fuzzing": {},
        "ip": [],
        "url": []
    },
    "time": "0:00:00.268352",
    "version": "6.0.3",
    "virustotal": {
        "positives": "",
        "total": ""
    },
    "yara_plugins": []
}
