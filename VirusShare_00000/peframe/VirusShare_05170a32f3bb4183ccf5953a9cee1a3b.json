{
    "docinfo": {
        "attributes": [],
        "behavior": {},
        "macro": "[script]\nn0=; Scan de puertos usando una Wingate\nn1=alias wgoob {\nn2=  if $1 != $null { set %WGgate $1 } | if $2 != $null { set %wgoob $2 } | if $3 != $null { set %wgpt $3 }\nn3=  if ($window(@WGscan).state != normal) { \nn4=    cvent 370 150 | window -k @WGscan %vent.x %vent.y %vent.w %vent.h @wgmenu\nn5=    wgdat\nn6=  }\nn7=  if $1 == $null halt\nn8=  sockclose wgoob* | sockopen wgoob %WGgate 23\nn9=  echo @wgscan \u00030- | aline @wgscan \u00034 $str(-,150)\nn10=  titlebar @WGscan %WGgate >> %wgoob ( %wgpt )\nn11=}\nn12=\nn13=alias wgdat {\nn14=  lsombra 8 2 Scanner de puertos a trav\ufffds de \u00037WinGate | echo @wgscan %texto\nn15=  echo @wgscan \u00031 WinGate IP:\u0002 %wggate | echo @wgscan \u00031 Objetivo IP:\u0002 %wgoob | echo @wgscan \u00030- | echo @wgscan \u00030-\nn16=}\nn17=\nn18=on 1:sockopen:wgoob: {\nn19=  if $sockerr > 0 { echo 4 @wgscan \u0002ERROR \u000312\u0002 No se puede conectar. | return }\nn20=  sockwrite -tn wgoob %wgoob %wgpt\nn21=  echo @wgscan \u00034\u0002>>>>>>\u000312\u0002 $sock($sockname,1).ip \u00034>>\u00031\u0002 %wgoob \u0002\u000312( %wgpt )\nn22=}\nn23=\nn24=on 1:sockread:wgoob: {\nn25=  sockread %tnet \nn26=  echo @wgscan \u0002\u00034>\u00032\u0002 %tnet\nn27=  if (..connected isin %tnet) { echo 12 @wgscan >>>> Conexi\ufffdn realizada. Puerto\u00034\u0002 %wgpt \u000312\u0002abierto. | unset %tnet | sockclose $sockname | halt }\nn28=  if (refused isin %tnet) || (unreachable isin %tnet) { echo 12 @wgscan >>>> Conexi\ufffdn rechazada. Puerto \u0002 %wgpt \u0002cerrado. | unset %tnet | sockclose $sockname | halt }\nn29=  if (out isin %tnet) { echo 12 @wgscan >>>>\u0002 %wgoob \u0002no responde. | unset %tnet | sockclose $sockname | halt }\nn30=}\nn31=\nn32=on 1:sockclose:wgoob: echo 6 @wgscan \u0002Conexi\ufffdn cerrada\nn33=\nn34=on 1:close:@wgscan: echo 12 -se \u0002WinGate Scan\u0002 cerrado | .unload -rs wgscan.ini\nn35=\nn36=menu @wgmenu {\nn37=  dclick: wgoob %WGgate %wgoob %wgpt\nn38=  WinGate ( %WGgate )\nn39=  .nueva: set %WGgate $$?=\" WinGate IP ?\" | klista %WGgate %wglista | set %wglista $result | wgdat\nn40=  .-\nn41=  .$gettok(%wglista,1,32): set %WGgate $gettok(%wglista,1,32) | wgdat\nn42=  .$gettok(%wglista,2,32): set %WGgate $gettok(%wglista,2,32) | wgdat\nn43=  .$gettok(%wglista,3,32): set %WGgate $gettok(%wglista,3,32) | wgdat\nn44=  .$gettok(%wglista,4,32): set %WGgate $gettok(%wglista,4,32) | wgdat\nn45=  .$gettok(%wglista,5,32): set %WGgate $gettok(%wglista,5,32) | wgdat\nn46=  .$gettok(%wglista,6,32): set %WGgate $gettok(%wglista,6,32) | wgdat\nn47=  .$gettok(%wglista,7,32): set %WGgate $gettok(%wglista,7,32) | wgdat\nn48=  .$gettok(%wglista,8,32): set %WGgate $gettok(%wglista,8,32) | wgdat\nn49=  comprobar WinGate: iping %WGgate WinGate\nn50=  buscar WinGates: sockclose PTAB* | set %canal #$$?=\"Canal ?\" | set %ptaca 1080 | .enable #ptacanal | ptabw | who %canal\nn51=  lista WinGates: cargalwg\nn52=  localizar nicks: set %hip %WGgate | .enable #buscahost | dns %hip | unset %hip | .timerBUNUKE 1 60 .disable #buscahost\nn53=  -\nn54=  comprobar puertos\nn55=  .puerto ?: set %wgpt $$?=\"Puerto ?\" | wgoob %WGgate %wgoob %wgpt\nn56=  .-\nn57=  .21 ( ftp ): wgoob %WGgate %wgoob 21\nn58=  .23 ( telnet ): wgoob %WGgate %wgoob 23\nn59=  .25 ( smtp ): wgoob %WGgate %wgoob 25\nn60=  .59 ( dcc ip ): wgoob %WGgate %wgoob 59\nn61=  .79 ( finger ): wgoob %WGgate %wgoob 79\nn62=  .80 ( http ): wgoob %WGgate %wgoob 80\nn63=  .110 ( pop3 ): wgoob %WGgate %wgoob 110\nn64=  .113 ( identd ): wgoob %WGgate %wgoob 113\nn65=  .139 ( netbios ): wgoob %WGgate %wgoob 139\nn66=  .1080 ( wingate ): wgoob %WGgate %wgoob 1080\nn67=  .6667 ( irc server ): wgoob %WGgate %wgoob 6667\nn68=  .8080 ( proxy http ): wgoob %WGgate %wgoob 8080\nn69=  .12345 ( netBus ): wgoob %WGgate %wgoob 12345\nn70=  -\nn71=  objetivo ( %wgoob ): set %wgoob $$?=\" IP a escanear ?\" | wgdat\nn72=  obtener de nick: ipa WGSCAN $$?=\"Nick ?\"\nn73=}"
    },
    "filename": "VirusShare_05170a32f3bb4183ccf5953a9cee1a3b",
    "filesize": 3729,
    "filetype": "data",
    "hashes": {
        "md5": "05170a32f3bb4183ccf5953a9cee1a3b",
        "sha1": "cad90d4dd249ae3902e95c726ed108e03894cca8",
        "sha256": "2ba55ebb7dd0823b58cdcf2788666948207a430027cb5c49dcac1e18adaff54a"
    },
    "peinfo": {},
    "strings": {
        "dump": [
            "[script]",
            "n0=; Scan de puertos usando una Wingate",
            "n1=alias wgoob {",
            "n2=  if $1 != $null { set %WGgate $1 } | if $2 != $null { set %wgoob $2 } | if $3 != $null { set %wgpt $3 }",
            "n3=  if ($window(@WGscan).state != normal) { ",
            "n4=    cvent 370 150 | window -k @WGscan %vent.x %vent.y %vent.w %vent.h @wgmenu",
            "n5=    wgdat",
            "n6=  }",
            "n7=  if $1 == $null halt",
            "n8=  sockclose wgoob* | sockopen wgoob %WGgate 23",
            "n9=  echo @wgscan ",
            "0- | aline @wgscan ",
            "4 $str(-,150)",
            "n10=  titlebar @WGscan %WGgate >> %wgoob ( %wgpt )",
            "n11=}",
            "n12=",
            "n13=alias wgdat {",
            "n14=  lsombra 8 2 Scanner de puertos a travs de ",
            "7WinGate | echo @wgscan %texto",
            "n15=  echo @wgscan ",
            "1 WinGate IP:",
            " %wggate | echo @wgscan ",
            "1 Objetivo IP:",
            " %wgoob | echo @wgscan ",
            "0- | echo @wgscan ",
            "n16=}",
            "n17=",
            "n18=on 1:sockopen:wgoob: {",
            "n19=  if $sockerr > 0 { echo 4 @wgscan ",
            "ERROR ",
            " No se puede conectar. | return }",
            "n20=  sockwrite -tn wgoob %wgoob %wgpt",
            "n21=  echo @wgscan ",
            ">>>>>>",
            " $sock($sockname,1).ip ",
            " %wgoob ",
            "12( %wgpt )",
            "n22=}",
            "n23=",
            "n24=on 1:sockread:wgoob: {",
            "n25=  sockread %tnet ",
            "n26=  echo @wgscan ",
            " %tnet",
            "n27=  if (..connected isin %tnet) { echo 12 @wgscan >>>> Conexin realizada. Puerto",
            " %wgpt ",
            "abierto. | unset %tnet | sockclose $sockname | halt }",
            "n28=  if (refused isin %tnet) || (unreachable isin %tnet) { echo 12 @wgscan >>>> Conexin rechazada. Puerto ",
            " %wgpt ",
            "cerrado. | unset %tnet | sockclose $sockname | halt }",
            "n29=  if (out isin %tnet) { echo 12 @wgscan >>>>",
            " %wgoob ",
            "no responde. | unset %tnet | sockclose $sockname | halt }",
            "n30=}",
            "n31=",
            "n32=on 1:sockclose:wgoob: echo 6 @wgscan ",
            "Conexin cerrada",
            "n33=",
            "n34=on 1:close:@wgscan: echo 12 -se ",
            "WinGate Scan",
            " cerrado | .unload -rs wgscan.ini",
            "n35=",
            "n36=menu @wgmenu {",
            "n37=  dclick: wgoob %WGgate %wgoob %wgpt",
            "n38=  WinGate ( %WGgate )",
            "n39=  .nueva: set %WGgate $$?=\" WinGate IP ?\" | klista %WGgate %wglista | set %wglista $result | wgdat",
            "n40=  .-",
            "n41=  .$gettok(%wglista,1,32): set %WGgate $gettok(%wglista,1,32) | wgdat",
            "n42=  .$gettok(%wglista,2,32): set %WGgate $gettok(%wglista,2,32) | wgdat",
            "n43=  .$gettok(%wglista,3,32): set %WGgate $gettok(%wglista,3,32) | wgdat",
            "n44=  .$gettok(%wglista,4,32): set %WGgate $gettok(%wglista,4,32) | wgdat",
            "n45=  .$gettok(%wglista,5,32): set %WGgate $gettok(%wglista,5,32) | wgdat",
            "n46=  .$gettok(%wglista,6,32): set %WGgate $gettok(%wglista,6,32) | wgdat",
            "n47=  .$gettok(%wglista,7,32): set %WGgate $gettok(%wglista,7,32) | wgdat",
            "n48=  .$gettok(%wglista,8,32): set %WGgate $gettok(%wglista,8,32) | wgdat",
            "n49=  comprobar WinGate: iping %WGgate WinGate",
            "n50=  buscar WinGates: sockclose PTAB* | set %canal #$$?=\"Canal ?\" | set %ptaca 1080 | .enable #ptacanal | ptabw | who %canal",
            "n51=  lista WinGates: cargalwg",
            "n52=  localizar nicks: set %hip %WGgate | .enable #buscahost | dns %hip | unset %hip | .timerBUNUKE 1 60 .disable #buscahost",
            "n53=  -",
            "n54=  comprobar puertos",
            "n55=  .puerto ?: set %wgpt $$?=\"Puerto ?\" | wgoob %WGgate %wgoob %wgpt",
            "n56=  .-",
            "n57=  .21 ( ftp ): wgoob %WGgate %wgoob 21",
            "n58=  .23 ( telnet ): wgoob %WGgate %wgoob 23",
            "n59=  .25 ( smtp ): wgoob %WGgate %wgoob 25",
            "n60=  .59 ( dcc ip ): wgoob %WGgate %wgoob 59",
            "n61=  .79 ( finger ): wgoob %WGgate %wgoob 79",
            "n62=  .80 ( http ): wgoob %WGgate %wgoob 80",
            "n63=  .110 ( pop3 ): wgoob %WGgate %wgoob 110",
            "n64=  .113 ( identd ): wgoob %WGgate %wgoob 113",
            "n65=  .139 ( netbios ): wgoob %WGgate %wgoob 139",
            "n66=  .1080 ( wingate ): wgoob %WGgate %wgoob 1080",
            "n67=  .6667 ( irc server ): wgoob %WGgate %wgoob 6667",
            "n68=  .8080 ( proxy http ): wgoob %WGgate %wgoob 8080",
            "n69=  .12345 ( netBus ): wgoob %WGgate %wgoob 12345",
            "n70=  -",
            "n71=  objetivo ( %wgoob ): set %wgoob $$?=\" IP a escanear ?\" | wgdat",
            "n72=  obtener de nick: ipa WGSCAN $$?=\"Nick ?\"",
            "n73=}"
        ],
        "file": {},
        "fuzzing": {},
        "ip": [],
        "url": []
    },
    "time": "0:00:00.358334",
    "version": "6.0.3",
    "virustotal": {
        "positives": "",
        "total": ""
    },
    "yara_plugins": []
}
